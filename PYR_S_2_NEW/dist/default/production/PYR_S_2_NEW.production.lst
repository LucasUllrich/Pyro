

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 18 22:06:19 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  000A6A                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _p_status
    49  000A6A  30                 	db	48
    50  0000                     _ANSELA	set	3896
    51  0000                     _ANSELB	set	3897
    52  0000                     _ANSELC	set	3898
    53  0000                     _ANSELD	set	3899
    54  0000                     _ANSELE	set	3900
    55  0000                     _CCPTMRS0bits	set	3913
    56  0000                     _VREFCON0	set	3906
    57  0000                     _ADCON0	set	4034
    58  0000                     _ADCON0bits	set	4034
    59  0000                     _ADCON1	set	4033
    60  0000                     _ADCON2	set	4032
    61  0000                     _ADRESH	set	4036
    62  0000                     _BAUDCON1bits	set	4024
    63  0000                     _CCP1CON	set	4029
    64  0000                     _CCPR1H	set	4031
    65  0000                     _CCPR1L	set	4030
    66  0000                     _INTCONbits	set	4082
    67  0000                     _OSCCON	set	4051
    68  0000                     _PIE1bits	set	3997
    69  0000                     _PIR1bits	set	3998
    70  0000                     _PORTA	set	3968
    71  0000                     _PORTAbits	set	3968
    72  0000                     _PORTB	set	3969
    73  0000                     _PORTBbits	set	3969
    74  0000                     _PORTC	set	3970
    75  0000                     _PORTCbits	set	3970
    76  0000                     _PORTD	set	3971
    77  0000                     _PORTDbits	set	3971
    78  0000                     _PORTE	set	3972
    79  0000                     _PORTEbits	set	3972
    80  0000                     _RCREG1	set	4014
    81  0000                     _RCSTA1bits	set	4011
    82  0000                     _SPBRG1	set	4015
    83  0000                     _T1CON	set	4045
    84  0000                     _T1CONbits	set	4045
    85  0000                     _TMR1H	set	4047
    86  0000                     _TMR1L	set	4046
    87  0000                     _TRISA	set	3986
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISC	set	3988
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISE	set	3990
    93  0000                     _TXREG1	set	4013
    94  0000                     _TXSTA1bits	set	4012
    95                           
    96                           ; #config settings
    97  0000                     
    98                           	psect	cinit
    99  0008C8                     __pcinit:
   100                           	opt stack 0
   101  0008C8                     start_initialization:
   102                           	opt stack 0
   103  0008C8                     __initialization:
   104                           	opt stack 0
   105                           
   106                           ; Clear objects allocated to BANK0 (10 bytes)
   107  0008C8  EE00  F060         	lfsr	0,__pbssBANK0
   108  0008CC  0E0A               	movlw	10
   109  0008CE                     clear_0:
   110  0008CE  6AEE               	clrf	postinc0,c
   111  0008D0  06E8               	decf	wreg,f,c
   112  0008D2  E1FD               	bnz	clear_0
   113                           
   114                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   115  0008D4  6A45               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   116                           
   117                           ; Clear objects allocated to COMRAM (5 bytes)
   118  0008D6  6A44               	clrf	(__pbssCOMRAM+4)& (0+255),c
   119  0008D8  6A43               	clrf	(__pbssCOMRAM+3)& (0+255),c
   120  0008DA  6A42               	clrf	(__pbssCOMRAM+2)& (0+255),c
   121  0008DC  6A41               	clrf	(__pbssCOMRAM+1)& (0+255),c
   122  0008DE  6A40               	clrf	__pbssCOMRAM& (0+255),c
   123                           
   124                           ; Initialize objects allocated to COMRAM (1 bytes)
   125                           ; load TBLPTR registers with __pidataCOMRAM
   126  0008E0  0E6A               	movlw	low __pidataCOMRAM
   127  0008E2  6EF6               	movwf	tblptrl,c
   128  0008E4  0E0A               	movlw	high __pidataCOMRAM
   129  0008E6  6EF7               	movwf	tblptrh,c
   130  0008E8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   131  0008EA  6EF8               	movwf	tblptru,c
   132  0008EC  0009               	tblrd		*+	;fetch initializer
   133  0008EE  CFF5 F046          	movff	tablat,__pdataCOMRAM
   134  0008F2                     end_of_initialization:
   135                           	opt stack 0
   136  0008F2                     __end_of__initialization:
   137                           	opt stack 0
   138  0008F2  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   139  0008F4  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   140  0008F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   141  0008F8  6EF8               	movwf	tblptru,c
   142  0008FA  0100               	movlb	0
   143  0008FC  EF21  F005         	goto	_main	;jump to C main() function
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           
   151                           	psect	bitbssCOMRAM
   152  000228                     __pbitbssCOMRAM:
   153                           	opt stack 0
   154  000228                     _overrun:
   155                           	opt stack 0
   156  000228                     	ds	1
   157  000229                     _slave_addressed:
   158                           	opt stack 0
   159  000229                     	ds	1
   160                           tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           tblptrl	equ	0xFF6
   163                           tablat	equ	0xFF5
   164                           postinc0	equ	0xFEE
   165                           wreg	equ	0xFE8
   166                           
   167                           	psect	bssCOMRAM
   168  000040                     __pbssCOMRAM:
   169                           	opt stack 0
   170  000040                     _received:
   171                           	opt stack 0
   172  000040                     	ds	4
   173  000044                     _receive_counter:
   174                           	opt stack 0
   175  000044                     	ds	1
   176                           tblptru	equ	0xFF8
   177                           tblptrh	equ	0xFF7
   178                           tblptrl	equ	0xFF6
   179                           tablat	equ	0xFF5
   180                           postinc0	equ	0xFEE
   181                           wreg	equ	0xFE8
   182                           
   183                           	psect	dataCOMRAM
   184  000046                     __pdataCOMRAM:
   185                           	opt stack 0
   186  000046                     _p_status:
   187                           	opt stack 0
   188  000046                     	ds	1
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196                           	psect	bssBANK0
   197  000060                     __pbssBANK0:
   198                           	opt stack 0
   199  000060                     _Marker:
   200                           	opt stack 0
   201  000060                     	ds	10
   202                           tblptru	equ	0xFF8
   203                           tblptrh	equ	0xFF7
   204                           tblptrl	equ	0xFF6
   205                           tablat	equ	0xFF5
   206                           postinc0	equ	0xFEE
   207                           wreg	equ	0xFE8
   208                           
   209                           	psect	cstackBANK0
   210  00006A                     __pcstackBANK0:
   211                           	opt stack 0
   212  00006A                     InitVar@c:
   213                           	opt stack 0
   214  00006A                     Ignite_Port@ignite_number:
   215                           	opt stack 0
   216  00006A                     Disable_Port@disable_number:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x0
   220  00006A                     	ds	1
   221  00006B                     
   222                           ; 0 bytes @ 0x1
   223  00006B                     	ds	1
   224  00006C                     Check_Ignition@c:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0x2
   228  00006C                     	ds	1
   229  00006D                     tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236                           ; 0 bytes @ 0x3
   237                           
   238                           	psect	cstackCOMRAM
   239  000001                     __pcstackCOMRAM:
   240                           	opt stack 0
   241  000001                     ?___ftpack:
   242                           	opt stack 0
   243  000001                     Transmit@operation:
   244                           	opt stack 0
   245  000001                     Receive_Dump@dump:
   246                           	opt stack 0
   247  000001                     ___ftpack@arg:
   248                           	opt stack 0
   249  000001                     ___ftge@ff1:
   250                           	opt stack 0
   251                           
   252                           ; 3 bytes @ 0x0
   253  000001                     	ds	1
   254  000002                     Transmit@port:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x1
   258  000002                     	ds	1
   259  000003                     Transmit@con_status:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x2
   263  000003                     	ds	1
   264  000004                     Transmit@receiver:
   265                           	opt stack 0
   266  000004                     ___ftpack@exp:
   267                           	opt stack 0
   268  000004                     ___ftge@ff2:
   269                           	opt stack 0
   270                           
   271                           ; 3 bytes @ 0x3
   272  000004                     	ds	1
   273  000005                     ___ftpack@sign:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x4
   277  000005                     	ds	1
   278  000006                     ??___ftpack:
   279                           
   280                           ; 0 bytes @ 0x5
   281  000006                     	ds	1
   282  000007                     ??___ftge:
   283                           
   284                           ; 0 bytes @ 0x6
   285  000007                     	ds	2
   286  000009                     ?___lbtoft:
   287                           	opt stack 0
   288                           
   289                           ; 3 bytes @ 0x8
   290  000009                     	ds	3
   291  00000C                     ___lbtoft@c:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0xB
   295  00000C                     	ds	1
   296  00000D                     ?___ftmul:
   297                           	opt stack 0
   298  00000D                     ___ftmul@f1:
   299                           	opt stack 0
   300                           
   301                           ; 3 bytes @ 0xC
   302  00000D                     	ds	3
   303  000010                     ___ftmul@f2:
   304                           	opt stack 0
   305                           
   306                           ; 3 bytes @ 0xF
   307  000010                     	ds	3
   308  000013                     ??___ftmul:
   309                           
   310                           ; 0 bytes @ 0x12
   311  000013                     	ds	3
   312  000016                     ___ftmul@exp:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x15
   316  000016                     	ds	1
   317  000017                     ___ftmul@f3_as_product:
   318                           	opt stack 0
   319                           
   320                           ; 3 bytes @ 0x16
   321  000017                     	ds	3
   322  00001A                     ___ftmul@cntr:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x19
   326  00001A                     	ds	1
   327  00001B                     ___ftmul@sign:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x1A
   331  00001B                     	ds	1
   332  00001C                     ?___ftdiv:
   333                           	opt stack 0
   334  00001C                     ___ftdiv@f1:
   335                           	opt stack 0
   336                           
   337                           ; 3 bytes @ 0x1B
   338  00001C                     	ds	3
   339  00001F                     ___ftdiv@f2:
   340                           	opt stack 0
   341                           
   342                           ; 3 bytes @ 0x1E
   343  00001F                     	ds	3
   344  000022                     ??___ftdiv:
   345                           
   346                           ; 0 bytes @ 0x21
   347  000022                     	ds	3
   348  000025                     ___ftdiv@cntr:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x24
   352  000025                     	ds	1
   353  000026                     ___ftdiv@f3:
   354                           	opt stack 0
   355                           
   356                           ; 3 bytes @ 0x25
   357  000026                     	ds	3
   358  000029                     ___ftdiv@exp:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x28
   362  000029                     	ds	1
   363  00002A                     ___ftdiv@sign:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x29
   367  00002A                     	ds	1
   368  00002B                     Check_Power@voltage:
   369                           	opt stack 0
   370                           
   371                           ; 3 bytes @ 0x2A
   372  00002B                     	ds	3
   373  00002E                     Check_Power@source_power:
   374                           	opt stack 0
   375                           
   376                           ; 3 bytes @ 0x2D
   377  00002E                     	ds	3
   378  000031                     ??_Isr:
   379                           
   380                           ; 0 bytes @ 0x30
   381  000031                     	ds	14
   382  00003F                     Isr@c:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x3E
   386  00003F                     	ds	1
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 74 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;		None               void
   406 ;; Registers used:
   407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   413 ;;      Params:         0       0       0       0
   414 ;;      Locals:         0       0       0       0
   415 ;;      Temps:          0       0       0       0
   416 ;;      Totals:         0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels required when called:    7
   419 ;; This function calls:
   420 ;;		_Check_Ignition
   421 ;;		_Init
   422 ;; This function is called by:
   423 ;;		Startup code after reset
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text0
   428  000A42                     __ptext0:
   429                           	opt stack 0
   430  000A42                     _main:
   431                           	opt stack 24
   432                           
   433                           ;main.c: 75: Init();
   434                           
   435                           ;incstack = 0
   436  000A42  ECA8  F004         	call	_Init	;wreg free
   437  000A46                     l21:
   438                           
   439                           ;main.c: 77: Check_Ignition();
   440  000A46  EC42  F004         	call	_Check_Ignition	;wreg free
   441                           
   442                           ;main.c: 78: __nop();
   443  000A4A  F000               	nop	
   444  000A4C  D7FC               	goto	l21
   445  000A4E                     __end_of_main:
   446                           	opt stack 0
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           
   454 ;; *************** function _Init *****************
   455 ;; Defined at:
   456 ;;		line 5 in file "init.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;		None               void
   463 ;; Registers used:
   464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   470 ;;      Params:         0       0       0       0
   471 ;;      Locals:         0       0       0       0
   472 ;;      Temps:          0       0       0       0
   473 ;;      Totals:         0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    6
   477 ;; This function calls:
   478 ;;		_InitADC
   479 ;;		_InitAnsel
   480 ;;		_InitInterrupt
   481 ;;		_InitMiscellaneous
   482 ;;		_InitPort
   483 ;;		_InitTransmission
   484 ;;		_InitTris
   485 ;;		_InitVar
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text1
   492  000950                     __ptext1:
   493                           	opt stack 0
   494  000950                     _Init:
   495                           	opt stack 24
   496                           
   497                           ;init.c: 6: InitPort();
   498                           
   499                           ;incstack = 0
   500  000950  ECF2  F004         	call	_InitPort	;wreg free
   501                           
   502                           ;init.c: 7: InitTris();
   503  000954  ECE7  F004         	call	_InitTris	;wreg free
   504                           
   505                           ;init.c: 8: InitAnsel();
   506  000958  ECB9  F004         	call	_InitAnsel	;wreg free
   507                           
   508                           ;init.c: 9: InitMiscellaneous();
   509  00095C  EC32  F005         	call	_InitMiscellaneous	;wreg free
   510                           
   511                           ;init.c: 10: InitTransmission();
   512  000960  ECD9  F004         	call	_InitTransmission	;wreg free
   513                           
   514                           ;init.c: 11: InitADC();
   515  000964  EC08  F005         	call	_InitADC	;wreg free
   516                           
   517                           ;init.c: 12: InitVar();
   518  000968  EC80  F004         	call	_InitVar	;wreg free
   519                           
   520                           ;init.c: 13: InitInterrupt();
   521  00096C  EC2D  F005         	call	_InitInterrupt	;wreg free
   522  000970  0012               	return		;funcret
   523  000972                     __end_of_Init:
   524                           	opt stack 0
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           
   532 ;; *************** function _InitVar *****************
   533 ;; Defined at:
   534 ;;		line 85 in file "init.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  c               1    0[BANK0 ] unsigned char 
   539 ;; Return value:  Size  Location     Type
   540 ;;		None               void
   541 ;; Registers used:
   542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   548 ;;      Params:         0       0       0       0
   549 ;;      Locals:         0       1       0       0
   550 ;;      Temps:          0       0       0       0
   551 ;;      Totals:         0       1       0       0
   552 ;;Total ram usage:        1 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    5
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_Init
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text2
   563  000900                     __ptext2:
   564                           	opt stack 0
   565  000900                     _InitVar:
   566                           	opt stack 24
   567                           
   568                           ;init.c: 86: for(unsigned char c = 0; c < 10; c++) {
   569                           
   570                           ;incstack = 0
   571  000900  0E00               	movlw	0
   572  000902  0100               	movlb	0	; () banked
   573  000904  6F6A               	movwf	InitVar@c& (0+255),b
   574  000906                     l1617:
   575                           
   576                           ; BSR set to: 0
   577  000906  0E09               	movlw	9
   578  000908  0100               	movlb	0	; () banked
   579  00090A  656A               	cpfsgt	InitVar@c& (0+255),b
   580  00090C  D001               	goto	l1621
   581  00090E  0012               	return	
   582  000910                     l1621:
   583                           
   584                           ; BSR set to: 0
   585                           ;init.c: 87: Marker[c] = 0;
   586  000910  0100               	movlb	0	; () banked
   587  000912  516A               	movf	InitVar@c& (0+255),w,b
   588  000914  0D01               	mullw	1
   589  000916  0E60               	movlw	low _Marker
   590  000918  24F3               	addwf	prodl,w,c
   591  00091A  6ED9               	movwf	fsr2l,c
   592  00091C  0E00               	movlw	high _Marker
   593  00091E  20F4               	addwfc	prodh,w,c
   594  000920  6EDA               	movwf	fsr2h,c
   595  000922  0E00               	movlw	0
   596  000924  6EDF               	movwf	indf2,c
   597                           
   598                           ; BSR set to: 0
   599  000926  0100               	movlb	0	; () banked
   600  000928  2B6A               	incf	InitVar@c& (0+255),f,b
   601  00092A  D7ED               	goto	l1617
   602  00092C                     __end_of_InitVar:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           prodh	equ	0xFF4
   609                           prodl	equ	0xFF3
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           indf2	equ	0xFDF
   613                           fsr2h	equ	0xFDA
   614                           fsr2l	equ	0xFD9
   615                           
   616 ;; *************** function _InitTris *****************
   617 ;; Defined at:
   618 ;;		line 24 in file "init.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;		None               void
   625 ;; Registers used:
   626 ;;		wreg, status,2
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   632 ;;      Params:         0       0       0       0
   633 ;;      Locals:         0       0       0       0
   634 ;;      Temps:          0       0       0       0
   635 ;;      Totals:         0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    5
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_Init
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text3
   647  0009CE                     __ptext3:
   648                           	opt stack 0
   649  0009CE                     _InitTris:
   650                           	opt stack 24
   651                           
   652                           ;init.c: 25: TRISA = 0b00000101;
   653                           
   654                           ; BSR set to: 0
   655                           ;incstack = 0
   656  0009CE  0E05               	movlw	5
   657  0009D0  6E92               	movwf	3986,c	;volatile
   658                           
   659                           ;init.c: 26: TRISB = 0b00010101;
   660  0009D2  0E15               	movlw	21
   661  0009D4  6E93               	movwf	3987,c	;volatile
   662                           
   663                           ;init.c: 27: TRISC = 0b00010100;
   664  0009D6  0E14               	movlw	20
   665  0009D8  6E94               	movwf	3988,c	;volatile
   666                           
   667                           ;init.c: 28: TRISD = 0b00000101;
   668  0009DA  0E05               	movlw	5
   669  0009DC  6E95               	movwf	3989,c	;volatile
   670                           
   671                           ;init.c: 29: TRISE = 0b00000101;
   672  0009DE  0E05               	movlw	5
   673  0009E0  6E96               	movwf	3990,c	;volatile
   674  0009E2  0012               	return		;funcret
   675  0009E4                     __end_of_InitTris:
   676                           	opt stack 0
   677                           tblptru	equ	0xFF8
   678                           tblptrh	equ	0xFF7
   679                           tblptrl	equ	0xFF6
   680                           tablat	equ	0xFF5
   681                           prodh	equ	0xFF4
   682                           prodl	equ	0xFF3
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           indf2	equ	0xFDF
   686                           fsr2h	equ	0xFDA
   687                           fsr2l	equ	0xFD9
   688                           
   689 ;; *************** function _InitTransmission *****************
   690 ;; Defined at:
   691 ;;		line 44 in file "init.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;		None               void
   698 ;; Registers used:
   699 ;;		wreg, status,2
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   705 ;;      Params:         0       0       0       0
   706 ;;      Locals:         0       0       0       0
   707 ;;      Temps:          0       0       0       0
   708 ;;      Totals:         0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    5
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_Init
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text4
   720  0009B2                     __ptext4:
   721                           	opt stack 0
   722  0009B2                     _InitTransmission:
   723                           	opt stack 24
   724                           
   725                           ;init.c: 46: TXSTA1bits.SYNC = 0;
   726                           
   727                           ;incstack = 0
   728  0009B2  98AC               	bcf	4012,4,c	;volatile
   729                           
   730                           ;init.c: 47: TXSTA1bits.BRGH = 1;
   731  0009B4  84AC               	bsf	4012,2,c	;volatile
   732                           
   733                           ;init.c: 48: BAUDCON1bits.BRG16 = 0;
   734  0009B6  96B8               	bcf	4024,3,c	;volatile
   735                           
   736                           ;init.c: 49: SPBRG1 = 25;
   737  0009B8  0E19               	movlw	25
   738  0009BA  6EAF               	movwf	4015,c	;volatile
   739                           
   740                           ;init.c: 50: TRISCbits.RC6 = 1;
   741  0009BC  8C94               	bsf	3988,6,c	;volatile
   742                           
   743                           ;init.c: 51: TRISCbits.RC7 = 1;
   744  0009BE  8E94               	bsf	3988,7,c	;volatile
   745                           
   746                           ;init.c: 52: RCSTA1bits.SPEN = 1;
   747  0009C0  8EAB               	bsf	4011,7,c	;volatile
   748                           
   749                           ;init.c: 53: TXSTA1bits.TX9 = 1;
   750  0009C2  8CAC               	bsf	4012,6,c	;volatile
   751                           
   752                           ;init.c: 54: TXSTA1bits.TXEN = 1;
   753  0009C4  8AAC               	bsf	4012,5,c	;volatile
   754                           
   755                           ;init.c: 55: RCSTA1bits.RC9 = 1;
   756  0009C6  8CAB               	bsf	4011,6,c	;volatile
   757                           
   758                           ;init.c: 56: RCSTA1bits.CREN = 1;
   759  0009C8  88AB               	bsf	4011,4,c	;volatile
   760                           
   761                           ;init.c: 57: TRISCbits.RC6 = 0;
   762  0009CA  9C94               	bcf	3988,6,c	;volatile
   763  0009CC  0012               	return		;funcret
   764  0009CE                     __end_of_InitTransmission:
   765                           	opt stack 0
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           prodh	equ	0xFF4
   771                           prodl	equ	0xFF3
   772                           postinc0	equ	0xFEE
   773                           wreg	equ	0xFE8
   774                           indf2	equ	0xFDF
   775                           fsr2h	equ	0xFDA
   776                           fsr2l	equ	0xFD9
   777                           
   778 ;; *************** function _InitPort *****************
   779 ;; Defined at:
   780 ;;		line 16 in file "init.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;		None               void
   787 ;; Registers used:
   788 ;;		wreg, status,2
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   794 ;;      Params:         0       0       0       0
   795 ;;      Locals:         0       0       0       0
   796 ;;      Temps:          0       0       0       0
   797 ;;      Totals:         0       0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    5
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_Init
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text5
   809  0009E4                     __ptext5:
   810                           	opt stack 0
   811  0009E4                     _InitPort:
   812                           	opt stack 24
   813                           
   814                           ;init.c: 17: PORTA = 0b00000000;
   815                           
   816                           ;incstack = 0
   817  0009E4  0E00               	movlw	0
   818  0009E6  6E80               	movwf	3968,c	;volatile
   819                           
   820                           ;init.c: 18: PORTB = 0b00000000;
   821  0009E8  0E00               	movlw	0
   822  0009EA  6E81               	movwf	3969,c	;volatile
   823                           
   824                           ;init.c: 19: PORTC = 0b00000000;
   825  0009EC  0E00               	movlw	0
   826  0009EE  6E82               	movwf	3970,c	;volatile
   827                           
   828                           ;init.c: 20: PORTD = 0b00000000;
   829  0009F0  0E00               	movlw	0
   830  0009F2  6E83               	movwf	3971,c	;volatile
   831                           
   832                           ;init.c: 21: PORTE = 0b00000000;
   833  0009F4  0E00               	movlw	0
   834  0009F6  6E84               	movwf	3972,c	;volatile
   835  0009F8  0012               	return		;funcret
   836  0009FA                     __end_of_InitPort:
   837                           	opt stack 0
   838                           tblptru	equ	0xFF8
   839                           tblptrh	equ	0xFF7
   840                           tblptrl	equ	0xFF6
   841                           tablat	equ	0xFF5
   842                           prodh	equ	0xFF4
   843                           prodl	equ	0xFF3
   844                           postinc0	equ	0xFEE
   845                           wreg	equ	0xFE8
   846                           indf2	equ	0xFDF
   847                           fsr2h	equ	0xFDA
   848                           fsr2l	equ	0xFD9
   849                           
   850 ;; *************** function _InitMiscellaneous *****************
   851 ;; Defined at:
   852 ;;		line 40 in file "init.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;		None               void
   859 ;; Registers used:
   860 ;;		wreg, status,2
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   866 ;;      Params:         0       0       0       0
   867 ;;      Locals:         0       0       0       0
   868 ;;      Temps:          0       0       0       0
   869 ;;      Totals:         0       0       0       0
   870 ;;Total ram usage:        0 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    5
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_Init
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text6
   881  000A64                     __ptext6:
   882                           	opt stack 0
   883  000A64                     _InitMiscellaneous:
   884                           	opt stack 24
   885                           
   886                           ;init.c: 41: OSCCON = 0b01010011;
   887                           
   888                           ;incstack = 0
   889  000A64  0E53               	movlw	83
   890  000A66  6ED3               	movwf	4051,c	;volatile
   891  000A68  0012               	return		;funcret
   892  000A6A                     __end_of_InitMiscellaneous:
   893                           	opt stack 0
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           prodh	equ	0xFF4
   899                           prodl	equ	0xFF3
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           indf2	equ	0xFDF
   903                           fsr2h	equ	0xFDA
   904                           fsr2l	equ	0xFD9
   905                           
   906 ;; *************** function _InitInterrupt *****************
   907 ;; Defined at:
   908 ;;		line 78 in file "init.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;		None               void
   915 ;; Registers used:
   916 ;;		None
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   922 ;;      Params:         0       0       0       0
   923 ;;      Locals:         0       0       0       0
   924 ;;      Temps:          0       0       0       0
   925 ;;      Totals:         0       0       0       0
   926 ;;Total ram usage:        0 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    5
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_Init
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text7
   937  000A5A                     __ptext7:
   938                           	opt stack 0
   939  000A5A                     _InitInterrupt:
   940                           	opt stack 24
   941                           
   942                           ;init.c: 79: INTCONbits.GIE = 1;
   943                           
   944                           ;incstack = 0
   945  000A5A  8EF2               	bsf	intcon,7,c	;volatile
   946                           
   947                           ;init.c: 80: INTCONbits.PEIE = 1;
   948  000A5C  8CF2               	bsf	intcon,6,c	;volatile
   949                           
   950                           ;init.c: 81: PIE1bits.RCIE = 1;
   951  000A5E  8A9D               	bsf	3997,5,c	;volatile
   952                           
   953                           ;init.c: 82: PIE1bits.CCP1IE = 1;
   954  000A60  849D               	bsf	3997,2,c	;volatile
   955  000A62  0012               	return		;funcret
   956  000A64                     __end_of_InitInterrupt:
   957                           	opt stack 0
   958                           tblptru	equ	0xFF8
   959                           tblptrh	equ	0xFF7
   960                           tblptrl	equ	0xFF6
   961                           tablat	equ	0xFF5
   962                           prodh	equ	0xFF4
   963                           prodl	equ	0xFF3
   964                           intcon	equ	0xFF2
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           indf2	equ	0xFDF
   968                           fsr2h	equ	0xFDA
   969                           fsr2l	equ	0xFD9
   970                           
   971 ;; *************** function _InitAnsel *****************
   972 ;; Defined at:
   973 ;;		line 32 in file "init.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;		None               void
   980 ;; Registers used:
   981 ;;		wreg, status,2
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   987 ;;      Params:         0       0       0       0
   988 ;;      Locals:         0       0       0       0
   989 ;;      Temps:          0       0       0       0
   990 ;;      Totals:         0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    5
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_Init
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text8
  1002  000972                     __ptext8:
  1003                           	opt stack 0
  1004  000972                     _InitAnsel:
  1005                           	opt stack 24
  1006                           
  1007                           ;init.c: 33: ANSELA = 0b00000000;
  1008                           
  1009                           ;incstack = 0
  1010  000972  0E00               	movlw	0
  1011  000974  010F               	movlb	15	; () banked
  1012  000976  6F38               	movwf	56,b	;volatile
  1013                           
  1014                           ;init.c: 34: ANSELB = 0b00000001;
  1015  000978  0E01               	movlw	1
  1016  00097A  010F               	movlb	15	; () banked
  1017  00097C  6F39               	movwf	57,b	;volatile
  1018                           
  1019                           ;init.c: 35: ANSELC = 0b00000000;
  1020  00097E  0E00               	movlw	0
  1021  000980  010F               	movlb	15	; () banked
  1022  000982  6F3A               	movwf	58,b	;volatile
  1023                           
  1024                           ;init.c: 36: ANSELD = 0b00000000;
  1025  000984  0E00               	movlw	0
  1026  000986  010F               	movlb	15	; () banked
  1027  000988  6F3B               	movwf	59,b	;volatile
  1028                           
  1029                           ;init.c: 37: ANSELE = 0b00000000;
  1030  00098A  0E00               	movlw	0
  1031  00098C  010F               	movlb	15	; () banked
  1032  00098E  6F3C               	movwf	60,b	;volatile
  1033                           
  1034                           ; BSR set to: 15
  1035  000990  0012               	return		;funcret
  1036  000992                     __end_of_InitAnsel:
  1037                           	opt stack 0
  1038                           tblptru	equ	0xFF8
  1039                           tblptrh	equ	0xFF7
  1040                           tblptrl	equ	0xFF6
  1041                           tablat	equ	0xFF5
  1042                           prodh	equ	0xFF4
  1043                           prodl	equ	0xFF3
  1044                           intcon	equ	0xFF2
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           indf2	equ	0xFDF
  1048                           fsr2h	equ	0xFDA
  1049                           fsr2l	equ	0xFD9
  1050                           
  1051 ;; *************** function _InitADC *****************
  1052 ;; Defined at:
  1053 ;;		line 60 in file "init.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;		None               void
  1060 ;; Registers used:
  1061 ;;		wreg, status,2
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1067 ;;      Params:         0       0       0       0
  1068 ;;      Locals:         0       0       0       0
  1069 ;;      Temps:          0       0       0       0
  1070 ;;      Totals:         0       0       0       0
  1071 ;;Total ram usage:        0 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    5
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_Init
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text9
  1082  000A10                     __ptext9:
  1083                           	opt stack 0
  1084  000A10                     _InitADC:
  1085                           	opt stack 24
  1086                           
  1087                           ;init.c: 62: VREFCON0 = 0b10110000;
  1088                           
  1089                           ; BSR set to: 15
  1090                           ;incstack = 0
  1091  000A10  0EB0               	movlw	176
  1092  000A12  010F               	movlb	15	; () banked
  1093  000A14  6F42               	movwf	66,b	;volatile
  1094                           
  1095                           ;init.c: 64: ADCON1 = 0b00001000;
  1096  000A16  0E08               	movlw	8
  1097  000A18  6EC1               	movwf	4033,c	;volatile
  1098                           
  1099                           ;init.c: 65: ADCON2 = 0b00000011;
  1100  000A1A  0E03               	movlw	3
  1101  000A1C  6EC0               	movwf	4032,c	;volatile
  1102                           
  1103                           ;init.c: 66: ADCON0 = 0b00110001;
  1104  000A1E  0E31               	movlw	49
  1105  000A20  6EC2               	movwf	4034,c	;volatile
  1106                           
  1107                           ; BSR set to: 15
  1108  000A22  0012               	return		;funcret
  1109  000A24                     __end_of_InitADC:
  1110                           	opt stack 0
  1111                           tblptru	equ	0xFF8
  1112                           tblptrh	equ	0xFF7
  1113                           tblptrl	equ	0xFF6
  1114                           tablat	equ	0xFF5
  1115                           prodh	equ	0xFF4
  1116                           prodl	equ	0xFF3
  1117                           intcon	equ	0xFF2
  1118                           postinc0	equ	0xFEE
  1119                           wreg	equ	0xFE8
  1120                           indf2	equ	0xFDF
  1121                           fsr2h	equ	0xFDA
  1122                           fsr2l	equ	0xFD9
  1123                           
  1124 ;; *************** function _Check_Ignition *****************
  1125 ;; Defined at:
  1126 ;;		line 156 in file "ignition.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  c               1    2[BANK0 ] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;		None               void
  1133 ;; Registers used:
  1134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1140 ;;      Params:         0       0       0       0
  1141 ;;      Locals:         0       1       0       0
  1142 ;;      Temps:          0       1       0       0
  1143 ;;      Totals:         0       2       0       0
  1144 ;;Total ram usage:        2 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    6
  1147 ;; This function calls:
  1148 ;;		_Disable_Port
  1149 ;;		_Ignite_Port
  1150 ;;		_On_Timer
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text10
  1157  000884                     __ptext10:
  1158                           	opt stack 0
  1159  000884                     _Check_Ignition:
  1160                           	opt stack 24
  1161                           
  1162                           ;ignition.c: 157: for(unsigned char c = 0; c < 10; c++) {
  1163                           
  1164                           ; BSR set to: 15
  1165                           ;incstack = 0
  1166  000884  0E00               	movlw	0
  1167  000886  0100               	movlb	0	; () banked
  1168  000888  6F6C               	movwf	Check_Ignition@c& (0+255),b
  1169  00088A                     l1713:
  1170                           
  1171                           ; BSR set to: 0
  1172  00088A  0E09               	movlw	9
  1173  00088C  0100               	movlb	0	; () banked
  1174  00088E  656C               	cpfsgt	Check_Ignition@c& (0+255),b
  1175  000890  D001               	goto	l1717
  1176  000892  0012               	return	
  1177  000894                     l1717:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;ignition.c: 158: if(Marker[c] == 1) {
  1181  000894  0100               	movlb	0	; () banked
  1182  000896  516C               	movf	Check_Ignition@c& (0+255),w,b
  1183  000898  0D01               	mullw	1
  1184  00089A  0E60               	movlw	low _Marker
  1185  00089C  24F3               	addwf	prodl,w,c
  1186  00089E  6ED9               	movwf	fsr2l,c
  1187  0008A0  0E00               	movlw	high _Marker
  1188  0008A2  20F4               	addwfc	prodh,w,c
  1189  0008A4  6EDA               	movwf	fsr2h,c
  1190  0008A6  04DE               	decf	postinc2,w,c
  1191  0008A8  A4D8               	btfss	status,2,c
  1192  0008AA  D007               	goto	l1723
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;ignition.c: 159: Ignite_Port(c);
  1196  0008AC  0100               	movlb	0	; () banked
  1197  0008AE  516C               	movf	Check_Ignition@c& (0+255),w,b
  1198  0008B0  EC9A  F003         	call	_Ignite_Port
  1199                           
  1200                           ;ignition.c: 160: On_Timer();
  1201  0008B4  EC27  F005         	call	_On_Timer	;wreg free
  1202                           
  1203                           ;ignition.c: 161: } else {
  1204  0008B8  D004               	goto	l1725
  1205  0008BA                     l1723:
  1206                           
  1207                           ;ignition.c: 162: Disable_Port(c);
  1208  0008BA  0100               	movlb	0	; () banked
  1209  0008BC  516C               	movf	Check_Ignition@c& (0+255),w,b
  1210  0008BE  ECD2  F003         	call	_Disable_Port
  1211  0008C2                     l1725:
  1212  0008C2  0100               	movlb	0	; () banked
  1213  0008C4  2B6C               	incf	Check_Ignition@c& (0+255),f,b
  1214  0008C6  D7E1               	goto	l1713
  1215  0008C8                     __end_of_Check_Ignition:
  1216                           	opt stack 0
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           prodh	equ	0xFF4
  1222                           prodl	equ	0xFF3
  1223                           intcon	equ	0xFF2
  1224                           postinc0	equ	0xFEE
  1225                           wreg	equ	0xFE8
  1226                           indf2	equ	0xFDF
  1227                           postinc2	equ	0xFDE
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           status	equ	0xFD8
  1231                           
  1232 ;; *************** function _On_Timer *****************
  1233 ;; Defined at:
  1234 ;;		line 5 in file "ignition.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;		None               void
  1241 ;; Registers used:
  1242 ;;		wreg, status,2
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1248 ;;      Params:         0       0       0       0
  1249 ;;      Locals:         0       0       0       0
  1250 ;;      Temps:          0       0       0       0
  1251 ;;      Totals:         0       0       0       0
  1252 ;;Total ram usage:        0 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    5
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_Check_Ignition
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text11
  1263  000A4E                     __ptext11:
  1264                           	opt stack 0
  1265  000A4E                     _On_Timer:
  1266                           	opt stack 24
  1267                           
  1268                           ;ignition.c: 6: TMR1L = 0;
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;incstack = 0
  1272  000A4E  0E00               	movlw	0
  1273  000A50  6ECE               	movwf	4046,c	;volatile
  1274                           
  1275                           ;ignition.c: 7: TMR1H = 0;
  1276  000A52  0E00               	movlw	0
  1277  000A54  6ECF               	movwf	4047,c	;volatile
  1278                           
  1279                           ;ignition.c: 8: T1CONbits.TMR1ON = 1;
  1280  000A56  80CD               	bsf	4045,0,c	;volatile
  1281  000A58  0012               	return		;funcret
  1282  000A5A                     __end_of_On_Timer:
  1283                           	opt stack 0
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           prodh	equ	0xFF4
  1289                           prodl	equ	0xFF3
  1290                           intcon	equ	0xFF2
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           indf2	equ	0xFDF
  1294                           postinc2	equ	0xFDE
  1295                           fsr2h	equ	0xFDA
  1296                           fsr2l	equ	0xFD9
  1297                           status	equ	0xFD8
  1298                           
  1299 ;; *************** function _Ignite_Port *****************
  1300 ;; Defined at:
  1301 ;;		line 86 in file "ignition.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  ignite_numbe    1    wreg     unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  ignite_numbe    1    0[BANK0 ] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;		None               void
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1315 ;;      Params:         0       0       0       0
  1316 ;;      Locals:         0       1       0       0
  1317 ;;      Temps:          0       0       0       0
  1318 ;;      Totals:         0       1       0       0
  1319 ;;Total ram usage:        1 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    5
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_Check_Ignition
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text12
  1330  000734                     __ptext12:
  1331                           	opt stack 0
  1332  000734                     _Ignite_Port:
  1333                           	opt stack 24
  1334                           
  1335                           ;incstack = 0
  1336                           ;Ignite_Port@ignite_number stored from wreg
  1337  000734  0100               	movlb	0	; () banked
  1338  000736  6F6A               	movwf	Ignite_Port@ignite_number& (0+255),b
  1339                           
  1340                           ;ignition.c: 87: switch(ignite_number) {
  1341  000738  D014               	goto	l1683
  1342  00073A                     l294:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;ignition.c: 89: PORTCbits.RC5 = 1;
  1346  00073A  8A82               	bsf	3970,5,c	;volatile
  1347                           
  1348                           ;ignition.c: 90: break;
  1349  00073C  0012               	return	
  1350  00073E                     l296:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;ignition.c: 92: PORTDbits.RD3 = 1;
  1354  00073E  8683               	bsf	3971,3,c	;volatile
  1355                           
  1356                           ;ignition.c: 93: break;
  1357  000740  0012               	return	
  1358  000742                     l297:
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;ignition.c: 95: PORTDbits.RD1 = 1;
  1362  000742  8283               	bsf	3971,1,c	;volatile
  1363                           
  1364                           ;ignition.c: 96: break;
  1365  000744  0012               	return	
  1366  000746                     l298:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;ignition.c: 98: PORTCbits.RC3 = 1;
  1370  000746  8682               	bsf	3970,3,c	;volatile
  1371                           
  1372                           ;ignition.c: 99: break;
  1373  000748  0012               	return	
  1374  00074A                     l299:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;ignition.c: 101: PORTCbits.RC1 = 1;
  1378  00074A  8282               	bsf	3970,1,c	;volatile
  1379                           
  1380                           ;ignition.c: 102: break;
  1381  00074C  0012               	return	
  1382  00074E                     l300:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;ignition.c: 104: PORTEbits.RE1 = 1;
  1386  00074E  8284               	bsf	3972,1,c	;volatile
  1387                           
  1388                           ;ignition.c: 105: break;
  1389  000750  0012               	return	
  1390  000752                     l301:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;ignition.c: 107: PORTAbits.RA5 = 1;
  1394  000752  8A80               	bsf	3968,5,c	;volatile
  1395                           
  1396                           ;ignition.c: 108: break;
  1397  000754  0012               	return	
  1398  000756                     l302:
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;ignition.c: 110: PORTBbits.RB5 = 1;
  1402  000756  8A81               	bsf	3969,5,c	;volatile
  1403                           
  1404                           ;ignition.c: 111: break;
  1405  000758  0012               	return	
  1406  00075A                     l303:
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;ignition.c: 113: PORTAbits.RA3 = 1;
  1410  00075A  8680               	bsf	3968,3,c	;volatile
  1411                           
  1412                           ;ignition.c: 114: break;
  1413  00075C  0012               	return	
  1414  00075E                     l304:
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;ignition.c: 116: PORTAbits.RA1 = 1;
  1418  00075E  8280               	bsf	3968,1,c	;volatile
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;ignition.c: 118: }
  1422                           
  1423                           ;ignition.c: 117: break;
  1424  000760  0012               	return	
  1425  000762                     l1683:
  1426  000762  0100               	movlb	0	; () banked
  1427  000764  516A               	movf	Ignite_Port@ignite_number& (0+255),w,b
  1428                           
  1429                           ; Switch size 1, requested type "space"
  1430                           ; Number of cases is 10, Range of values is 0 to 9
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte           31    16 (average)
  1434                           ;	Chosen strategy is simple_byte
  1435  000766  0A00               	xorlw	0	; case 0
  1436  000768  B4D8               	btfsc	status,2,c
  1437  00076A  D7E7               	goto	l294
  1438  00076C  0A01               	xorlw	1	; case 1
  1439  00076E  B4D8               	btfsc	status,2,c
  1440  000770  D7E6               	goto	l296
  1441  000772  0A03               	xorlw	3	; case 2
  1442  000774  B4D8               	btfsc	status,2,c
  1443  000776  D7E5               	goto	l297
  1444  000778  0A01               	xorlw	1	; case 3
  1445  00077A  B4D8               	btfsc	status,2,c
  1446  00077C  D7E4               	goto	l298
  1447  00077E  0A07               	xorlw	7	; case 4
  1448  000780  B4D8               	btfsc	status,2,c
  1449  000782  D7E3               	goto	l299
  1450  000784  0A01               	xorlw	1	; case 5
  1451  000786  B4D8               	btfsc	status,2,c
  1452  000788  D7E2               	goto	l300
  1453  00078A  0A03               	xorlw	3	; case 6
  1454  00078C  B4D8               	btfsc	status,2,c
  1455  00078E  D7E1               	goto	l301
  1456  000790  0A01               	xorlw	1	; case 7
  1457  000792  B4D8               	btfsc	status,2,c
  1458  000794  D7E0               	goto	l302
  1459  000796  0A0F               	xorlw	15	; case 8
  1460  000798  B4D8               	btfsc	status,2,c
  1461  00079A  D7DF               	goto	l303
  1462  00079C  0A01               	xorlw	1	; case 9
  1463  00079E  A4D8               	btfss	status,2,c
  1464  0007A0  0012               	return	
  1465  0007A2  D7DD               	goto	l304
  1466  0007A4                     __end_of_Ignite_Port:
  1467                           	opt stack 0
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           prodh	equ	0xFF4
  1473                           prodl	equ	0xFF3
  1474                           intcon	equ	0xFF2
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           indf2	equ	0xFDF
  1478                           postinc2	equ	0xFDE
  1479                           fsr2h	equ	0xFDA
  1480                           fsr2l	equ	0xFD9
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function _Disable_Port *****************
  1484 ;; Defined at:
  1485 ;;		line 121 in file "ignition.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  disable_numb    1    wreg     unsigned char 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  disable_numb    1    0[BANK0 ] unsigned char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;		None               void
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1499 ;;      Params:         0       0       0       0
  1500 ;;      Locals:         0       1       0       0
  1501 ;;      Temps:          0       0       0       0
  1502 ;;      Totals:         0       1       0       0
  1503 ;;Total ram usage:        1 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    5
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_Check_Ignition
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text13
  1514  0007A4                     __ptext13:
  1515                           	opt stack 0
  1516  0007A4                     _Disable_Port:
  1517                           	opt stack 24
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;incstack = 0
  1521                           ;Disable_Port@disable_number stored from wreg
  1522  0007A4  0100               	movlb	0	; () banked
  1523  0007A6  6F6A               	movwf	Disable_Port@disable_number& (0+255),b
  1524                           
  1525                           ;ignition.c: 122: switch(disable_number) {
  1526  0007A8  D014               	goto	l1689
  1527  0007AA                     l309:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;ignition.c: 124: PORTCbits.RC5 = 0;
  1531  0007AA  9A82               	bcf	3970,5,c	;volatile
  1532                           
  1533                           ;ignition.c: 125: break;
  1534  0007AC  0012               	return	
  1535  0007AE                     l311:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;ignition.c: 127: PORTDbits.RD3 = 0;
  1539  0007AE  9683               	bcf	3971,3,c	;volatile
  1540                           
  1541                           ;ignition.c: 128: break;
  1542  0007B0  0012               	return	
  1543  0007B2                     l312:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;ignition.c: 130: PORTDbits.RD1 = 0;
  1547  0007B2  9283               	bcf	3971,1,c	;volatile
  1548                           
  1549                           ;ignition.c: 131: break;
  1550  0007B4  0012               	return	
  1551  0007B6                     l313:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;ignition.c: 133: PORTCbits.RC3 = 0;
  1555  0007B6  9682               	bcf	3970,3,c	;volatile
  1556                           
  1557                           ;ignition.c: 134: break;
  1558  0007B8  0012               	return	
  1559  0007BA                     l314:
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;ignition.c: 136: PORTCbits.RC1 = 0;
  1563  0007BA  9282               	bcf	3970,1,c	;volatile
  1564                           
  1565                           ;ignition.c: 137: break;
  1566  0007BC  0012               	return	
  1567  0007BE                     l315:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;ignition.c: 139: PORTEbits.RE1 = 0;
  1571  0007BE  9284               	bcf	3972,1,c	;volatile
  1572                           
  1573                           ;ignition.c: 140: break;
  1574  0007C0  0012               	return	
  1575  0007C2                     l316:
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;ignition.c: 142: PORTAbits.RA5 = 0;
  1579  0007C2  9A80               	bcf	3968,5,c	;volatile
  1580                           
  1581                           ;ignition.c: 143: break;
  1582  0007C4  0012               	return	
  1583  0007C6                     l317:
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;ignition.c: 145: PORTBbits.RB5 = 0;
  1587  0007C6  9A81               	bcf	3969,5,c	;volatile
  1588                           
  1589                           ;ignition.c: 146: break;
  1590  0007C8  0012               	return	
  1591  0007CA                     l318:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;ignition.c: 148: PORTAbits.RA3 = 0;
  1595  0007CA  9680               	bcf	3968,3,c	;volatile
  1596                           
  1597                           ;ignition.c: 149: break;
  1598  0007CC  0012               	return	
  1599  0007CE                     l319:
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;ignition.c: 151: PORTAbits.RA1 = 0;
  1603  0007CE  9280               	bcf	3968,1,c	;volatile
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;ignition.c: 153: }
  1607                           
  1608                           ;ignition.c: 152: break;
  1609  0007D0  0012               	return	
  1610  0007D2                     l1689:
  1611  0007D2  0100               	movlb	0	; () banked
  1612  0007D4  516A               	movf	Disable_Port@disable_number& (0+255),w,b
  1613                           
  1614                           ; Switch size 1, requested type "space"
  1615                           ; Number of cases is 10, Range of values is 0 to 9
  1616                           ; switch strategies available:
  1617                           ; Name         Instructions Cycles
  1618                           ; simple_byte           31    16 (average)
  1619                           ;	Chosen strategy is simple_byte
  1620  0007D6  0A00               	xorlw	0	; case 0
  1621  0007D8  B4D8               	btfsc	status,2,c
  1622  0007DA  D7E7               	goto	l309
  1623  0007DC  0A01               	xorlw	1	; case 1
  1624  0007DE  B4D8               	btfsc	status,2,c
  1625  0007E0  D7E6               	goto	l311
  1626  0007E2  0A03               	xorlw	3	; case 2
  1627  0007E4  B4D8               	btfsc	status,2,c
  1628  0007E6  D7E5               	goto	l312
  1629  0007E8  0A01               	xorlw	1	; case 3
  1630  0007EA  B4D8               	btfsc	status,2,c
  1631  0007EC  D7E4               	goto	l313
  1632  0007EE  0A07               	xorlw	7	; case 4
  1633  0007F0  B4D8               	btfsc	status,2,c
  1634  0007F2  D7E3               	goto	l314
  1635  0007F4  0A01               	xorlw	1	; case 5
  1636  0007F6  B4D8               	btfsc	status,2,c
  1637  0007F8  D7E2               	goto	l315
  1638  0007FA  0A03               	xorlw	3	; case 6
  1639  0007FC  B4D8               	btfsc	status,2,c
  1640  0007FE  D7E1               	goto	l316
  1641  000800  0A01               	xorlw	1	; case 7
  1642  000802  B4D8               	btfsc	status,2,c
  1643  000804  D7E0               	goto	l317
  1644  000806  0A0F               	xorlw	15	; case 8
  1645  000808  B4D8               	btfsc	status,2,c
  1646  00080A  D7DF               	goto	l318
  1647  00080C  0A01               	xorlw	1	; case 9
  1648  00080E  A4D8               	btfss	status,2,c
  1649  000810  0012               	return	
  1650  000812  D7DD               	goto	l319
  1651  000814                     __end_of_Disable_Port:
  1652                           	opt stack 0
  1653                           tblptru	equ	0xFF8
  1654                           tblptrh	equ	0xFF7
  1655                           tblptrl	equ	0xFF6
  1656                           tablat	equ	0xFF5
  1657                           prodh	equ	0xFF4
  1658                           prodl	equ	0xFF3
  1659                           intcon	equ	0xFF2
  1660                           postinc0	equ	0xFEE
  1661                           wreg	equ	0xFE8
  1662                           indf2	equ	0xFDF
  1663                           postinc2	equ	0xFDE
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _Isr *****************
  1669 ;; Defined at:
  1670 ;;		line 3 in file "interrupt.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  c               1   62[COMRAM] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;		None               void
  1677 ;; Registers used:
  1678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1684 ;;      Params:         0       0       0       0
  1685 ;;      Locals:         1       0       0       0
  1686 ;;      Temps:         14       0       0       0
  1687 ;;      Totals:        15       0       0       0
  1688 ;;Total ram usage:       15 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    4
  1691 ;; This function calls:
  1692 ;;		_Evaluate_Reception
  1693 ;;		_Receive
  1694 ;;		_Receive_Dump
  1695 ;; This function is called by:
  1696 ;;		Interrupt level 2
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	intcode
  1701  000008                     __pintcode:
  1702                           	opt stack 0
  1703  000008                     _Isr:
  1704                           	opt stack 24
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;incstack = 0
  1708  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1709  00000A  CFFA F031          	movff	pclath,??_Isr
  1710  00000E  CFFB F032          	movff	pclatu,??_Isr+1
  1711  000012  CFE9 F033          	movff	fsr0l,??_Isr+2
  1712  000016  CFEA F034          	movff	fsr0h,??_Isr+3
  1713  00001A  CFE1 F035          	movff	fsr1l,??_Isr+4
  1714  00001E  CFE2 F036          	movff	fsr1h,??_Isr+5
  1715  000022  CFD9 F037          	movff	fsr2l,??_Isr+6
  1716  000026  CFDA F038          	movff	fsr2h,??_Isr+7
  1717  00002A  CFF3 F039          	movff	prodl,??_Isr+8
  1718  00002E  CFF4 F03A          	movff	prodh,??_Isr+9
  1719  000032  CFF6 F03B          	movff	tblptrl,??_Isr+10
  1720  000036  CFF7 F03C          	movff	tblptrh,??_Isr+11
  1721  00003A  CFF8 F03D          	movff	tblptru,??_Isr+12
  1722  00003E  CFF5 F03E          	movff	tablat,??_Isr+13
  1723                           
  1724                           ;interrupt.c: 4: __nop();
  1725  000042  F000               	nop	
  1726                           
  1727                           ;interrupt.c: 5: if(PIR1bits.RCIF == 1) {
  1728  000044  AA9E               	btfss	3998,5,c	;volatile
  1729  000046  D031               	goto	i2l1781
  1730                           
  1731                           ;interrupt.c: 6: if(RCSTA1bits.RX9D == 1) {
  1732  000048  A0AB               	btfss	4011,0,c	;volatile
  1733  00004A  D016               	goto	i2l379
  1734                           
  1735                           ;interrupt.c: 7: receive_counter = 0;
  1736  00004C  0E00               	movlw	0
  1737  00004E  6E44               	movwf	_receive_counter,c
  1738                           
  1739                           ;interrupt.c: 9: received[receive_counter] =
  1740                           ;interrupt.c: 10: Receive();
  1741  000050  5044               	movf	_receive_counter,w,c
  1742  000052  0D01               	mullw	1
  1743  000054  0E40               	movlw	low _received
  1744  000056  24F3               	addwf	prodl,w,c
  1745  000058  6ED9               	movwf	fsr2l,c
  1746  00005A  0E00               	movlw	high _received
  1747  00005C  20F4               	addwfc	prodh,w,c
  1748  00005E  6EDA               	movwf	fsr2h,c
  1749  000060  EC1A  F005         	call	_Receive	;wreg free
  1750  000064  6EDF               	movwf	indf2,c
  1751                           
  1752                           ;interrupt.c: 11: receive_counter++;
  1753  000066  2A44               	incf	_receive_counter,f,c
  1754                           
  1755                           ;interrupt.c: 13: if(received[0] == 0x02) {
  1756  000068  0E02               	movlw	2
  1757  00006A  1840               	xorwf	_received,w,c
  1758  00006C  A4D8               	btfss	status,2,c
  1759  00006E  D002               	goto	i2l380
  1760                           
  1761                           ;interrupt.c: 14: slave_addressed = 1;
  1762  000070  8245               	bsf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1763                           
  1764                           ;interrupt.c: 15: } else {
  1765  000072  D01B               	goto	i2l1781
  1766  000074                     i2l380:
  1767                           
  1768                           ;interrupt.c: 16: slave_addressed = 0;
  1769  000074  9245               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1770                           
  1771                           ;interrupt.c: 17: }
  1772                           ;interrupt.c: 18: } else if(slave_addressed == 1) {
  1773  000076  D019               	goto	i2l1781
  1774  000078                     i2l379:
  1775  000078  A245               	btfss	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1776  00007A  D015               	goto	i2l1779
  1777                           
  1778                           ;interrupt.c: 19: received[receive_counter] =
  1779                           ;interrupt.c: 20: Receive();
  1780  00007C  5044               	movf	_receive_counter,w,c
  1781  00007E  0D01               	mullw	1
  1782  000080  0E40               	movlw	low _received
  1783  000082  24F3               	addwf	prodl,w,c
  1784  000084  6ED9               	movwf	fsr2l,c
  1785  000086  0E00               	movlw	high _received
  1786  000088  20F4               	addwfc	prodh,w,c
  1787  00008A  6EDA               	movwf	fsr2h,c
  1788  00008C  EC1A  F005         	call	_Receive	;wreg free
  1789  000090  6EDF               	movwf	indf2,c
  1790                           
  1791                           ;interrupt.c: 21: receive_counter++;
  1792  000092  2A44               	incf	_receive_counter,f,c
  1793                           
  1794                           ;interrupt.c: 23: if(receive_counter > 3) {
  1795  000094  0E03               	movlw	3
  1796  000096  6444               	cpfsgt	_receive_counter,c
  1797  000098  D008               	goto	i2l1781
  1798                           
  1799                           ;interrupt.c: 24: receive_counter = 0;
  1800  00009A  0E00               	movlw	0
  1801  00009C  6E44               	movwf	_receive_counter,c
  1802                           
  1803                           ;interrupt.c: 25: slave_addressed = 0;
  1804  00009E  9245               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1805                           
  1806                           ;interrupt.c: 27: Evaluate_Reception();
  1807  0000A0  ECC9  F004         	call	_Evaluate_Reception	;wreg free
  1808                           
  1809                           ;interrupt.c: 28: }
  1810                           ;interrupt.c: 29: } else {
  1811  0000A4  D002               	goto	i2l1781
  1812  0000A6                     i2l1779:
  1813                           
  1814                           ;interrupt.c: 30: Receive_Dump();
  1815  0000A6  EC12  F005         	call	_Receive_Dump	;wreg free
  1816  0000AA                     i2l1781:
  1817                           
  1818                           ;interrupt.c: 31: }
  1819                           ;interrupt.c: 32: }
  1820                           ;interrupt.c: 33: if (PIR1bits.CCP1IF == 1) {
  1821  0000AA  A49E               	btfss	3998,2,c	;volatile
  1822  0000AC  D018               	goto	i2l389
  1823                           
  1824                           ;interrupt.c: 34: PIR1bits.CCP1IF = 0;
  1825  0000AE  949E               	bcf	3998,2,c	;volatile
  1826                           
  1827                           ;interrupt.c: 35: T1CONbits.TMR1ON = 0;
  1828  0000B0  90CD               	bcf	4045,0,c	;volatile
  1829                           
  1830                           ;interrupt.c: 36: TMR1H = 0;
  1831  0000B2  0E00               	movlw	0
  1832  0000B4  6ECF               	movwf	4047,c	;volatile
  1833                           
  1834                           ;interrupt.c: 37: TMR1L = 0;
  1835  0000B6  0E00               	movlw	0
  1836  0000B8  6ECE               	movwf	4046,c	;volatile
  1837                           
  1838                           ;interrupt.c: 38: for (unsigned char c = 0; c < 10; c++) {
  1839  0000BA  0E00               	movlw	0
  1840  0000BC  6E3F               	movwf	Isr@c,c
  1841  0000BE                     i2l1787:
  1842  0000BE  0E09               	movlw	9
  1843  0000C0  643F               	cpfsgt	Isr@c,c
  1844  0000C2  D001               	goto	i2l1791
  1845  0000C4  D00C               	goto	i2l389
  1846  0000C6                     i2l1791:
  1847                           
  1848                           ;interrupt.c: 39: Marker[c] = 0;
  1849  0000C6  503F               	movf	Isr@c,w,c
  1850  0000C8  0D01               	mullw	1
  1851  0000CA  0E60               	movlw	low _Marker
  1852  0000CC  24F3               	addwf	prodl,w,c
  1853  0000CE  6ED9               	movwf	fsr2l,c
  1854  0000D0  0E00               	movlw	high _Marker
  1855  0000D2  20F4               	addwfc	prodh,w,c
  1856  0000D4  6EDA               	movwf	fsr2h,c
  1857  0000D6  0E00               	movlw	0
  1858  0000D8  6EDF               	movwf	indf2,c
  1859  0000DA  2A3F               	incf	Isr@c,f,c
  1860  0000DC  D7F0               	goto	i2l1787
  1861  0000DE                     i2l389:
  1862  0000DE  C03E  FFF5         	movff	??_Isr+13,tablat
  1863  0000E2  C03D  FFF8         	movff	??_Isr+12,tblptru
  1864  0000E6  C03C  FFF7         	movff	??_Isr+11,tblptrh
  1865  0000EA  C03B  FFF6         	movff	??_Isr+10,tblptrl
  1866  0000EE  C03A  FFF4         	movff	??_Isr+9,prodh
  1867  0000F2  C039  FFF3         	movff	??_Isr+8,prodl
  1868  0000F6  C038  FFDA         	movff	??_Isr+7,fsr2h
  1869  0000FA  C037  FFD9         	movff	??_Isr+6,fsr2l
  1870  0000FE  C036  FFE2         	movff	??_Isr+5,fsr1h
  1871  000102  C035  FFE1         	movff	??_Isr+4,fsr1l
  1872  000106  C034  FFEA         	movff	??_Isr+3,fsr0h
  1873  00010A  C033  FFE9         	movff	??_Isr+2,fsr0l
  1874  00010E  C032  FFFB         	movff	??_Isr+1,pclatu
  1875  000112  C031  FFFA         	movff	??_Isr,pclath
  1876  000116  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1877  000118  0011               	retfie		f
  1878  00011A                     __end_of_Isr:
  1879                           	opt stack 0
  1880                           pclatu	equ	0xFFB
  1881                           pclath	equ	0xFFA
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           prodh	equ	0xFF4
  1887                           prodl	equ	0xFF3
  1888                           intcon	equ	0xFF2
  1889                           postinc0	equ	0xFEE
  1890                           fsr0h	equ	0xFEA
  1891                           fsr0l	equ	0xFE9
  1892                           wreg	equ	0xFE8
  1893                           fsr1h	equ	0xFE2
  1894                           fsr1l	equ	0xFE1
  1895                           indf2	equ	0xFDF
  1896                           postinc2	equ	0xFDE
  1897                           fsr2h	equ	0xFDA
  1898                           fsr2l	equ	0xFD9
  1899                           status	equ	0xFD8
  1900                           
  1901 ;; *************** function _Receive_Dump *****************
  1902 ;; Defined at:
  1903 ;;		line 59 in file "communication.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  dump            1    0[COMRAM] unsigned char 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;		None               void
  1910 ;; Registers used:
  1911 ;;		None
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1917 ;;      Params:         0       0       0       0
  1918 ;;      Locals:         1       0       0       0
  1919 ;;      Temps:          0       0       0       0
  1920 ;;      Totals:         1       0       0       0
  1921 ;;Total ram usage:        1 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; This function calls:
  1924 ;;		Nothing
  1925 ;; This function is called by:
  1926 ;;		_Isr
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text15
  1931  000A24                     __ptext15:
  1932                           	opt stack 0
  1933  000A24                     _Receive_Dump:
  1934                           	opt stack 27
  1935                           
  1936                           ;communication.c: 60: unsigned char dump;
  1937                           ;communication.c: 61: if(RCSTA1bits.OERR == 1) {
  1938                           
  1939                           ;incstack = 0
  1940  000A24  A2AB               	btfss	4011,1,c	;volatile
  1941  000A26  D003               	goto	i2l83
  1942                           
  1943                           ;communication.c: 62: RCSTA1bits.CREN = 0;
  1944  000A28  98AB               	bcf	4011,4,c	;volatile
  1945                           
  1946                           ;communication.c: 63: RCSTA1bits.CREN = 1;
  1947  000A2A  88AB               	bsf	4011,4,c	;volatile
  1948                           
  1949                           ;communication.c: 64: overrun = 1;
  1950  000A2C  8045               	bsf	_overrun/(0+8),_overrun& (0+7),c
  1951  000A2E                     i2l83:
  1952                           
  1953                           ;communication.c: 65: }
  1954                           ;communication.c: 66: dump = RCREG1;
  1955  000A2E  CFAE F001          	movff	4014,Receive_Dump@dump	;volatile
  1956  000A32  0012               	return		;funcret
  1957  000A34                     __end_of_Receive_Dump:
  1958                           	opt stack 0
  1959                           pclatu	equ	0xFFB
  1960                           pclath	equ	0xFFA
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           prodh	equ	0xFF4
  1966                           prodl	equ	0xFF3
  1967                           intcon	equ	0xFF2
  1968                           postinc0	equ	0xFEE
  1969                           fsr0h	equ	0xFEA
  1970                           fsr0l	equ	0xFE9
  1971                           wreg	equ	0xFE8
  1972                           fsr1h	equ	0xFE2
  1973                           fsr1l	equ	0xFE1
  1974                           indf2	equ	0xFDF
  1975                           postinc2	equ	0xFDE
  1976                           fsr2h	equ	0xFDA
  1977                           fsr2l	equ	0xFD9
  1978                           status	equ	0xFD8
  1979                           
  1980 ;; *************** function _Receive *****************
  1981 ;; Defined at:
  1982 ;;		line 50 in file "communication.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      unsigned char 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1996 ;;      Params:         0       0       0       0
  1997 ;;      Locals:         0       0       0       0
  1998 ;;      Temps:          0       0       0       0
  1999 ;;      Totals:         0       0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_Isr
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text16
  2010  000A34                     __ptext16:
  2011                           	opt stack 0
  2012  000A34                     _Receive:
  2013                           	opt stack 27
  2014                           
  2015                           ;communication.c: 51: if(RCSTA1bits.OERR == 1) {
  2016                           
  2017                           ;incstack = 0
  2018  000A34  A2AB               	btfss	4011,1,c	;volatile
  2019  000A36  D003               	goto	i2l1733
  2020                           
  2021                           ;communication.c: 52: RCSTA1bits.CREN = 0;
  2022  000A38  98AB               	bcf	4011,4,c	;volatile
  2023                           
  2024                           ;communication.c: 53: RCSTA1bits.CREN = 1;
  2025  000A3A  88AB               	bsf	4011,4,c	;volatile
  2026                           
  2027                           ;communication.c: 54: overrun = 1;
  2028  000A3C  8045               	bsf	_overrun/(0+8),_overrun& (0+7),c
  2029  000A3E                     i2l1733:
  2030                           
  2031                           ;communication.c: 55: }
  2032                           ;communication.c: 56: return (RCREG1);
  2033  000A3E  50AE               	movf	4014,w,c	;volatile
  2034  000A40  0012               	return	
  2035  000A42                     __end_of_Receive:
  2036                           	opt stack 0
  2037                           pclatu	equ	0xFFB
  2038                           pclath	equ	0xFFA
  2039                           tblptru	equ	0xFF8
  2040                           tblptrh	equ	0xFF7
  2041                           tblptrl	equ	0xFF6
  2042                           tablat	equ	0xFF5
  2043                           prodh	equ	0xFF4
  2044                           prodl	equ	0xFF3
  2045                           intcon	equ	0xFF2
  2046                           postinc0	equ	0xFEE
  2047                           fsr0h	equ	0xFEA
  2048                           fsr0l	equ	0xFE9
  2049                           wreg	equ	0xFE8
  2050                           fsr1h	equ	0xFE2
  2051                           fsr1l	equ	0xFE1
  2052                           indf2	equ	0xFDF
  2053                           postinc2	equ	0xFDE
  2054                           fsr2h	equ	0xFDA
  2055                           fsr2l	equ	0xFD9
  2056                           status	equ	0xFD8
  2057                           
  2058 ;; *************** function _Evaluate_Reception *****************
  2059 ;; Defined at:
  2060 ;;		line 189 in file "ignition.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;		None               void
  2067 ;; Registers used:
  2068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2074 ;;      Params:         0       0       0       0
  2075 ;;      Locals:         0       0       0       0
  2076 ;;      Temps:          0       0       0       0
  2077 ;;      Totals:         0       0       0       0
  2078 ;;Total ram usage:        0 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    3
  2081 ;; This function calls:
  2082 ;;		_Check_Power
  2083 ;;		_Mark_Ignite
  2084 ;;		_Test_Port
  2085 ;; This function is called by:
  2086 ;;		_Isr
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text17
  2091  000992                     __ptext17:
  2092                           	opt stack 0
  2093  000992                     _Evaluate_Reception:
  2094                           	opt stack 24
  2095                           
  2096                           ;ignition.c: 195: if (received[2] == 'T') {
  2097                           
  2098                           ;incstack = 0
  2099  000992  0E54               	movlw	84
  2100  000994  1842               	xorwf	_received+2,w,c
  2101  000996  A4D8               	btfss	status,2,c
  2102  000998  D005               	goto	i2l1745
  2103                           
  2104                           ;ignition.c: 196: Check_Power();
  2105  00099A  EC8D  F002         	call	_Check_Power	;wreg free
  2106                           
  2107                           ;ignition.c: 197: Test_Port();
  2108  00099E  EC8F  F000         	call	_Test_Port	;wreg free
  2109                           
  2110                           ;ignition.c: 198: } else if (received[2] == 'I') {
  2111  0009A2  0012               	return	
  2112  0009A4                     i2l1745:
  2113  0009A4  0E49               	movlw	73
  2114  0009A6  1842               	xorwf	_received+2,w,c
  2115  0009A8  A4D8               	btfss	status,2,c
  2116  0009AA  0012               	return	
  2117                           
  2118                           ;ignition.c: 199: Mark_Ignite();
  2119  0009AC  ECFD  F004         	call	_Mark_Ignite	;wreg free
  2120  0009B0  0012               	return	
  2121  0009B2                     __end_of_Evaluate_Reception:
  2122                           	opt stack 0
  2123                           pclatu	equ	0xFFB
  2124                           pclath	equ	0xFFA
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           prodh	equ	0xFF4
  2130                           prodl	equ	0xFF3
  2131                           intcon	equ	0xFF2
  2132                           postinc0	equ	0xFEE
  2133                           fsr0h	equ	0xFEA
  2134                           fsr0l	equ	0xFE9
  2135                           wreg	equ	0xFE8
  2136                           fsr1h	equ	0xFE2
  2137                           fsr1l	equ	0xFE1
  2138                           indf2	equ	0xFDF
  2139                           postinc2	equ	0xFDE
  2140                           fsr2h	equ	0xFDA
  2141                           fsr2l	equ	0xFD9
  2142                           status	equ	0xFD8
  2143                           
  2144 ;; *************** function _Test_Port *****************
  2145 ;; Defined at:
  2146 ;;		line 11 in file "ignition.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;		None               void
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2160 ;;      Params:         0       0       0       0
  2161 ;;      Locals:         0       0       0       0
  2162 ;;      Temps:          0       0       0       0
  2163 ;;      Totals:         0       0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    1
  2167 ;; This function calls:
  2168 ;;		_Transmit
  2169 ;; This function is called by:
  2170 ;;		_Evaluate_Reception
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text18
  2175  00011E                     __ptext18:
  2176                           	opt stack 0
  2177  00011E                     _Test_Port:
  2178                           	opt stack 25
  2179                           
  2180                           ;ignition.c: 12: switch(received[3]) {
  2181                           
  2182                           ;incstack = 0
  2183  00011E  D0F0               	goto	i2l1677
  2184  000120                     i2l249:
  2185                           
  2186                           ;ignition.c: 14: if(PORTCbits.RC4 == 1) {
  2187  000120  A882               	btfss	3970,4,c	;volatile
  2188  000122  D00A               	goto	i2l250
  2189                           
  2190                           ;ignition.c: 15: Transmit(0xAA, 'T', 0, '1');
  2191  000124  0E54               	movlw	84
  2192  000126  6E01               	movwf	Transmit@operation,c
  2193  000128  0E00               	movlw	0
  2194  00012A  6E02               	movwf	Transmit@port,c
  2195  00012C  0E31               	movlw	49
  2196  00012E  6E03               	movwf	Transmit@con_status,c
  2197  000130  0EAA               	movlw	170
  2198  000132  EC0A  F004         	call	_Transmit
  2199                           
  2200                           ;ignition.c: 16: }else if(PORTCbits.RC4 == 0) {
  2201  000136  0012               	return	
  2202  000138                     i2l250:
  2203  000138  B882               	btfsc	3970,4,c	;volatile
  2204  00013A  0012               	return	
  2205                           
  2206                           ;ignition.c: 17: Transmit(0xAA, 'T', 0, '0');
  2207  00013C  0E54               	movlw	84
  2208  00013E  6E01               	movwf	Transmit@operation,c
  2209  000140  0E00               	movlw	0
  2210  000142  6E02               	movwf	Transmit@port,c
  2211  000144  0E30               	movlw	48
  2212  000146  6E03               	movwf	Transmit@con_status,c
  2213  000148  0EAA               	movlw	170
  2214  00014A  EC0A  F004         	call	_Transmit
  2215                           
  2216                           ;ignition.c: 18: }
  2217                           ;ignition.c: 19: break;
  2218  00014E  0012               	return	
  2219  000150                     i2l254:
  2220                           
  2221                           ;ignition.c: 21: if(PORTDbits.RD2 == 1) {
  2222  000150  A483               	btfss	3971,2,c	;volatile
  2223  000152  D00A               	goto	i2l255
  2224                           
  2225                           ;ignition.c: 22: Transmit(0xAA, 'T', 1, '1');
  2226  000154  0E54               	movlw	84
  2227  000156  6E01               	movwf	Transmit@operation,c
  2228  000158  0E01               	movlw	1
  2229  00015A  6E02               	movwf	Transmit@port,c
  2230  00015C  0E31               	movlw	49
  2231  00015E  6E03               	movwf	Transmit@con_status,c
  2232  000160  0EAA               	movlw	170
  2233  000162  EC0A  F004         	call	_Transmit
  2234                           
  2235                           ;ignition.c: 23: }else if(PORTDbits.RD2 == 0) {
  2236  000166  0012               	return	
  2237  000168                     i2l255:
  2238  000168  B483               	btfsc	3971,2,c	;volatile
  2239  00016A  0012               	return	
  2240                           
  2241                           ;ignition.c: 24: Transmit(0xAA, 'T', 1, '0');
  2242  00016C  0E54               	movlw	84
  2243  00016E  6E01               	movwf	Transmit@operation,c
  2244  000170  0E01               	movlw	1
  2245  000172  6E02               	movwf	Transmit@port,c
  2246  000174  0E30               	movlw	48
  2247  000176  6E03               	movwf	Transmit@con_status,c
  2248  000178  0EAA               	movlw	170
  2249  00017A  EC0A  F004         	call	_Transmit
  2250                           
  2251                           ;ignition.c: 25: }
  2252                           ;ignition.c: 26: break;
  2253  00017E  0012               	return	
  2254  000180                     i2l258:
  2255                           
  2256                           ;ignition.c: 28: if(PORTDbits.RD0 == 1) {
  2257  000180  A083               	btfss	3971,0,c	;volatile
  2258  000182  D00A               	goto	i2l259
  2259                           
  2260                           ;ignition.c: 29: Transmit(0xAA, 'T', 2, '1');
  2261  000184  0E54               	movlw	84
  2262  000186  6E01               	movwf	Transmit@operation,c
  2263  000188  0E02               	movlw	2
  2264  00018A  6E02               	movwf	Transmit@port,c
  2265  00018C  0E31               	movlw	49
  2266  00018E  6E03               	movwf	Transmit@con_status,c
  2267  000190  0EAA               	movlw	170
  2268  000192  EC0A  F004         	call	_Transmit
  2269                           
  2270                           ;ignition.c: 30: }else if(PORTDbits.RD0 == 0) {
  2271  000196  0012               	return	
  2272  000198                     i2l259:
  2273  000198  B083               	btfsc	3971,0,c	;volatile
  2274  00019A  0012               	return	
  2275                           
  2276                           ;ignition.c: 31: Transmit(0xAA, 'T', 2, '0');
  2277  00019C  0E54               	movlw	84
  2278  00019E  6E01               	movwf	Transmit@operation,c
  2279  0001A0  0E02               	movlw	2
  2280  0001A2  6E02               	movwf	Transmit@port,c
  2281  0001A4  0E30               	movlw	48
  2282  0001A6  6E03               	movwf	Transmit@con_status,c
  2283  0001A8  0EAA               	movlw	170
  2284  0001AA  EC0A  F004         	call	_Transmit
  2285                           
  2286                           ;ignition.c: 32: }
  2287                           ;ignition.c: 33: break;
  2288  0001AE  0012               	return	
  2289  0001B0                     i2l262:
  2290                           
  2291                           ;ignition.c: 35: if(PORTCbits.RC2 == 1) {
  2292  0001B0  A482               	btfss	3970,2,c	;volatile
  2293  0001B2  D00A               	goto	i2l263
  2294                           
  2295                           ;ignition.c: 36: Transmit(0xAA, 'T', 3, '1');
  2296  0001B4  0E54               	movlw	84
  2297  0001B6  6E01               	movwf	Transmit@operation,c
  2298  0001B8  0E03               	movlw	3
  2299  0001BA  6E02               	movwf	Transmit@port,c
  2300  0001BC  0E31               	movlw	49
  2301  0001BE  6E03               	movwf	Transmit@con_status,c
  2302  0001C0  0EAA               	movlw	170
  2303  0001C2  EC0A  F004         	call	_Transmit
  2304                           
  2305                           ;ignition.c: 37: }else if(PORTCbits.RC2 == 0) {
  2306  0001C6  0012               	return	
  2307  0001C8                     i2l263:
  2308  0001C8  B482               	btfsc	3970,2,c	;volatile
  2309  0001CA  0012               	return	
  2310                           
  2311                           ;ignition.c: 38: Transmit(0xAA, 'T', 3, '0');
  2312  0001CC  0E54               	movlw	84
  2313  0001CE  6E01               	movwf	Transmit@operation,c
  2314  0001D0  0E03               	movlw	3
  2315  0001D2  6E02               	movwf	Transmit@port,c
  2316  0001D4  0E30               	movlw	48
  2317  0001D6  6E03               	movwf	Transmit@con_status,c
  2318  0001D8  0EAA               	movlw	170
  2319  0001DA  EC0A  F004         	call	_Transmit
  2320                           
  2321                           ;ignition.c: 39: }
  2322                           ;ignition.c: 40: break;
  2323  0001DE  0012               	return	
  2324  0001E0                     i2l266:
  2325                           
  2326                           ;ignition.c: 42: if(PORTEbits.RE2 == 1) {
  2327  0001E0  A484               	btfss	3972,2,c	;volatile
  2328  0001E2  D00A               	goto	i2l267
  2329                           
  2330                           ;ignition.c: 43: Transmit(0xAA, 'T', 4, '1');
  2331  0001E4  0E54               	movlw	84
  2332  0001E6  6E01               	movwf	Transmit@operation,c
  2333  0001E8  0E04               	movlw	4
  2334  0001EA  6E02               	movwf	Transmit@port,c
  2335  0001EC  0E31               	movlw	49
  2336  0001EE  6E03               	movwf	Transmit@con_status,c
  2337  0001F0  0EAA               	movlw	170
  2338  0001F2  EC0A  F004         	call	_Transmit
  2339                           
  2340                           ;ignition.c: 44: }else if(PORTEbits.RE2 == 0) {
  2341  0001F6  0012               	return	
  2342  0001F8                     i2l267:
  2343  0001F8  B484               	btfsc	3972,2,c	;volatile
  2344  0001FA  0012               	return	
  2345                           
  2346                           ;ignition.c: 45: Transmit(0xAA, 'T', 4, '0');
  2347  0001FC  0E54               	movlw	84
  2348  0001FE  6E01               	movwf	Transmit@operation,c
  2349  000200  0E04               	movlw	4
  2350  000202  6E02               	movwf	Transmit@port,c
  2351  000204  0E30               	movlw	48
  2352  000206  6E03               	movwf	Transmit@con_status,c
  2353  000208  0EAA               	movlw	170
  2354  00020A  EC0A  F004         	call	_Transmit
  2355                           
  2356                           ;ignition.c: 46: }
  2357                           ;ignition.c: 47: break;
  2358  00020E  0012               	return	
  2359  000210                     i2l270:
  2360                           
  2361                           ;ignition.c: 49: if(PORTEbits.RE0 == 1) {
  2362  000210  A084               	btfss	3972,0,c	;volatile
  2363  000212  D00A               	goto	i2l271
  2364                           
  2365                           ;ignition.c: 50: Transmit(0xAA, 'T', 5, '1');
  2366  000214  0E54               	movlw	84
  2367  000216  6E01               	movwf	Transmit@operation,c
  2368  000218  0E05               	movlw	5
  2369  00021A  6E02               	movwf	Transmit@port,c
  2370  00021C  0E31               	movlw	49
  2371  00021E  6E03               	movwf	Transmit@con_status,c
  2372  000220  0EAA               	movlw	170
  2373  000222  EC0A  F004         	call	_Transmit
  2374                           
  2375                           ;ignition.c: 51: }else if(PORTEbits.RE0 == 0) {
  2376  000226  0012               	return	
  2377  000228                     i2l271:
  2378  000228  B084               	btfsc	3972,0,c	;volatile
  2379  00022A  0012               	return	
  2380                           
  2381                           ;ignition.c: 52: Transmit(0xAA, 'T', 5, '0');
  2382  00022C  0E54               	movlw	84
  2383  00022E  6E01               	movwf	Transmit@operation,c
  2384  000230  0E05               	movlw	5
  2385  000232  6E02               	movwf	Transmit@port,c
  2386  000234  0E30               	movlw	48
  2387  000236  6E03               	movwf	Transmit@con_status,c
  2388  000238  0EAA               	movlw	170
  2389  00023A  EC0A  F004         	call	_Transmit
  2390                           
  2391                           ;ignition.c: 53: }
  2392                           ;ignition.c: 54: break;
  2393  00023E  0012               	return	
  2394  000240                     i2l274:
  2395                           
  2396                           ;ignition.c: 56: if(PORTBbits.RB2 == 1) {
  2397  000240  A481               	btfss	3969,2,c	;volatile
  2398  000242  D00A               	goto	i2l275
  2399                           
  2400                           ;ignition.c: 57: Transmit(0xAA, 'T', 6, '1');
  2401  000244  0E54               	movlw	84
  2402  000246  6E01               	movwf	Transmit@operation,c
  2403  000248  0E06               	movlw	6
  2404  00024A  6E02               	movwf	Transmit@port,c
  2405  00024C  0E31               	movlw	49
  2406  00024E  6E03               	movwf	Transmit@con_status,c
  2407  000250  0EAA               	movlw	170
  2408  000252  EC0A  F004         	call	_Transmit
  2409                           
  2410                           ;ignition.c: 58: }else if(PORTBbits.RB2 == 0) {
  2411  000256  0012               	return	
  2412  000258                     i2l275:
  2413  000258  B481               	btfsc	3969,2,c	;volatile
  2414  00025A  0012               	return	
  2415                           
  2416                           ;ignition.c: 59: Transmit(0xAA, 'T', 6, '0');
  2417  00025C  0E54               	movlw	84
  2418  00025E  6E01               	movwf	Transmit@operation,c
  2419  000260  0E06               	movlw	6
  2420  000262  6E02               	movwf	Transmit@port,c
  2421  000264  0E30               	movlw	48
  2422  000266  6E03               	movwf	Transmit@con_status,c
  2423  000268  0EAA               	movlw	170
  2424  00026A  EC0A  F004         	call	_Transmit
  2425                           
  2426                           ;ignition.c: 60: }
  2427                           ;ignition.c: 61: break;
  2428  00026E  0012               	return	
  2429  000270                     i2l278:
  2430                           
  2431                           ;ignition.c: 63: if(PORTBbits.RB4 == 1) {
  2432  000270  A881               	btfss	3969,4,c	;volatile
  2433  000272  D00A               	goto	i2l279
  2434                           
  2435                           ;ignition.c: 64: Transmit(0xAA, 'T', 7, '1');
  2436  000274  0E54               	movlw	84
  2437  000276  6E01               	movwf	Transmit@operation,c
  2438  000278  0E07               	movlw	7
  2439  00027A  6E02               	movwf	Transmit@port,c
  2440  00027C  0E31               	movlw	49
  2441  00027E  6E03               	movwf	Transmit@con_status,c
  2442  000280  0EAA               	movlw	170
  2443  000282  EC0A  F004         	call	_Transmit
  2444                           
  2445                           ;ignition.c: 65: }else if(PORTBbits.RB4 == 0) {
  2446  000286  0012               	return	
  2447  000288                     i2l279:
  2448  000288  B881               	btfsc	3969,4,c	;volatile
  2449  00028A  0012               	return	
  2450                           
  2451                           ;ignition.c: 66: Transmit(0xAA, 'T', 7, '0');
  2452  00028C  0E54               	movlw	84
  2453  00028E  6E01               	movwf	Transmit@operation,c
  2454  000290  0E07               	movlw	7
  2455  000292  6E02               	movwf	Transmit@port,c
  2456  000294  0E30               	movlw	48
  2457  000296  6E03               	movwf	Transmit@con_status,c
  2458  000298  0EAA               	movlw	170
  2459  00029A  EC0A  F004         	call	_Transmit
  2460                           
  2461                           ;ignition.c: 67: }
  2462                           ;ignition.c: 68: break;
  2463  00029E  0012               	return	
  2464  0002A0                     i2l282:
  2465                           
  2466                           ;ignition.c: 70: if(PORTAbits.RA2 == 1) {
  2467  0002A0  A480               	btfss	3968,2,c	;volatile
  2468  0002A2  D00A               	goto	i2l283
  2469                           
  2470                           ;ignition.c: 71: Transmit(0xAA, 'T', 8, '1');
  2471  0002A4  0E54               	movlw	84
  2472  0002A6  6E01               	movwf	Transmit@operation,c
  2473  0002A8  0E08               	movlw	8
  2474  0002AA  6E02               	movwf	Transmit@port,c
  2475  0002AC  0E31               	movlw	49
  2476  0002AE  6E03               	movwf	Transmit@con_status,c
  2477  0002B0  0EAA               	movlw	170
  2478  0002B2  EC0A  F004         	call	_Transmit
  2479                           
  2480                           ;ignition.c: 72: }else if(PORTAbits.RA2 == 0) {
  2481  0002B6  0012               	return	
  2482  0002B8                     i2l283:
  2483  0002B8  B480               	btfsc	3968,2,c	;volatile
  2484  0002BA  0012               	return	
  2485                           
  2486                           ;ignition.c: 73: Transmit(0xAA, 'T', 8, '0');
  2487  0002BC  0E54               	movlw	84
  2488  0002BE  6E01               	movwf	Transmit@operation,c
  2489  0002C0  0E08               	movlw	8
  2490  0002C2  6E02               	movwf	Transmit@port,c
  2491  0002C4  0E30               	movlw	48
  2492  0002C6  6E03               	movwf	Transmit@con_status,c
  2493  0002C8  0EAA               	movlw	170
  2494  0002CA  EC0A  F004         	call	_Transmit
  2495                           
  2496                           ;ignition.c: 74: }
  2497                           ;ignition.c: 75: break;
  2498  0002CE  0012               	return	
  2499  0002D0                     i2l286:
  2500                           
  2501                           ;ignition.c: 77: if(PORTAbits.RA0 == 1) {
  2502  0002D0  A080               	btfss	3968,0,c	;volatile
  2503  0002D2  D00A               	goto	i2l287
  2504                           
  2505                           ;ignition.c: 78: Transmit(0xAA, 'T', 9, '1');
  2506  0002D4  0E54               	movlw	84
  2507  0002D6  6E01               	movwf	Transmit@operation,c
  2508  0002D8  0E09               	movlw	9
  2509  0002DA  6E02               	movwf	Transmit@port,c
  2510  0002DC  0E31               	movlw	49
  2511  0002DE  6E03               	movwf	Transmit@con_status,c
  2512  0002E0  0EAA               	movlw	170
  2513  0002E2  EC0A  F004         	call	_Transmit
  2514                           
  2515                           ;ignition.c: 79: }else if(PORTAbits.RA0 == 0) {
  2516  0002E6  0012               	return	
  2517  0002E8                     i2l287:
  2518  0002E8  B080               	btfsc	3968,0,c	;volatile
  2519  0002EA  0012               	return	
  2520                           
  2521                           ;ignition.c: 80: Transmit(0xAA, 'T', 9, '0');
  2522  0002EC  0E54               	movlw	84
  2523  0002EE  6E01               	movwf	Transmit@operation,c
  2524  0002F0  0E09               	movlw	9
  2525  0002F2  6E02               	movwf	Transmit@port,c
  2526  0002F4  0E30               	movlw	48
  2527  0002F6  6E03               	movwf	Transmit@con_status,c
  2528  0002F8  0EAA               	movlw	170
  2529  0002FA  EC0A  F004         	call	_Transmit
  2530                           
  2531                           ;ignition.c: 83: }
  2532                           
  2533                           ;ignition.c: 81: }
  2534                           ;ignition.c: 82: break;
  2535  0002FE  0012               	return	
  2536  000300                     i2l1677:
  2537  000300  5043               	movf	_received+3,w,c
  2538                           
  2539                           ; Switch size 1, requested type "space"
  2540                           ; Number of cases is 10, Range of values is 0 to 9
  2541                           ; switch strategies available:
  2542                           ; Name         Instructions Cycles
  2543                           ; simple_byte           31    16 (average)
  2544                           ;	Chosen strategy is simple_byte
  2545  000302  0A00               	xorlw	0	; case 0
  2546  000304  B4D8               	btfsc	status,2,c
  2547  000306  D70C               	goto	i2l249
  2548  000308  0A01               	xorlw	1	; case 1
  2549  00030A  B4D8               	btfsc	status,2,c
  2550  00030C  D721               	goto	i2l254
  2551  00030E  0A03               	xorlw	3	; case 2
  2552  000310  B4D8               	btfsc	status,2,c
  2553  000312  D736               	goto	i2l258
  2554  000314  0A01               	xorlw	1	; case 3
  2555  000316  B4D8               	btfsc	status,2,c
  2556  000318  D74B               	goto	i2l262
  2557  00031A  0A07               	xorlw	7	; case 4
  2558  00031C  B4D8               	btfsc	status,2,c
  2559  00031E  D760               	goto	i2l266
  2560  000320  0A01               	xorlw	1	; case 5
  2561  000322  B4D8               	btfsc	status,2,c
  2562  000324  D775               	goto	i2l270
  2563  000326  0A03               	xorlw	3	; case 6
  2564  000328  B4D8               	btfsc	status,2,c
  2565  00032A  D78A               	goto	i2l274
  2566  00032C  0A01               	xorlw	1	; case 7
  2567  00032E  B4D8               	btfsc	status,2,c
  2568  000330  D79F               	goto	i2l278
  2569  000332  0A0F               	xorlw	15	; case 8
  2570  000334  B4D8               	btfsc	status,2,c
  2571  000336  D7B4               	goto	i2l282
  2572  000338  0A01               	xorlw	1	; case 9
  2573  00033A  A4D8               	btfss	status,2,c
  2574  00033C  0012               	return	
  2575  00033E  D7C8               	goto	i2l286
  2576  000340                     __end_of_Test_Port:
  2577                           	opt stack 0
  2578                           pclatu	equ	0xFFB
  2579                           pclath	equ	0xFFA
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           prodh	equ	0xFF4
  2585                           prodl	equ	0xFF3
  2586                           intcon	equ	0xFF2
  2587                           postinc0	equ	0xFEE
  2588                           fsr0h	equ	0xFEA
  2589                           fsr0l	equ	0xFE9
  2590                           wreg	equ	0xFE8
  2591                           fsr1h	equ	0xFE2
  2592                           fsr1l	equ	0xFE1
  2593                           indf2	equ	0xFDF
  2594                           postinc2	equ	0xFDE
  2595                           fsr2h	equ	0xFDA
  2596                           fsr2l	equ	0xFD9
  2597                           status	equ	0xFD8
  2598                           
  2599 ;; *************** function _Transmit *****************
  2600 ;; Defined at:
  2601 ;;		line 18 in file "communication.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  receiver        1    wreg     unsigned char 
  2604 ;;  operation       1    0[COMRAM] unsigned char 
  2605 ;;  port            1    1[COMRAM] unsigned char 
  2606 ;;  con_status      1    2[COMRAM] unsigned char 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;  receiver        1    3[COMRAM] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;		None               void
  2611 ;; Registers used:
  2612 ;;		wreg, status,2
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2618 ;;      Params:         3       0       0       0
  2619 ;;      Locals:         1       0       0       0
  2620 ;;      Temps:          0       0       0       0
  2621 ;;      Totals:         4       0       0       0
  2622 ;;Total ram usage:        4 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; This function calls:
  2625 ;;		Nothing
  2626 ;; This function is called by:
  2627 ;;		_Test_Port
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text19
  2632  000814                     __ptext19:
  2633                           	opt stack 0
  2634  000814                     _Transmit:
  2635                           	opt stack 25
  2636                           
  2637                           ;incstack = 0
  2638                           ;Transmit@receiver stored from wreg
  2639  000814  6E04               	movwf	Transmit@receiver,c
  2640                           
  2641                           ;communication.c: 20: PORTDbits.RD4 = 1;
  2642  000816  8883               	bsf	3971,4,c	;volatile
  2643                           
  2644                           ;communication.c: 21: RCSTA1bits.CREN = 0;
  2645  000818  98AB               	bcf	4011,4,c	;volatile
  2646                           
  2647                           ;communication.c: 23: __nop();
  2648  00081A  F000               	nop	
  2649  00081C                     i2l55:
  2650  00081C  A89E               	btfss	3998,4,c	;volatile
  2651  00081E  D7FE               	goto	i2l55
  2652                           
  2653                           ;communication.c: 25: TXSTA1bits.TX9D = 1;
  2654  000820  80AC               	bsf	4012,0,c	;volatile
  2655                           
  2656                           ;communication.c: 26: TXREG1 = receiver;
  2657  000822  C004  FFAD         	movff	Transmit@receiver,4013	;volatile
  2658  000826                     i2l58:
  2659  000826  A89E               	btfss	3998,4,c	;volatile
  2660  000828  D7FE               	goto	i2l58
  2661                           
  2662                           ;communication.c: 28: TXSTA1bits.TX9D = 0;
  2663  00082A  90AC               	bcf	4012,0,c	;volatile
  2664                           
  2665                           ;communication.c: 29: _delay((unsigned long)((1)*(4000000/4000.0)));
  2666  00082C  0EFA               	movlw	250
  2667  00082E                     i2u139_47:
  2668  00082E  F000               	nop	
  2669  000830  2EE8               	decfsz	wreg,f,c
  2670  000832  D7FD               	goto	i2u139_47
  2671                           
  2672                           ;communication.c: 30: TXREG1 = 0x02;
  2673  000834  0E02               	movlw	2
  2674  000836  6EAD               	movwf	4013,c	;volatile
  2675  000838                     i2l61:
  2676  000838  A89E               	btfss	3998,4,c	;volatile
  2677  00083A  D7FE               	goto	i2l61
  2678                           
  2679                           ;communication.c: 32: _delay((unsigned long)((1)*(4000000/4000.0)));
  2680  00083C  0EFA               	movlw	250
  2681  00083E                     i2u140_47:
  2682  00083E  F000               	nop	
  2683  000840  2EE8               	decfsz	wreg,f,c
  2684  000842  D7FD               	goto	i2u140_47
  2685                           
  2686                           ;communication.c: 33: TXREG1 = operation;
  2687  000844  C001  FFAD         	movff	Transmit@operation,4013	;volatile
  2688  000848                     i2l64:
  2689  000848  A89E               	btfss	3998,4,c	;volatile
  2690  00084A  D7FE               	goto	i2l64
  2691                           
  2692                           ;communication.c: 35: _delay((unsigned long)((1)*(4000000/4000.0)));
  2693  00084C  0EFA               	movlw	250
  2694  00084E                     i2u141_47:
  2695  00084E  F000               	nop	
  2696  000850  2EE8               	decfsz	wreg,f,c
  2697  000852  D7FD               	goto	i2u141_47
  2698                           
  2699                           ;communication.c: 36: TXREG1 = port;
  2700  000854  C002  FFAD         	movff	Transmit@port,4013	;volatile
  2701  000858                     i2l67:
  2702  000858  A89E               	btfss	3998,4,c	;volatile
  2703  00085A  D7FE               	goto	i2l67
  2704                           
  2705                           ;communication.c: 38: _delay((unsigned long)((1)*(4000000/4000.0)));
  2706  00085C  0EFA               	movlw	250
  2707  00085E                     i2u142_47:
  2708  00085E  F000               	nop	
  2709  000860  2EE8               	decfsz	wreg,f,c
  2710  000862  D7FD               	goto	i2u142_47
  2711                           
  2712                           ;communication.c: 39: TXREG1 = con_status;
  2713  000864  C003  FFAD         	movff	Transmit@con_status,4013	;volatile
  2714  000868                     i2l70:
  2715  000868  A89E               	btfss	3998,4,c	;volatile
  2716  00086A  D7FE               	goto	i2l70
  2717                           
  2718                           ;communication.c: 41: _delay((unsigned long)((1)*(4000000/4000.0)));
  2719  00086C  0EFA               	movlw	250
  2720  00086E                     i2u143_47:
  2721  00086E  F000               	nop	
  2722  000870  2EE8               	decfsz	wreg,f,c
  2723  000872  D7FD               	goto	i2u143_47
  2724                           
  2725                           ;communication.c: 42: TXREG1 = p_status;
  2726  000874  C046  FFAD         	movff	_p_status,4013	;volatile
  2727  000878                     i2l73:
  2728  000878  A2AC               	btfss	4012,1,c	;volatile
  2729  00087A  D7FE               	goto	i2l73
  2730                           
  2731                           ;communication.c: 44: PORTDbits.RD4 = 0;
  2732  00087C  9883               	bcf	3971,4,c	;volatile
  2733                           
  2734                           ;communication.c: 45: RCSTA1bits.CREN = 1;
  2735  00087E  88AB               	bsf	4011,4,c	;volatile
  2736                           
  2737                           ;communication.c: 46: __nop();
  2738  000880  F000               	nop	
  2739  000882  0012               	return		;funcret
  2740  000884                     __end_of_Transmit:
  2741                           	opt stack 0
  2742                           pclatu	equ	0xFFB
  2743                           pclath	equ	0xFFA
  2744                           tblptru	equ	0xFF8
  2745                           tblptrh	equ	0xFF7
  2746                           tblptrl	equ	0xFF6
  2747                           tablat	equ	0xFF5
  2748                           prodh	equ	0xFF4
  2749                           prodl	equ	0xFF3
  2750                           intcon	equ	0xFF2
  2751                           postinc0	equ	0xFEE
  2752                           fsr0h	equ	0xFEA
  2753                           fsr0l	equ	0xFE9
  2754                           wreg	equ	0xFE8
  2755                           fsr1h	equ	0xFE2
  2756                           fsr1l	equ	0xFE1
  2757                           indf2	equ	0xFDF
  2758                           postinc2	equ	0xFDE
  2759                           fsr2h	equ	0xFDA
  2760                           fsr2l	equ	0xFD9
  2761                           status	equ	0xFD8
  2762                           
  2763 ;; *************** function _Mark_Ignite *****************
  2764 ;; Defined at:
  2765 ;;		line 167 in file "ignition.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;		None
  2770 ;; Return value:  Size  Location     Type
  2771 ;;		None               void
  2772 ;; Registers used:
  2773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2779 ;;      Params:         0       0       0       0
  2780 ;;      Locals:         0       0       0       0
  2781 ;;      Temps:          0       0       0       0
  2782 ;;      Totals:         0       0       0       0
  2783 ;;Total ram usage:        0 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_Evaluate_Reception
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text20
  2793  0009FA                     __ptext20:
  2794                           	opt stack 0
  2795  0009FA                     _Mark_Ignite:
  2796                           	opt stack 26
  2797                           
  2798                           ;ignition.c: 168: Marker[received[3]] = 1;
  2799                           
  2800                           ;incstack = 0
  2801  0009FA  5043               	movf	_received+3,w,c
  2802  0009FC  0D01               	mullw	1
  2803  0009FE  0E60               	movlw	low _Marker
  2804  000A00  24F3               	addwf	prodl,w,c
  2805  000A02  6ED9               	movwf	fsr2l,c
  2806  000A04  0E00               	movlw	high _Marker
  2807  000A06  20F4               	addwfc	prodh,w,c
  2808  000A08  6EDA               	movwf	fsr2h,c
  2809  000A0A  0E01               	movlw	1
  2810  000A0C  6EDF               	movwf	indf2,c
  2811  000A0E  0012               	return		;funcret
  2812  000A10                     __end_of_Mark_Ignite:
  2813                           	opt stack 0
  2814                           pclatu	equ	0xFFB
  2815                           pclath	equ	0xFFA
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           prodh	equ	0xFF4
  2821                           prodl	equ	0xFF3
  2822                           intcon	equ	0xFF2
  2823                           postinc0	equ	0xFEE
  2824                           fsr0h	equ	0xFEA
  2825                           fsr0l	equ	0xFE9
  2826                           wreg	equ	0xFE8
  2827                           fsr1h	equ	0xFE2
  2828                           fsr1l	equ	0xFE1
  2829                           indf2	equ	0xFDF
  2830                           postinc2	equ	0xFDE
  2831                           fsr2h	equ	0xFDA
  2832                           fsr2l	equ	0xFD9
  2833                           status	equ	0xFD8
  2834                           
  2835 ;; *************** function _Check_Power *****************
  2836 ;; Defined at:
  2837 ;;		line 171 in file "ignition.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  source_power    3   45[COMRAM] float 
  2842 ;;  voltage         3   42[COMRAM] float 
  2843 ;; Return value:  Size  Location     Type
  2844 ;;		None               void
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2852 ;;      Params:         0       0       0       0
  2853 ;;      Locals:         6       0       0       0
  2854 ;;      Temps:          0       0       0       0
  2855 ;;      Totals:         6       0       0       0
  2856 ;;Total ram usage:        6 bytes
  2857 ;; Hardware stack levels used:    1
  2858 ;; Hardware stack levels required when called:    2
  2859 ;; This function calls:
  2860 ;;		___ftdiv
  2861 ;;		___ftge
  2862 ;;		___ftmul
  2863 ;;		___lbtoft
  2864 ;; This function is called by:
  2865 ;;		_Evaluate_Reception
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text21
  2870  00051A                     __ptext21:
  2871                           	opt stack 0
  2872  00051A                     _Check_Power:
  2873                           	opt stack 24
  2874                           
  2875                           ;ignition.c: 174: float source_power = 0;
  2876                           
  2877                           ;incstack = 0
  2878  00051A  0E00               	movlw	0
  2879  00051C  6E2E               	movwf	Check_Power@source_power,c
  2880  00051E  0E00               	movlw	0
  2881  000520  6E2F               	movwf	Check_Power@source_power+1,c
  2882  000522  0E00               	movlw	0
  2883  000524  6E30               	movwf	Check_Power@source_power+2,c
  2884                           
  2885                           ;ignition.c: 175: float voltage = 0;
  2886  000526  0E00               	movlw	0
  2887  000528  6E2B               	movwf	Check_Power@voltage,c
  2888  00052A  0E00               	movlw	0
  2889  00052C  6E2C               	movwf	Check_Power@voltage+1,c
  2890  00052E  0E00               	movlw	0
  2891  000530  6E2D               	movwf	Check_Power@voltage+2,c
  2892                           
  2893                           ;ignition.c: 177: ADCON0bits.GO_nDONE = 1;
  2894  000532  82C2               	bsf	4034,1,c	;volatile
  2895  000534                     i2l333:
  2896  000534  B2C2               	btfsc	4034,1,c	;volatile
  2897  000536  D7FE               	goto	i2l333
  2898                           
  2899                           ;ignition.c: 179: voltage = ((ADRESH * 4.096) / 255);
  2900  000538  0E12               	movlw	18
  2901  00053A  6E10               	movwf	___ftmul@f2,c
  2902  00053C  0E83               	movlw	131
  2903  00053E  6E11               	movwf	___ftmul@f2+1,c
  2904  000540  0E40               	movlw	64
  2905  000542  6E12               	movwf	___ftmul@f2+2,c
  2906  000544  50C4               	movf	4036,w,c	;volatile
  2907  000546  EC96  F004         	call	___lbtoft
  2908  00054A  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  2909  00054E  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  2910  000552  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  2911  000556  ECA0  F001         	call	___ftmul	;wreg free
  2912  00055A  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2913  00055E  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2914  000562  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2915  000566  0E00               	movlw	0
  2916  000568  6E1F               	movwf	___ftdiv@f2,c
  2917  00056A  0E7F               	movlw	127
  2918  00056C  6E20               	movwf	___ftdiv@f2+1,c
  2919  00056E  0E43               	movlw	67
  2920  000570  6E21               	movwf	___ftdiv@f2+2,c
  2921  000572  EC1A  F002         	call	___ftdiv	;wreg free
  2922  000576  C01C  F02B         	movff	?___ftdiv,Check_Power@voltage
  2923  00057A  C01D  F02C         	movff	?___ftdiv+1,Check_Power@voltage+1
  2924  00057E  C01E  F02D         	movff	?___ftdiv+2,Check_Power@voltage+2
  2925                           
  2926                           ;ignition.c: 180: source_power = (4.9286 * voltage);
  2927  000582  C02B  F00D         	movff	Check_Power@voltage,___ftmul@f1
  2928  000586  C02C  F00E         	movff	Check_Power@voltage+1,___ftmul@f1+1
  2929  00058A  C02D  F00F         	movff	Check_Power@voltage+2,___ftmul@f1+2
  2930  00058E  0EB7               	movlw	183
  2931  000590  6E10               	movwf	___ftmul@f2,c
  2932  000592  0E9D               	movlw	157
  2933  000594  6E11               	movwf	___ftmul@f2+1,c
  2934  000596  0E40               	movlw	64
  2935  000598  6E12               	movwf	___ftmul@f2+2,c
  2936  00059A  ECA0  F001         	call	___ftmul	;wreg free
  2937  00059E  C00D  F02E         	movff	?___ftmul,Check_Power@source_power
  2938  0005A2  C00E  F02F         	movff	?___ftmul+1,Check_Power@source_power+1
  2939  0005A6  C00F  F030         	movff	?___ftmul+2,Check_Power@source_power+2
  2940                           
  2941                           ;ignition.c: 182: if (source_power < 16.8) {
  2942  0005AA  C02E  F001         	movff	Check_Power@source_power,___ftge@ff1
  2943  0005AE  C02F  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  2944  0005B2  C030  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  2945  0005B6  0E66               	movlw	102
  2946  0005B8  6E04               	movwf	___ftge@ff2,c
  2947  0005BA  0E86               	movlw	134
  2948  0005BC  6E05               	movwf	___ftge@ff2+1,c
  2949  0005BE  0E41               	movlw	65
  2950  0005C0  6E06               	movwf	___ftge@ff2+2,c
  2951  0005C2  EC52  F003         	call	___ftge	;wreg free
  2952  0005C6  B0D8               	btfsc	status,0,c
  2953  0005C8  D003               	goto	i2l1701
  2954                           
  2955                           ;ignition.c: 183: p_status = '0';
  2956  0005CA  0E30               	movlw	48
  2957  0005CC  6E46               	movwf	_p_status,c
  2958                           
  2959                           ;ignition.c: 184: } else if (source_power >= 16.8) {
  2960  0005CE  0012               	return	
  2961  0005D0                     i2l1701:
  2962  0005D0  C02E  F001         	movff	Check_Power@source_power,___ftge@ff1
  2963  0005D4  C02F  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  2964  0005D8  C030  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  2965  0005DC  0E66               	movlw	102
  2966  0005DE  6E04               	movwf	___ftge@ff2,c
  2967  0005E0  0E86               	movlw	134
  2968  0005E2  6E05               	movwf	___ftge@ff2+1,c
  2969  0005E4  0E41               	movlw	65
  2970  0005E6  6E06               	movwf	___ftge@ff2+2,c
  2971  0005E8  EC52  F003         	call	___ftge	;wreg free
  2972  0005EC  A0D8               	btfss	status,0,c
  2973  0005EE  0012               	return	
  2974                           
  2975                           ;ignition.c: 185: p_status = '1';
  2976  0005F0  0E31               	movlw	49
  2977  0005F2  6E46               	movwf	_p_status,c
  2978  0005F4  0012               	return	
  2979  0005F6                     __end_of_Check_Power:
  2980                           	opt stack 0
  2981                           pclatu	equ	0xFFB
  2982                           pclath	equ	0xFFA
  2983                           tblptru	equ	0xFF8
  2984                           tblptrh	equ	0xFF7
  2985                           tblptrl	equ	0xFF6
  2986                           tablat	equ	0xFF5
  2987                           prodh	equ	0xFF4
  2988                           prodl	equ	0xFF3
  2989                           intcon	equ	0xFF2
  2990                           postinc0	equ	0xFEE
  2991                           fsr0h	equ	0xFEA
  2992                           fsr0l	equ	0xFE9
  2993                           wreg	equ	0xFE8
  2994                           fsr1h	equ	0xFE2
  2995                           fsr1l	equ	0xFE1
  2996                           indf2	equ	0xFDF
  2997                           postinc2	equ	0xFDE
  2998                           fsr2h	equ	0xFDA
  2999                           fsr2l	equ	0xFD9
  3000                           status	equ	0xFD8
  3001                           
  3002 ;; *************** function ___lbtoft *****************
  3003 ;; Defined at:
  3004 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbtoft.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  c               1    wreg     unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  c               1   11[COMRAM] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  3    8[COMRAM] float 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3018 ;;      Params:         3       0       0       0
  3019 ;;      Locals:         1       0       0       0
  3020 ;;      Temps:          0       0       0       0
  3021 ;;      Totals:         4       0       0       0
  3022 ;;Total ram usage:        4 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    1
  3025 ;; This function calls:
  3026 ;;		___ftpack
  3027 ;; This function is called by:
  3028 ;;		_Check_Power
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text22
  3033  00092C                     __ptext22:
  3034                           	opt stack 0
  3035  00092C                     ___lbtoft:
  3036                           	opt stack 24
  3037                           
  3038                           ;incstack = 0
  3039                           ;___lbtoft@c stored from wreg
  3040  00092C  6E0C               	movwf	___lbtoft@c,c
  3041  00092E  500C               	movf	___lbtoft@c,w,c
  3042  000930  6E01               	movwf	___ftpack@arg,c
  3043  000932  6A02               	clrf	___ftpack@arg+1,c
  3044  000934  6A03               	clrf	___ftpack@arg+2,c
  3045  000936  0E8E               	movlw	142
  3046  000938  6E04               	movwf	___ftpack@exp,c
  3047  00093A  0E00               	movlw	0
  3048  00093C  6E05               	movwf	___ftpack@sign,c
  3049  00093E  ECFB  F002         	call	___ftpack	;wreg free
  3050  000942  C001  F009         	movff	?___ftpack,?___lbtoft
  3051  000946  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  3052  00094A  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  3053  00094E  0012               	return	
  3054  000950                     __end_of___lbtoft:
  3055                           	opt stack 0
  3056                           pclatu	equ	0xFFB
  3057                           pclath	equ	0xFFA
  3058                           tblptru	equ	0xFF8
  3059                           tblptrh	equ	0xFF7
  3060                           tblptrl	equ	0xFF6
  3061                           tablat	equ	0xFF5
  3062                           prodh	equ	0xFF4
  3063                           prodl	equ	0xFF3
  3064                           intcon	equ	0xFF2
  3065                           postinc0	equ	0xFEE
  3066                           fsr0h	equ	0xFEA
  3067                           fsr0l	equ	0xFE9
  3068                           wreg	equ	0xFE8
  3069                           fsr1h	equ	0xFE2
  3070                           fsr1l	equ	0xFE1
  3071                           indf2	equ	0xFDF
  3072                           postinc2	equ	0xFDE
  3073                           fsr2h	equ	0xFDA
  3074                           fsr2l	equ	0xFD9
  3075                           status	equ	0xFD8
  3076                           
  3077 ;; *************** function ___ftmul *****************
  3078 ;; Defined at:
  3079 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  f1              3   12[COMRAM] float 
  3082 ;;  f2              3   15[COMRAM] float 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3085 ;;  sign            1   26[COMRAM] unsigned char 
  3086 ;;  cntr            1   25[COMRAM] unsigned char 
  3087 ;;  exp             1   21[COMRAM] unsigned char 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  3   12[COMRAM] float 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3097 ;;      Params:         6       0       0       0
  3098 ;;      Locals:         6       0       0       0
  3099 ;;      Temps:          3       0       0       0
  3100 ;;      Totals:        15       0       0       0
  3101 ;;Total ram usage:       15 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    1
  3104 ;; This function calls:
  3105 ;;		___ftpack
  3106 ;; This function is called by:
  3107 ;;		_Check_Power
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111                           	psect	text23
  3112  000340                     __ptext23:
  3113                           	opt stack 0
  3114  000340                     ___ftmul:
  3115                           	opt stack 24
  3116                           
  3117                           ;incstack = 0
  3118  000340  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3119  000344  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3120  000346  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3121  000348  340E               	rlcf	___ftmul@f1+1,w,c
  3122  00034A  3613               	rlcf	??___ftmul& (0+255),f,c
  3123  00034C  E301               	bnc	u90_41
  3124  00034E  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3125  000350                     u90_41:
  3126  000350  5013               	movf	??___ftmul,w,c
  3127  000352  6E16               	movwf	___ftmul@exp,c
  3128  000354  5016               	movf	___ftmul@exp,w,c
  3129  000356  A4D8               	btfss	status,2,c
  3130  000358  D007               	goto	i2l1521
  3131  00035A  0E00               	movlw	0
  3132  00035C  6E0D               	movwf	?___ftmul,c
  3133  00035E  0E00               	movlw	0
  3134  000360  6E0E               	movwf	?___ftmul+1,c
  3135  000362  0E00               	movlw	0
  3136  000364  6E0F               	movwf	?___ftmul+2,c
  3137  000366  0012               	return	
  3138  000368                     i2l1521:
  3139  000368  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3140  00036C  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3141  00036E  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3142  000370  3411               	rlcf	___ftmul@f2+1,w,c
  3143  000372  3613               	rlcf	??___ftmul& (0+255),f,c
  3144  000374  E301               	bnc	u92_41
  3145  000376  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3146  000378                     u92_41:
  3147  000378  5013               	movf	??___ftmul,w,c
  3148  00037A  6E1B               	movwf	___ftmul@sign,c
  3149  00037C  501B               	movf	___ftmul@sign,w,c
  3150  00037E  A4D8               	btfss	status,2,c
  3151  000380  D007               	goto	i2l1527
  3152  000382  0E00               	movlw	0
  3153  000384  6E0D               	movwf	?___ftmul,c
  3154  000386  0E00               	movlw	0
  3155  000388  6E0E               	movwf	?___ftmul+1,c
  3156  00038A  0E00               	movlw	0
  3157  00038C  6E0F               	movwf	?___ftmul+2,c
  3158  00038E  0012               	return	
  3159  000390                     i2l1527:
  3160  000390  501B               	movf	___ftmul@sign,w,c
  3161  000392  0F7B               	addlw	123
  3162  000394  2616               	addwf	___ftmul@exp,f,c
  3163  000396  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3164  00039A  5012               	movf	___ftmul@f2+2,w,c
  3165  00039C  1A1B               	xorwf	___ftmul@sign,f,c
  3166  00039E  0E80               	movlw	128
  3167  0003A0  161B               	andwf	___ftmul@sign,f,c
  3168  0003A2  8E0E               	bsf	___ftmul@f1+1,7,c
  3169  0003A4  8E11               	bsf	___ftmul@f2+1,7,c
  3170  0003A6  0EFF               	movlw	255
  3171  0003A8  1610               	andwf	___ftmul@f2,f,c
  3172  0003AA  0EFF               	movlw	255
  3173  0003AC  1611               	andwf	___ftmul@f2+1,f,c
  3174  0003AE  0E00               	movlw	0
  3175  0003B0  1612               	andwf	___ftmul@f2+2,f,c
  3176  0003B2  0E00               	movlw	0
  3177  0003B4  6E17               	movwf	___ftmul@f3_as_product,c
  3178  0003B6  0E00               	movlw	0
  3179  0003B8  6E18               	movwf	___ftmul@f3_as_product+1,c
  3180  0003BA  0E00               	movlw	0
  3181  0003BC  6E19               	movwf	___ftmul@f3_as_product+2,c
  3182  0003BE  0E07               	movlw	7
  3183  0003C0  6E1A               	movwf	___ftmul@cntr,c
  3184  0003C2                     i2l1541:
  3185  0003C2  A00D               	btfss	___ftmul@f1,0,c
  3186  0003C4  D006               	goto	i2l1545
  3187  0003C6  5010               	movf	___ftmul@f2,w,c
  3188  0003C8  2617               	addwf	___ftmul@f3_as_product,f,c
  3189  0003CA  5011               	movf	___ftmul@f2+1,w,c
  3190  0003CC  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3191  0003CE  5012               	movf	___ftmul@f2+2,w,c
  3192  0003D0  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3193  0003D2                     i2l1545:
  3194  0003D2  90D8               	bcf	status,0,c
  3195  0003D4  320F               	rrcf	___ftmul@f1+2,f,c
  3196  0003D6  320E               	rrcf	___ftmul@f1+1,f,c
  3197  0003D8  320D               	rrcf	___ftmul@f1,f,c
  3198  0003DA  90D8               	bcf	status,0,c
  3199  0003DC  3610               	rlcf	___ftmul@f2,f,c
  3200  0003DE  3611               	rlcf	___ftmul@f2+1,f,c
  3201  0003E0  3612               	rlcf	___ftmul@f2+2,f,c
  3202  0003E2  2E1A               	decfsz	___ftmul@cntr,f,c
  3203  0003E4  D7EE               	goto	i2l1541
  3204  0003E6  0E09               	movlw	9
  3205  0003E8  6E1A               	movwf	___ftmul@cntr,c
  3206  0003EA                     i2l1551:
  3207  0003EA  A00D               	btfss	___ftmul@f1,0,c
  3208  0003EC  D006               	goto	i2l1555
  3209  0003EE  5010               	movf	___ftmul@f2,w,c
  3210  0003F0  2617               	addwf	___ftmul@f3_as_product,f,c
  3211  0003F2  5011               	movf	___ftmul@f2+1,w,c
  3212  0003F4  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3213  0003F6  5012               	movf	___ftmul@f2+2,w,c
  3214  0003F8  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3215  0003FA                     i2l1555:
  3216  0003FA  90D8               	bcf	status,0,c
  3217  0003FC  320F               	rrcf	___ftmul@f1+2,f,c
  3218  0003FE  320E               	rrcf	___ftmul@f1+1,f,c
  3219  000400  320D               	rrcf	___ftmul@f1,f,c
  3220  000402  90D8               	bcf	status,0,c
  3221  000404  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  3222  000406  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  3223  000408  3217               	rrcf	___ftmul@f3_as_product,f,c
  3224  00040A  2E1A               	decfsz	___ftmul@cntr,f,c
  3225  00040C  D7EE               	goto	i2l1551
  3226  00040E  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3227  000412  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3228  000416  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3229  00041A  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3230  00041E  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3231  000422  ECFB  F002         	call	___ftpack	;wreg free
  3232  000426  C001  F00D         	movff	?___ftpack,?___ftmul
  3233  00042A  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3234  00042E  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3235  000432  0012               	return	
  3236  000434                     __end_of___ftmul:
  3237                           	opt stack 0
  3238                           pclatu	equ	0xFFB
  3239                           pclath	equ	0xFFA
  3240                           tblptru	equ	0xFF8
  3241                           tblptrh	equ	0xFF7
  3242                           tblptrl	equ	0xFF6
  3243                           tablat	equ	0xFF5
  3244                           prodh	equ	0xFF4
  3245                           prodl	equ	0xFF3
  3246                           intcon	equ	0xFF2
  3247                           postinc0	equ	0xFEE
  3248                           fsr0h	equ	0xFEA
  3249                           fsr0l	equ	0xFE9
  3250                           wreg	equ	0xFE8
  3251                           fsr1h	equ	0xFE2
  3252                           fsr1l	equ	0xFE1
  3253                           indf2	equ	0xFDF
  3254                           postinc2	equ	0xFDE
  3255                           fsr2h	equ	0xFDA
  3256                           fsr2l	equ	0xFD9
  3257                           status	equ	0xFD8
  3258                           
  3259 ;; *************** function ___ftge *****************
  3260 ;; Defined at:
  3261 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  ff1             3    0[COMRAM] float 
  3264 ;;  ff2             3    3[COMRAM] float 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;		None
  3267 ;; Return value:  Size  Location     Type
  3268 ;;		None               void
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3276 ;;      Params:         6       0       0       0
  3277 ;;      Locals:         0       0       0       0
  3278 ;;      Temps:          3       0       0       0
  3279 ;;      Totals:         9       0       0       0
  3280 ;;Total ram usage:        9 bytes
  3281 ;; Hardware stack levels used:    1
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_Check_Power
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text24
  3290  0006A4                     __ptext24:
  3291                           	opt stack 0
  3292  0006A4                     ___ftge:
  3293                           	opt stack 25
  3294                           
  3295                           ;incstack = 0
  3296  0006A4  AE03               	btfss	___ftge@ff1+2,7,c
  3297  0006A6  D016               	goto	i2l1567
  3298  0006A8  C001  F007         	movff	___ftge@ff1,??___ftge
  3299  0006AC  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3300  0006B0  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3301  0006B4  1E07               	comf	??___ftge,f,c
  3302  0006B6  1E08               	comf	??___ftge+1,f,c
  3303  0006B8  1E09               	comf	??___ftge+2,f,c
  3304  0006BA  2A07               	incf	??___ftge,f,c
  3305  0006BC  0E00               	movlw	0
  3306  0006BE  2208               	addwfc	??___ftge+1,f,c
  3307  0006C0  2209               	addwfc	??___ftge+2,f,c
  3308  0006C2  0E00               	movlw	0
  3309  0006C4  2407               	addwf	??___ftge,w,c
  3310  0006C6  6E01               	movwf	___ftge@ff1,c
  3311  0006C8  0E00               	movlw	0
  3312  0006CA  2008               	addwfc	??___ftge+1,w,c
  3313  0006CC  6E02               	movwf	___ftge@ff1+1,c
  3314  0006CE  0E80               	movlw	128
  3315  0006D0  2009               	addwfc	??___ftge+2,w,c
  3316  0006D2  6E03               	movwf	___ftge@ff1+2,c
  3317  0006D4                     i2l1567:
  3318  0006D4  AE06               	btfss	___ftge@ff2+2,7,c
  3319  0006D6  D016               	goto	i2l1571
  3320  0006D8  C004  F007         	movff	___ftge@ff2,??___ftge
  3321  0006DC  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3322  0006E0  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3323  0006E4  1E07               	comf	??___ftge,f,c
  3324  0006E6  1E08               	comf	??___ftge+1,f,c
  3325  0006E8  1E09               	comf	??___ftge+2,f,c
  3326  0006EA  2A07               	incf	??___ftge,f,c
  3327  0006EC  0E00               	movlw	0
  3328  0006EE  2208               	addwfc	??___ftge+1,f,c
  3329  0006F0  2209               	addwfc	??___ftge+2,f,c
  3330  0006F2  0E00               	movlw	0
  3331  0006F4  2407               	addwf	??___ftge,w,c
  3332  0006F6  6E04               	movwf	___ftge@ff2,c
  3333  0006F8  0E00               	movlw	0
  3334  0006FA  2008               	addwfc	??___ftge+1,w,c
  3335  0006FC  6E05               	movwf	___ftge@ff2+1,c
  3336  0006FE  0E80               	movlw	128
  3337  000700  2009               	addwfc	??___ftge+2,w,c
  3338  000702  6E06               	movwf	___ftge@ff2+2,c
  3339  000704                     i2l1571:
  3340  000704  0E00               	movlw	0
  3341  000706  1A01               	xorwf	___ftge@ff1,f,c
  3342  000708  0E00               	movlw	0
  3343  00070A  1A02               	xorwf	___ftge@ff1+1,f,c
  3344  00070C  0E80               	movlw	128
  3345  00070E  1A03               	xorwf	___ftge@ff1+2,f,c
  3346  000710  0E00               	movlw	0
  3347  000712  1A04               	xorwf	___ftge@ff2,f,c
  3348  000714  0E00               	movlw	0
  3349  000716  1A05               	xorwf	___ftge@ff2+1,f,c
  3350  000718  0E80               	movlw	128
  3351  00071A  1A06               	xorwf	___ftge@ff2+2,f,c
  3352  00071C  5004               	movf	___ftge@ff2,w,c
  3353  00071E  5C01               	subwf	___ftge@ff1,w,c
  3354  000720  5005               	movf	___ftge@ff2+1,w,c
  3355  000722  5802               	subwfb	___ftge@ff1+1,w,c
  3356  000724  5006               	movf	___ftge@ff2+2,w,c
  3357  000726  5803               	subwfb	___ftge@ff1+2,w,c
  3358  000728  B0D8               	btfsc	status,0,c
  3359  00072A  D002               	goto	i2l1577
  3360  00072C  90D8               	bcf	status,0,c
  3361  00072E  0012               	return	
  3362  000730                     i2l1577:
  3363  000730  80D8               	bsf	status,0,c
  3364  000732  0012               	return	
  3365  000734                     __end_of___ftge:
  3366                           	opt stack 0
  3367                           pclatu	equ	0xFFB
  3368                           pclath	equ	0xFFA
  3369                           tblptru	equ	0xFF8
  3370                           tblptrh	equ	0xFF7
  3371                           tblptrl	equ	0xFF6
  3372                           tablat	equ	0xFF5
  3373                           prodh	equ	0xFF4
  3374                           prodl	equ	0xFF3
  3375                           intcon	equ	0xFF2
  3376                           postinc0	equ	0xFEE
  3377                           fsr0h	equ	0xFEA
  3378                           fsr0l	equ	0xFE9
  3379                           wreg	equ	0xFE8
  3380                           fsr1h	equ	0xFE2
  3381                           fsr1l	equ	0xFE1
  3382                           indf2	equ	0xFDF
  3383                           postinc2	equ	0xFDE
  3384                           fsr2h	equ	0xFDA
  3385                           fsr2l	equ	0xFD9
  3386                           status	equ	0xFD8
  3387                           
  3388 ;; *************** function ___ftdiv *****************
  3389 ;; Defined at:
  3390 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  f1              3   27[COMRAM] float 
  3393 ;;  f2              3   30[COMRAM] float 
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;  f3              3   37[COMRAM] float 
  3396 ;;  sign            1   41[COMRAM] unsigned char 
  3397 ;;  exp             1   40[COMRAM] unsigned char 
  3398 ;;  cntr            1   36[COMRAM] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  3   27[COMRAM] float 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3408 ;;      Params:         6       0       0       0
  3409 ;;      Locals:         6       0       0       0
  3410 ;;      Temps:          3       0       0       0
  3411 ;;      Totals:        15       0       0       0
  3412 ;;Total ram usage:       15 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    1
  3415 ;; This function calls:
  3416 ;;		___ftpack
  3417 ;; This function is called by:
  3418 ;;		_Check_Power
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text25
  3423  000434                     __ptext25:
  3424                           	opt stack 0
  3425  000434                     ___ftdiv:
  3426                           	opt stack 24
  3427                           
  3428                           ;incstack = 0
  3429  000434  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  3430  000438  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3431  00043A  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3432  00043C  341D               	rlcf	___ftdiv@f1+1,w,c
  3433  00043E  3622               	rlcf	??___ftdiv& (0+255),f,c
  3434  000440  E301               	bnc	u85_41
  3435  000442  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3436  000444                     u85_41:
  3437  000444  5022               	movf	??___ftdiv,w,c
  3438  000446  6E29               	movwf	___ftdiv@exp,c
  3439  000448  5029               	movf	___ftdiv@exp,w,c
  3440  00044A  A4D8               	btfss	status,2,c
  3441  00044C  D007               	goto	i2l1475
  3442  00044E  0E00               	movlw	0
  3443  000450  6E1C               	movwf	?___ftdiv,c
  3444  000452  0E00               	movlw	0
  3445  000454  6E1D               	movwf	?___ftdiv+1,c
  3446  000456  0E00               	movlw	0
  3447  000458  6E1E               	movwf	?___ftdiv+2,c
  3448  00045A  0012               	return	
  3449  00045C                     i2l1475:
  3450  00045C  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  3451  000460  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3452  000462  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3453  000464  3420               	rlcf	___ftdiv@f2+1,w,c
  3454  000466  3622               	rlcf	??___ftdiv& (0+255),f,c
  3455  000468  E301               	bnc	u87_41
  3456  00046A  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3457  00046C                     u87_41:
  3458  00046C  5022               	movf	??___ftdiv,w,c
  3459  00046E  6E2A               	movwf	___ftdiv@sign,c
  3460  000470  502A               	movf	___ftdiv@sign,w,c
  3461  000472  A4D8               	btfss	status,2,c
  3462  000474  D007               	goto	i2l1481
  3463  000476  0E00               	movlw	0
  3464  000478  6E1C               	movwf	?___ftdiv,c
  3465  00047A  0E00               	movlw	0
  3466  00047C  6E1D               	movwf	?___ftdiv+1,c
  3467  00047E  0E00               	movlw	0
  3468  000480  6E1E               	movwf	?___ftdiv+2,c
  3469  000482  0012               	return	
  3470  000484                     i2l1481:
  3471  000484  0E00               	movlw	0
  3472  000486  6E26               	movwf	___ftdiv@f3,c
  3473  000488  0E00               	movlw	0
  3474  00048A  6E27               	movwf	___ftdiv@f3+1,c
  3475  00048C  0E00               	movlw	0
  3476  00048E  6E28               	movwf	___ftdiv@f3+2,c
  3477  000490  502A               	movf	___ftdiv@sign,w,c
  3478  000492  0F89               	addlw	137
  3479  000494  5E29               	subwf	___ftdiv@exp,f,c
  3480  000496  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3481  00049A  5021               	movf	___ftdiv@f2+2,w,c
  3482  00049C  1A2A               	xorwf	___ftdiv@sign,f,c
  3483  00049E  0E80               	movlw	128
  3484  0004A0  162A               	andwf	___ftdiv@sign,f,c
  3485  0004A2  8E1D               	bsf	___ftdiv@f1+1,7,c
  3486  0004A4  0EFF               	movlw	255
  3487  0004A6  161C               	andwf	___ftdiv@f1,f,c
  3488  0004A8  0EFF               	movlw	255
  3489  0004AA  161D               	andwf	___ftdiv@f1+1,f,c
  3490  0004AC  0E00               	movlw	0
  3491  0004AE  161E               	andwf	___ftdiv@f1+2,f,c
  3492  0004B0  8E20               	bsf	___ftdiv@f2+1,7,c
  3493  0004B2  0EFF               	movlw	255
  3494  0004B4  161F               	andwf	___ftdiv@f2,f,c
  3495  0004B6  0EFF               	movlw	255
  3496  0004B8  1620               	andwf	___ftdiv@f2+1,f,c
  3497  0004BA  0E00               	movlw	0
  3498  0004BC  1621               	andwf	___ftdiv@f2+2,f,c
  3499  0004BE  0E18               	movlw	24
  3500  0004C0  6E25               	movwf	___ftdiv@cntr,c
  3501  0004C2                     i2l1501:
  3502  0004C2  90D8               	bcf	status,0,c
  3503  0004C4  3626               	rlcf	___ftdiv@f3,f,c
  3504  0004C6  3627               	rlcf	___ftdiv@f3+1,f,c
  3505  0004C8  3628               	rlcf	___ftdiv@f3+2,f,c
  3506  0004CA  501F               	movf	___ftdiv@f2,w,c
  3507  0004CC  5C1C               	subwf	___ftdiv@f1,w,c
  3508  0004CE  5020               	movf	___ftdiv@f2+1,w,c
  3509  0004D0  581D               	subwfb	___ftdiv@f1+1,w,c
  3510  0004D2  5021               	movf	___ftdiv@f2+2,w,c
  3511  0004D4  581E               	subwfb	___ftdiv@f1+2,w,c
  3512  0004D6  A0D8               	btfss	status,0,c
  3513  0004D8  D007               	goto	i2l672
  3514  0004DA  501F               	movf	___ftdiv@f2,w,c
  3515  0004DC  5E1C               	subwf	___ftdiv@f1,f,c
  3516  0004DE  5020               	movf	___ftdiv@f2+1,w,c
  3517  0004E0  5A1D               	subwfb	___ftdiv@f1+1,f,c
  3518  0004E2  5021               	movf	___ftdiv@f2+2,w,c
  3519  0004E4  5A1E               	subwfb	___ftdiv@f1+2,f,c
  3520  0004E6  8026               	bsf	___ftdiv@f3,0,c
  3521  0004E8                     i2l672:
  3522  0004E8  90D8               	bcf	status,0,c
  3523  0004EA  361C               	rlcf	___ftdiv@f1,f,c
  3524  0004EC  361D               	rlcf	___ftdiv@f1+1,f,c
  3525  0004EE  361E               	rlcf	___ftdiv@f1+2,f,c
  3526  0004F0  2E25               	decfsz	___ftdiv@cntr,f,c
  3527  0004F2  D7E7               	goto	i2l1501
  3528  0004F4  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  3529  0004F8  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3530  0004FC  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3531  000500  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  3532  000504  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  3533  000508  ECFB  F002         	call	___ftpack	;wreg free
  3534  00050C  C001  F01C         	movff	?___ftpack,?___ftdiv
  3535  000510  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  3536  000514  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  3537  000518  0012               	return	
  3538  00051A                     __end_of___ftdiv:
  3539                           	opt stack 0
  3540                           pclatu	equ	0xFFB
  3541                           pclath	equ	0xFFA
  3542                           tblptru	equ	0xFF8
  3543                           tblptrh	equ	0xFF7
  3544                           tblptrl	equ	0xFF6
  3545                           tablat	equ	0xFF5
  3546                           prodh	equ	0xFF4
  3547                           prodl	equ	0xFF3
  3548                           intcon	equ	0xFF2
  3549                           postinc0	equ	0xFEE
  3550                           fsr0h	equ	0xFEA
  3551                           fsr0l	equ	0xFE9
  3552                           wreg	equ	0xFE8
  3553                           fsr1h	equ	0xFE2
  3554                           fsr1l	equ	0xFE1
  3555                           indf2	equ	0xFDF
  3556                           postinc2	equ	0xFDE
  3557                           fsr2h	equ	0xFDA
  3558                           fsr2l	equ	0xFD9
  3559                           status	equ	0xFD8
  3560                           
  3561 ;; *************** function ___ftpack *****************
  3562 ;; Defined at:
  3563 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;  arg             3    0[COMRAM] unsigned um
  3566 ;;  exp             1    3[COMRAM] unsigned char 
  3567 ;;  sign            1    4[COMRAM] unsigned char 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;		None
  3570 ;; Return value:  Size  Location     Type
  3571 ;;                  3    0[COMRAM] float 
  3572 ;; Registers used:
  3573 ;;		wreg, status,2, status,0
  3574 ;; Tracked objects:
  3575 ;;		On entry : 0/0
  3576 ;;		On exit  : 0/0
  3577 ;;		Unchanged: 0/0
  3578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3579 ;;      Params:         5       0       0       0
  3580 ;;      Locals:         0       0       0       0
  3581 ;;      Temps:          3       0       0       0
  3582 ;;      Totals:         8       0       0       0
  3583 ;;Total ram usage:        8 bytes
  3584 ;; Hardware stack levels used:    1
  3585 ;; This function calls:
  3586 ;;		Nothing
  3587 ;; This function is called by:
  3588 ;;		___ftdiv
  3589 ;;		___ftmul
  3590 ;;		___lbtoft
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text26
  3595  0005F6                     __ptext26:
  3596                           	opt stack 0
  3597  0005F6                     ___ftpack:
  3598                           	opt stack 24
  3599                           
  3600                           ;incstack = 0
  3601  0005F6  5004               	movf	___ftpack@exp,w,c
  3602  0005F8  B4D8               	btfsc	status,2,c
  3603  0005FA  D005               	goto	i2l1413
  3604  0005FC  5001               	movf	___ftpack@arg,w,c
  3605  0005FE  1002               	iorwf	___ftpack@arg+1,w,c
  3606  000600  1003               	iorwf	___ftpack@arg+2,w,c
  3607  000602  A4D8               	btfss	status,2,c
  3608  000604  D00C               	goto	i2l1419
  3609  000606                     i2l1413:
  3610  000606  0E00               	movlw	0
  3611  000608  6E01               	movwf	?___ftpack,c
  3612  00060A  0E00               	movlw	0
  3613  00060C  6E02               	movwf	?___ftpack+1,c
  3614  00060E  0E00               	movlw	0
  3615  000610  6E03               	movwf	?___ftpack+2,c
  3616  000612  0012               	return	
  3617  000614                     i2l1417:
  3618  000614  2A04               	incf	___ftpack@exp,f,c
  3619  000616  90D8               	bcf	status,0,c
  3620  000618  3203               	rrcf	___ftpack@arg+2,f,c
  3621  00061A  3202               	rrcf	___ftpack@arg+1,f,c
  3622  00061C  3201               	rrcf	___ftpack@arg,f,c
  3623  00061E                     i2l1419:
  3624  00061E  0E00               	movlw	0
  3625  000620  1401               	andwf	___ftpack@arg,w,c
  3626  000622  6E06               	movwf	??___ftpack& (0+255),c
  3627  000624  0E00               	movlw	0
  3628  000626  1402               	andwf	___ftpack@arg+1,w,c
  3629  000628  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3630  00062A  0EFE               	movlw	254
  3631  00062C  1403               	andwf	___ftpack@arg+2,w,c
  3632  00062E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3633  000630  5006               	movf	??___ftpack,w,c
  3634  000632  1007               	iorwf	??___ftpack+1,w,c
  3635  000634  1008               	iorwf	??___ftpack+2,w,c
  3636  000636  B4D8               	btfsc	status,2,c
  3637  000638  D00C               	goto	i2l1425
  3638  00063A  D7EC               	goto	i2l1417
  3639  00063C                     i2l1421:
  3640  00063C  2A04               	incf	___ftpack@exp,f,c
  3641  00063E  0E01               	movlw	1
  3642  000640  2601               	addwf	___ftpack@arg,f,c
  3643  000642  0E00               	movlw	0
  3644  000644  2202               	addwfc	___ftpack@arg+1,f,c
  3645  000646  0E00               	movlw	0
  3646  000648  2203               	addwfc	___ftpack@arg+2,f,c
  3647  00064A  90D8               	bcf	status,0,c
  3648  00064C  3203               	rrcf	___ftpack@arg+2,f,c
  3649  00064E  3202               	rrcf	___ftpack@arg+1,f,c
  3650  000650  3201               	rrcf	___ftpack@arg,f,c
  3651  000652                     i2l1425:
  3652  000652  0E00               	movlw	0
  3653  000654  1401               	andwf	___ftpack@arg,w,c
  3654  000656  6E06               	movwf	??___ftpack& (0+255),c
  3655  000658  0E00               	movlw	0
  3656  00065A  1402               	andwf	___ftpack@arg+1,w,c
  3657  00065C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3658  00065E  0EFF               	movlw	255
  3659  000660  1403               	andwf	___ftpack@arg+2,w,c
  3660  000662  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3661  000664  5006               	movf	??___ftpack,w,c
  3662  000666  1007               	iorwf	??___ftpack+1,w,c
  3663  000668  1008               	iorwf	??___ftpack+2,w,c
  3664  00066A  B4D8               	btfsc	status,2,c
  3665  00066C  D006               	goto	i2l1429
  3666  00066E  D7E6               	goto	i2l1421
  3667  000670                     i2l1427:
  3668  000670  0604               	decf	___ftpack@exp,f,c
  3669  000672  90D8               	bcf	status,0,c
  3670  000674  3601               	rlcf	___ftpack@arg,f,c
  3671  000676  3602               	rlcf	___ftpack@arg+1,f,c
  3672  000678  3603               	rlcf	___ftpack@arg+2,f,c
  3673  00067A                     i2l1429:
  3674  00067A  BE02               	btfsc	___ftpack@arg+1,7,c
  3675  00067C  D003               	goto	i2l614
  3676  00067E  0E02               	movlw	2
  3677  000680  6004               	cpfslt	___ftpack@exp,c
  3678  000682  D7F6               	goto	i2l1427
  3679  000684                     i2l614:
  3680  000684  A004               	btfss	___ftpack@exp,0,c
  3681  000686  9E02               	bcf	___ftpack@arg+1,7,c
  3682  000688  90D8               	bcf	status,0,c
  3683  00068A  3204               	rrcf	___ftpack@exp,f,c
  3684  00068C  5004               	movf	___ftpack@exp,w,c
  3685  00068E  1203               	iorwf	___ftpack@arg+2,f,c
  3686  000690  5005               	movf	___ftpack@sign,w,c
  3687  000692  A4D8               	btfss	status,2,c
  3688  000694  8E03               	bsf	___ftpack@arg+2,7,c
  3689  000696  C001  F001         	movff	___ftpack@arg,?___ftpack
  3690  00069A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3691  00069E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3692  0006A2  0012               	return	
  3693  0006A4                     __end_of___ftpack:
  3694                           	opt stack 0
  3695  0000                     pclatu	equ	0xFFB
  3696                           pclath	equ	0xFFA
  3697                           tblptru	equ	0xFF8
  3698                           tblptrh	equ	0xFF7
  3699                           tblptrl	equ	0xFF6
  3700                           tablat	equ	0xFF5
  3701                           prodh	equ	0xFF4
  3702                           prodl	equ	0xFF3
  3703                           intcon	equ	0xFF2
  3704                           postinc0	equ	0xFEE
  3705                           fsr0h	equ	0xFEA
  3706                           fsr0l	equ	0xFE9
  3707                           wreg	equ	0xFE8
  3708                           fsr1h	equ	0xFE2
  3709                           fsr1l	equ	0xFE1
  3710                           indf2	equ	0xFDF
  3711                           postinc2	equ	0xFDE
  3712                           fsr2h	equ	0xFDA
  3713                           fsr2l	equ	0xFD9
  3714                           status	equ	0xFD8
  3715                           pclatu	equ	0xFFB
  3716                           pclath	equ	0xFFA
  3717                           tblptru	equ	0xFF8
  3718                           tblptrh	equ	0xFF7
  3719                           tblptrl	equ	0xFF6
  3720                           tablat	equ	0xFF5
  3721                           prodh	equ	0xFF4
  3722                           prodl	equ	0xFF3
  3723                           intcon	equ	0xFF2
  3724                           postinc0	equ	0xFEE
  3725                           fsr0h	equ	0xFEA
  3726                           fsr0l	equ	0xFE9
  3727                           wreg	equ	0xFE8
  3728                           fsr1h	equ	0xFE2
  3729                           fsr1l	equ	0xFE1
  3730                           indf2	equ	0xFDF
  3731                           postinc2	equ	0xFDE
  3732                           fsr2h	equ	0xFDA
  3733                           fsr2l	equ	0xFD9
  3734                           status	equ	0xFD8
  3735                           
  3736                           	psect	rparam
  3737  0000                     pclatu	equ	0xFFB
  3738                           pclath	equ	0xFFA
  3739                           tblptru	equ	0xFF8
  3740                           tblptrh	equ	0xFF7
  3741                           tblptrl	equ	0xFF6
  3742                           tablat	equ	0xFF5
  3743                           prodh	equ	0xFF4
  3744                           prodl	equ	0xFF3
  3745                           intcon	equ	0xFF2
  3746                           postinc0	equ	0xFEE
  3747                           fsr0h	equ	0xFEA
  3748                           fsr0l	equ	0xFE9
  3749                           wreg	equ	0xFE8
  3750                           fsr1h	equ	0xFE2
  3751                           fsr1l	equ	0xFE1
  3752                           indf2	equ	0xFDF
  3753                           postinc2	equ	0xFDE
  3754                           fsr2h	equ	0xFDA
  3755                           fsr2l	equ	0xFD9
  3756                           status	equ	0xFD8
  3757                           
  3758                           	psect	temp
  3759  000047                     btemp:
  3760                           	opt stack 0
  3761  000047                     	ds	1
  3762  0000                     int$flags	set	btemp
  3763                           pclatu	equ	0xFFB
  3764                           pclath	equ	0xFFA
  3765                           tblptru	equ	0xFF8
  3766                           tblptrh	equ	0xFF7
  3767                           tblptrl	equ	0xFF6
  3768                           tablat	equ	0xFF5
  3769                           prodh	equ	0xFF4
  3770                           prodl	equ	0xFF3
  3771                           intcon	equ	0xFF2
  3772                           postinc0	equ	0xFEE
  3773                           fsr0h	equ	0xFEA
  3774                           fsr0l	equ	0xFE9
  3775                           wreg	equ	0xFE8
  3776                           fsr1h	equ	0xFE2
  3777                           fsr1l	equ	0xFE1
  3778                           indf2	equ	0xFDF
  3779                           postinc2	equ	0xFDE
  3780                           fsr2h	equ	0xFDA
  3781                           fsr2l	equ	0xFD9
  3782                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      70
    BANK0           160      3      13
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Evaluate_Reception->_Check_Power
    _Test_Port->_Transmit
    _Check_Power->___ftdiv
    ___lbtoft->___ftpack
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    _main->_Check_Ignition
    _Init->_InitVar
    _Check_Ignition->_Disable_Port
    _Check_Ignition->_Ignite_Port

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     224
                     _Check_Ignition
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0      68
                            _InitADC
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                   _InitTransmission
                           _InitTris
                            _InitVar
 ---------------------------------------------------------------------------------
 (2) _InitVar                                              1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Ignition                                       2     2      0     156
                                              1 BANK0      2     2      0
                       _Disable_Port
                        _Ignite_Port
                           _On_Timer
 ---------------------------------------------------------------------------------
 (2) _On_Timer                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ignite_Port                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Disable_Port                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 15    15      0   11768
                                             48 COMRAM    15    15      0
                 _Evaluate_Reception
                            _Receive
                       _Receive_Dump
 ---------------------------------------------------------------------------------
 (4) _Receive_Dump                                         1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Evaluate_Reception                                   0     0      0   11699
                        _Check_Power
                        _Mark_Ignite
                          _Test_Port
 ---------------------------------------------------------------------------------
 (5) _Test_Port                                            0     0      0    3928
                           _Transmit
 ---------------------------------------------------------------------------------
 (6) _Transmit                                             4     1      3    3928
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _Mark_Ignite                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Check_Power                                          6     6      0    7771
                                             42 COMRAM     6     6      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (6) ___lbtoft                                             4     1      3    2053
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    2715
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     392
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             15     9      6    2541
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Ignition
     _Disable_Port
     _Ignite_Port
     _On_Timer
   _Init
     _InitADC
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTransmission
     _InitTris
     _InitVar

 _Isr (ROOT)
   _Evaluate_Reception
     _Check_Power
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftge
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _Mark_Ignite
     _Test_Port
       _Transmit
   _Receive
   _Receive_Dump

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      3       D       4        8.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     3F      46       1       74.5%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      53       8        0.0%
DATA                 0      0      53      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 18 22:06:19 2017

           ??_Check_Ignition 006B                           l21 0A46                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                          l300 074E                          l301 0752  
                        l302 0756                          l311 07AE                          l303 075A  
                        l312 07B2                          l304 075E                          l313 07B6  
                        l314 07BA                          l315 07BE                          l316 07C2  
                        l317 07C6                          l309 07AA                          l318 07CA  
                        l319 07CE                          l294 073A                          l296 073E  
                        l297 0742                          l298 0746                          l299 074A  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000                          _Isr 0008  
                        prod 000FF3                          wreg 000FE8                   _TXSTA1bits 000FAC  
              ??_Ignite_Port 006A                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0025  
                       ?_Isr 0001                ??_Mark_Ignite 0001                 ___ftdiv@sign 002A  
                       l1621 0910                         l1713 088A                         l1617 0906  
                       l1723 08BA                         l1725 08C2                         l1717 0894  
                       l1683 0762                         l1689 07D2                         i2l61 0838  
                       i2l70 0868                         i2l55 081C                         i2l64 0848  
                       i2l73 0878                         i2l58 0826                         i2l67 0858  
                       i2l83 0A2E                         Isr@c 003F                         _Init 0950  
                       _main 0A42                 ___ftpack@arg 0001                 ___ftpack@exp 0004  
                       fsr0h 000FEA                         fsr1h 000FE2                         fsr0l 000FE9  
                       fsr2h 000FDA                         fsr1l 000FE1                         indf2 000FDF  
                       fsr2l 000FD9                         btemp 0047                __CFG_BORV$190 000000  
               Transmit@port 0002                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 011A                __CFG_IESO$OFF 000000  
               ___ftmul@cntr 001A                 ___param_bank 000010                 ___ftmul@sign 001B  
            __end_of_InitADC 0A24                _InitInterrupt 0A5A              __end_of_InitVar 092C  
                      ??_Isr 0031              __end_of_Receive 0A42                 _BAUDCON1bits 000FB8  
                _Check_Power 051A                        ?_Init 0001         __end_of_Disable_Port 0814  
                      ?_main 0001              __end_of___ftdiv 051A              __end_of___ftmul 0434  
                      _T1CON 000FCD            _InitMiscellaneous 0A64                        i2l250 0138  
                      i2l333 0534                        i2l270 0210                        i2l262 01B0  
                      i2l254 0150                        i2l271 0228                        i2l263 01C8  
                      i2l255 0168                        i2l249 0120                        i2l282 02A0  
                      i2l274 0240                        i2l266 01E0                        i2l258 0180  
                      i2l283 02B8                        i2l275 0258                        i2l267 01F8  
                      i2l259 0198                        i2l380 0074                        i2l614 0684  
                      i2l286 02D0                        i2l278 0270                        i2l287 02E8  
                      i2l279 0288                        i2l379 0078                        i2l389 00DE  
                      i2l672 04E8                        _TMR1H 000FCF                        _TMR1L 000FCE  
                      _PORTA 000F80                        _PORTB 000F81                        _PORTC 000F82  
                      _PORTD 000F83                        _PORTE 000F84                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        u90_41 0350                        u92_41 0378  
                      u85_41 0444                        u87_41 046C                __CFG_WRT0$OFF 000000  
   __end_of_InitTransmission 09CE                __CFG_WRT1$OFF 000000           ?_InitMiscellaneous 0001  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000           __CFG_MCLRE$EXTMCLR 000000                ___ftpack@sign 0005  
             __pbitbssCOMRAM 0228               __CFG_BOREN$OFF 000000          ??_InitMiscellaneous 006A  
                      tablat 000FF5                        status 000FD8          __end_of_Ignite_Port 07A4  
        __end_of_Mark_Ignite 0A10               ?_InitInterrupt 0001              __initialization 08C8  
               __end_of_Init 0972                 __end_of_main 0A4E             __end_of_InitPort 09FA  
           __end_of_InitTris 09E4             __end_of_On_Timer 0A5A    __end_of_InitMiscellaneous 0A6A  
                     ??_Init 006B   __end_of_Evaluate_Reception 09B2                       ??_main 006D  
            _slave_addressed 0229                __activetblptr 000002                ?_Receive_Dump 0001  
           __end_of_Transmit 0884                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0                       _ADRESH 000FC4                       _CCPR1H 000FBF  
                     _CCPR1L 000FBE                       _ANSELA 000F38                       _ANSELB 000F39  
                     _ANSELC 000F3A                       _ANSELD 000F3B                       _ANSELE 000F3C  
           __end_of___ftpack 06A4             __end_of___lbtoft 0950                       i2l1421 063C  
                     i2l1413 0606                       i2l1501 04C2                       i2l1425 0652  
                     i2l1417 0614                       i2l1521 0368                       i2l1427 0670  
                     i2l1419 061E                       i2l1429 067A                       i2l1541 03C2  
                     i2l1701 05D0                       i2l1551 03EA                       i2l1527 0390  
                     i2l1481 0484                       i2l1545 03D2                       i2l1475 045C  
                     i2l1571 0704                       i2l1555 03FA                       i2l1733 0A3E  
             __CFG_WDTEN$OFF 000000                       i2l1567 06D4                       i2l1577 0730  
                     i2l1745 09A4                       i2l1677 0300                       i2l1781 00AA  
                     i2l1791 00C6                       i2l1787 00BE                       i2l1779 00A6  
                     _RCREG1 000FAE                       _OSCCON 000FD3           __size_of_InitAnsel 0020  
                     _SPBRG1 000FAF                       _TXREG1 000FAD                    ??_InitADC 006A  
    Check_Power@source_power 002E                    ??_InitVar 006A                    ??_Receive 0001  
                     _Marker 0060               __CFG_XINST$OFF 000000                 _CCPTMRS0bits 000F49  
                     ___ftge 06A4                    ??___ftdiv 0022                    ??___ftmul 0013  
                     clear_0 08CE        ___ftmul@f3_as_product 0017           __size_of_Test_Port 0222  
               __pdataCOMRAM 0046               ??_Receive_Dump 0001                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                  _Ignite_Port 0734  
            __CFG_HFOFST$OFF 000000                  _Mark_Ignite 09FA                   __accesstop 0060  
    __end_of__initialization 08F2              __CFG_PBADEN$OFF 000000                   ___ftge@ff1 0001  
                 ___ftge@ff2 0004              ??_InitInterrupt 006A                ___rparam_used 000001  
                 ___ftdiv@f1 001C                   ___ftdiv@f2 001F                   ___ftdiv@f3 0026  
                 ___lbtoft@c 000C                   ___ftmul@f1 000D                   ___ftmul@f2 0010  
             __pcstackCOMRAM 0001        __size_of_Disable_Port 0070   __size_of_InitMiscellaneous 0006  
          __end_of_InitAnsel 0992                   __pbssBANK0 0060              __CFG_PLLCFG$OFF 000000  
                  ?_InitPort 0001                    ?_InitTris 0001                    ?_On_Timer 0001  
               _Disable_Port 07A4            __end_of_Test_Port 0340           __CFG_CCP2MX$PORTC1 000000  
                    ?___ftge 0001           __CFG_CCP3MX$PORTB5 000000                    ?_Transmit 0001  
                    _CCP1CON 000FBD                 ?_Check_Power 0001                    ?___ftpack 0001  
                  ?___lbtoft 0009            ?_InitTransmission 0001            __CFG_PRICLKEN$OFF 000000  
         ??_InitTransmission 006A                   ??_InitPort 006A                   ??_InitTris 006A  
                 ??_On_Timer 006A                      _InitADC 0A10                      _InitVar 0900  
            __CFG_PWRTEN$OFF 000000                      _Receive 0A34                      __Hparam 0000  
       __end_of_Receive_Dump 0A34                      __Lparam 0000              __size_of___ftge 0090  
                    ___ftdiv 0434                      ___ftmul 0340             Receive_Dump@dump 0001  
                 ??_Transmit 0004              __CFG_STVREN$OFF 000000                      __pcinit 08C8  
                 ??___ftpack 0006                   ??___lbtoft 000C                      __ramtop 0300  
                    __ptext0 0A42                      __ptext1 0950                      __ptext2 0900  
                    __ptext3 09CE                      __ptext4 09B2                      __ptext5 09E4  
                    __ptext6 0A64                      __ptext7 0A5A                      __ptext8 0972  
                    __ptext9 0A10                    _T1CONbits 000FCD                 __size_of_Isr 0112  
    __size_of_Check_Ignition 0044                      _overrun 0228         end_of_initialization 08F2  
         _Evaluate_Reception 0992                __Lmediumconst 0000          ?_Evaluate_Reception 0001  
   Ignite_Port@ignite_number 006A                      postinc0 000FEE                      postinc2 000FDE  
         Check_Power@voltage 002B           Transmit@con_status 0003                    _PORTAbits 000F80  
                  _PORTBbits 000F81                    _PORTCbits 000F82                    _PORTDbits 000F83  
                  _PORTEbits 000F84         ??_Evaluate_Reception 0031                    _TRISCbits 000F94  
               ?_Ignite_Port 0001                 ?_Mark_Ignite 0001                  ___ftdiv@exp 0029  
                ___ftmul@exp 0016               __end_of___ftge 0734                __pidataCOMRAM 0A6A  
       __size_of_Check_Power 00DC          start_initialization 08C8                    _InitAnsel 0972  
                __end_of_Isr 011A        __size_of_Receive_Dump 0010              Check_Ignition@c 006C  
          __size_of_InitPort 0016            __size_of_InitTris 0016            __size_of_On_Timer 000C  
      __end_of_InitInterrupt 0A64                     ??___ftge 0007                    _Test_Port 011E  
          __size_of_Transmit 0070            __size_of___ftpack 00AE            __size_of___lbtoft 0024  
             _Check_Ignition 0884                  __pbssCOMRAM 0040                   ?_InitAnsel 0001  
              __pcstackBANK0 006A                 _Receive_Dump 0A24                     ?_InitADC 0001  
                   ?_InitVar 0001                     ?_Receive 0001    __size_of_InitTransmission 001C  
                  __pintcode 0008                   ?_Test_Port 0001                     ?___ftdiv 001C  
                   ?___ftmul 000D       __end_of_Check_Ignition 08C8         __size_of_Ignite_Port 0070  
       __size_of_Mark_Ignite 0016                     _PIE1bits 000F9D                     i2u140_47 083E  
                   i2u141_47 084E                     i2u142_47 085E                     i2u143_47 086E  
                   i2u139_47 082E                     _PIR1bits 000F9E             __CFG_WDTPS$32768 000000  
                   _VREFCON0 000F42                   _ADCON0bits 000FC2              ?_Check_Ignition 0001  
                   InitVar@c 006A                  ??_InitAnsel 006A              _receive_counter 0044  
                   _InitPort 09E4                     _InitTris 09CE                     _On_Timer 0A4E  
          Transmit@operation 0001             __size_of_InitADC 0014                     __Hrparam 0000  
           __size_of_InitVar 002C             __size_of_Receive 000E                     __Lrparam 0000  
          __CFG_P2BMX$PORTD2 000000                  ??_Test_Port 0005                     _Transmit 0814  
           __size_of___ftdiv 00E6             __size_of___ftmul 00F4                     ___ftpack 05F6  
                   ___lbtoft 092C  __size_of_Evaluate_Reception 0020                     __ptext10 0884  
                   __ptext11 0A4E                     __ptext20 09FA                     __ptext12 0734  
                   __ptext21 051A                     __ptext13 07A4                     __ptext22 092C  
                   __ptext23 0340                     __ptext15 0A24                     __ptext24 06A4  
                   __ptext16 0A34                     __ptext25 0434                     __ptext17 0992  
                   __ptext26 05F6                     __ptext18 011E                     __ptext19 0814  
              __size_of_Init 0022                ?_Disable_Port 0001                __size_of_main 000C  
                   _received 0040                     _p_status 0046             _InitTransmission 09B2  
                   int$flags 0047                ??_Check_Power 002B             Transmit@receiver 0004  
 Disable_Port@disable_number 006A                   _INTCONbits 000FF2                     intlevel2 0000  
             ??_Disable_Port 006A                   _RCSTA1bits 000FAB          __end_of_Check_Power 05F6  
          __CFG_T3CMX$PORTC0 000000       __size_of_InitInterrupt 000A            __CFG_FOSC$INTIO67 000000  
