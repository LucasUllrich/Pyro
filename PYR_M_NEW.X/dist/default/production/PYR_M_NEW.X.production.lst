

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Feb 03 20:30:00 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           	psect	idataBANK1
    39  000586                     __pidataBANK1:
    40                           	opt stack 0
    41                           
    42                           ;initializer for _pin
    43  000586  00                 	db	0
    44  000587  00                 	db	0
    45  000588  00                 	db	0
    46  000589  1F                 	db	31
    47  00058A  00                 	db	0
    48  00058B  00                 	db	0
    49  00058C  00                 	db	0
    50  00058D  01                 	db	1
    51  00058E  01                 	db	1
    52  00058F  1E                 	db	30
    53  000590  00                 	db	0
    54  000591  00                 	db	0
    55  000592  00                 	db	0
    56  000593  02                 	db	2
    57  000594  02                 	db	2
    58  000595  1D                 	db	29
    59  000596  00                 	db	0
    60  000597  00                 	db	0
    61  000598  00                 	db	0
    62  000599  03                 	db	3
    63  00059A  03                 	db	3
    64  00059B  1C                 	db	28
    65  00059C  00                 	db	0
    66  00059D  00                 	db	0
    67  00059E  00                 	db	0
    68  00059F  04                 	db	4
    69  0005A0  04                 	db	4
    70  0005A1  1B                 	db	27
    71  0005A2  00                 	db	0
    72  0005A3  00                 	db	0
    73  0005A4  00                 	db	0
    74  0005A5  05                 	db	5
    75  0005A6  05                 	db	5
    76  0005A7  1A                 	db	26
    77  0005A8  00                 	db	0
    78  0005A9  00                 	db	0
    79  0005AA  00                 	db	0
    80  0005AB  06                 	db	6
    81  0005AC  06                 	db	6
    82  0005AD  19                 	db	25
    83  0005AE  00                 	db	0
    84  0005AF  00                 	db	0
    85  0005B0  00                 	db	0
    86  0005B1  07                 	db	7
    87  0005B2  07                 	db	7
    88  0005B3  18                 	db	24
    89  0005B4  00                 	db	0
    90  0005B5  00                 	db	0
    91  0005B6  00                 	db	0
    92  0005B7  08                 	db	8
    93  0005B8  08                 	db	8
    94  0005B9  27                 	db	39
    95  0005BA  00                 	db	0
    96  0005BB  00                 	db	0
    97  0005BC  00                 	db	0
    98  0005BD  09                 	db	9
    99  0005BE  09                 	db	9
   100  0005BF  26                 	db	38
   101  0005C0  00                 	db	0
   102  0005C1  00                 	db	0
   103  0005C2  01                 	db	1
   104  0005C3  00                 	db	0
   105  0005C4  0A                 	db	10
   106  0005C5  25                 	db	37
   107  0005C6  00                 	db	0
   108  0005C7  00                 	db	0
   109  0005C8  01                 	db	1
   110  0005C9  01                 	db	1
   111  0005CA  0B                 	db	11
   112  0005CB  24                 	db	36
   113  0005CC  00                 	db	0
   114  0005CD  00                 	db	0
   115  0005CE  01                 	db	1
   116  0005CF  02                 	db	2
   117  0005D0  0C                 	db	12
   118  0005D1  23                 	db	35
   119  0005D2  00                 	db	0
   120  0005D3  00                 	db	0
   121  0005D4  01                 	db	1
   122  0005D5  03                 	db	3
   123  0005D6  0D                 	db	13
   124  0005D7  22                 	db	34
   125  0005D8  00                 	db	0
   126  0005D9  00                 	db	0
   127  0005DA  01                 	db	1
   128  0005DB  04                 	db	4
   129  0005DC  0E                 	db	14
   130  0005DD  21                 	db	33
   131  0005DE  00                 	db	0
   132  0005DF  00                 	db	0
   133  0005E0  01                 	db	1
   134  0005E1  05                 	db	5
   135  0005E2  0F                 	db	15
   136  0005E3  20                 	db	32
   137  0005E4  00                 	db	0
   138  0005E5  00                 	db	0
   139  0005E6  01                 	db	1
   140  0005E7  06                 	db	6
   141  0005E8  10                 	db	16
   142  0005E9  2F                 	db	47
   143  0005EA  00                 	db	0
   144  0005EB  00                 	db	0
   145  0005EC  01                 	db	1
   146  0005ED  07                 	db	7
   147  0005EE  11                 	db	17
   148  0005EF  2E                 	db	46
   149  0005F0  00                 	db	0
   150  0005F1  00                 	db	0
   151  0005F2  01                 	db	1
   152  0005F3  08                 	db	8
   153  0005F4  12                 	db	18
   154  0005F5  2D                 	db	45
   155  0005F6  00                 	db	0
   156  0005F7  00                 	db	0
   157  0005F8  01                 	db	1
   158  0005F9  09                 	db	9
   159  0005FA  13                 	db	19
   160  0005FB  2C                 	db	44
   161  0005FC  00                 	db	0
   162  0005FD  00                 	db	0
   163  0005FE  02                 	db	2
   164  0005FF  00                 	db	0
   165  000600  14                 	db	20
   166  000601  2B                 	db	43
   167  000602  00                 	db	0
   168  000603  00                 	db	0
   169  000604  02                 	db	2
   170  000605  01                 	db	1
   171  000606  15                 	db	21
   172  000607  2A                 	db	42
   173  000608  00                 	db	0
   174  000609  00                 	db	0
   175  00060A  02                 	db	2
   176  00060B  02                 	db	2
   177  00060C  16                 	db	22
   178  00060D  29                 	db	41
   179  00060E  00                 	db	0
   180  00060F  00                 	db	0
   181  000610  02                 	db	2
   182  000611  03                 	db	3
   183  000612  17                 	db	23
   184  000613  28                 	db	40
   185  000614  00                 	db	0
   186  000615  00                 	db	0
   187  000616  02                 	db	2
   188  000617  04                 	db	4
   189  000618  18                 	db	24
   190  000619  35                 	db	53
   191  00061A  00                 	db	0
   192  00061B  00                 	db	0
   193  00061C  02                 	db	2
   194  00061D  05                 	db	5
   195  00061E  19                 	db	25
   196  00061F  34                 	db	52
   197  000620  00                 	db	0
   198  000621  00                 	db	0
   199  000622  02                 	db	2
   200  000623  06                 	db	6
   201  000624  1A                 	db	26
   202  000625  33                 	db	51
   203  000626  00                 	db	0
   204  000627  00                 	db	0
   205  000628  02                 	db	2
   206  000629  07                 	db	7
   207  00062A  1B                 	db	27
   208  00062B  32                 	db	50
   209  00062C  00                 	db	0
   210  00062D  00                 	db	0
   211  00062E  02                 	db	2
   212  00062F  08                 	db	8
   213  000630  1C                 	db	28
   214  000631  31                 	db	49
   215  000632  00                 	db	0
   216  000633  00                 	db	0
   217  000634  02                 	db	2
   218  000635  09                 	db	9
   219  000636  1D                 	db	29
   220  000637  30                 	db	48
   221  000638  00                 	db	0
   222  000639  00                 	db	0
   223  0000                     _ANSELA	set	3896
   224  0000                     _ANSELB	set	3897
   225  0000                     _ANSELC	set	3898
   226  0000                     _CCPTMRS0bits	set	3913
   227  0000                     _BAUDCON1bits	set	4024
   228  0000                     _CCP1CONbits	set	4029
   229  0000                     _CCPR1H	set	4031
   230  0000                     _CCPR1L	set	4030
   231  0000                     _EEADR	set	4009
   232  0000                     _EECON1bits	set	4006
   233  0000                     _EECON2	set	4007
   234  0000                     _EEDATA	set	4008
   235  0000                     _INTCONbits	set	4082
   236  0000                     _OSCCON	set	4051
   237  0000                     _PIE1bits	set	3997
   238  0000                     _PIR1bits	set	3998
   239  0000                     _PIR2bits	set	4001
   240  0000                     _PORTA	set	3968
   241  0000                     _PORTAbits	set	3968
   242  0000                     _PORTB	set	3969
   243  0000                     _PORTBbits	set	3969
   244  0000                     _PORTC	set	3970
   245  0000                     _PORTCbits	set	3970
   246  0000                     _PORTE	set	3972
   247  0000                     _RCREG1	set	4014
   248  0000                     _RCSTA1bits	set	4011
   249  0000                     _RCSTAbits	set	4011
   250  0000                     _SPBRG1	set	4015
   251  0000                     _SSP1BUF	set	4041
   252  0000                     _SSP1CON1	set	4038
   253  0000                     _SSP1STAT	set	4039
   254  0000                     _T1CONbits	set	4045
   255  0000                     _T3CONbits	set	4017
   256  0000                     _TMR1H	set	4047
   257  0000                     _TMR1L	set	4046
   258  0000                     _TMR3H	set	4019
   259  0000                     _TMR3L	set	4018
   260  0000                     _TRISA	set	3986
   261  0000                     _TRISB	set	3987
   262  0000                     _TRISC	set	3988
   263  0000                     _TRISCbits	set	3988
   264  0000                     _TRISE	set	3990
   265  0000                     _TXREG1	set	4013
   266  0000                     _TXSTA1bits	set	4012
   267  0000                     _SSP1IF	set	31987
   268                           
   269                           	psect	smallconst
   270  00021A                     __psmallconst:
   271                           	opt stack 0
   272  00021A  00                 	db	0
   273  00021B                     STR_12:
   274  00021B  41                 	db	65	;'A'
   275  00021C  42                 	db	66	;'B'
   276  00021D  43                 	db	67	;'C'
   277  00021E  44                 	db	68	;'D'
   278  00021F  45                 	db	69	;'E'
   279  000220  46                 	db	70	;'F'
   280  000221  47                 	db	71	;'G'
   281  000222  00                 	db	0
   282  000223                     STR_4:
   283  000223  41                 	db	65	;'A'
   284  000224  42                 	db	66	;'B'
   285  000225  43                 	db	67	;'C'
   286  000226  44                 	db	68	;'D'
   287  000227  45                 	db	69	;'E'
   288  000228  46                 	db	70	;'F'
   289  000229  00                 	db	0
   290  00022A                     STR_13:
   291  00022A  41                 	db	65	;'A'
   292  00022B  42                 	db	66	;'B'
   293  00022C  43                 	db	67	;'C'
   294  00022D  44                 	db	68	;'D'
   295  00022E  46                 	db	70	;'F'
   296  00022F  47                 	db	71	;'G'
   297  000230  00                 	db	0
   298  000231                     STR_14:
   299  000231  41                 	db	65	;'A'
   300  000232  42                 	db	66	;'B'
   301  000233  43                 	db	67	;'C'
   302  000234  45                 	db	69	;'E'
   303  000235  46                 	db	70	;'F'
   304  000236  47                 	db	71	;'G'
   305  000237  00                 	db	0
   306  000238                     STR_10:
   307  000238  41                 	db	65	;'A'
   308  000239  43                 	db	67	;'C'
   309  00023A  44                 	db	68	;'D'
   310  00023B  45                 	db	69	;'E'
   311  00023C  46                 	db	70	;'F'
   312  00023D  47                 	db	71	;'G'
   313  00023E  00                 	db	0
   314  00023F                     STR_7:
   315  00023F  41                 	db	65	;'A'
   316  000240  42                 	db	66	;'B'
   317  000241  43                 	db	67	;'C'
   318  000242  44                 	db	68	;'D'
   319  000243  47                 	db	71	;'G'
   320  000244  00                 	db	0
   321  000245                     STR_6:
   322  000245  41                 	db	65	;'A'
   323  000246  42                 	db	66	;'B'
   324  000247  44                 	db	68	;'D'
   325  000248  45                 	db	69	;'E'
   326  000249  47                 	db	71	;'G'
   327  00024A  00                 	db	0
   328  00024B                     STR_9:
   329  00024B  41                 	db	65	;'A'
   330  00024C  43                 	db	67	;'C'
   331  00024D  44                 	db	68	;'D'
   332  00024E  46                 	db	70	;'F'
   333  00024F  47                 	db	71	;'G'
   334  000250  00                 	db	0
   335  000251                     STR_19:
   336  000251  41                 	db	65	;'A'
   337  000252  42                 	db	66	;'B'
   338  000253  45                 	db	69	;'E'
   339  000254  46                 	db	70	;'F'
   340  000255  47                 	db	71	;'G'
   341  000256  00                 	db	0
   342  000257                     STR_16:
   343  000257  41                 	db	65	;'A'
   344  000258  44                 	db	68	;'D'
   345  000259  45                 	db	69	;'E'
   346  00025A  46                 	db	70	;'F'
   347  00025B  47                 	db	71	;'G'
   348  00025C  00                 	db	0
   349  00025D                     STR_8:
   350  00025D  42                 	db	66	;'B'
   351  00025E  43                 	db	67	;'C'
   352  00025F  46                 	db	70	;'F'
   353  000260  47                 	db	71	;'G'
   354  000261  00                 	db	0
   355  000262                     STR_11:
   356  000262  41                 	db	65	;'A'
   357  000263  42                 	db	66	;'B'
   358  000264  43                 	db	67	;'C'
   359  000265  00                 	db	0
   360  000266  4C                 	db	76	;'L'
   361  000267  4F                 	db	79	;'O'
   362  000268  41                 	db	65	;'A'
   363  000269  00                 	db	0
   364  00026A  44                 	db	68	;'D'
   365  00026B  45                 	db	69	;'E'
   366  00026C  4C                 	db	76	;'L'
   367  00026D  00                 	db	0
   368  00026E                     STR_1:
   369  00026E  65                 	db	101	;'e'
   370  00026F  00                 	db	0
   371  0000                     
   372                           ; #config settings
   373  000270  00                 	db	0	; dummy byte at the end
   374  0000                     
   375                           	psect	cinit
   376  000912                     __pcinit:
   377                           	opt stack 0
   378  000912                     start_initialization:
   379                           	opt stack 0
   380  000912                     __initialization:
   381                           	opt stack 0
   382                           
   383                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   384  000912  6A40               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   385                           
   386                           ; Clear objects allocated to COMRAM (23 bytes)
   387  000914  EE00  F029         	lfsr	0,__pbssCOMRAM
   388  000918  0E17               	movlw	23
   389  00091A                     clear_0:
   390  00091A  6AEE               	clrf	postinc0,c
   391  00091C  06E8               	decf	wreg,f,c
   392  00091E  E1FD               	bnz	clear_0
   393                           
   394                           ; Initialize objects allocated to BANK1 (180 bytes)
   395                           ; load TBLPTR registers with __pidataBANK1
   396  000920  0E86               	movlw	low __pidataBANK1
   397  000922  6EF6               	movwf	tblptrl,c
   398  000924  0E05               	movlw	high __pidataBANK1
   399  000926  6EF7               	movwf	tblptrh,c
   400  000928  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   401  00092A  6EF8               	movwf	tblptru,c
   402  00092C  EE01  F000         	lfsr	0,__pdataBANK1
   403  000930  EE10 F0B4          	lfsr	1,180
   404  000934                     copy_data0:
   405  000934  0009               	tblrd		*+
   406  000936  CFF5 FFEE          	movff	tablat,postinc0
   407  00093A  50E5               	movf	postdec1,w,c
   408  00093C  50E1               	movf	fsr1l,w,c
   409  00093E  E1FA               	bnz	copy_data0
   410  000940                     end_of_initialization:
   411                           	opt stack 0
   412  000940                     __end_of__initialization:
   413                           	opt stack 0
   414  000940  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   415  000942  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   416  000944  0E00               	movlw	low (__Lmediumconst shr (0+16))
   417  000946  6EF8               	movwf	tblptru,c
   418  000948  0100               	movlb	0
   419  00094A  EF08  F005         	goto	_main	;jump to C main() function
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           	psect	bitbssCOMRAM
   430  000200                     __pbitbssCOMRAM:
   431                           	opt stack 0
   432  000200                     _ignite_ready:
   433                           	opt stack 0
   434  000200                     	ds	1
   435  000201                     _master_addressed:
   436                           	opt stack 0
   437  000201                     	ds	1
   438  000202                     _overrun:
   439                           	opt stack 0
   440  000202                     	ds	1
   441  000203                     _testflag:
   442                           	opt stack 0
   443  000203                     	ds	1
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           tblptrl	equ	0xFF6
   447                           tablat	equ	0xFF5
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           postdec1	equ	0xFE5
   451                           fsr1l	equ	0xFE1
   452                           
   453                           	psect	bssCOMRAM
   454  000029                     __pbssCOMRAM:
   455                           	opt stack 0
   456  000029                     _received:
   457                           	opt stack 0
   458  000029                     	ds	6
   459  00002F                     _current_time:
   460                           	opt stack 0
   461  00002F                     	ds	2
   462  000031                     _check_counter:
   463                           	opt stack 0
   464  000031                     	ds	1
   465  000032                     _display_counter:
   466                           	opt stack 0
   467  000032                     	ds	1
   468  000033                     _pin_selected:
   469                           	opt stack 0
   470  000033                     	ds	1
   471  000034                     _receive_counter:
   472                           	opt stack 0
   473  000034                     	ds	1
   474  000035                     _slave_selected:
   475                           	opt stack 0
   476  000035                     	ds	1
   477  000036                     _pixels:
   478                           	opt stack 0
   479  000036                     	ds	7
   480  00003D                     _signs:
   481                           	opt stack 0
   482  00003D                     	ds	3
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           postinc0	equ	0xFEE
   488                           wreg	equ	0xFE8
   489                           postdec1	equ	0xFE5
   490                           fsr1l	equ	0xFE1
   491                           
   492                           	psect	dataBANK1
   493  000100                     __pdataBANK1:
   494                           	opt stack 0
   495  000100                     _pin:
   496                           	opt stack 0
   497  000100                     	ds	180
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           postdec1	equ	0xFE5
   505                           fsr1l	equ	0xFE1
   506                           
   507                           	psect	cstackBANK0
   508  000060                     __pcstackBANK0:
   509                           	opt stack 0
   510  000060                     Write_Display_Byte@write_data:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x0
   514  000060                     	ds	2
   515  000062                     ??_Write_Display_Byte:
   516                           
   517                           ; 0 bytes @ 0x2
   518  000062                     	ds	6
   519  000068                     Write_Display_Byte@counter:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x8
   523  000068                     	ds	1
   524  000069                     tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           tblptrl	equ	0xFF6
   527                           tablat	equ	0xFF5
   528                           postinc0	equ	0xFEE
   529                           wreg	equ	0xFE8
   530                           postdec1	equ	0xFE5
   531                           fsr1l	equ	0xFE1
   532                           
   533                           ; 0 bytes @ 0x9
   534                           
   535                           	psect	cstackCOMRAM
   536  000001                     __pcstackCOMRAM:
   537                           	opt stack 0
   538  000001                     ?___awdiv:
   539                           	opt stack 0
   540  000001                     ?___lwmod:
   541                           	opt stack 0
   542  000001                     Transmit@operation:
   543                           	opt stack 0
   544  000001                     ___awdiv@dividend:
   545                           	opt stack 0
   546  000001                     ___lwmod@dividend:
   547                           	opt stack 0
   548  000001                     i2Write_Display_Byte@write_data:
   549                           	opt stack 0
   550  000001                     Set_Bits@bits:
   551                           	opt stack 0
   552                           
   553                           ; 3 bytes @ 0x0
   554  000001                     	ds	1
   555  000002                     Transmit@port:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x1
   559  000002                     	ds	1
   560  000003                     ??i2_Write_Display_Byte:
   561  000003                     Transmit@receiver:
   562                           	opt stack 0
   563  000003                     ___awdiv@divisor:
   564                           	opt stack 0
   565  000003                     ___lwmod@divisor:
   566                           	opt stack 0
   567                           
   568                           ; 2 bytes @ 0x2
   569  000003                     	ds	1
   570  000004                     ??_Set_Bits:
   571                           
   572                           ; 0 bytes @ 0x3
   573  000004                     	ds	1
   574  000005                     ___awdiv@counter:
   575                           	opt stack 0
   576  000005                     ___lwmod@counter:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x4
   580  000005                     	ds	1
   581  000006                     Ignite_Detonators@counter:
   582                           	opt stack 0
   583  000006                     ___awdiv@sign:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x5
   587  000006                     	ds	1
   588  000007                     Set_Bits@bitcount:
   589                           	opt stack 0
   590  000007                     ___awdiv@quotient:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x6
   594  000007                     	ds	1
   595  000008                     Set_Bits@Bitoutput:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x7
   599  000008                     	ds	1
   600  000009                     i2Write_Display_Byte@counter:
   601                           	opt stack 0
   602  000009                     Evaluate_Display@evaluate:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0x8
   606  000009                     	ds	2
   607  00000B                     ??_Evaluate_Display:
   608                           
   609                           ; 0 bytes @ 0xA
   610  00000B                     	ds	2
   611  00000D                     Evaluate_Display@size:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0xC
   615  00000D                     	ds	1
   616  00000E                     Evaluate_Signs@evaluation_value:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0xD
   620  00000E                     	ds	2
   621  000010                     Evaluate_Signs@valuecounter:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0xF
   625  000010                     	ds	1
   626  000011                     Set_Display@information:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x10
   630  000011                     	ds	1
   631  000012                     Set_Display@value:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x11
   635  000012                     	ds	2
   636  000014                     Set_Display@type:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x13
   640  000014                     	ds	1
   641  000015                     ??_Isr:
   642                           
   643                           ; 0 bytes @ 0x14
   644  000015                     	ds	17
   645  000026                     Isr@pixel_index_array:
   646                           	opt stack 0
   647                           
   648                           ; 1 bytes @ 0x25
   649  000026                     	ds	1
   650  000027                     Isr@pixel_index_bit:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x26
   654  000027                     	ds	1
   655  000028                     Isr@search_index:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x27
   659  000028                     	ds	1
   660                           tblptru	equ	0xFF8
   661                           tblptrh	equ	0xFF7
   662                           tblptrl	equ	0xFF6
   663                           tablat	equ	0xFF5
   664                           postinc0	equ	0xFEE
   665                           wreg	equ	0xFE8
   666                           postdec1	equ	0xFE5
   667                           fsr1l	equ	0xFE1
   668                           
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 86 in file "main.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;		None               void
   681 ;; Registers used:
   682 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1
   688 ;;      Params:         0       0       0
   689 ;;      Locals:         0       0       0
   690 ;;      Temps:          0       0       0
   691 ;;      Totals:         0       0       0
   692 ;;Total ram usage:        0 bytes
   693 ;; Hardware stack levels required when called:    7
   694 ;; This function calls:
   695 ;;		_Init
   696 ;;		_Write_Display_Byte
   697 ;; This function is called by:
   698 ;;		Startup code after reset
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           	psect	text0
   703  000A10                     __ptext0:
   704                           	opt stack 0
   705  000A10                     _main:
   706                           	opt stack 24
   707                           
   708                           ;main.c: 87: Init();
   709                           
   710                           ;incstack = 0
   711  000A10  EC15  F005         	call	_Init	;wreg free
   712  000A14                     l2495:
   713                           
   714                           ;main.c: 90: PORTAbits.RA0 = 1;
   715  000A14  8080               	bsf	3968,0,c	;volatile
   716                           
   717                           ;main.c: 91: PORTCbits.RC2 = 1;
   718  000A16  8482               	bsf	3970,2,c	;volatile
   719                           
   720                           ;main.c: 92: Write_Display_Byte("e");
   721  000A18  0E6E               	movlw	low STR_1
   722  000A1A  0100               	movlb	0	; () banked
   723  000A1C  6F60               	movwf	Write_Display_Byte@write_data& (0+255),b
   724  000A1E  0E02               	movlw	high STR_1
   725  000A20  0100               	movlb	0	; () banked
   726  000A22  6F61               	movwf	(Write_Display_Byte@write_data+1)& (0+255),b
   727  000A24  EC1D  F003         	call	_Write_Display_Byte	;wreg free
   728  000A28  D7F5               	goto	l2495
   729  000A2A                     __end_of_main:
   730                           	opt stack 0
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           postinc0	equ	0xFEE
   736                           wreg	equ	0xFE8
   737                           postdec1	equ	0xFE5
   738                           fsr1l	equ	0xFE1
   739                           
   740 ;; *************** function _Write_Display_Byte *****************
   741 ;; Defined at:
   742 ;;		line 49 in file "communication.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  write_data      2    0[BANK0 ] PTR unsigned char 
   745 ;;		 -> pixels(7), STR_1(2), 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  counter         1    8[BANK0 ] unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;		None               void
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1
   757 ;;      Params:         0       2       0
   758 ;;      Locals:         0       1       0
   759 ;;      Temps:          0       6       0
   760 ;;      Totals:         0       9       0
   761 ;;Total ram usage:        9 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    5
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text1
   772  00063A                     __ptext1:
   773                           	opt stack 0
   774  00063A                     _Write_Display_Byte:
   775                           	opt stack 25
   776                           
   777                           ;communication.c: 50: for(unsigned char counter = sizeof(pixels); counter > 0;
   778                           
   779                           ;incstack = 0
   780  00063A  0E07               	movlw	7
   781  00063C  0100               	movlb	0	; () banked
   782  00063E  6F68               	movwf	Write_Display_Byte@counter& (0+255),b
   783  000640                     
   784                           ;communication.c: 51: counter--) {
   785  000640  0100               	movlb	0	; () banked
   786  000642  5168               	movf	Write_Display_Byte@counter& (0+255),w,b
   787  000644  0100               	movlb	0	; () banked
   788  000646  B4D8               	btfsc	status,2,c
   789  000648  0012               	return	
   790                           
   791                           ; BSR set to: 0
   792                           ;communication.c: 52: if(SSP1IF = 1) {
   793                           
   794                           ; BSR set to: 0
   795  00064A  869E               	bsf	3998,3,c	;volatile
   796  00064C  B69E               	btfsc	3998,3,c	;volatile
   797                           
   798                           ; BSR set to: 0
   799                           ;communication.c: 53: SSP1IF = 0;
   800  00064E  969E               	bcf	3998,3,c	;volatile
   801                           
   802                           ; BSR set to: 0
   803                           ;communication.c: 54: }
   804                           ;communication.c: 55: SSP1BUF = write_data[counter - 1];
   805                           
   806                           ; BSR set to: 0
   807  000650  0EFF               	movlw	255
   808  000652  0100               	movlb	0	; () banked
   809  000654  6F62               	movwf	??_Write_Display_Byte& (0+255),b
   810  000656  0EFF               	movlw	255
   811  000658  0100               	movlb	0	; () banked
   812  00065A  6F63               	movwf	(??_Write_Display_Byte+1)& (0+255),b
   813  00065C  0100               	movlb	0	; () banked
   814  00065E  5168               	movf	Write_Display_Byte@counter& (0+255),w,b
   815  000660  0100               	movlb	0	; () banked
   816  000662  6F64               	movwf	(??_Write_Display_Byte+2)& (0+255),b
   817  000664  6B65               	clrf	(??_Write_Display_Byte+3)& (0+255),b
   818  000666  0100               	movlb	0	; () banked
   819  000668  5162               	movf	??_Write_Display_Byte& (0+255),w,b
   820  00066A  0100               	movlb	0	; () banked
   821  00066C  2764               	addwf	(??_Write_Display_Byte+2)& (0+255),f,b
   822  00066E  0100               	movlb	0	; () banked
   823  000670  5163               	movf	(??_Write_Display_Byte+1)& (0+255),w,b
   824  000672  0100               	movlb	0	; () banked
   825  000674  2365               	addwfc	(??_Write_Display_Byte+3)& (0+255),f,b
   826  000676  C060  F066         	movff	Write_Display_Byte@write_data,??_Write_Display_Byte+4
   827  00067A  C061  F067         	movff	Write_Display_Byte@write_data+1,??_Write_Display_Byte+5
   828  00067E  0100               	movlb	0	; () banked
   829  000680  5164               	movf	(??_Write_Display_Byte+2)& (0+255),w,b
   830  000682  0100               	movlb	0	; () banked
   831  000684  2766               	addwf	(??_Write_Display_Byte+4)& (0+255),f,b
   832  000686  0100               	movlb	0	; () banked
   833  000688  5165               	movf	(??_Write_Display_Byte+3)& (0+255),w,b
   834  00068A  0100               	movlb	0	; () banked
   835  00068C  2367               	addwfc	(??_Write_Display_Byte+5)& (0+255),f,b
   836  00068E  C066  FFF6         	movff	??_Write_Display_Byte+4,tblptrl
   837  000692  C067  FFF7         	movff	??_Write_Display_Byte+5,tblptrh
   838  000696  6AF8               	clrf	tblptru,c
   839  000698  0E01               	movlw	(high __ramtop+-1)
   840  00069A  64F7               	cpfsgt	tblptrh,c
   841  00069C  D003               	bra	u1717
   842  00069E  0008               	tblrd		*
   843  0006A0  50F5               	movf	tablat,w,c
   844  0006A2  D005               	bra	u1710
   845  0006A4                     u1717:
   846  0006A4  CFF6 FFE9          	movff	tblptrl,fsr0l
   847  0006A8  CFF7 FFEA          	movff	tblptrh,fsr0h
   848  0006AC  50EF               	movf	indf0,w,c
   849  0006AE                     u1710:
   850  0006AE  6EC9               	movwf	4041,c	;volatile
   851  0006B0                     l509:
   852  0006B0  A69E               	btfss	3998,3,c	;volatile
   853  0006B2  D7FE               	goto	l509
   854                           
   855                           ;communication.c: 57: SSP1IF = 0;
   856  0006B4  969E               	bcf	3998,3,c	;volatile
   857                           
   858                           ;communication.c: 58: PORTCbits.RC0 = 0;
   859  0006B6  9082               	bcf	3970,0,c	;volatile
   860                           
   861                           ;communication.c: 59: PORTCbits.RC0 = 1;
   862  0006B8  8082               	bsf	3970,0,c	;volatile
   863                           
   864                           ;communication.c: 60: PORTCbits.RC0 = 0;
   865  0006BA  9082               	bcf	3970,0,c	;volatile
   866  0006BC  0100               	movlb	0	; () banked
   867  0006BE  0768               	decf	Write_Display_Byte@counter& (0+255),f,b
   868  0006C0  D7BF               	goto	L1
   869  0006C2                     __end_of_Write_Display_Byte:
   870                           	opt stack 0
   871                           tblptru	equ	0xFF8
   872                           tblptrh	equ	0xFF7
   873                           tblptrl	equ	0xFF6
   874                           tablat	equ	0xFF5
   875                           indf0	equ	0xFEF
   876                           postinc0	equ	0xFEE
   877                           fsr0h	equ	0xFEA
   878                           fsr0l	equ	0xFE9
   879                           wreg	equ	0xFE8
   880                           postdec1	equ	0xFE5
   881                           fsr1l	equ	0xFE1
   882                           status	equ	0xFD8
   883                           
   884 ;; *************** function _Init *****************
   885 ;; Defined at:
   886 ;;		line 3 in file "init.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;		None               void
   893 ;; Registers used:
   894 ;;		wreg, status,2, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1
   900 ;;      Params:         0       0       0
   901 ;;      Locals:         0       0       0
   902 ;;      Temps:          0       0       0
   903 ;;      Totals:         0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; Hardware stack levels required when called:    6
   907 ;; This function calls:
   908 ;;		_InitAnsel
   909 ;;		_InitMiscellaneous
   910 ;;		_InitPort
   911 ;;		_InitTimer
   912 ;;		_InitTransmission
   913 ;;		_InitTris
   914 ;; This function is called by:
   915 ;;		_main
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text2
   920  000A2A                     __ptext2:
   921                           	opt stack 0
   922  000A2A                     _Init:
   923                           	opt stack 24
   924                           
   925                           ;init.c: 4: InitPort();
   926                           
   927                           ; BSR set to: 0
   928                           ;incstack = 0
   929  000A2A  EC35  F005         	call	_InitPort	;wreg free
   930                           
   931                           ;init.c: 5: InitTris();
   932  000A2E  EC2C  F005         	call	_InitTris	;wreg free
   933                           
   934                           ;init.c: 6: InitAnsel();
   935  000A32  EC22  F005         	call	_InitAnsel	;wreg free
   936                           
   937                           ;init.c: 7: InitMiscellaneous();
   938  000A36  EC45  F005         	call	_InitMiscellaneous	;wreg free
   939                           
   940                           ;init.c: 8: InitTransmission();
   941  000A3A  ECF6  F004         	call	_InitTransmission	;wreg free
   942                           
   943                           ;init.c: 9: InitTimer();
   944  000A3E  ECDE  F004         	call	_InitTimer	;wreg free
   945  000A42  0012               	return		;funcret
   946  000A44                     __end_of_Init:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           tblptrl	equ	0xFF6
   951                           tablat	equ	0xFF5
   952                           indf0	equ	0xFEF
   953                           postinc0	equ	0xFEE
   954                           fsr0h	equ	0xFEA
   955                           fsr0l	equ	0xFE9
   956                           wreg	equ	0xFE8
   957                           postdec1	equ	0xFE5
   958                           fsr1l	equ	0xFE1
   959                           status	equ	0xFD8
   960                           
   961 ;; *************** function _InitTris *****************
   962 ;; Defined at:
   963 ;;		line 20 in file "init.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;		None               void
   970 ;; Registers used:
   971 ;;		wreg, status,2
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1
   977 ;;      Params:         0       0       0
   978 ;;      Locals:         0       0       0
   979 ;;      Temps:          0       0       0
   980 ;;      Totals:         0       0       0
   981 ;;Total ram usage:        0 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    5
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_Init
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text3
   992  000A58                     __ptext3:
   993                           	opt stack 0
   994  000A58                     _InitTris:
   995                           	opt stack 24
   996                           
   997                           ;init.c: 21: TRISA = 0b00000000;
   998                           
   999                           ;incstack = 0
  1000  000A58  0E00               	movlw	0
  1001  000A5A  6E92               	movwf	3986,c	;volatile
  1002                           
  1003                           ;init.c: 22: TRISB = 0b00011111;
  1004  000A5C  0E1F               	movlw	31
  1005  000A5E  6E93               	movwf	3987,c	;volatile
  1006                           
  1007                           ;init.c: 23: TRISC = 0b10000010;
  1008  000A60  0E82               	movlw	130
  1009  000A62  6E94               	movwf	3988,c	;volatile
  1010                           
  1011                           ;init.c: 24: TRISE = 0;
  1012  000A64  0E00               	movlw	0
  1013  000A66  6E96               	movwf	3990,c	;volatile
  1014  000A68  0012               	return		;funcret
  1015  000A6A                     __end_of_InitTris:
  1016                           	opt stack 0
  1017                           tblptru	equ	0xFF8
  1018                           tblptrh	equ	0xFF7
  1019                           tblptrl	equ	0xFF6
  1020                           tablat	equ	0xFF5
  1021                           indf0	equ	0xFEF
  1022                           postinc0	equ	0xFEE
  1023                           fsr0h	equ	0xFEA
  1024                           fsr0l	equ	0xFE9
  1025                           wreg	equ	0xFE8
  1026                           postdec1	equ	0xFE5
  1027                           fsr1l	equ	0xFE1
  1028                           status	equ	0xFD8
  1029                           
  1030 ;; *************** function _InitTransmission *****************
  1031 ;; Defined at:
  1032 ;;		line 37 in file "init.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;		None               void
  1039 ;; Registers used:
  1040 ;;		wreg, status,2
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1
  1046 ;;      Params:         0       0       0
  1047 ;;      Locals:         0       0       0
  1048 ;;      Temps:          0       0       0
  1049 ;;      Totals:         0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    5
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_Init
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text4
  1061  0009EC                     __ptext4:
  1062                           	opt stack 0
  1063  0009EC                     _InitTransmission:
  1064                           	opt stack 24
  1065                           
  1066                           ;init.c: 39: SSP1STAT = 0b01000000;
  1067                           
  1068                           ;incstack = 0
  1069  0009EC  0E40               	movlw	64
  1070  0009EE  6EC7               	movwf	4039,c	;volatile
  1071                           
  1072                           ;init.c: 40: SSP1CON1 = 0b00100010;
  1073  0009F0  0E22               	movlw	34
  1074  0009F2  6EC6               	movwf	4038,c	;volatile
  1075                           
  1076                           ;init.c: 42: TXSTA1bits.SYNC = 0;
  1077  0009F4  98AC               	bcf	4012,4,c	;volatile
  1078                           
  1079                           ;init.c: 43: TXSTA1bits.BRGH = 1;
  1080  0009F6  84AC               	bsf	4012,2,c	;volatile
  1081                           
  1082                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
  1083  0009F8  96B8               	bcf	4024,3,c	;volatile
  1084                           
  1085                           ;init.c: 45: SPBRG1 = 25;
  1086  0009FA  0E19               	movlw	25
  1087  0009FC  6EAF               	movwf	4015,c	;volatile
  1088                           
  1089                           ;init.c: 46: TRISCbits.RC6 = 1;
  1090  0009FE  8C94               	bsf	3988,6,c	;volatile
  1091                           
  1092                           ;init.c: 47: TRISCbits.RC7 = 1;
  1093  000A00  8E94               	bsf	3988,7,c	;volatile
  1094                           
  1095                           ;init.c: 48: RCSTA1bits.SPEN = 1;
  1096  000A02  8EAB               	bsf	4011,7,c	;volatile
  1097                           
  1098                           ;init.c: 49: TXSTA1bits.TX9 = 1;
  1099  000A04  8CAC               	bsf	4012,6,c	;volatile
  1100                           
  1101                           ;init.c: 50: TXSTA1bits.TXEN = 1;
  1102  000A06  8AAC               	bsf	4012,5,c	;volatile
  1103                           
  1104                           ;init.c: 51: RCSTA1bits.RC9 = 1;
  1105  000A08  8CAB               	bsf	4011,6,c	;volatile
  1106                           
  1107                           ;init.c: 52: RCSTA1bits.CREN = 1;
  1108  000A0A  88AB               	bsf	4011,4,c	;volatile
  1109                           
  1110                           ;init.c: 53: TRISCbits.RC6 = 0;
  1111  000A0C  9C94               	bcf	3988,6,c	;volatile
  1112  000A0E  0012               	return		;funcret
  1113  000A10                     __end_of_InitTransmission:
  1114                           	opt stack 0
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           indf0	equ	0xFEF
  1120                           postinc0	equ	0xFEE
  1121                           fsr0h	equ	0xFEA
  1122                           fsr0l	equ	0xFE9
  1123                           wreg	equ	0xFE8
  1124                           postdec1	equ	0xFE5
  1125                           fsr1l	equ	0xFE1
  1126                           status	equ	0xFD8
  1127                           
  1128 ;; *************** function _InitTimer *****************
  1129 ;; Defined at:
  1130 ;;		line 56 in file "init.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;		None               void
  1137 ;; Registers used:
  1138 ;;		wreg, status,2
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1
  1144 ;;      Params:         0       0       0
  1145 ;;      Locals:         0       0       0
  1146 ;;      Temps:          0       0       0
  1147 ;;      Totals:         0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    5
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_Init
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text5
  1159  0009BC                     __ptext5:
  1160                           	opt stack 0
  1161  0009BC                     _InitTimer:
  1162                           	opt stack 24
  1163                           
  1164                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
  1165                           
  1166                           ;incstack = 0
  1167  0009BC  0E3F               	movlw	-193
  1168  0009BE  16CD               	andwf	4045,f,c	;volatile
  1169                           
  1170                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
  1171  0009C0  0E30               	movlw	48
  1172  0009C2  12CD               	iorwf	4045,f,c	;volatile
  1173                           
  1174                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
  1175  0009C4  94CD               	bcf	4045,2,c	;volatile
  1176                           
  1177                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
  1178  0009C6  0E3F               	movlw	-193
  1179  0009C8  16B1               	andwf	4017,f,c	;volatile
  1180                           
  1181                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
  1182  0009CA  0E30               	movlw	48
  1183  0009CC  12B1               	iorwf	4017,f,c	;volatile
  1184                           
  1185                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
  1186  0009CE  94B1               	bcf	4017,2,c	;volatile
  1187                           
  1188                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
  1189  0009D0  50BD               	movf	4029,w,c	;volatile
  1190  0009D2  0BF0               	andlw	-16
  1191  0009D4  090A               	iorlw	10
  1192  0009D6  6EBD               	movwf	4029,c	;volatile
  1193                           
  1194                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
  1195  0009D8  010F               	movlb	15	; () banked
  1196  0009DA  5149               	movf	73,w,b	;volatile
  1197  0009DC  0BFC               	andlw	-4
  1198  0009DE  0901               	iorlw	1
  1199  0009E0  6F49               	movwf	73,b	;volatile
  1200                           
  1201                           ;init.c: 68: CCPR1L = 72;
  1202  0009E2  0E48               	movlw	72
  1203  0009E4  6EBE               	movwf	4030,c	;volatile
  1204                           
  1205                           ;init.c: 69: CCPR1H = 232;
  1206  0009E6  0EE8               	movlw	232
  1207  0009E8  6EBF               	movwf	4031,c	;volatile
  1208                           
  1209                           ; BSR set to: 15
  1210  0009EA  0012               	return		;funcret
  1211  0009EC                     __end_of_InitTimer:
  1212                           	opt stack 0
  1213                           tblptru	equ	0xFF8
  1214                           tblptrh	equ	0xFF7
  1215                           tblptrl	equ	0xFF6
  1216                           tablat	equ	0xFF5
  1217                           indf0	equ	0xFEF
  1218                           postinc0	equ	0xFEE
  1219                           fsr0h	equ	0xFEA
  1220                           fsr0l	equ	0xFE9
  1221                           wreg	equ	0xFE8
  1222                           postdec1	equ	0xFE5
  1223                           fsr1l	equ	0xFE1
  1224                           status	equ	0xFD8
  1225                           
  1226 ;; *************** function _InitPort *****************
  1227 ;; Defined at:
  1228 ;;		line 13 in file "init.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;		None               void
  1235 ;; Registers used:
  1236 ;;		wreg, status,2
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1
  1242 ;;      Params:         0       0       0
  1243 ;;      Locals:         0       0       0
  1244 ;;      Temps:          0       0       0
  1245 ;;      Totals:         0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    5
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_Init
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text6
  1257  000A6A                     __ptext6:
  1258                           	opt stack 0
  1259  000A6A                     _InitPort:
  1260                           	opt stack 24
  1261                           
  1262                           ;init.c: 14: PORTA = 0b00000000;
  1263                           
  1264                           ; BSR set to: 15
  1265                           ;incstack = 0
  1266  000A6A  0E00               	movlw	0
  1267  000A6C  6E80               	movwf	3968,c	;volatile
  1268                           
  1269                           ;init.c: 15: PORTB = 0b00000000;
  1270  000A6E  0E00               	movlw	0
  1271  000A70  6E81               	movwf	3969,c	;volatile
  1272                           
  1273                           ;init.c: 16: PORTC = 0b00000100;
  1274  000A72  0E04               	movlw	4
  1275  000A74  6E82               	movwf	3970,c	;volatile
  1276                           
  1277                           ;init.c: 17: PORTE = 0;
  1278  000A76  0E00               	movlw	0
  1279  000A78  6E84               	movwf	3972,c	;volatile
  1280  000A7A  0012               	return		;funcret
  1281  000A7C                     __end_of_InitPort:
  1282                           	opt stack 0
  1283                           tblptru	equ	0xFF8
  1284                           tblptrh	equ	0xFF7
  1285                           tblptrl	equ	0xFF6
  1286                           tablat	equ	0xFF5
  1287                           indf0	equ	0xFEF
  1288                           postinc0	equ	0xFEE
  1289                           fsr0h	equ	0xFEA
  1290                           fsr0l	equ	0xFE9
  1291                           wreg	equ	0xFE8
  1292                           postdec1	equ	0xFE5
  1293                           fsr1l	equ	0xFE1
  1294                           status	equ	0xFD8
  1295                           
  1296 ;; *************** function _InitMiscellaneous *****************
  1297 ;; Defined at:
  1298 ;;		line 33 in file "init.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;		None               void
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1
  1312 ;;      Params:         0       0       0
  1313 ;;      Locals:         0       0       0
  1314 ;;      Temps:          0       0       0
  1315 ;;      Totals:         0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    5
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_Init
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text7
  1327  000A8A                     __ptext7:
  1328                           	opt stack 0
  1329  000A8A                     _InitMiscellaneous:
  1330                           	opt stack 24
  1331                           
  1332                           ;init.c: 34: OSCCON = 0b01010011;
  1333                           
  1334                           ;incstack = 0
  1335  000A8A  0E53               	movlw	83
  1336  000A8C  6ED3               	movwf	4051,c	;volatile
  1337  000A8E  0012               	return		;funcret
  1338  000A90                     __end_of_InitMiscellaneous:
  1339                           	opt stack 0
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           indf0	equ	0xFEF
  1345                           postinc0	equ	0xFEE
  1346                           fsr0h	equ	0xFEA
  1347                           fsr0l	equ	0xFE9
  1348                           wreg	equ	0xFE8
  1349                           postdec1	equ	0xFE5
  1350                           fsr1l	equ	0xFE1
  1351                           status	equ	0xFD8
  1352                           
  1353 ;; *************** function _InitAnsel *****************
  1354 ;; Defined at:
  1355 ;;		line 27 in file "init.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;		None               void
  1362 ;; Registers used:
  1363 ;;		wreg, status,2
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1
  1369 ;;      Params:         0       0       0
  1370 ;;      Locals:         0       0       0
  1371 ;;      Temps:          0       0       0
  1372 ;;      Totals:         0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    5
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_Init
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text8
  1384  000A44                     __ptext8:
  1385                           	opt stack 0
  1386  000A44                     _InitAnsel:
  1387                           	opt stack 24
  1388                           
  1389                           ;init.c: 28: ANSELA = 0;
  1390                           
  1391                           ;incstack = 0
  1392  000A44  0E00               	movlw	0
  1393  000A46  010F               	movlb	15	; () banked
  1394  000A48  6F38               	movwf	56,b	;volatile
  1395                           
  1396                           ;init.c: 29: ANSELB = 0;
  1397  000A4A  0E00               	movlw	0
  1398  000A4C  010F               	movlb	15	; () banked
  1399  000A4E  6F39               	movwf	57,b	;volatile
  1400                           
  1401                           ;init.c: 30: ANSELC = 0;
  1402  000A50  0E00               	movlw	0
  1403  000A52  010F               	movlb	15	; () banked
  1404  000A54  6F3A               	movwf	58,b	;volatile
  1405                           
  1406                           ; BSR set to: 15
  1407  000A56  0012               	return		;funcret
  1408  000A58                     __end_of_InitAnsel:
  1409                           	opt stack 0
  1410                           tblptru	equ	0xFF8
  1411                           tblptrh	equ	0xFF7
  1412                           tblptrl	equ	0xFF6
  1413                           tablat	equ	0xFF5
  1414                           indf0	equ	0xFEF
  1415                           postinc0	equ	0xFEE
  1416                           fsr0h	equ	0xFEA
  1417                           fsr0l	equ	0xFE9
  1418                           wreg	equ	0xFE8
  1419                           postdec1	equ	0xFE5
  1420                           fsr1l	equ	0xFE1
  1421                           status	equ	0xFD8
  1422                           
  1423 ;; *************** function _Isr *****************
  1424 ;; Defined at:
  1425 ;;		line 4 in file "interrupt.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;  search_index    1   39[COMRAM] unsigned char 
  1430 ;;  pixel_index_    1   38[COMRAM] unsigned char 
  1431 ;;  pixel_index_    1   37[COMRAM] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;		None               void
  1434 ;; Registers used:
  1435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1
  1441 ;;      Params:         0       0       0
  1442 ;;      Locals:         3       0       0
  1443 ;;      Temps:         17       0       0
  1444 ;;      Totals:        20       0       0
  1445 ;;Total ram usage:       20 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    4
  1448 ;; This function calls:
  1449 ;;		_Check_Detonators
  1450 ;;		_Ignite_Detonators
  1451 ;;		_Receive
  1452 ;;		_Set_Display
  1453 ;;		___awdiv
  1454 ;; This function is called by:
  1455 ;;		Interrupt level 2
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	intcode
  1460  000008                     __pintcode:
  1461                           	opt stack 0
  1462  000008                     _Isr:
  1463                           	opt stack 24
  1464                           
  1465                           ; BSR set to: 15
  1466                           ;incstack = 0
  1467  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1468  00000A  CFFA F018          	movff	pclath,??_Isr+3
  1469  00000E  CFFB F019          	movff	pclatu,??_Isr+4
  1470  000012  CFE9 F01A          	movff	fsr0l,??_Isr+5
  1471  000016  CFEA F01B          	movff	fsr0h,??_Isr+6
  1472  00001A  CFE1 F01C          	movff	fsr1l,??_Isr+7
  1473  00001E  CFE2 F01D          	movff	fsr1h,??_Isr+8
  1474  000022  CFD9 F01E          	movff	fsr2l,??_Isr+9
  1475  000026  CFDA F01F          	movff	fsr2h,??_Isr+10
  1476  00002A  CFF3 F020          	movff	prodl,??_Isr+11
  1477  00002E  CFF4 F021          	movff	prodh,??_Isr+12
  1478  000032  CFF6 F022          	movff	tblptrl,??_Isr+13
  1479  000036  CFF7 F023          	movff	tblptrh,??_Isr+14
  1480  00003A  CFF8 F024          	movff	tblptru,??_Isr+15
  1481  00003E  CFF5 F025          	movff	tablat,??_Isr+16
  1482                           
  1483                           ;interrupt.c: 5: if(PIR1bits.CCP1IF == 1) {
  1484  000042  A49E               	btfss	3998,2,c	;volatile
  1485  000044  D00B               	goto	i2l2371
  1486                           
  1487                           ;interrupt.c: 7: PIR1bits.CCP1IF = 0;
  1488  000046  949E               	bcf	3998,2,c	;volatile
  1489                           
  1490                           ;interrupt.c: 8: T1CONbits.TMR1ON = 1;
  1491  000048  80CD               	bsf	4045,0,c	;volatile
  1492                           
  1493                           ;interrupt.c: 9: T3CONbits.TMR3ON = 0;
  1494  00004A  90B1               	bcf	4017,0,c	;volatile
  1495                           
  1496                           ;interrupt.c: 10: TMR3L = 0;
  1497  00004C  0E00               	movlw	0
  1498  00004E  6EB2               	movwf	4018,c	;volatile
  1499                           
  1500                           ;interrupt.c: 11: TMR3H = 0;
  1501  000050  0E00               	movlw	0
  1502  000052  6EB3               	movwf	4019,c	;volatile
  1503                           
  1504                           ;interrupt.c: 12: current_time++;
  1505  000054  4A2F               	infsnz	_current_time,f,c
  1506  000056  2A30               	incf	_current_time+1,f,c
  1507                           
  1508                           ;interrupt.c: 13: Ignite_Detonators();
  1509  000058  ECA3  F003         	call	_Ignite_Detonators	;wreg free
  1510  00005C                     i2l2371:
  1511                           
  1512                           ;interrupt.c: 14: }
  1513                           ;interrupt.c: 15: if(PIR1bits.TMR1IF == 1) {
  1514  00005C  A09E               	btfss	3998,0,c	;volatile
  1515  00005E  D007               	goto	i2l2377
  1516                           
  1517                           ;interrupt.c: 16: PIR1bits.TMR1IF = 0;
  1518  000060  909E               	bcf	3998,0,c	;volatile
  1519                           
  1520                           ;interrupt.c: 17: T3CONbits.TMR3ON = 1;
  1521  000062  80B1               	bsf	4017,0,c	;volatile
  1522                           
  1523                           ;interrupt.c: 18: T1CONbits.TMR1ON = 0;
  1524  000064  90CD               	bcf	4045,0,c	;volatile
  1525                           
  1526                           ;interrupt.c: 19: TMR1L = 0;
  1527  000066  0E00               	movlw	0
  1528  000068  6ECE               	movwf	4046,c	;volatile
  1529                           
  1530                           ;interrupt.c: 20: TMR1H = 0;
  1531  00006A  0E00               	movlw	0
  1532  00006C  6ECF               	movwf	4047,c	;volatile
  1533  00006E                     i2l2377:
  1534                           
  1535                           ;interrupt.c: 21: }
  1536                           ;interrupt.c: 22: if(PIR1bits.RCIF == 1) {
  1537  00006E  AA9E               	btfss	3998,5,c	;volatile
  1538  000070  D0B4               	goto	i2l585
  1539                           
  1540                           ;interrupt.c: 23: PIR1bits.RCIF = 0;
  1541  000072  9A9E               	bcf	3998,5,c	;volatile
  1542                           
  1543                           ;interrupt.c: 24: if(RCSTAbits.RX9D == 1) {
  1544  000074  A0AB               	btfss	4011,0,c	;volatile
  1545  000076  D016               	goto	i2l572
  1546                           
  1547                           ;interrupt.c: 25: receive_counter = 0;
  1548  000078  0E00               	movlw	0
  1549  00007A  6E34               	movwf	_receive_counter,c
  1550                           
  1551                           ;interrupt.c: 27: received[receive_counter] =
  1552                           ;interrupt.c: 28: Receive();
  1553  00007C  5034               	movf	_receive_counter,w,c
  1554  00007E  0D01               	mullw	1
  1555  000080  0E29               	movlw	low _received
  1556  000082  24F3               	addwf	prodl,w,c
  1557  000084  6ED9               	movwf	fsr2l,c
  1558  000086  0E00               	movlw	high _received
  1559  000088  20F4               	addwfc	prodh,w,c
  1560  00008A  6EDA               	movwf	fsr2h,c
  1561  00008C  EC3E  F005         	call	_Receive	;wreg free
  1562  000090  6EDF               	movwf	indf2,c
  1563                           
  1564                           ;interrupt.c: 29: receive_counter++;
  1565  000092  2A34               	incf	_receive_counter,f,c
  1566                           
  1567                           ;interrupt.c: 31: if(received[0] == 0xAA) {
  1568  000094  0EAA               	movlw	170
  1569  000096  1829               	xorwf	_received,w,c
  1570  000098  A4D8               	btfss	status,2,c
  1571  00009A  D002               	goto	i2l573
  1572                           
  1573                           ;interrupt.c: 32: master_addressed = 1;
  1574  00009C  8240               	bsf	_master_addressed/(0+8),_master_addressed& (0+7),c
  1575                           
  1576                           ;interrupt.c: 33: } else {
  1577  00009E  D090               	goto	i2l2427
  1578  0000A0                     i2l573:
  1579                           
  1580                           ;interrupt.c: 34: master_addressed = 0;
  1581  0000A0  9240               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  1582                           
  1583                           ;interrupt.c: 35: }
  1584                           ;interrupt.c: 36: } else if(master_addressed == 1) {
  1585  0000A2  D08E               	goto	i2l2427
  1586  0000A4                     i2l572:
  1587  0000A4  A240               	btfss	_master_addressed/(0+8),_master_addressed& (0+7),c
  1588  0000A6  D08C               	goto	i2l2427
  1589                           
  1590                           ;interrupt.c: 37: received[receive_counter] =
  1591                           ;interrupt.c: 38: Receive();
  1592  0000A8  5034               	movf	_receive_counter,w,c
  1593  0000AA  0D01               	mullw	1
  1594  0000AC  0E29               	movlw	low _received
  1595  0000AE  24F3               	addwf	prodl,w,c
  1596  0000B0  6ED9               	movwf	fsr2l,c
  1597  0000B2  0E00               	movlw	high _received
  1598  0000B4  20F4               	addwfc	prodh,w,c
  1599  0000B6  6EDA               	movwf	fsr2h,c
  1600  0000B8  EC3E  F005         	call	_Receive	;wreg free
  1601  0000BC  6EDF               	movwf	indf2,c
  1602                           
  1603                           ;interrupt.c: 39: receive_counter++;
  1604  0000BE  2A34               	incf	_receive_counter,f,c
  1605                           
  1606                           ;interrupt.c: 41: if(receive_counter > 5) {
  1607  0000C0  0E05               	movlw	5
  1608  0000C2  6434               	cpfsgt	_receive_counter,c
  1609  0000C4  D07D               	goto	i2l2427
  1610                           
  1611                           ;interrupt.c: 42: receive_counter = 0;
  1612  0000C6  0E00               	movlw	0
  1613  0000C8  6E34               	movwf	_receive_counter,c
  1614                           
  1615                           ;interrupt.c: 43: master_addressed = 0;
  1616  0000CA  9240               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  1617                           
  1618                           ;interrupt.c: 45: if(received[2] == 'T') {
  1619  0000CC  0E54               	movlw	84
  1620  0000CE  182B               	xorwf	_received+2,w,c
  1621  0000D0  A4D8               	btfss	status,2,c
  1622  0000D2  D076               	goto	i2l2427
  1623                           
  1624                           ;interrupt.c: 46: unsigned char search_index = 0xFF;
  1625  0000D4  6828               	setf	Isr@search_index,c
  1626                           
  1627                           ;interrupt.c: 47: unsigned char pixel_index_array = 0;
  1628  0000D6  0E00               	movlw	0
  1629  0000D8  6E26               	movwf	Isr@pixel_index_array,c
  1630                           
  1631                           ;interrupt.c: 48: unsigned char pixel_index_bit = 0;
  1632  0000DA  0E00               	movlw	0
  1633  0000DC  6E27               	movwf	Isr@pixel_index_bit,c
  1634                           
  1635                           ;interrupt.c: 49: search_index = (received[1] * 10);
  1636  0000DE  502A               	movf	_received+1,w,c
  1637  0000E0  0D0A               	mullw	10
  1638  0000E2  CFF3 F028          	movff	prodl,Isr@search_index
  1639                           
  1640                           ;interrupt.c: 51: search_index += received[3];
  1641  0000E6  502C               	movf	_received+3,w,c
  1642  0000E8  2628               	addwf	Isr@search_index,f,c
  1643                           
  1644                           ;interrupt.c: 53: pixel_index_array =
  1645                           ;interrupt.c: 54: pin[search_index].led_address / 8;
  1646  0000EA  5028               	movf	Isr@search_index,w,c
  1647  0000EC  0D06               	mullw	6
  1648  0000EE  0E03               	movlw	3
  1649  0000F0  26F3               	addwf	prodl,f,c
  1650  0000F2  0E00               	movlw	0
  1651  0000F4  22F4               	addwfc	prodh,f,c
  1652  0000F6  0E00               	movlw	low _pin
  1653  0000F8  24F3               	addwf	prodl,w,c
  1654  0000FA  6ED9               	movwf	fsr2l,c
  1655  0000FC  0E01               	movlw	high _pin
  1656  0000FE  20F4               	addwfc	prodh,w,c
  1657  000100  6EDA               	movwf	fsr2h,c
  1658  000102  50DF               	movf	indf2,w,c
  1659  000104  6E15               	movwf	??_Isr& (0+255),c
  1660  000106  5015               	movf	??_Isr,w,c
  1661  000108  6E01               	movwf	___awdiv@dividend,c
  1662  00010A  6A02               	clrf	___awdiv@dividend+1,c
  1663  00010C  0E00               	movlw	0
  1664  00010E  6E04               	movwf	___awdiv@divisor+1,c
  1665  000110  0E08               	movlw	8
  1666  000112  6E03               	movwf	___awdiv@divisor,c
  1667  000114  EC61  F003         	call	___awdiv	;wreg free
  1668  000118  5001               	movf	?___awdiv,w,c
  1669  00011A  6E26               	movwf	Isr@pixel_index_array,c
  1670                           
  1671                           ;interrupt.c: 55: pixel_index_bit =
  1672                           ;interrupt.c: 56: pin[search_index].led_address % 8;
  1673  00011C  5028               	movf	Isr@search_index,w,c
  1674  00011E  0D06               	mullw	6
  1675  000120  0E03               	movlw	3
  1676  000122  26F3               	addwf	prodl,f,c
  1677  000124  0E00               	movlw	0
  1678  000126  22F4               	addwfc	prodh,f,c
  1679  000128  0E00               	movlw	low _pin
  1680  00012A  24F3               	addwf	prodl,w,c
  1681  00012C  6ED9               	movwf	fsr2l,c
  1682  00012E  0E01               	movlw	high _pin
  1683  000130  20F4               	addwfc	prodh,w,c
  1684  000132  6EDA               	movwf	fsr2h,c
  1685  000134  50DF               	movf	indf2,w,c
  1686  000136  0B07               	andlw	7
  1687  000138  6E27               	movwf	Isr@pixel_index_bit,c
  1688                           
  1689                           ;interrupt.c: 57: if(received[4] == '1'){
  1690  00013A  0E31               	movlw	49
  1691  00013C  182D               	xorwf	_received+4,w,c
  1692  00013E  A4D8               	btfss	status,2,c
  1693  000140  D015               	goto	i2l2419
  1694                           
  1695                           ;interrupt.c: 58: pixels[pixel_index_array] |=
  1696                           ;interrupt.c: 59: (1 << pixel_index_bit);
  1697  000142  C027  F015         	movff	Isr@pixel_index_bit,??_Isr
  1698  000146  0E01               	movlw	1
  1699  000148  6E16               	movwf	(??_Isr+1)& (0+255),c
  1700  00014A  2A15               	incf	??_Isr,f,c
  1701  00014C  D002               	goto	i2u163_44
  1702  00014E                     i2u163_45:
  1703  00014E  90D8               	bcf	status,0,c
  1704  000150  3616               	rlcf	??_Isr+1,f,c
  1705  000152                     i2u163_44:
  1706  000152  2E15               	decfsz	??_Isr,f,c
  1707  000154  D7FC               	goto	i2u163_45
  1708  000156  5026               	movf	Isr@pixel_index_array,w,c
  1709  000158  0D01               	mullw	1
  1710  00015A  0E36               	movlw	low _pixels
  1711  00015C  24F3               	addwf	prodl,w,c
  1712  00015E  6ED9               	movwf	fsr2l,c
  1713  000160  0E00               	movlw	high _pixels
  1714  000162  20F4               	addwfc	prodh,w,c
  1715  000164  6EDA               	movwf	fsr2h,c
  1716  000166  5016               	movf	??_Isr+1,w,c
  1717  000168  12DF               	iorwf	indf2,f,c
  1718                           
  1719                           ;interrupt.c: 60: }else if(received[4] == '0') {
  1720  00016A  D01B               	goto	i2l2423
  1721  00016C                     i2l2419:
  1722  00016C  0E30               	movlw	48
  1723  00016E  182D               	xorwf	_received+4,w,c
  1724  000170  A4D8               	btfss	status,2,c
  1725  000172  D017               	goto	i2l2423
  1726                           
  1727                           ;interrupt.c: 61: pixels[pixel_index_array] &=
  1728                           ;interrupt.c: 62: ~(1 << pixel_index_bit);
  1729  000174  C027  F015         	movff	Isr@pixel_index_bit,??_Isr
  1730  000178  0E01               	movlw	1
  1731  00017A  6E16               	movwf	(??_Isr+1)& (0+255),c
  1732  00017C  2A15               	incf	??_Isr,f,c
  1733  00017E  D002               	goto	i2u165_44
  1734  000180                     i2u165_45:
  1735  000180  90D8               	bcf	status,0,c
  1736  000182  3616               	rlcf	??_Isr+1,f,c
  1737  000184                     i2u165_44:
  1738  000184  2E15               	decfsz	??_Isr,f,c
  1739  000186  D7FC               	goto	i2u165_45
  1740  000188  5016               	movf	??_Isr+1,w,c
  1741  00018A  0AFF               	xorlw	255
  1742  00018C  6E17               	movwf	(??_Isr+2)& (0+255),c
  1743  00018E  5026               	movf	Isr@pixel_index_array,w,c
  1744  000190  0D01               	mullw	1
  1745  000192  0E36               	movlw	low _pixels
  1746  000194  24F3               	addwf	prodl,w,c
  1747  000196  6ED9               	movwf	fsr2l,c
  1748  000198  0E00               	movlw	high _pixels
  1749  00019A  20F4               	addwfc	prodh,w,c
  1750  00019C  6EDA               	movwf	fsr2h,c
  1751  00019E  5017               	movf	??_Isr+2,w,c
  1752  0001A0  16DF               	andwf	indf2,f,c
  1753  0001A2                     i2l2423:
  1754                           
  1755                           ;interrupt.c: 63: }
  1756                           ;interrupt.c: 64: if(received[5] == '1') {
  1757  0001A2  0E31               	movlw	49
  1758  0001A4  182E               	xorwf	_received+5,w,c
  1759  0001A6  A4D8               	btfss	status,2,c
  1760  0001A8  D00B               	goto	i2l2427
  1761                           
  1762                           ;interrupt.c: 65: Set_Display('7', 'P', (received[1] + 1));
  1763  0001AA  0E50               	movlw	80
  1764  0001AC  6E11               	movwf	Set_Display@information,c
  1765  0001AE  0E01               	movlw	1
  1766  0001B0  242A               	addwf	_received+1,w,c
  1767  0001B2  6E12               	movwf	Set_Display@value,c
  1768  0001B4  6A13               	clrf	Set_Display@value+1,c
  1769  0001B6  0E00               	movlw	0
  1770  0001B8  2213               	addwfc	Set_Display@value+1,f,c
  1771  0001BA  0E37               	movlw	55
  1772  0001BC  EC3F  F004         	call	_Set_Display
  1773  0001C0                     i2l2427:
  1774                           
  1775                           ;interrupt.c: 66: }
  1776                           ;interrupt.c: 67: }
  1777                           ;interrupt.c: 68: }
  1778                           ;interrupt.c: 69: }
  1779                           ;interrupt.c: 70: __nop();
  1780  0001C0  F000               	nop	
  1781                           
  1782                           ;interrupt.c: 71: if(check_counter < 30 && testflag == 1) {
  1783  0001C2  0E1E               	movlw	30
  1784  0001C4  6031               	cpfslt	_check_counter,c
  1785  0001C6  D006               	goto	i2l2437
  1786  0001C8  A640               	btfss	_testflag/(0+8),_testflag& (0+7),c
  1787  0001CA  D004               	goto	i2l2437
  1788                           
  1789                           ;interrupt.c: 72: check_counter++;
  1790  0001CC  2A31               	incf	_check_counter,f,c
  1791                           
  1792                           ;interrupt.c: 73: Check_Detonators();
  1793  0001CE  ECA7  F004         	call	_Check_Detonators	;wreg free
  1794                           
  1795                           ;interrupt.c: 74: }else {
  1796  0001D2  D003               	goto	i2l585
  1797  0001D4                     i2l2437:
  1798                           
  1799                           ;interrupt.c: 75: check_counter = 0;
  1800  0001D4  0E00               	movlw	0
  1801  0001D6  6E31               	movwf	_check_counter,c
  1802                           
  1803                           ;interrupt.c: 76: testflag = 0;
  1804  0001D8  9640               	bcf	_testflag/(0+8),_testflag& (0+7),c
  1805  0001DA                     i2l585:
  1806  0001DA  C025  FFF5         	movff	??_Isr+16,tablat
  1807  0001DE  C024  FFF8         	movff	??_Isr+15,tblptru
  1808  0001E2  C023  FFF7         	movff	??_Isr+14,tblptrh
  1809  0001E6  C022  FFF6         	movff	??_Isr+13,tblptrl
  1810  0001EA  C021  FFF4         	movff	??_Isr+12,prodh
  1811  0001EE  C020  FFF3         	movff	??_Isr+11,prodl
  1812  0001F2  C01F  FFDA         	movff	??_Isr+10,fsr2h
  1813  0001F6  C01E  FFD9         	movff	??_Isr+9,fsr2l
  1814  0001FA  C01D  FFE2         	movff	??_Isr+8,fsr1h
  1815  0001FE  C01C  FFE1         	movff	??_Isr+7,fsr1l
  1816  000202  C01B  FFEA         	movff	??_Isr+6,fsr0h
  1817  000206  C01A  FFE9         	movff	??_Isr+5,fsr0l
  1818  00020A  C019  FFFB         	movff	??_Isr+4,pclatu
  1819  00020E  C018  FFFA         	movff	??_Isr+3,pclath
  1820  000212  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1821  000214  0011               	retfie		f
  1822  000216                     __end_of_Isr:
  1823                           	opt stack 0
  1824                           pclatu	equ	0xFFB
  1825                           pclath	equ	0xFFA
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           prodh	equ	0xFF4
  1831                           prodl	equ	0xFF3
  1832                           indf0	equ	0xFEF
  1833                           postinc0	equ	0xFEE
  1834                           fsr0h	equ	0xFEA
  1835                           fsr0l	equ	0xFE9
  1836                           wreg	equ	0xFE8
  1837                           postdec1	equ	0xFE5
  1838                           fsr1h	equ	0xFE2
  1839                           fsr1l	equ	0xFE1
  1840                           indf2	equ	0xFDF
  1841                           fsr2h	equ	0xFDA
  1842                           fsr2l	equ	0xFD9
  1843                           status	equ	0xFD8
  1844                           
  1845 ;; *************** function ___awdiv *****************
  1846 ;; Defined at:
  1847 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;  dividend        2    0[COMRAM] int 
  1850 ;;  divisor         2    2[COMRAM] int 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  quotient        2    6[COMRAM] int 
  1853 ;;  sign            1    5[COMRAM] unsigned char 
  1854 ;;  counter         1    4[COMRAM] unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  2    0[COMRAM] int 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1
  1864 ;;      Params:         4       0       0
  1865 ;;      Locals:         4       0       0
  1866 ;;      Temps:          0       0       0
  1867 ;;      Totals:         8       0       0
  1868 ;;Total ram usage:        8 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; This function calls:
  1871 ;;		Nothing
  1872 ;; This function is called by:
  1873 ;;		_Isr
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           	psect	text10
  1878  0006C2                     __ptext10:
  1879                           	opt stack 0
  1880  0006C2                     ___awdiv:
  1881                           	opt stack 27
  1882                           
  1883                           ;incstack = 0
  1884  0006C2  0E00               	movlw	0
  1885  0006C4  6E06               	movwf	___awdiv@sign,c
  1886  0006C6  AE04               	btfss	___awdiv@divisor+1,7,c
  1887  0006C8  D006               	goto	i2l2127
  1888  0006CA  6C03               	negf	___awdiv@divisor,c
  1889  0006CC  1E04               	comf	___awdiv@divisor+1,f,c
  1890  0006CE  B0D8               	btfsc	status,0,c
  1891  0006D0  2A04               	incf	___awdiv@divisor+1,f,c
  1892  0006D2  0E01               	movlw	1
  1893  0006D4  6E06               	movwf	___awdiv@sign,c
  1894  0006D6                     i2l2127:
  1895  0006D6  AE02               	btfss	___awdiv@dividend+1,7,c
  1896  0006D8  D006               	goto	i2l2133
  1897  0006DA  6C01               	negf	___awdiv@dividend,c
  1898  0006DC  1E02               	comf	___awdiv@dividend+1,f,c
  1899  0006DE  B0D8               	btfsc	status,0,c
  1900  0006E0  2A02               	incf	___awdiv@dividend+1,f,c
  1901  0006E2  0E01               	movlw	1
  1902  0006E4  1A06               	xorwf	___awdiv@sign,f,c
  1903  0006E6                     i2l2133:
  1904  0006E6  0E00               	movlw	0
  1905  0006E8  6E08               	movwf	___awdiv@quotient+1,c
  1906  0006EA  0E00               	movlw	0
  1907  0006EC  6E07               	movwf	___awdiv@quotient,c
  1908  0006EE  5003               	movf	___awdiv@divisor,w,c
  1909  0006F0  1004               	iorwf	___awdiv@divisor+1,w,c
  1910  0006F2  B4D8               	btfsc	status,2,c
  1911  0006F4  D01C               	goto	i2l2155
  1912  0006F6  0E01               	movlw	1
  1913  0006F8  6E05               	movwf	___awdiv@counter,c
  1914  0006FA  D004               	goto	i2l2141
  1915  0006FC                     i2l2139:
  1916  0006FC  90D8               	bcf	status,0,c
  1917  0006FE  3603               	rlcf	___awdiv@divisor,f,c
  1918  000700  3604               	rlcf	___awdiv@divisor+1,f,c
  1919  000702  2A05               	incf	___awdiv@counter,f,c
  1920  000704                     i2l2141:
  1921  000704  AE04               	btfss	___awdiv@divisor+1,7,c
  1922  000706  D7FA               	goto	i2l2139
  1923  000708                     i2l2143:
  1924  000708  90D8               	bcf	status,0,c
  1925  00070A  3607               	rlcf	___awdiv@quotient,f,c
  1926  00070C  3608               	rlcf	___awdiv@quotient+1,f,c
  1927  00070E  5003               	movf	___awdiv@divisor,w,c
  1928  000710  5C01               	subwf	___awdiv@dividend,w,c
  1929  000712  5004               	movf	___awdiv@divisor+1,w,c
  1930  000714  5802               	subwfb	___awdiv@dividend+1,w,c
  1931  000716  A0D8               	btfss	status,0,c
  1932  000718  D005               	goto	i2l2151
  1933  00071A  5003               	movf	___awdiv@divisor,w,c
  1934  00071C  5E01               	subwf	___awdiv@dividend,f,c
  1935  00071E  5004               	movf	___awdiv@divisor+1,w,c
  1936  000720  5A02               	subwfb	___awdiv@dividend+1,f,c
  1937  000722  8007               	bsf	___awdiv@quotient,0,c
  1938  000724                     i2l2151:
  1939  000724  90D8               	bcf	status,0,c
  1940  000726  3204               	rrcf	___awdiv@divisor+1,f,c
  1941  000728  3203               	rrcf	___awdiv@divisor,f,c
  1942  00072A  2E05               	decfsz	___awdiv@counter,f,c
  1943  00072C  D7ED               	goto	i2l2143
  1944  00072E                     i2l2155:
  1945  00072E  5006               	movf	___awdiv@sign,w,c
  1946  000730  B4D8               	btfsc	status,2,c
  1947  000732  D004               	goto	i2l2159
  1948  000734  6C07               	negf	___awdiv@quotient,c
  1949  000736  1E08               	comf	___awdiv@quotient+1,f,c
  1950  000738  B0D8               	btfsc	status,0,c
  1951  00073A  2A08               	incf	___awdiv@quotient+1,f,c
  1952  00073C                     i2l2159:
  1953  00073C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1954  000740  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1955  000744  0012               	return	
  1956  000746                     __end_of___awdiv:
  1957                           	opt stack 0
  1958                           pclatu	equ	0xFFB
  1959                           pclath	equ	0xFFA
  1960                           tblptru	equ	0xFF8
  1961                           tblptrh	equ	0xFF7
  1962                           tblptrl	equ	0xFF6
  1963                           tablat	equ	0xFF5
  1964                           prodh	equ	0xFF4
  1965                           prodl	equ	0xFF3
  1966                           indf0	equ	0xFEF
  1967                           postinc0	equ	0xFEE
  1968                           fsr0h	equ	0xFEA
  1969                           fsr0l	equ	0xFE9
  1970                           wreg	equ	0xFE8
  1971                           postdec1	equ	0xFE5
  1972                           fsr1h	equ	0xFE2
  1973                           fsr1l	equ	0xFE1
  1974                           indf2	equ	0xFDF
  1975                           fsr2h	equ	0xFDA
  1976                           fsr2l	equ	0xFD9
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function _Set_Display *****************
  1980 ;; Defined at:
  1981 ;;		line 138 in file "display.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  type            1    wreg     unsigned char 
  1984 ;;  information     1   16[COMRAM] unsigned char 
  1985 ;;  value           2   17[COMRAM] unsigned int 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  type            1   19[COMRAM] unsigned char 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;		None               void
  1990 ;; Registers used:
  1991 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1
  1997 ;;      Params:         3       0       0
  1998 ;;      Locals:         1       0       0
  1999 ;;      Temps:          0       0       0
  2000 ;;      Totals:         4       0       0
  2001 ;;Total ram usage:        4 bytes
  2002 ;; Hardware stack levels used:    1
  2003 ;; Hardware stack levels required when called:    3
  2004 ;; This function calls:
  2005 ;;		_Evaluate_Display
  2006 ;;		_Evaluate_Signs
  2007 ;;		i2_Write_Display_Byte
  2008 ;; This function is called by:
  2009 ;;		_Isr
  2010 ;;		_Check_Buttons
  2011 ;;		_Load_Data
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text11
  2016  00087E                     __ptext11:
  2017                           	opt stack 0
  2018  00087E                     _Set_Display:
  2019                           	opt stack 24
  2020                           
  2021                           ;incstack = 0
  2022                           ;Set_Display@type stored from wreg
  2023  00087E  6E14               	movwf	Set_Display@type,c
  2024                           
  2025                           ;display.c: 140: switch (type) {
  2026  000880  D01B               	goto	i2l2033
  2027  000882                     i2l2017:
  2028                           
  2029                           ;display.c: 142: if(information != '-') {
  2030  000882  0E2D               	movlw	45
  2031  000884  1811               	xorwf	Set_Display@information,w,c
  2032  000886  B4D8               	btfsc	status,2,c
  2033  000888  D010               	goto	i2l2029
  2034                           
  2035                           ;display.c: 143: signs[0] = value;
  2036  00088A  C012  F03D         	movff	Set_Display@value,_signs
  2037                           
  2038                           ;display.c: 144: signs[0] += 0x30;
  2039  00088E  0E30               	movlw	48
  2040  000890  263D               	addwf	_signs,f,c
  2041                           
  2042                           ;display.c: 145: signs[1] = '-';
  2043  000892  0E2D               	movlw	45
  2044  000894  6E3E               	movwf	_signs+1,c
  2045                           
  2046                           ;display.c: 146: signs[2] = information;
  2047  000896  C011  F03F         	movff	Set_Display@information,_signs+2
  2048                           
  2049                           ;display.c: 147: Evaluate_Display(sizeof(signs), signs);
  2050  00089A  0E3D               	movlw	low _signs
  2051  00089C  6E09               	movwf	Evaluate_Display@evaluate,c
  2052  00089E  0E00               	movlw	high _signs
  2053  0008A0  6E0A               	movwf	Evaluate_Display@evaluate+1,c
  2054  0008A2  0E03               	movlw	3
  2055  0008A4  EC39  F001         	call	_Evaluate_Display
  2056                           
  2057                           ;display.c: 148: } else {
  2058  0008A8  D00C               	goto	i2l2035
  2059  0008AA                     i2l2029:
  2060                           
  2061                           ;display.c: 149: Evaluate_Signs(value);
  2062  0008AA  C012  F00E         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  2063  0008AE  C013  F00F         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  2064  0008B2  EC0D  F004         	call	_Evaluate_Signs	;wreg free
  2065                           
  2066                           ;display.c: 155: }
  2067                           
  2068                           ;display.c: 154: break;
  2069                           
  2070                           ;display.c: 152: case 'L':
  2071                           
  2072                           ;display.c: 150: }
  2073                           ;display.c: 151: break;
  2074  0008B6  D005               	goto	i2l2035
  2075  0008B8                     i2l2033:
  2076  0008B8  5014               	movf	Set_Display@type,w,c
  2077                           
  2078                           ; Switch size 1, requested type "space"
  2079                           ; Number of cases is 2, Range of values is 55 to 76
  2080                           ; switch strategies available:
  2081                           ; Name         Instructions Cycles
  2082                           ; simple_byte            7     4 (average)
  2083                           ;	Chosen strategy is simple_byte
  2084  0008BA  0A37               	xorlw	55	; case 55
  2085  0008BC  B4D8               	btfsc	status,2,c
  2086  0008BE  D7E1               	goto	i2l2017
  2087  0008C0  0A7B               	xorlw	123	; case 76
  2088  0008C2                     i2l2035:
  2089                           
  2090                           ;display.c: 156: Write_Display_Byte(pixels);
  2091  0008C2  0E36               	movlw	low _pixels
  2092  0008C4  6E01               	movwf	i2Write_Display_Byte@write_data,c
  2093  0008C6  0E00               	movlw	high _pixels
  2094  0008C8  6E02               	movwf	i2Write_Display_Byte@write_data+1,c
  2095  0008CA  ECD9  F003         	call	i2_Write_Display_Byte	;wreg free
  2096  0008CE  0012               	return		;funcret
  2097  0008D0                     __end_of_Set_Display:
  2098                           	opt stack 0
  2099                           pclatu	equ	0xFFB
  2100                           pclath	equ	0xFFA
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           prodh	equ	0xFF4
  2106                           prodl	equ	0xFF3
  2107                           indf0	equ	0xFEF
  2108                           postinc0	equ	0xFEE
  2109                           fsr0h	equ	0xFEA
  2110                           fsr0l	equ	0xFE9
  2111                           wreg	equ	0xFE8
  2112                           postdec1	equ	0xFE5
  2113                           fsr1h	equ	0xFE2
  2114                           fsr1l	equ	0xFE1
  2115                           indf2	equ	0xFDF
  2116                           fsr2h	equ	0xFDA
  2117                           fsr2l	equ	0xFD9
  2118                           status	equ	0xFD8
  2119                           
  2120 ;; *************** function i2_Write_Display_Byte *****************
  2121 ;; Defined at:
  2122 ;;		line 49 in file "communication.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  write_data      2    0[COMRAM] PTR unsigned char 
  2125 ;;		 -> pixels(7), STR_1(2), 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  Write_Displa    1    8[COMRAM] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;		None               void
  2130 ;; Registers used:
  2131 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1
  2137 ;;      Params:         2       0       0
  2138 ;;      Locals:         1       0       0
  2139 ;;      Temps:          6       0       0
  2140 ;;      Totals:         9       0       0
  2141 ;;Total ram usage:        9 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_Set_Display
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text12
  2151  0007B2                     __ptext12:
  2152                           	opt stack 0
  2153  0007B2                     i2_Write_Display_Byte:
  2154                           	opt stack 26
  2155                           
  2156                           ;communication.c: 50: for(unsigned char counter = sizeof(pixels); counter > 0;
  2157                           
  2158                           ;incstack = 0
  2159  0007B2  0E07               	movlw	7
  2160  0007B4  6E09               	movwf	i2Write_Display_Byte@counter,c
  2161  0007B6                     
  2162                           ;communication.c: 51: counter--) {
  2163  0007B6  5009               	movf	i2Write_Display_Byte@counter,w,c
  2164  0007B8  B4D8               	btfsc	status,2,c
  2165  0007BA  0012               	return	
  2166                           
  2167                           ;communication.c: 52: if(SSP1IF = 1) {
  2168  0007BC  869E               	bsf	3998,3,c	;volatile
  2169  0007BE  B69E               	btfsc	3998,3,c	;volatile
  2170                           
  2171                           ;communication.c: 53: SSP1IF = 0;
  2172  0007C0  969E               	bcf	3998,3,c	;volatile
  2173                           
  2174                           ;communication.c: 54: }
  2175                           ;communication.c: 55: SSP1BUF = write_data[counter - 1];
  2176  0007C2  0EFF               	movlw	255
  2177  0007C4  6E03               	movwf	??i2_Write_Display_Byte& (0+255),c
  2178  0007C6  0EFF               	movlw	255
  2179  0007C8  6E04               	movwf	(??i2_Write_Display_Byte+1)& (0+255),c
  2180  0007CA  5009               	movf	i2Write_Display_Byte@counter,w,c
  2181  0007CC  6E05               	movwf	(??i2_Write_Display_Byte+2)& (0+255),c
  2182  0007CE  6A06               	clrf	(??i2_Write_Display_Byte+3)& (0+255),c
  2183  0007D0  5003               	movf	??i2_Write_Display_Byte,w,c
  2184  0007D2  2605               	addwf	??i2_Write_Display_Byte+2,f,c
  2185  0007D4  5004               	movf	??i2_Write_Display_Byte+1,w,c
  2186  0007D6  2206               	addwfc	??i2_Write_Display_Byte+3,f,c
  2187  0007D8  C001  F007         	movff	i2Write_Display_Byte@write_data,??i2_Write_Display_Byte+4
  2188  0007DC  C002  F008         	movff	i2Write_Display_Byte@write_data+1,??i2_Write_Display_Byte+5
  2189  0007E0  5005               	movf	??i2_Write_Display_Byte+2,w,c
  2190  0007E2  2607               	addwf	??i2_Write_Display_Byte+4,f,c
  2191  0007E4  5006               	movf	??i2_Write_Display_Byte+3,w,c
  2192  0007E6  2208               	addwfc	??i2_Write_Display_Byte+5,f,c
  2193  0007E8  C007  FFF6         	movff	??i2_Write_Display_Byte+4,tblptrl
  2194  0007EC  C008  FFF7         	movff	??i2_Write_Display_Byte+5,tblptrh
  2195  0007F0  6AF8               	clrf	tblptru,c
  2196  0007F2  0E01               	movlw	(high __ramtop+-1)
  2197  0007F4  64F7               	cpfsgt	tblptrh,c
  2198  0007F6  D003               	bra	i2u101_47
  2199  0007F8  0008               	tblrd		*
  2200  0007FA  50F5               	movf	tablat,w,c
  2201  0007FC  D005               	bra	i2u101_40
  2202  0007FE                     i2u101_47:
  2203  0007FE  CFF6 FFE9          	movff	tblptrl,fsr0l
  2204  000802  CFF7 FFEA          	movff	tblptrh,fsr0h
  2205  000806  50EF               	movf	indf0,w,c
  2206  000808                     i2u101_40:
  2207  000808  6EC9               	movwf	4041,c	;volatile
  2208  00080A                     i2l509:
  2209  00080A  A69E               	btfss	3998,3,c	;volatile
  2210  00080C  D7FE               	goto	i2l509
  2211                           
  2212                           ;communication.c: 57: SSP1IF = 0;
  2213  00080E  969E               	bcf	3998,3,c	;volatile
  2214                           
  2215                           ;communication.c: 58: PORTCbits.RC0 = 0;
  2216  000810  9082               	bcf	3970,0,c	;volatile
  2217                           
  2218                           ;communication.c: 59: PORTCbits.RC0 = 1;
  2219  000812  8082               	bsf	3970,0,c	;volatile
  2220                           
  2221                           ;communication.c: 60: PORTCbits.RC0 = 0;
  2222  000814  9082               	bcf	3970,0,c	;volatile
  2223  000816  0609               	decf	i2Write_Display_Byte@counter,f,c
  2224  000818  D7CE               	goto	L2
  2225  00081A                     __end_ofi2_Write_Display_Byte:
  2226                           	opt stack 0
  2227                           pclatu	equ	0xFFB
  2228                           pclath	equ	0xFFA
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           prodh	equ	0xFF4
  2234                           prodl	equ	0xFF3
  2235                           indf0	equ	0xFEF
  2236                           postinc0	equ	0xFEE
  2237                           fsr0h	equ	0xFEA
  2238                           fsr0l	equ	0xFE9
  2239                           wreg	equ	0xFE8
  2240                           postdec1	equ	0xFE5
  2241                           fsr1h	equ	0xFE2
  2242                           fsr1l	equ	0xFE1
  2243                           indf2	equ	0xFDF
  2244                           fsr2h	equ	0xFDA
  2245                           fsr2l	equ	0xFD9
  2246                           status	equ	0xFD8
  2247                           
  2248 ;; *************** function _Evaluate_Signs *****************
  2249 ;; Defined at:
  2250 ;;		line 118 in file "display.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  evaluation_v    2   13[COMRAM] unsigned int 
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;  valuecounter    1   15[COMRAM] unsigned char 
  2255 ;; Return value:  Size  Location     Type
  2256 ;;		None               void
  2257 ;; Registers used:
  2258 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 0/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMRAM   BANK0   BANK1
  2264 ;;      Params:         2       0       0
  2265 ;;      Locals:         1       0       0
  2266 ;;      Temps:          0       0       0
  2267 ;;      Totals:         3       0       0
  2268 ;;Total ram usage:        3 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    2
  2271 ;; This function calls:
  2272 ;;		_Evaluate_Display
  2273 ;;		___lwmod
  2274 ;; This function is called by:
  2275 ;;		_Set_Display
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text13
  2280  00081A                     __ptext13:
  2281                           	opt stack 0
  2282  00081A                     _Evaluate_Signs:
  2283                           	opt stack 24
  2284                           
  2285                           ;display.c: 119: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  2286                           
  2287                           ;incstack = 0
  2288  00081A  0E00               	movlw	0
  2289  00081C  6E10               	movwf	Evaluate_Signs@valuecounter,c
  2290  00081E                     i2l1975:
  2291                           
  2292                           ;display.c: 120: valuecounter++) {
  2293  00081E  0E02               	movlw	2
  2294  000820  6410               	cpfsgt	Evaluate_Signs@valuecounter,c
  2295  000822  D001               	goto	i2l1979
  2296  000824  D023               	goto	i2l423
  2297  000826                     i2l1979:
  2298                           
  2299                           ;display.c: 121: signs[valuecounter] = evaluation_value % 10;
  2300  000826  5010               	movf	Evaluate_Signs@valuecounter,w,c
  2301  000828  0D01               	mullw	1
  2302  00082A  0E3D               	movlw	low _signs
  2303  00082C  24F3               	addwf	prodl,w,c
  2304  00082E  6ED9               	movwf	fsr2l,c
  2305  000830  0E00               	movlw	high _signs
  2306  000832  20F4               	addwfc	prodh,w,c
  2307  000834  6EDA               	movwf	fsr2h,c
  2308  000836  C00E  F001         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  2309  00083A  C00F  F002         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  2310  00083E  0E00               	movlw	0
  2311  000840  6E04               	movwf	___lwmod@divisor+1,c
  2312  000842  0E0A               	movlw	10
  2313  000844  6E03               	movwf	___lwmod@divisor,c
  2314  000846  EC68  F004         	call	___lwmod	;wreg free
  2315  00084A  5001               	movf	?___lwmod,w,c
  2316  00084C  6EDF               	movwf	indf2,c
  2317                           
  2318                           ;display.c: 122: signs[valuecounter] += 0x30;
  2319  00084E  5010               	movf	Evaluate_Signs@valuecounter,w,c
  2320  000850  0D01               	mullw	1
  2321  000852  0E3D               	movlw	low _signs
  2322  000854  24F3               	addwf	prodl,w,c
  2323  000856  6ED9               	movwf	fsr2l,c
  2324  000858  0E00               	movlw	high _signs
  2325  00085A  20F4               	addwfc	prodh,w,c
  2326  00085C  6EDA               	movwf	fsr2h,c
  2327  00085E  0E30               	movlw	48
  2328  000860  26DF               	addwf	indf2,f,c
  2329                           
  2330                           ;display.c: 123: evaluation_value >>= 1;
  2331  000862  90D8               	bcf	status,0,c
  2332  000864  320F               	rrcf	Evaluate_Signs@evaluation_value+1,f,c
  2333  000866  320E               	rrcf	Evaluate_Signs@evaluation_value,f,c
  2334  000868  2A10               	incf	Evaluate_Signs@valuecounter,f,c
  2335  00086A  D7D9               	goto	i2l1975
  2336  00086C                     i2l423:
  2337                           
  2338                           ;display.c: 124: }
  2339                           ;display.c: 125: __nop();
  2340  00086C  F000               	nop	
  2341                           
  2342                           ;display.c: 126: Evaluate_Display(sizeof(signs), signs);
  2343  00086E  0E3D               	movlw	low _signs
  2344  000870  6E09               	movwf	Evaluate_Display@evaluate,c
  2345  000872  0E00               	movlw	high _signs
  2346  000874  6E0A               	movwf	Evaluate_Display@evaluate+1,c
  2347  000876  0E03               	movlw	3
  2348  000878  EC39  F001         	call	_Evaluate_Display
  2349  00087C  0012               	return		;funcret
  2350  00087E                     __end_of_Evaluate_Signs:
  2351                           	opt stack 0
  2352                           pclatu	equ	0xFFB
  2353                           pclath	equ	0xFFA
  2354                           tblptru	equ	0xFF8
  2355                           tblptrh	equ	0xFF7
  2356                           tblptrl	equ	0xFF6
  2357                           tablat	equ	0xFF5
  2358                           prodh	equ	0xFF4
  2359                           prodl	equ	0xFF3
  2360                           indf0	equ	0xFEF
  2361                           postinc0	equ	0xFEE
  2362                           fsr0h	equ	0xFEA
  2363                           fsr0l	equ	0xFE9
  2364                           wreg	equ	0xFE8
  2365                           postdec1	equ	0xFE5
  2366                           fsr1h	equ	0xFE2
  2367                           fsr1l	equ	0xFE1
  2368                           indf2	equ	0xFDF
  2369                           fsr2h	equ	0xFDA
  2370                           fsr2l	equ	0xFD9
  2371                           status	equ	0xFD8
  2372                           
  2373 ;; *************** function ___lwmod *****************
  2374 ;; Defined at:
  2375 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  dividend        2    0[COMRAM] unsigned int 
  2378 ;;  divisor         2    2[COMRAM] unsigned int 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  counter         1    4[COMRAM] unsigned char 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  2    0[COMRAM] unsigned int 
  2383 ;; Registers used:
  2384 ;;		wreg, status,2, status,0
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1
  2390 ;;      Params:         4       0       0
  2391 ;;      Locals:         1       0       0
  2392 ;;      Temps:          0       0       0
  2393 ;;      Totals:         5       0       0
  2394 ;;Total ram usage:        5 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; This function calls:
  2397 ;;		Nothing
  2398 ;; This function is called by:
  2399 ;;		_Evaluate_Signs
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text14
  2404  0008D0                     __ptext14:
  2405                           	opt stack 0
  2406  0008D0                     ___lwmod:
  2407                           	opt stack 25
  2408                           
  2409                           ;incstack = 0
  2410  0008D0  5003               	movf	___lwmod@divisor,w,c
  2411  0008D2  1004               	iorwf	___lwmod@divisor+1,w,c
  2412  0008D4  B4D8               	btfsc	status,2,c
  2413  0008D6  D018               	goto	i2l998
  2414  0008D8  0E01               	movlw	1
  2415  0008DA  6E05               	movwf	___lwmod@counter,c
  2416  0008DC  D004               	goto	i2l1917
  2417  0008DE                     i2l1915:
  2418  0008DE  90D8               	bcf	status,0,c
  2419  0008E0  3603               	rlcf	___lwmod@divisor,f,c
  2420  0008E2  3604               	rlcf	___lwmod@divisor+1,f,c
  2421  0008E4  2A05               	incf	___lwmod@counter,f,c
  2422  0008E6                     i2l1917:
  2423  0008E6  AE04               	btfss	___lwmod@divisor+1,7,c
  2424  0008E8  D7FA               	goto	i2l1915
  2425  0008EA                     i2l1919:
  2426  0008EA  5003               	movf	___lwmod@divisor,w,c
  2427  0008EC  5C01               	subwf	___lwmod@dividend,w,c
  2428  0008EE  5004               	movf	___lwmod@divisor+1,w,c
  2429  0008F0  5802               	subwfb	___lwmod@dividend+1,w,c
  2430  0008F2  A0D8               	btfss	status,0,c
  2431  0008F4  D004               	goto	i2l1923
  2432  0008F6  5003               	movf	___lwmod@divisor,w,c
  2433  0008F8  5E01               	subwf	___lwmod@dividend,f,c
  2434  0008FA  5004               	movf	___lwmod@divisor+1,w,c
  2435  0008FC  5A02               	subwfb	___lwmod@dividend+1,f,c
  2436  0008FE                     i2l1923:
  2437  0008FE  90D8               	bcf	status,0,c
  2438  000900  3204               	rrcf	___lwmod@divisor+1,f,c
  2439  000902  3203               	rrcf	___lwmod@divisor,f,c
  2440  000904  2E05               	decfsz	___lwmod@counter,f,c
  2441  000906  D7F1               	goto	i2l1919
  2442  000908                     i2l998:
  2443  000908  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2444  00090C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2445  000910  0012               	return		;funcret
  2446  000912                     __end_of___lwmod:
  2447                           	opt stack 0
  2448                           pclatu	equ	0xFFB
  2449                           pclath	equ	0xFFA
  2450                           tblptru	equ	0xFF8
  2451                           tblptrh	equ	0xFF7
  2452                           tblptrl	equ	0xFF6
  2453                           tablat	equ	0xFF5
  2454                           prodh	equ	0xFF4
  2455                           prodl	equ	0xFF3
  2456                           indf0	equ	0xFEF
  2457                           postinc0	equ	0xFEE
  2458                           fsr0h	equ	0xFEA
  2459                           fsr0l	equ	0xFE9
  2460                           wreg	equ	0xFE8
  2461                           postdec1	equ	0xFE5
  2462                           fsr1h	equ	0xFE2
  2463                           fsr1l	equ	0xFE1
  2464                           indf2	equ	0xFDF
  2465                           fsr2h	equ	0xFDA
  2466                           fsr2l	equ	0xFD9
  2467                           status	equ	0xFD8
  2468                           
  2469 ;; *************** function _Evaluate_Display *****************
  2470 ;; Defined at:
  2471 ;;		line 52 in file "display.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  size            1    wreg     unsigned char 
  2474 ;;  evaluate        2    8[COMRAM] PTR const unsigned char 
  2475 ;;		 -> signs(3), STR_3(4), STR_2(4), 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  size            1   12[COMRAM] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;		None               void
  2480 ;; Registers used:
  2481 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1
  2487 ;;      Params:         2       0       0
  2488 ;;      Locals:         1       0       0
  2489 ;;      Temps:          2       0       0
  2490 ;;      Totals:         5       0       0
  2491 ;;Total ram usage:        5 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    1
  2494 ;; This function calls:
  2495 ;;		_Set_Bits
  2496 ;; This function is called by:
  2497 ;;		_Evaluate_Signs
  2498 ;;		_Set_Display
  2499 ;;		_Load_Data
  2500 ;;		_Del_Data
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text15
  2505  000272                     __ptext15:
  2506                           	opt stack 0
  2507  000272                     _Evaluate_Display:
  2508                           	opt stack 24
  2509                           
  2510                           ;incstack = 0
  2511                           ;Evaluate_Display@size stored from wreg
  2512  000272  6E0D               	movwf	Evaluate_Display@size,c
  2513                           
  2514                           ;display.c: 53: for(display_counter = 0; display_counter < size;
  2515  000274  0E00               	movlw	0
  2516  000276  6E32               	movwf	_display_counter,c
  2517                           
  2518                           ;display.c: 54: display_counter++) {
  2519  000278  D124               	goto	i2l1909
  2520  00027A                     i2l1869:
  2521                           
  2522                           ;display.c: 57: Set_Bits("ABCDEF");
  2523  00027A  0E23               	movlw	low STR_4
  2524  00027C  6E01               	movwf	Set_Bits@bits,c
  2525  00027E  0E02               	movlw	high STR_4
  2526  000280  6E02               	movwf	Set_Bits@bits+1,c
  2527  000282  5001               	movf	Set_Bits@bits,w,c
  2528  000284  1002               	iorwf	Set_Bits@bits+1,w,c
  2529  000286  A4D8               	btfss	status,2,c
  2530  000288  0E00               	movlw	low (__mediumconst shr (0+16))
  2531  00028A  6E03               	movwf	Set_Bits@bits+2,c
  2532  00028C  EC66  F002         	call	_Set_Bits	;wreg free
  2533                           
  2534                           ;display.c: 58: break;
  2535  000290  D117               	goto	i2l1907
  2536  000292                     i2l1871:
  2537                           
  2538                           ;display.c: 60: Set_Bits("BC");
  2539  000292  0E63               	movlw	low (STR_11+1)
  2540  000294  6E01               	movwf	Set_Bits@bits,c
  2541  000296  0E02               	movlw	high (STR_11+1)
  2542  000298  6E02               	movwf	Set_Bits@bits+1,c
  2543  00029A  5001               	movf	Set_Bits@bits,w,c
  2544  00029C  1002               	iorwf	Set_Bits@bits+1,w,c
  2545  00029E  A4D8               	btfss	status,2,c
  2546  0002A0  0E00               	movlw	low (__mediumconst shr (0+16))
  2547  0002A2  6E03               	movwf	Set_Bits@bits+2,c
  2548  0002A4  EC66  F002         	call	_Set_Bits	;wreg free
  2549                           
  2550                           ;display.c: 61: break;
  2551  0002A8  D10B               	goto	i2l1907
  2552  0002AA                     i2l1873:
  2553                           
  2554                           ;display.c: 63: Set_Bits("ABDEG");
  2555  0002AA  0E45               	movlw	low STR_6
  2556  0002AC  6E01               	movwf	Set_Bits@bits,c
  2557  0002AE  0E02               	movlw	high STR_6
  2558  0002B0  6E02               	movwf	Set_Bits@bits+1,c
  2559  0002B2  5001               	movf	Set_Bits@bits,w,c
  2560  0002B4  1002               	iorwf	Set_Bits@bits+1,w,c
  2561  0002B6  A4D8               	btfss	status,2,c
  2562  0002B8  0E00               	movlw	low (__mediumconst shr (0+16))
  2563  0002BA  6E03               	movwf	Set_Bits@bits+2,c
  2564  0002BC  EC66  F002         	call	_Set_Bits	;wreg free
  2565                           
  2566                           ;display.c: 64: break;
  2567  0002C0  D0FF               	goto	i2l1907
  2568  0002C2                     i2l1875:
  2569                           
  2570                           ;display.c: 66: Set_Bits("ABCDG");
  2571  0002C2  0E3F               	movlw	low STR_7
  2572  0002C4  6E01               	movwf	Set_Bits@bits,c
  2573  0002C6  0E02               	movlw	high STR_7
  2574  0002C8  6E02               	movwf	Set_Bits@bits+1,c
  2575  0002CA  5001               	movf	Set_Bits@bits,w,c
  2576  0002CC  1002               	iorwf	Set_Bits@bits+1,w,c
  2577  0002CE  A4D8               	btfss	status,2,c
  2578  0002D0  0E00               	movlw	low (__mediumconst shr (0+16))
  2579  0002D2  6E03               	movwf	Set_Bits@bits+2,c
  2580  0002D4  EC66  F002         	call	_Set_Bits	;wreg free
  2581                           
  2582                           ;display.c: 67: break;
  2583  0002D8  D0F3               	goto	i2l1907
  2584  0002DA                     i2l1877:
  2585                           
  2586                           ;display.c: 69: Set_Bits("BCFG");
  2587  0002DA  0E5D               	movlw	low STR_8
  2588  0002DC  6E01               	movwf	Set_Bits@bits,c
  2589  0002DE  0E02               	movlw	high STR_8
  2590  0002E0  6E02               	movwf	Set_Bits@bits+1,c
  2591  0002E2  5001               	movf	Set_Bits@bits,w,c
  2592  0002E4  1002               	iorwf	Set_Bits@bits+1,w,c
  2593  0002E6  A4D8               	btfss	status,2,c
  2594  0002E8  0E00               	movlw	low (__mediumconst shr (0+16))
  2595  0002EA  6E03               	movwf	Set_Bits@bits+2,c
  2596  0002EC  EC66  F002         	call	_Set_Bits	;wreg free
  2597                           
  2598                           ;display.c: 70: break;
  2599  0002F0  D0E7               	goto	i2l1907
  2600  0002F2                     i2l1879:
  2601                           
  2602                           ;display.c: 72: Set_Bits("ACDFG");
  2603  0002F2  0E4B               	movlw	low STR_9
  2604  0002F4  6E01               	movwf	Set_Bits@bits,c
  2605  0002F6  0E02               	movlw	high STR_9
  2606  0002F8  6E02               	movwf	Set_Bits@bits+1,c
  2607  0002FA  5001               	movf	Set_Bits@bits,w,c
  2608  0002FC  1002               	iorwf	Set_Bits@bits+1,w,c
  2609  0002FE  A4D8               	btfss	status,2,c
  2610  000300  0E00               	movlw	low (__mediumconst shr (0+16))
  2611  000302  6E03               	movwf	Set_Bits@bits+2,c
  2612  000304  EC66  F002         	call	_Set_Bits	;wreg free
  2613                           
  2614                           ;display.c: 73: break;
  2615  000308  D0DB               	goto	i2l1907
  2616  00030A                     i2l1881:
  2617                           
  2618                           ;display.c: 75: Set_Bits("ACDEFG");
  2619  00030A  0E38               	movlw	low STR_10
  2620  00030C  6E01               	movwf	Set_Bits@bits,c
  2621  00030E  0E02               	movlw	high STR_10
  2622  000310  6E02               	movwf	Set_Bits@bits+1,c
  2623  000312  5001               	movf	Set_Bits@bits,w,c
  2624  000314  1002               	iorwf	Set_Bits@bits+1,w,c
  2625  000316  A4D8               	btfss	status,2,c
  2626  000318  0E00               	movlw	low (__mediumconst shr (0+16))
  2627  00031A  6E03               	movwf	Set_Bits@bits+2,c
  2628  00031C  EC66  F002         	call	_Set_Bits	;wreg free
  2629                           
  2630                           ;display.c: 76: break;
  2631  000320  D0CF               	goto	i2l1907
  2632  000322                     i2l1883:
  2633                           
  2634                           ;display.c: 78: Set_Bits("ABC");
  2635  000322  0E62               	movlw	low STR_11
  2636  000324  6E01               	movwf	Set_Bits@bits,c
  2637  000326  0E02               	movlw	high STR_11
  2638  000328  6E02               	movwf	Set_Bits@bits+1,c
  2639  00032A  5001               	movf	Set_Bits@bits,w,c
  2640  00032C  1002               	iorwf	Set_Bits@bits+1,w,c
  2641  00032E  A4D8               	btfss	status,2,c
  2642  000330  0E00               	movlw	low (__mediumconst shr (0+16))
  2643  000332  6E03               	movwf	Set_Bits@bits+2,c
  2644  000334  EC66  F002         	call	_Set_Bits	;wreg free
  2645                           
  2646                           ;display.c: 79: break;
  2647  000338  D0C3               	goto	i2l1907
  2648  00033A                     i2l1885:
  2649                           
  2650                           ;display.c: 81: Set_Bits("ABCDEFG");
  2651  00033A  0E1B               	movlw	low STR_12
  2652  00033C  6E01               	movwf	Set_Bits@bits,c
  2653  00033E  0E02               	movlw	high STR_12
  2654  000340  6E02               	movwf	Set_Bits@bits+1,c
  2655  000342  5001               	movf	Set_Bits@bits,w,c
  2656  000344  1002               	iorwf	Set_Bits@bits+1,w,c
  2657  000346  A4D8               	btfss	status,2,c
  2658  000348  0E00               	movlw	low (__mediumconst shr (0+16))
  2659  00034A  6E03               	movwf	Set_Bits@bits+2,c
  2660  00034C  EC66  F002         	call	_Set_Bits	;wreg free
  2661                           
  2662                           ;display.c: 82: break;
  2663  000350  D0B7               	goto	i2l1907
  2664  000352                     i2l1887:
  2665                           
  2666                           ;display.c: 84: Set_Bits("ABCDFG");
  2667  000352  0E2A               	movlw	low STR_13
  2668  000354  6E01               	movwf	Set_Bits@bits,c
  2669  000356  0E02               	movlw	high STR_13
  2670  000358  6E02               	movwf	Set_Bits@bits+1,c
  2671  00035A  5001               	movf	Set_Bits@bits,w,c
  2672  00035C  1002               	iorwf	Set_Bits@bits+1,w,c
  2673  00035E  A4D8               	btfss	status,2,c
  2674  000360  0E00               	movlw	low (__mediumconst shr (0+16))
  2675  000362  6E03               	movwf	Set_Bits@bits+2,c
  2676  000364  EC66  F002         	call	_Set_Bits	;wreg free
  2677                           
  2678                           ;display.c: 85: break;
  2679  000368  D0AB               	goto	i2l1907
  2680  00036A                     i2l1889:
  2681                           
  2682                           ;display.c: 87: Set_Bits("ABCEFG");
  2683  00036A  0E31               	movlw	low STR_14
  2684  00036C  6E01               	movwf	Set_Bits@bits,c
  2685  00036E  0E02               	movlw	high STR_14
  2686  000370  6E02               	movwf	Set_Bits@bits+1,c
  2687  000372  5001               	movf	Set_Bits@bits,w,c
  2688  000374  1002               	iorwf	Set_Bits@bits+1,w,c
  2689  000376  A4D8               	btfss	status,2,c
  2690  000378  0E00               	movlw	low (__mediumconst shr (0+16))
  2691  00037A  6E03               	movwf	Set_Bits@bits+2,c
  2692  00037C  EC66  F002         	call	_Set_Bits	;wreg free
  2693                           
  2694                           ;display.c: 88: break;
  2695  000380  D09F               	goto	i2l1907
  2696  000382                     i2l1891:
  2697                           
  2698                           ;display.c: 90: Set_Bits("ABCDEF");
  2699  000382  0E23               	movlw	low STR_4
  2700  000384  6E01               	movwf	Set_Bits@bits,c
  2701  000386  0E02               	movlw	high STR_4
  2702  000388  6E02               	movwf	Set_Bits@bits+1,c
  2703  00038A  5001               	movf	Set_Bits@bits,w,c
  2704  00038C  1002               	iorwf	Set_Bits@bits+1,w,c
  2705  00038E  A4D8               	btfss	status,2,c
  2706  000390  0E00               	movlw	low (__mediumconst shr (0+16))
  2707  000392  6E03               	movwf	Set_Bits@bits+2,c
  2708  000394  EC66  F002         	call	_Set_Bits	;wreg free
  2709                           
  2710                           ;display.c: 91: break;
  2711  000398  D093               	goto	i2l1907
  2712  00039A                     i2l1893:
  2713                           
  2714                           ;display.c: 93: Set_Bits("ADEFG");
  2715  00039A  0E57               	movlw	low STR_16
  2716  00039C  6E01               	movwf	Set_Bits@bits,c
  2717  00039E  0E02               	movlw	high STR_16
  2718  0003A0  6E02               	movwf	Set_Bits@bits+1,c
  2719  0003A2  5001               	movf	Set_Bits@bits,w,c
  2720  0003A4  1002               	iorwf	Set_Bits@bits+1,w,c
  2721  0003A6  A4D8               	btfss	status,2,c
  2722  0003A8  0E00               	movlw	low (__mediumconst shr (0+16))
  2723  0003AA  6E03               	movwf	Set_Bits@bits+2,c
  2724  0003AC  EC66  F002         	call	_Set_Bits	;wreg free
  2725                           
  2726                           ;display.c: 94: break;
  2727  0003B0  D087               	goto	i2l1907
  2728  0003B2                     i2l1895:
  2729                           
  2730                           ;display.c: 96: Set_Bits("DEF");
  2731  0003B2  0E26               	movlw	low (STR_4+3)
  2732  0003B4  6E01               	movwf	Set_Bits@bits,c
  2733  0003B6  0E02               	movlw	high (STR_4+3)
  2734  0003B8  6E02               	movwf	Set_Bits@bits+1,c
  2735  0003BA  5001               	movf	Set_Bits@bits,w,c
  2736  0003BC  1002               	iorwf	Set_Bits@bits+1,w,c
  2737  0003BE  A4D8               	btfss	status,2,c
  2738  0003C0  0E00               	movlw	low (__mediumconst shr (0+16))
  2739  0003C2  6E03               	movwf	Set_Bits@bits+2,c
  2740  0003C4  EC66  F002         	call	_Set_Bits	;wreg free
  2741                           
  2742                           ;display.c: 97: break;
  2743  0003C8  D07B               	goto	i2l1907
  2744  0003CA                     i2l1897:
  2745                           
  2746                           ;display.c: 99: Set_Bits("ABCDEF");
  2747  0003CA  0E23               	movlw	low STR_4
  2748  0003CC  6E01               	movwf	Set_Bits@bits,c
  2749  0003CE  0E02               	movlw	high STR_4
  2750  0003D0  6E02               	movwf	Set_Bits@bits+1,c
  2751  0003D2  5001               	movf	Set_Bits@bits,w,c
  2752  0003D4  1002               	iorwf	Set_Bits@bits+1,w,c
  2753  0003D6  A4D8               	btfss	status,2,c
  2754  0003D8  0E00               	movlw	low (__mediumconst shr (0+16))
  2755  0003DA  6E03               	movwf	Set_Bits@bits+2,c
  2756  0003DC  EC66  F002         	call	_Set_Bits	;wreg free
  2757                           
  2758                           ;display.c: 100: break;
  2759  0003E0  D06F               	goto	i2l1907
  2760  0003E2                     i2l1899:
  2761                           
  2762                           ;display.c: 102: Set_Bits("ABEFG");
  2763  0003E2  0E51               	movlw	low STR_19
  2764  0003E4  6E01               	movwf	Set_Bits@bits,c
  2765  0003E6  0E02               	movlw	high STR_19
  2766  0003E8  6E02               	movwf	Set_Bits@bits+1,c
  2767  0003EA  5001               	movf	Set_Bits@bits,w,c
  2768  0003EC  1002               	iorwf	Set_Bits@bits+1,w,c
  2769  0003EE  A4D8               	btfss	status,2,c
  2770  0003F0  0E00               	movlw	low (__mediumconst shr (0+16))
  2771  0003F2  6E03               	movwf	Set_Bits@bits+2,c
  2772  0003F4  EC66  F002         	call	_Set_Bits	;wreg free
  2773                           
  2774                           ;display.c: 103: break;
  2775  0003F8  D063               	goto	i2l1907
  2776  0003FA                     i2l1901:
  2777                           
  2778                           ;display.c: 105: Set_Bits("G");
  2779  0003FA  0E43               	movlw	low (STR_7+4)
  2780  0003FC  6E01               	movwf	Set_Bits@bits,c
  2781  0003FE  0E02               	movlw	high (STR_7+4)
  2782  000400  6E02               	movwf	Set_Bits@bits+1,c
  2783  000402  5001               	movf	Set_Bits@bits,w,c
  2784  000404  1002               	iorwf	Set_Bits@bits+1,w,c
  2785  000406  A4D8               	btfss	status,2,c
  2786  000408  0E00               	movlw	low (__mediumconst shr (0+16))
  2787  00040A  6E03               	movwf	Set_Bits@bits+2,c
  2788  00040C  EC66  F002         	call	_Set_Bits	;wreg free
  2789                           
  2790                           ;display.c: 106: break;
  2791  000410  D057               	goto	i2l1907
  2792  000412                     i2l1903:
  2793                           
  2794                           ;display.c: 108: Set_Bits(0);
  2795  000412  0E00               	movlw	0
  2796  000414  6E01               	movwf	Set_Bits@bits,c
  2797  000416  0E00               	movlw	0
  2798  000418  6E02               	movwf	Set_Bits@bits+1,c
  2799  00041A  0E00               	movlw	0
  2800  00041C  6E03               	movwf	Set_Bits@bits+2,c
  2801  00041E  EC66  F002         	call	_Set_Bits	;wreg free
  2802                           
  2803                           ;display.c: 109: }
  2804  000422  D04E               	goto	i2l1907
  2805  000424                     i2l1905:
  2806  000424  5032               	movf	_display_counter,w,c
  2807  000426  0D01               	mullw	1
  2808  000428  C009  F00B         	movff	Evaluate_Display@evaluate,??_Evaluate_Display
  2809  00042C  C00A  F00C         	movff	Evaluate_Display@evaluate+1,??_Evaluate_Display+1
  2810  000430  50F3               	movf	prodl,w,c
  2811  000432  260B               	addwf	??_Evaluate_Display,f,c
  2812  000434  50F4               	movf	prodh,w,c
  2813  000436  220C               	addwfc	??_Evaluate_Display+1,f,c
  2814  000438  C00B  FFF6         	movff	??_Evaluate_Display,tblptrl
  2815  00043C  C00C  FFF7         	movff	??_Evaluate_Display+1,tblptrh
  2816  000440  6AF8               	clrf	tblptru,c
  2817  000442  0E01               	movlw	(high __ramtop+-1)
  2818  000444  64F7               	cpfsgt	tblptrh,c
  2819  000446  D003               	bra	i2u86_47
  2820  000448  0008               	tblrd		*
  2821  00044A  50F5               	movf	tablat,w,c
  2822  00044C  D005               	bra	i2u86_40
  2823  00044E                     i2u86_47:
  2824  00044E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2825  000452  CFF7 FFEA          	movff	tblptrh,fsr0h
  2826  000456  50EF               	movf	indf0,w,c
  2827  000458                     i2u86_40:
  2828                           
  2829                           ; Switch size 1, requested type "space"
  2830                           ; Number of cases is 17, Range of values is 45 to 80
  2831                           ; switch strategies available:
  2832                           ; Name         Instructions Cycles
  2833                           ; simple_byte           52    27 (average)
  2834                           ;	Chosen strategy is simple_byte
  2835  000458  0A2D               	xorlw	45	; case 45
  2836  00045A  B4D8               	btfsc	status,2,c
  2837  00045C  D7CE               	goto	i2l1901
  2838  00045E  0A1D               	xorlw	29	; case 48
  2839  000460  B4D8               	btfsc	status,2,c
  2840  000462  D70B               	goto	i2l1869
  2841  000464  0A01               	xorlw	1	; case 49
  2842  000466  B4D8               	btfsc	status,2,c
  2843  000468  D714               	goto	i2l1871
  2844  00046A  0A03               	xorlw	3	; case 50
  2845  00046C  B4D8               	btfsc	status,2,c
  2846  00046E  D71D               	goto	i2l1873
  2847  000470  0A01               	xorlw	1	; case 51
  2848  000472  B4D8               	btfsc	status,2,c
  2849  000474  D726               	goto	i2l1875
  2850  000476  0A07               	xorlw	7	; case 52
  2851  000478  B4D8               	btfsc	status,2,c
  2852  00047A  D72F               	goto	i2l1877
  2853  00047C  0A01               	xorlw	1	; case 53
  2854  00047E  B4D8               	btfsc	status,2,c
  2855  000480  D738               	goto	i2l1879
  2856  000482  0A03               	xorlw	3	; case 54
  2857  000484  B4D8               	btfsc	status,2,c
  2858  000486  D741               	goto	i2l1881
  2859  000488  0A01               	xorlw	1	; case 55
  2860  00048A  B4D8               	btfsc	status,2,c
  2861  00048C  D74A               	goto	i2l1883
  2862  00048E  0A0F               	xorlw	15	; case 56
  2863  000490  B4D8               	btfsc	status,2,c
  2864  000492  D753               	goto	i2l1885
  2865  000494  0A01               	xorlw	1	; case 57
  2866  000496  B4D8               	btfsc	status,2,c
  2867  000498  D75C               	goto	i2l1887
  2868  00049A  0A78               	xorlw	120	; case 65
  2869  00049C  B4D8               	btfsc	status,2,c
  2870  00049E  D765               	goto	i2l1889
  2871  0004A0  0A05               	xorlw	5	; case 68
  2872  0004A2  B4D8               	btfsc	status,2,c
  2873  0004A4  D76E               	goto	i2l1891
  2874  0004A6  0A01               	xorlw	1	; case 69
  2875  0004A8  B4D8               	btfsc	status,2,c
  2876  0004AA  D777               	goto	i2l1893
  2877  0004AC  0A09               	xorlw	9	; case 76
  2878  0004AE  B4D8               	btfsc	status,2,c
  2879  0004B0  D780               	goto	i2l1895
  2880  0004B2  0A03               	xorlw	3	; case 79
  2881  0004B4  B4D8               	btfsc	status,2,c
  2882  0004B6  D789               	goto	i2l1897
  2883  0004B8  0A1F               	xorlw	31	; case 80
  2884  0004BA  B4D8               	btfsc	status,2,c
  2885  0004BC  D792               	goto	i2l1899
  2886  0004BE  D7A9               	goto	i2l1903
  2887  0004C0                     i2l1907:
  2888  0004C0  2A32               	incf	_display_counter,f,c
  2889  0004C2                     i2l1909:
  2890  0004C2  500D               	movf	Evaluate_Display@size,w,c
  2891  0004C4  5C32               	subwf	_display_counter,w,c
  2892  0004C6  B0D8               	btfsc	status,0,c
  2893  0004C8  0012               	return	
  2894  0004CA  D7AC               	goto	i2l1905
  2895  0004CC                     __end_of_Evaluate_Display:
  2896                           	opt stack 0
  2897                           pclatu	equ	0xFFB
  2898                           pclath	equ	0xFFA
  2899                           tblptru	equ	0xFF8
  2900                           tblptrh	equ	0xFF7
  2901                           tblptrl	equ	0xFF6
  2902                           tablat	equ	0xFF5
  2903                           prodh	equ	0xFF4
  2904                           prodl	equ	0xFF3
  2905                           indf0	equ	0xFEF
  2906                           postinc0	equ	0xFEE
  2907                           fsr0h	equ	0xFEA
  2908                           fsr0l	equ	0xFE9
  2909                           wreg	equ	0xFE8
  2910                           postdec1	equ	0xFE5
  2911                           fsr1h	equ	0xFE2
  2912                           fsr1l	equ	0xFE1
  2913                           indf2	equ	0xFDF
  2914                           fsr2h	equ	0xFDA
  2915                           fsr2l	equ	0xFD9
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function _Set_Bits *****************
  2919 ;; Defined at:
  2920 ;;		line 12 in file "display.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;  bits            3    0[COMRAM] PTR const unsigned char 
  2923 ;;		 -> ROM(8191), STR_20(2), STR_19(6), STR_18(7), 
  2924 ;;		 -> STR_17(4), STR_16(6), STR_15(7), STR_14(7), 
  2925 ;;		 -> STR_13(7), STR_12(8), STR_11(4), STR_10(7), 
  2926 ;;		 -> STR_9(6), STR_8(5), STR_7(6), STR_6(6), 
  2927 ;;		 -> STR_5(3), STR_4(7), 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  bitcount        1    6[COMRAM] unsigned char 
  2930 ;;  Bitoutput       1    7[COMRAM] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;		None               void
  2933 ;; Registers used:
  2934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1
  2940 ;;      Params:         3       0       0
  2941 ;;      Locals:         2       0       0
  2942 ;;      Temps:          3       0       0
  2943 ;;      Totals:         8       0       0
  2944 ;;Total ram usage:        8 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_Evaluate_Display
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text16
  2954  0004CC                     __ptext16:
  2955                           	opt stack 0
  2956  0004CC                     _Set_Bits:
  2957                           	opt stack 24
  2958                           
  2959                           ;display.c: 13: unsigned char Bitoutput = 0;
  2960                           
  2961                           ;incstack = 0
  2962  0004CC  0E00               	movlw	0
  2963  0004CE  6E08               	movwf	Set_Bits@Bitoutput,c
  2964                           
  2965                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  2966  0004D0  0E00               	movlw	0
  2967  0004D2  6E07               	movwf	Set_Bits@bitcount,c
  2968                           
  2969                           ;display.c: 15: bitcount++) {
  2970  0004D4  D037               	goto	i2l1863
  2971  0004D6                     i2l1843:
  2972                           
  2973                           ;display.c: 18: Bitoutput |= 0b00000001;
  2974  0004D6  8008               	bsf	Set_Bits@Bitoutput,0,c
  2975                           
  2976                           ;display.c: 19: break;
  2977  0004D8  D034               	goto	i2l1861
  2978  0004DA                     i2l1845:
  2979                           
  2980                           ;display.c: 21: Bitoutput |= 0b00000010;
  2981  0004DA  8208               	bsf	Set_Bits@Bitoutput,1,c
  2982                           
  2983                           ;display.c: 22: break;
  2984  0004DC  D032               	goto	i2l1861
  2985  0004DE                     i2l1847:
  2986                           
  2987                           ;display.c: 24: Bitoutput |= 0b00000100;
  2988  0004DE  8408               	bsf	Set_Bits@Bitoutput,2,c
  2989                           
  2990                           ;display.c: 25: break;
  2991  0004E0  D030               	goto	i2l1861
  2992  0004E2                     i2l1849:
  2993                           
  2994                           ;display.c: 27: Bitoutput |= 0b00001000;
  2995  0004E2  8608               	bsf	Set_Bits@Bitoutput,3,c
  2996                           
  2997                           ;display.c: 28: break;
  2998  0004E4  D02E               	goto	i2l1861
  2999  0004E6                     i2l1851:
  3000                           
  3001                           ;display.c: 30: Bitoutput |= 0b00010000;
  3002  0004E6  8808               	bsf	Set_Bits@Bitoutput,4,c
  3003                           
  3004                           ;display.c: 31: break;
  3005  0004E8  D02C               	goto	i2l1861
  3006  0004EA                     i2l1853:
  3007                           
  3008                           ;display.c: 33: Bitoutput |= 0b00100000;
  3009  0004EA  8A08               	bsf	Set_Bits@Bitoutput,5,c
  3010                           
  3011                           ;display.c: 34: break;
  3012  0004EC  D02A               	goto	i2l1861
  3013  0004EE                     i2l1855:
  3014                           
  3015                           ;display.c: 36: Bitoutput |= 0b01000000;
  3016  0004EE  8C08               	bsf	Set_Bits@Bitoutput,6,c
  3017                           
  3018                           ;display.c: 40: }
  3019                           
  3020                           ;display.c: 39: break;
  3021                           
  3022                           ;display.c: 38: default:
  3023                           
  3024                           ;display.c: 37: break;
  3025  0004F0  D028               	goto	i2l1861
  3026  0004F2                     i2l1859:
  3027  0004F2  5007               	movf	Set_Bits@bitcount,w,c
  3028  0004F4  0D01               	mullw	1
  3029  0004F6  50F3               	movf	prodl,w,c
  3030  0004F8  2401               	addwf	Set_Bits@bits,w,c
  3031  0004FA  6E04               	movwf	??_Set_Bits& (0+255),c
  3032  0004FC  50F4               	movf	prodh,w,c
  3033  0004FE  2002               	addwfc	Set_Bits@bits+1,w,c
  3034  000500  6E05               	movwf	(??_Set_Bits+1)& (0+255),c
  3035  000502  0E00               	movlw	0
  3036  000504  2003               	addwfc	Set_Bits@bits+2,w,c
  3037  000506  6E06               	movwf	(??_Set_Bits+2)& (0+255),c
  3038  000508  C004  FFF6         	movff	??_Set_Bits,tblptrl
  3039  00050C  C005  FFF7         	movff	??_Set_Bits+1,tblptrh
  3040  000510  C006  FFF8         	movff	??_Set_Bits+2,tblptru
  3041  000514  0008               	tblrd		*
  3042  000516  50F5               	movf	tablat,w,c
  3043                           
  3044                           ; Switch size 1, requested type "space"
  3045                           ; Number of cases is 7, Range of values is 65 to 71
  3046                           ; switch strategies available:
  3047                           ; Name         Instructions Cycles
  3048                           ; simple_byte           22    12 (average)
  3049                           ;	Chosen strategy is simple_byte
  3050  000518  0A41               	xorlw	65	; case 65
  3051  00051A  B4D8               	btfsc	status,2,c
  3052  00051C  D7DC               	goto	i2l1843
  3053  00051E  0A03               	xorlw	3	; case 66
  3054  000520  B4D8               	btfsc	status,2,c
  3055  000522  D7DB               	goto	i2l1845
  3056  000524  0A01               	xorlw	1	; case 67
  3057  000526  B4D8               	btfsc	status,2,c
  3058  000528  D7DA               	goto	i2l1847
  3059  00052A  0A07               	xorlw	7	; case 68
  3060  00052C  B4D8               	btfsc	status,2,c
  3061  00052E  D7D9               	goto	i2l1849
  3062  000530  0A01               	xorlw	1	; case 69
  3063  000532  B4D8               	btfsc	status,2,c
  3064  000534  D7D8               	goto	i2l1851
  3065  000536  0A03               	xorlw	3	; case 70
  3066  000538  B4D8               	btfsc	status,2,c
  3067  00053A  D7D7               	goto	i2l1853
  3068  00053C  0A01               	xorlw	1	; case 71
  3069  00053E  B4D8               	btfsc	status,2,c
  3070  000540  D7D6               	goto	i2l1855
  3071  000542                     i2l1861:
  3072  000542  2A07               	incf	Set_Bits@bitcount,f,c
  3073  000544                     i2l1863:
  3074  000544  5007               	movf	Set_Bits@bitcount,w,c
  3075  000546  0D01               	mullw	1
  3076  000548  50F3               	movf	prodl,w,c
  3077  00054A  2401               	addwf	Set_Bits@bits,w,c
  3078  00054C  6E04               	movwf	??_Set_Bits& (0+255),c
  3079  00054E  50F4               	movf	prodh,w,c
  3080  000550  2002               	addwfc	Set_Bits@bits+1,w,c
  3081  000552  6E05               	movwf	(??_Set_Bits+1)& (0+255),c
  3082  000554  0E00               	movlw	0
  3083  000556  2003               	addwfc	Set_Bits@bits+2,w,c
  3084  000558  6E06               	movwf	(??_Set_Bits+2)& (0+255),c
  3085  00055A  C004  FFF6         	movff	??_Set_Bits,tblptrl
  3086  00055E  C005  FFF7         	movff	??_Set_Bits+1,tblptrh
  3087  000562  C006  FFF8         	movff	??_Set_Bits+2,tblptru
  3088  000566  0008               	tblrd		*
  3089  000568  50F5               	movf	tablat,w,c
  3090  00056A  0900               	iorlw	0
  3091  00056C  A4D8               	btfss	status,2,c
  3092  00056E  D7C1               	goto	i2l1859
  3093                           
  3094                           ;display.c: 41: }
  3095                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  3096  000570  5032               	movf	_display_counter,w,c
  3097  000572  0D01               	mullw	1
  3098  000574  0E36               	movlw	low _pixels
  3099  000576  24F3               	addwf	prodl,w,c
  3100  000578  6ED9               	movwf	fsr2l,c
  3101  00057A  0E00               	movlw	high _pixels
  3102  00057C  20F4               	addwfc	prodh,w,c
  3103  00057E  6EDA               	movwf	fsr2h,c
  3104  000580  C008  FFDF         	movff	Set_Bits@Bitoutput,indf2
  3105  000584  0012               	return		;funcret
  3106  000586                     __end_of_Set_Bits:
  3107                           	opt stack 0
  3108                           pclatu	equ	0xFFB
  3109                           pclath	equ	0xFFA
  3110                           tblptru	equ	0xFF8
  3111                           tblptrh	equ	0xFF7
  3112                           tblptrl	equ	0xFF6
  3113                           tablat	equ	0xFF5
  3114                           prodh	equ	0xFF4
  3115                           prodl	equ	0xFF3
  3116                           indf0	equ	0xFEF
  3117                           postinc0	equ	0xFEE
  3118                           fsr0h	equ	0xFEA
  3119                           fsr0l	equ	0xFE9
  3120                           wreg	equ	0xFE8
  3121                           postdec1	equ	0xFE5
  3122                           fsr1h	equ	0xFE2
  3123                           fsr1l	equ	0xFE1
  3124                           indf2	equ	0xFDF
  3125                           fsr2h	equ	0xFDA
  3126                           fsr2l	equ	0xFD9
  3127                           status	equ	0xFD8
  3128                           
  3129 ;; *************** function _Receive *****************
  3130 ;; Defined at:
  3131 ;;		line 37 in file "communication.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      unsigned char 
  3138 ;; Registers used:
  3139 ;;		wreg, status,2
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMRAM   BANK0   BANK1
  3145 ;;      Params:         0       0       0
  3146 ;;      Locals:         0       0       0
  3147 ;;      Temps:          0       0       0
  3148 ;;      Totals:         0       0       0
  3149 ;;Total ram usage:        0 bytes
  3150 ;; Hardware stack levels used:    1
  3151 ;; This function calls:
  3152 ;;		Nothing
  3153 ;; This function is called by:
  3154 ;;		_Isr
  3155 ;; This function uses a non-reentrant model
  3156 ;;
  3157                           
  3158                           	psect	text17
  3159  000A7C                     __ptext17:
  3160                           	opt stack 0
  3161  000A7C                     _Receive:
  3162                           	opt stack 27
  3163                           
  3164                           ;communication.c: 38: if(RCSTA1bits.OERR == 1) {
  3165                           
  3166                           ;incstack = 0
  3167  000A7C  A2AB               	btfss	4011,1,c	;volatile
  3168  000A7E  D003               	goto	i2l2115
  3169                           
  3170                           ;communication.c: 39: RCSTA1bits.CREN = 0;
  3171  000A80  98AB               	bcf	4011,4,c	;volatile
  3172                           
  3173                           ;communication.c: 40: RCSTA1bits.CREN = 1;
  3174  000A82  88AB               	bsf	4011,4,c	;volatile
  3175                           
  3176                           ;communication.c: 41: overrun = 1;
  3177  000A84  8440               	bsf	_overrun/(0+8),_overrun& (0+7),c
  3178  000A86                     i2l2115:
  3179                           
  3180                           ;communication.c: 42: }
  3181                           ;communication.c: 43: return (RCREG1);
  3182  000A86  50AE               	movf	4014,w,c	;volatile
  3183  000A88  0012               	return	
  3184  000A8A                     __end_of_Receive:
  3185                           	opt stack 0
  3186                           pclatu	equ	0xFFB
  3187                           pclath	equ	0xFFA
  3188                           tblptru	equ	0xFF8
  3189                           tblptrh	equ	0xFF7
  3190                           tblptrl	equ	0xFF6
  3191                           tablat	equ	0xFF5
  3192                           prodh	equ	0xFF4
  3193                           prodl	equ	0xFF3
  3194                           indf0	equ	0xFEF
  3195                           postinc0	equ	0xFEE
  3196                           fsr0h	equ	0xFEA
  3197                           fsr0l	equ	0xFE9
  3198                           wreg	equ	0xFE8
  3199                           postdec1	equ	0xFE5
  3200                           fsr1h	equ	0xFE2
  3201                           fsr1l	equ	0xFE1
  3202                           indf2	equ	0xFDF
  3203                           fsr2h	equ	0xFDA
  3204                           fsr2l	equ	0xFD9
  3205                           status	equ	0xFD8
  3206                           
  3207 ;; *************** function _Ignite_Detonators *****************
  3208 ;; Defined at:
  3209 ;;		line 29 in file "ignition.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;		None
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;  counter         1    5[COMRAM] unsigned char 
  3214 ;; Return value:  Size  Location     Type
  3215 ;;		None               void
  3216 ;; Registers used:
  3217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1
  3223 ;;      Params:         0       0       0
  3224 ;;      Locals:         1       0       0
  3225 ;;      Temps:          2       0       0
  3226 ;;      Totals:         3       0       0
  3227 ;;Total ram usage:        3 bytes
  3228 ;; Hardware stack levels used:    1
  3229 ;; Hardware stack levels required when called:    1
  3230 ;; This function calls:
  3231 ;;		_Transmit
  3232 ;; This function is called by:
  3233 ;;		_Isr
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text18
  3238  000746                     __ptext18:
  3239                           	opt stack 0
  3240  000746                     _Ignite_Detonators:
  3241                           	opt stack 26
  3242                           
  3243                           ;ignition.c: 30: for(unsigned char counter = 0; counter < 30; counter++) {
  3244                           
  3245                           ;incstack = 0
  3246  000746  0E00               	movlw	0
  3247  000748  6E06               	movwf	Ignite_Detonators@counter,c
  3248  00074A                     i2l2069:
  3249  00074A  0E1D               	movlw	29
  3250  00074C  6406               	cpfsgt	Ignite_Detonators@counter,c
  3251  00074E  D001               	goto	i2l2073
  3252  000750  0012               	return	
  3253  000752                     i2l2073:
  3254                           
  3255                           ;ignition.c: 31: if(pin[counter].time == current_time) {
  3256  000752  5006               	movf	Ignite_Detonators@counter,w,c
  3257  000754  0D06               	mullw	6
  3258  000756  0E04               	movlw	4
  3259  000758  26F3               	addwf	prodl,f,c
  3260  00075A  0E00               	movlw	0
  3261  00075C  22F4               	addwfc	prodh,f,c
  3262  00075E  0E00               	movlw	low _pin
  3263  000760  24F3               	addwf	prodl,w,c
  3264  000762  6ED9               	movwf	fsr2l,c
  3265  000764  0E01               	movlw	high _pin
  3266  000766  20F4               	addwfc	prodh,w,c
  3267  000768  6EDA               	movwf	fsr2h,c
  3268  00076A  502F               	movf	_current_time,w,c
  3269  00076C  18DE               	xorwf	postinc2,w,c
  3270  00076E  E11F               	bnz	i2l2077
  3271  000770  5030               	movf	_current_time+1,w,c
  3272  000772  18DE               	xorwf	postinc2,w,c
  3273  000774  A4D8               	btfss	status,2,c
  3274  000776  D01B               	goto	i2l2077
  3275                           
  3276                           ;ignition.c: 32: Transmit(pin[counter].slave, 'I', pin[counter].output);
  3277  000778  0E49               	movlw	73
  3278  00077A  6E01               	movwf	Transmit@operation,c
  3279  00077C  5006               	movf	Ignite_Detonators@counter,w,c
  3280  00077E  0D06               	mullw	6
  3281  000780  0E01               	movlw	1
  3282  000782  26F3               	addwf	prodl,f,c
  3283  000784  0E00               	movlw	0
  3284  000786  22F4               	addwfc	prodh,f,c
  3285  000788  0E00               	movlw	low _pin
  3286  00078A  24F3               	addwf	prodl,w,c
  3287  00078C  6ED9               	movwf	fsr2l,c
  3288  00078E  0E01               	movlw	high _pin
  3289  000790  20F4               	addwfc	prodh,w,c
  3290  000792  6EDA               	movwf	fsr2h,c
  3291  000794  50DF               	movf	indf2,w,c
  3292  000796  6E02               	movwf	Transmit@port,c
  3293  000798  5006               	movf	Ignite_Detonators@counter,w,c
  3294  00079A  0D06               	mullw	6
  3295  00079C  0E00               	movlw	low _pin
  3296  00079E  24F3               	addwf	prodl,w,c
  3297  0007A0  6ED9               	movwf	fsr2l,c
  3298  0007A2  0E01               	movlw	high _pin
  3299  0007A4  20F4               	addwfc	prodh,w,c
  3300  0007A6  6EDA               	movwf	fsr2h,c
  3301  0007A8  50DF               	movf	indf2,w,c
  3302  0007AA  ECC3  F004         	call	_Transmit
  3303  0007AE                     i2l2077:
  3304  0007AE  2A06               	incf	Ignite_Detonators@counter,f,c
  3305  0007B0  D7CC               	goto	i2l2069
  3306  0007B2                     __end_of_Ignite_Detonators:
  3307                           	opt stack 0
  3308                           pclatu	equ	0xFFB
  3309                           pclath	equ	0xFFA
  3310                           tblptru	equ	0xFF8
  3311                           tblptrh	equ	0xFF7
  3312                           tblptrl	equ	0xFF6
  3313                           tablat	equ	0xFF5
  3314                           prodh	equ	0xFF4
  3315                           prodl	equ	0xFF3
  3316                           indf0	equ	0xFEF
  3317                           postinc0	equ	0xFEE
  3318                           fsr0h	equ	0xFEA
  3319                           fsr0l	equ	0xFE9
  3320                           wreg	equ	0xFE8
  3321                           postdec1	equ	0xFE5
  3322                           fsr1h	equ	0xFE2
  3323                           fsr1l	equ	0xFE1
  3324                           indf2	equ	0xFDF
  3325                           postinc2	equ	0xFDE
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8
  3329                           
  3330 ;; *************** function _Check_Detonators *****************
  3331 ;; Defined at:
  3332 ;;		line 25 in file "ignition.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;		None
  3337 ;; Return value:  Size  Location     Type
  3338 ;;		None               void
  3339 ;; Registers used:
  3340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1
  3346 ;;      Params:         0       0       0
  3347 ;;      Locals:         0       0       0
  3348 ;;      Temps:          0       0       0
  3349 ;;      Totals:         0       0       0
  3350 ;;Total ram usage:        0 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    1
  3353 ;; This function calls:
  3354 ;;		_Transmit
  3355 ;; This function is called by:
  3356 ;;		_Isr
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text19
  3361  00094E                     __ptext19:
  3362                           	opt stack 0
  3363  00094E                     _Check_Detonators:
  3364                           	opt stack 26
  3365                           
  3366                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  3367                           
  3368                           ;incstack = 0
  3369  00094E  0E54               	movlw	84
  3370  000950  6E01               	movwf	Transmit@operation,c
  3371  000952  5031               	movf	_check_counter,w,c
  3372  000954  0D06               	mullw	6
  3373  000956  0E01               	movlw	1
  3374  000958  26F3               	addwf	prodl,f,c
  3375  00095A  0E00               	movlw	0
  3376  00095C  22F4               	addwfc	prodh,f,c
  3377  00095E  0E00               	movlw	low _pin
  3378  000960  24F3               	addwf	prodl,w,c
  3379  000962  6ED9               	movwf	fsr2l,c
  3380  000964  0E01               	movlw	high _pin
  3381  000966  20F4               	addwfc	prodh,w,c
  3382  000968  6EDA               	movwf	fsr2h,c
  3383  00096A  50DF               	movf	indf2,w,c
  3384  00096C  6E02               	movwf	Transmit@port,c
  3385  00096E  5031               	movf	_check_counter,w,c
  3386  000970  0D06               	mullw	6
  3387  000972  0E00               	movlw	low _pin
  3388  000974  24F3               	addwf	prodl,w,c
  3389  000976  6ED9               	movwf	fsr2l,c
  3390  000978  0E01               	movlw	high _pin
  3391  00097A  20F4               	addwfc	prodh,w,c
  3392  00097C  6EDA               	movwf	fsr2h,c
  3393  00097E  50DF               	movf	indf2,w,c
  3394  000980  ECC3  F004         	call	_Transmit
  3395  000984  0012               	return		;funcret
  3396  000986                     __end_of_Check_Detonators:
  3397                           	opt stack 0
  3398                           pclatu	equ	0xFFB
  3399                           pclath	equ	0xFFA
  3400                           tblptru	equ	0xFF8
  3401                           tblptrh	equ	0xFF7
  3402                           tblptrl	equ	0xFF6
  3403                           tablat	equ	0xFF5
  3404                           prodh	equ	0xFF4
  3405                           prodl	equ	0xFF3
  3406                           indf0	equ	0xFEF
  3407                           postinc0	equ	0xFEE
  3408                           fsr0h	equ	0xFEA
  3409                           fsr0l	equ	0xFE9
  3410                           wreg	equ	0xFE8
  3411                           postdec1	equ	0xFE5
  3412                           fsr1h	equ	0xFE2
  3413                           fsr1l	equ	0xFE1
  3414                           indf2	equ	0xFDF
  3415                           postinc2	equ	0xFDE
  3416                           fsr2h	equ	0xFDA
  3417                           fsr2l	equ	0xFD9
  3418                           status	equ	0xFD8
  3419                           
  3420 ;; *************** function _Transmit *****************
  3421 ;; Defined at:
  3422 ;;		line 15 in file "communication.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  receiver        1    wreg     unsigned char 
  3425 ;;  operation       1    0[COMRAM] unsigned char 
  3426 ;;  port            1    1[COMRAM] unsigned char 
  3427 ;; Auto vars:     Size  Location     Type
  3428 ;;  receiver        1    2[COMRAM] unsigned char 
  3429 ;; Return value:  Size  Location     Type
  3430 ;;		None               void
  3431 ;; Registers used:
  3432 ;;		wreg, status,2
  3433 ;; Tracked objects:
  3434 ;;		On entry : 0/0
  3435 ;;		On exit  : 0/0
  3436 ;;		Unchanged: 0/0
  3437 ;; Data sizes:     COMRAM   BANK0   BANK1
  3438 ;;      Params:         2       0       0
  3439 ;;      Locals:         1       0       0
  3440 ;;      Temps:          0       0       0
  3441 ;;      Totals:         3       0       0
  3442 ;;Total ram usage:        3 bytes
  3443 ;; Hardware stack levels used:    1
  3444 ;; This function calls:
  3445 ;;		Nothing
  3446 ;; This function is called by:
  3447 ;;		_Check_Detonators
  3448 ;;		_Ignite_Detonators
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text20
  3453  000986                     __ptext20:
  3454                           	opt stack 0
  3455  000986                     _Transmit:
  3456                           	opt stack 26
  3457                           
  3458                           ;incstack = 0
  3459                           ;Transmit@receiver stored from wreg
  3460  000986  6E03               	movwf	Transmit@receiver,c
  3461                           
  3462                           ;communication.c: 17: PORTBbits.RB5 = 1;
  3463  000988  8A81               	bsf	3969,5,c	;volatile
  3464                           
  3465                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  3466  00098A  98AB               	bcf	4011,4,c	;volatile
  3467                           
  3468                           ;communication.c: 20: __nop();
  3469  00098C  F000               	nop	
  3470  00098E                     i2l484:
  3471  00098E  A89E               	btfss	3998,4,c	;volatile
  3472  000990  D7FE               	goto	i2l484
  3473                           
  3474                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  3475  000992  80AC               	bsf	4012,0,c	;volatile
  3476                           
  3477                           ;communication.c: 23: TXREG1 = receiver;
  3478  000994  C003  FFAD         	movff	Transmit@receiver,4013	;volatile
  3479  000998                     i2l487:
  3480  000998  A89E               	btfss	3998,4,c	;volatile
  3481  00099A  D7FE               	goto	i2l487
  3482                           
  3483                           ;communication.c: 25: TXREG1 = 0xAA;
  3484  00099C  0EAA               	movlw	170
  3485  00099E  6EAD               	movwf	4013,c	;volatile
  3486  0009A0                     i2l490:
  3487  0009A0  A89E               	btfss	3998,4,c	;volatile
  3488  0009A2  D7FE               	goto	i2l490
  3489                           
  3490                           ;communication.c: 27: TXREG1 = operation;
  3491  0009A4  C001  FFAD         	movff	Transmit@operation,4013	;volatile
  3492  0009A8                     i2l493:
  3493  0009A8  A89E               	btfss	3998,4,c	;volatile
  3494  0009AA  D7FE               	goto	i2l493
  3495                           
  3496                           ;communication.c: 29: TXREG1 = port;
  3497  0009AC  C002  FFAD         	movff	Transmit@port,4013	;volatile
  3498  0009B0                     i2l496:
  3499  0009B0  A2AC               	btfss	4012,1,c	;volatile
  3500  0009B2  D7FE               	goto	i2l496
  3501                           
  3502                           ;communication.c: 31: PORTBbits.RB5 = 0;
  3503  0009B4  9A81               	bcf	3969,5,c	;volatile
  3504                           
  3505                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  3506  0009B6  88AB               	bsf	4011,4,c	;volatile
  3507                           
  3508                           ;communication.c: 33: __nop();
  3509  0009B8  F000               	nop	
  3510  0009BA  0012               	return		;funcret
  3511  0009BC                     __end_of_Transmit:
  3512                           	opt stack 0
  3513                           pclatu	equ	0xFFB
  3514                           pclath	equ	0xFFA
  3515                           tblptru	equ	0xFF8
  3516                           tblptrh	equ	0xFF7
  3517                           tblptrl	equ	0xFF6
  3518                           tablat	equ	0xFF5
  3519                           prodh	equ	0xFF4
  3520                           prodl	equ	0xFF3
  3521                           indf0	equ	0xFEF
  3522                           postinc0	equ	0xFEE
  3523                           fsr0h	equ	0xFEA
  3524                           fsr0l	equ	0xFE9
  3525                           wreg	equ	0xFE8
  3526                           postdec1	equ	0xFE5
  3527                           fsr1h	equ	0xFE2
  3528                           fsr1l	equ	0xFE1
  3529                           indf2	equ	0xFDF
  3530                           postinc2	equ	0xFDE
  3531                           fsr2h	equ	0xFDA
  3532                           fsr2l	equ	0xFD9
  3533                           status	equ	0xFD8
  3534                           pclatu	equ	0xFFB
  3535                           pclath	equ	0xFFA
  3536                           tblptru	equ	0xFF8
  3537                           tblptrh	equ	0xFF7
  3538                           tblptrl	equ	0xFF6
  3539                           tablat	equ	0xFF5
  3540                           prodh	equ	0xFF4
  3541                           prodl	equ	0xFF3
  3542                           indf0	equ	0xFEF
  3543                           postinc0	equ	0xFEE
  3544                           fsr0h	equ	0xFEA
  3545                           fsr0l	equ	0xFE9
  3546                           wreg	equ	0xFE8
  3547                           postdec1	equ	0xFE5
  3548                           fsr1h	equ	0xFE2
  3549                           fsr1l	equ	0xFE1
  3550                           indf2	equ	0xFDF
  3551                           postinc2	equ	0xFDE
  3552                           fsr2h	equ	0xFDA
  3553                           fsr2l	equ	0xFD9
  3554                           status	equ	0xFD8
  3555                           
  3556                           	psect	rparam
  3557  0000                     pclatu	equ	0xFFB
  3558                           pclath	equ	0xFFA
  3559                           tblptru	equ	0xFF8
  3560                           tblptrh	equ	0xFF7
  3561                           tblptrl	equ	0xFF6
  3562                           tablat	equ	0xFF5
  3563                           prodh	equ	0xFF4
  3564                           prodl	equ	0xFF3
  3565                           indf0	equ	0xFEF
  3566                           postinc0	equ	0xFEE
  3567                           fsr0h	equ	0xFEA
  3568                           fsr0l	equ	0xFE9
  3569                           wreg	equ	0xFE8
  3570                           postdec1	equ	0xFE5
  3571                           fsr1h	equ	0xFE2
  3572                           fsr1l	equ	0xFE1
  3573                           indf2	equ	0xFDF
  3574                           postinc2	equ	0xFDE
  3575                           fsr2h	equ	0xFDA
  3576                           fsr2l	equ	0xFD9
  3577                           status	equ	0xFD8
  3578                           
  3579                           	psect	temp
  3580  000041                     btemp:
  3581                           	opt stack 0
  3582  000041                     	ds	1
  3583  0000                     int$flags	set	btemp
  3584                           pclatu	equ	0xFFB
  3585                           pclath	equ	0xFFA
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           prodh	equ	0xFF4
  3591                           prodl	equ	0xFF3
  3592                           indf0	equ	0xFEF
  3593                           postinc0	equ	0xFEE
  3594                           fsr0h	equ	0xFEA
  3595                           fsr0l	equ	0xFE9
  3596                           wreg	equ	0xFE8
  3597                           postdec1	equ	0xFE5
  3598                           fsr1h	equ	0xFE2
  3599                           fsr1l	equ	0xFE1
  3600                           indf2	equ	0xFDF
  3601                           postinc2	equ	0xFDE
  3602                           fsr2h	equ	0xFDA
  3603                           fsr2l	equ	0xFD9
  3604                           status	equ	0xFD8


Data Sizes:
    Strings     85
    Constant    0
    Data        180
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      64
    BANK0           160      9       9
    BANK1           256      0     180

Pointer List with Targets:

    Write_Display_Byte@write_data	PTR unsigned char  size(2) Largest target is 7
		 -> pixels(COMRAM[7]), STR_1(CODE[2]), 

    Evaluate_Display@evaluate	PTR const unsigned char  size(2) Largest target is 4
		 -> signs(COMRAM[3]), STR_3(CODE[4]), STR_2(CODE[4]), 

    Set_Bits@bits	PTR const unsigned char  size(3) Largest target is 8191
		 -> ROM(CODE[8191]), STR_20(CODE[2]), STR_19(CODE[6]), STR_18(CODE[7]), 
		 -> STR_17(CODE[4]), STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[7]), 
		 -> STR_13(CODE[7]), STR_12(CODE[8]), STR_11(CODE[4]), STR_10(CODE[7]), 
		 -> STR_9(CODE[6]), STR_8(CODE[5]), STR_7(CODE[6]), STR_6(CODE[6]), 
		 -> STR_5(CODE[3]), STR_4(CODE[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Isr->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits
    _Ignite_Detonators->_Transmit
    _Check_Detonators->_Transmit

Critical Paths under _main in BANK0

    _main->_Write_Display_Byte

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     249
                               _Init
                 _Write_Display_Byte
 ---------------------------------------------------------------------------------
 (1) _Write_Display_Byte                                   9     7      2     249
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 20    20      0    6693
                                             20 COMRAM    20    20      0
                   _Check_Detonators
                  _Ignite_Detonators
                            _Receive
                        _Set_Display
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _Set_Display                                          4     1      3    5370
                                             16 COMRAM     4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
               i2_Write_Display_Byte
 ---------------------------------------------------------------------------------
 (5) i2_Write_Display_Byte                                 9     7      2     116
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (5) _Evaluate_Signs                                       3     1      2    2036
                                             13 COMRAM     3     1      2
                   _Evaluate_Display
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _Evaluate_Display                                     5     3      2    1572
                                              8 COMRAM     5     3      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (7) _Set_Bits                                             8     5      3    1272
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (4) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Ignite_Detonators                                    3     3      0     434
                                              3 COMRAM     3     3      0
                           _Transmit
 ---------------------------------------------------------------------------------
 (4) _Check_Detonators                                     0     0      0     322
                           _Transmit
 ---------------------------------------------------------------------------------
 (5) _Transmit                                             3     1      2     322
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
     _InitAnsel
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Write_Display_Byte

 _Isr (ROOT)
   _Check_Detonators
     _Transmit
   _Ignite_Detonators
     _Transmit
   _Receive
   _Set_Display
     _Evaluate_Display
       _Set_Bits
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
       ___lwmod
     i2_Write_Display_Byte
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      9       9       4        5.6%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     28      40       1       68.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FD       6        0.0%
DATA                 0      0      FD       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Feb 03 20:30:00 2017

      Evaluate_Display@evaluate 0009                    ___awdiv@sign 0006                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                             l509 06B0                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                             _Isr 0008                             _pin 0100  
                _Evaluate_Signs 081A                             prod 000FF3                             wreg 000FE8  
             Set_Bits@Bitoutput 0008                      _TXSTA1bits 000FAC                    __CFG_LVP$OFF 000000  
                          ?_Isr 0001                            l2495 0A14                            STR_1 026E  
                          STR_2 0266                            STR_3 026A                            STR_4 0223  
                          STR_5 0263                            STR_6 0245                            STR_7 023F  
                          STR_8 025D                            STR_9 024B                            u1710 06AE  
                          u1717 06A4                            _Init 0A2A                            _main 0A10  
                          fsr0h 000FEA                            fsr1h 000FE2                            indf0 000FEF  
                          fsr0l 000FE9                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            btemp 0041  
                 __CFG_BORV$190 000000                    Transmit@port 0002                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 0216  
                 __CFG_IESO$OFF 000000              _Write_Display_Byte 063A                    ___param_bank 000010  
                         ??_Isr 0015                 __end_of_Receive 0A8A             ?_Write_Display_Byte 0060  
                  _BAUDCON1bits 000FB8                           ?_Init 0001                           ?_main 0001  
               __end_of___awdiv 0746                           _EEADR 000FA9                           STR_10 0238  
                         STR_11 0262                           STR_20 0243                           STR_12 021B  
                         STR_13 022A                           STR_14 0231                           STR_15 0223  
                         STR_16 0257                           STR_17 0226                           STR_18 0223  
                         STR_19 0251          __end_of_Evaluate_Signs 087E                 ___awdiv@divisor 0003  
             _InitMiscellaneous 0A8A                 __end_of___lwmod 0912                           i2l423 086C  
                         i2l509 080A                           i2l490 09A0                           i2l484 098E  
                         i2l572 00A4                           i2l493 09A8                           i2l573 00A0  
                         i2l487 0998                           i2l496 09B0                           i2l585 01DA  
               ___awdiv@counter 0005                           i2l998 0908               _Ignite_Detonators 0746  
                         _TMR1H 000FCF                           _TMR3H 000FB3                           _TMR1L 000FCE  
                         _TMR3L 000FB2                           _PORTA 000F80                           _PORTB 000F81  
                         _PORTC 000F82                           _PORTE 000F84                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISE 000F96  
                 __CFG_WRT0$OFF 000000        __end_of_InitTransmission 0A10                   __CFG_WRT1$OFF 000000  
            ?_InitMiscellaneous 0001                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000              ?_Ignite_Detonators 0001                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                _Evaluate_Display 0272  
                __CFG_EBTRB$OFF 000000                           _signs 003D              __CFG_MCLRE$EXTMCLR 000000  
          ??_Write_Display_Byte 0062                  __pbitbssCOMRAM 0200                  __CFG_BOREN$OFF 000000  
           ??_InitMiscellaneous 0060                           tablat 000FF5             ??_Ignite_Detonators 0004  
                         status 000FD8                 __initialization 0912                    __end_of_Init 0A44  
                  __end_of_main 0A2A                __end_of_InitPort 0A7C                __end_of_InitTris 0A6A  
        Set_Display@information 0011       __end_of_InitMiscellaneous 0A90                          ??_Init 0060  
     __end_of_Ignite_Detonators 07B2                   ??_Set_Display 0014                          ??_main 0069  
              __end_of_Set_Bits 0586                 ?_Evaluate_Signs 000E                   __activetblptr 000002  
              __end_of_Transmit 09BC                          _EEDATA 000FA8                          _CCPR1H 000FBF  
                        _CCPR1L 000FBE                          _EECON2 000FA7                ___awdiv@dividend 0001  
                        _ANSELA 000F38                          _ANSELB 000F39                          _ANSELC 000F3A  
                        i2l2017 0882                          i2l2033 08B8                          i2l2115 0A86  
                        i2l2035 08C2                          i2l2029 08AA                          i2l2141 0704  
                        i2l2133 06E6                          i2l2151 0724                          i2l2143 0708  
                        i2l2127 06D6                          i2l2073 0752                          i2l2139 06FC  
                        i2l2155 072E                          i2l2077 07AE                          i2l2069 074A  
                        i2l2159 073C                          i2l2423 01A2                          i2l2419 016C  
                        i2l2427 01C0                          i2l2371 005C                          i2l1901 03FA  
                        i2l2437 01D4                  __CFG_WDTEN$OFF 000000                          i2l1903 0412  
                        i2l1905 0424                          i2l2377 006E                          i2l1851 04E6  
                        i2l1843 04D6                          i2l1907 04C0                          i2l1923 08FE  
                        i2l1915 08DE                          i2l1853 04EA                          i2l1845 04DA  
                        i2l1861 0542                          i2l1909 04C2                          i2l1917 08E6  
                        i2l1855 04EE                          i2l1847 04DE                          i2l1863 0544  
                        i2l1871 0292                          i2l1919 08EA                          i2l1849 04E2  
                        i2l1881 030A                          i2l1873 02AA                          i2l1859 04F2  
                        i2l1891 0382                          i2l1883 0322                          i2l1875 02C2  
                        i2l1893 039A                          i2l1885 033A                          i2l1877 02DA  
                        i2l1869 027A                          i2l1895 03B2                          i2l1887 0352  
                        i2l1879 02F2                          i2l1975 081E                          i2l1897 03CA  
                        i2l1889 036A                          i2l1899 03E2                          i2l1979 0826  
                        _RCREG1 000FAE                          _OSCCON 000FD3              __size_of_InitAnsel 0014  
                        _SPBRG1 000FAF                          _SSP1IF 007CF3              __size_of_InitTimer 0030  
                        _TXREG1 000FAD                       ??_Receive 0001                  __CFG_XINST$OFF 000000  
                  _CCPTMRS0bits 000F49                       ??___awdiv 0005                       ??___lwmod 0005  
                        clear_0 091A                ___awdiv@quotient 0007                          _pixels 0036  
Evaluate_Signs@evaluation_value 000E                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8             __end_of_Set_Display 08D0  
               __CFG_HFOFST$OFF 000000            Isr@pixel_index_array 0026                      __accesstop 0060  
       __end_of__initialization 0940                 __CFG_PBADEN$OFF 000000                   ___rparam_used 000001  
                __pcstackCOMRAM 0001       __size_of_Check_Detonators 0038                    __pidataBANK1 0586  
    __size_of_InitMiscellaneous 0006      __size_of_Ignite_Detonators 006C               __end_of_InitAnsel 0A58  
             __end_of_InitTimer 09EC    __end_ofi2_Write_Display_Byte 081A              Isr@pixel_index_bit 0027  
               __CFG_PLLCFG$OFF 000000                       ?_InitPort 0001                       ?_InitTris 0001  
                     ?_Set_Bits 0001              __CFG_CCP2MX$PORTC1 000000        __end_of_Evaluate_Display 04CC  
            __CFG_CCP3MX$PORTB5 000000                       ?_Transmit 0001                     _Set_Display 087E  
             ?_InitTransmission 0001               __CFG_PRICLKEN$OFF 000000                         i2u86_40 0458  
                       i2u86_47 044E                         _SSP1BUF 000FC9              ??_InitTransmission 0060  
                    ??_InitPort 0060                      ??_InitTris 0060     i2Write_Display_Byte@counter 0009  
                    ??_Set_Bits 0004                 __CFG_PWRTEN$OFF 000000                         _Receive 0A7C  
                       __Hparam 0000                         __Lparam 0000                         ___awdiv 06C2  
              ??_Evaluate_Signs 0010                      ??_Transmit 0003                         ___lwmod 08D0  
                  __psmallconst 021A                 __CFG_STVREN$OFF 000000                         __pcinit 0912  
                       __ramtop 0200                         __ptext0 0A10                         __ptext1 063A  
                       __ptext2 0A2A                         __ptext3 0A58                         __ptext4 09EC  
                       __ptext5 09BC                         __ptext6 0A6A                         __ptext7 0A8A  
                       __ptext8 0A44                       _T1CONbits 000FCD                    __size_of_Isr 020E  
               Set_Display@type 0014                       _T3CONbits 000FB1                         _overrun 0202  
          end_of_initialization 0940     __size_of_Write_Display_Byte 0088                   __Lmediumconst 0000  
          i2_Write_Display_Byte 07B2                       _RCSTAbits 000FAB                _Check_Detonators 094E  
                       postdec1 000FE5                         postinc0 000FEE                         postinc2 000FDE  
                     _PORTAbits 000F80                       _PORTBbits 000F81                       _PORTCbits 000F82  
                     _TRISCbits 000F94        Ignite_Detonators@counter 0006                   _check_counter 0031  
                   _CCP1CONbits 000FBD           ?i2_Write_Display_Byte 0001                    Set_Bits@bits 0001  
           start_initialization 0912                       _InitAnsel 0A44                    _ignite_ready 0200  
                   __end_of_Isr 0216                       _InitTimer 09BC                Set_Bits@bitcount 0007  
i2Write_Display_Byte@write_data 0001               __size_of_InitPort 0012               __size_of_InitTris 0012  
             __size_of_Set_Bits 00BA               ?_Evaluate_Display 0009                     __pdataBANK1 0100  
            ??_Evaluate_Display 000B                  _slave_selected 0035               __size_of_Transmit 0036  
                  ?_Set_Display 0011                     __pbssCOMRAM 0029                      ?_InitAnsel 0001  
                 __pcstackBANK0 0060                      ?_InitTimer 0001          ??i2_Write_Display_Byte 0003  
                  _current_time 002F                _master_addressed 0201                        ?_Receive 0001  
     __size_of_InitTransmission 0024                       __pintcode 0008                        ?___awdiv 0001  
                      ?___lwmod 0001                     __smallconst 021A        __end_of_Check_Detonators 0986  
                      _PIE1bits 000F9D                        i2u101_40 0808                        i2u101_47 07FE  
                      i2u163_44 0152                        i2u163_45 014E                        i2u165_44 0184  
                      i2u165_45 0180                        _PIR1bits 000F9E                        _PIR2bits 000FA1  
              __CFG_WDTPS$32768 000000                        _SSP1CON1 000FC6                        _SSP1STAT 000FC7  
                   ??_InitAnsel 0060                 _receive_counter 0034                     ??_InitTimer 0060  
    __end_of_Write_Display_Byte 06C2                       copy_data0 0934                        _InitPort 0A6A  
                      _InitTris 0A58               Transmit@operation 0001                      _EECON1bits 000FA6  
               Isr@search_index 0028                        _Set_Bits 04CC                    _pin_selected 0033  
                      __Hrparam 0000                __size_of_Receive 000E                        __Lrparam 0000  
             __CFG_P2BMX$PORTB5 000000                        _Transmit 0986                __size_of___awdiv 0084  
              __size_of___lwmod 0042            __size_of_Set_Display 0052         __size_of_Evaluate_Signs 0064  
                      __ptext10 06C2                        __ptext11 087E                        __ptext20 0986  
                      __ptext12 07B2                        __ptext13 081A                        __ptext14 08D0  
                      __ptext15 0272                        __ptext16 04CC                        __ptext17 0A7C  
                      __ptext18 0746                        __ptext19 094E                Set_Display@value 0012  
                 __size_of_Init 001A                   __size_of_main 001A                        _received 0029  
              _InitTransmission 09EC                        _testflag 0203                        int$flags 0041  
          Evaluate_Display@size 000D                Transmit@receiver 0003    Write_Display_Byte@write_data 0060  
    Evaluate_Signs@valuecounter 0010                      _INTCONbits 000FF2       __size_of_Evaluate_Display 025A  
                      intlevel2 0000                ___lwmod@dividend 0001       Write_Display_Byte@counter 0068  
                    _RCSTA1bits 000FAB                 _display_counter 0032                 ___lwmod@divisor 0003  
               ___lwmod@counter 0005               __CFG_T3CMX$PORTC0 000000               ?_Check_Detonators 0001  
            ??_Check_Detonators 0004               __CFG_FOSC$INTIO67 000000   __size_ofi2_Write_Display_Byte 0068  
