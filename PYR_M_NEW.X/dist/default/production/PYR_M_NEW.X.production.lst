

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Dec 13 21:17:37 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           	psect	idataBANK1
    38  00087E                     __pidataBANK1:
    39                           	opt stack 0
    40                           
    41                           ;initializer for _pin
    42  00087E  00                 	db	0
    43  00087F  00                 	db	0
    44  000880  00                 	db	0
    45  000881  1F                 	db	31
    46  000882  00                 	db	0
    47  000883  00                 	db	0
    48  000884  00                 	db	0
    49  000885  01                 	db	1
    50  000886  01                 	db	1
    51  000887  1E                 	db	30
    52  000888  00                 	db	0
    53  000889  00                 	db	0
    54  00088A  00                 	db	0
    55  00088B  02                 	db	2
    56  00088C  02                 	db	2
    57  00088D  1D                 	db	29
    58  00088E  00                 	db	0
    59  00088F  00                 	db	0
    60  000890  00                 	db	0
    61  000891  03                 	db	3
    62  000892  03                 	db	3
    63  000893  1C                 	db	28
    64  000894  00                 	db	0
    65  000895  00                 	db	0
    66  000896  00                 	db	0
    67  000897  04                 	db	4
    68  000898  04                 	db	4
    69  000899  1B                 	db	27
    70  00089A  00                 	db	0
    71  00089B  00                 	db	0
    72  00089C  00                 	db	0
    73  00089D  05                 	db	5
    74  00089E  05                 	db	5
    75  00089F  1A                 	db	26
    76  0008A0  00                 	db	0
    77  0008A1  00                 	db	0
    78  0008A2  00                 	db	0
    79  0008A3  06                 	db	6
    80  0008A4  06                 	db	6
    81  0008A5  19                 	db	25
    82  0008A6  00                 	db	0
    83  0008A7  00                 	db	0
    84  0008A8  00                 	db	0
    85  0008A9  07                 	db	7
    86  0008AA  07                 	db	7
    87  0008AB  18                 	db	24
    88  0008AC  00                 	db	0
    89  0008AD  00                 	db	0
    90  0008AE  00                 	db	0
    91  0008AF  08                 	db	8
    92  0008B0  08                 	db	8
    93  0008B1  27                 	db	39
    94  0008B2  00                 	db	0
    95  0008B3  00                 	db	0
    96  0008B4  00                 	db	0
    97  0008B5  09                 	db	9
    98  0008B6  09                 	db	9
    99  0008B7  26                 	db	38
   100  0008B8  00                 	db	0
   101  0008B9  00                 	db	0
   102  0008BA  01                 	db	1
   103  0008BB  00                 	db	0
   104  0008BC  0A                 	db	10
   105  0008BD  25                 	db	37
   106  0008BE  00                 	db	0
   107  0008BF  00                 	db	0
   108  0008C0  01                 	db	1
   109  0008C1  01                 	db	1
   110  0008C2  0B                 	db	11
   111  0008C3  24                 	db	36
   112  0008C4  00                 	db	0
   113  0008C5  00                 	db	0
   114  0008C6  01                 	db	1
   115  0008C7  02                 	db	2
   116  0008C8  0C                 	db	12
   117  0008C9  23                 	db	35
   118  0008CA  00                 	db	0
   119  0008CB  00                 	db	0
   120  0008CC  01                 	db	1
   121  0008CD  03                 	db	3
   122  0008CE  0D                 	db	13
   123  0008CF  22                 	db	34
   124  0008D0  00                 	db	0
   125  0008D1  00                 	db	0
   126  0008D2  01                 	db	1
   127  0008D3  04                 	db	4
   128  0008D4  0E                 	db	14
   129  0008D5  21                 	db	33
   130  0008D6  00                 	db	0
   131  0008D7  00                 	db	0
   132  0008D8  01                 	db	1
   133  0008D9  05                 	db	5
   134  0008DA  0F                 	db	15
   135  0008DB  20                 	db	32
   136  0008DC  00                 	db	0
   137  0008DD  00                 	db	0
   138  0008DE  01                 	db	1
   139  0008DF  06                 	db	6
   140  0008E0  10                 	db	16
   141  0008E1  2F                 	db	47
   142  0008E2  00                 	db	0
   143  0008E3  00                 	db	0
   144  0008E4  01                 	db	1
   145  0008E5  07                 	db	7
   146  0008E6  11                 	db	17
   147  0008E7  2E                 	db	46
   148  0008E8  00                 	db	0
   149  0008E9  00                 	db	0
   150  0008EA  01                 	db	1
   151  0008EB  08                 	db	8
   152  0008EC  12                 	db	18
   153  0008ED  2D                 	db	45
   154  0008EE  00                 	db	0
   155  0008EF  00                 	db	0
   156  0008F0  01                 	db	1
   157  0008F1  09                 	db	9
   158  0008F2  13                 	db	19
   159  0008F3  2C                 	db	44
   160  0008F4  00                 	db	0
   161  0008F5  00                 	db	0
   162  0008F6  02                 	db	2
   163  0008F7  00                 	db	0
   164  0008F8  14                 	db	20
   165  0008F9  2B                 	db	43
   166  0008FA  00                 	db	0
   167  0008FB  00                 	db	0
   168  0008FC  02                 	db	2
   169  0008FD  01                 	db	1
   170  0008FE  15                 	db	21
   171  0008FF  2A                 	db	42
   172  000900  00                 	db	0
   173  000901  00                 	db	0
   174  000902  02                 	db	2
   175  000903  02                 	db	2
   176  000904  16                 	db	22
   177  000905  29                 	db	41
   178  000906  00                 	db	0
   179  000907  00                 	db	0
   180  000908  02                 	db	2
   181  000909  03                 	db	3
   182  00090A  17                 	db	23
   183  00090B  28                 	db	40
   184  00090C  00                 	db	0
   185  00090D  00                 	db	0
   186  00090E  02                 	db	2
   187  00090F  04                 	db	4
   188  000910  18                 	db	24
   189  000911  35                 	db	53
   190  000912  00                 	db	0
   191  000913  00                 	db	0
   192  000914  02                 	db	2
   193  000915  05                 	db	5
   194  000916  19                 	db	25
   195  000917  34                 	db	52
   196  000918  00                 	db	0
   197  000919  00                 	db	0
   198  00091A  02                 	db	2
   199  00091B  06                 	db	6
   200  00091C  1A                 	db	26
   201  00091D  33                 	db	51
   202  00091E  00                 	db	0
   203  00091F  00                 	db	0
   204  000920  02                 	db	2
   205  000921  07                 	db	7
   206  000922  1B                 	db	27
   207  000923  32                 	db	50
   208  000924  00                 	db	0
   209  000925  00                 	db	0
   210  000926  02                 	db	2
   211  000927  08                 	db	8
   212  000928  1C                 	db	28
   213  000929  31                 	db	49
   214  00092A  00                 	db	0
   215  00092B  00                 	db	0
   216  00092C  02                 	db	2
   217  00092D  09                 	db	9
   218  00092E  1D                 	db	29
   219  00092F  30                 	db	48
   220  000930  00                 	db	0
   221  000931  00                 	db	0
   222  0000                     _ANSELA	set	3896
   223  0000                     _ANSELB	set	3897
   224  0000                     _ANSELC	set	3898
   225  0000                     _CCPTMRS0bits	set	3913
   226  0000                     _BAUDCON1bits	set	4024
   227  0000                     _CCP1CONbits	set	4029
   228  0000                     _CCPR1H	set	4031
   229  0000                     _CCPR1L	set	4030
   230  0000                     _EEADR	set	4009
   231  0000                     _EECON1bits	set	4006
   232  0000                     _EECON2	set	4007
   233  0000                     _EEDATA	set	4008
   234  0000                     _INTCONbits	set	4082
   235  0000                     _OSCCON	set	4051
   236  0000                     _PIE1bits	set	3997
   237  0000                     _PIR1bits	set	3998
   238  0000                     _PIR2bits	set	4001
   239  0000                     _PORTA	set	3968
   240  0000                     _PORTAbits	set	3968
   241  0000                     _PORTB	set	3969
   242  0000                     _PORTBbits	set	3969
   243  0000                     _PORTC	set	3970
   244  0000                     _PORTCbits	set	3970
   245  0000                     _PORTE	set	3972
   246  0000                     _RCREG1	set	4014
   247  0000                     _RCSTA1bits	set	4011
   248  0000                     _SPBRG1	set	4015
   249  0000                     _SSP1BUF	set	4041
   250  0000                     _SSP1CON1	set	4038
   251  0000                     _SSP1STAT	set	4039
   252  0000                     _T1CONbits	set	4045
   253  0000                     _T3CONbits	set	4017
   254  0000                     _TMR1H	set	4047
   255  0000                     _TMR1L	set	4046
   256  0000                     _TRISA	set	3986
   257  0000                     _TRISB	set	3987
   258  0000                     _TRISC	set	3988
   259  0000                     _TRISCbits	set	3988
   260  0000                     _TRISE	set	3990
   261  0000                     _TXREG1	set	4013
   262  0000                     _TXSTA1bits	set	4012
   263  0000                     _SSP1IF	set	31987
   264                           
   265                           	psect	smallconst
   266  000200                     __psmallconst:
   267                           	opt stack 0
   268  000200  00                 	db	0
   269  000201                     STR_9:
   270  000201  41                 	db	65	;'A'
   271  000202  42                 	db	66	;'B'
   272  000203  43                 	db	67	;'C'
   273  000204  44                 	db	68	;'D'
   274  000205  45                 	db	69	;'E'
   275  000206  46                 	db	70	;'F'
   276  000207  47                 	db	71	;'G'
   277  000208  00                 	db	0
   278  000209                     STR_1:
   279  000209  41                 	db	65	;'A'
   280  00020A  42                 	db	66	;'B'
   281  00020B  43                 	db	67	;'C'
   282  00020C  44                 	db	68	;'D'
   283  00020D  45                 	db	69	;'E'
   284  00020E  46                 	db	70	;'F'
   285  00020F  00                 	db	0
   286  000210                     STR_10:
   287  000210  41                 	db	65	;'A'
   288  000211  42                 	db	66	;'B'
   289  000212  43                 	db	67	;'C'
   290  000213  44                 	db	68	;'D'
   291  000214  46                 	db	70	;'F'
   292  000215  47                 	db	71	;'G'
   293  000216  00                 	db	0
   294  000217                     STR_12:
   295  000217  41                 	db	65	;'A'
   296  000218  42                 	db	66	;'B'
   297  000219  43                 	db	67	;'C'
   298  00021A  45                 	db	69	;'E'
   299  00021B  46                 	db	70	;'F'
   300  00021C  47                 	db	71	;'G'
   301  00021D  00                 	db	0
   302  00021E                     STR_7:
   303  00021E  41                 	db	65	;'A'
   304  00021F  43                 	db	67	;'C'
   305  000220  44                 	db	68	;'D'
   306  000221  45                 	db	69	;'E'
   307  000222  46                 	db	70	;'F'
   308  000223  47                 	db	71	;'G'
   309  000224  00                 	db	0
   310  000225                     STR_4:
   311  000225  41                 	db	65	;'A'
   312  000226  42                 	db	66	;'B'
   313  000227  43                 	db	67	;'C'
   314  000228  44                 	db	68	;'D'
   315  000229  47                 	db	71	;'G'
   316  00022A  00                 	db	0
   317  00022B                     STR_3:
   318  00022B  41                 	db	65	;'A'
   319  00022C  42                 	db	66	;'B'
   320  00022D  44                 	db	68	;'D'
   321  00022E  45                 	db	69	;'E'
   322  00022F  47                 	db	71	;'G'
   323  000230  00                 	db	0
   324  000231                     STR_6:
   325  000231  41                 	db	65	;'A'
   326  000232  43                 	db	67	;'C'
   327  000233  44                 	db	68	;'D'
   328  000234  46                 	db	70	;'F'
   329  000235  47                 	db	71	;'G'
   330  000236  00                 	db	0
   331  000237                     STR_11:
   332  000237  41                 	db	65	;'A'
   333  000238  44                 	db	68	;'D'
   334  000239  45                 	db	69	;'E'
   335  00023A  46                 	db	70	;'F'
   336  00023B  47                 	db	71	;'G'
   337  00023C  00                 	db	0
   338  00023D                     STR_5:
   339  00023D  42                 	db	66	;'B'
   340  00023E  43                 	db	67	;'C'
   341  00023F  46                 	db	70	;'F'
   342  000240  47                 	db	71	;'G'
   343  000241  00                 	db	0
   344  000242                     STR_8:
   345  000242  41                 	db	65	;'A'
   346  000243  42                 	db	66	;'B'
   347  000244  43                 	db	67	;'C'
   348  000245  00                 	db	0
   349  0000                     
   350                           ; #config settings
   351  000246  00                 	db	0	; dummy byte at the end
   352  0000                     
   353                           	psect	cinit
   354  000B54                     __pcinit:
   355                           	opt stack 0
   356  000B54                     start_initialization:
   357                           	opt stack 0
   358  000B54                     __initialization:
   359                           	opt stack 0
   360                           
   361                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   362  000B54  6A34               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   363                           
   364                           ; Clear objects allocated to COMRAM (16 bytes)
   365  000B56  EE00  F024         	lfsr	0,__pbssCOMRAM
   366  000B5A  0E10               	movlw	16
   367  000B5C                     clear_0:
   368  000B5C  6AEE               	clrf	postinc0,c
   369  000B5E  06E8               	decf	wreg,f,c
   370  000B60  E1FD               	bnz	clear_0
   371                           
   372                           ; Initialize objects allocated to BANK1 (180 bytes)
   373                           ; load TBLPTR registers with __pidataBANK1
   374  000B62  0E7E               	movlw	low __pidataBANK1
   375  000B64  6EF6               	movwf	tblptrl,c
   376  000B66  0E08               	movlw	high __pidataBANK1
   377  000B68  6EF7               	movwf	tblptrh,c
   378  000B6A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   379  000B6C  6EF8               	movwf	tblptru,c
   380  000B6E  EE01  F000         	lfsr	0,__pdataBANK1
   381  000B72  EE10 F0B4          	lfsr	1,180
   382  000B76                     copy_data0:
   383  000B76  0009               	tblrd		*+
   384  000B78  CFF5 FFEE          	movff	tablat,postinc0
   385  000B7C  50E5               	movf	postdec1,w,c
   386  000B7E  50E1               	movf	fsr1l,w,c
   387  000B80  E1FA               	bnz	copy_data0
   388  000B82                     end_of_initialization:
   389                           	opt stack 0
   390  000B82                     __end_of__initialization:
   391                           	opt stack 0
   392  000B82  9035               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   393  000B84  9235               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   394  000B86  0E00               	movlw	low (__Lmediumconst shr (0+16))
   395  000B88  6EF8               	movwf	tblptru,c
   396  000B8A  0100               	movlb	0
   397  000B8C  EFDC  F005         	goto	_main	;jump to C main() function
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           postinc0	equ	0xFEE
   403                           wreg	equ	0xFE8
   404                           postdec1	equ	0xFE5
   405                           fsr1l	equ	0xFE1
   406                           
   407                           	psect	bitbssCOMRAM
   408  0001A0                     __pbitbssCOMRAM:
   409                           	opt stack 0
   410  0001A0                     _ignite_ready:
   411                           	opt stack 0
   412  0001A0                     	ds	1
   413  0001A1                     _testflag:
   414                           	opt stack 0
   415  0001A1                     	ds	1
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec1	equ	0xFE5
   423                           fsr1l	equ	0xFE1
   424                           
   425                           	psect	bssCOMRAM
   426  000024                     __pbssCOMRAM:
   427                           	opt stack 0
   428  000024                     _pixels:
   429                           	opt stack 0
   430  000024                     	ds	7
   431  00002B                     _current_time:
   432                           	opt stack 0
   433  00002B                     	ds	2
   434  00002D                     _display_counter:
   435                           	opt stack 0
   436  00002D                     	ds	1
   437  00002E                     _overrun:
   438                           	opt stack 0
   439  00002E                     	ds	1
   440  00002F                     _pin_selected:
   441                           	opt stack 0
   442  00002F                     	ds	1
   443  000030                     _slave_selected:
   444                           	opt stack 0
   445  000030                     	ds	1
   446  000031                     _signs:
   447                           	opt stack 0
   448  000031                     	ds	3
   449                           tblptru	equ	0xFF8
   450                           tblptrh	equ	0xFF7
   451                           tblptrl	equ	0xFF6
   452                           tablat	equ	0xFF5
   453                           postinc0	equ	0xFEE
   454                           wreg	equ	0xFE8
   455                           postdec1	equ	0xFE5
   456                           fsr1l	equ	0xFE1
   457                           
   458                           	psect	dataBANK1
   459  000100                     __pdataBANK1:
   460                           	opt stack 0
   461  000100                     _pin:
   462                           	opt stack 0
   463  000100                     	ds	180
   464                           tblptru	equ	0xFF8
   465                           tblptrh	equ	0xFF7
   466                           tblptrl	equ	0xFF6
   467                           tablat	equ	0xFF5
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           postdec1	equ	0xFE5
   471                           fsr1l	equ	0xFE1
   472                           
   473                           	psect	cstackCOMRAM
   474  000001                     __pcstackCOMRAM:
   475                           	opt stack 0
   476  000001                     ??_Isr:
   477  000001                     
   478                           ; 1 bytes @ 0x0
   479  000001                     	ds	14
   480  00000F                     Isr@received:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0xE
   484  00000F                     	ds	1
   485  000010                     ??_Delay_Routine:
   486  000010                     ?_Read_Data:
   487                           	opt stack 0
   488  000010                     ?___lwmod:
   489                           	opt stack 0
   490  000010                     Save_Data@store:
   491                           	opt stack 0
   492  000010                     ___lwmod@dividend:
   493                           	opt stack 0
   494  000010                     Set_Bits@bits:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0xF
   498  000010                     	ds	1
   499  000011                     Delay_Routine@delay_multiplyer:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x10
   503  000011                     	ds	1
   504  000012                     Delay_Routine@delay_counter:
   505                           	opt stack 0
   506  000012                     Save_Data@store_address:
   507                           	opt stack 0
   508  000012                     Read_Data@data_read:
   509                           	opt stack 0
   510  000012                     ___lwmod@divisor:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x11
   514  000012                     	ds	1
   515  000013                     ??_Set_Bits:
   516                           
   517                           ; 0 bytes @ 0x12
   518  000013                     	ds	1
   519  000014                     Read_Data@read_address:
   520                           	opt stack 0
   521  000014                     ___lwmod@counter:
   522                           	opt stack 0
   523                           
   524                           ; 1 bytes @ 0x13
   525  000014                     	ds	2
   526  000016                     Set_Bits@Bitoutput:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x15
   530  000016                     	ds	1
   531  000017                     Set_Bits@bitcount:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x16
   535  000017                     	ds	1
   536  000018                     Evaluate_Display@evaluate:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x17
   540  000018                     	ds	2
   541  00001A                     Evaluate_Display@size:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x19
   545  00001A                     	ds	1
   546  00001B                     Evaluate_Signs@evaluation_value:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x1A
   550  00001B                     	ds	2
   551  00001D                     Evaluate_Signs@valuecounter:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x1C
   555  00001D                     	ds	1
   556  00001E                     Set_Display@information:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x1D
   560  00001E                     	ds	1
   561  00001F                     Set_Display@value:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x1E
   565  00001F                     	ds	2
   566  000021                     Set_Display@type:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x20
   570  000021                     	ds	1
   571  000022                     ??_Check_Buttons:
   572                           
   573                           ; 0 bytes @ 0x21
   574  000022                     	ds	2
   575  000024                     tblptru	equ	0xFF8
   576                           tblptrh	equ	0xFF7
   577                           tblptrl	equ	0xFF6
   578                           tablat	equ	0xFF5
   579                           postinc0	equ	0xFEE
   580                           wreg	equ	0xFE8
   581                           postdec1	equ	0xFE5
   582                           fsr1l	equ	0xFE1
   583                           
   584                           ; 0 bytes @ 0x23
   585 ;;
   586 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   587 ;;
   588 ;; *************** function _main *****************
   589 ;; Defined at:
   590 ;;		line 86 in file "main.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;		None               void
   597 ;; Registers used:
   598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK0   BANK1
   604 ;;      Params:         0       0       0
   605 ;;      Locals:         0       0       0
   606 ;;      Temps:          0       0       0
   607 ;;      Totals:         0       0       0
   608 ;;Total ram usage:        0 bytes
   609 ;; Hardware stack levels required when called:    7
   610 ;; This function calls:
   611 ;;		_Check_Buttons
   612 ;;		_Check_Detonators
   613 ;;		_Init
   614 ;;		_Set_Display
   615 ;; This function is called by:
   616 ;;		Startup code after reset
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text0
   621  000BB8                     __ptext0:
   622                           	opt stack 0
   623  000BB8                     _main:
   624                           	opt stack 24
   625                           
   626                           ;main.c: 87: Init();
   627                           
   628                           ;incstack = 0
   629  000BB8  EC12  F006         	call	_Init	;wreg free
   630  000BBC                     l1830:
   631                           
   632                           ;main.c: 89: Check_Buttons();
   633  000BBC  EC24  F001         	call	_Check_Buttons	;wreg free
   634                           
   635                           ;main.c: 90: if(testflag == 1) {
   636  000BC0  A234               	btfss	_testflag/(0+8),_testflag& (0+7),c
   637  000BC2  D7FC               	goto	l1830
   638                           
   639                           ;main.c: 91: Set_Display('7', 'T',0);
   640  000BC4  0E54               	movlw	84
   641  000BC6  6E1E               	movwf	Set_Display@information,c
   642  000BC8  0E00               	movlw	0
   643  000BCA  6E20               	movwf	Set_Display@value+1,c
   644  000BCC  0E00               	movlw	0
   645  000BCE  6E1F               	movwf	Set_Display@value,c
   646  000BD0  0E37               	movlw	55
   647  000BD2  EC46  F005         	call	_Set_Display
   648                           
   649                           ;main.c: 92: Check_Detonators();
   650  000BD6  EC4D  F006         	call	_Check_Detonators	;wreg free
   651  000BDA  D7F0               	goto	l1830
   652  000BDC                     __end_of_main:
   653                           	opt stack 0
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           tblptrl	equ	0xFF6
   657                           tablat	equ	0xFF5
   658                           postinc0	equ	0xFEE
   659                           wreg	equ	0xFE8
   660                           postdec1	equ	0xFE5
   661                           fsr1l	equ	0xFE1
   662                           
   663 ;; *************** function _Init *****************
   664 ;; Defined at:
   665 ;;		line 3 in file "init.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;		None               void
   672 ;; Registers used:
   673 ;;		wreg, status,2, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1
   679 ;;      Params:         0       0       0
   680 ;;      Locals:         0       0       0
   681 ;;      Temps:          0       0       0
   682 ;;      Totals:         0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    3
   686 ;; This function calls:
   687 ;;		_InitAnsel
   688 ;;		_InitInterrupt
   689 ;;		_InitMiscellaneous
   690 ;;		_InitPort
   691 ;;		_InitTimer
   692 ;;		_InitTransmission
   693 ;;		_InitTris
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699                           	psect	text1
   700  000C24                     __ptext1:
   701                           	opt stack 0
   702  000C24                     _Init:
   703                           	opt stack 27
   704                           
   705                           ;init.c: 4: InitPort();
   706                           
   707                           ;incstack = 0
   708  000C24  EC34  F006         	call	_InitPort	;wreg free
   709                           
   710                           ;init.c: 5: InitTris();
   711  000C28  EC2B  F006         	call	_InitTris	;wreg free
   712                           
   713                           ;init.c: 6: InitAnsel();
   714  000C2C  EC21  F006         	call	_InitAnsel	;wreg free
   715                           
   716                           ;init.c: 7: InitMiscellaneous();
   717  000C30  EC4A  F006         	call	_InitMiscellaneous	;wreg free
   718                           
   719                           ;init.c: 8: InitTransmission();
   720  000C34  ECEE  F005         	call	_InitTransmission	;wreg free
   721                           
   722                           ;init.c: 9: InitTimer();
   723  000C38  ECC8  F005         	call	_InitTimer	;wreg free
   724                           
   725                           ;init.c: 10: InitInterrupt();
   726  000C3C  EC45  F006         	call	_InitInterrupt	;wreg free
   727  000C40  0012               	return		;funcret
   728  000C42                     __end_of_Init:
   729                           	opt stack 0
   730                           tblptru	equ	0xFF8
   731                           tblptrh	equ	0xFF7
   732                           tblptrl	equ	0xFF6
   733                           tablat	equ	0xFF5
   734                           postinc0	equ	0xFEE
   735                           wreg	equ	0xFE8
   736                           postdec1	equ	0xFE5
   737                           fsr1l	equ	0xFE1
   738                           
   739 ;; *************** function _InitTris *****************
   740 ;; Defined at:
   741 ;;		line 20 in file "init.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;		None               void
   748 ;; Registers used:
   749 ;;		wreg, status,2
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1
   755 ;;      Params:         0       0       0
   756 ;;      Locals:         0       0       0
   757 ;;      Temps:          0       0       0
   758 ;;      Totals:         0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used:    1
   761 ;; Hardware stack levels required when called:    2
   762 ;; This function calls:
   763 ;;		Nothing
   764 ;; This function is called by:
   765 ;;		_Init
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text2
   770  000C56                     __ptext2:
   771                           	opt stack 0
   772  000C56                     _InitTris:
   773                           	opt stack 27
   774                           
   775                           ;init.c: 21: TRISA = 0b00000000;
   776                           
   777                           ;incstack = 0
   778  000C56  0E00               	movlw	0
   779  000C58  6E92               	movwf	3986,c	;volatile
   780                           
   781                           ;init.c: 22: TRISB = 0b00011111;
   782  000C5A  0E1F               	movlw	31
   783  000C5C  6E93               	movwf	3987,c	;volatile
   784                           
   785                           ;init.c: 23: TRISC = 0b10000010;
   786  000C5E  0E82               	movlw	130
   787  000C60  6E94               	movwf	3988,c	;volatile
   788                           
   789                           ;init.c: 24: TRISE = 0;
   790  000C62  0E00               	movlw	0
   791  000C64  6E96               	movwf	3990,c	;volatile
   792  000C66  0012               	return		;funcret
   793  000C68                     __end_of_InitTris:
   794                           	opt stack 0
   795                           tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           postdec1	equ	0xFE5
   802                           fsr1l	equ	0xFE1
   803                           
   804 ;; *************** function _InitTransmission *****************
   805 ;; Defined at:
   806 ;;		line 37 in file "init.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;		None
   809 ;; Auto vars:     Size  Location     Type
   810 ;;		None
   811 ;; Return value:  Size  Location     Type
   812 ;;		None               void
   813 ;; Registers used:
   814 ;;		wreg, status,2
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1
   820 ;;      Params:         0       0       0
   821 ;;      Locals:         0       0       0
   822 ;;      Temps:          0       0       0
   823 ;;      Totals:         0       0       0
   824 ;;Total ram usage:        0 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    2
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_Init
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text3
   835  000BDC                     __ptext3:
   836                           	opt stack 0
   837  000BDC                     _InitTransmission:
   838                           	opt stack 27
   839                           
   840                           ;init.c: 39: SSP1STAT = 0b01000000;
   841                           
   842                           ;incstack = 0
   843  000BDC  0E40               	movlw	64
   844  000BDE  6EC7               	movwf	4039,c	;volatile
   845                           
   846                           ;init.c: 40: SSP1CON1 = 0b00100010;
   847  000BE0  0E22               	movlw	34
   848  000BE2  6EC6               	movwf	4038,c	;volatile
   849                           
   850                           ;init.c: 42: TXSTA1bits.SYNC = 0;
   851  000BE4  98AC               	bcf	4012,4,c	;volatile
   852                           
   853                           ;init.c: 43: TXSTA1bits.BRGH = 1;
   854  000BE6  84AC               	bsf	4012,2,c	;volatile
   855                           
   856                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
   857  000BE8  96B8               	bcf	4024,3,c	;volatile
   858                           
   859                           ;init.c: 45: SPBRG1 = 25;
   860  000BEA  0E19               	movlw	25
   861  000BEC  6EAF               	movwf	4015,c	;volatile
   862                           
   863                           ;init.c: 46: TRISCbits.RC6 = 1;
   864  000BEE  8C94               	bsf	3988,6,c	;volatile
   865                           
   866                           ;init.c: 47: TRISCbits.RC7 = 1;
   867  000BF0  8E94               	bsf	3988,7,c	;volatile
   868                           
   869                           ;init.c: 48: RCSTA1bits.SPEN = 1;
   870  000BF2  8EAB               	bsf	4011,7,c	;volatile
   871                           
   872                           ;init.c: 49: TXSTA1bits.TX9 = 1;
   873  000BF4  8CAC               	bsf	4012,6,c	;volatile
   874                           
   875                           ;init.c: 50: TXSTA1bits.TXEN = 1;
   876  000BF6  8AAC               	bsf	4012,5,c	;volatile
   877                           
   878                           ;init.c: 51: RCSTA1bits.RC9 = 1;
   879  000BF8  8CAB               	bsf	4011,6,c	;volatile
   880                           
   881                           ;init.c: 52: RCSTA1bits.CREN = 1;
   882  000BFA  88AB               	bsf	4011,4,c	;volatile
   883                           
   884                           ;init.c: 53: TRISCbits.RC6 = 0;
   885  000BFC  9C94               	bcf	3988,6,c	;volatile
   886  000BFE  0012               	return		;funcret
   887  000C00                     __end_of_InitTransmission:
   888                           	opt stack 0
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           postinc0	equ	0xFEE
   894                           wreg	equ	0xFE8
   895                           postdec1	equ	0xFE5
   896                           fsr1l	equ	0xFE1
   897                           
   898 ;; *************** function _InitTimer *****************
   899 ;; Defined at:
   900 ;;		line 56 in file "init.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;		None               void
   907 ;; Registers used:
   908 ;;		wreg, status,2
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1
   914 ;;      Params:         0       0       0
   915 ;;      Locals:         0       0       0
   916 ;;      Temps:          0       0       0
   917 ;;      Totals:         0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    2
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_Init
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text4
   929  000B90                     __ptext4:
   930                           	opt stack 0
   931  000B90                     _InitTimer:
   932                           	opt stack 27
   933                           
   934                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
   935                           
   936                           ;incstack = 0
   937  000B90  0E3F               	movlw	-193
   938  000B92  16CD               	andwf	4045,f,c	;volatile
   939                           
   940                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
   941  000B94  0E30               	movlw	48
   942  000B96  12CD               	iorwf	4045,f,c	;volatile
   943                           
   944                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
   945  000B98  94CD               	bcf	4045,2,c	;volatile
   946                           
   947                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
   948  000B9A  0E3F               	movlw	-193
   949  000B9C  16B1               	andwf	4017,f,c	;volatile
   950                           
   951                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
   952  000B9E  0E30               	movlw	48
   953  000BA0  12B1               	iorwf	4017,f,c	;volatile
   954                           
   955                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
   956  000BA2  94B1               	bcf	4017,2,c	;volatile
   957                           
   958                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
   959  000BA4  50BD               	movf	4029,w,c	;volatile
   960  000BA6  0BF0               	andlw	-16
   961  000BA8  090A               	iorlw	10
   962  000BAA  6EBD               	movwf	4029,c	;volatile
   963                           
   964                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
   965  000BAC  010F               	movlb	15	; () banked
   966  000BAE  5149               	movf	73,w,b	;volatile
   967  000BB0  0BFC               	andlw	-4
   968  000BB2  0901               	iorlw	1
   969  000BB4  6F49               	movwf	73,b	;volatile
   970                           
   971                           ; BSR set to: 15
   972  000BB6  0012               	return		;funcret
   973  000BB8                     __end_of_InitTimer:
   974                           	opt stack 0
   975                           tblptru	equ	0xFF8
   976                           tblptrh	equ	0xFF7
   977                           tblptrl	equ	0xFF6
   978                           tablat	equ	0xFF5
   979                           postinc0	equ	0xFEE
   980                           wreg	equ	0xFE8
   981                           postdec1	equ	0xFE5
   982                           fsr1l	equ	0xFE1
   983                           
   984 ;; *************** function _InitPort *****************
   985 ;; Defined at:
   986 ;;		line 13 in file "init.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;		None
   989 ;; Auto vars:     Size  Location     Type
   990 ;;		None
   991 ;; Return value:  Size  Location     Type
   992 ;;		None               void
   993 ;; Registers used:
   994 ;;		wreg, status,2
   995 ;; Tracked objects:
   996 ;;		On entry : 0/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMRAM   BANK0   BANK1
  1000 ;;      Params:         0       0       0
  1001 ;;      Locals:         0       0       0
  1002 ;;      Temps:          0       0       0
  1003 ;;      Totals:         0       0       0
  1004 ;;Total ram usage:        0 bytes
  1005 ;; Hardware stack levels used:    1
  1006 ;; Hardware stack levels required when called:    2
  1007 ;; This function calls:
  1008 ;;		Nothing
  1009 ;; This function is called by:
  1010 ;;		_Init
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text5
  1015  000C68                     __ptext5:
  1016                           	opt stack 0
  1017  000C68                     _InitPort:
  1018                           	opt stack 27
  1019                           
  1020                           ;init.c: 14: PORTA = 0b00000000;
  1021                           
  1022                           ; BSR set to: 15
  1023                           ;incstack = 0
  1024  000C68  0E00               	movlw	0
  1025  000C6A  6E80               	movwf	3968,c	;volatile
  1026                           
  1027                           ;init.c: 15: PORTB = 0b00000000;
  1028  000C6C  0E00               	movlw	0
  1029  000C6E  6E81               	movwf	3969,c	;volatile
  1030                           
  1031                           ;init.c: 16: PORTC = 0b00000001;
  1032  000C70  0E01               	movlw	1
  1033  000C72  6E82               	movwf	3970,c	;volatile
  1034                           
  1035                           ;init.c: 17: PORTE = 0;
  1036  000C74  0E00               	movlw	0
  1037  000C76  6E84               	movwf	3972,c	;volatile
  1038  000C78  0012               	return		;funcret
  1039  000C7A                     __end_of_InitPort:
  1040                           	opt stack 0
  1041                           tblptru	equ	0xFF8
  1042                           tblptrh	equ	0xFF7
  1043                           tblptrl	equ	0xFF6
  1044                           tablat	equ	0xFF5
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           postdec1	equ	0xFE5
  1048                           fsr1l	equ	0xFE1
  1049                           
  1050 ;; *************** function _InitMiscellaneous *****************
  1051 ;; Defined at:
  1052 ;;		line 33 in file "init.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;		None
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;		None
  1057 ;; Return value:  Size  Location     Type
  1058 ;;		None               void
  1059 ;; Registers used:
  1060 ;;		wreg, status,2
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1
  1066 ;;      Params:         0       0       0
  1067 ;;      Locals:         0       0       0
  1068 ;;      Temps:          0       0       0
  1069 ;;      Totals:         0       0       0
  1070 ;;Total ram usage:        0 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    2
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_Init
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text6
  1081  000C94                     __ptext6:
  1082                           	opt stack 0
  1083  000C94                     _InitMiscellaneous:
  1084                           	opt stack 27
  1085                           
  1086                           ;init.c: 34: OSCCON = 0b01010011;
  1087                           
  1088                           ;incstack = 0
  1089  000C94  0E53               	movlw	83
  1090  000C96  6ED3               	movwf	4051,c	;volatile
  1091  000C98  0012               	return		;funcret
  1092  000C9A                     __end_of_InitMiscellaneous:
  1093                           	opt stack 0
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           postinc0	equ	0xFEE
  1099                           wreg	equ	0xFE8
  1100                           postdec1	equ	0xFE5
  1101                           fsr1l	equ	0xFE1
  1102                           
  1103 ;; *************** function _InitInterrupt *****************
  1104 ;; Defined at:
  1105 ;;		line 70 in file "init.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;		None               void
  1112 ;; Registers used:
  1113 ;;		None
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMRAM   BANK0   BANK1
  1119 ;;      Params:         0       0       0
  1120 ;;      Locals:         0       0       0
  1121 ;;      Temps:          0       0       0
  1122 ;;      Totals:         0       0       0
  1123 ;;Total ram usage:        0 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    2
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_Init
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text7
  1134  000C8A                     __ptext7:
  1135                           	opt stack 0
  1136  000C8A                     _InitInterrupt:
  1137                           	opt stack 27
  1138                           
  1139                           ;init.c: 71: INTCONbits.GIE = 1;
  1140                           
  1141                           ;incstack = 0
  1142  000C8A  8EF2               	bsf	intcon,7,c	;volatile
  1143                           
  1144                           ;init.c: 72: INTCONbits.PEIE = 1;
  1145  000C8C  8CF2               	bsf	intcon,6,c	;volatile
  1146                           
  1147                           ;init.c: 73: PIE1bits.RCIE = 1;
  1148  000C8E  8A9D               	bsf	3997,5,c	;volatile
  1149                           
  1150                           ;init.c: 74: PIE1bits.CCP1IE = 1;
  1151  000C90  849D               	bsf	3997,2,c	;volatile
  1152  000C92  0012               	return		;funcret
  1153  000C94                     __end_of_InitInterrupt:
  1154                           	opt stack 0
  1155                           tblptru	equ	0xFF8
  1156                           tblptrh	equ	0xFF7
  1157                           tblptrl	equ	0xFF6
  1158                           tablat	equ	0xFF5
  1159                           intcon	equ	0xFF2
  1160                           postinc0	equ	0xFEE
  1161                           wreg	equ	0xFE8
  1162                           postdec1	equ	0xFE5
  1163                           fsr1l	equ	0xFE1
  1164                           
  1165 ;; *************** function _InitAnsel *****************
  1166 ;; Defined at:
  1167 ;;		line 27 in file "init.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;		None               void
  1174 ;; Registers used:
  1175 ;;		wreg, status,2
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1
  1181 ;;      Params:         0       0       0
  1182 ;;      Locals:         0       0       0
  1183 ;;      Temps:          0       0       0
  1184 ;;      Totals:         0       0       0
  1185 ;;Total ram usage:        0 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    2
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_Init
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text8
  1196  000C42                     __ptext8:
  1197                           	opt stack 0
  1198  000C42                     _InitAnsel:
  1199                           	opt stack 27
  1200                           
  1201                           ;init.c: 28: ANSELA = 0;
  1202                           
  1203                           ;incstack = 0
  1204  000C42  0E00               	movlw	0
  1205  000C44  010F               	movlb	15	; () banked
  1206  000C46  6F38               	movwf	56,b	;volatile
  1207                           
  1208                           ;init.c: 29: ANSELB = 0;
  1209  000C48  0E00               	movlw	0
  1210  000C4A  010F               	movlb	15	; () banked
  1211  000C4C  6F39               	movwf	57,b	;volatile
  1212                           
  1213                           ;init.c: 30: ANSELC = 0;
  1214  000C4E  0E00               	movlw	0
  1215  000C50  010F               	movlb	15	; () banked
  1216  000C52  6F3A               	movwf	58,b	;volatile
  1217                           
  1218                           ; BSR set to: 15
  1219  000C54  0012               	return		;funcret
  1220  000C56                     __end_of_InitAnsel:
  1221                           	opt stack 0
  1222                           tblptru	equ	0xFF8
  1223                           tblptrh	equ	0xFF7
  1224                           tblptrl	equ	0xFF6
  1225                           tablat	equ	0xFF5
  1226                           intcon	equ	0xFF2
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           postdec1	equ	0xFE5
  1230                           fsr1l	equ	0xFE1
  1231                           
  1232 ;; *************** function _Check_Detonators *****************
  1233 ;; Defined at:
  1234 ;;		line 25 in file "ignition.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;		None               void
  1241 ;; Registers used:
  1242 ;;		None
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1
  1248 ;;      Params:         0       0       0
  1249 ;;      Locals:         0       0       0
  1250 ;;      Temps:          0       0       0
  1251 ;;      Totals:         0       0       0
  1252 ;;Total ram usage:        0 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    2
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_main
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text9
  1263  000C9A                     __ptext9:
  1264                           	opt stack 0
  1265  000C9A                     _Check_Detonators:
  1266                           	opt stack 28
  1267                           
  1268                           ; BSR set to: 15
  1269                           ;incstack = 0
  1270  000C9A  0012               	return		;funcret
  1271  000C9C                     __end_of_Check_Detonators:
  1272                           	opt stack 0
  1273                           tblptru	equ	0xFF8
  1274                           tblptrh	equ	0xFF7
  1275                           tblptrl	equ	0xFF6
  1276                           tablat	equ	0xFF5
  1277                           intcon	equ	0xFF2
  1278                           postinc0	equ	0xFEE
  1279                           wreg	equ	0xFE8
  1280                           postdec1	equ	0xFE5
  1281                           fsr1l	equ	0xFE1
  1282                           
  1283 ;; *************** function _Check_Buttons *****************
  1284 ;; Defined at:
  1285 ;;		line 3 in file "buttonchanges.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK0   BANK1
  1299 ;;      Params:         0       0       0
  1300 ;;      Locals:         0       0       0
  1301 ;;      Temps:          2       0       0
  1302 ;;      Totals:         2       0       0
  1303 ;;Total ram usage:        2 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    6
  1306 ;; This function calls:
  1307 ;;		_Delay_Routine
  1308 ;;		_Read_Data
  1309 ;;		_Save_Data
  1310 ;;		_Set_Display
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text10
  1317  000248                     __ptext10:
  1318                           	opt stack 0
  1319  000248                     _Check_Buttons:
  1320                           	opt stack 24
  1321                           
  1322                           ;buttonchanges.c: 4: if(PORTCbits.RC1 == 1) {
  1323                           
  1324                           ;incstack = 0
  1325  000248  A282               	btfss	3970,1,c	;volatile
  1326  00024A  D008               	goto	l82
  1327                           
  1328                           ;buttonchanges.c: 5: Delay_Routine(3);
  1329  00024C  0E03               	movlw	3
  1330  00024E  EC00  F006         	call	_Delay_Routine
  1331                           
  1332                           ;buttonchanges.c: 6: if(PORTCbits.RC1 == 1) {
  1333  000252  A282               	btfss	3970,1,c	;volatile
  1334  000254  0012               	return	
  1335                           
  1336                           ;buttonchanges.c: 7: ignite_ready = 1;
  1337  000256  8034               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1338                           
  1339                           ;buttonchanges.c: 8: __nop();
  1340  000258  F000               	nop	
  1341                           
  1342                           ;buttonchanges.c: 12: }
  1343                           ;buttonchanges.c: 13: } else if(PORTBbits.RB2 == 1) {
  1344                           
  1345                           ;buttonchanges.c: 9: return;
  1346  00025A  0012               	return	
  1347  00025C                     l82:
  1348  00025C  A481               	btfss	3969,2,c	;volatile
  1349  00025E  D051               	goto	l86
  1350                           
  1351                           ;buttonchanges.c: 14: Delay_Routine(3);
  1352  000260  0E03               	movlw	3
  1353  000262  EC00  F006         	call	_Delay_Routine
  1354                           
  1355                           ;buttonchanges.c: 15: if(PORTBbits.RB2 == 1) {
  1356  000266  A481               	btfss	3969,2,c	;volatile
  1357  000268  0012               	return	
  1358                           
  1359                           ;buttonchanges.c: 16: pin[pin_selected].time++;
  1360  00026A  502F               	movf	_pin_selected,w,c
  1361  00026C  0D06               	mullw	6
  1362  00026E  0E04               	movlw	4
  1363  000270  26F3               	addwf	prodl,f,c
  1364  000272  0E00               	movlw	0
  1365  000274  22F4               	addwfc	prodh,f,c
  1366  000276  0E00               	movlw	low _pin
  1367  000278  24F3               	addwf	prodl,w,c
  1368  00027A  6ED9               	movwf	fsr2l,c
  1369  00027C  0E01               	movlw	high _pin
  1370  00027E  20F4               	addwfc	prodh,w,c
  1371  000280  6EDA               	movwf	fsr2h,c
  1372  000282  2ADE               	incf	postinc2,f,c
  1373  000284  0E00               	movlw	0
  1374  000286  22DD               	addwfc	postdec2,f,c
  1375                           
  1376                           ;buttonchanges.c: 17: if(pin[pin_selected].time > 999) {
  1377  000288  502F               	movf	_pin_selected,w,c
  1378  00028A  0D06               	mullw	6
  1379  00028C  0E04               	movlw	4
  1380  00028E  26F3               	addwf	prodl,f,c
  1381  000290  0E00               	movlw	0
  1382  000292  22F4               	addwfc	prodh,f,c
  1383  000294  0E00               	movlw	low _pin
  1384  000296  24F3               	addwf	prodl,w,c
  1385  000298  6ED9               	movwf	fsr2l,c
  1386  00029A  0E01               	movlw	high _pin
  1387  00029C  20F4               	addwfc	prodh,w,c
  1388  00029E  6EDA               	movwf	fsr2h,c
  1389  0002A0  0E01               	movlw	1
  1390  0002A2  BEDB               	btfsc	plusw2,7,c
  1391  0002A4  D016               	goto	l1708
  1392  0002A6  0EE8               	movlw	232
  1393  0002A8  5CDE               	subwf	postinc2,w,c
  1394  0002AA  0E03               	movlw	3
  1395  0002AC  58DE               	subwfb	postinc2,w,c
  1396  0002AE  A0D8               	btfss	status,0,c
  1397  0002B0  D010               	goto	l1708
  1398                           
  1399                           ;buttonchanges.c: 18: pin[pin_selected].time = 0;
  1400  0002B2  502F               	movf	_pin_selected,w,c
  1401  0002B4  0D06               	mullw	6
  1402  0002B6  0E04               	movlw	4
  1403  0002B8  26F3               	addwf	prodl,f,c
  1404  0002BA  0E00               	movlw	0
  1405  0002BC  22F4               	addwfc	prodh,f,c
  1406  0002BE  0E00               	movlw	low _pin
  1407  0002C0  24F3               	addwf	prodl,w,c
  1408  0002C2  6ED9               	movwf	fsr2l,c
  1409  0002C4  0E01               	movlw	high _pin
  1410  0002C6  20F4               	addwfc	prodh,w,c
  1411  0002C8  6EDA               	movwf	fsr2h,c
  1412  0002CA  0E00               	movlw	0
  1413  0002CC  6EDE               	movwf	postinc2,c
  1414  0002CE  0E00               	movlw	0
  1415  0002D0  6EDD               	movwf	postdec2,c
  1416  0002D2                     l1708:
  1417                           
  1418                           ;buttonchanges.c: 19: }
  1419                           ;buttonchanges.c: 20: __nop();
  1420  0002D2  F000               	nop	
  1421                           
  1422                           ;buttonchanges.c: 21: Set_Display('7', '-', pin[pin_selected].time);
  1423  0002D4  0E2D               	movlw	45
  1424  0002D6  6E1E               	movwf	Set_Display@information,c
  1425  0002D8  502F               	movf	_pin_selected,w,c
  1426  0002DA  0D06               	mullw	6
  1427  0002DC  0E04               	movlw	4
  1428  0002DE  26F3               	addwf	prodl,f,c
  1429  0002E0  0E00               	movlw	0
  1430  0002E2  22F4               	addwfc	prodh,f,c
  1431  0002E4  0E00               	movlw	low _pin
  1432  0002E6  24F3               	addwf	prodl,w,c
  1433  0002E8  6ED9               	movwf	fsr2l,c
  1434  0002EA  0E01               	movlw	high _pin
  1435  0002EC  20F4               	addwfc	prodh,w,c
  1436  0002EE  6EDA               	movwf	fsr2h,c
  1437  0002F0  CFDE F01F          	movff	postinc2,Set_Display@value
  1438  0002F4  CFDD F020          	movff	postdec2,Set_Display@value+1
  1439  0002F8  0E37               	movlw	55
  1440  0002FA  EC46  F005         	call	_Set_Display
  1441                           
  1442                           ;buttonchanges.c: 22: __nop();
  1443  0002FE  F000               	nop	
  1444                           
  1445                           ;buttonchanges.c: 23: }
  1446                           ;buttonchanges.c: 24: } else if(PORTBbits.RB3 == 1) {
  1447  000300  0012               	return	
  1448  000302                     l86:
  1449  000302  A681               	btfss	3969,3,c	;volatile
  1450  000304  D04B               	goto	l90
  1451                           
  1452                           ;buttonchanges.c: 25: Delay_Routine(3);
  1453  000306  0E03               	movlw	3
  1454  000308  EC00  F006         	call	_Delay_Routine
  1455                           
  1456                           ;buttonchanges.c: 26: if(PORTBbits.RB3 == 1) {
  1457  00030C  A681               	btfss	3969,3,c	;volatile
  1458  00030E  0012               	return	
  1459                           
  1460                           ;buttonchanges.c: 27: pin[pin_selected].time--;
  1461  000310  502F               	movf	_pin_selected,w,c
  1462  000312  0D06               	mullw	6
  1463  000314  0E04               	movlw	4
  1464  000316  26F3               	addwf	prodl,f,c
  1465  000318  0E00               	movlw	0
  1466  00031A  22F4               	addwfc	prodh,f,c
  1467  00031C  0E00               	movlw	low _pin
  1468  00031E  24F3               	addwf	prodl,w,c
  1469  000320  6ED9               	movwf	fsr2l,c
  1470  000322  0E01               	movlw	high _pin
  1471  000324  20F4               	addwfc	prodh,w,c
  1472  000326  6EDA               	movwf	fsr2h,c
  1473  000328  06DE               	decf	postinc2,f,c
  1474  00032A  0E00               	movlw	0
  1475  00032C  5ADD               	subwfb	postdec2,f,c
  1476                           
  1477                           ;buttonchanges.c: 28: if(pin[pin_selected].time < 0) {
  1478  00032E  502F               	movf	_pin_selected,w,c
  1479  000330  0D06               	mullw	6
  1480  000332  0E04               	movlw	4
  1481  000334  26F3               	addwf	prodl,f,c
  1482  000336  0E00               	movlw	0
  1483  000338  22F4               	addwfc	prodh,f,c
  1484  00033A  0E00               	movlw	low _pin
  1485  00033C  24F3               	addwf	prodl,w,c
  1486  00033E  6ED9               	movwf	fsr2l,c
  1487  000340  0E01               	movlw	high _pin
  1488  000342  20F4               	addwfc	prodh,w,c
  1489  000344  6EDA               	movwf	fsr2h,c
  1490  000346  0E01               	movlw	1
  1491  000348  AEDB               	btfss	plusw2,7,c
  1492  00034A  D010               	goto	l1722
  1493                           
  1494                           ;buttonchanges.c: 29: pin[pin_selected].time = 999;
  1495  00034C  502F               	movf	_pin_selected,w,c
  1496  00034E  0D06               	mullw	6
  1497  000350  0E04               	movlw	4
  1498  000352  26F3               	addwf	prodl,f,c
  1499  000354  0E00               	movlw	0
  1500  000356  22F4               	addwfc	prodh,f,c
  1501  000358  0E00               	movlw	low _pin
  1502  00035A  24F3               	addwf	prodl,w,c
  1503  00035C  6ED9               	movwf	fsr2l,c
  1504  00035E  0E01               	movlw	high _pin
  1505  000360  20F4               	addwfc	prodh,w,c
  1506  000362  6EDA               	movwf	fsr2h,c
  1507  000364  0EE7               	movlw	231
  1508  000366  6EDE               	movwf	postinc2,c
  1509  000368  0E03               	movlw	3
  1510  00036A  6EDD               	movwf	postdec2,c
  1511  00036C                     l1722:
  1512                           
  1513                           ;buttonchanges.c: 30: }
  1514                           ;buttonchanges.c: 31: __nop();
  1515  00036C  F000               	nop	
  1516                           
  1517                           ;buttonchanges.c: 32: Set_Display('7', '-', pin[pin_selected].time);
  1518  00036E  0E2D               	movlw	45
  1519  000370  6E1E               	movwf	Set_Display@information,c
  1520  000372  502F               	movf	_pin_selected,w,c
  1521  000374  0D06               	mullw	6
  1522  000376  0E04               	movlw	4
  1523  000378  26F3               	addwf	prodl,f,c
  1524  00037A  0E00               	movlw	0
  1525  00037C  22F4               	addwfc	prodh,f,c
  1526  00037E  0E00               	movlw	low _pin
  1527  000380  24F3               	addwf	prodl,w,c
  1528  000382  6ED9               	movwf	fsr2l,c
  1529  000384  0E01               	movlw	high _pin
  1530  000386  20F4               	addwfc	prodh,w,c
  1531  000388  6EDA               	movwf	fsr2h,c
  1532  00038A  CFDE F01F          	movff	postinc2,Set_Display@value
  1533  00038E  CFDD F020          	movff	postdec2,Set_Display@value+1
  1534  000392  0E37               	movlw	55
  1535  000394  EC46  F005         	call	_Set_Display
  1536                           
  1537                           ;buttonchanges.c: 33: __nop();
  1538  000398  F000               	nop	
  1539                           
  1540                           ;buttonchanges.c: 34: }
  1541                           ;buttonchanges.c: 35: } else if(PORTBbits.RB4 == 1) {
  1542  00039A  0012               	return	
  1543  00039C                     l90:
  1544  00039C  A881               	btfss	3969,4,c	;volatile
  1545  00039E  D052               	goto	l94
  1546                           
  1547                           ;buttonchanges.c: 36: Delay_Routine(3);
  1548  0003A0  0E03               	movlw	3
  1549  0003A2  EC00  F006         	call	_Delay_Routine
  1550                           
  1551                           ;buttonchanges.c: 37: if(PORTBbits.RB4 == 1) {
  1552  0003A6  A881               	btfss	3969,4,c	;volatile
  1553  0003A8  0012               	return	
  1554                           
  1555                           ;buttonchanges.c: 38: pin[pin_selected].time += 10;
  1556  0003AA  502F               	movf	_pin_selected,w,c
  1557  0003AC  0D06               	mullw	6
  1558  0003AE  0E04               	movlw	4
  1559  0003B0  26F3               	addwf	prodl,f,c
  1560  0003B2  0E00               	movlw	0
  1561  0003B4  22F4               	addwfc	prodh,f,c
  1562  0003B6  0E00               	movlw	low _pin
  1563  0003B8  24F3               	addwf	prodl,w,c
  1564  0003BA  6ED9               	movwf	fsr2l,c
  1565  0003BC  0E01               	movlw	high _pin
  1566  0003BE  20F4               	addwfc	prodh,w,c
  1567  0003C0  6EDA               	movwf	fsr2h,c
  1568  0003C2  0E0A               	movlw	10
  1569  0003C4  26DE               	addwf	postinc2,f,c
  1570  0003C6  0E00               	movlw	0
  1571  0003C8  22DD               	addwfc	postdec2,f,c
  1572                           
  1573                           ;buttonchanges.c: 39: if(pin[pin_selected].time > 999) {
  1574  0003CA  502F               	movf	_pin_selected,w,c
  1575  0003CC  0D06               	mullw	6
  1576  0003CE  0E04               	movlw	4
  1577  0003D0  26F3               	addwf	prodl,f,c
  1578  0003D2  0E00               	movlw	0
  1579  0003D4  22F4               	addwfc	prodh,f,c
  1580  0003D6  0E00               	movlw	low _pin
  1581  0003D8  24F3               	addwf	prodl,w,c
  1582  0003DA  6ED9               	movwf	fsr2l,c
  1583  0003DC  0E01               	movlw	high _pin
  1584  0003DE  20F4               	addwfc	prodh,w,c
  1585  0003E0  6EDA               	movwf	fsr2h,c
  1586  0003E2  0E01               	movlw	1
  1587  0003E4  BEDB               	btfsc	plusw2,7,c
  1588  0003E6  D016               	goto	l1736
  1589  0003E8  0EE8               	movlw	232
  1590  0003EA  5CDE               	subwf	postinc2,w,c
  1591  0003EC  0E03               	movlw	3
  1592  0003EE  58DE               	subwfb	postinc2,w,c
  1593  0003F0  A0D8               	btfss	status,0,c
  1594  0003F2  D010               	goto	l1736
  1595                           
  1596                           ;buttonchanges.c: 40: pin[pin_selected].time = 0;
  1597  0003F4  502F               	movf	_pin_selected,w,c
  1598  0003F6  0D06               	mullw	6
  1599  0003F8  0E04               	movlw	4
  1600  0003FA  26F3               	addwf	prodl,f,c
  1601  0003FC  0E00               	movlw	0
  1602  0003FE  22F4               	addwfc	prodh,f,c
  1603  000400  0E00               	movlw	low _pin
  1604  000402  24F3               	addwf	prodl,w,c
  1605  000404  6ED9               	movwf	fsr2l,c
  1606  000406  0E01               	movlw	high _pin
  1607  000408  20F4               	addwfc	prodh,w,c
  1608  00040A  6EDA               	movwf	fsr2h,c
  1609  00040C  0E00               	movlw	0
  1610  00040E  6EDE               	movwf	postinc2,c
  1611  000410  0E00               	movlw	0
  1612  000412  6EDD               	movwf	postdec2,c
  1613  000414                     l1736:
  1614                           
  1615                           ;buttonchanges.c: 41: }
  1616                           ;buttonchanges.c: 42: __nop();
  1617  000414  F000               	nop	
  1618                           
  1619                           ;buttonchanges.c: 43: Set_Display('7', '-', pin[pin_selected].time);
  1620  000416  0E2D               	movlw	45
  1621  000418  6E1E               	movwf	Set_Display@information,c
  1622  00041A  502F               	movf	_pin_selected,w,c
  1623  00041C  0D06               	mullw	6
  1624  00041E  0E04               	movlw	4
  1625  000420  26F3               	addwf	prodl,f,c
  1626  000422  0E00               	movlw	0
  1627  000424  22F4               	addwfc	prodh,f,c
  1628  000426  0E00               	movlw	low _pin
  1629  000428  24F3               	addwf	prodl,w,c
  1630  00042A  6ED9               	movwf	fsr2l,c
  1631  00042C  0E01               	movlw	high _pin
  1632  00042E  20F4               	addwfc	prodh,w,c
  1633  000430  6EDA               	movwf	fsr2h,c
  1634  000432  CFDE F01F          	movff	postinc2,Set_Display@value
  1635  000436  CFDD F020          	movff	postdec2,Set_Display@value+1
  1636  00043A  0E37               	movlw	55
  1637  00043C  EC46  F005         	call	_Set_Display
  1638                           
  1639                           ;buttonchanges.c: 44: __nop();
  1640  000440  F000               	nop	
  1641                           
  1642                           ;buttonchanges.c: 45: }
  1643                           ;buttonchanges.c: 46: } else if(PORTBbits.RB1 == 1) {
  1644  000442  0012               	return	
  1645  000444                     l94:
  1646  000444  A281               	btfss	3969,1,c	;volatile
  1647  000446  D09B               	goto	l98
  1648                           
  1649                           ;buttonchanges.c: 47: Delay_Routine(3);
  1650  000448  0E03               	movlw	3
  1651  00044A  EC00  F006         	call	_Delay_Routine
  1652                           
  1653                           ;buttonchanges.c: 48: if(PORTBbits.RB1 == 1) {
  1654  00044E  A281               	btfss	3969,1,c	;volatile
  1655  000450  0012               	return	
  1656                           
  1657                           ;buttonchanges.c: 49: if(PORTBbits.RB0 == 1) {
  1658  000452  A081               	btfss	3969,0,c	;volatile
  1659  000454  D005               	goto	l1754
  1660                           
  1661                           ;buttonchanges.c: 50: Delay_Routine(3);
  1662  000456  0E03               	movlw	3
  1663  000458  EC00  F006         	call	_Delay_Routine
  1664                           
  1665                           ;buttonchanges.c: 51: if(PORTBbits.RB0 == 1) {
  1666  00045C  B081               	btfsc	3969,0,c	;volatile
  1667                           
  1668                           ;buttonchanges.c: 52: testflag = 1;
  1669  00045E  8234               	bsf	_testflag/(0+8),_testflag& (0+7),c
  1670  000460                     l1754:
  1671                           
  1672                           ;buttonchanges.c: 53: }
  1673                           ;buttonchanges.c: 54: }
  1674                           ;buttonchanges.c: 55: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  1675  000460  502F               	movf	_pin_selected,w,c
  1676  000462  0D06               	mullw	6
  1677  000464  0E04               	movlw	4
  1678  000466  26F3               	addwf	prodl,f,c
  1679  000468  0E00               	movlw	0
  1680  00046A  22F4               	addwfc	prodh,f,c
  1681  00046C  0E00               	movlw	low _pin
  1682  00046E  24F3               	addwf	prodl,w,c
  1683  000470  6ED9               	movwf	fsr2l,c
  1684  000472  0E01               	movlw	high _pin
  1685  000474  20F4               	addwfc	prodh,w,c
  1686  000476  6EDA               	movwf	fsr2h,c
  1687  000478  CFDE F010          	movff	postinc2,Save_Data@store
  1688  00047C  CFDD F011          	movff	postdec2,Save_Data@store+1
  1689  000480  502F               	movf	_pin_selected,w,c
  1690  000482  0D06               	mullw	6
  1691  000484  0E02               	movlw	2
  1692  000486  26F3               	addwf	prodl,f,c
  1693  000488  0E00               	movlw	0
  1694  00048A  22F4               	addwfc	prodh,f,c
  1695  00048C  0E00               	movlw	low _pin
  1696  00048E  24F3               	addwf	prodl,w,c
  1697  000490  6ED9               	movwf	fsr2l,c
  1698  000492  0E01               	movlw	high _pin
  1699  000494  20F4               	addwfc	prodh,w,c
  1700  000496  6EDA               	movwf	fsr2h,c
  1701  000498  50DF               	movf	indf2,w,c
  1702  00049A  6E12               	movwf	Save_Data@store_address,c
  1703  00049C  EC1E  F005         	call	_Save_Data	;wreg free
  1704                           
  1705                           ;buttonchanges.c: 56: pin_selected++;
  1706  0004A0  2A2F               	incf	_pin_selected,f,c
  1707                           
  1708                           ;buttonchanges.c: 57: switch (slave_selected) {
  1709  0004A2  D010               	goto	l1772
  1710  0004A4                     l1758:
  1711                           
  1712                           ;buttonchanges.c: 59: if(pin_selected > 9) {
  1713  0004A4  0E09               	movlw	9
  1714  0004A6  642F               	cpfsgt	_pin_selected,c
  1715  0004A8  D017               	goto	l1774
  1716                           
  1717                           ;buttonchanges.c: 60: pin_selected = 0;
  1718  0004AA  0E00               	movlw	0
  1719  0004AC  D009               	goto	L2
  1720  0004AE                     l1762:
  1721                           
  1722                           ;buttonchanges.c: 64: if(pin_selected > 19) {
  1723  0004AE  0E13               	movlw	19
  1724  0004B0  642F               	cpfsgt	_pin_selected,c
  1725  0004B2  D012               	goto	l1774
  1726                           
  1727                           ;buttonchanges.c: 65: pin_selected = 10;
  1728  0004B4  0E0A               	movlw	10
  1729  0004B6  D004               	goto	L2
  1730  0004B8                     l1766:
  1731                           
  1732                           ;buttonchanges.c: 69: if(pin_selected > 29) {
  1733  0004B8  0E1D               	movlw	29
  1734  0004BA  642F               	cpfsgt	_pin_selected,c
  1735  0004BC  D00D               	goto	l1774
  1736                           
  1737                           ;buttonchanges.c: 70: pin_selected = 20;
  1738  0004BE  0E14               	movlw	20
  1739  0004C0                     L2:
  1740  0004C0  6E2F               	movwf	_pin_selected,c
  1741                           
  1742                           ;buttonchanges.c: 73: }
  1743                           
  1744                           ;buttonchanges.c: 71: }
  1745                           ;buttonchanges.c: 72: break;
  1746  0004C2  D00A               	goto	l1774
  1747  0004C4                     l1772:
  1748  0004C4  5030               	movf	_slave_selected,w,c
  1749                           
  1750                           ; Switch size 1, requested type "space"
  1751                           ; Number of cases is 3, Range of values is 0 to 2
  1752                           ; switch strategies available:
  1753                           ; Name         Instructions Cycles
  1754                           ; simple_byte           10     6 (average)
  1755                           ;	Chosen strategy is simple_byte
  1756  0004C6  0A00               	xorlw	0	; case 0
  1757  0004C8  B4D8               	btfsc	status,2,c
  1758  0004CA  D7EC               	goto	l1758
  1759  0004CC  0A01               	xorlw	1	; case 1
  1760  0004CE  B4D8               	btfsc	status,2,c
  1761  0004D0  D7EE               	goto	l1762
  1762  0004D2  0A03               	xorlw	3	; case 2
  1763  0004D4  B4D8               	btfsc	status,2,c
  1764  0004D6  D7F0               	goto	l1766
  1765  0004D8                     l1774:
  1766                           
  1767                           ;buttonchanges.c: 74: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  1768  0004D8  502F               	movf	_pin_selected,w,c
  1769  0004DA  0D06               	mullw	6
  1770  0004DC  0E02               	movlw	2
  1771  0004DE  26F3               	addwf	prodl,f,c
  1772  0004E0  0E00               	movlw	0
  1773  0004E2  22F4               	addwfc	prodh,f,c
  1774  0004E4  0E00               	movlw	low _pin
  1775  0004E6  24F3               	addwf	prodl,w,c
  1776  0004E8  6ED9               	movwf	fsr2l,c
  1777  0004EA  0E01               	movlw	high _pin
  1778  0004EC  20F4               	addwfc	prodh,w,c
  1779  0004EE  6EDA               	movwf	fsr2h,c
  1780  0004F0  50DF               	movf	indf2,w,c
  1781  0004F2  EC8A  F005         	call	_Read_Data
  1782  0004F6  502F               	movf	_pin_selected,w,c
  1783  0004F8  0D06               	mullw	6
  1784  0004FA  0E04               	movlw	4
  1785  0004FC  26F3               	addwf	prodl,f,c
  1786  0004FE  0E00               	movlw	0
  1787  000500  22F4               	addwfc	prodh,f,c
  1788  000502  0E00               	movlw	low _pin
  1789  000504  24F3               	addwf	prodl,w,c
  1790  000506  6ED9               	movwf	fsr2l,c
  1791  000508  0E01               	movlw	high _pin
  1792  00050A  20F4               	addwfc	prodh,w,c
  1793  00050C  6EDA               	movwf	fsr2h,c
  1794  00050E  C010  FFDE         	movff	?_Read_Data,postinc2
  1795  000512  C011  FFDD         	movff	?_Read_Data+1,postdec2
  1796                           
  1797                           ;buttonchanges.c: 75: __nop();
  1798  000516  F000               	nop	
  1799                           
  1800                           ;buttonchanges.c: 76: Set_Display('7', 'A', pin[pin_selected].output);
  1801  000518  0E41               	movlw	65
  1802  00051A  6E1E               	movwf	Set_Display@information,c
  1803  00051C  502F               	movf	_pin_selected,w,c
  1804  00051E  0D06               	mullw	6
  1805  000520  0E01               	movlw	1
  1806  000522  26F3               	addwf	prodl,f,c
  1807  000524  0E00               	movlw	0
  1808  000526  22F4               	addwfc	prodh,f,c
  1809  000528  0E00               	movlw	low _pin
  1810  00052A  24F3               	addwf	prodl,w,c
  1811  00052C  6ED9               	movwf	fsr2l,c
  1812  00052E  0E01               	movlw	high _pin
  1813  000530  20F4               	addwfc	prodh,w,c
  1814  000532  6EDA               	movwf	fsr2h,c
  1815  000534  50DF               	movf	indf2,w,c
  1816  000536  6E22               	movwf	??_Check_Buttons& (0+255),c
  1817  000538  5022               	movf	??_Check_Buttons,w,c
  1818  00053A  6E1F               	movwf	Set_Display@value,c
  1819  00053C  6A20               	clrf	Set_Display@value+1,c
  1820  00053E  0E37               	movlw	55
  1821  000540  EC46  F005         	call	_Set_Display
  1822                           
  1823                           ;buttonchanges.c: 77: Delay_Routine(30);
  1824  000544  0E1E               	movlw	30
  1825  000546  EC00  F006         	call	_Delay_Routine
  1826                           
  1827                           ;buttonchanges.c: 78: Set_Display('7', '-', pin[pin_selected].time);
  1828  00054A  0E2D               	movlw	45
  1829  00054C  6E1E               	movwf	Set_Display@information,c
  1830  00054E  502F               	movf	_pin_selected,w,c
  1831  000550  0D06               	mullw	6
  1832  000552  0E04               	movlw	4
  1833  000554  26F3               	addwf	prodl,f,c
  1834  000556  0E00               	movlw	0
  1835  000558  22F4               	addwfc	prodh,f,c
  1836  00055A  0E00               	movlw	low _pin
  1837  00055C  24F3               	addwf	prodl,w,c
  1838  00055E  6ED9               	movwf	fsr2l,c
  1839  000560  0E01               	movlw	high _pin
  1840  000562  20F4               	addwfc	prodh,w,c
  1841  000564  6EDA               	movwf	fsr2h,c
  1842  000566  CFDE F01F          	movff	postinc2,Set_Display@value
  1843  00056A  CFDD F020          	movff	postdec2,Set_Display@value+1
  1844  00056E  0E37               	movlw	55
  1845  000570  EC46  F005         	call	_Set_Display
  1846                           
  1847                           ;buttonchanges.c: 79: Delay_Routine(30);
  1848  000574  0E1E               	movlw	30
  1849  000576  EC00  F006         	call	_Delay_Routine
  1850                           
  1851                           ;buttonchanges.c: 80: __nop();
  1852  00057A  F000               	nop	
  1853                           
  1854                           ;buttonchanges.c: 81: }
  1855                           ;buttonchanges.c: 82: } else if(PORTBbits.RB0 == 1) {
  1856  00057C  0012               	return	
  1857  00057E                     l98:
  1858  00057E  A081               	btfss	3969,0,c	;volatile
  1859  000580  0012               	return	
  1860                           
  1861                           ;buttonchanges.c: 83: Delay_Routine(3);
  1862  000582  0E03               	movlw	3
  1863  000584  EC00  F006         	call	_Delay_Routine
  1864                           
  1865                           ;buttonchanges.c: 84: if(PORTBbits.RB0 == 1) {
  1866  000588  A081               	btfss	3969,0,c	;volatile
  1867  00058A  0012               	return	
  1868                           
  1869                           ;buttonchanges.c: 85: if(PORTBbits.RB1 == 1) {
  1870  00058C  A281               	btfss	3969,1,c	;volatile
  1871  00058E  D005               	goto	l1800
  1872                           
  1873                           ;buttonchanges.c: 86: Delay_Routine(3);
  1874  000590  0E03               	movlw	3
  1875  000592  EC00  F006         	call	_Delay_Routine
  1876                           
  1877                           ;buttonchanges.c: 87: if(PORTBbits.RB1 == 1) {
  1878  000596  B281               	btfsc	3969,1,c	;volatile
  1879                           
  1880                           ;buttonchanges.c: 88: testflag = 1;
  1881  000598  8234               	bsf	_testflag/(0+8),_testflag& (0+7),c
  1882  00059A                     l1800:
  1883                           
  1884                           ;buttonchanges.c: 89: }
  1885                           ;buttonchanges.c: 90: }
  1886                           ;buttonchanges.c: 91: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  1887  00059A  502F               	movf	_pin_selected,w,c
  1888  00059C  0D06               	mullw	6
  1889  00059E  0E04               	movlw	4
  1890  0005A0  26F3               	addwf	prodl,f,c
  1891  0005A2  0E00               	movlw	0
  1892  0005A4  22F4               	addwfc	prodh,f,c
  1893  0005A6  0E00               	movlw	low _pin
  1894  0005A8  24F3               	addwf	prodl,w,c
  1895  0005AA  6ED9               	movwf	fsr2l,c
  1896  0005AC  0E01               	movlw	high _pin
  1897  0005AE  20F4               	addwfc	prodh,w,c
  1898  0005B0  6EDA               	movwf	fsr2h,c
  1899  0005B2  CFDE F010          	movff	postinc2,Save_Data@store
  1900  0005B6  CFDD F011          	movff	postdec2,Save_Data@store+1
  1901  0005BA  502F               	movf	_pin_selected,w,c
  1902  0005BC  0D06               	mullw	6
  1903  0005BE  0E02               	movlw	2
  1904  0005C0  26F3               	addwf	prodl,f,c
  1905  0005C2  0E00               	movlw	0
  1906  0005C4  22F4               	addwfc	prodh,f,c
  1907  0005C6  0E00               	movlw	low _pin
  1908  0005C8  24F3               	addwf	prodl,w,c
  1909  0005CA  6ED9               	movwf	fsr2l,c
  1910  0005CC  0E01               	movlw	high _pin
  1911  0005CE  20F4               	addwfc	prodh,w,c
  1912  0005D0  6EDA               	movwf	fsr2h,c
  1913  0005D2  50DF               	movf	indf2,w,c
  1914  0005D4  6E12               	movwf	Save_Data@store_address,c
  1915  0005D6  EC1E  F005         	call	_Save_Data	;wreg free
  1916                           
  1917                           ;buttonchanges.c: 92: slave_selected++;
  1918  0005DA  2A30               	incf	_slave_selected,f,c
  1919                           
  1920                           ;buttonchanges.c: 93: if(slave_selected > 2) {
  1921  0005DC  0E02               	movlw	2
  1922  0005DE  6430               	cpfsgt	_slave_selected,c
  1923  0005E0  D002               	goto	l1808
  1924                           
  1925                           ;buttonchanges.c: 94: slave_selected = 0;
  1926  0005E2  0E00               	movlw	0
  1927  0005E4  6E30               	movwf	_slave_selected,c
  1928  0005E6                     l1808:
  1929                           
  1930                           ;buttonchanges.c: 95: }
  1931                           ;buttonchanges.c: 96: pin_selected = slave_selected * 10;
  1932  0005E6  5030               	movf	_slave_selected,w,c
  1933  0005E8  0D0A               	mullw	10
  1934  0005EA  CFF3 F02F          	movff	prodl,_pin_selected
  1935                           
  1936                           ;buttonchanges.c: 97: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  1937  0005EE  502F               	movf	_pin_selected,w,c
  1938  0005F0  0D06               	mullw	6
  1939  0005F2  0E02               	movlw	2
  1940  0005F4  26F3               	addwf	prodl,f,c
  1941  0005F6  0E00               	movlw	0
  1942  0005F8  22F4               	addwfc	prodh,f,c
  1943  0005FA  0E00               	movlw	low _pin
  1944  0005FC  24F3               	addwf	prodl,w,c
  1945  0005FE  6ED9               	movwf	fsr2l,c
  1946  000600  0E01               	movlw	high _pin
  1947  000602  20F4               	addwfc	prodh,w,c
  1948  000604  6EDA               	movwf	fsr2h,c
  1949  000606  50DF               	movf	indf2,w,c
  1950  000608  EC8A  F005         	call	_Read_Data
  1951  00060C  502F               	movf	_pin_selected,w,c
  1952  00060E  0D06               	mullw	6
  1953  000610  0E04               	movlw	4
  1954  000612  26F3               	addwf	prodl,f,c
  1955  000614  0E00               	movlw	0
  1956  000616  22F4               	addwfc	prodh,f,c
  1957  000618  0E00               	movlw	low _pin
  1958  00061A  24F3               	addwf	prodl,w,c
  1959  00061C  6ED9               	movwf	fsr2l,c
  1960  00061E  0E01               	movlw	high _pin
  1961  000620  20F4               	addwfc	prodh,w,c
  1962  000622  6EDA               	movwf	fsr2h,c
  1963  000624  C010  FFDE         	movff	?_Read_Data,postinc2
  1964  000628  C011  FFDD         	movff	?_Read_Data+1,postdec2
  1965                           
  1966                           ;buttonchanges.c: 98: __nop();
  1967  00062C  F000               	nop	
  1968                           
  1969                           ;buttonchanges.c: 99: Set_Display('7', 'E', pin[pin_selected].slave);
  1970  00062E  0E45               	movlw	69
  1971  000630  6E1E               	movwf	Set_Display@information,c
  1972  000632  502F               	movf	_pin_selected,w,c
  1973  000634  0D06               	mullw	6
  1974  000636  0E00               	movlw	low _pin
  1975  000638  24F3               	addwf	prodl,w,c
  1976  00063A  6ED9               	movwf	fsr2l,c
  1977  00063C  0E01               	movlw	high _pin
  1978  00063E  20F4               	addwfc	prodh,w,c
  1979  000640  6EDA               	movwf	fsr2h,c
  1980  000642  50DF               	movf	indf2,w,c
  1981  000644  6E22               	movwf	??_Check_Buttons& (0+255),c
  1982  000646  5022               	movf	??_Check_Buttons,w,c
  1983  000648  6E1F               	movwf	Set_Display@value,c
  1984  00064A  6A20               	clrf	Set_Display@value+1,c
  1985  00064C  0E37               	movlw	55
  1986  00064E  EC46  F005         	call	_Set_Display
  1987                           
  1988                           ;buttonchanges.c: 101: Delay_Routine(30);
  1989  000652  0E1E               	movlw	30
  1990  000654  EC00  F006         	call	_Delay_Routine
  1991                           
  1992                           ;buttonchanges.c: 102: Set_Display('7', 'A', pin[pin_selected].output);
  1993  000658  0E41               	movlw	65
  1994  00065A  6E1E               	movwf	Set_Display@information,c
  1995  00065C  502F               	movf	_pin_selected,w,c
  1996  00065E  0D06               	mullw	6
  1997  000660  0E01               	movlw	1
  1998  000662  26F3               	addwf	prodl,f,c
  1999  000664  0E00               	movlw	0
  2000  000666  22F4               	addwfc	prodh,f,c
  2001  000668  0E00               	movlw	low _pin
  2002  00066A  24F3               	addwf	prodl,w,c
  2003  00066C  6ED9               	movwf	fsr2l,c
  2004  00066E  0E01               	movlw	high _pin
  2005  000670  20F4               	addwfc	prodh,w,c
  2006  000672  6EDA               	movwf	fsr2h,c
  2007  000674  50DF               	movf	indf2,w,c
  2008  000676  6E22               	movwf	??_Check_Buttons& (0+255),c
  2009  000678  5022               	movf	??_Check_Buttons,w,c
  2010  00067A  6E1F               	movwf	Set_Display@value,c
  2011  00067C  6A20               	clrf	Set_Display@value+1,c
  2012  00067E  0E37               	movlw	55
  2013  000680  EC46  F005         	call	_Set_Display
  2014                           
  2015                           ;buttonchanges.c: 103: Delay_Routine(30);
  2016  000684  0E1E               	movlw	30
  2017  000686  EC00  F006         	call	_Delay_Routine
  2018                           
  2019                           ;buttonchanges.c: 104: Set_Display('7', '-', pin[pin_selected].time);
  2020  00068A  0E2D               	movlw	45
  2021  00068C  6E1E               	movwf	Set_Display@information,c
  2022  00068E  502F               	movf	_pin_selected,w,c
  2023  000690  0D06               	mullw	6
  2024  000692  0E04               	movlw	4
  2025  000694  26F3               	addwf	prodl,f,c
  2026  000696  0E00               	movlw	0
  2027  000698  22F4               	addwfc	prodh,f,c
  2028  00069A  0E00               	movlw	low _pin
  2029  00069C  24F3               	addwf	prodl,w,c
  2030  00069E  6ED9               	movwf	fsr2l,c
  2031  0006A0  0E01               	movlw	high _pin
  2032  0006A2  20F4               	addwfc	prodh,w,c
  2033  0006A4  6EDA               	movwf	fsr2h,c
  2034  0006A6  CFDE F01F          	movff	postinc2,Set_Display@value
  2035  0006AA  CFDD F020          	movff	postdec2,Set_Display@value+1
  2036  0006AE  0E37               	movlw	55
  2037  0006B0  EC46  F005         	call	_Set_Display
  2038                           
  2039                           ;buttonchanges.c: 105: Delay_Routine(30);
  2040  0006B4  0E1E               	movlw	30
  2041  0006B6  EC00  F006         	call	_Delay_Routine
  2042                           
  2043                           ;buttonchanges.c: 106: __nop();
  2044  0006BA  F000               	nop	
  2045  0006BC  0012               	return	
  2046  0006BE                     __end_of_Check_Buttons:
  2047                           	opt stack 0
  2048                           tblptru	equ	0xFF8
  2049                           tblptrh	equ	0xFF7
  2050                           tblptrl	equ	0xFF6
  2051                           tablat	equ	0xFF5
  2052                           prodh	equ	0xFF4
  2053                           prodl	equ	0xFF3
  2054                           intcon	equ	0xFF2
  2055                           postinc0	equ	0xFEE
  2056                           wreg	equ	0xFE8
  2057                           postdec1	equ	0xFE5
  2058                           fsr1l	equ	0xFE1
  2059                           indf2	equ	0xFDF
  2060                           postinc2	equ	0xFDE
  2061                           postdec2	equ	0xFDD
  2062                           plusw2	equ	0xFDB
  2063                           fsr2h	equ	0xFDA
  2064                           fsr2l	equ	0xFD9
  2065                           status	equ	0xFD8
  2066                           
  2067 ;; *************** function _Set_Display *****************
  2068 ;; Defined at:
  2069 ;;		line 126 in file "display.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  type            1    wreg     unsigned char 
  2072 ;;  information     1   29[COMRAM] unsigned char 
  2073 ;;  value           2   30[COMRAM] unsigned int 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  type            1   32[COMRAM] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;		None               void
  2078 ;; Registers used:
  2079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1
  2085 ;;      Params:         3       0       0
  2086 ;;      Locals:         1       0       0
  2087 ;;      Temps:          0       0       0
  2088 ;;      Totals:         4       0       0
  2089 ;;Total ram usage:        4 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    5
  2092 ;; This function calls:
  2093 ;;		_Evaluate_Display
  2094 ;;		_Evaluate_Signs
  2095 ;; This function is called by:
  2096 ;;		_main
  2097 ;;		_Check_Buttons
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text11
  2102  000A8C                     __ptext11:
  2103                           	opt stack 0
  2104  000A8C                     _Set_Display:
  2105                           	opt stack 25
  2106                           
  2107                           ;incstack = 0
  2108                           ;Set_Display@type stored from wreg
  2109  000A8C  6E21               	movwf	Set_Display@type,c
  2110                           
  2111                           ;display.c: 128: switch (type) {
  2112  000A8E  D01B               	goto	l1630
  2113  000A90                     l1614:
  2114                           
  2115                           ;display.c: 130: if(information != '-') {
  2116  000A90  0E2D               	movlw	45
  2117  000A92  181E               	xorwf	Set_Display@information,w,c
  2118  000A94  B4D8               	btfsc	status,2,c
  2119  000A96  D010               	goto	l1626
  2120                           
  2121                           ;display.c: 131: signs[0] = value;
  2122  000A98  C01F  F031         	movff	Set_Display@value,_signs
  2123                           
  2124                           ;display.c: 132: signs[0] += 0x30;
  2125  000A9C  0E30               	movlw	48
  2126  000A9E  2631               	addwf	_signs,f,c
  2127                           
  2128                           ;display.c: 133: signs[1] = '-';
  2129  000AA0  0E2D               	movlw	45
  2130  000AA2  6E32               	movwf	_signs+1,c
  2131                           
  2132                           ;display.c: 134: signs[2] = information;
  2133  000AA4  C01E  F033         	movff	Set_Display@information,_signs+2
  2134                           
  2135                           ;display.c: 135: Evaluate_Display(sizeof(signs), signs);
  2136  000AA8  0E31               	movlw	low _signs
  2137  000AAA  6E18               	movwf	Evaluate_Display@evaluate,c
  2138  000AAC  0E00               	movlw	high _signs
  2139  000AAE  6E19               	movwf	Evaluate_Display@evaluate+1,c
  2140  000AB0  0E03               	movlw	3
  2141  000AB2  EC5F  F003         	call	_Evaluate_Display
  2142                           
  2143                           ;display.c: 136: } else {
  2144  000AB6  0012               	return	
  2145  000AB8                     l1626:
  2146                           
  2147                           ;display.c: 137: Evaluate_Signs(value);
  2148  000AB8  C01F  F01B         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  2149  000ABC  C020  F01C         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  2150  000AC0  ECEC  F004         	call	_Evaluate_Signs	;wreg free
  2151                           
  2152                           ;display.c: 143: }
  2153                           
  2154                           ;display.c: 142: break;
  2155                           
  2156                           ;display.c: 140: case 'L':
  2157                           
  2158                           ;display.c: 138: }
  2159                           ;display.c: 139: break;
  2160  000AC4  0012               	return	
  2161  000AC6                     l1630:
  2162  000AC6  5021               	movf	Set_Display@type,w,c
  2163                           
  2164                           ; Switch size 1, requested type "space"
  2165                           ; Number of cases is 2, Range of values is 55 to 76
  2166                           ; switch strategies available:
  2167                           ; Name         Instructions Cycles
  2168                           ; simple_byte            7     4 (average)
  2169                           ;	Chosen strategy is simple_byte
  2170  000AC8  0A37               	xorlw	55	; case 55
  2171  000ACA  B4D8               	btfsc	status,2,c
  2172  000ACC  D7E1               	goto	l1614
  2173  000ACE  0A7B               	xorlw	123	; case 76
  2174  000AD0  0012               	return	
  2175  000AD2                     __end_of_Set_Display:
  2176                           	opt stack 0
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           prodh	equ	0xFF4
  2182                           prodl	equ	0xFF3
  2183                           intcon	equ	0xFF2
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           postdec1	equ	0xFE5
  2187                           fsr1l	equ	0xFE1
  2188                           indf2	equ	0xFDF
  2189                           postinc2	equ	0xFDE
  2190                           postdec2	equ	0xFDD
  2191                           plusw2	equ	0xFDB
  2192                           fsr2h	equ	0xFDA
  2193                           fsr2l	equ	0xFD9
  2194                           status	equ	0xFD8
  2195                           
  2196 ;; *************** function _Evaluate_Signs *****************
  2197 ;; Defined at:
  2198 ;;		line 106 in file "display.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  evaluation_v    2   26[COMRAM] unsigned int 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  valuecounter    1   28[COMRAM] unsigned char 
  2203 ;; Return value:  Size  Location     Type
  2204 ;;		None               void
  2205 ;; Registers used:
  2206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2207 ;; Tracked objects:
  2208 ;;		On entry : 0/0
  2209 ;;		On exit  : 0/0
  2210 ;;		Unchanged: 0/0
  2211 ;; Data sizes:     COMRAM   BANK0   BANK1
  2212 ;;      Params:         2       0       0
  2213 ;;      Locals:         1       0       0
  2214 ;;      Temps:          0       0       0
  2215 ;;      Totals:         3       0       0
  2216 ;;Total ram usage:        3 bytes
  2217 ;; Hardware stack levels used:    1
  2218 ;; Hardware stack levels required when called:    4
  2219 ;; This function calls:
  2220 ;;		_Evaluate_Display
  2221 ;;		___lwmod
  2222 ;; This function is called by:
  2223 ;;		_Set_Display
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           	psect	text12
  2228  0009D8                     __ptext12:
  2229                           	opt stack 0
  2230  0009D8                     _Evaluate_Signs:
  2231                           	opt stack 25
  2232                           
  2233                           ;display.c: 107: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  2234                           
  2235                           ;incstack = 0
  2236  0009D8  0E00               	movlw	0
  2237  0009DA  6E1D               	movwf	Evaluate_Signs@valuecounter,c
  2238  0009DC                     l1588:
  2239                           
  2240                           ;display.c: 108: valuecounter++) {
  2241  0009DC  0E02               	movlw	2
  2242  0009DE  641D               	cpfsgt	Evaluate_Signs@valuecounter,c
  2243  0009E0  D001               	goto	l1592
  2244  0009E2  D023               	goto	l374
  2245  0009E4                     l1592:
  2246                           
  2247                           ;display.c: 109: signs[valuecounter] = evaluation_value % 10;
  2248  0009E4  501D               	movf	Evaluate_Signs@valuecounter,w,c
  2249  0009E6  0D01               	mullw	1
  2250  0009E8  0E31               	movlw	low _signs
  2251  0009EA  24F3               	addwf	prodl,w,c
  2252  0009EC  6ED9               	movwf	fsr2l,c
  2253  0009EE  0E00               	movlw	high _signs
  2254  0009F0  20F4               	addwfc	prodh,w,c
  2255  0009F2  6EDA               	movwf	fsr2h,c
  2256  0009F4  C01B  F010         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  2257  0009F8  C01C  F011         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  2258  0009FC  0E00               	movlw	0
  2259  0009FE  6E13               	movwf	___lwmod@divisor+1,c
  2260  000A00  0E0A               	movlw	10
  2261  000A02  6E12               	movwf	___lwmod@divisor,c
  2262  000A04  EC69  F005         	call	___lwmod	;wreg free
  2263  000A08  5010               	movf	?___lwmod,w,c
  2264  000A0A  6EDF               	movwf	indf2,c
  2265                           
  2266                           ;display.c: 110: signs[valuecounter] += 0x30;
  2267  000A0C  501D               	movf	Evaluate_Signs@valuecounter,w,c
  2268  000A0E  0D01               	mullw	1
  2269  000A10  0E31               	movlw	low _signs
  2270  000A12  24F3               	addwf	prodl,w,c
  2271  000A14  6ED9               	movwf	fsr2l,c
  2272  000A16  0E00               	movlw	high _signs
  2273  000A18  20F4               	addwfc	prodh,w,c
  2274  000A1A  6EDA               	movwf	fsr2h,c
  2275  000A1C  0E30               	movlw	48
  2276  000A1E  26DF               	addwf	indf2,f,c
  2277                           
  2278                           ;display.c: 111: evaluation_value >>= 1;
  2279  000A20  90D8               	bcf	status,0,c
  2280  000A22  321C               	rrcf	Evaluate_Signs@evaluation_value+1,f,c
  2281  000A24  321B               	rrcf	Evaluate_Signs@evaluation_value,f,c
  2282  000A26  2A1D               	incf	Evaluate_Signs@valuecounter,f,c
  2283  000A28  D7D9               	goto	l1588
  2284  000A2A                     l374:
  2285                           
  2286                           ;display.c: 112: }
  2287                           ;display.c: 113: __nop();
  2288  000A2A  F000               	nop	
  2289                           
  2290                           ;display.c: 114: Evaluate_Display(sizeof(signs), signs);
  2291  000A2C  0E31               	movlw	low _signs
  2292  000A2E  6E18               	movwf	Evaluate_Display@evaluate,c
  2293  000A30  0E00               	movlw	high _signs
  2294  000A32  6E19               	movwf	Evaluate_Display@evaluate+1,c
  2295  000A34  0E03               	movlw	3
  2296  000A36  EC5F  F003         	call	_Evaluate_Display
  2297  000A3A  0012               	return		;funcret
  2298  000A3C                     __end_of_Evaluate_Signs:
  2299                           	opt stack 0
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           prodh	equ	0xFF4
  2305                           prodl	equ	0xFF3
  2306                           intcon	equ	0xFF2
  2307                           postinc0	equ	0xFEE
  2308                           wreg	equ	0xFE8
  2309                           postdec1	equ	0xFE5
  2310                           fsr1l	equ	0xFE1
  2311                           indf2	equ	0xFDF
  2312                           postinc2	equ	0xFDE
  2313                           postdec2	equ	0xFDD
  2314                           plusw2	equ	0xFDB
  2315                           fsr2h	equ	0xFDA
  2316                           fsr2l	equ	0xFD9
  2317                           status	equ	0xFD8
  2318                           
  2319 ;; *************** function ___lwmod *****************
  2320 ;; Defined at:
  2321 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  dividend        2   15[COMRAM] unsigned int 
  2324 ;;  divisor         2   17[COMRAM] unsigned int 
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  counter         1   19[COMRAM] unsigned char 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  2   15[COMRAM] unsigned int 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1
  2336 ;;      Params:         4       0       0
  2337 ;;      Locals:         1       0       0
  2338 ;;      Temps:          0       0       0
  2339 ;;      Totals:         5       0       0
  2340 ;;Total ram usage:        5 bytes
  2341 ;; Hardware stack levels used:    1
  2342 ;; Hardware stack levels required when called:    2
  2343 ;; This function calls:
  2344 ;;		Nothing
  2345 ;; This function is called by:
  2346 ;;		_Evaluate_Signs
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text13
  2351  000AD2                     __ptext13:
  2352                           	opt stack 0
  2353  000AD2                     ___lwmod:
  2354                           	opt stack 26
  2355                           
  2356                           ;incstack = 0
  2357  000AD2  5012               	movf	___lwmod@divisor,w,c
  2358  000AD4  1013               	iorwf	___lwmod@divisor+1,w,c
  2359  000AD6  B4D8               	btfsc	status,2,c
  2360  000AD8  D018               	goto	l895
  2361  000ADA  0E01               	movlw	1
  2362  000ADC  6E14               	movwf	___lwmod@counter,c
  2363  000ADE  D004               	goto	l1576
  2364  000AE0                     l1574:
  2365  000AE0  90D8               	bcf	status,0,c
  2366  000AE2  3612               	rlcf	___lwmod@divisor,f,c
  2367  000AE4  3613               	rlcf	___lwmod@divisor+1,f,c
  2368  000AE6  2A14               	incf	___lwmod@counter,f,c
  2369  000AE8                     l1576:
  2370  000AE8  AE13               	btfss	___lwmod@divisor+1,7,c
  2371  000AEA  D7FA               	goto	l1574
  2372  000AEC                     l1578:
  2373  000AEC  5012               	movf	___lwmod@divisor,w,c
  2374  000AEE  5C10               	subwf	___lwmod@dividend,w,c
  2375  000AF0  5013               	movf	___lwmod@divisor+1,w,c
  2376  000AF2  5811               	subwfb	___lwmod@dividend+1,w,c
  2377  000AF4  A0D8               	btfss	status,0,c
  2378  000AF6  D004               	goto	l1582
  2379  000AF8  5012               	movf	___lwmod@divisor,w,c
  2380  000AFA  5E10               	subwf	___lwmod@dividend,f,c
  2381  000AFC  5013               	movf	___lwmod@divisor+1,w,c
  2382  000AFE  5A11               	subwfb	___lwmod@dividend+1,f,c
  2383  000B00                     l1582:
  2384  000B00  90D8               	bcf	status,0,c
  2385  000B02  3213               	rrcf	___lwmod@divisor+1,f,c
  2386  000B04  3212               	rrcf	___lwmod@divisor,f,c
  2387  000B06  2E14               	decfsz	___lwmod@counter,f,c
  2388  000B08  D7F1               	goto	l1578
  2389  000B0A                     l895:
  2390  000B0A  C010  F010         	movff	___lwmod@dividend,?___lwmod
  2391  000B0E  C011  F011         	movff	___lwmod@dividend+1,?___lwmod+1
  2392  000B12  0012               	return		;funcret
  2393  000B14                     __end_of___lwmod:
  2394                           	opt stack 0
  2395                           tblptru	equ	0xFF8
  2396                           tblptrh	equ	0xFF7
  2397                           tblptrl	equ	0xFF6
  2398                           tablat	equ	0xFF5
  2399                           prodh	equ	0xFF4
  2400                           prodl	equ	0xFF3
  2401                           intcon	equ	0xFF2
  2402                           postinc0	equ	0xFEE
  2403                           wreg	equ	0xFE8
  2404                           postdec1	equ	0xFE5
  2405                           fsr1l	equ	0xFE1
  2406                           indf2	equ	0xFDF
  2407                           postinc2	equ	0xFDE
  2408                           postdec2	equ	0xFDD
  2409                           plusw2	equ	0xFDB
  2410                           fsr2h	equ	0xFDA
  2411                           fsr2l	equ	0xFD9
  2412                           status	equ	0xFD8
  2413                           
  2414 ;; *************** function _Evaluate_Display *****************
  2415 ;; Defined at:
  2416 ;;		line 52 in file "display.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;  size            1    wreg     unsigned char 
  2419 ;;  evaluate        2   23[COMRAM] PTR unsigned char 
  2420 ;;		 -> signs(3), 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  size            1   25[COMRAM] unsigned char 
  2423 ;; Return value:  Size  Location     Type
  2424 ;;		None               void
  2425 ;; Registers used:
  2426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1
  2432 ;;      Params:         2       0       0
  2433 ;;      Locals:         1       0       0
  2434 ;;      Temps:          0       0       0
  2435 ;;      Totals:         3       0       0
  2436 ;;Total ram usage:        3 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    3
  2439 ;; This function calls:
  2440 ;;		_Set_Bits
  2441 ;; This function is called by:
  2442 ;;		_Evaluate_Signs
  2443 ;;		_Set_Display
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           	psect	text14
  2448  0006BE                     __ptext14:
  2449                           	opt stack 0
  2450  0006BE                     _Evaluate_Display:
  2451                           	opt stack 25
  2452                           
  2453                           ;incstack = 0
  2454                           ;Evaluate_Display@size stored from wreg
  2455  0006BE  6E1A               	movwf	Evaluate_Display@size,c
  2456                           
  2457                           ;display.c: 53: for(display_counter = 0; display_counter < size;
  2458  0006C0  0E00               	movlw	0
  2459  0006C2  6E2D               	movwf	_display_counter,c
  2460                           
  2461                           ;display.c: 54: display_counter++) {
  2462  0006C4  D0D7               	goto	l1568
  2463  0006C6                     l1536:
  2464                           
  2465                           ;display.c: 57: Set_Bits("ABCDEF");
  2466  0006C6  0E09               	movlw	low STR_1
  2467  0006C8  6E10               	movwf	Set_Bits@bits,c
  2468  0006CA  0E02               	movlw	high STR_1
  2469  0006CC  6E11               	movwf	Set_Bits@bits+1,c
  2470  0006CE  5010               	movf	Set_Bits@bits,w,c
  2471  0006D0  1011               	iorwf	Set_Bits@bits+1,w,c
  2472  0006D2  A4D8               	btfss	status,2,c
  2473  0006D4  0E00               	movlw	low (__mediumconst shr (0+16))
  2474  0006D6  6E12               	movwf	Set_Bits@bits+2,c
  2475  0006D8  EC99  F004         	call	_Set_Bits	;wreg free
  2476                           
  2477                           ;display.c: 58: break;
  2478  0006DC  D0CA               	goto	l1566
  2479  0006DE                     l1538:
  2480                           
  2481                           ;display.c: 60: Set_Bits("BC");
  2482  0006DE  0E43               	movlw	low (STR_8+1)
  2483  0006E0  6E10               	movwf	Set_Bits@bits,c
  2484  0006E2  0E02               	movlw	high (STR_8+1)
  2485  0006E4  6E11               	movwf	Set_Bits@bits+1,c
  2486  0006E6  5010               	movf	Set_Bits@bits,w,c
  2487  0006E8  1011               	iorwf	Set_Bits@bits+1,w,c
  2488  0006EA  A4D8               	btfss	status,2,c
  2489  0006EC  0E00               	movlw	low (__mediumconst shr (0+16))
  2490  0006EE  6E12               	movwf	Set_Bits@bits+2,c
  2491  0006F0  EC99  F004         	call	_Set_Bits	;wreg free
  2492                           
  2493                           ;display.c: 61: break;
  2494  0006F4  D0BE               	goto	l1566
  2495  0006F6                     l1540:
  2496                           
  2497                           ;display.c: 63: Set_Bits("ABDEG");
  2498  0006F6  0E2B               	movlw	low STR_3
  2499  0006F8  6E10               	movwf	Set_Bits@bits,c
  2500  0006FA  0E02               	movlw	high STR_3
  2501  0006FC  6E11               	movwf	Set_Bits@bits+1,c
  2502  0006FE  5010               	movf	Set_Bits@bits,w,c
  2503  000700  1011               	iorwf	Set_Bits@bits+1,w,c
  2504  000702  A4D8               	btfss	status,2,c
  2505  000704  0E00               	movlw	low (__mediumconst shr (0+16))
  2506  000706  6E12               	movwf	Set_Bits@bits+2,c
  2507  000708  EC99  F004         	call	_Set_Bits	;wreg free
  2508                           
  2509                           ;display.c: 64: break;
  2510  00070C  D0B2               	goto	l1566
  2511  00070E                     l1542:
  2512                           
  2513                           ;display.c: 66: Set_Bits("ABCDG");
  2514  00070E  0E25               	movlw	low STR_4
  2515  000710  6E10               	movwf	Set_Bits@bits,c
  2516  000712  0E02               	movlw	high STR_4
  2517  000714  6E11               	movwf	Set_Bits@bits+1,c
  2518  000716  5010               	movf	Set_Bits@bits,w,c
  2519  000718  1011               	iorwf	Set_Bits@bits+1,w,c
  2520  00071A  A4D8               	btfss	status,2,c
  2521  00071C  0E00               	movlw	low (__mediumconst shr (0+16))
  2522  00071E  6E12               	movwf	Set_Bits@bits+2,c
  2523  000720  EC99  F004         	call	_Set_Bits	;wreg free
  2524                           
  2525                           ;display.c: 67: break;
  2526  000724  D0A6               	goto	l1566
  2527  000726                     l1544:
  2528                           
  2529                           ;display.c: 69: Set_Bits("BCFG");
  2530  000726  0E3D               	movlw	low STR_5
  2531  000728  6E10               	movwf	Set_Bits@bits,c
  2532  00072A  0E02               	movlw	high STR_5
  2533  00072C  6E11               	movwf	Set_Bits@bits+1,c
  2534  00072E  5010               	movf	Set_Bits@bits,w,c
  2535  000730  1011               	iorwf	Set_Bits@bits+1,w,c
  2536  000732  A4D8               	btfss	status,2,c
  2537  000734  0E00               	movlw	low (__mediumconst shr (0+16))
  2538  000736  6E12               	movwf	Set_Bits@bits+2,c
  2539  000738  EC99  F004         	call	_Set_Bits	;wreg free
  2540                           
  2541                           ;display.c: 70: break;
  2542  00073C  D09A               	goto	l1566
  2543  00073E                     l1546:
  2544                           
  2545                           ;display.c: 72: Set_Bits("ACDFG");
  2546  00073E  0E31               	movlw	low STR_6
  2547  000740  6E10               	movwf	Set_Bits@bits,c
  2548  000742  0E02               	movlw	high STR_6
  2549  000744  6E11               	movwf	Set_Bits@bits+1,c
  2550  000746  5010               	movf	Set_Bits@bits,w,c
  2551  000748  1011               	iorwf	Set_Bits@bits+1,w,c
  2552  00074A  A4D8               	btfss	status,2,c
  2553  00074C  0E00               	movlw	low (__mediumconst shr (0+16))
  2554  00074E  6E12               	movwf	Set_Bits@bits+2,c
  2555  000750  EC99  F004         	call	_Set_Bits	;wreg free
  2556                           
  2557                           ;display.c: 73: break;
  2558  000754  D08E               	goto	l1566
  2559  000756                     l1548:
  2560                           
  2561                           ;display.c: 75: Set_Bits("ACDEFG");
  2562  000756  0E1E               	movlw	low STR_7
  2563  000758  6E10               	movwf	Set_Bits@bits,c
  2564  00075A  0E02               	movlw	high STR_7
  2565  00075C  6E11               	movwf	Set_Bits@bits+1,c
  2566  00075E  5010               	movf	Set_Bits@bits,w,c
  2567  000760  1011               	iorwf	Set_Bits@bits+1,w,c
  2568  000762  A4D8               	btfss	status,2,c
  2569  000764  0E00               	movlw	low (__mediumconst shr (0+16))
  2570  000766  6E12               	movwf	Set_Bits@bits+2,c
  2571  000768  EC99  F004         	call	_Set_Bits	;wreg free
  2572                           
  2573                           ;display.c: 76: break;
  2574  00076C  D082               	goto	l1566
  2575  00076E                     l1550:
  2576                           
  2577                           ;display.c: 78: Set_Bits("ABC");
  2578  00076E  0E42               	movlw	low STR_8
  2579  000770  6E10               	movwf	Set_Bits@bits,c
  2580  000772  0E02               	movlw	high STR_8
  2581  000774  6E11               	movwf	Set_Bits@bits+1,c
  2582  000776  5010               	movf	Set_Bits@bits,w,c
  2583  000778  1011               	iorwf	Set_Bits@bits+1,w,c
  2584  00077A  A4D8               	btfss	status,2,c
  2585  00077C  0E00               	movlw	low (__mediumconst shr (0+16))
  2586  00077E  6E12               	movwf	Set_Bits@bits+2,c
  2587  000780  EC99  F004         	call	_Set_Bits	;wreg free
  2588                           
  2589                           ;display.c: 79: break;
  2590  000784  D076               	goto	l1566
  2591  000786                     l1552:
  2592                           
  2593                           ;display.c: 81: Set_Bits("ABCDEFG");
  2594  000786  0E01               	movlw	low STR_9
  2595  000788  6E10               	movwf	Set_Bits@bits,c
  2596  00078A  0E02               	movlw	high STR_9
  2597  00078C  6E11               	movwf	Set_Bits@bits+1,c
  2598  00078E  5010               	movf	Set_Bits@bits,w,c
  2599  000790  1011               	iorwf	Set_Bits@bits+1,w,c
  2600  000792  A4D8               	btfss	status,2,c
  2601  000794  0E00               	movlw	low (__mediumconst shr (0+16))
  2602  000796  6E12               	movwf	Set_Bits@bits+2,c
  2603  000798  EC99  F004         	call	_Set_Bits	;wreg free
  2604                           
  2605                           ;display.c: 82: break;
  2606  00079C  D06A               	goto	l1566
  2607  00079E                     l1554:
  2608                           
  2609                           ;display.c: 84: Set_Bits("ABCDFG");
  2610  00079E  0E10               	movlw	low STR_10
  2611  0007A0  6E10               	movwf	Set_Bits@bits,c
  2612  0007A2  0E02               	movlw	high STR_10
  2613  0007A4  6E11               	movwf	Set_Bits@bits+1,c
  2614  0007A6  5010               	movf	Set_Bits@bits,w,c
  2615  0007A8  1011               	iorwf	Set_Bits@bits+1,w,c
  2616  0007AA  A4D8               	btfss	status,2,c
  2617  0007AC  0E00               	movlw	low (__mediumconst shr (0+16))
  2618  0007AE  6E12               	movwf	Set_Bits@bits+2,c
  2619  0007B0  EC99  F004         	call	_Set_Bits	;wreg free
  2620                           
  2621                           ;display.c: 85: break;
  2622  0007B4  D05E               	goto	l1566
  2623  0007B6                     l1556:
  2624                           
  2625                           ;display.c: 87: Set_Bits("ADEFG");
  2626  0007B6  0E37               	movlw	low STR_11
  2627  0007B8  6E10               	movwf	Set_Bits@bits,c
  2628  0007BA  0E02               	movlw	high STR_11
  2629  0007BC  6E11               	movwf	Set_Bits@bits+1,c
  2630  0007BE  5010               	movf	Set_Bits@bits,w,c
  2631  0007C0  1011               	iorwf	Set_Bits@bits+1,w,c
  2632  0007C2  A4D8               	btfss	status,2,c
  2633  0007C4  0E00               	movlw	low (__mediumconst shr (0+16))
  2634  0007C6  6E12               	movwf	Set_Bits@bits+2,c
  2635  0007C8  EC99  F004         	call	_Set_Bits	;wreg free
  2636                           
  2637                           ;display.c: 88: break;
  2638  0007CC  D052               	goto	l1566
  2639  0007CE                     l1558:
  2640                           
  2641                           ;display.c: 90: Set_Bits("ABCEFG");
  2642  0007CE  0E17               	movlw	low STR_12
  2643  0007D0  6E10               	movwf	Set_Bits@bits,c
  2644  0007D2  0E02               	movlw	high STR_12
  2645  0007D4  6E11               	movwf	Set_Bits@bits+1,c
  2646  0007D6  5010               	movf	Set_Bits@bits,w,c
  2647  0007D8  1011               	iorwf	Set_Bits@bits+1,w,c
  2648  0007DA  A4D8               	btfss	status,2,c
  2649  0007DC  0E00               	movlw	low (__mediumconst shr (0+16))
  2650  0007DE  6E12               	movwf	Set_Bits@bits+2,c
  2651  0007E0  EC99  F004         	call	_Set_Bits	;wreg free
  2652                           
  2653                           ;display.c: 91: break;
  2654  0007E4  D046               	goto	l1566
  2655  0007E6                     l1560:
  2656                           
  2657                           ;display.c: 93: Set_Bits("G");
  2658  0007E6  0E29               	movlw	low (STR_4+4)
  2659  0007E8  6E10               	movwf	Set_Bits@bits,c
  2660  0007EA  0E02               	movlw	high (STR_4+4)
  2661  0007EC  6E11               	movwf	Set_Bits@bits+1,c
  2662  0007EE  5010               	movf	Set_Bits@bits,w,c
  2663  0007F0  1011               	iorwf	Set_Bits@bits+1,w,c
  2664  0007F2  A4D8               	btfss	status,2,c
  2665  0007F4  0E00               	movlw	low (__mediumconst shr (0+16))
  2666  0007F6  6E12               	movwf	Set_Bits@bits+2,c
  2667  0007F8  EC99  F004         	call	_Set_Bits	;wreg free
  2668                           
  2669                           ;display.c: 94: break;
  2670  0007FC  D03A               	goto	l1566
  2671  0007FE                     l1562:
  2672                           
  2673                           ;display.c: 96: Set_Bits(0);
  2674  0007FE  0E00               	movlw	0
  2675  000800  6E10               	movwf	Set_Bits@bits,c
  2676  000802  0E00               	movlw	0
  2677  000804  6E11               	movwf	Set_Bits@bits+1,c
  2678  000806  0E00               	movlw	0
  2679  000808  6E12               	movwf	Set_Bits@bits+2,c
  2680  00080A  EC99  F004         	call	_Set_Bits	;wreg free
  2681                           
  2682                           ;display.c: 97: }
  2683  00080E  D031               	goto	l1566
  2684  000810                     l1564:
  2685  000810  502D               	movf	_display_counter,w,c
  2686  000812  0D01               	mullw	1
  2687  000814  50F3               	movf	prodl,w,c
  2688  000816  2418               	addwf	Evaluate_Display@evaluate,w,c
  2689  000818  6ED9               	movwf	fsr2l,c
  2690  00081A  50F4               	movf	prodh,w,c
  2691  00081C  2019               	addwfc	Evaluate_Display@evaluate+1,w,c
  2692  00081E  6EDA               	movwf	fsr2h,c
  2693  000820  50DF               	movf	indf2,w,c
  2694                           
  2695                           ; Switch size 1, requested type "space"
  2696                           ; Number of cases is 13, Range of values is 45 to 69
  2697                           ; switch strategies available:
  2698                           ; Name         Instructions Cycles
  2699                           ; simple_byte           40    21 (average)
  2700                           ;	Chosen strategy is simple_byte
  2701  000822  0A2D               	xorlw	45	; case 45
  2702  000824  B4D8               	btfsc	status,2,c
  2703  000826  D7DF               	goto	l1560
  2704  000828  0A1D               	xorlw	29	; case 48
  2705  00082A  B4D8               	btfsc	status,2,c
  2706  00082C  D74C               	goto	l1536
  2707  00082E  0A01               	xorlw	1	; case 49
  2708  000830  B4D8               	btfsc	status,2,c
  2709  000832  D755               	goto	l1538
  2710  000834  0A03               	xorlw	3	; case 50
  2711  000836  B4D8               	btfsc	status,2,c
  2712  000838  D75E               	goto	l1540
  2713  00083A  0A01               	xorlw	1	; case 51
  2714  00083C  B4D8               	btfsc	status,2,c
  2715  00083E  D767               	goto	l1542
  2716  000840  0A07               	xorlw	7	; case 52
  2717  000842  B4D8               	btfsc	status,2,c
  2718  000844  D770               	goto	l1544
  2719  000846  0A01               	xorlw	1	; case 53
  2720  000848  B4D8               	btfsc	status,2,c
  2721  00084A  D779               	goto	l1546
  2722  00084C  0A03               	xorlw	3	; case 54
  2723  00084E  B4D8               	btfsc	status,2,c
  2724  000850  D782               	goto	l1548
  2725  000852  0A01               	xorlw	1	; case 55
  2726  000854  B4D8               	btfsc	status,2,c
  2727  000856  D78B               	goto	l1550
  2728  000858  0A0F               	xorlw	15	; case 56
  2729  00085A  B4D8               	btfsc	status,2,c
  2730  00085C  D794               	goto	l1552
  2731  00085E  0A01               	xorlw	1	; case 57
  2732  000860  B4D8               	btfsc	status,2,c
  2733  000862  D79D               	goto	l1554
  2734  000864  0A78               	xorlw	120	; case 65
  2735  000866  B4D8               	btfsc	status,2,c
  2736  000868  D7B2               	goto	l1558
  2737  00086A  0A04               	xorlw	4	; case 69
  2738  00086C  B4D8               	btfsc	status,2,c
  2739  00086E  D7A3               	goto	l1556
  2740  000870  D7C6               	goto	l1562
  2741  000872                     l1566:
  2742  000872  2A2D               	incf	_display_counter,f,c
  2743  000874                     l1568:
  2744  000874  501A               	movf	Evaluate_Display@size,w,c
  2745  000876  5C2D               	subwf	_display_counter,w,c
  2746  000878  B0D8               	btfsc	status,0,c
  2747  00087A  0012               	return	
  2748  00087C  D7C9               	goto	l1564
  2749  00087E                     __end_of_Evaluate_Display:
  2750                           	opt stack 0
  2751                           tblptru	equ	0xFF8
  2752                           tblptrh	equ	0xFF7
  2753                           tblptrl	equ	0xFF6
  2754                           tablat	equ	0xFF5
  2755                           prodh	equ	0xFF4
  2756                           prodl	equ	0xFF3
  2757                           intcon	equ	0xFF2
  2758                           postinc0	equ	0xFEE
  2759                           wreg	equ	0xFE8
  2760                           postdec1	equ	0xFE5
  2761                           fsr1l	equ	0xFE1
  2762                           indf2	equ	0xFDF
  2763                           postinc2	equ	0xFDE
  2764                           postdec2	equ	0xFDD
  2765                           plusw2	equ	0xFDB
  2766                           fsr2h	equ	0xFDA
  2767                           fsr2l	equ	0xFD9
  2768                           status	equ	0xFD8
  2769                           
  2770 ;; *************** function _Set_Bits *****************
  2771 ;; Defined at:
  2772 ;;		line 12 in file "display.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  bits            3   15[COMRAM] PTR const unsigned char 
  2775 ;;		 -> ROM(8191), STR_13(2), STR_12(7), STR_11(6), 
  2776 ;;		 -> STR_10(7), STR_9(8), STR_8(4), STR_7(7), 
  2777 ;;		 -> STR_6(6), STR_5(5), STR_4(6), STR_3(6), 
  2778 ;;		 -> STR_2(3), STR_1(7), 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;  bitcount        1   22[COMRAM] unsigned char 
  2781 ;;  Bitoutput       1   21[COMRAM] unsigned char 
  2782 ;; Return value:  Size  Location     Type
  2783 ;;		None               void
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1
  2791 ;;      Params:         3       0       0
  2792 ;;      Locals:         2       0       0
  2793 ;;      Temps:          3       0       0
  2794 ;;      Totals:         8       0       0
  2795 ;;Total ram usage:        8 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; Hardware stack levels required when called:    2
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_Evaluate_Display
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text15
  2806  000932                     __ptext15:
  2807                           	opt stack 0
  2808  000932                     _Set_Bits:
  2809                           	opt stack 25
  2810                           
  2811                           ;display.c: 13: unsigned char Bitoutput = 0;
  2812                           
  2813                           ;incstack = 0
  2814  000932  0E00               	movlw	0
  2815  000934  6E16               	movwf	Set_Bits@Bitoutput,c
  2816                           
  2817                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  2818  000936  0E00               	movlw	0
  2819  000938  6E17               	movwf	Set_Bits@bitcount,c
  2820                           
  2821                           ;display.c: 15: bitcount++) {
  2822  00093A  D037               	goto	l1532
  2823  00093C                     l1512:
  2824                           
  2825                           ;display.c: 18: Bitoutput |= 0b00000001;
  2826  00093C  8016               	bsf	Set_Bits@Bitoutput,0,c
  2827                           
  2828                           ;display.c: 19: break;
  2829  00093E  D034               	goto	l1530
  2830  000940                     l1514:
  2831                           
  2832                           ;display.c: 21: Bitoutput |= 0b00000010;
  2833  000940  8216               	bsf	Set_Bits@Bitoutput,1,c
  2834                           
  2835                           ;display.c: 22: break;
  2836  000942  D032               	goto	l1530
  2837  000944                     l1516:
  2838                           
  2839                           ;display.c: 24: Bitoutput |= 0b00000100;
  2840  000944  8416               	bsf	Set_Bits@Bitoutput,2,c
  2841                           
  2842                           ;display.c: 25: break;
  2843  000946  D030               	goto	l1530
  2844  000948                     l1518:
  2845                           
  2846                           ;display.c: 27: Bitoutput |= 0b00001000;
  2847  000948  8616               	bsf	Set_Bits@Bitoutput,3,c
  2848                           
  2849                           ;display.c: 28: break;
  2850  00094A  D02E               	goto	l1530
  2851  00094C                     l1520:
  2852                           
  2853                           ;display.c: 30: Bitoutput |= 0b00010000;
  2854  00094C  8816               	bsf	Set_Bits@Bitoutput,4,c
  2855                           
  2856                           ;display.c: 31: break;
  2857  00094E  D02C               	goto	l1530
  2858  000950                     l1522:
  2859                           
  2860                           ;display.c: 33: Bitoutput |= 0b00100000;
  2861  000950  8A16               	bsf	Set_Bits@Bitoutput,5,c
  2862                           
  2863                           ;display.c: 34: break;
  2864  000952  D02A               	goto	l1530
  2865  000954                     l1524:
  2866                           
  2867                           ;display.c: 36: Bitoutput |= 0b01000000;
  2868  000954  8C16               	bsf	Set_Bits@Bitoutput,6,c
  2869                           
  2870                           ;display.c: 40: }
  2871                           
  2872                           ;display.c: 39: break;
  2873                           
  2874                           ;display.c: 38: default:
  2875                           
  2876                           ;display.c: 37: break;
  2877  000956  D028               	goto	l1530
  2878  000958                     l1528:
  2879  000958  5017               	movf	Set_Bits@bitcount,w,c
  2880  00095A  0D01               	mullw	1
  2881  00095C  50F3               	movf	prodl,w,c
  2882  00095E  2410               	addwf	Set_Bits@bits,w,c
  2883  000960  6E13               	movwf	??_Set_Bits& (0+255),c
  2884  000962  50F4               	movf	prodh,w,c
  2885  000964  2011               	addwfc	Set_Bits@bits+1,w,c
  2886  000966  6E14               	movwf	(??_Set_Bits+1)& (0+255),c
  2887  000968  0E00               	movlw	0
  2888  00096A  2012               	addwfc	Set_Bits@bits+2,w,c
  2889  00096C  6E15               	movwf	(??_Set_Bits+2)& (0+255),c
  2890  00096E  C013  FFF6         	movff	??_Set_Bits,tblptrl
  2891  000972  C014  FFF7         	movff	??_Set_Bits+1,tblptrh
  2892  000976  C015  FFF8         	movff	??_Set_Bits+2,tblptru
  2893  00097A  0008               	tblrd		*
  2894  00097C  50F5               	movf	tablat,w,c
  2895                           
  2896                           ; Switch size 1, requested type "space"
  2897                           ; Number of cases is 7, Range of values is 65 to 71
  2898                           ; switch strategies available:
  2899                           ; Name         Instructions Cycles
  2900                           ; simple_byte           22    12 (average)
  2901                           ;	Chosen strategy is simple_byte
  2902  00097E  0A41               	xorlw	65	; case 65
  2903  000980  B4D8               	btfsc	status,2,c
  2904  000982  D7DC               	goto	l1512
  2905  000984  0A03               	xorlw	3	; case 66
  2906  000986  B4D8               	btfsc	status,2,c
  2907  000988  D7DB               	goto	l1514
  2908  00098A  0A01               	xorlw	1	; case 67
  2909  00098C  B4D8               	btfsc	status,2,c
  2910  00098E  D7DA               	goto	l1516
  2911  000990  0A07               	xorlw	7	; case 68
  2912  000992  B4D8               	btfsc	status,2,c
  2913  000994  D7D9               	goto	l1518
  2914  000996  0A01               	xorlw	1	; case 69
  2915  000998  B4D8               	btfsc	status,2,c
  2916  00099A  D7D8               	goto	l1520
  2917  00099C  0A03               	xorlw	3	; case 70
  2918  00099E  B4D8               	btfsc	status,2,c
  2919  0009A0  D7D7               	goto	l1522
  2920  0009A2  0A01               	xorlw	1	; case 71
  2921  0009A4  B4D8               	btfsc	status,2,c
  2922  0009A6  D7D6               	goto	l1524
  2923  0009A8                     l1530:
  2924  0009A8  2A17               	incf	Set_Bits@bitcount,f,c
  2925  0009AA                     l1532:
  2926  0009AA  5017               	movf	Set_Bits@bitcount,w,c
  2927  0009AC  0D01               	mullw	1
  2928  0009AE  50F3               	movf	prodl,w,c
  2929  0009B0  2410               	addwf	Set_Bits@bits,w,c
  2930  0009B2  6E13               	movwf	??_Set_Bits& (0+255),c
  2931  0009B4  50F4               	movf	prodh,w,c
  2932  0009B6  2011               	addwfc	Set_Bits@bits+1,w,c
  2933  0009B8  6E14               	movwf	(??_Set_Bits+1)& (0+255),c
  2934  0009BA  0E00               	movlw	0
  2935  0009BC  2012               	addwfc	Set_Bits@bits+2,w,c
  2936  0009BE  6E15               	movwf	(??_Set_Bits+2)& (0+255),c
  2937  0009C0  C013  FFF6         	movff	??_Set_Bits,tblptrl
  2938  0009C4  C014  FFF7         	movff	??_Set_Bits+1,tblptrh
  2939  0009C8  C015  FFF8         	movff	??_Set_Bits+2,tblptru
  2940  0009CC  0008               	tblrd		*
  2941  0009CE  50F5               	movf	tablat,w,c
  2942  0009D0  0900               	iorlw	0
  2943  0009D2  B4D8               	btfsc	status,2,c
  2944  0009D4  0012               	return	
  2945  0009D6  D7C0               	goto	l1528
  2946  0009D8                     __end_of_Set_Bits:
  2947                           	opt stack 0
  2948                           tblptru	equ	0xFF8
  2949                           tblptrh	equ	0xFF7
  2950                           tblptrl	equ	0xFF6
  2951                           tablat	equ	0xFF5
  2952                           prodh	equ	0xFF4
  2953                           prodl	equ	0xFF3
  2954                           intcon	equ	0xFF2
  2955                           postinc0	equ	0xFEE
  2956                           wreg	equ	0xFE8
  2957                           postdec1	equ	0xFE5
  2958                           fsr1l	equ	0xFE1
  2959                           indf2	equ	0xFDF
  2960                           postinc2	equ	0xFDE
  2961                           postdec2	equ	0xFDD
  2962                           plusw2	equ	0xFDB
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function _Save_Data *****************
  2968 ;; Defined at:
  2969 ;;		line 8 in file "storage.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  store           2   15[COMRAM] unsigned int 
  2972 ;;  store_addres    1   17[COMRAM] unsigned char 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		wreg, status,2, status,0
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1
  2984 ;;      Params:         3       0       0
  2985 ;;      Locals:         0       0       0
  2986 ;;      Temps:          0       0       0
  2987 ;;      Totals:         3       0       0
  2988 ;;Total ram usage:        3 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    2
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_Check_Buttons
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text16
  2999  000A3C                     __ptext16:
  3000                           	opt stack 0
  3001  000A3C                     _Save_Data:
  3002                           	opt stack 27
  3003                           
  3004                           ;storage.c: 10: EEADR = store_address;
  3005                           
  3006                           ;incstack = 0
  3007  000A3C  C012  FFA9         	movff	Save_Data@store_address,4009	;volatile
  3008                           
  3009                           ;storage.c: 11: EEDATA = store;
  3010  000A40  C010  FFA8         	movff	Save_Data@store,4008	;volatile
  3011                           
  3012                           ;storage.c: 12: EECON1bits.EEPGD = 0;
  3013  000A44  9EA6               	bcf	4006,7,c	;volatile
  3014                           
  3015                           ;storage.c: 13: EECON1bits.CFGS = 0;
  3016  000A46  9CA6               	bcf	4006,6,c	;volatile
  3017                           
  3018                           ;storage.c: 14: INTCONbits.GIE = 0;
  3019  000A48  9EF2               	bcf	intcon,7,c	;volatile
  3020                           
  3021                           ;storage.c: 15: EECON1bits.WREN = 1;
  3022  000A4A  84A6               	bsf	4006,2,c	;volatile
  3023                           
  3024                           ;storage.c: 16: EECON2 = 0x55;
  3025  000A4C  0E55               	movlw	85
  3026  000A4E  6EA7               	movwf	4007,c	;volatile
  3027                           
  3028                           ;storage.c: 17: EECON2 = 0xAA;
  3029  000A50  0EAA               	movlw	170
  3030  000A52  6EA7               	movwf	4007,c	;volatile
  3031                           
  3032                           ;storage.c: 18: EECON1bits.WR = 1;
  3033  000A54  82A6               	bsf	4006,1,c	;volatile
  3034  000A56                     l301:
  3035  000A56  A8A1               	btfss	4001,4,c	;volatile
  3036  000A58  D7FE               	goto	l301
  3037                           
  3038                           ;storage.c: 20: PIR2bits.EEIF = 0;
  3039  000A5A  98A1               	bcf	4001,4,c	;volatile
  3040                           
  3041                           ;storage.c: 21: store >>= 8;
  3042  000A5C  5011               	movf	Save_Data@store+1,w,c
  3043  000A5E  6E10               	movwf	Save_Data@store,c
  3044  000A60  6A11               	clrf	Save_Data@store+1,c
  3045                           
  3046                           ;storage.c: 22: store_address += 50;
  3047  000A62  0E32               	movlw	50
  3048  000A64  2612               	addwf	Save_Data@store_address,f,c
  3049                           
  3050                           ;storage.c: 23: EEADR = store_address;
  3051  000A66  C012  FFA9         	movff	Save_Data@store_address,4009	;volatile
  3052                           
  3053                           ;storage.c: 24: EEDATA = store;
  3054  000A6A  C010  FFA8         	movff	Save_Data@store,4008	;volatile
  3055                           
  3056                           ;storage.c: 25: EECON1bits.EEPGD = 0;
  3057  000A6E  9EA6               	bcf	4006,7,c	;volatile
  3058                           
  3059                           ;storage.c: 26: EECON1bits.CFGS = 0;
  3060  000A70  9CA6               	bcf	4006,6,c	;volatile
  3061                           
  3062                           ;storage.c: 27: EECON1bits.WREN = 1;
  3063  000A72  84A6               	bsf	4006,2,c	;volatile
  3064                           
  3065                           ;storage.c: 28: INTCONbits.GIE = 0;
  3066  000A74  9EF2               	bcf	intcon,7,c	;volatile
  3067                           
  3068                           ;storage.c: 29: EECON2 = 0x55;
  3069  000A76  0E55               	movlw	85
  3070  000A78  6EA7               	movwf	4007,c	;volatile
  3071                           
  3072                           ;storage.c: 30: EECON2 = 0xAA;
  3073  000A7A  0EAA               	movlw	170
  3074  000A7C  6EA7               	movwf	4007,c	;volatile
  3075                           
  3076                           ;storage.c: 31: EECON1bits.WR = 1;
  3077  000A7E  82A6               	bsf	4006,1,c	;volatile
  3078  000A80                     l304:
  3079  000A80  A8A1               	btfss	4001,4,c	;volatile
  3080  000A82  D7FE               	goto	l304
  3081                           
  3082                           ;storage.c: 33: PIR2bits.EEIF = 0;
  3083  000A84  98A1               	bcf	4001,4,c	;volatile
  3084                           
  3085                           ;storage.c: 34: EECON1bits.WREN = 0;
  3086  000A86  94A6               	bcf	4006,2,c	;volatile
  3087                           
  3088                           ;storage.c: 35: INTCONbits.GIE = 1;
  3089  000A88  8EF2               	bsf	intcon,7,c	;volatile
  3090  000A8A  0012               	return		;funcret
  3091  000A8C                     __end_of_Save_Data:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           intcon	equ	0xFF2
  3100                           postinc0	equ	0xFEE
  3101                           wreg	equ	0xFE8
  3102                           postdec1	equ	0xFE5
  3103                           fsr1l	equ	0xFE1
  3104                           indf2	equ	0xFDF
  3105                           postinc2	equ	0xFDE
  3106                           postdec2	equ	0xFDD
  3107                           plusw2	equ	0xFDB
  3108                           fsr2h	equ	0xFDA
  3109                           fsr2l	equ	0xFD9
  3110                           status	equ	0xFD8
  3111                           
  3112 ;; *************** function _Read_Data *****************
  3113 ;; Defined at:
  3114 ;;		line 44 in file "storage.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  read_address    1    wreg     unsigned char 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  read_address    1   19[COMRAM] unsigned char 
  3119 ;;  data_read       2   17[COMRAM] unsigned int 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  2   15[COMRAM] unsigned int 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2, status,0
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1
  3129 ;;      Params:         2       0       0
  3130 ;;      Locals:         3       0       0
  3131 ;;      Temps:          0       0       0
  3132 ;;      Totals:         5       0       0
  3133 ;;Total ram usage:        5 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    2
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_Check_Buttons
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text17
  3144  000B14                     __ptext17:
  3145                           	opt stack 0
  3146  000B14                     _Read_Data:
  3147                           	opt stack 27
  3148                           
  3149                           ;incstack = 0
  3150                           ;Read_Data@read_address stored from wreg
  3151  000B14  6E14               	movwf	Read_Data@read_address,c
  3152                           
  3153                           ;storage.c: 45: unsigned int data_read = 0;
  3154  000B16  0E00               	movlw	0
  3155  000B18  6E13               	movwf	Read_Data@data_read+1,c
  3156  000B1A  0E00               	movlw	0
  3157  000B1C  6E12               	movwf	Read_Data@data_read,c
  3158                           
  3159                           ;storage.c: 46: read_address += 50;
  3160  000B1E  0E32               	movlw	50
  3161  000B20  2614               	addwf	Read_Data@read_address,f,c
  3162                           
  3163                           ;storage.c: 47: EEADR = read_address;
  3164  000B22  C014  FFA9         	movff	Read_Data@read_address,4009	;volatile
  3165                           
  3166                           ;storage.c: 48: EECON1bits.EEPGD = 0;
  3167  000B26  9EA6               	bcf	4006,7,c	;volatile
  3168                           
  3169                           ;storage.c: 49: EECON1bits.CFGS = 0;
  3170  000B28  9CA6               	bcf	4006,6,c	;volatile
  3171                           
  3172                           ;storage.c: 50: EECON1bits.RD = 1;
  3173  000B2A  80A6               	bsf	4006,0,c	;volatile
  3174                           
  3175                           ;storage.c: 51: data_read = EEDATA;
  3176  000B2C  CFA8 F012          	movff	4008,Read_Data@data_read	;volatile
  3177  000B30  6A13               	clrf	Read_Data@data_read+1,c
  3178                           
  3179                           ;storage.c: 52: read_address -= 50;
  3180  000B32  0E32               	movlw	50
  3181  000B34  5E14               	subwf	Read_Data@read_address,f,c
  3182                           
  3183                           ;storage.c: 53: data_read <<= 8;
  3184  000B36  5012               	movf	Read_Data@data_read,w,c
  3185  000B38  6E13               	movwf	Read_Data@data_read+1,c
  3186  000B3A  6A12               	clrf	Read_Data@data_read,c
  3187                           
  3188                           ;storage.c: 54: EEADR = read_address;
  3189  000B3C  C014  FFA9         	movff	Read_Data@read_address,4009	;volatile
  3190                           
  3191                           ;storage.c: 55: EECON1bits.EEPGD = 0;
  3192  000B40  9EA6               	bcf	4006,7,c	;volatile
  3193                           
  3194                           ;storage.c: 56: EECON1bits.CFGS = 0;
  3195  000B42  9CA6               	bcf	4006,6,c	;volatile
  3196                           
  3197                           ;storage.c: 57: EECON1bits.RD = 1;
  3198  000B44  80A6               	bsf	4006,0,c	;volatile
  3199                           
  3200                           ;storage.c: 58: data_read |= EEDATA;
  3201  000B46  50A8               	movf	4008,w,c	;volatile
  3202  000B48  1212               	iorwf	Read_Data@data_read,f,c
  3203                           
  3204                           ;storage.c: 59: return data_read;
  3205  000B4A  C012  F010         	movff	Read_Data@data_read,?_Read_Data
  3206  000B4E  C013  F011         	movff	Read_Data@data_read+1,?_Read_Data+1
  3207  000B52  0012               	return	
  3208  000B54                     __end_of_Read_Data:
  3209                           	opt stack 0
  3210                           tblptru	equ	0xFF8
  3211                           tblptrh	equ	0xFF7
  3212                           tblptrl	equ	0xFF6
  3213                           tablat	equ	0xFF5
  3214                           prodh	equ	0xFF4
  3215                           prodl	equ	0xFF3
  3216                           intcon	equ	0xFF2
  3217                           postinc0	equ	0xFEE
  3218                           wreg	equ	0xFE8
  3219                           postdec1	equ	0xFE5
  3220                           fsr1l	equ	0xFE1
  3221                           indf2	equ	0xFDF
  3222                           postinc2	equ	0xFDE
  3223                           postdec2	equ	0xFDD
  3224                           plusw2	equ	0xFDB
  3225                           fsr2h	equ	0xFDA
  3226                           fsr2l	equ	0xFD9
  3227                           status	equ	0xFD8
  3228                           
  3229 ;; *************** function _Delay_Routine *****************
  3230 ;; Defined at:
  3231 ;;		line 78 in file "main.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  delay_multip    1    wreg     unsigned char 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  delay_multip    1   16[COMRAM] unsigned char 
  3236 ;;  delay_counte    1   17[COMRAM] unsigned char 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;		None               void
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMRAM   BANK0   BANK1
  3246 ;;      Params:         0       0       0
  3247 ;;      Locals:         2       0       0
  3248 ;;      Temps:          1       0       0
  3249 ;;      Totals:         3       0       0
  3250 ;;Total ram usage:        3 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    2
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_Check_Buttons
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text18
  3261  000C00                     __ptext18:
  3262                           	opt stack 0
  3263  000C00                     _Delay_Routine:
  3264                           	opt stack 27
  3265                           
  3266                           ;incstack = 0
  3267                           ;Delay_Routine@delay_multiplyer stored from wreg
  3268  000C00  6E11               	movwf	Delay_Routine@delay_multiplyer,c
  3269                           
  3270                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  3271  000C02  0E00               	movlw	0
  3272  000C04  6E12               	movwf	Delay_Routine@delay_counter,c
  3273                           
  3274                           ;main.c: 80: delay_counter++) {
  3275  000C06  D008               	goto	l1610
  3276  000C08                     l1606:
  3277                           
  3278                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  3279  000C08  0E82               	movlw	130
  3280  000C0A  6E10               	movwf	??_Delay_Routine& (0+255),c
  3281  000C0C  0EDE               	movlw	222
  3282  000C0E                     u827:
  3283  000C0E  2EE8               	decfsz	wreg,f,c
  3284  000C10  D7FE               	goto	u827
  3285  000C12  2E10               	decfsz	??_Delay_Routine& (0+255),f,c
  3286  000C14  D7FC               	goto	u827
  3287  000C16  2A12               	incf	Delay_Routine@delay_counter,f,c
  3288  000C18                     l1610:
  3289  000C18  5011               	movf	Delay_Routine@delay_multiplyer,w,c
  3290  000C1A  5C12               	subwf	Delay_Routine@delay_counter,w,c
  3291  000C1C  A0D8               	btfss	status,0,c
  3292  000C1E  D7F4               	goto	l1606
  3293                           
  3294                           ;main.c: 82: }
  3295                           ;main.c: 83: __nop();
  3296  000C20  F000               	nop	
  3297  000C22  0012               	return		;funcret
  3298  000C24                     __end_of_Delay_Routine:
  3299                           	opt stack 0
  3300                           tblptru	equ	0xFF8
  3301                           tblptrh	equ	0xFF7
  3302                           tblptrl	equ	0xFF6
  3303                           tablat	equ	0xFF5
  3304                           prodh	equ	0xFF4
  3305                           prodl	equ	0xFF3
  3306                           intcon	equ	0xFF2
  3307                           postinc0	equ	0xFEE
  3308                           wreg	equ	0xFE8
  3309                           postdec1	equ	0xFE5
  3310                           fsr1l	equ	0xFE1
  3311                           indf2	equ	0xFDF
  3312                           postinc2	equ	0xFDE
  3313                           postdec2	equ	0xFDD
  3314                           plusw2	equ	0xFDB
  3315                           fsr2h	equ	0xFDA
  3316                           fsr2l	equ	0xFD9
  3317                           status	equ	0xFD8
  3318                           
  3319 ;; *************** function _Isr *****************
  3320 ;; Defined at:
  3321 ;;		line 3 in file "interrupt.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  received        1   14[COMRAM] unsigned char 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;		None               void
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1
  3335 ;;      Params:         0       0       0
  3336 ;;      Locals:         1       0       0
  3337 ;;      Temps:         14       0       0
  3338 ;;      Totals:        15       0       0
  3339 ;;Total ram usage:       15 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    1
  3342 ;; This function calls:
  3343 ;;		_Receive
  3344 ;; This function is called by:
  3345 ;;		Interrupt level 2
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	intcode
  3350  000008                     __pintcode:
  3351                           	opt stack 0
  3352  000008                     _Isr:
  3353                           	opt stack 24
  3354                           
  3355                           ;incstack = 0
  3356  000008  8235               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3357  00000A  CFFA F001          	movff	pclath,??_Isr
  3358  00000E  CFFB F002          	movff	pclatu,??_Isr+1
  3359  000012  CFE9 F003          	movff	fsr0l,??_Isr+2
  3360  000016  CFEA F004          	movff	fsr0h,??_Isr+3
  3361  00001A  CFE1 F005          	movff	fsr1l,??_Isr+4
  3362  00001E  CFE2 F006          	movff	fsr1h,??_Isr+5
  3363  000022  CFD9 F007          	movff	fsr2l,??_Isr+6
  3364  000026  CFDA F008          	movff	fsr2h,??_Isr+7
  3365  00002A  CFF3 F009          	movff	prodl,??_Isr+8
  3366  00002E  CFF4 F00A          	movff	prodh,??_Isr+9
  3367  000032  CFF6 F00B          	movff	tblptrl,??_Isr+10
  3368  000036  CFF7 F00C          	movff	tblptrh,??_Isr+11
  3369  00003A  CFF8 F00D          	movff	tblptru,??_Isr+12
  3370  00003E  CFF5 F00E          	movff	tablat,??_Isr+13
  3371                           
  3372                           ;interrupt.c: 4: if(PIR1bits.RCIF == 1) {
  3373  000042  AA9E               	btfss	3998,5,c	;volatile
  3374  000044  D012               	goto	i2l476
  3375                           
  3376                           ;interrupt.c: 5: PIR1bits.RCIF = 0;
  3377  000046  9A9E               	bcf	3998,5,c	;volatile
  3378                           
  3379                           ;interrupt.c: 6: unsigned char received = 0;
  3380  000048  0E00               	movlw	0
  3381  00004A  6E0F               	movwf	Isr@received,c
  3382                           
  3383                           ;interrupt.c: 7: received = Receive();
  3384  00004C  EC3D  F006         	call	_Receive	;wreg free
  3385  000050  6E0F               	movwf	Isr@received,c
  3386                           
  3387                           ;interrupt.c: 8: __nop();
  3388  000052  F000               	nop	
  3389                           
  3390                           ;interrupt.c: 9: if(received == '1' || received == 'L') {
  3391  000054  0E31               	movlw	49
  3392  000056  180F               	xorwf	Isr@received,w,c
  3393  000058  B4D8               	btfsc	status,2,c
  3394  00005A  D004               	goto	i2l479
  3395  00005C  0E4C               	movlw	76
  3396  00005E  180F               	xorwf	Isr@received,w,c
  3397  000060  A4D8               	btfss	status,2,c
  3398  000062  D002               	goto	i2l477
  3399  000064                     i2l479:
  3400                           
  3401                           ;interrupt.c: 10: PORTAbits.RA0 = 1;
  3402  000064  8080               	bsf	3968,0,c	;volatile
  3403                           
  3404                           ;interrupt.c: 11: }else {
  3405  000066  D001               	goto	i2l476
  3406  000068                     i2l477:
  3407                           
  3408                           ;interrupt.c: 12: PORTAbits.RA0 = 0;
  3409  000068  9080               	bcf	3968,0,c	;volatile
  3410  00006A                     i2l476:
  3411                           
  3412                           ;interrupt.c: 13: }
  3413                           ;interrupt.c: 14: }if(PIR1bits.CCP1IF == 1) {
  3414  00006A  A49E               	btfss	3998,2,c	;volatile
  3415  00006C  D003               	goto	i2l482
  3416                           
  3417                           ;interrupt.c: 15: PIR1bits.CCP1IF = 0;
  3418  00006E  949E               	bcf	3998,2,c	;volatile
  3419                           
  3420                           ;interrupt.c: 16: current_time++;
  3421  000070  4A2B               	infsnz	_current_time,f,c
  3422  000072  2A2C               	incf	_current_time+1,f,c
  3423  000074                     i2l482:
  3424  000074  C00E  FFF5         	movff	??_Isr+13,tablat
  3425  000078  C00D  FFF8         	movff	??_Isr+12,tblptru
  3426  00007C  C00C  FFF7         	movff	??_Isr+11,tblptrh
  3427  000080  C00B  FFF6         	movff	??_Isr+10,tblptrl
  3428  000084  C00A  FFF4         	movff	??_Isr+9,prodh
  3429  000088  C009  FFF3         	movff	??_Isr+8,prodl
  3430  00008C  C008  FFDA         	movff	??_Isr+7,fsr2h
  3431  000090  C007  FFD9         	movff	??_Isr+6,fsr2l
  3432  000094  C006  FFE2         	movff	??_Isr+5,fsr1h
  3433  000098  C005  FFE1         	movff	??_Isr+4,fsr1l
  3434  00009C  C004  FFEA         	movff	??_Isr+3,fsr0h
  3435  0000A0  C003  FFE9         	movff	??_Isr+2,fsr0l
  3436  0000A4  C002  FFFB         	movff	??_Isr+1,pclatu
  3437  0000A8  C001  FFFA         	movff	??_Isr,pclath
  3438  0000AC  9235               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3439  0000AE  0011               	retfie		f
  3440  0000B0                     __end_of_Isr:
  3441                           	opt stack 0
  3442                           pclatu	equ	0xFFB
  3443                           pclath	equ	0xFFA
  3444                           tblptru	equ	0xFF8
  3445                           tblptrh	equ	0xFF7
  3446                           tblptrl	equ	0xFF6
  3447                           tablat	equ	0xFF5
  3448                           prodh	equ	0xFF4
  3449                           prodl	equ	0xFF3
  3450                           intcon	equ	0xFF2
  3451                           postinc0	equ	0xFEE
  3452                           fsr0h	equ	0xFEA
  3453                           fsr0l	equ	0xFE9
  3454                           wreg	equ	0xFE8
  3455                           postdec1	equ	0xFE5
  3456                           fsr1h	equ	0xFE2
  3457                           fsr1l	equ	0xFE1
  3458                           indf2	equ	0xFDF
  3459                           postinc2	equ	0xFDE
  3460                           postdec2	equ	0xFDD
  3461                           plusw2	equ	0xFDB
  3462                           fsr2h	equ	0xFDA
  3463                           fsr2l	equ	0xFD9
  3464                           status	equ	0xFD8
  3465                           
  3466 ;; *************** function _Receive *****************
  3467 ;; Defined at:
  3468 ;;		line 32 in file "communication.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      unsigned char 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1
  3482 ;;      Params:         0       0       0
  3483 ;;      Locals:         0       0       0
  3484 ;;      Temps:          0       0       0
  3485 ;;      Totals:         0       0       0
  3486 ;;Total ram usage:        0 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_Isr
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text20
  3496  000C7A                     __ptext20:
  3497                           	opt stack 0
  3498  000C7A                     _Receive:
  3499                           	opt stack 24
  3500                           
  3501                           ;communication.c: 33: if(RCSTA1bits.OERR == 1) {
  3502                           
  3503                           ;incstack = 0
  3504  000C7A  A2AB               	btfss	4011,1,c	;volatile
  3505  000C7C  D004               	goto	i2l437
  3506                           
  3507                           ;communication.c: 34: RCSTA1bits.CREN = 0;
  3508  000C7E  98AB               	bcf	4011,4,c	;volatile
  3509                           
  3510                           ;communication.c: 35: RCSTA1bits.CREN = 1;
  3511  000C80  88AB               	bsf	4011,4,c	;volatile
  3512                           
  3513                           ;communication.c: 36: overrun = 1;
  3514  000C82  0E01               	movlw	1
  3515  000C84  6E2E               	movwf	_overrun,c
  3516  000C86                     i2l437:
  3517                           
  3518                           ;communication.c: 37: }
  3519                           ;communication.c: 39: return (RCREG1);
  3520  000C86  50AE               	movf	4014,w,c	;volatile
  3521  000C88  0012               	return	
  3522  000C8A                     __end_of_Receive:
  3523                           	opt stack 0
  3524                           pclatu	equ	0xFFB
  3525                           pclath	equ	0xFFA
  3526                           tblptru	equ	0xFF8
  3527                           tblptrh	equ	0xFF7
  3528                           tblptrl	equ	0xFF6
  3529                           tablat	equ	0xFF5
  3530                           prodh	equ	0xFF4
  3531                           prodl	equ	0xFF3
  3532                           intcon	equ	0xFF2
  3533                           postinc0	equ	0xFEE
  3534                           fsr0h	equ	0xFEA
  3535                           fsr0l	equ	0xFE9
  3536                           wreg	equ	0xFE8
  3537                           postdec1	equ	0xFE5
  3538                           fsr1h	equ	0xFE2
  3539                           fsr1l	equ	0xFE1
  3540                           indf2	equ	0xFDF
  3541                           postinc2	equ	0xFDE
  3542                           postdec2	equ	0xFDD
  3543                           plusw2	equ	0xFDB
  3544                           fsr2h	equ	0xFDA
  3545                           fsr2l	equ	0xFD9
  3546                           status	equ	0xFD8
  3547                           pclatu	equ	0xFFB
  3548                           pclath	equ	0xFFA
  3549                           tblptru	equ	0xFF8
  3550                           tblptrh	equ	0xFF7
  3551                           tblptrl	equ	0xFF6
  3552                           tablat	equ	0xFF5
  3553                           prodh	equ	0xFF4
  3554                           prodl	equ	0xFF3
  3555                           intcon	equ	0xFF2
  3556                           postinc0	equ	0xFEE
  3557                           fsr0h	equ	0xFEA
  3558                           fsr0l	equ	0xFE9
  3559                           wreg	equ	0xFE8
  3560                           postdec1	equ	0xFE5
  3561                           fsr1h	equ	0xFE2
  3562                           fsr1l	equ	0xFE1
  3563                           indf2	equ	0xFDF
  3564                           postinc2	equ	0xFDE
  3565                           postdec2	equ	0xFDD
  3566                           plusw2	equ	0xFDB
  3567                           fsr2h	equ	0xFDA
  3568                           fsr2l	equ	0xFD9
  3569                           status	equ	0xFD8
  3570                           
  3571                           	psect	rparam
  3572  0000                     pclatu	equ	0xFFB
  3573                           pclath	equ	0xFFA
  3574                           tblptru	equ	0xFF8
  3575                           tblptrh	equ	0xFF7
  3576                           tblptrl	equ	0xFF6
  3577                           tablat	equ	0xFF5
  3578                           prodh	equ	0xFF4
  3579                           prodl	equ	0xFF3
  3580                           intcon	equ	0xFF2
  3581                           postinc0	equ	0xFEE
  3582                           fsr0h	equ	0xFEA
  3583                           fsr0l	equ	0xFE9
  3584                           wreg	equ	0xFE8
  3585                           postdec1	equ	0xFE5
  3586                           fsr1h	equ	0xFE2
  3587                           fsr1l	equ	0xFE1
  3588                           indf2	equ	0xFDF
  3589                           postinc2	equ	0xFDE
  3590                           postdec2	equ	0xFDD
  3591                           plusw2	equ	0xFDB
  3592                           fsr2h	equ	0xFDA
  3593                           fsr2l	equ	0xFD9
  3594                           status	equ	0xFD8
  3595                           
  3596                           	psect	temp
  3597  000035                     btemp:
  3598                           	opt stack 0
  3599  000035                     	ds	1
  3600  0000                     int$flags	set	btemp
  3601                           pclatu	equ	0xFFB
  3602                           pclath	equ	0xFFA
  3603                           tblptru	equ	0xFF8
  3604                           tblptrh	equ	0xFF7
  3605                           tblptrl	equ	0xFF6
  3606                           tablat	equ	0xFF5
  3607                           prodh	equ	0xFF4
  3608                           prodl	equ	0xFF3
  3609                           intcon	equ	0xFF2
  3610                           postinc0	equ	0xFEE
  3611                           fsr0h	equ	0xFEA
  3612                           fsr0l	equ	0xFE9
  3613                           wreg	equ	0xFE8
  3614                           postdec1	equ	0xFE5
  3615                           fsr1h	equ	0xFE2
  3616                           fsr1l	equ	0xFE1
  3617                           indf2	equ	0xFDF
  3618                           postinc2	equ	0xFDE
  3619                           postdec2	equ	0xFDD
  3620                           plusw2	equ	0xFDB
  3621                           fsr2h	equ	0xFDA
  3622                           fsr2l	equ	0xFD9
  3623                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    0
    Data        180
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      52
    BANK0           160      0       0
    BANK1           256      0     180

Pointer List with Targets:

    Evaluate_Display@evaluate	PTR unsigned char  size(2) Largest target is 3
		 -> signs(COMRAM[3]), 

    Set_Bits@bits	PTR const unsigned char  size(3) Largest target is 8191
		 -> ROM(CODE[8191]), STR_13(CODE[2]), STR_12(CODE[7]), STR_11(CODE[6]), 
		 -> STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[7]), 
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[3]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_Check_Buttons
    _Check_Buttons->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits

Critical Paths under _Isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8580
                      _Check_Buttons
                   _Check_Detonators
                               _Init
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Detonators                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0    4522
                                             33 COMRAM     2     2      0
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Set_Display                                          4     1      3    4058
                                             29 COMRAM     4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
 ---------------------------------------------------------------------------------
 (2) _Evaluate_Signs                                       3     1      2    1630
                                             26 COMRAM     3     1      2
                   _Evaluate_Display
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Display                                     3     1      2    1166
                                             23 COMRAM     3     1      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (4) _Set_Bits                                             8     5      3     994
                                             15 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     346
                                             15 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2      72
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      46
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Isr                                                 15    15      0      30
                                              0 COMRAM    15    15      0
                            _Receive
 ---------------------------------------------------------------------------------
 (7) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
   _Check_Detonators
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Set_Display
     _Evaluate_Display
       _Set_Bits
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
       ___lwmod

 _Isr (ROOT)
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     23      34       1       55.3%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E8       6        0.0%
DATA                 0      0      E8       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Dec 13 21:17:37 2016

      Evaluate_Display@evaluate 0018                              l90 039C                              l82 025C  
                            l94 0444                              l86 0302                              l98 057E  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                             l301 0A56  
                           l304 0A80                             l374 0A2A                             l895 0B0A  
                  __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000                             u827 0C0E  
                           _Isr 0008                             _pin 0100                  _Evaluate_Signs 09D8  
                           prod 000FF3                             wreg 000FE8               Set_Bits@Bitoutput 0016  
                    _TXSTA1bits 000FAC                    __CFG_LVP$OFF 000000                            ?_Isr 0001  
                          l1520 094C                            l1512 093C                            l1610 0C18  
                          l1522 0950                            l1514 0940                            l1530 09A8  
                          l1524 0954                            l1516 0944                            l1532 09AA  
                          l1540 06F6                            l1606 0C08                            l1518 0948  
                          l1550 076E                            l1542 070E                            l1614 0A90  
                          l1630 0AC6                            l1528 0958                            l1560 07E6  
                          l1552 0786                            l1544 0726                            l1536 06C6  
                          l1800 059A                            l1562 07FE                            l1554 079E  
                          l1546 073E                            l1538 06DE                            l1626 0AB8  
                          l1722 036C                            l1556 07B6                            l1548 0756  
                          l1564 0810                            l1708 02D2                            l1558 07CE  
                          l1566 0872                            l1582 0B00                            l1574 0AE0  
                          l1830 0BBC                            l1568 0874                            l1576 0AE8  
                          l1592 09E4                            l1808 05E6                            l1736 0414  
                          l1578 0AEC                            l1762 04AE                            l1754 0460  
                          l1588 09DC                            l1772 04C4                            l1766 04B8  
                          l1774 04D8                            l1758 04A4                            STR_1 0209  
                          STR_2 0243                            STR_3 022B                            STR_4 0225  
                          STR_5 023D                            STR_6 0231                            STR_7 021E  
                          STR_8 0242                            STR_9 0201                            _Init 0C24  
                          _main 0BB8                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            btemp 0035  
                 __CFG_BORV$190 000000                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 00B0                   __CFG_IESO$OFF 000000  
                Save_Data@store 0010                    ___param_bank 000010                   _InitInterrupt 0C8A  
                         ??_Isr 0001                 __end_of_Receive 0C8A                    _BAUDCON1bits 000FB8  
                         ?_Init 0001                           ?_main 0001                           _EEADR 000FA9  
                         STR_10 0210                           STR_11 0237                           STR_12 0217  
                         STR_13 0229          __end_of_Evaluate_Signs 0A3C               _InitMiscellaneous 0C94  
               __end_of___lwmod 0B14                           i2l437 0C86                           i2l482 0074  
                         i2l476 006A                           i2l477 0068                           i2l479 0064  
                         _TMR1H 000FCF                           _TMR1L 000FCE                           _PORTA 000F80  
                         _PORTB 000F81                           _PORTC 000F82                           _PORTE 000F84  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISE 000F96                   __CFG_WRT0$OFF 000000        __end_of_InitTransmission 0C00  
                 __CFG_WRT1$OFF 000000              ?_InitMiscellaneous 0001                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                _Evaluate_Display 06BE  
                __CFG_EBTRB$OFF 000000                           _signs 0031              __CFG_MCLRE$EXTMCLR 000000  
                   Isr@received 000F                  __pbitbssCOMRAM 01A0                  __CFG_BOREN$OFF 000000  
           ??_InitMiscellaneous 0010                           tablat 000FF5                           plusw2 000FDB  
                         status 000FD8                  ?_InitInterrupt 0001                 __initialization 0B54  
                  __end_of_Init 0C42                    __end_of_main 0BDC                __end_of_InitPort 0C7A  
              __end_of_InitTris 0C68          Set_Display@information 001E       __end_of_InitMiscellaneous 0C9A  
                        ??_Init 0010                   ??_Set_Display 0021                          ??_main 0024  
              __end_of_Set_Bits 09D8                 ?_Evaluate_Signs 001B                   __activetblptr 000002  
                        _EEDATA 000FA8                          _CCPR1H 000FBF                          _CCPR1L 000FBE  
                        _EECON2 000FA7                          _ANSELA 000F38                          _ANSELB 000F39  
                        _ANSELC 000F3A                  __CFG_WDTEN$OFF 000000                          _RCREG1 000FAE  
                        _OSCCON 000FD3              __size_of_InitAnsel 0014                          _SPBRG1 000FAF  
                        _SSP1IF 007CF3              __size_of_Read_Data 0040              __size_of_InitTimer 0028  
                        _TXREG1 000FAD                       ??_Receive 0001                  __CFG_XINST$OFF 000000  
                  _CCPTMRS0bits 000F49              __size_of_Save_Data 0050                       ??___lwmod 0014  
                        clear_0 0B5C                          _pixels 0024          __size_of_Check_Buttons 0476  
Evaluate_Signs@evaluation_value 001B                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8             __end_of_Set_Display 0AD2  
               __CFG_HFOFST$OFF 000000                      __accesstop 0060         __end_of__initialization 0B82  
               __CFG_PBADEN$OFF 000000                 ??_InitInterrupt 0010                   ___rparam_used 000001  
                __pcstackCOMRAM 0001       __size_of_Check_Detonators 0002                    __pidataBANK1 087E  
    __size_of_InitMiscellaneous 0006               __end_of_InitAnsel 0C56               __end_of_Read_Data 0B54  
             __end_of_InitTimer 0BB8               __end_of_Save_Data 0A8C                 __CFG_PLLCFG$OFF 000000  
                 _Check_Buttons 0248                       ?_InitPort 0001                       ?_InitTris 0001  
                     ?_Set_Bits 0010              __CFG_CCP2MX$PORTC1 000000        __end_of_Evaluate_Display 087E  
            __CFG_CCP3MX$PORTB5 000000                     _Set_Display 0A8C          __size_of_Delay_Routine 0024  
             ?_InitTransmission 0001               __CFG_PRICLKEN$OFF 000000                         _SSP1BUF 000FC9  
            ??_InitTransmission 0010                  ?_Check_Buttons 0001                      ??_InitPort 0010  
                    ??_InitTris 0010                      ??_Set_Bits 0013                 __CFG_PWRTEN$OFF 000000  
                       _Receive 0C7A                         __Hparam 0000                         __Lparam 0000  
              ??_Evaluate_Signs 001D                         ___lwmod 0AD2                    __psmallconst 0200  
               __CFG_STVREN$OFF 000000                         __pcinit 0B54                         __ramtop 0200  
                       __ptext0 0BB8                         __ptext1 0C24                         __ptext2 0C56  
                       __ptext3 0BDC                         __ptext4 0B90                         __ptext5 0C68  
                       __ptext6 0C94                         __ptext7 0C8A                         __ptext8 0C42  
                       __ptext9 0C9A                       _T1CONbits 000FCD                    __size_of_Isr 00A8  
               Set_Display@type 0021                       _T3CONbits 000FB1                         _overrun 002E  
          end_of_initialization 0B82                   __Lmediumconst 0000                   _Delay_Routine 0C00  
              _Check_Detonators 0C9A                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTCbits 000F82                       _TRISCbits 000F94  
               ??_Check_Buttons 0022                  ?_Delay_Routine 0001                     _CCP1CONbits 000FBD  
                  Set_Bits@bits 0010             start_initialization 0B54                       _InitAnsel 0C42  
                  _ignite_ready 01A0                     __end_of_Isr 00B0                       _Read_Data 0B14  
                     _InitTimer 0B90                Set_Bits@bitcount 0017                       _Save_Data 0A3C  
             __size_of_InitPort 0012               __size_of_InitTris 0012           __end_of_InitInterrupt 0C94  
             __size_of_Set_Bits 00A6               ?_Evaluate_Display 0018                     __pdataBANK1 0100  
            ??_Evaluate_Display 001A                  _slave_selected 0030                    ?_Set_Display 001E  
        Save_Data@store_address 0012                     __pbssCOMRAM 0024                      ?_InitAnsel 0001  
                    ?_Read_Data 0010                      ?_InitTimer 0001                 ??_Delay_Routine 0010  
                    ?_Save_Data 0010                    _current_time 002B                        ?_Receive 0001  
     __size_of_InitTransmission 0024           Read_Data@read_address 0014                       __pintcode 0008  
                      ?___lwmod 0010                     __smallconst 0200        __end_of_Check_Detonators 0C9C  
                      _PIE1bits 000F9D                        _PIR1bits 000F9E                        _PIR2bits 000FA1  
              __CFG_WDTPS$32768 000000                        _SSP1CON1 000FC6                        _SSP1STAT 000FC7  
                   ??_InitAnsel 0010                     ??_Read_Data 0012                     ??_InitTimer 0010  
                     copy_data0 0B76                        _InitPort 0C68                        _InitTris 0C56  
                   ??_Save_Data 0013                      _EECON1bits 000FA6                        _Set_Bits 0932  
                  _pin_selected 002F                        __Hrparam 0000                __size_of_Receive 0010  
                      __Lrparam 0000               __CFG_P2BMX$PORTB5 000000                __size_of___lwmod 0042  
          __size_of_Set_Display 0046         __size_of_Evaluate_Signs 0064                        __ptext10 0248  
                      __ptext11 0A8C                        __ptext20 0C7A                        __ptext12 09D8  
                      __ptext13 0AD2                        __ptext14 06BE                        __ptext15 0932  
                      __ptext16 0A3C                        __ptext17 0B14                        __ptext18 0C00  
         __end_of_Check_Buttons 06BE                Set_Display@value 001F                   __size_of_Init 001E  
                 __size_of_main 0024                _InitTransmission 0BDC      Delay_Routine@delay_counter 0012  
                      _testflag 01A1                        int$flags 0035            Evaluate_Display@size 001A  
    Evaluate_Signs@valuecounter 001D                      _INTCONbits 000FF2       __size_of_Evaluate_Display 01C0  
            Read_Data@data_read 0012                        intlevel2 0000                ___lwmod@dividend 0010  
                    _RCSTA1bits 000FAB                 _display_counter 002D                 ___lwmod@divisor 0012  
 Delay_Routine@delay_multiplyer 0011                 ___lwmod@counter 0014               __CFG_T3CMX$PORTC0 000000  
        __size_of_InitInterrupt 000A               ?_Check_Detonators 0001              ??_Check_Detonators 0010  
         __end_of_Delay_Routine 0C24               __CFG_FOSC$INTIO67 000000  
