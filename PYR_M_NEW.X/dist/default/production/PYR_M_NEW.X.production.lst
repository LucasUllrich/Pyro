

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Nov 26 23:47:26 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           	psect	idataBANK1
    39  000678                     __pidataBANK1:
    40                           	opt stack 0
    41                           
    42                           ;initializer for _pin
    43  000678  00                 	db	0
    44  000679  00                 	db	0
    45  00067A  00                 	db	0
    46  00067B  1F                 	db	31
    47  00067C  00                 	db	0
    48  00067D  00                 	db	0
    49  00067E  00                 	db	0
    50  00067F  01                 	db	1
    51  000680  01                 	db	1
    52  000681  1E                 	db	30
    53  000682  00                 	db	0
    54  000683  00                 	db	0
    55  000684  00                 	db	0
    56  000685  02                 	db	2
    57  000686  02                 	db	2
    58  000687  1D                 	db	29
    59  000688  00                 	db	0
    60  000689  00                 	db	0
    61  00068A  00                 	db	0
    62  00068B  03                 	db	3
    63  00068C  03                 	db	3
    64  00068D  1C                 	db	28
    65  00068E  00                 	db	0
    66  00068F  00                 	db	0
    67  000690  00                 	db	0
    68  000691  04                 	db	4
    69  000692  04                 	db	4
    70  000693  1B                 	db	27
    71  000694  00                 	db	0
    72  000695  00                 	db	0
    73  000696  00                 	db	0
    74  000697  05                 	db	5
    75  000698  05                 	db	5
    76  000699  1A                 	db	26
    77  00069A  00                 	db	0
    78  00069B  00                 	db	0
    79  00069C  00                 	db	0
    80  00069D  06                 	db	6
    81  00069E  06                 	db	6
    82  00069F  19                 	db	25
    83  0006A0  00                 	db	0
    84  0006A1  00                 	db	0
    85  0006A2  00                 	db	0
    86  0006A3  07                 	db	7
    87  0006A4  07                 	db	7
    88  0006A5  18                 	db	24
    89  0006A6  00                 	db	0
    90  0006A7  00                 	db	0
    91  0006A8  00                 	db	0
    92  0006A9  08                 	db	8
    93  0006AA  08                 	db	8
    94  0006AB  27                 	db	39
    95  0006AC  00                 	db	0
    96  0006AD  00                 	db	0
    97  0006AE  00                 	db	0
    98  0006AF  09                 	db	9
    99  0006B0  09                 	db	9
   100  0006B1  26                 	db	38
   101  0006B2  00                 	db	0
   102  0006B3  00                 	db	0
   103  0006B4  01                 	db	1
   104  0006B5  00                 	db	0
   105  0006B6  0A                 	db	10
   106  0006B7  25                 	db	37
   107  0006B8  00                 	db	0
   108  0006B9  00                 	db	0
   109  0006BA  01                 	db	1
   110  0006BB  01                 	db	1
   111  0006BC  0B                 	db	11
   112  0006BD  24                 	db	36
   113  0006BE  00                 	db	0
   114  0006BF  00                 	db	0
   115  0006C0  01                 	db	1
   116  0006C1  02                 	db	2
   117  0006C2  0C                 	db	12
   118  0006C3  23                 	db	35
   119  0006C4  00                 	db	0
   120  0006C5  00                 	db	0
   121  0006C6  01                 	db	1
   122  0006C7  03                 	db	3
   123  0006C8  0D                 	db	13
   124  0006C9  22                 	db	34
   125  0006CA  00                 	db	0
   126  0006CB  00                 	db	0
   127  0006CC  01                 	db	1
   128  0006CD  04                 	db	4
   129  0006CE  0E                 	db	14
   130  0006CF  21                 	db	33
   131  0006D0  00                 	db	0
   132  0006D1  00                 	db	0
   133  0006D2  01                 	db	1
   134  0006D3  05                 	db	5
   135  0006D4  0F                 	db	15
   136  0006D5  20                 	db	32
   137  0006D6  00                 	db	0
   138  0006D7  00                 	db	0
   139  0006D8  01                 	db	1
   140  0006D9  06                 	db	6
   141  0006DA  10                 	db	16
   142  0006DB  2F                 	db	47
   143  0006DC  00                 	db	0
   144  0006DD  00                 	db	0
   145  0006DE  01                 	db	1
   146  0006DF  07                 	db	7
   147  0006E0  11                 	db	17
   148  0006E1  2E                 	db	46
   149  0006E2  00                 	db	0
   150  0006E3  00                 	db	0
   151  0006E4  01                 	db	1
   152  0006E5  08                 	db	8
   153  0006E6  12                 	db	18
   154  0006E7  2D                 	db	45
   155  0006E8  00                 	db	0
   156  0006E9  00                 	db	0
   157  0006EA  01                 	db	1
   158  0006EB  09                 	db	9
   159  0006EC  13                 	db	19
   160  0006ED  2C                 	db	44
   161  0006EE  00                 	db	0
   162  0006EF  00                 	db	0
   163  0006F0  02                 	db	2
   164  0006F1  00                 	db	0
   165  0006F2  14                 	db	20
   166  0006F3  2B                 	db	43
   167  0006F4  00                 	db	0
   168  0006F5  00                 	db	0
   169  0006F6  02                 	db	2
   170  0006F7  01                 	db	1
   171  0006F8  15                 	db	21
   172  0006F9  2A                 	db	42
   173  0006FA  00                 	db	0
   174  0006FB  00                 	db	0
   175  0006FC  02                 	db	2
   176  0006FD  02                 	db	2
   177  0006FE  16                 	db	22
   178  0006FF  29                 	db	41
   179  000700  00                 	db	0
   180  000701  00                 	db	0
   181  000702  02                 	db	2
   182  000703  03                 	db	3
   183  000704  17                 	db	23
   184  000705  28                 	db	40
   185  000706  00                 	db	0
   186  000707  00                 	db	0
   187  000708  02                 	db	2
   188  000709  04                 	db	4
   189  00070A  18                 	db	24
   190  00070B  35                 	db	53
   191  00070C  00                 	db	0
   192  00070D  00                 	db	0
   193  00070E  02                 	db	2
   194  00070F  05                 	db	5
   195  000710  19                 	db	25
   196  000711  34                 	db	52
   197  000712  00                 	db	0
   198  000713  00                 	db	0
   199  000714  02                 	db	2
   200  000715  06                 	db	6
   201  000716  1A                 	db	26
   202  000717  33                 	db	51
   203  000718  00                 	db	0
   204  000719  00                 	db	0
   205  00071A  02                 	db	2
   206  00071B  07                 	db	7
   207  00071C  1B                 	db	27
   208  00071D  32                 	db	50
   209  00071E  00                 	db	0
   210  00071F  00                 	db	0
   211  000720  02                 	db	2
   212  000721  08                 	db	8
   213  000722  1C                 	db	28
   214  000723  31                 	db	49
   215  000724  00                 	db	0
   216  000725  00                 	db	0
   217  000726  02                 	db	2
   218  000727  09                 	db	9
   219  000728  1D                 	db	29
   220  000729  30                 	db	48
   221  00072A  00                 	db	0
   222  00072B  00                 	db	0
   223  0000                     _ANSELA	set	3896
   224  0000                     _ANSELB	set	3897
   225  0000                     _ANSELC	set	3898
   226  0000                     _CCPTMRS0bits	set	3913
   227  0000                     _BAUDCON1bits	set	4024
   228  0000                     _CCP1CONbits	set	4029
   229  0000                     _CCPR1H	set	4031
   230  0000                     _CCPR1L	set	4030
   231  0000                     _EEADR	set	4009
   232  0000                     _EECON1bits	set	4006
   233  0000                     _EECON2	set	4007
   234  0000                     _EEDATA	set	4008
   235  0000                     _INTCONbits	set	4082
   236  0000                     _OSCCON	set	4051
   237  0000                     _PIE1bits	set	3997
   238  0000                     _PIR1bits	set	3998
   239  0000                     _PIR2bits	set	4001
   240  0000                     _PORTA	set	3968
   241  0000                     _PORTAbits	set	3968
   242  0000                     _PORTB	set	3969
   243  0000                     _PORTBbits	set	3969
   244  0000                     _PORTC	set	3970
   245  0000                     _PORTCbits	set	3970
   246  0000                     _PORTE	set	3972
   247  0000                     _RCREG1	set	4014
   248  0000                     _RCSTA1bits	set	4011
   249  0000                     _SPBRG1	set	4015
   250  0000                     _SSP1CON1	set	4038
   251  0000                     _SSP1STAT	set	4039
   252  0000                     _T1CONbits	set	4045
   253  0000                     _T3CONbits	set	4017
   254  0000                     _TMR1H	set	4047
   255  0000                     _TMR1L	set	4046
   256  0000                     _TRISA	set	3986
   257  0000                     _TRISB	set	3987
   258  0000                     _TRISC	set	3988
   259  0000                     _TRISCbits	set	3988
   260  0000                     _TRISE	set	3990
   261  0000                     _TXREG1	set	4013
   262  0000                     _TXSTA1bits	set	4012
   263                           
   264                           	psect	smallconst
   265  000200                     __psmallconst:
   266                           	opt stack 0
   267  000200  00                 	db	0
   268  000201                     STR_9:
   269  000201  41                 	db	65	;'A'
   270  000202  42                 	db	66	;'B'
   271  000203  43                 	db	67	;'C'
   272  000204  44                 	db	68	;'D'
   273  000205  45                 	db	69	;'E'
   274  000206  46                 	db	70	;'F'
   275  000207  47                 	db	71	;'G'
   276  000208  00                 	db	0
   277  000209                     STR_1:
   278  000209  41                 	db	65	;'A'
   279  00020A  42                 	db	66	;'B'
   280  00020B  43                 	db	67	;'C'
   281  00020C  44                 	db	68	;'D'
   282  00020D  45                 	db	69	;'E'
   283  00020E  46                 	db	70	;'F'
   284  00020F  00                 	db	0
   285  000210                     STR_10:
   286  000210  41                 	db	65	;'A'
   287  000211  42                 	db	66	;'B'
   288  000212  43                 	db	67	;'C'
   289  000213  44                 	db	68	;'D'
   290  000214  46                 	db	70	;'F'
   291  000215  47                 	db	71	;'G'
   292  000216  00                 	db	0
   293  000217                     STR_12:
   294  000217  41                 	db	65	;'A'
   295  000218  42                 	db	66	;'B'
   296  000219  43                 	db	67	;'C'
   297  00021A  45                 	db	69	;'E'
   298  00021B  46                 	db	70	;'F'
   299  00021C  47                 	db	71	;'G'
   300  00021D  00                 	db	0
   301  00021E                     STR_7:
   302  00021E  41                 	db	65	;'A'
   303  00021F  43                 	db	67	;'C'
   304  000220  44                 	db	68	;'D'
   305  000221  45                 	db	69	;'E'
   306  000222  46                 	db	70	;'F'
   307  000223  47                 	db	71	;'G'
   308  000224  00                 	db	0
   309  000225                     STR_4:
   310  000225  41                 	db	65	;'A'
   311  000226  42                 	db	66	;'B'
   312  000227  43                 	db	67	;'C'
   313  000228  44                 	db	68	;'D'
   314  000229  47                 	db	71	;'G'
   315  00022A  00                 	db	0
   316  00022B                     STR_3:
   317  00022B  41                 	db	65	;'A'
   318  00022C  42                 	db	66	;'B'
   319  00022D  44                 	db	68	;'D'
   320  00022E  45                 	db	69	;'E'
   321  00022F  47                 	db	71	;'G'
   322  000230  00                 	db	0
   323  000231                     STR_6:
   324  000231  41                 	db	65	;'A'
   325  000232  43                 	db	67	;'C'
   326  000233  44                 	db	68	;'D'
   327  000234  46                 	db	70	;'F'
   328  000235  47                 	db	71	;'G'
   329  000236  00                 	db	0
   330  000237                     STR_11:
   331  000237  41                 	db	65	;'A'
   332  000238  44                 	db	68	;'D'
   333  000239  45                 	db	69	;'E'
   334  00023A  46                 	db	70	;'F'
   335  00023B  47                 	db	71	;'G'
   336  00023C  00                 	db	0
   337  00023D                     STR_5:
   338  00023D  42                 	db	66	;'B'
   339  00023E  43                 	db	67	;'C'
   340  00023F  46                 	db	70	;'F'
   341  000240  47                 	db	71	;'G'
   342  000241  00                 	db	0
   343  000242                     STR_8:
   344  000242  41                 	db	65	;'A'
   345  000243  42                 	db	66	;'B'
   346  000244  43                 	db	67	;'C'
   347  000245  00                 	db	0
   348  0000                     
   349                           ; #config settings
   350  000246  00                 	db	0	; dummy byte at the end
   351  0000                     
   352                           	psect	cinit
   353  000868                     __pcinit:
   354                           	opt stack 0
   355  000868                     start_initialization:
   356                           	opt stack 0
   357  000868                     __initialization:
   358                           	opt stack 0
   359                           
   360                           ; Clear objects allocated to BANK0 (57 bytes)
   361  000868  EE00  F060         	lfsr	0,__pbssBANK0
   362  00086C  0E39               	movlw	57
   363  00086E                     clear_0:
   364  00086E  6AEE               	clrf	postinc0,c
   365  000870  06E8               	decf	wreg,f,c
   366  000872  E1FD               	bnz	clear_0
   367                           
   368                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   369  000874  6A2B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   370                           
   371                           ; Clear objects allocated to COMRAM (8 bytes)
   372  000876  EE00  F023         	lfsr	0,__pbssCOMRAM
   373  00087A  0E08               	movlw	8
   374  00087C                     clear_1:
   375  00087C  6AEE               	clrf	postinc0,c
   376  00087E  06E8               	decf	wreg,f,c
   377  000880  E1FD               	bnz	clear_1
   378                           
   379                           ; Initialize objects allocated to BANK1 (180 bytes)
   380                           ; load TBLPTR registers with __pidataBANK1
   381  000882  0E78               	movlw	low __pidataBANK1
   382  000884  6EF6               	movwf	tblptrl,c
   383  000886  0E06               	movlw	high __pidataBANK1
   384  000888  6EF7               	movwf	tblptrh,c
   385  00088A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   386  00088C  6EF8               	movwf	tblptru,c
   387  00088E  EE01  F000         	lfsr	0,__pdataBANK1
   388  000892  EE10 F0B4          	lfsr	1,180
   389  000896                     copy_data0:
   390  000896  0009               	tblrd		*+
   391  000898  CFF5 FFEE          	movff	tablat,postinc0
   392  00089C  50E5               	movf	postdec1,w,c
   393  00089E  50E1               	movf	fsr1l,w,c
   394  0008A0  E1FA               	bnz	copy_data0
   395  0008A2                     end_of_initialization:
   396                           	opt stack 0
   397  0008A2                     __end_of__initialization:
   398                           	opt stack 0
   399  0008A2  902C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   400  0008A4  922C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   401  0008A6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   402  0008A8  6EF8               	movwf	tblptru,c
   403  0008AA  0100               	movlb	0
   404  0008AC  EF24  F005         	goto	_main	;jump to C main() function
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           postdec1	equ	0xFE5
   412                           fsr1l	equ	0xFE1
   413                           
   414                           	psect	bitbssCOMRAM
   415  000158                     __pbitbssCOMRAM:
   416                           	opt stack 0
   417  000158                     _ignite_ready:
   418                           	opt stack 0
   419  000158                     	ds	1
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           	psect	bssCOMRAM
   430  000023                     __pbssCOMRAM:
   431                           	opt stack 0
   432  000023                     _current_time:
   433                           	opt stack 0
   434  000023                     	ds	2
   435  000025                     _overrun:
   436                           	opt stack 0
   437  000025                     	ds	1
   438  000026                     _pin_selected:
   439                           	opt stack 0
   440  000026                     	ds	1
   441  000027                     _slave_selected:
   442                           	opt stack 0
   443  000027                     	ds	1
   444  000028                     _signs:
   445                           	opt stack 0
   446  000028                     	ds	3
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           postdec1	equ	0xFE5
   454                           fsr1l	equ	0xFE1
   455                           
   456                           	psect	bssBANK0
   457  000060                     __pbssBANK0:
   458                           	opt stack 0
   459  000060                     _pixels:
   460                           	opt stack 0
   461  000060                     	ds	57
   462                           tblptru	equ	0xFF8
   463                           tblptrh	equ	0xFF7
   464                           tblptrl	equ	0xFF6
   465                           tablat	equ	0xFF5
   466                           postinc0	equ	0xFEE
   467                           wreg	equ	0xFE8
   468                           postdec1	equ	0xFE5
   469                           fsr1l	equ	0xFE1
   470                           
   471                           	psect	dataBANK1
   472  000100                     __pdataBANK1:
   473                           	opt stack 0
   474  000100                     _pin:
   475                           	opt stack 0
   476  000100                     	ds	180
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           postinc0	equ	0xFEE
   482                           wreg	equ	0xFE8
   483                           postdec1	equ	0xFE5
   484                           fsr1l	equ	0xFE1
   485                           
   486                           	psect	cstackCOMRAM
   487  000001                     __pcstackCOMRAM:
   488                           	opt stack 0
   489  000001                     ??_Isr:
   490  000001                     
   491                           ; 1 bytes @ 0x0
   492  000001                     	ds	14
   493  00000F                     Isr@received:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0xE
   497  00000F                     	ds	1
   498  000010                     ??_Delay_Routine:
   499  000010                     ?_Read_Data:
   500                           	opt stack 0
   501  000010                     ?___lwmod:
   502                           	opt stack 0
   503  000010                     Save_Data@store:
   504                           	opt stack 0
   505  000010                     Set_Bits@bits:
   506                           	opt stack 0
   507  000010                     ___lwmod@dividend:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0xF
   511  000010                     	ds	1
   512  000011                     Delay_Routine@delay_multiplyer:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x10
   516  000011                     	ds	1
   517  000012                     ??_Set_Bits:
   518  000012                     Delay_Routine@delay_counter:
   519                           	opt stack 0
   520  000012                     Save_Data@store_address:
   521                           	opt stack 0
   522  000012                     Read_Data@data_read:
   523                           	opt stack 0
   524  000012                     ___lwmod@divisor:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x11
   528  000012                     	ds	1
   529  000013                     
   530                           ; 0 bytes @ 0x12
   531  000013                     	ds	1
   532  000014                     Read_Data@read_address:
   533                           	opt stack 0
   534  000014                     Set_Bits@bitcount:
   535                           	opt stack 0
   536  000014                     ___lwmod@counter:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x13
   540  000014                     	ds	1
   541  000015                     Set_Bits@Bitoutput:
   542                           	opt stack 0
   543                           
   544                           ; 1 bytes @ 0x14
   545  000015                     	ds	1
   546  000016                     Evaluate_Display@evaluate:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0x15
   550  000016                     	ds	2
   551  000018                     Evaluate_Display@size:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x17
   555  000018                     	ds	1
   556  000019                     Evaluate_Display@counter:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x18
   560  000019                     	ds	1
   561  00001A                     Evaluate_Signs@evaluation_value:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x19
   565  00001A                     	ds	2
   566  00001C                     Evaluate_Signs@valuecounter:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0x1B
   570  00001C                     	ds	1
   571  00001D                     Set_Display@information:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0x1C
   575  00001D                     	ds	1
   576  00001E                     Set_Display@value:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x1D
   580  00001E                     	ds	2
   581  000020                     Set_Display@type:
   582                           	opt stack 0
   583                           
   584                           ; 1 bytes @ 0x1F
   585  000020                     	ds	1
   586  000021                     ??_Check_Buttons:
   587                           
   588                           ; 0 bytes @ 0x20
   589  000021                     	ds	2
   590  000023                     tblptru	equ	0xFF8
   591                           tblptrh	equ	0xFF7
   592                           tblptrl	equ	0xFF6
   593                           tablat	equ	0xFF5
   594                           postinc0	equ	0xFEE
   595                           wreg	equ	0xFE8
   596                           postdec1	equ	0xFE5
   597                           fsr1l	equ	0xFE1
   598                           
   599                           ; 0 bytes @ 0x22
   600 ;;
   601 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   602 ;;
   603 ;; *************** function _main *****************
   604 ;; Defined at:
   605 ;;		line 80 in file "main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;		None
   610 ;; Return value:  Size  Location     Type
   611 ;;		None               void
   612 ;; Registers used:
   613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1
   619 ;;      Params:         0       0       0
   620 ;;      Locals:         0       0       0
   621 ;;      Temps:          0       0       0
   622 ;;      Totals:         0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels required when called:    8
   625 ;; This function calls:
   626 ;;		_Check_Buttons
   627 ;;		_Init
   628 ;; This function is called by:
   629 ;;		Startup code after reset
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text0
   634  000A48                     __ptext0:
   635                           	opt stack 0
   636  000A48                     _main:
   637                           	opt stack 23
   638                           
   639                           ;main.c: 81: Init();
   640                           
   641                           ;incstack = 0
   642  000A48  ECF1  F004         	call	_Init	;wreg free
   643  000A4C                     l1684:
   644                           
   645                           ;main.c: 83: Check_Buttons();
   646  000A4C  EC24  F001         	call	_Check_Buttons	;wreg free
   647  000A50  D7FD               	goto	l1684
   648  000A52                     __end_of_main:
   649                           	opt stack 0
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           postdec1	equ	0xFE5
   657                           fsr1l	equ	0xFE1
   658                           
   659 ;; *************** function _Init *****************
   660 ;; Defined at:
   661 ;;		line 3 in file "init.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;		None               void
   668 ;; Registers used:
   669 ;;		wreg, status,2, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1
   675 ;;      Params:         0       0       0
   676 ;;      Locals:         0       0       0
   677 ;;      Temps:          0       0       0
   678 ;;      Totals:         0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    3
   682 ;; This function calls:
   683 ;;		_InitAnsel
   684 ;;		_InitInterrupt
   685 ;;		_InitMiscellaneous
   686 ;;		_InitPort
   687 ;;		_InitTimer
   688 ;;		_InitTransmission
   689 ;;		_InitTris
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           	psect	text1
   696  0009E2                     __ptext1:
   697                           	opt stack 0
   698  0009E2                     _Init:
   699                           	opt stack 27
   700                           
   701                           ;init.c: 4: InitPort();
   702                           
   703                           ;incstack = 0
   704  0009E2  EC13  F005         	call	_InitPort	;wreg free
   705                           
   706                           ;init.c: 5: InitTris();
   707  0009E6  EC0A  F005         	call	_InitTris	;wreg free
   708                           
   709                           ;init.c: 6: InitAnsel();
   710  0009EA  EC00  F005         	call	_InitAnsel	;wreg free
   711                           
   712                           ;init.c: 7: InitMiscellaneous();
   713  0009EE  EC2E  F005         	call	_InitMiscellaneous	;wreg free
   714                           
   715                           ;init.c: 8: InitTransmission();
   716  0009F2  ECCE  F004         	call	_InitTransmission	;wreg free
   717                           
   718                           ;init.c: 9: InitTimer();
   719  0009F6  ECBA  F004         	call	_InitTimer	;wreg free
   720                           
   721                           ;init.c: 10: InitInterrupt();
   722  0009FA  EC29  F005         	call	_InitInterrupt	;wreg free
   723  0009FE  0012               	return		;funcret
   724  000A00                     __end_of_Init:
   725                           	opt stack 0
   726                           tblptru	equ	0xFF8
   727                           tblptrh	equ	0xFF7
   728                           tblptrl	equ	0xFF6
   729                           tablat	equ	0xFF5
   730                           postinc0	equ	0xFEE
   731                           wreg	equ	0xFE8
   732                           postdec1	equ	0xFE5
   733                           fsr1l	equ	0xFE1
   734                           
   735 ;; *************** function _InitTris *****************
   736 ;; Defined at:
   737 ;;		line 20 in file "init.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;		None               void
   744 ;; Registers used:
   745 ;;		wreg, status,2
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1
   751 ;;      Params:         0       0       0
   752 ;;      Locals:         0       0       0
   753 ;;      Temps:          0       0       0
   754 ;;      Totals:         0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    2
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_Init
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text2
   766  000A14                     __ptext2:
   767                           	opt stack 0
   768  000A14                     _InitTris:
   769                           	opt stack 27
   770                           
   771                           ;init.c: 21: TRISA = 0b00000000;
   772                           
   773                           ;incstack = 0
   774  000A14  0E00               	movlw	0
   775  000A16  6E92               	movwf	3986,c	;volatile
   776                           
   777                           ;init.c: 22: TRISB = 0b00011111;
   778  000A18  0E1F               	movlw	31
   779  000A1A  6E93               	movwf	3987,c	;volatile
   780                           
   781                           ;init.c: 23: TRISC = 0b10000010;
   782  000A1C  0E82               	movlw	130
   783  000A1E  6E94               	movwf	3988,c	;volatile
   784                           
   785                           ;init.c: 24: TRISE = 0;
   786  000A20  0E00               	movlw	0
   787  000A22  6E96               	movwf	3990,c	;volatile
   788  000A24  0012               	return		;funcret
   789  000A26                     __end_of_InitTris:
   790                           	opt stack 0
   791                           tblptru	equ	0xFF8
   792                           tblptrh	equ	0xFF7
   793                           tblptrl	equ	0xFF6
   794                           tablat	equ	0xFF5
   795                           postinc0	equ	0xFEE
   796                           wreg	equ	0xFE8
   797                           postdec1	equ	0xFE5
   798                           fsr1l	equ	0xFE1
   799                           
   800 ;; *************** function _InitTransmission *****************
   801 ;; Defined at:
   802 ;;		line 37 in file "init.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;		None               void
   809 ;; Registers used:
   810 ;;		wreg, status,2
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1
   816 ;;      Params:         0       0       0
   817 ;;      Locals:         0       0       0
   818 ;;      Temps:          0       0       0
   819 ;;      Totals:         0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    2
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_Init
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text3
   831  00099C                     __ptext3:
   832                           	opt stack 0
   833  00099C                     _InitTransmission:
   834                           	opt stack 27
   835                           
   836                           ;init.c: 39: SSP1STAT = 0b01000000;
   837                           
   838                           ;incstack = 0
   839  00099C  0E40               	movlw	64
   840  00099E  6EC7               	movwf	4039,c	;volatile
   841                           
   842                           ;init.c: 40: SSP1CON1 = 0b00100010;
   843  0009A0  0E22               	movlw	34
   844  0009A2  6EC6               	movwf	4038,c	;volatile
   845                           
   846                           ;init.c: 42: TXSTA1bits.SYNC = 0;
   847  0009A4  98AC               	bcf	4012,4,c	;volatile
   848                           
   849                           ;init.c: 43: TXSTA1bits.BRGH = 1;
   850  0009A6  84AC               	bsf	4012,2,c	;volatile
   851                           
   852                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
   853  0009A8  96B8               	bcf	4024,3,c	;volatile
   854                           
   855                           ;init.c: 45: SPBRG1 = 25;
   856  0009AA  0E19               	movlw	25
   857  0009AC  6EAF               	movwf	4015,c	;volatile
   858                           
   859                           ;init.c: 46: TRISCbits.RC6 = 1;
   860  0009AE  8C94               	bsf	3988,6,c	;volatile
   861                           
   862                           ;init.c: 47: TRISCbits.RC7 = 1;
   863  0009B0  8E94               	bsf	3988,7,c	;volatile
   864                           
   865                           ;init.c: 48: RCSTA1bits.SPEN = 1;
   866  0009B2  8EAB               	bsf	4011,7,c	;volatile
   867                           
   868                           ;init.c: 49: TXSTA1bits.TX9 = 1;
   869  0009B4  8CAC               	bsf	4012,6,c	;volatile
   870                           
   871                           ;init.c: 50: TXSTA1bits.TXEN = 1;
   872  0009B6  8AAC               	bsf	4012,5,c	;volatile
   873                           
   874                           ;init.c: 51: RCSTA1bits.RC9 = 1;
   875  0009B8  8CAB               	bsf	4011,6,c	;volatile
   876                           
   877                           ;init.c: 52: RCSTA1bits.CREN = 1;
   878  0009BA  88AB               	bsf	4011,4,c	;volatile
   879                           
   880                           ;init.c: 53: TRISCbits.RC6 = 0;
   881  0009BC  9C94               	bcf	3988,6,c	;volatile
   882  0009BE  0012               	return		;funcret
   883  0009C0                     __end_of_InitTransmission:
   884                           	opt stack 0
   885                           tblptru	equ	0xFF8
   886                           tblptrh	equ	0xFF7
   887                           tblptrl	equ	0xFF6
   888                           tablat	equ	0xFF5
   889                           postinc0	equ	0xFEE
   890                           wreg	equ	0xFE8
   891                           postdec1	equ	0xFE5
   892                           fsr1l	equ	0xFE1
   893                           
   894 ;; *************** function _InitTimer *****************
   895 ;; Defined at:
   896 ;;		line 56 in file "init.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;		None               void
   903 ;; Registers used:
   904 ;;		wreg, status,2
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1
   910 ;;      Params:         0       0       0
   911 ;;      Locals:         0       0       0
   912 ;;      Temps:          0       0       0
   913 ;;      Totals:         0       0       0
   914 ;;Total ram usage:        0 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    2
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_Init
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text4
   925  000974                     __ptext4:
   926                           	opt stack 0
   927  000974                     _InitTimer:
   928                           	opt stack 27
   929                           
   930                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
   931                           
   932                           ;incstack = 0
   933  000974  0E3F               	movlw	-193
   934  000976  16CD               	andwf	4045,f,c	;volatile
   935                           
   936                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
   937  000978  0E30               	movlw	48
   938  00097A  12CD               	iorwf	4045,f,c	;volatile
   939                           
   940                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
   941  00097C  94CD               	bcf	4045,2,c	;volatile
   942                           
   943                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
   944  00097E  0E3F               	movlw	-193
   945  000980  16B1               	andwf	4017,f,c	;volatile
   946                           
   947                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
   948  000982  0E30               	movlw	48
   949  000984  12B1               	iorwf	4017,f,c	;volatile
   950                           
   951                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
   952  000986  94B1               	bcf	4017,2,c	;volatile
   953                           
   954                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
   955  000988  50BD               	movf	4029,w,c	;volatile
   956  00098A  0BF0               	andlw	-16
   957  00098C  090A               	iorlw	10
   958  00098E  6EBD               	movwf	4029,c	;volatile
   959                           
   960                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
   961  000990  010F               	movlb	15	; () banked
   962  000992  5149               	movf	73,w,b	;volatile
   963  000994  0BFC               	andlw	-4
   964  000996  0901               	iorlw	1
   965  000998  6F49               	movwf	73,b	;volatile
   966                           
   967                           ; BSR set to: 15
   968  00099A  0012               	return		;funcret
   969  00099C                     __end_of_InitTimer:
   970                           	opt stack 0
   971                           tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           postdec1	equ	0xFE5
   978                           fsr1l	equ	0xFE1
   979                           
   980 ;; *************** function _InitPort *****************
   981 ;; Defined at:
   982 ;;		line 13 in file "init.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;		None               void
   989 ;; Registers used:
   990 ;;		wreg, status,2
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1
   996 ;;      Params:         0       0       0
   997 ;;      Locals:         0       0       0
   998 ;;      Temps:          0       0       0
   999 ;;      Totals:         0       0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    2
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_Init
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text5
  1011  000A26                     __ptext5:
  1012                           	opt stack 0
  1013  000A26                     _InitPort:
  1014                           	opt stack 27
  1015                           
  1016                           ;init.c: 14: PORTA = 0b00000000;
  1017                           
  1018                           ; BSR set to: 15
  1019                           ;incstack = 0
  1020  000A26  0E00               	movlw	0
  1021  000A28  6E80               	movwf	3968,c	;volatile
  1022                           
  1023                           ;init.c: 15: PORTB = 0b00000000;
  1024  000A2A  0E00               	movlw	0
  1025  000A2C  6E81               	movwf	3969,c	;volatile
  1026                           
  1027                           ;init.c: 16: PORTC = 0b00000001;
  1028  000A2E  0E01               	movlw	1
  1029  000A30  6E82               	movwf	3970,c	;volatile
  1030                           
  1031                           ;init.c: 17: PORTE = 0;
  1032  000A32  0E00               	movlw	0
  1033  000A34  6E84               	movwf	3972,c	;volatile
  1034  000A36  0012               	return		;funcret
  1035  000A38                     __end_of_InitPort:
  1036                           	opt stack 0
  1037                           tblptru	equ	0xFF8
  1038                           tblptrh	equ	0xFF7
  1039                           tblptrl	equ	0xFF6
  1040                           tablat	equ	0xFF5
  1041                           postinc0	equ	0xFEE
  1042                           wreg	equ	0xFE8
  1043                           postdec1	equ	0xFE5
  1044                           fsr1l	equ	0xFE1
  1045                           
  1046 ;; *************** function _InitMiscellaneous *****************
  1047 ;; Defined at:
  1048 ;;		line 33 in file "init.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;		None               void
  1055 ;; Registers used:
  1056 ;;		wreg, status,2
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1
  1062 ;;      Params:         0       0       0
  1063 ;;      Locals:         0       0       0
  1064 ;;      Temps:          0       0       0
  1065 ;;      Totals:         0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    2
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_Init
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text6
  1077  000A5C                     __ptext6:
  1078                           	opt stack 0
  1079  000A5C                     _InitMiscellaneous:
  1080                           	opt stack 27
  1081                           
  1082                           ;init.c: 34: OSCCON = 0b01010011;
  1083                           
  1084                           ;incstack = 0
  1085  000A5C  0E53               	movlw	83
  1086  000A5E  6ED3               	movwf	4051,c	;volatile
  1087  000A60  0012               	return		;funcret
  1088  000A62                     __end_of_InitMiscellaneous:
  1089                           	opt stack 0
  1090                           tblptru	equ	0xFF8
  1091                           tblptrh	equ	0xFF7
  1092                           tblptrl	equ	0xFF6
  1093                           tablat	equ	0xFF5
  1094                           postinc0	equ	0xFEE
  1095                           wreg	equ	0xFE8
  1096                           postdec1	equ	0xFE5
  1097                           fsr1l	equ	0xFE1
  1098                           
  1099 ;; *************** function _InitInterrupt *****************
  1100 ;; Defined at:
  1101 ;;		line 70 in file "init.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;		None
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;		None
  1106 ;; Return value:  Size  Location     Type
  1107 ;;		None               void
  1108 ;; Registers used:
  1109 ;;		None
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1
  1115 ;;      Params:         0       0       0
  1116 ;;      Locals:         0       0       0
  1117 ;;      Temps:          0       0       0
  1118 ;;      Totals:         0       0       0
  1119 ;;Total ram usage:        0 bytes
  1120 ;; Hardware stack levels used:    1
  1121 ;; Hardware stack levels required when called:    2
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_Init
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text7
  1130  000A52                     __ptext7:
  1131                           	opt stack 0
  1132  000A52                     _InitInterrupt:
  1133                           	opt stack 27
  1134                           
  1135                           ;init.c: 71: INTCONbits.GIE = 1;
  1136                           
  1137                           ;incstack = 0
  1138  000A52  8EF2               	bsf	intcon,7,c	;volatile
  1139                           
  1140                           ;init.c: 72: INTCONbits.PEIE = 1;
  1141  000A54  8CF2               	bsf	intcon,6,c	;volatile
  1142                           
  1143                           ;init.c: 73: PIE1bits.RCIE = 1;
  1144  000A56  8A9D               	bsf	3997,5,c	;volatile
  1145                           
  1146                           ;init.c: 74: PIE1bits.CCP1IE = 1;
  1147  000A58  849D               	bsf	3997,2,c	;volatile
  1148  000A5A  0012               	return		;funcret
  1149  000A5C                     __end_of_InitInterrupt:
  1150                           	opt stack 0
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           intcon	equ	0xFF2
  1156                           postinc0	equ	0xFEE
  1157                           wreg	equ	0xFE8
  1158                           postdec1	equ	0xFE5
  1159                           fsr1l	equ	0xFE1
  1160                           
  1161 ;; *************** function _InitAnsel *****************
  1162 ;; Defined at:
  1163 ;;		line 27 in file "init.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;		None               void
  1170 ;; Registers used:
  1171 ;;		wreg, status,2
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1
  1177 ;;      Params:         0       0       0
  1178 ;;      Locals:         0       0       0
  1179 ;;      Temps:          0       0       0
  1180 ;;      Totals:         0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    2
  1184 ;; This function calls:
  1185 ;;		Nothing
  1186 ;; This function is called by:
  1187 ;;		_Init
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           	psect	text8
  1192  000A00                     __ptext8:
  1193                           	opt stack 0
  1194  000A00                     _InitAnsel:
  1195                           	opt stack 27
  1196                           
  1197                           ;init.c: 28: ANSELA = 0;
  1198                           
  1199                           ;incstack = 0
  1200  000A00  0E00               	movlw	0
  1201  000A02  010F               	movlb	15	; () banked
  1202  000A04  6F38               	movwf	56,b	;volatile
  1203                           
  1204                           ;init.c: 29: ANSELB = 0;
  1205  000A06  0E00               	movlw	0
  1206  000A08  010F               	movlb	15	; () banked
  1207  000A0A  6F39               	movwf	57,b	;volatile
  1208                           
  1209                           ;init.c: 30: ANSELC = 0;
  1210  000A0C  0E00               	movlw	0
  1211  000A0E  010F               	movlb	15	; () banked
  1212  000A10  6F3A               	movwf	58,b	;volatile
  1213                           
  1214                           ; BSR set to: 15
  1215  000A12  0012               	return		;funcret
  1216  000A14                     __end_of_InitAnsel:
  1217                           	opt stack 0
  1218                           tblptru	equ	0xFF8
  1219                           tblptrh	equ	0xFF7
  1220                           tblptrl	equ	0xFF6
  1221                           tablat	equ	0xFF5
  1222                           intcon	equ	0xFF2
  1223                           postinc0	equ	0xFEE
  1224                           wreg	equ	0xFE8
  1225                           postdec1	equ	0xFE5
  1226                           fsr1l	equ	0xFE1
  1227                           
  1228 ;; *************** function _Check_Buttons *****************
  1229 ;; Defined at:
  1230 ;;		line 3 in file "buttonchanges.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;		None
  1235 ;; Return value:  Size  Location     Type
  1236 ;;		None               void
  1237 ;; Registers used:
  1238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1
  1244 ;;      Params:         0       0       0
  1245 ;;      Locals:         0       0       0
  1246 ;;      Temps:          2       0       0
  1247 ;;      Totals:         2       0       0
  1248 ;;Total ram usage:        2 bytes
  1249 ;; Hardware stack levels used:    1
  1250 ;; Hardware stack levels required when called:    7
  1251 ;; This function calls:
  1252 ;;		_Delay_Routine
  1253 ;;		_Read_Data
  1254 ;;		_Save_Data
  1255 ;;		_Set_Display
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text9
  1262  000248                     __ptext9:
  1263                           	opt stack 0
  1264  000248                     _Check_Buttons:
  1265                           	opt stack 23
  1266                           
  1267                           ;buttonchanges.c: 4: if(PORTCbits.RC1 == 1) {
  1268                           
  1269                           ; BSR set to: 15
  1270                           ;incstack = 0
  1271  000248  A282               	btfss	3970,1,c	;volatile
  1272  00024A  D008               	goto	l67
  1273                           
  1274                           ;buttonchanges.c: 5: Delay_Routine(3);
  1275  00024C  0E03               	movlw	3
  1276  00024E  ECE0  F004         	call	_Delay_Routine
  1277                           
  1278                           ;buttonchanges.c: 6: if(PORTCbits.RC1 == 1) {
  1279  000252  A282               	btfss	3970,1,c	;volatile
  1280  000254  0012               	return	
  1281                           
  1282                           ;buttonchanges.c: 7: ignite_ready = 1;
  1283  000256  802B               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1284                           
  1285                           ;buttonchanges.c: 8: __nop();
  1286  000258  F000               	nop	
  1287                           
  1288                           ;buttonchanges.c: 12: }
  1289                           ;buttonchanges.c: 13: } else if(PORTBbits.RB2 == 1) {
  1290                           
  1291                           ;buttonchanges.c: 9: return;
  1292  00025A  0012               	return	
  1293  00025C                     l67:
  1294  00025C  A481               	btfss	3969,2,c	;volatile
  1295  00025E  D03B               	goto	l71
  1296                           
  1297                           ;buttonchanges.c: 14: Delay_Routine(3);
  1298  000260  0E03               	movlw	3
  1299  000262  ECE0  F004         	call	_Delay_Routine
  1300                           
  1301                           ;buttonchanges.c: 15: if(PORTBbits.RB2 == 1) {
  1302  000266  A481               	btfss	3969,2,c	;volatile
  1303  000268  0012               	return	
  1304                           
  1305                           ;buttonchanges.c: 16: pin[pin_selected].time++;
  1306  00026A  5026               	movf	_pin_selected,w,c
  1307  00026C  0D06               	mullw	6
  1308  00026E  0E04               	movlw	4
  1309  000270  26F3               	addwf	prodl,f,c
  1310  000272  0E00               	movlw	0
  1311  000274  22F4               	addwfc	prodh,f,c
  1312  000276  0E00               	movlw	low _pin
  1313  000278  24F3               	addwf	prodl,w,c
  1314  00027A  6ED9               	movwf	fsr2l,c
  1315  00027C  0E01               	movlw	high _pin
  1316  00027E  20F4               	addwfc	prodh,w,c
  1317  000280  6EDA               	movwf	fsr2h,c
  1318  000282  2ADE               	incf	postinc2,f,c
  1319  000284  0E00               	movlw	0
  1320  000286  22DD               	addwfc	postdec2,f,c
  1321                           
  1322                           ;buttonchanges.c: 17: if(pin[pin_selected].time > 999) {
  1323  000288  5026               	movf	_pin_selected,w,c
  1324  00028A  0D06               	mullw	6
  1325  00028C  0E04               	movlw	4
  1326  00028E  26F3               	addwf	prodl,f,c
  1327  000290  0E00               	movlw	0
  1328  000292  22F4               	addwfc	prodh,f,c
  1329  000294  0E00               	movlw	low _pin
  1330  000296  24F3               	addwf	prodl,w,c
  1331  000298  6ED9               	movwf	fsr2l,c
  1332  00029A  0E01               	movlw	high _pin
  1333  00029C  20F4               	addwfc	prodh,w,c
  1334  00029E  6EDA               	movwf	fsr2h,c
  1335  0002A0  0E01               	movlw	1
  1336  0002A2  BEDB               	btfsc	plusw2,7,c
  1337  0002A4  D016               	goto	l1612
  1338  0002A6  0EE8               	movlw	232
  1339  0002A8  5CDE               	subwf	postinc2,w,c
  1340  0002AA  0E03               	movlw	3
  1341  0002AC  58DE               	subwfb	postinc2,w,c
  1342  0002AE  A0D8               	btfss	status,0,c
  1343  0002B0  D010               	goto	l1612
  1344                           
  1345                           ;buttonchanges.c: 18: pin[pin_selected].time = 0;
  1346  0002B2  5026               	movf	_pin_selected,w,c
  1347  0002B4  0D06               	mullw	6
  1348  0002B6  0E04               	movlw	4
  1349  0002B8  26F3               	addwf	prodl,f,c
  1350  0002BA  0E00               	movlw	0
  1351  0002BC  22F4               	addwfc	prodh,f,c
  1352  0002BE  0E00               	movlw	low _pin
  1353  0002C0  24F3               	addwf	prodl,w,c
  1354  0002C2  6ED9               	movwf	fsr2l,c
  1355  0002C4  0E01               	movlw	high _pin
  1356  0002C6  20F4               	addwfc	prodh,w,c
  1357  0002C8  6EDA               	movwf	fsr2h,c
  1358  0002CA  0E00               	movlw	0
  1359  0002CC  6EDE               	movwf	postinc2,c
  1360  0002CE  0E00               	movlw	0
  1361  0002D0  6EDD               	movwf	postdec2,c
  1362  0002D2                     l1612:
  1363                           
  1364                           ;buttonchanges.c: 19: }
  1365                           ;buttonchanges.c: 21: __nop();
  1366  0002D2  F000               	nop	
  1367                           
  1368                           ;buttonchanges.c: 22: }
  1369                           ;buttonchanges.c: 23: } else if(PORTBbits.RB3 == 1) {
  1370  0002D4  0012               	return	
  1371  0002D6                     l71:
  1372  0002D6  A681               	btfss	3969,3,c	;volatile
  1373  0002D8  D035               	goto	l75
  1374                           
  1375                           ;buttonchanges.c: 24: Delay_Routine(3);
  1376  0002DA  0E03               	movlw	3
  1377  0002DC  ECE0  F004         	call	_Delay_Routine
  1378                           
  1379                           ;buttonchanges.c: 25: if(PORTBbits.RB3 == 1) {
  1380  0002E0  A681               	btfss	3969,3,c	;volatile
  1381  0002E2  0012               	return	
  1382                           
  1383                           ;buttonchanges.c: 26: pin[pin_selected].time--;
  1384  0002E4  5026               	movf	_pin_selected,w,c
  1385  0002E6  0D06               	mullw	6
  1386  0002E8  0E04               	movlw	4
  1387  0002EA  26F3               	addwf	prodl,f,c
  1388  0002EC  0E00               	movlw	0
  1389  0002EE  22F4               	addwfc	prodh,f,c
  1390  0002F0  0E00               	movlw	low _pin
  1391  0002F2  24F3               	addwf	prodl,w,c
  1392  0002F4  6ED9               	movwf	fsr2l,c
  1393  0002F6  0E01               	movlw	high _pin
  1394  0002F8  20F4               	addwfc	prodh,w,c
  1395  0002FA  6EDA               	movwf	fsr2h,c
  1396  0002FC  06DE               	decf	postinc2,f,c
  1397  0002FE  0E00               	movlw	0
  1398  000300  5ADD               	subwfb	postdec2,f,c
  1399                           
  1400                           ;buttonchanges.c: 27: if(pin[pin_selected].time < 0) {
  1401  000302  5026               	movf	_pin_selected,w,c
  1402  000304  0D06               	mullw	6
  1403  000306  0E04               	movlw	4
  1404  000308  26F3               	addwf	prodl,f,c
  1405  00030A  0E00               	movlw	0
  1406  00030C  22F4               	addwfc	prodh,f,c
  1407  00030E  0E00               	movlw	low _pin
  1408  000310  24F3               	addwf	prodl,w,c
  1409  000312  6ED9               	movwf	fsr2l,c
  1410  000314  0E01               	movlw	high _pin
  1411  000316  20F4               	addwfc	prodh,w,c
  1412  000318  6EDA               	movwf	fsr2h,c
  1413  00031A  0E01               	movlw	1
  1414  00031C  AEDB               	btfss	plusw2,7,c
  1415  00031E  D010               	goto	l1622
  1416                           
  1417                           ;buttonchanges.c: 28: pin[pin_selected].time = 999;
  1418  000320  5026               	movf	_pin_selected,w,c
  1419  000322  0D06               	mullw	6
  1420  000324  0E04               	movlw	4
  1421  000326  26F3               	addwf	prodl,f,c
  1422  000328  0E00               	movlw	0
  1423  00032A  22F4               	addwfc	prodh,f,c
  1424  00032C  0E00               	movlw	low _pin
  1425  00032E  24F3               	addwf	prodl,w,c
  1426  000330  6ED9               	movwf	fsr2l,c
  1427  000332  0E01               	movlw	high _pin
  1428  000334  20F4               	addwfc	prodh,w,c
  1429  000336  6EDA               	movwf	fsr2h,c
  1430  000338  0EE7               	movlw	231
  1431  00033A  6EDE               	movwf	postinc2,c
  1432  00033C  0E03               	movlw	3
  1433  00033E  6EDD               	movwf	postdec2,c
  1434  000340                     l1622:
  1435                           
  1436                           ;buttonchanges.c: 29: }
  1437                           ;buttonchanges.c: 31: __nop();
  1438  000340  F000               	nop	
  1439                           
  1440                           ;buttonchanges.c: 32: }
  1441                           ;buttonchanges.c: 33: } else if(PORTBbits.RB4 == 1) {
  1442  000342  0012               	return	
  1443  000344                     l75:
  1444  000344  A881               	btfss	3969,4,c	;volatile
  1445  000346  D03C               	goto	l79
  1446                           
  1447                           ;buttonchanges.c: 34: Delay_Routine(3);
  1448  000348  0E03               	movlw	3
  1449  00034A  ECE0  F004         	call	_Delay_Routine
  1450                           
  1451                           ;buttonchanges.c: 35: if(PORTBbits.RB4 == 1) {
  1452  00034E  A881               	btfss	3969,4,c	;volatile
  1453  000350  0012               	return	
  1454                           
  1455                           ;buttonchanges.c: 36: pin[pin_selected].time += 10;
  1456  000352  5026               	movf	_pin_selected,w,c
  1457  000354  0D06               	mullw	6
  1458  000356  0E04               	movlw	4
  1459  000358  26F3               	addwf	prodl,f,c
  1460  00035A  0E00               	movlw	0
  1461  00035C  22F4               	addwfc	prodh,f,c
  1462  00035E  0E00               	movlw	low _pin
  1463  000360  24F3               	addwf	prodl,w,c
  1464  000362  6ED9               	movwf	fsr2l,c
  1465  000364  0E01               	movlw	high _pin
  1466  000366  20F4               	addwfc	prodh,w,c
  1467  000368  6EDA               	movwf	fsr2h,c
  1468  00036A  0E0A               	movlw	10
  1469  00036C  26DE               	addwf	postinc2,f,c
  1470  00036E  0E00               	movlw	0
  1471  000370  22DD               	addwfc	postdec2,f,c
  1472                           
  1473                           ;buttonchanges.c: 37: if(pin[pin_selected].time > 999) {
  1474  000372  5026               	movf	_pin_selected,w,c
  1475  000374  0D06               	mullw	6
  1476  000376  0E04               	movlw	4
  1477  000378  26F3               	addwf	prodl,f,c
  1478  00037A  0E00               	movlw	0
  1479  00037C  22F4               	addwfc	prodh,f,c
  1480  00037E  0E00               	movlw	low _pin
  1481  000380  24F3               	addwf	prodl,w,c
  1482  000382  6ED9               	movwf	fsr2l,c
  1483  000384  0E01               	movlw	high _pin
  1484  000386  20F4               	addwfc	prodh,w,c
  1485  000388  6EDA               	movwf	fsr2h,c
  1486  00038A  0E01               	movlw	1
  1487  00038C  BEDB               	btfsc	plusw2,7,c
  1488  00038E  D016               	goto	l1632
  1489  000390  0EE8               	movlw	232
  1490  000392  5CDE               	subwf	postinc2,w,c
  1491  000394  0E03               	movlw	3
  1492  000396  58DE               	subwfb	postinc2,w,c
  1493  000398  A0D8               	btfss	status,0,c
  1494  00039A  D010               	goto	l1632
  1495                           
  1496                           ;buttonchanges.c: 38: pin[pin_selected].time = 0;
  1497  00039C  5026               	movf	_pin_selected,w,c
  1498  00039E  0D06               	mullw	6
  1499  0003A0  0E04               	movlw	4
  1500  0003A2  26F3               	addwf	prodl,f,c
  1501  0003A4  0E00               	movlw	0
  1502  0003A6  22F4               	addwfc	prodh,f,c
  1503  0003A8  0E00               	movlw	low _pin
  1504  0003AA  24F3               	addwf	prodl,w,c
  1505  0003AC  6ED9               	movwf	fsr2l,c
  1506  0003AE  0E01               	movlw	high _pin
  1507  0003B0  20F4               	addwfc	prodh,w,c
  1508  0003B2  6EDA               	movwf	fsr2h,c
  1509  0003B4  0E00               	movlw	0
  1510  0003B6  6EDE               	movwf	postinc2,c
  1511  0003B8  0E00               	movlw	0
  1512  0003BA  6EDD               	movwf	postdec2,c
  1513  0003BC                     l1632:
  1514                           
  1515                           ;buttonchanges.c: 39: }
  1516                           ;buttonchanges.c: 41: __nop();
  1517  0003BC  F000               	nop	
  1518                           
  1519                           ;buttonchanges.c: 42: }
  1520                           ;buttonchanges.c: 43: } else if(PORTBbits.RB1 == 1) {
  1521  0003BE  0012               	return	
  1522  0003C0                     l79:
  1523  0003C0  A281               	btfss	3969,1,c	;volatile
  1524  0003C2  D062               	goto	l83
  1525                           
  1526                           ;buttonchanges.c: 44: Delay_Routine(3);
  1527  0003C4  0E03               	movlw	3
  1528  0003C6  ECE0  F004         	call	_Delay_Routine
  1529                           
  1530                           ;buttonchanges.c: 45: if(PORTBbits.RB1 == 1) {
  1531  0003CA  A281               	btfss	3969,1,c	;volatile
  1532  0003CC  0012               	return	
  1533                           
  1534                           ;buttonchanges.c: 46: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  1535  0003CE  5026               	movf	_pin_selected,w,c
  1536  0003D0  0D06               	mullw	6
  1537  0003D2  0E04               	movlw	4
  1538  0003D4  26F3               	addwf	prodl,f,c
  1539  0003D6  0E00               	movlw	0
  1540  0003D8  22F4               	addwfc	prodh,f,c
  1541  0003DA  0E00               	movlw	low _pin
  1542  0003DC  24F3               	addwf	prodl,w,c
  1543  0003DE  6ED9               	movwf	fsr2l,c
  1544  0003E0  0E01               	movlw	high _pin
  1545  0003E2  20F4               	addwfc	prodh,w,c
  1546  0003E4  6EDA               	movwf	fsr2h,c
  1547  0003E6  CFDE F010          	movff	postinc2,Save_Data@store
  1548  0003EA  CFDD F011          	movff	postdec2,Save_Data@store+1
  1549  0003EE  5026               	movf	_pin_selected,w,c
  1550  0003F0  0D06               	mullw	6
  1551  0003F2  0E02               	movlw	2
  1552  0003F4  26F3               	addwf	prodl,f,c
  1553  0003F6  0E00               	movlw	0
  1554  0003F8  22F4               	addwfc	prodh,f,c
  1555  0003FA  0E00               	movlw	low _pin
  1556  0003FC  24F3               	addwf	prodl,w,c
  1557  0003FE  6ED9               	movwf	fsr2l,c
  1558  000400  0E01               	movlw	high _pin
  1559  000402  20F4               	addwfc	prodh,w,c
  1560  000404  6EDA               	movwf	fsr2h,c
  1561  000406  50DF               	movf	indf2,w,c
  1562  000408  6E12               	movwf	Save_Data@store_address,c
  1563  00040A  ECE6  F003         	call	_Save_Data	;wreg free
  1564                           
  1565                           ;buttonchanges.c: 47: pin_selected++;
  1566  00040E  2A26               	incf	_pin_selected,f,c
  1567                           
  1568                           ;buttonchanges.c: 48: switch (slave_selected) {
  1569  000410  D010               	goto	l1656
  1570  000412                     l1642:
  1571                           
  1572                           ;buttonchanges.c: 50: if(pin_selected > 9) {
  1573  000412  0E09               	movlw	9
  1574  000414  6426               	cpfsgt	_pin_selected,c
  1575  000416  D017               	goto	l1658
  1576                           
  1577                           ;buttonchanges.c: 51: pin_selected = 0;
  1578  000418  0E00               	movlw	0
  1579  00041A  D009               	goto	L2
  1580  00041C                     l1646:
  1581                           
  1582                           ;buttonchanges.c: 55: if(pin_selected > 19) {
  1583  00041C  0E13               	movlw	19
  1584  00041E  6426               	cpfsgt	_pin_selected,c
  1585  000420  D012               	goto	l1658
  1586                           
  1587                           ;buttonchanges.c: 56: pin_selected = 10;
  1588  000422  0E0A               	movlw	10
  1589  000424  D004               	goto	L2
  1590  000426                     l1650:
  1591                           
  1592                           ;buttonchanges.c: 60: if(pin_selected > 29) {
  1593  000426  0E1D               	movlw	29
  1594  000428  6426               	cpfsgt	_pin_selected,c
  1595  00042A  D00D               	goto	l1658
  1596                           
  1597                           ;buttonchanges.c: 61: pin_selected = 20;
  1598  00042C  0E14               	movlw	20
  1599  00042E                     L2:
  1600  00042E  6E26               	movwf	_pin_selected,c
  1601                           
  1602                           ;buttonchanges.c: 64: }
  1603                           
  1604                           ;buttonchanges.c: 62: }
  1605                           ;buttonchanges.c: 63: break;
  1606  000430  D00A               	goto	l1658
  1607  000432                     l1656:
  1608  000432  5027               	movf	_slave_selected,w,c
  1609                           
  1610                           ; Switch size 1, requested type "space"
  1611                           ; Number of cases is 3, Range of values is 0 to 2
  1612                           ; switch strategies available:
  1613                           ; Name         Instructions Cycles
  1614                           ; simple_byte           10     6 (average)
  1615                           ;	Chosen strategy is simple_byte
  1616  000434  0A00               	xorlw	0	; case 0
  1617  000436  B4D8               	btfsc	status,2,c
  1618  000438  D7EC               	goto	l1642
  1619  00043A  0A01               	xorlw	1	; case 1
  1620  00043C  B4D8               	btfsc	status,2,c
  1621  00043E  D7EE               	goto	l1646
  1622  000440  0A03               	xorlw	3	; case 2
  1623  000442  B4D8               	btfsc	status,2,c
  1624  000444  D7F0               	goto	l1650
  1625  000446                     l1658:
  1626                           
  1627                           ;buttonchanges.c: 65: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  1628  000446  5026               	movf	_pin_selected,w,c
  1629  000448  0D06               	mullw	6
  1630  00044A  0E02               	movlw	2
  1631  00044C  26F3               	addwf	prodl,f,c
  1632  00044E  0E00               	movlw	0
  1633  000450  22F4               	addwfc	prodh,f,c
  1634  000452  0E00               	movlw	low _pin
  1635  000454  24F3               	addwf	prodl,w,c
  1636  000456  6ED9               	movwf	fsr2l,c
  1637  000458  0E01               	movlw	high _pin
  1638  00045A  20F4               	addwfc	prodh,w,c
  1639  00045C  6EDA               	movwf	fsr2h,c
  1640  00045E  50DF               	movf	indf2,w,c
  1641  000460  EC9A  F004         	call	_Read_Data
  1642  000464  5026               	movf	_pin_selected,w,c
  1643  000466  0D06               	mullw	6
  1644  000468  0E04               	movlw	4
  1645  00046A  26F3               	addwf	prodl,f,c
  1646  00046C  0E00               	movlw	0
  1647  00046E  22F4               	addwfc	prodh,f,c
  1648  000470  0E00               	movlw	low _pin
  1649  000472  24F3               	addwf	prodl,w,c
  1650  000474  6ED9               	movwf	fsr2l,c
  1651  000476  0E01               	movlw	high _pin
  1652  000478  20F4               	addwfc	prodh,w,c
  1653  00047A  6EDA               	movwf	fsr2h,c
  1654  00047C  C010  FFDE         	movff	?_Read_Data,postinc2
  1655  000480  C011  FFDD         	movff	?_Read_Data+1,postdec2
  1656                           
  1657                           ;buttonchanges.c: 67: __nop();
  1658  000484  F000               	nop	
  1659                           
  1660                           ;buttonchanges.c: 68: }
  1661                           ;buttonchanges.c: 69: } else if(PORTBbits.RB0 == 1) {
  1662  000486  0012               	return	
  1663  000488                     l83:
  1664  000488  A081               	btfss	3969,0,c	;volatile
  1665  00048A  0012               	return	
  1666                           
  1667                           ;buttonchanges.c: 70: Delay_Routine(3);
  1668  00048C  0E03               	movlw	3
  1669  00048E  ECE0  F004         	call	_Delay_Routine
  1670                           
  1671                           ;buttonchanges.c: 71: if(PORTBbits.RB0 == 1) {
  1672  000492  A081               	btfss	3969,0,c	;volatile
  1673  000494  0012               	return	
  1674                           
  1675                           ;buttonchanges.c: 72: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  1676  000496  5026               	movf	_pin_selected,w,c
  1677  000498  0D06               	mullw	6
  1678  00049A  0E04               	movlw	4
  1679  00049C  26F3               	addwf	prodl,f,c
  1680  00049E  0E00               	movlw	0
  1681  0004A0  22F4               	addwfc	prodh,f,c
  1682  0004A2  0E00               	movlw	low _pin
  1683  0004A4  24F3               	addwf	prodl,w,c
  1684  0004A6  6ED9               	movwf	fsr2l,c
  1685  0004A8  0E01               	movlw	high _pin
  1686  0004AA  20F4               	addwfc	prodh,w,c
  1687  0004AC  6EDA               	movwf	fsr2h,c
  1688  0004AE  CFDE F010          	movff	postinc2,Save_Data@store
  1689  0004B2  CFDD F011          	movff	postdec2,Save_Data@store+1
  1690  0004B6  5026               	movf	_pin_selected,w,c
  1691  0004B8  0D06               	mullw	6
  1692  0004BA  0E02               	movlw	2
  1693  0004BC  26F3               	addwf	prodl,f,c
  1694  0004BE  0E00               	movlw	0
  1695  0004C0  22F4               	addwfc	prodh,f,c
  1696  0004C2  0E00               	movlw	low _pin
  1697  0004C4  24F3               	addwf	prodl,w,c
  1698  0004C6  6ED9               	movwf	fsr2l,c
  1699  0004C8  0E01               	movlw	high _pin
  1700  0004CA  20F4               	addwfc	prodh,w,c
  1701  0004CC  6EDA               	movwf	fsr2h,c
  1702  0004CE  50DF               	movf	indf2,w,c
  1703  0004D0  6E12               	movwf	Save_Data@store_address,c
  1704  0004D2  ECE6  F003         	call	_Save_Data	;wreg free
  1705                           
  1706                           ;buttonchanges.c: 73: slave_selected++;
  1707  0004D6  2A27               	incf	_slave_selected,f,c
  1708                           
  1709                           ;buttonchanges.c: 74: if(slave_selected > 2) {
  1710  0004D8  0E02               	movlw	2
  1711  0004DA  6427               	cpfsgt	_slave_selected,c
  1712  0004DC  D002               	goto	l1674
  1713                           
  1714                           ;buttonchanges.c: 75: slave_selected = 0;
  1715  0004DE  0E00               	movlw	0
  1716  0004E0  6E27               	movwf	_slave_selected,c
  1717  0004E2                     l1674:
  1718                           
  1719                           ;buttonchanges.c: 76: }
  1720                           ;buttonchanges.c: 77: pin_selected = slave_selected * 10;
  1721  0004E2  5027               	movf	_slave_selected,w,c
  1722  0004E4  0D0A               	mullw	10
  1723  0004E6  CFF3 F026          	movff	prodl,_pin_selected
  1724                           
  1725                           ;buttonchanges.c: 78: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  1726  0004EA  5026               	movf	_pin_selected,w,c
  1727  0004EC  0D06               	mullw	6
  1728  0004EE  0E02               	movlw	2
  1729  0004F0  26F3               	addwf	prodl,f,c
  1730  0004F2  0E00               	movlw	0
  1731  0004F4  22F4               	addwfc	prodh,f,c
  1732  0004F6  0E00               	movlw	low _pin
  1733  0004F8  24F3               	addwf	prodl,w,c
  1734  0004FA  6ED9               	movwf	fsr2l,c
  1735  0004FC  0E01               	movlw	high _pin
  1736  0004FE  20F4               	addwfc	prodh,w,c
  1737  000500  6EDA               	movwf	fsr2h,c
  1738  000502  50DF               	movf	indf2,w,c
  1739  000504  EC9A  F004         	call	_Read_Data
  1740  000508  5026               	movf	_pin_selected,w,c
  1741  00050A  0D06               	mullw	6
  1742  00050C  0E04               	movlw	4
  1743  00050E  26F3               	addwf	prodl,f,c
  1744  000510  0E00               	movlw	0
  1745  000512  22F4               	addwfc	prodh,f,c
  1746  000514  0E00               	movlw	low _pin
  1747  000516  24F3               	addwf	prodl,w,c
  1748  000518  6ED9               	movwf	fsr2l,c
  1749  00051A  0E01               	movlw	high _pin
  1750  00051C  20F4               	addwfc	prodh,w,c
  1751  00051E  6EDA               	movwf	fsr2h,c
  1752  000520  C010  FFDE         	movff	?_Read_Data,postinc2
  1753  000524  C011  FFDD         	movff	?_Read_Data+1,postdec2
  1754                           
  1755                           ;buttonchanges.c: 79: Set_Display('7', 'E', pin[pin_selected].slave);
  1756  000528  0E45               	movlw	69
  1757  00052A  6E1D               	movwf	Set_Display@information,c
  1758  00052C  5026               	movf	_pin_selected,w,c
  1759  00052E  0D06               	mullw	6
  1760  000530  0E00               	movlw	low _pin
  1761  000532  24F3               	addwf	prodl,w,c
  1762  000534  6ED9               	movwf	fsr2l,c
  1763  000536  0E01               	movlw	high _pin
  1764  000538  20F4               	addwfc	prodh,w,c
  1765  00053A  6EDA               	movwf	fsr2h,c
  1766  00053C  50DF               	movf	indf2,w,c
  1767  00053E  6E21               	movwf	??_Check_Buttons& (0+255),c
  1768  000540  5021               	movf	??_Check_Buttons,w,c
  1769  000542  6E1E               	movwf	Set_Display@value,c
  1770  000544  6A1F               	clrf	Set_Display@value+1,c
  1771  000546  0E37               	movlw	55
  1772  000548  EC58  F004         	call	_Set_Display
  1773                           
  1774                           ;buttonchanges.c: 82: __nop();
  1775  00054C  F000               	nop	
  1776  00054E  0012               	return	
  1777  000550                     __end_of_Check_Buttons:
  1778                           	opt stack 0
  1779                           tblptru	equ	0xFF8
  1780                           tblptrh	equ	0xFF7
  1781                           tblptrl	equ	0xFF6
  1782                           tablat	equ	0xFF5
  1783                           prodh	equ	0xFF4
  1784                           prodl	equ	0xFF3
  1785                           intcon	equ	0xFF2
  1786                           postinc0	equ	0xFEE
  1787                           wreg	equ	0xFE8
  1788                           postdec1	equ	0xFE5
  1789                           fsr1l	equ	0xFE1
  1790                           indf2	equ	0xFDF
  1791                           postinc2	equ	0xFDE
  1792                           postdec2	equ	0xFDD
  1793                           plusw2	equ	0xFDB
  1794                           fsr2h	equ	0xFDA
  1795                           fsr2l	equ	0xFD9
  1796                           status	equ	0xFD8
  1797                           
  1798 ;; *************** function _Set_Display *****************
  1799 ;; Defined at:
  1800 ;;		line 114 in file "display.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  type            1    wreg     unsigned char 
  1803 ;;  information     1   28[COMRAM] unsigned char 
  1804 ;;  value           2   29[COMRAM] unsigned int 
  1805 ;; Auto vars:     Size  Location     Type
  1806 ;;  type            1   31[COMRAM] unsigned char 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;		None               void
  1809 ;; Registers used:
  1810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMRAM   BANK0   BANK1
  1816 ;;      Params:         3       0       0
  1817 ;;      Locals:         1       0       0
  1818 ;;      Temps:          0       0       0
  1819 ;;      Totals:         4       0       0
  1820 ;;Total ram usage:        4 bytes
  1821 ;; Hardware stack levels used:    1
  1822 ;; Hardware stack levels required when called:    6
  1823 ;; This function calls:
  1824 ;;		_Evaluate_Display
  1825 ;;		_Evaluate_Signs
  1826 ;; This function is called by:
  1827 ;;		_Check_Buttons
  1828 ;; This function uses a non-reentrant model
  1829 ;;
  1830                           
  1831                           	psect	text10
  1832  0008B0                     __ptext10:
  1833                           	opt stack 0
  1834  0008B0                     _Set_Display:
  1835                           	opt stack 23
  1836                           
  1837                           ;incstack = 0
  1838                           ;Set_Display@type stored from wreg
  1839  0008B0  6E20               	movwf	Set_Display@type,c
  1840                           
  1841                           ;display.c: 116: switch (type) {
  1842  0008B2  D019               	goto	l1594
  1843  0008B4                     l1580:
  1844                           
  1845                           ;display.c: 118: if(information != '-') {
  1846  0008B4  0E2D               	movlw	45
  1847  0008B6  181D               	xorwf	Set_Display@information,w,c
  1848  0008B8  B4D8               	btfsc	status,2,c
  1849  0008BA  D00E               	goto	l1590
  1850                           
  1851                           ;display.c: 119: signs[0] = information;
  1852  0008BC  C01D  F028         	movff	Set_Display@information,_signs
  1853                           
  1854                           ;display.c: 120: signs[1] = '-';
  1855  0008C0  0E2D               	movlw	45
  1856  0008C2  6E29               	movwf	_signs+1,c
  1857                           
  1858                           ;display.c: 121: signs[2] = value;
  1859  0008C4  C01E  F02A         	movff	Set_Display@value,_signs+2
  1860                           
  1861                           ;display.c: 122: Evaluate_Display(sizeof(signs), signs);
  1862  0008C8  0E28               	movlw	low _signs
  1863  0008CA  6E16               	movwf	Evaluate_Display@evaluate,c
  1864  0008CC  0E00               	movlw	high _signs
  1865  0008CE  6E17               	movwf	Evaluate_Display@evaluate+1,c
  1866  0008D0  0E03               	movlw	3
  1867  0008D2  ECA8  F002         	call	_Evaluate_Display
  1868                           
  1869                           ;display.c: 123: } else {
  1870  0008D6  0012               	return	
  1871  0008D8                     l1590:
  1872                           
  1873                           ;display.c: 124: Evaluate_Signs(value);
  1874  0008D8  C01E  F01A         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  1875  0008DC  C01F  F01B         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  1876  0008E0  EC0E  F004         	call	_Evaluate_Signs	;wreg free
  1877                           
  1878                           ;display.c: 130: }
  1879                           
  1880                           ;display.c: 129: break;
  1881                           
  1882                           ;display.c: 127: case 'L':
  1883                           
  1884                           ;display.c: 125: }
  1885                           ;display.c: 126: break;
  1886  0008E4  0012               	return	
  1887  0008E6                     l1594:
  1888  0008E6  5020               	movf	Set_Display@type,w,c
  1889                           
  1890                           ; Switch size 1, requested type "space"
  1891                           ; Number of cases is 2, Range of values is 55 to 76
  1892                           ; switch strategies available:
  1893                           ; Name         Instructions Cycles
  1894                           ; simple_byte            7     4 (average)
  1895                           ;	Chosen strategy is simple_byte
  1896  0008E8  0A37               	xorlw	55	; case 55
  1897  0008EA  B4D8               	btfsc	status,2,c
  1898  0008EC  D7E3               	goto	l1580
  1899  0008EE  0A7B               	xorlw	123	; case 76
  1900  0008F0  0012               	return	
  1901  0008F2                     __end_of_Set_Display:
  1902                           	opt stack 0
  1903                           tblptru	equ	0xFF8
  1904                           tblptrh	equ	0xFF7
  1905                           tblptrl	equ	0xFF6
  1906                           tablat	equ	0xFF5
  1907                           prodh	equ	0xFF4
  1908                           prodl	equ	0xFF3
  1909                           intcon	equ	0xFF2
  1910                           postinc0	equ	0xFEE
  1911                           wreg	equ	0xFE8
  1912                           postdec1	equ	0xFE5
  1913                           fsr1l	equ	0xFE1
  1914                           indf2	equ	0xFDF
  1915                           postinc2	equ	0xFDE
  1916                           postdec2	equ	0xFDD
  1917                           plusw2	equ	0xFDB
  1918                           fsr2h	equ	0xFDA
  1919                           fsr2l	equ	0xFD9
  1920                           status	equ	0xFD8
  1921                           
  1922 ;; *************** function _Evaluate_Signs *****************
  1923 ;; Defined at:
  1924 ;;		line 97 in file "display.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  evaluation_v    2   25[COMRAM] unsigned int 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  valuecounter    1   27[COMRAM] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;		None               void
  1931 ;; Registers used:
  1932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1
  1938 ;;      Params:         2       0       0
  1939 ;;      Locals:         1       0       0
  1940 ;;      Temps:          0       0       0
  1941 ;;      Totals:         3       0       0
  1942 ;;Total ram usage:        3 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    5
  1945 ;; This function calls:
  1946 ;;		_Evaluate_Display
  1947 ;;		___lwmod
  1948 ;; This function is called by:
  1949 ;;		_Set_Display
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text11
  1954  00081C                     __ptext11:
  1955                           	opt stack 0
  1956  00081C                     _Evaluate_Signs:
  1957                           	opt stack 23
  1958                           
  1959                           ;display.c: 98: for(unsigned char valuecounter = sizeof(signs); valuecounter > 0;) {
  1960                           
  1961                           ;incstack = 0
  1962  00081C  0E03               	movlw	3
  1963  00081E  6E1C               	movwf	Evaluate_Signs@valuecounter,c
  1964  000820  501C               	movf	Evaluate_Signs@valuecounter,w,c
  1965  000822  B4D8               	btfsc	status,2,c
  1966  000824  D019               	goto	l1508
  1967                           
  1968                           ;display.c: 99: signs[--valuecounter] = evaluation_value % 10;
  1969  000826  061C               	decf	Evaluate_Signs@valuecounter,f,c
  1970  000828  501C               	movf	Evaluate_Signs@valuecounter,w,c
  1971  00082A  0D01               	mullw	1
  1972  00082C  0E28               	movlw	low _signs
  1973  00082E  24F3               	addwf	prodl,w,c
  1974  000830  6ED9               	movwf	fsr2l,c
  1975  000832  0E00               	movlw	high _signs
  1976  000834  20F4               	addwfc	prodh,w,c
  1977  000836  6EDA               	movwf	fsr2h,c
  1978  000838  C01A  F010         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  1979  00083C  C01B  F011         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  1980  000840  0E00               	movlw	0
  1981  000842  6E13               	movwf	___lwmod@divisor+1,c
  1982  000844  0E0A               	movlw	10
  1983  000846  6E12               	movwf	___lwmod@divisor,c
  1984  000848  EC79  F004         	call	___lwmod	;wreg free
  1985  00084C  5010               	movf	?___lwmod,w,c
  1986  00084E  6EDF               	movwf	indf2,c
  1987                           
  1988                           ;display.c: 100: evaluation_value >>= 1;
  1989  000850  90D8               	bcf	status,0,c
  1990  000852  321B               	rrcf	Evaluate_Signs@evaluation_value+1,f,c
  1991  000854  321A               	rrcf	Evaluate_Signs@evaluation_value,f,c
  1992  000856  D7E4               	goto	L3
  1993  000858                     l1508:
  1994                           
  1995                           ;display.c: 101: }
  1996                           ;display.c: 102: Evaluate_Display(sizeof(signs), signs);
  1997  000858  0E28               	movlw	low _signs
  1998  00085A  6E16               	movwf	Evaluate_Display@evaluate,c
  1999  00085C  0E00               	movlw	high _signs
  2000  00085E  6E17               	movwf	Evaluate_Display@evaluate+1,c
  2001  000860  0E03               	movlw	3
  2002  000862  ECA8  F002         	call	_Evaluate_Display
  2003  000866  0012               	return		;funcret
  2004  000868                     __end_of_Evaluate_Signs:
  2005                           	opt stack 0
  2006                           tblptru	equ	0xFF8
  2007                           tblptrh	equ	0xFF7
  2008                           tblptrl	equ	0xFF6
  2009                           tablat	equ	0xFF5
  2010                           prodh	equ	0xFF4
  2011                           prodl	equ	0xFF3
  2012                           intcon	equ	0xFF2
  2013                           postinc0	equ	0xFEE
  2014                           wreg	equ	0xFE8
  2015                           postdec1	equ	0xFE5
  2016                           fsr1l	equ	0xFE1
  2017                           indf2	equ	0xFDF
  2018                           postinc2	equ	0xFDE
  2019                           postdec2	equ	0xFDD
  2020                           plusw2	equ	0xFDB
  2021                           fsr2h	equ	0xFDA
  2022                           fsr2l	equ	0xFD9
  2023                           status	equ	0xFD8
  2024                           
  2025 ;; *************** function ___lwmod *****************
  2026 ;; Defined at:
  2027 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2028 ;; Parameters:    Size  Location     Type
  2029 ;;  dividend        2   15[COMRAM] unsigned int 
  2030 ;;  divisor         2   17[COMRAM] unsigned int 
  2031 ;; Auto vars:     Size  Location     Type
  2032 ;;  counter         1   19[COMRAM] unsigned char 
  2033 ;; Return value:  Size  Location     Type
  2034 ;;                  2   15[COMRAM] unsigned int 
  2035 ;; Registers used:
  2036 ;;		wreg, status,2, status,0
  2037 ;; Tracked objects:
  2038 ;;		On entry : 0/0
  2039 ;;		On exit  : 0/0
  2040 ;;		Unchanged: 0/0
  2041 ;; Data sizes:     COMRAM   BANK0   BANK1
  2042 ;;      Params:         4       0       0
  2043 ;;      Locals:         1       0       0
  2044 ;;      Temps:          0       0       0
  2045 ;;      Totals:         5       0       0
  2046 ;;Total ram usage:        5 bytes
  2047 ;; Hardware stack levels used:    1
  2048 ;; Hardware stack levels required when called:    2
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		_Evaluate_Signs
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text12
  2057  0008F2                     __ptext12:
  2058                           	opt stack 0
  2059  0008F2                     ___lwmod:
  2060                           	opt stack 25
  2061                           
  2062                           ;incstack = 0
  2063  0008F2  5012               	movf	___lwmod@divisor,w,c
  2064  0008F4  1013               	iorwf	___lwmod@divisor+1,w,c
  2065  0008F6  B4D8               	btfsc	status,2,c
  2066  0008F8  D018               	goto	l845
  2067  0008FA  0E01               	movlw	1
  2068  0008FC  6E14               	movwf	___lwmod@counter,c
  2069  0008FE  D004               	goto	l1488
  2070  000900                     l1486:
  2071  000900  90D8               	bcf	status,0,c
  2072  000902  3612               	rlcf	___lwmod@divisor,f,c
  2073  000904  3613               	rlcf	___lwmod@divisor+1,f,c
  2074  000906  2A14               	incf	___lwmod@counter,f,c
  2075  000908                     l1488:
  2076  000908  AE13               	btfss	___lwmod@divisor+1,7,c
  2077  00090A  D7FA               	goto	l1486
  2078  00090C                     l1490:
  2079  00090C  5012               	movf	___lwmod@divisor,w,c
  2080  00090E  5C10               	subwf	___lwmod@dividend,w,c
  2081  000910  5013               	movf	___lwmod@divisor+1,w,c
  2082  000912  5811               	subwfb	___lwmod@dividend+1,w,c
  2083  000914  A0D8               	btfss	status,0,c
  2084  000916  D004               	goto	l1494
  2085  000918  5012               	movf	___lwmod@divisor,w,c
  2086  00091A  5E10               	subwf	___lwmod@dividend,f,c
  2087  00091C  5013               	movf	___lwmod@divisor+1,w,c
  2088  00091E  5A11               	subwfb	___lwmod@dividend+1,f,c
  2089  000920                     l1494:
  2090  000920  90D8               	bcf	status,0,c
  2091  000922  3213               	rrcf	___lwmod@divisor+1,f,c
  2092  000924  3212               	rrcf	___lwmod@divisor,f,c
  2093  000926  2E14               	decfsz	___lwmod@counter,f,c
  2094  000928  D7F1               	goto	l1490
  2095  00092A                     l845:
  2096  00092A  C010  F010         	movff	___lwmod@dividend,?___lwmod
  2097  00092E  C011  F011         	movff	___lwmod@dividend+1,?___lwmod+1
  2098  000932  0012               	return		;funcret
  2099  000934                     __end_of___lwmod:
  2100                           	opt stack 0
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           prodh	equ	0xFF4
  2106                           prodl	equ	0xFF3
  2107                           intcon	equ	0xFF2
  2108                           postinc0	equ	0xFEE
  2109                           wreg	equ	0xFE8
  2110                           postdec1	equ	0xFE5
  2111                           fsr1l	equ	0xFE1
  2112                           indf2	equ	0xFDF
  2113                           postinc2	equ	0xFDE
  2114                           postdec2	equ	0xFDD
  2115                           plusw2	equ	0xFDB
  2116                           fsr2h	equ	0xFDA
  2117                           fsr2l	equ	0xFD9
  2118                           status	equ	0xFD8
  2119                           
  2120 ;; *************** function _Evaluate_Display *****************
  2121 ;; Defined at:
  2122 ;;		line 47 in file "display.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  size            1    wreg     unsigned char 
  2125 ;;  evaluate        2   21[COMRAM] PTR unsigned char 
  2126 ;;		 -> signs(3), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  size            1   23[COMRAM] unsigned char 
  2129 ;;  counter         1   24[COMRAM] unsigned char 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;		None               void
  2132 ;; Registers used:
  2133 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1
  2139 ;;      Params:         2       0       0
  2140 ;;      Locals:         2       0       0
  2141 ;;      Temps:          0       0       0
  2142 ;;      Totals:         4       0       0
  2143 ;;Total ram usage:        4 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    4
  2146 ;; This function calls:
  2147 ;;		_Set_Bits
  2148 ;; This function is called by:
  2149 ;;		_Evaluate_Signs
  2150 ;;		_Set_Display
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text13
  2155  000550                     __ptext13:
  2156                           	opt stack 0
  2157  000550                     _Evaluate_Display:
  2158                           	opt stack 23
  2159                           
  2160                           ;incstack = 0
  2161                           ;Evaluate_Display@size stored from wreg
  2162  000550  6E18               	movwf	Evaluate_Display@size,c
  2163                           
  2164                           ;display.c: 48: for(unsigned char counter = size; counter > 0;)
  2165  000552  C018  F019         	movff	Evaluate_Display@size,Evaluate_Display@counter
  2166  000556                     l1446:
  2167  000556  5019               	movf	Evaluate_Display@counter,w,c
  2168  000558  B4D8               	btfsc	status,2,c
  2169  00055A  0012               	return	
  2170  00055C  D05B               	goto	l1478
  2171  00055E                     l1450:
  2172                           
  2173                           ;display.c: 51: Set_Bits("ABCDEF");
  2174  00055E  0E09               	movlw	low STR_1
  2175  000560  6E10               	movwf	Set_Bits@bits,c
  2176  000562  0E02               	movlw	high STR_1
  2177  000564  6E11               	movwf	Set_Bits@bits+1,c
  2178  000566  EC96  F003         	call	_Set_Bits	;wreg free
  2179                           
  2180                           ;display.c: 52: break;
  2181  00056A  D7F5               	goto	l1446
  2182  00056C                     l1452:
  2183                           
  2184                           ;display.c: 54: Set_Bits("BC");
  2185  00056C  0E43               	movlw	low (STR_8+1)
  2186  00056E  6E10               	movwf	Set_Bits@bits,c
  2187  000570  0E02               	movlw	high (STR_8+1)
  2188  000572  6E11               	movwf	Set_Bits@bits+1,c
  2189  000574  EC96  F003         	call	_Set_Bits	;wreg free
  2190                           
  2191                           ;display.c: 55: break;
  2192  000578  D7EE               	goto	l1446
  2193  00057A                     l1454:
  2194                           
  2195                           ;display.c: 57: Set_Bits("ABDEG");
  2196  00057A  0E2B               	movlw	low STR_3
  2197  00057C  6E10               	movwf	Set_Bits@bits,c
  2198  00057E  0E02               	movlw	high STR_3
  2199  000580  6E11               	movwf	Set_Bits@bits+1,c
  2200  000582  EC96  F003         	call	_Set_Bits	;wreg free
  2201                           
  2202                           ;display.c: 58: break;
  2203  000586  D7E7               	goto	l1446
  2204  000588                     l1456:
  2205                           
  2206                           ;display.c: 60: Set_Bits("ABCDG");
  2207  000588  0E25               	movlw	low STR_4
  2208  00058A  6E10               	movwf	Set_Bits@bits,c
  2209  00058C  0E02               	movlw	high STR_4
  2210  00058E  6E11               	movwf	Set_Bits@bits+1,c
  2211  000590  EC96  F003         	call	_Set_Bits	;wreg free
  2212                           
  2213                           ;display.c: 61: break;
  2214  000594  D7E0               	goto	l1446
  2215  000596                     l1458:
  2216                           
  2217                           ;display.c: 63: Set_Bits("BCFG");
  2218  000596  0E3D               	movlw	low STR_5
  2219  000598  6E10               	movwf	Set_Bits@bits,c
  2220  00059A  0E02               	movlw	high STR_5
  2221  00059C  6E11               	movwf	Set_Bits@bits+1,c
  2222  00059E  EC96  F003         	call	_Set_Bits	;wreg free
  2223                           
  2224                           ;display.c: 64: break;
  2225  0005A2  D7D9               	goto	l1446
  2226  0005A4                     l1460:
  2227                           
  2228                           ;display.c: 66: Set_Bits("ACDFG");
  2229  0005A4  0E31               	movlw	low STR_6
  2230  0005A6  6E10               	movwf	Set_Bits@bits,c
  2231  0005A8  0E02               	movlw	high STR_6
  2232  0005AA  6E11               	movwf	Set_Bits@bits+1,c
  2233  0005AC  EC96  F003         	call	_Set_Bits	;wreg free
  2234                           
  2235                           ;display.c: 67: break;
  2236  0005B0  D7D2               	goto	l1446
  2237  0005B2                     l1462:
  2238                           
  2239                           ;display.c: 69: Set_Bits("ACDEFG");
  2240  0005B2  0E1E               	movlw	low STR_7
  2241  0005B4  6E10               	movwf	Set_Bits@bits,c
  2242  0005B6  0E02               	movlw	high STR_7
  2243  0005B8  6E11               	movwf	Set_Bits@bits+1,c
  2244  0005BA  EC96  F003         	call	_Set_Bits	;wreg free
  2245                           
  2246                           ;display.c: 70: break;
  2247  0005BE  D7CB               	goto	l1446
  2248  0005C0                     l1464:
  2249                           
  2250                           ;display.c: 72: Set_Bits("ABC");
  2251  0005C0  0E42               	movlw	low STR_8
  2252  0005C2  6E10               	movwf	Set_Bits@bits,c
  2253  0005C4  0E02               	movlw	high STR_8
  2254  0005C6  6E11               	movwf	Set_Bits@bits+1,c
  2255  0005C8  EC96  F003         	call	_Set_Bits	;wreg free
  2256                           
  2257                           ;display.c: 73: break;
  2258  0005CC  D7C4               	goto	l1446
  2259  0005CE                     l1466:
  2260                           
  2261                           ;display.c: 75: Set_Bits("ABCDEFG");
  2262  0005CE  0E01               	movlw	low STR_9
  2263  0005D0  6E10               	movwf	Set_Bits@bits,c
  2264  0005D2  0E02               	movlw	high STR_9
  2265  0005D4  6E11               	movwf	Set_Bits@bits+1,c
  2266  0005D6  EC96  F003         	call	_Set_Bits	;wreg free
  2267                           
  2268                           ;display.c: 76: break;
  2269  0005DA  D7BD               	goto	l1446
  2270  0005DC                     l1468:
  2271                           
  2272                           ;display.c: 78: Set_Bits("ABCDFG");
  2273  0005DC  0E10               	movlw	low STR_10
  2274  0005DE  6E10               	movwf	Set_Bits@bits,c
  2275  0005E0  0E02               	movlw	high STR_10
  2276  0005E2  6E11               	movwf	Set_Bits@bits+1,c
  2277  0005E4  EC96  F003         	call	_Set_Bits	;wreg free
  2278                           
  2279                           ;display.c: 79: break;
  2280  0005E8  D7B6               	goto	l1446
  2281  0005EA                     l1470:
  2282                           
  2283                           ;display.c: 81: Set_Bits("ADEFG");
  2284  0005EA  0E37               	movlw	low STR_11
  2285  0005EC  6E10               	movwf	Set_Bits@bits,c
  2286  0005EE  0E02               	movlw	high STR_11
  2287  0005F0  6E11               	movwf	Set_Bits@bits+1,c
  2288  0005F2  EC96  F003         	call	_Set_Bits	;wreg free
  2289                           
  2290                           ;display.c: 82: break;
  2291  0005F6  D7AF               	goto	l1446
  2292  0005F8                     l1472:
  2293                           
  2294                           ;display.c: 84: Set_Bits("ABCEFG");
  2295  0005F8  0E17               	movlw	low STR_12
  2296  0005FA  6E10               	movwf	Set_Bits@bits,c
  2297  0005FC  0E02               	movlw	high STR_12
  2298  0005FE  6E11               	movwf	Set_Bits@bits+1,c
  2299  000600  EC96  F003         	call	_Set_Bits	;wreg free
  2300                           
  2301                           ;display.c: 85: break;
  2302  000604  D7A8               	goto	l1446
  2303  000606                     l1474:
  2304                           
  2305                           ;display.c: 87: Set_Bits("G");
  2306  000606  0E29               	movlw	low (STR_4+4)
  2307  000608  6E10               	movwf	Set_Bits@bits,c
  2308  00060A  0E02               	movlw	high (STR_4+4)
  2309  00060C  6E11               	movwf	Set_Bits@bits+1,c
  2310  00060E  EC96  F003         	call	_Set_Bits	;wreg free
  2311                           
  2312                           ;display.c: 89: }
  2313                           
  2314                           ;display.c: 88: break;
  2315  000612  D7A1               	goto	l1446
  2316  000614                     l1478:
  2317  000614  0618               	decf	Evaluate_Display@size,f,c
  2318  000616  5018               	movf	Evaluate_Display@size,w,c
  2319  000618  0D01               	mullw	1
  2320  00061A  50F3               	movf	prodl,w,c
  2321  00061C  2416               	addwf	Evaluate_Display@evaluate,w,c
  2322  00061E  6ED9               	movwf	fsr2l,c
  2323  000620  50F4               	movf	prodh,w,c
  2324  000622  2017               	addwfc	Evaluate_Display@evaluate+1,w,c
  2325  000624  6EDA               	movwf	fsr2h,c
  2326  000626  50DF               	movf	indf2,w,c
  2327                           
  2328                           ; Switch size 1, requested type "space"
  2329                           ; Number of cases is 13, Range of values is 45 to 69
  2330                           ; switch strategies available:
  2331                           ; Name         Instructions Cycles
  2332                           ; simple_byte           40    21 (average)
  2333                           ;	Chosen strategy is simple_byte
  2334  000628  0A2D               	xorlw	45	; case 45
  2335  00062A  B4D8               	btfsc	status,2,c
  2336  00062C  D7EC               	goto	l1474
  2337  00062E  0A1D               	xorlw	29	; case 48
  2338  000630  B4D8               	btfsc	status,2,c
  2339  000632  D795               	goto	l1450
  2340  000634  0A01               	xorlw	1	; case 49
  2341  000636  B4D8               	btfsc	status,2,c
  2342  000638  D799               	goto	l1452
  2343  00063A  0A03               	xorlw	3	; case 50
  2344  00063C  B4D8               	btfsc	status,2,c
  2345  00063E  D79D               	goto	l1454
  2346  000640  0A01               	xorlw	1	; case 51
  2347  000642  B4D8               	btfsc	status,2,c
  2348  000644  D7A1               	goto	l1456
  2349  000646  0A07               	xorlw	7	; case 52
  2350  000648  B4D8               	btfsc	status,2,c
  2351  00064A  D7A5               	goto	l1458
  2352  00064C  0A01               	xorlw	1	; case 53
  2353  00064E  B4D8               	btfsc	status,2,c
  2354  000650  D7A9               	goto	l1460
  2355  000652  0A03               	xorlw	3	; case 54
  2356  000654  B4D8               	btfsc	status,2,c
  2357  000656  D7AD               	goto	l1462
  2358  000658  0A01               	xorlw	1	; case 55
  2359  00065A  B4D8               	btfsc	status,2,c
  2360  00065C  D7B1               	goto	l1464
  2361  00065E  0A0F               	xorlw	15	; case 56
  2362  000660  B4D8               	btfsc	status,2,c
  2363  000662  D7B5               	goto	l1466
  2364  000664  0A01               	xorlw	1	; case 57
  2365  000666  B4D8               	btfsc	status,2,c
  2366  000668  D7B9               	goto	l1468
  2367  00066A  0A78               	xorlw	120	; case 65
  2368  00066C  B4D8               	btfsc	status,2,c
  2369  00066E  D7C4               	goto	l1472
  2370  000670  0A04               	xorlw	4	; case 69
  2371  000672  B4D8               	btfsc	status,2,c
  2372  000674  D7BA               	goto	l1470
  2373  000676  D76F               	goto	l1446
  2374  000678                     __end_of_Evaluate_Display:
  2375                           	opt stack 0
  2376                           tblptru	equ	0xFF8
  2377                           tblptrh	equ	0xFF7
  2378                           tblptrl	equ	0xFF6
  2379                           tablat	equ	0xFF5
  2380                           prodh	equ	0xFF4
  2381                           prodl	equ	0xFF3
  2382                           intcon	equ	0xFF2
  2383                           postinc0	equ	0xFEE
  2384                           wreg	equ	0xFE8
  2385                           postdec1	equ	0xFE5
  2386                           fsr1l	equ	0xFE1
  2387                           indf2	equ	0xFDF
  2388                           postinc2	equ	0xFDE
  2389                           postdec2	equ	0xFDD
  2390                           plusw2	equ	0xFDB
  2391                           fsr2h	equ	0xFDA
  2392                           fsr2l	equ	0xFD9
  2393                           status	equ	0xFD8
  2394                           
  2395 ;; *************** function _Set_Bits *****************
  2396 ;; Defined at:
  2397 ;;		line 9 in file "display.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  bits            2   15[COMRAM] PTR const unsigned char 
  2400 ;;		 -> STR_13(2), STR_12(7), STR_11(6), STR_10(7), 
  2401 ;;		 -> STR_9(8), STR_8(4), STR_7(7), STR_6(6), 
  2402 ;;		 -> STR_5(5), STR_4(6), STR_3(6), STR_2(3), 
  2403 ;;		 -> STR_1(7), 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  bitcount        1   19[COMRAM] unsigned char 
  2406 ;;  Bitoutput       1   20[COMRAM] unsigned char 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;		None               void
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1
  2416 ;;      Params:         2       0       0
  2417 ;;      Locals:         2       0       0
  2418 ;;      Temps:          2       0       0
  2419 ;;      Totals:         6       0       0
  2420 ;;Total ram usage:        6 bytes
  2421 ;; Hardware stack levels used:    1
  2422 ;; Hardware stack levels required when called:    3
  2423 ;; This function calls:
  2424 ;;		_Write_Display
  2425 ;; This function is called by:
  2426 ;;		_Evaluate_Display
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text14
  2431  00072C                     __ptext14:
  2432                           	opt stack 0
  2433  00072C                     _Set_Bits:
  2434                           	opt stack 23
  2435                           
  2436                           ;display.c: 10: unsigned char Bitoutput = 0;
  2437                           
  2438                           ;incstack = 0
  2439  00072C  0E00               	movlw	0
  2440  00072E  6E15               	movwf	Set_Bits@Bitoutput,c
  2441                           
  2442                           ;display.c: 11: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  2443  000730  0E00               	movlw	0
  2444  000732  6E14               	movwf	Set_Bits@bitcount,c
  2445                           
  2446                           ;display.c: 12: bitcount++) {
  2447  000734  D034               	goto	l1440
  2448  000736                     l1420:
  2449                           
  2450                           ;display.c: 15: Bitoutput |= 0b00000001;
  2451  000736  8015               	bsf	Set_Bits@Bitoutput,0,c
  2452                           
  2453                           ;display.c: 16: break;
  2454  000738  D031               	goto	l1438
  2455  00073A                     l1422:
  2456                           
  2457                           ;display.c: 18: Bitoutput |= 0b00000010;
  2458  00073A  8215               	bsf	Set_Bits@Bitoutput,1,c
  2459                           
  2460                           ;display.c: 19: break;
  2461  00073C  D02F               	goto	l1438
  2462  00073E                     l1424:
  2463                           
  2464                           ;display.c: 21: Bitoutput |= 0b00000100;
  2465  00073E  8415               	bsf	Set_Bits@Bitoutput,2,c
  2466                           
  2467                           ;display.c: 22: break;
  2468  000740  D02D               	goto	l1438
  2469  000742                     l1426:
  2470                           
  2471                           ;display.c: 24: Bitoutput |= 0b00001000;
  2472  000742  8615               	bsf	Set_Bits@Bitoutput,3,c
  2473                           
  2474                           ;display.c: 25: break;
  2475  000744  D02B               	goto	l1438
  2476  000746                     l1428:
  2477                           
  2478                           ;display.c: 27: Bitoutput |= 0b00010000;
  2479  000746  8815               	bsf	Set_Bits@Bitoutput,4,c
  2480                           
  2481                           ;display.c: 28: break;
  2482  000748  D029               	goto	l1438
  2483  00074A                     l1430:
  2484                           
  2485                           ;display.c: 30: Bitoutput |= 0b00100000;
  2486  00074A  8A15               	bsf	Set_Bits@Bitoutput,5,c
  2487                           
  2488                           ;display.c: 31: break;
  2489  00074C  D027               	goto	l1438
  2490  00074E                     l1432:
  2491                           
  2492                           ;display.c: 33: Bitoutput |= 0b01000000;
  2493  00074E  8C15               	bsf	Set_Bits@Bitoutput,6,c
  2494                           
  2495                           ;display.c: 35: }
  2496                           
  2497                           ;display.c: 34: break;
  2498  000750  D025               	goto	l1438
  2499  000752                     l1436:
  2500  000752  5014               	movf	Set_Bits@bitcount,w,c
  2501  000754  0D01               	mullw	1
  2502  000756  C010  F012         	movff	Set_Bits@bits,??_Set_Bits
  2503  00075A  C011  F013         	movff	Set_Bits@bits+1,??_Set_Bits+1
  2504  00075E  50F3               	movf	prodl,w,c
  2505  000760  2612               	addwf	??_Set_Bits,f,c
  2506  000762  50F4               	movf	prodh,w,c
  2507  000764  2213               	addwfc	??_Set_Bits+1,f,c
  2508  000766  C012  FFF6         	movff	??_Set_Bits,tblptrl
  2509  00076A  C013  FFF7         	movff	??_Set_Bits+1,tblptrh
  2510  00076E                     	if	0	;tblptru may be non-zero
  2511  00076E                     	endif
  2512  00076E                     	if	0	;tblptru may be non-zero
  2513  00076E                     	endif
  2514  00076E  0008               	tblrd		*
  2515  000770  50F5               	movf	tablat,w,c
  2516                           
  2517                           ; Switch size 1, requested type "space"
  2518                           ; Number of cases is 7, Range of values is 65 to 71
  2519                           ; switch strategies available:
  2520                           ; Name         Instructions Cycles
  2521                           ; simple_byte           22    12 (average)
  2522                           ;	Chosen strategy is simple_byte
  2523  000772  0A41               	xorlw	65	; case 65
  2524  000774  B4D8               	btfsc	status,2,c
  2525  000776  D7DF               	goto	l1420
  2526  000778  0A03               	xorlw	3	; case 66
  2527  00077A  B4D8               	btfsc	status,2,c
  2528  00077C  D7DE               	goto	l1422
  2529  00077E  0A01               	xorlw	1	; case 67
  2530  000780  B4D8               	btfsc	status,2,c
  2531  000782  D7DD               	goto	l1424
  2532  000784  0A07               	xorlw	7	; case 68
  2533  000786  B4D8               	btfsc	status,2,c
  2534  000788  D7DC               	goto	l1426
  2535  00078A  0A01               	xorlw	1	; case 69
  2536  00078C  B4D8               	btfsc	status,2,c
  2537  00078E  D7DB               	goto	l1428
  2538  000790  0A03               	xorlw	3	; case 70
  2539  000792  B4D8               	btfsc	status,2,c
  2540  000794  D7DA               	goto	l1430
  2541  000796  0A01               	xorlw	1	; case 71
  2542  000798  B4D8               	btfsc	status,2,c
  2543  00079A  D7D9               	goto	l1432
  2544  00079C                     l1438:
  2545  00079C  2A14               	incf	Set_Bits@bitcount,f,c
  2546  00079E                     l1440:
  2547  00079E  5014               	movf	Set_Bits@bitcount,w,c
  2548  0007A0  0D01               	mullw	1
  2549  0007A2  C010  F012         	movff	Set_Bits@bits,??_Set_Bits
  2550  0007A6  C011  F013         	movff	Set_Bits@bits+1,??_Set_Bits+1
  2551  0007AA  50F3               	movf	prodl,w,c
  2552  0007AC  2612               	addwf	??_Set_Bits,f,c
  2553  0007AE  50F4               	movf	prodh,w,c
  2554  0007B0  2213               	addwfc	??_Set_Bits+1,f,c
  2555  0007B2  C012  FFF6         	movff	??_Set_Bits,tblptrl
  2556  0007B6  C013  FFF7         	movff	??_Set_Bits+1,tblptrh
  2557  0007BA                     	if	0	;tblptru may be non-zero
  2558  0007BA                     	endif
  2559  0007BA                     	if	0	;tblptru may be non-zero
  2560  0007BA                     	endif
  2561  0007BA  0008               	tblrd		*
  2562  0007BC  50F5               	movf	tablat,w,c
  2563  0007BE  0900               	iorlw	0
  2564  0007C0  A4D8               	btfss	status,2,c
  2565  0007C2  D7C7               	goto	l1436
  2566                           
  2567                           ;display.c: 36: }
  2568                           ;display.c: 37: Write_Display(Bitoutput);
  2569  0007C4  5015               	movf	Set_Bits@Bitoutput,w,c
  2570  0007C6  EC31  F005         	call	_Write_Display
  2571  0007CA  0012               	return		;funcret
  2572  0007CC                     __end_of_Set_Bits:
  2573                           	opt stack 0
  2574                           tblptru	equ	0xFF8
  2575                           tblptrh	equ	0xFF7
  2576                           tblptrl	equ	0xFF6
  2577                           tablat	equ	0xFF5
  2578                           prodh	equ	0xFF4
  2579                           prodl	equ	0xFF3
  2580                           intcon	equ	0xFF2
  2581                           postinc0	equ	0xFEE
  2582                           wreg	equ	0xFE8
  2583                           postdec1	equ	0xFE5
  2584                           fsr1l	equ	0xFE1
  2585                           indf2	equ	0xFDF
  2586                           postinc2	equ	0xFDE
  2587                           postdec2	equ	0xFDD
  2588                           plusw2	equ	0xFDB
  2589                           fsr2h	equ	0xFDA
  2590                           fsr2l	equ	0xFD9
  2591                           status	equ	0xFD8
  2592                           
  2593 ;; *************** function _Write_Display *****************
  2594 ;; Defined at:
  2595 ;;		line 42 in file "communication.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  write_data      1    wreg     unsigned char 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  write_data      1    0[COMRAM] unsigned char 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;		None               void
  2602 ;; Registers used:
  2603 ;;		wreg
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMRAM   BANK0   BANK1
  2609 ;;      Params:         0       0       0
  2610 ;;      Locals:         0       0       0
  2611 ;;      Temps:          0       0       0
  2612 ;;      Totals:         0       0       0
  2613 ;;Total ram usage:        0 bytes
  2614 ;; Hardware stack levels used:    1
  2615 ;; Hardware stack levels required when called:    2
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_Set_Bits
  2620 ;;		_Display
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text15
  2625  000A62                     __ptext15:
  2626                           	opt stack 0
  2627  000A62                     _Write_Display:
  2628                           	opt stack 23
  2629                           
  2630                           ;incstack = 0
  2631  000A62  0012               	return		;funcret
  2632  000A64                     __end_of_Write_Display:
  2633                           	opt stack 0
  2634                           tblptru	equ	0xFF8
  2635                           tblptrh	equ	0xFF7
  2636                           tblptrl	equ	0xFF6
  2637                           tablat	equ	0xFF5
  2638                           prodh	equ	0xFF4
  2639                           prodl	equ	0xFF3
  2640                           intcon	equ	0xFF2
  2641                           postinc0	equ	0xFEE
  2642                           wreg	equ	0xFE8
  2643                           postdec1	equ	0xFE5
  2644                           fsr1l	equ	0xFE1
  2645                           indf2	equ	0xFDF
  2646                           postinc2	equ	0xFDE
  2647                           postdec2	equ	0xFDD
  2648                           plusw2	equ	0xFDB
  2649                           fsr2h	equ	0xFDA
  2650                           fsr2l	equ	0xFD9
  2651                           status	equ	0xFD8
  2652                           
  2653 ;; *************** function _Save_Data *****************
  2654 ;; Defined at:
  2655 ;;		line 7 in file "storage.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  store           2   15[COMRAM] unsigned int 
  2658 ;;  store_addres    1   17[COMRAM] unsigned char 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;		None               void
  2663 ;; Registers used:
  2664 ;;		wreg, status,2, status,0
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1
  2670 ;;      Params:         3       0       0
  2671 ;;      Locals:         0       0       0
  2672 ;;      Temps:          0       0       0
  2673 ;;      Totals:         3       0       0
  2674 ;;Total ram usage:        3 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    2
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_Check_Buttons
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text16
  2685  0007CC                     __ptext16:
  2686                           	opt stack 0
  2687  0007CC                     _Save_Data:
  2688                           	opt stack 27
  2689                           
  2690                           ;storage.c: 9: EEADR = store_address;
  2691                           
  2692                           ;incstack = 0
  2693  0007CC  C012  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2694                           
  2695                           ;storage.c: 10: EEDATA = store;
  2696  0007D0  C010  FFA8         	movff	Save_Data@store,4008	;volatile
  2697                           
  2698                           ;storage.c: 11: EECON1bits.EEPGD = 0;
  2699  0007D4  9EA6               	bcf	4006,7,c	;volatile
  2700                           
  2701                           ;storage.c: 12: EECON1bits.CFGS = 0;
  2702  0007D6  9CA6               	bcf	4006,6,c	;volatile
  2703                           
  2704                           ;storage.c: 13: INTCONbits.GIE = 0;
  2705  0007D8  9EF2               	bcf	intcon,7,c	;volatile
  2706                           
  2707                           ;storage.c: 14: EECON1bits.WREN = 1;
  2708  0007DA  84A6               	bsf	4006,2,c	;volatile
  2709                           
  2710                           ;storage.c: 15: EECON2 = 0x55;
  2711  0007DC  0E55               	movlw	85
  2712  0007DE  6EA7               	movwf	4007,c	;volatile
  2713                           
  2714                           ;storage.c: 16: EECON2 = 0xAA;
  2715  0007E0  0EAA               	movlw	170
  2716  0007E2  6EA7               	movwf	4007,c	;volatile
  2717                           
  2718                           ;storage.c: 17: EECON1bits.WR = 1;
  2719  0007E4  82A6               	bsf	4006,1,c	;volatile
  2720  0007E6                     l267:
  2721  0007E6  A8A1               	btfss	4001,4,c	;volatile
  2722  0007E8  D7FE               	goto	l267
  2723                           
  2724                           ;storage.c: 19: PIR2bits.EEIF = 0;
  2725  0007EA  98A1               	bcf	4001,4,c	;volatile
  2726                           
  2727                           ;storage.c: 20: store >>= 8;
  2728  0007EC  5011               	movf	Save_Data@store+1,w,c
  2729  0007EE  6E10               	movwf	Save_Data@store,c
  2730  0007F0  6A11               	clrf	Save_Data@store+1,c
  2731                           
  2732                           ;storage.c: 21: store_address += 50;
  2733  0007F2  0E32               	movlw	50
  2734  0007F4  2612               	addwf	Save_Data@store_address,f,c
  2735                           
  2736                           ;storage.c: 22: EEADR = store_address;
  2737  0007F6  C012  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2738                           
  2739                           ;storage.c: 23: EEDATA = store;
  2740  0007FA  C010  FFA8         	movff	Save_Data@store,4008	;volatile
  2741                           
  2742                           ;storage.c: 24: EECON1bits.EEPGD = 0;
  2743  0007FE  9EA6               	bcf	4006,7,c	;volatile
  2744                           
  2745                           ;storage.c: 25: EECON1bits.CFGS = 0;
  2746  000800  9CA6               	bcf	4006,6,c	;volatile
  2747                           
  2748                           ;storage.c: 26: EECON1bits.WREN = 1;
  2749  000802  84A6               	bsf	4006,2,c	;volatile
  2750                           
  2751                           ;storage.c: 27: INTCONbits.GIE = 0;
  2752  000804  9EF2               	bcf	intcon,7,c	;volatile
  2753                           
  2754                           ;storage.c: 28: EECON2 = 0x55;
  2755  000806  0E55               	movlw	85
  2756  000808  6EA7               	movwf	4007,c	;volatile
  2757                           
  2758                           ;storage.c: 29: EECON2 = 0xAA;
  2759  00080A  0EAA               	movlw	170
  2760  00080C  6EA7               	movwf	4007,c	;volatile
  2761                           
  2762                           ;storage.c: 30: EECON1bits.WR = 1;
  2763  00080E  82A6               	bsf	4006,1,c	;volatile
  2764  000810                     l270:
  2765  000810  A8A1               	btfss	4001,4,c	;volatile
  2766  000812  D7FE               	goto	l270
  2767                           
  2768                           ;storage.c: 32: PIR2bits.EEIF = 0;
  2769  000814  98A1               	bcf	4001,4,c	;volatile
  2770                           
  2771                           ;storage.c: 33: EECON1bits.WREN = 0;
  2772  000816  94A6               	bcf	4006,2,c	;volatile
  2773                           
  2774                           ;storage.c: 34: INTCONbits.GIE = 1;
  2775  000818  8EF2               	bsf	intcon,7,c	;volatile
  2776  00081A  0012               	return		;funcret
  2777  00081C                     __end_of_Save_Data:
  2778                           	opt stack 0
  2779                           tblptru	equ	0xFF8
  2780                           tblptrh	equ	0xFF7
  2781                           tblptrl	equ	0xFF6
  2782                           tablat	equ	0xFF5
  2783                           prodh	equ	0xFF4
  2784                           prodl	equ	0xFF3
  2785                           intcon	equ	0xFF2
  2786                           postinc0	equ	0xFEE
  2787                           wreg	equ	0xFE8
  2788                           postdec1	equ	0xFE5
  2789                           fsr1l	equ	0xFE1
  2790                           indf2	equ	0xFDF
  2791                           postinc2	equ	0xFDE
  2792                           postdec2	equ	0xFDD
  2793                           plusw2	equ	0xFDB
  2794                           fsr2h	equ	0xFDA
  2795                           fsr2l	equ	0xFD9
  2796                           status	equ	0xFD8
  2797                           
  2798 ;; *************** function _Read_Data *****************
  2799 ;; Defined at:
  2800 ;;		line 37 in file "storage.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  read_address    1    wreg     unsigned char 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  read_address    1   19[COMRAM] unsigned char 
  2805 ;;  data_read       2   17[COMRAM] unsigned int 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  2   15[COMRAM] unsigned int 
  2808 ;; Registers used:
  2809 ;;		wreg, status,2, status,0
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMRAM   BANK0   BANK1
  2815 ;;      Params:         2       0       0
  2816 ;;      Locals:         3       0       0
  2817 ;;      Temps:          0       0       0
  2818 ;;      Totals:         5       0       0
  2819 ;;Total ram usage:        5 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    2
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_Check_Buttons
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text17
  2830  000934                     __ptext17:
  2831                           	opt stack 0
  2832  000934                     _Read_Data:
  2833                           	opt stack 27
  2834                           
  2835                           ;incstack = 0
  2836                           ;Read_Data@read_address stored from wreg
  2837  000934  6E14               	movwf	Read_Data@read_address,c
  2838                           
  2839                           ;storage.c: 38: unsigned int data_read = 0;
  2840  000936  0E00               	movlw	0
  2841  000938  6E13               	movwf	Read_Data@data_read+1,c
  2842  00093A  0E00               	movlw	0
  2843  00093C  6E12               	movwf	Read_Data@data_read,c
  2844                           
  2845                           ;storage.c: 39: read_address += 50;
  2846  00093E  0E32               	movlw	50
  2847  000940  2614               	addwf	Read_Data@read_address,f,c
  2848                           
  2849                           ;storage.c: 40: EEADR = read_address;
  2850  000942  C014  FFA9         	movff	Read_Data@read_address,4009	;volatile
  2851                           
  2852                           ;storage.c: 41: EECON1bits.EEPGD = 0;
  2853  000946  9EA6               	bcf	4006,7,c	;volatile
  2854                           
  2855                           ;storage.c: 42: EECON1bits.CFGS = 0;
  2856  000948  9CA6               	bcf	4006,6,c	;volatile
  2857                           
  2858                           ;storage.c: 43: EECON1bits.RD = 1;
  2859  00094A  80A6               	bsf	4006,0,c	;volatile
  2860                           
  2861                           ;storage.c: 44: data_read = EEDATA;
  2862  00094C  CFA8 F012          	movff	4008,Read_Data@data_read	;volatile
  2863  000950  6A13               	clrf	Read_Data@data_read+1,c
  2864                           
  2865                           ;storage.c: 45: read_address -= 50;
  2866  000952  0E32               	movlw	50
  2867  000954  5E14               	subwf	Read_Data@read_address,f,c
  2868                           
  2869                           ;storage.c: 46: data_read <<= 8;
  2870  000956  5012               	movf	Read_Data@data_read,w,c
  2871  000958  6E13               	movwf	Read_Data@data_read+1,c
  2872  00095A  6A12               	clrf	Read_Data@data_read,c
  2873                           
  2874                           ;storage.c: 47: EEADR = read_address;
  2875  00095C  C014  FFA9         	movff	Read_Data@read_address,4009	;volatile
  2876                           
  2877                           ;storage.c: 48: EECON1bits.EEPGD = 0;
  2878  000960  9EA6               	bcf	4006,7,c	;volatile
  2879                           
  2880                           ;storage.c: 49: EECON1bits.CFGS = 0;
  2881  000962  9CA6               	bcf	4006,6,c	;volatile
  2882                           
  2883                           ;storage.c: 50: EECON1bits.RD = 1;
  2884  000964  80A6               	bsf	4006,0,c	;volatile
  2885                           
  2886                           ;storage.c: 51: data_read |= EEDATA;
  2887  000966  50A8               	movf	4008,w,c	;volatile
  2888  000968  1212               	iorwf	Read_Data@data_read,f,c
  2889                           
  2890                           ;storage.c: 52: return(data_read);
  2891  00096A  C012  F010         	movff	Read_Data@data_read,?_Read_Data
  2892  00096E  C013  F011         	movff	Read_Data@data_read+1,?_Read_Data+1
  2893  000972  0012               	return	
  2894  000974                     __end_of_Read_Data:
  2895                           	opt stack 0
  2896                           tblptru	equ	0xFF8
  2897                           tblptrh	equ	0xFF7
  2898                           tblptrl	equ	0xFF6
  2899                           tablat	equ	0xFF5
  2900                           prodh	equ	0xFF4
  2901                           prodl	equ	0xFF3
  2902                           intcon	equ	0xFF2
  2903                           postinc0	equ	0xFEE
  2904                           wreg	equ	0xFE8
  2905                           postdec1	equ	0xFE5
  2906                           fsr1l	equ	0xFE1
  2907                           indf2	equ	0xFDF
  2908                           postinc2	equ	0xFDE
  2909                           postdec2	equ	0xFDD
  2910                           plusw2	equ	0xFDB
  2911                           fsr2h	equ	0xFDA
  2912                           fsr2l	equ	0xFD9
  2913                           status	equ	0xFD8
  2914                           
  2915 ;; *************** function _Delay_Routine *****************
  2916 ;; Defined at:
  2917 ;;		line 73 in file "main.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  delay_multip    1    wreg     unsigned char 
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;  delay_multip    1   16[COMRAM] unsigned char 
  2922 ;;  delay_counte    1   17[COMRAM] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;		None               void
  2925 ;; Registers used:
  2926 ;;		wreg, status,2, status,0, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1
  2932 ;;      Params:         0       0       0
  2933 ;;      Locals:         2       0       0
  2934 ;;      Temps:          1       0       0
  2935 ;;      Totals:         3       0       0
  2936 ;;Total ram usage:        3 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    2
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_Check_Buttons
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text18
  2947  0009C0                     __ptext18:
  2948                           	opt stack 0
  2949  0009C0                     _Delay_Routine:
  2950                           	opt stack 27
  2951                           
  2952                           ;incstack = 0
  2953                           ;Delay_Routine@delay_multiplyer stored from wreg
  2954  0009C0  6E11               	movwf	Delay_Routine@delay_multiplyer,c
  2955                           
  2956                           ;main.c: 74: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  2957  0009C2  0E00               	movlw	0
  2958  0009C4  6E12               	movwf	Delay_Routine@delay_counter,c
  2959                           
  2960                           ;main.c: 75: delay_counter++) {
  2961  0009C6  D008               	goto	l1516
  2962  0009C8                     l1512:
  2963                           
  2964                           ;main.c: 76: _delay((unsigned long)((100)*(4000000/4000.0)));
  2965  0009C8  0E82               	movlw	130
  2966  0009CA  6E10               	movwf	??_Delay_Routine& (0+255),c
  2967  0009CC  0EDE               	movlw	222
  2968  0009CE                     u807:
  2969  0009CE  2EE8               	decfsz	wreg,f,c
  2970  0009D0  D7FE               	goto	u807
  2971  0009D2  2E10               	decfsz	??_Delay_Routine& (0+255),f,c
  2972  0009D4  D7FC               	goto	u807
  2973  0009D6  2A12               	incf	Delay_Routine@delay_counter,f,c
  2974  0009D8                     l1516:
  2975  0009D8  5011               	movf	Delay_Routine@delay_multiplyer,w,c
  2976  0009DA  5C12               	subwf	Delay_Routine@delay_counter,w,c
  2977  0009DC  B0D8               	btfsc	status,0,c
  2978  0009DE  0012               	return	
  2979  0009E0  D7F3               	goto	l1512
  2980  0009E2                     __end_of_Delay_Routine:
  2981                           	opt stack 0
  2982                           tblptru	equ	0xFF8
  2983                           tblptrh	equ	0xFF7
  2984                           tblptrl	equ	0xFF6
  2985                           tablat	equ	0xFF5
  2986                           prodh	equ	0xFF4
  2987                           prodl	equ	0xFF3
  2988                           intcon	equ	0xFF2
  2989                           postinc0	equ	0xFEE
  2990                           wreg	equ	0xFE8
  2991                           postdec1	equ	0xFE5
  2992                           fsr1l	equ	0xFE1
  2993                           indf2	equ	0xFDF
  2994                           postinc2	equ	0xFDE
  2995                           postdec2	equ	0xFDD
  2996                           plusw2	equ	0xFDB
  2997                           fsr2h	equ	0xFDA
  2998                           fsr2l	equ	0xFD9
  2999                           status	equ	0xFD8
  3000                           
  3001 ;; *************** function _Isr *****************
  3002 ;; Defined at:
  3003 ;;		line 3 in file "interrupt.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  received        1   14[COMRAM] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;		None               void
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1
  3017 ;;      Params:         0       0       0
  3018 ;;      Locals:         1       0       0
  3019 ;;      Temps:         14       0       0
  3020 ;;      Totals:        15       0       0
  3021 ;;Total ram usage:       15 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    1
  3024 ;; This function calls:
  3025 ;;		_Receive
  3026 ;; This function is called by:
  3027 ;;		Interrupt level 2
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	intcode
  3032  000008                     __pintcode:
  3033                           	opt stack 0
  3034  000008                     _Isr:
  3035                           	opt stack 23
  3036                           
  3037                           ;incstack = 0
  3038  000008  822C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3039  00000A  CFFA F001          	movff	pclath,??_Isr
  3040  00000E  CFFB F002          	movff	pclatu,??_Isr+1
  3041  000012  CFE9 F003          	movff	fsr0l,??_Isr+2
  3042  000016  CFEA F004          	movff	fsr0h,??_Isr+3
  3043  00001A  CFE1 F005          	movff	fsr1l,??_Isr+4
  3044  00001E  CFE2 F006          	movff	fsr1h,??_Isr+5
  3045  000022  CFD9 F007          	movff	fsr2l,??_Isr+6
  3046  000026  CFDA F008          	movff	fsr2h,??_Isr+7
  3047  00002A  CFF3 F009          	movff	prodl,??_Isr+8
  3048  00002E  CFF4 F00A          	movff	prodh,??_Isr+9
  3049  000032  CFF6 F00B          	movff	tblptrl,??_Isr+10
  3050  000036  CFF7 F00C          	movff	tblptrh,??_Isr+11
  3051  00003A  CFF8 F00D          	movff	tblptru,??_Isr+12
  3052  00003E  CFF5 F00E          	movff	tablat,??_Isr+13
  3053                           
  3054                           ;interrupt.c: 4: if(PIR1bits.RCIF == 1) {
  3055  000042  AA9E               	btfss	3998,5,c	;volatile
  3056  000044  D012               	goto	i2l426
  3057                           
  3058                           ;interrupt.c: 5: PIR1bits.RCIF = 0;
  3059  000046  9A9E               	bcf	3998,5,c	;volatile
  3060                           
  3061                           ;interrupt.c: 6: unsigned char received = 0;
  3062  000048  0E00               	movlw	0
  3063  00004A  6E0F               	movwf	Isr@received,c
  3064                           
  3065                           ;interrupt.c: 7: received = Receive();
  3066  00004C  EC1C  F005         	call	_Receive	;wreg free
  3067  000050  6E0F               	movwf	Isr@received,c
  3068                           
  3069                           ;interrupt.c: 8: __nop();
  3070  000052  F000               	nop	
  3071                           
  3072                           ;interrupt.c: 9: if(received == '1' || received == 'L') {
  3073  000054  0E31               	movlw	49
  3074  000056  180F               	xorwf	Isr@received,w,c
  3075  000058  B4D8               	btfsc	status,2,c
  3076  00005A  D004               	goto	i2l429
  3077  00005C  0E4C               	movlw	76
  3078  00005E  180F               	xorwf	Isr@received,w,c
  3079  000060  A4D8               	btfss	status,2,c
  3080  000062  D002               	goto	i2l427
  3081  000064                     i2l429:
  3082                           
  3083                           ;interrupt.c: 10: PORTAbits.RA0 = 1;
  3084  000064  8080               	bsf	3968,0,c	;volatile
  3085                           
  3086                           ;interrupt.c: 11: }else {
  3087  000066  D001               	goto	i2l426
  3088  000068                     i2l427:
  3089                           
  3090                           ;interrupt.c: 12: PORTAbits.RA0 = 0;
  3091  000068  9080               	bcf	3968,0,c	;volatile
  3092  00006A                     i2l426:
  3093                           
  3094                           ;interrupt.c: 13: }
  3095                           ;interrupt.c: 14: }if(PIR1bits.CCP1IF == 1) {
  3096  00006A  A49E               	btfss	3998,2,c	;volatile
  3097  00006C  D003               	goto	i2l432
  3098                           
  3099                           ;interrupt.c: 15: PIR1bits.CCP1IF = 0;
  3100  00006E  949E               	bcf	3998,2,c	;volatile
  3101                           
  3102                           ;interrupt.c: 16: current_time++;
  3103  000070  4A23               	infsnz	_current_time,f,c
  3104  000072  2A24               	incf	_current_time+1,f,c
  3105  000074                     i2l432:
  3106  000074  C00E  FFF5         	movff	??_Isr+13,tablat
  3107  000078  C00D  FFF8         	movff	??_Isr+12,tblptru
  3108  00007C  C00C  FFF7         	movff	??_Isr+11,tblptrh
  3109  000080  C00B  FFF6         	movff	??_Isr+10,tblptrl
  3110  000084  C00A  FFF4         	movff	??_Isr+9,prodh
  3111  000088  C009  FFF3         	movff	??_Isr+8,prodl
  3112  00008C  C008  FFDA         	movff	??_Isr+7,fsr2h
  3113  000090  C007  FFD9         	movff	??_Isr+6,fsr2l
  3114  000094  C006  FFE2         	movff	??_Isr+5,fsr1h
  3115  000098  C005  FFE1         	movff	??_Isr+4,fsr1l
  3116  00009C  C004  FFEA         	movff	??_Isr+3,fsr0h
  3117  0000A0  C003  FFE9         	movff	??_Isr+2,fsr0l
  3118  0000A4  C002  FFFB         	movff	??_Isr+1,pclatu
  3119  0000A8  C001  FFFA         	movff	??_Isr,pclath
  3120  0000AC  922C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3121  0000AE  0011               	retfie		f
  3122  0000B0                     __end_of_Isr:
  3123                           	opt stack 0
  3124                           pclatu	equ	0xFFB
  3125                           pclath	equ	0xFFA
  3126                           tblptru	equ	0xFF8
  3127                           tblptrh	equ	0xFF7
  3128                           tblptrl	equ	0xFF6
  3129                           tablat	equ	0xFF5
  3130                           prodh	equ	0xFF4
  3131                           prodl	equ	0xFF3
  3132                           intcon	equ	0xFF2
  3133                           postinc0	equ	0xFEE
  3134                           fsr0h	equ	0xFEA
  3135                           fsr0l	equ	0xFE9
  3136                           wreg	equ	0xFE8
  3137                           postdec1	equ	0xFE5
  3138                           fsr1h	equ	0xFE2
  3139                           fsr1l	equ	0xFE1
  3140                           indf2	equ	0xFDF
  3141                           postinc2	equ	0xFDE
  3142                           postdec2	equ	0xFDD
  3143                           plusw2	equ	0xFDB
  3144                           fsr2h	equ	0xFDA
  3145                           fsr2l	equ	0xFD9
  3146                           status	equ	0xFD8
  3147                           
  3148 ;; *************** function _Receive *****************
  3149 ;; Defined at:
  3150 ;;		line 32 in file "communication.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      unsigned char 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1
  3164 ;;      Params:         0       0       0
  3165 ;;      Locals:         0       0       0
  3166 ;;      Temps:          0       0       0
  3167 ;;      Totals:         0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_Isr
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text20
  3178  000A38                     __ptext20:
  3179                           	opt stack 0
  3180  000A38                     _Receive:
  3181                           	opt stack 23
  3182                           
  3183                           ;communication.c: 33: if(RCSTA1bits.OERR == 1) {
  3184                           
  3185                           ;incstack = 0
  3186  000A38  A2AB               	btfss	4011,1,c	;volatile
  3187  000A3A  D004               	goto	i2l395
  3188                           
  3189                           ;communication.c: 34: RCSTA1bits.CREN = 0;
  3190  000A3C  98AB               	bcf	4011,4,c	;volatile
  3191                           
  3192                           ;communication.c: 35: RCSTA1bits.CREN = 1;
  3193  000A3E  88AB               	bsf	4011,4,c	;volatile
  3194                           
  3195                           ;communication.c: 36: overrun = 1;
  3196  000A40  0E01               	movlw	1
  3197  000A42  6E25               	movwf	_overrun,c
  3198  000A44                     i2l395:
  3199                           
  3200                           ;communication.c: 37: }
  3201                           ;communication.c: 39: return (RCREG1);
  3202  000A44  50AE               	movf	4014,w,c	;volatile
  3203  000A46  0012               	return	
  3204  000A48                     __end_of_Receive:
  3205                           	opt stack 0
  3206                           pclatu	equ	0xFFB
  3207                           pclath	equ	0xFFA
  3208                           tblptru	equ	0xFF8
  3209                           tblptrh	equ	0xFF7
  3210                           tblptrl	equ	0xFF6
  3211                           tablat	equ	0xFF5
  3212                           prodh	equ	0xFF4
  3213                           prodl	equ	0xFF3
  3214                           intcon	equ	0xFF2
  3215                           postinc0	equ	0xFEE
  3216                           fsr0h	equ	0xFEA
  3217                           fsr0l	equ	0xFE9
  3218                           wreg	equ	0xFE8
  3219                           postdec1	equ	0xFE5
  3220                           fsr1h	equ	0xFE2
  3221                           fsr1l	equ	0xFE1
  3222                           indf2	equ	0xFDF
  3223                           postinc2	equ	0xFDE
  3224                           postdec2	equ	0xFDD
  3225                           plusw2	equ	0xFDB
  3226                           fsr2h	equ	0xFDA
  3227                           fsr2l	equ	0xFD9
  3228                           status	equ	0xFD8
  3229                           pclatu	equ	0xFFB
  3230                           pclath	equ	0xFFA
  3231                           tblptru	equ	0xFF8
  3232                           tblptrh	equ	0xFF7
  3233                           tblptrl	equ	0xFF6
  3234                           tablat	equ	0xFF5
  3235                           prodh	equ	0xFF4
  3236                           prodl	equ	0xFF3
  3237                           intcon	equ	0xFF2
  3238                           postinc0	equ	0xFEE
  3239                           fsr0h	equ	0xFEA
  3240                           fsr0l	equ	0xFE9
  3241                           wreg	equ	0xFE8
  3242                           postdec1	equ	0xFE5
  3243                           fsr1h	equ	0xFE2
  3244                           fsr1l	equ	0xFE1
  3245                           indf2	equ	0xFDF
  3246                           postinc2	equ	0xFDE
  3247                           postdec2	equ	0xFDD
  3248                           plusw2	equ	0xFDB
  3249                           fsr2h	equ	0xFDA
  3250                           fsr2l	equ	0xFD9
  3251                           status	equ	0xFD8
  3252                           
  3253                           	psect	rparam
  3254  0000                     pclatu	equ	0xFFB
  3255                           pclath	equ	0xFFA
  3256                           tblptru	equ	0xFF8
  3257                           tblptrh	equ	0xFF7
  3258                           tblptrl	equ	0xFF6
  3259                           tablat	equ	0xFF5
  3260                           prodh	equ	0xFF4
  3261                           prodl	equ	0xFF3
  3262                           intcon	equ	0xFF2
  3263                           postinc0	equ	0xFEE
  3264                           fsr0h	equ	0xFEA
  3265                           fsr0l	equ	0xFE9
  3266                           wreg	equ	0xFE8
  3267                           postdec1	equ	0xFE5
  3268                           fsr1h	equ	0xFE2
  3269                           fsr1l	equ	0xFE1
  3270                           indf2	equ	0xFDF
  3271                           postinc2	equ	0xFDE
  3272                           postdec2	equ	0xFDD
  3273                           plusw2	equ	0xFDB
  3274                           fsr2h	equ	0xFDA
  3275                           fsr2l	equ	0xFD9
  3276                           status	equ	0xFD8
  3277                           
  3278                           	psect	temp
  3279  00002C                     btemp:
  3280                           	opt stack 0
  3281  00002C                     	ds	1
  3282  0000                     int$flags	set	btemp
  3283                           pclatu	equ	0xFFB
  3284                           pclath	equ	0xFFA
  3285                           tblptru	equ	0xFF8
  3286                           tblptrh	equ	0xFF7
  3287                           tblptrl	equ	0xFF6
  3288                           tablat	equ	0xFF5
  3289                           prodh	equ	0xFF4
  3290                           prodl	equ	0xFF3
  3291                           intcon	equ	0xFF2
  3292                           postinc0	equ	0xFEE
  3293                           fsr0h	equ	0xFEA
  3294                           fsr0l	equ	0xFE9
  3295                           wreg	equ	0xFE8
  3296                           postdec1	equ	0xFE5
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           indf2	equ	0xFDF
  3300                           postinc2	equ	0xFDE
  3301                           postdec2	equ	0xFDD
  3302                           plusw2	equ	0xFDB
  3303                           fsr2h	equ	0xFDA
  3304                           fsr2l	equ	0xFD9
  3305                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    0
    Data        180
    BSS         65
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     34      43
    BANK0           160      0      57
    BANK1           256      0     180

Pointer List with Targets:

    Evaluate_Display@evaluate	PTR unsigned char  size(2) Largest target is 3
		 -> signs(COMRAM[3]), 

    Set_Bits@bits	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_13(CODE[2]), STR_12(CODE[7]), STR_11(CODE[6]), STR_10(CODE[7]), 
		 -> STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[7]), STR_6(CODE[6]), 
		 -> STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), STR_2(CODE[3]), 
		 -> STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_Check_Buttons
    _Check_Buttons->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits

Critical Paths under _Isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3525
                      _Check_Buttons
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0    3525
                                             32 COMRAM     2     2      0
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (2) _Set_Display                                          4     1      3    3061
                                             28 COMRAM     4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Signs                                       3     1      2    1632
                                             25 COMRAM     3     1      2
                   _Evaluate_Display
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _Evaluate_Display                                     4     2      2    1191
                                             21 COMRAM     4     2      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (5) _Set_Bits                                             6     4      2     952
                                             15 COMRAM     6     4      2
                      _Write_Display
 ---------------------------------------------------------------------------------
 (6) _Write_Display                                        1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     346
                                             15 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2      72
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      46
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Isr                                                 15    15      0      30
                                              0 COMRAM    15    15      0
                            _Receive
 ---------------------------------------------------------------------------------
 (8) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
           _Write_Display
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
             _Write_Display
         ___lwmod
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris

 _Isr (ROOT)
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      39       4       35.6%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     22      2B       1       45.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     118       6        0.0%
DATA                 0      0     118       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Nov 26 23:47:26 2016

       Evaluate_Display@counter 0019        Evaluate_Display@evaluate 0016                              l71 02D6  
                            l83 0488                              l75 0344                              l67 025C  
                            l79 03C0                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                           l270 0810                             l267 07E6                             l845 092A  
                  __CFG_CPB$OFF 000000                    __CFG_CPD$OFF 000000                             u807 09CE  
                           _Isr 0008                             _pin 0100                  _Evaluate_Signs 081C  
                           prod 000FF3                             wreg 000FE8               Set_Bits@Bitoutput 0015  
                    _TXSTA1bits 000FAC                    __CFG_LVP$OFF 000000                            ?_Isr 0001  
                          l1420 0736                            l1430 074A                            l1422 073A  
                          l1512 09C8                            l1432 074E                            l1424 073E  
                          l1440 079E                            l1426 0742                            l1450 055E  
                          l1516 09D8                            l1428 0746                            l1436 0752  
                          l1460 05A4                            l1452 056C                            l1508 0858  
                          l1612 02D2                            l1438 079C                            l1470 05EA  
                          l1462 05B2                            l1454 057A                            l1446 0556  
                          l1622 0340                            l1472 05F8                            l1464 05C0  
                          l1456 0588                            l1632 03BC                            l1474 0606  
                          l1466 05CE                            l1458 0596                            l1490 090C  
                          l1650 0426                            l1642 0412                            l1468 05DC  
                          l1580 08B4                            l1478 0614                            l1494 0920  
                          l1486 0900                            l1590 08D8                            l1646 041C  
                          l1488 0908                            l1656 0432                            l1594 08E6  
                          l1674 04E2                            l1658 0446                            l1684 0A4C  
                          STR_1 0209                            STR_2 0243                            STR_3 022B  
                          STR_4 0225                            STR_5 023D                            STR_6 0231  
                          STR_7 021E                            STR_8 0242                            STR_9 0201  
                          _Init 09E2                            _main 0A48                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 002C                   __CFG_BORV$190 000000                            pclat 000FFA  
                          prodh 000FF4                            prodl 000FF3                            start 00B0  
                 __CFG_IESO$OFF 000000                  Save_Data@store 0010                    ___param_bank 000010  
                 _InitInterrupt 0A52                           ??_Isr 0001                 __end_of_Receive 0A48  
                  _BAUDCON1bits 000FB8                           ?_Init 0001                           ?_main 0001  
                         _EEADR 000FA9                           STR_10 0210                           STR_11 0237  
                         STR_12 0217                           STR_13 0229          __end_of_Evaluate_Signs 0868  
             _InitMiscellaneous 0A5C                 __end_of___lwmod 0934                           i2l432 0074  
                         i2l426 006A                           i2l427 0068                           i2l429 0064  
                         i2l395 0A44          __size_of_Write_Display 0002                           _TMR1H 000FCF  
                         _TMR1L 000FCE                           _PORTA 000F80                           _PORTB 000F81  
                         _PORTC 000F82                           _PORTE 000F84                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISE 000F96  
                 __CFG_WRT0$OFF 000000        __end_of_InitTransmission 09C0                   __CFG_WRT1$OFF 000000  
            ?_InitMiscellaneous 0001                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                _Evaluate_Display 0550                  __CFG_EBTRB$OFF 000000  
                         _signs 0028              __CFG_MCLRE$EXTMCLR 000000                     Isr@received 000F  
                __pbitbssCOMRAM 0158                  __CFG_BOREN$OFF 000000             ??_InitMiscellaneous 0010  
                         tablat 000FF5                           plusw2 000FDB                           status 000FD8  
                ?_InitInterrupt 0001                 __initialization 0868                    __end_of_Init 0A00  
                  __end_of_main 0A52                __end_of_InitPort 0A38                __end_of_InitTris 0A26  
        Set_Display@information 001D       __end_of_InitMiscellaneous 0A62                          ??_Init 0010  
                 ??_Set_Display 0020                          ??_main 0023                __end_of_Set_Bits 07CC  
               ?_Evaluate_Signs 001A                   __activetblptr 000002                          _EEDATA 000FA8  
                        _CCPR1H 000FBF                          _CCPR1L 000FBE                          _EECON2 000FA7  
                        _ANSELA 000F38                          _ANSELB 000F39                          _ANSELC 000F3A  
                __CFG_WDTEN$OFF 000000                          _RCREG1 000FAE                          _OSCCON 000FD3  
            __size_of_InitAnsel 0014                          _SPBRG1 000FAF              __size_of_Read_Data 0040  
            __size_of_InitTimer 0028                          _TXREG1 000FAD                   _Write_Display 0A62  
                     ??_Receive 0001                  __CFG_XINST$OFF 000000                    _CCPTMRS0bits 000F49  
            __size_of_Save_Data 0050                       ??___lwmod 0014                          clear_0 086E  
                        clear_1 087C                          _pixels 0060          __size_of_Check_Buttons 0308  
Evaluate_Signs@evaluation_value 001A                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8             __end_of_Set_Display 08F2  
               __CFG_HFOFST$OFF 000000                      __accesstop 0060         __end_of__initialization 08A2  
                ?_Write_Display 0001                 __CFG_PBADEN$OFF 000000                 ??_InitInterrupt 0010  
                 ___rparam_used 000001                  __pcstackCOMRAM 0001                    __pidataBANK1 0678  
    __size_of_InitMiscellaneous 0006               __end_of_InitAnsel 0A14               __end_of_Read_Data 0974  
             __end_of_InitTimer 099C               __end_of_Save_Data 081C                      __pbssBANK0 0060  
               __CFG_PLLCFG$OFF 000000                   _Check_Buttons 0248                       ?_InitPort 0001  
                     ?_InitTris 0001                       ?_Set_Bits 0010              __CFG_CCP2MX$PORTC1 000000  
      __end_of_Evaluate_Display 0678              __CFG_CCP3MX$PORTB5 000000                     _Set_Display 08B0  
        __size_of_Delay_Routine 0022               ?_InitTransmission 0001               __CFG_PRICLKEN$OFF 000000  
            ??_InitTransmission 0010                 ??_Write_Display 0010                  ?_Check_Buttons 0001  
                    ??_InitPort 0010                      ??_InitTris 0010                      ??_Set_Bits 0012  
               __CFG_PWRTEN$OFF 000000                         _Receive 0A38                         __Hparam 0000  
                       __Lparam 0000                ??_Evaluate_Signs 001C                         ___lwmod 08F2  
                  __psmallconst 0200                 __CFG_STVREN$OFF 000000                         __pcinit 0868  
                       __ramtop 0200                         __ptext0 0A48                         __ptext1 09E2  
                       __ptext2 0A14                         __ptext3 099C                         __ptext4 0974  
                       __ptext5 0A26                         __ptext6 0A5C                         __ptext7 0A52  
                       __ptext8 0A00                         __ptext9 0248                       _T1CONbits 000FCD  
                  __size_of_Isr 00A8                 Set_Display@type 0020                       _T3CONbits 000FB1  
                       _overrun 0025            end_of_initialization 08A2                   __Lmediumconst 0000  
                 _Delay_Routine 09C0                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc2 000FDE         Write_Display@write_data 0001  
                     _PORTAbits 000F80                       _PORTBbits 000F81                       _PORTCbits 000F82  
                     _TRISCbits 000F94                 ??_Check_Buttons 0021                  ?_Delay_Routine 0001  
                   _CCP1CONbits 000FBD                    Set_Bits@bits 0010             start_initialization 0868  
                     _InitAnsel 0A00                    _ignite_ready 0158                     __end_of_Isr 00B0  
                     _Read_Data 0934                       _InitTimer 0974                Set_Bits@bitcount 0014  
                     _Save_Data 07CC               __size_of_InitPort 0012               __size_of_InitTris 0012  
         __end_of_InitInterrupt 0A5C               __size_of_Set_Bits 00A0               ?_Evaluate_Display 0016  
                   __pdataBANK1 0100              ??_Evaluate_Display 0018                  _slave_selected 0027  
                  ?_Set_Display 001D          Save_Data@store_address 0012                     __pbssCOMRAM 0023  
                    ?_InitAnsel 0001                      ?_Read_Data 0010                      ?_InitTimer 0001  
               ??_Delay_Routine 0010                      ?_Save_Data 0010                    _current_time 0023  
                      ?_Receive 0001       __size_of_InitTransmission 0024           Read_Data@read_address 0014  
                     __pintcode 0008                        ?___lwmod 0010                     __smallconst 0200  
         __end_of_Write_Display 0A64                        _PIE1bits 000F9D                        _PIR1bits 000F9E  
                      _PIR2bits 000FA1                __CFG_WDTPS$32768 000000                        _SSP1CON1 000FC6  
                      _SSP1STAT 000FC7                     ??_InitAnsel 0010                     ??_Read_Data 0012  
                   ??_InitTimer 0010                       copy_data0 0896                        _InitPort 0A26  
                      _InitTris 0A14                     ??_Save_Data 0013                      _EECON1bits 000FA6  
                      _Set_Bits 072C                    _pin_selected 0026                        __Hrparam 0000  
              __size_of_Receive 0010                        __Lrparam 0000               __CFG_P2BMX$PORTB5 000000  
              __size_of___lwmod 0042            __size_of_Set_Display 0042         __size_of_Evaluate_Signs 004C  
                      __ptext10 08B0                        __ptext11 081C                        __ptext20 0A38  
                      __ptext12 08F2                        __ptext13 0550                        __ptext14 072C  
                      __ptext15 0A62                        __ptext16 07CC                        __ptext17 0934  
                      __ptext18 09C0           __end_of_Check_Buttons 0550                Set_Display@value 001E  
                 __size_of_Init 001E                   __size_of_main 000A                _InitTransmission 099C  
    Delay_Routine@delay_counter 0012                        int$flags 002C            Evaluate_Display@size 0018  
    Evaluate_Signs@valuecounter 001C                      _INTCONbits 000FF2       __size_of_Evaluate_Display 0128  
            Read_Data@data_read 0012                        intlevel2 0000                ___lwmod@dividend 0010  
                    _RCSTA1bits 000FAB                 ___lwmod@divisor 0012   Delay_Routine@delay_multiplyer 0011  
               ___lwmod@counter 0014               __CFG_T3CMX$PORTC0 000000          __size_of_InitInterrupt 000A  
         __end_of_Delay_Routine 09E2               __CFG_FOSC$INTIO67 000000  
