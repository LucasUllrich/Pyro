

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Feb 03 20:42:37 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataBANK1
    55  000F68                     __pidataBANK1:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _pin
    59  000F68  00                 	db	0
    60  000F69  00                 	db	0
    61  000F6A  00                 	db	0
    62  000F6B  1F                 	db	31
    63  000F6C  00                 	db	0
    64  000F6D  00                 	db	0
    65  000F6E  00                 	db	0
    66  000F6F  01                 	db	1
    67  000F70  01                 	db	1
    68  000F71  1E                 	db	30
    69  000F72  00                 	db	0
    70  000F73  00                 	db	0
    71  000F74  00                 	db	0
    72  000F75  02                 	db	2
    73  000F76  02                 	db	2
    74  000F77  1D                 	db	29
    75  000F78  00                 	db	0
    76  000F79  00                 	db	0
    77  000F7A  00                 	db	0
    78  000F7B  03                 	db	3
    79  000F7C  03                 	db	3
    80  000F7D  1C                 	db	28
    81  000F7E  00                 	db	0
    82  000F7F  00                 	db	0
    83  000F80  00                 	db	0
    84  000F81  04                 	db	4
    85  000F82  04                 	db	4
    86  000F83  1B                 	db	27
    87  000F84  00                 	db	0
    88  000F85  00                 	db	0
    89  000F86  00                 	db	0
    90  000F87  05                 	db	5
    91  000F88  05                 	db	5
    92  000F89  1A                 	db	26
    93  000F8A  00                 	db	0
    94  000F8B  00                 	db	0
    95  000F8C  00                 	db	0
    96  000F8D  06                 	db	6
    97  000F8E  06                 	db	6
    98  000F8F  19                 	db	25
    99  000F90  00                 	db	0
   100  000F91  00                 	db	0
   101  000F92  00                 	db	0
   102  000F93  07                 	db	7
   103  000F94  07                 	db	7
   104  000F95  18                 	db	24
   105  000F96  00                 	db	0
   106  000F97  00                 	db	0
   107  000F98  00                 	db	0
   108  000F99  08                 	db	8
   109  000F9A  08                 	db	8
   110  000F9B  27                 	db	39
   111  000F9C  00                 	db	0
   112  000F9D  00                 	db	0
   113  000F9E  00                 	db	0
   114  000F9F  09                 	db	9
   115  000FA0  09                 	db	9
   116  000FA1  26                 	db	38
   117  000FA2  00                 	db	0
   118  000FA3  00                 	db	0
   119  000FA4  01                 	db	1
   120  000FA5  00                 	db	0
   121  000FA6  0A                 	db	10
   122  000FA7  25                 	db	37
   123  000FA8  00                 	db	0
   124  000FA9  00                 	db	0
   125  000FAA  01                 	db	1
   126  000FAB  01                 	db	1
   127  000FAC  0B                 	db	11
   128  000FAD  24                 	db	36
   129  000FAE  00                 	db	0
   130  000FAF  00                 	db	0
   131  000FB0  01                 	db	1
   132  000FB1  02                 	db	2
   133  000FB2  0C                 	db	12
   134  000FB3  23                 	db	35
   135  000FB4  00                 	db	0
   136  000FB5  00                 	db	0
   137  000FB6  01                 	db	1
   138  000FB7  03                 	db	3
   139  000FB8  0D                 	db	13
   140  000FB9  22                 	db	34
   141  000FBA  00                 	db	0
   142  000FBB  00                 	db	0
   143  000FBC  01                 	db	1
   144  000FBD  04                 	db	4
   145  000FBE  0E                 	db	14
   146  000FBF  21                 	db	33
   147  000FC0  00                 	db	0
   148  000FC1  00                 	db	0
   149  000FC2  01                 	db	1
   150  000FC3  05                 	db	5
   151  000FC4  0F                 	db	15
   152  000FC5  20                 	db	32
   153  000FC6  00                 	db	0
   154  000FC7  00                 	db	0
   155  000FC8  01                 	db	1
   156  000FC9  06                 	db	6
   157  000FCA  10                 	db	16
   158  000FCB  2F                 	db	47
   159  000FCC  00                 	db	0
   160  000FCD  00                 	db	0
   161  000FCE  01                 	db	1
   162  000FCF  07                 	db	7
   163  000FD0  11                 	db	17
   164  000FD1  2E                 	db	46
   165  000FD2  00                 	db	0
   166  000FD3  00                 	db	0
   167  000FD4  01                 	db	1
   168  000FD5  08                 	db	8
   169  000FD6  12                 	db	18
   170  000FD7  2D                 	db	45
   171  000FD8  00                 	db	0
   172  000FD9  00                 	db	0
   173  000FDA  01                 	db	1
   174  000FDB  09                 	db	9
   175  000FDC  13                 	db	19
   176  000FDD  2C                 	db	44
   177  000FDE  00                 	db	0
   178  000FDF  00                 	db	0
   179  000FE0  02                 	db	2
   180  000FE1  00                 	db	0
   181  000FE2  14                 	db	20
   182  000FE3  2B                 	db	43
   183  000FE4  00                 	db	0
   184  000FE5  00                 	db	0
   185  000FE6  02                 	db	2
   186  000FE7  01                 	db	1
   187  000FE8  15                 	db	21
   188  000FE9  2A                 	db	42
   189  000FEA  00                 	db	0
   190  000FEB  00                 	db	0
   191  000FEC  02                 	db	2
   192  000FED  02                 	db	2
   193  000FEE  16                 	db	22
   194  000FEF  29                 	db	41
   195  000FF0  00                 	db	0
   196  000FF1  00                 	db	0
   197  000FF2  02                 	db	2
   198  000FF3  03                 	db	3
   199  000FF4  17                 	db	23
   200  000FF5  28                 	db	40
   201  000FF6  00                 	db	0
   202  000FF7  00                 	db	0
   203  000FF8  02                 	db	2
   204  000FF9  04                 	db	4
   205  000FFA  18                 	db	24
   206  000FFB  35                 	db	53
   207  000FFC  00                 	db	0
   208  000FFD  00                 	db	0
   209  000FFE  02                 	db	2
   210  000FFF  05                 	db	5
   211  001000  19                 	db	25
   212  001001  34                 	db	52
   213  001002  00                 	db	0
   214  001003  00                 	db	0
   215  001004  02                 	db	2
   216  001005  06                 	db	6
   217  001006  1A                 	db	26
   218  001007  33                 	db	51
   219  001008  00                 	db	0
   220  001009  00                 	db	0
   221  00100A  02                 	db	2
   222  00100B  07                 	db	7
   223  00100C  1B                 	db	27
   224  00100D  32                 	db	50
   225  00100E  00                 	db	0
   226  00100F  00                 	db	0
   227  001010  02                 	db	2
   228  001011  08                 	db	8
   229  001012  1C                 	db	28
   230  001013  31                 	db	49
   231  001014  00                 	db	0
   232  001015  00                 	db	0
   233  001016  02                 	db	2
   234  001017  09                 	db	9
   235  001018  1D                 	db	29
   236  001019  30                 	db	48
   237  00101A  00                 	db	0
   238  00101B  00                 	db	0
   239  0000                     _ANSELA	set	3896
   240  0000                     _ANSELB	set	3897
   241  0000                     _ANSELC	set	3898
   242  0000                     _CCPTMRS0bits	set	3913
   243  0000                     _BAUDCON1bits	set	4024
   244  0000                     _CCP1CONbits	set	4029
   245  0000                     _CCPR1H	set	4031
   246  0000                     _CCPR1L	set	4030
   247  0000                     _EEADR	set	4009
   248  0000                     _EECON1bits	set	4006
   249  0000                     _EECON2	set	4007
   250  0000                     _EEDATA	set	4008
   251  0000                     _INTCONbits	set	4082
   252  0000                     _OSCCON	set	4051
   253  0000                     _PIE1bits	set	3997
   254  0000                     _PIR1bits	set	3998
   255  0000                     _PIR2bits	set	4001
   256  0000                     _PORTA	set	3968
   257  0000                     _PORTAbits	set	3968
   258  0000                     _PORTB	set	3969
   259  0000                     _PORTBbits	set	3969
   260  0000                     _PORTC	set	3970
   261  0000                     _PORTCbits	set	3970
   262  0000                     _PORTE	set	3972
   263  0000                     _RCREG1	set	4014
   264  0000                     _RCSTA1bits	set	4011
   265  0000                     _RCSTAbits	set	4011
   266  0000                     _SPBRG1	set	4015
   267  0000                     _SSP1BUF	set	4041
   268  0000                     _SSP1CON1	set	4038
   269  0000                     _SSP1STAT	set	4039
   270  0000                     _T1CONbits	set	4045
   271  0000                     _T3CONbits	set	4017
   272  0000                     _TMR1H	set	4047
   273  0000                     _TMR1L	set	4046
   274  0000                     _TMR3H	set	4019
   275  0000                     _TMR3L	set	4018
   276  0000                     _TRISA	set	3986
   277  0000                     _TRISB	set	3987
   278  0000                     _TRISC	set	3988
   279  0000                     _TRISCbits	set	3988
   280  0000                     _TRISE	set	3990
   281  0000                     _TXREG1	set	4013
   282  0000                     _TXSTA1bits	set	4012
   283  0000                     _SSP1IF	set	31987
   284                           
   285                           	psect	smallconst
   286  00021A                     __psmallconst:
   287                           	opt stack 0
   288  00021A  00                 	db	0
   289  00021B                     STR_11:
   290  00021B  41                 	db	65	;'A'
   291  00021C  42                 	db	66	;'B'
   292  00021D  43                 	db	67	;'C'
   293  00021E  44                 	db	68	;'D'
   294  00021F  45                 	db	69	;'E'
   295  000220  46                 	db	70	;'F'
   296  000221  47                 	db	71	;'G'
   297  000222  00                 	db	0
   298  000223                     STR_3:
   299  000223  41                 	db	65	;'A'
   300  000224  42                 	db	66	;'B'
   301  000225  43                 	db	67	;'C'
   302  000226  44                 	db	68	;'D'
   303  000227  45                 	db	69	;'E'
   304  000228  46                 	db	70	;'F'
   305  000229  00                 	db	0
   306  00022A                     STR_12:
   307  00022A  41                 	db	65	;'A'
   308  00022B  42                 	db	66	;'B'
   309  00022C  43                 	db	67	;'C'
   310  00022D  44                 	db	68	;'D'
   311  00022E  46                 	db	70	;'F'
   312  00022F  47                 	db	71	;'G'
   313  000230  00                 	db	0
   314  000231                     STR_13:
   315  000231  41                 	db	65	;'A'
   316  000232  42                 	db	66	;'B'
   317  000233  43                 	db	67	;'C'
   318  000234  45                 	db	69	;'E'
   319  000235  46                 	db	70	;'F'
   320  000236  47                 	db	71	;'G'
   321  000237  00                 	db	0
   322  000238                     STR_9:
   323  000238  41                 	db	65	;'A'
   324  000239  43                 	db	67	;'C'
   325  00023A  44                 	db	68	;'D'
   326  00023B  45                 	db	69	;'E'
   327  00023C  46                 	db	70	;'F'
   328  00023D  47                 	db	71	;'G'
   329  00023E  00                 	db	0
   330  00023F                     STR_6:
   331  00023F  41                 	db	65	;'A'
   332  000240  42                 	db	66	;'B'
   333  000241  43                 	db	67	;'C'
   334  000242  44                 	db	68	;'D'
   335  000243  47                 	db	71	;'G'
   336  000244  00                 	db	0
   337  000245                     STR_5:
   338  000245  41                 	db	65	;'A'
   339  000246  42                 	db	66	;'B'
   340  000247  44                 	db	68	;'D'
   341  000248  45                 	db	69	;'E'
   342  000249  47                 	db	71	;'G'
   343  00024A  00                 	db	0
   344  00024B                     STR_8:
   345  00024B  41                 	db	65	;'A'
   346  00024C  43                 	db	67	;'C'
   347  00024D  44                 	db	68	;'D'
   348  00024E  46                 	db	70	;'F'
   349  00024F  47                 	db	71	;'G'
   350  000250  00                 	db	0
   351  000251                     STR_18:
   352  000251  41                 	db	65	;'A'
   353  000252  42                 	db	66	;'B'
   354  000253  45                 	db	69	;'E'
   355  000254  46                 	db	70	;'F'
   356  000255  47                 	db	71	;'G'
   357  000256  00                 	db	0
   358  000257                     STR_15:
   359  000257  41                 	db	65	;'A'
   360  000258  44                 	db	68	;'D'
   361  000259  45                 	db	69	;'E'
   362  00025A  46                 	db	70	;'F'
   363  00025B  47                 	db	71	;'G'
   364  00025C  00                 	db	0
   365  00025D                     STR_7:
   366  00025D  42                 	db	66	;'B'
   367  00025E  43                 	db	67	;'C'
   368  00025F  46                 	db	70	;'F'
   369  000260  47                 	db	71	;'G'
   370  000261  00                 	db	0
   371  000262                     STR_10:
   372  000262  41                 	db	65	;'A'
   373  000263  42                 	db	66	;'B'
   374  000264  43                 	db	67	;'C'
   375  000265  00                 	db	0
   376  000266                     STR_1:
   377  000266  4C                 	db	76	;'L'
   378  000267  4F                 	db	79	;'O'
   379  000268  41                 	db	65	;'A'
   380  000269  00                 	db	0
   381  00026A                     STR_2:
   382  00026A  44                 	db	68	;'D'
   383  00026B  45                 	db	69	;'E'
   384  00026C  4C                 	db	76	;'L'
   385  00026D  00                 	db	0
   386  0000                     
   387                           ; #config settings
   388  00026E  00                 	db	0	; dummy byte at the end
   389  0000                     
   390                           	psect	cinit
   391  00140C                     __pcinit:
   392                           	opt stack 0
   393  00140C                     start_initialization:
   394                           	opt stack 0
   395  00140C                     __initialization:
   396                           	opt stack 0
   397                           
   398                           ; Clear objects allocated to BANK0 (5 bytes)
   399  00140C  0100               	movlb	0
   400  00140E  6B7D               	clrf	(__pbssBANK0+4)& (0+255),b
   401  001410  6B7C               	clrf	(__pbssBANK0+3)& (0+255),b
   402  001412  6B7B               	clrf	(__pbssBANK0+2)& (0+255),b
   403  001414  6B7A               	clrf	(__pbssBANK0+1)& (0+255),b
   404  001416  6B79               	clrf	__pbssBANK0& (0+255),b
   405                           
   406                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   407  001418  6A3B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   408                           
   409                           ; Clear objects allocated to COMRAM (18 bytes)
   410  00141A  EE00  F029         	lfsr	0,__pbssCOMRAM
   411  00141E  0E12               	movlw	18
   412  001420                     clear_0:
   413  001420  6AEE               	clrf	postinc0,c
   414  001422  06E8               	decf	wreg,f,c
   415  001424  E1FD               	bnz	clear_0
   416                           
   417                           ; Initialize objects allocated to BANK1 (180 bytes)
   418                           ; load TBLPTR registers with __pidataBANK1
   419  001426  0E68               	movlw	low __pidataBANK1
   420  001428  6EF6               	movwf	tblptrl,c
   421  00142A  0E0F               	movlw	high __pidataBANK1
   422  00142C  6EF7               	movwf	tblptrh,c
   423  00142E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   424  001430  6EF8               	movwf	tblptru,c
   425  001432  EE01  F000         	lfsr	0,__pdataBANK1
   426  001436  EE10 F0B4          	lfsr	1,180
   427  00143A                     copy_data0:
   428  00143A  0009               	tblrd		*+
   429  00143C  CFF5 FFEE          	movff	tablat,postinc0
   430  001440  50E5               	movf	postdec1,w,c
   431  001442  50E1               	movf	fsr1l,w,c
   432  001444  E1FA               	bnz	copy_data0
   433  001446                     end_of_initialization:
   434                           	opt stack 0
   435  001446                     __end_of__initialization:
   436                           	opt stack 0
   437  001446  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   438  001448  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   439  00144A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   440  00144C  6EF8               	movwf	tblptru,c
   441  00144E  0100               	movlb	0
   442  001450  EF32  F00B         	goto	_main	;jump to C main() function
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	bitbssCOMRAM
   453  0001D8                     __pbitbssCOMRAM:
   454                           	opt stack 0
   455  0001D8                     _ignite_ready:
   456                           	opt stack 0
   457  0001D8                     	ds	1
   458  0001D9                     _master_addressed:
   459                           	opt stack 0
   460  0001D9                     	ds	1
   461  0001DA                     _overrun:
   462                           	opt stack 0
   463  0001DA                     	ds	1
   464  0001DB                     _testflag:
   465                           	opt stack 0
   466  0001DB                     	ds	1
   467                           tblptru	equ	0xFF8
   468                           tblptrh	equ	0xFF7
   469                           tblptrl	equ	0xFF6
   470                           tablat	equ	0xFF5
   471                           postinc0	equ	0xFEE
   472                           wreg	equ	0xFE8
   473                           postdec1	equ	0xFE5
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	bssCOMRAM
   477  000029                     __pbssCOMRAM:
   478                           	opt stack 0
   479  000029                     _received:
   480                           	opt stack 0
   481  000029                     	ds	6
   482  00002F                     _current_time:
   483                           	opt stack 0
   484  00002F                     	ds	2
   485  000031                     _check_counter:
   486                           	opt stack 0
   487  000031                     	ds	1
   488  000032                     _display_counter:
   489                           	opt stack 0
   490  000032                     	ds	1
   491  000033                     _receive_counter:
   492                           	opt stack 0
   493  000033                     	ds	1
   494  000034                     _pixels:
   495                           	opt stack 0
   496  000034                     	ds	7
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           postinc0	equ	0xFEE
   502                           wreg	equ	0xFE8
   503                           postdec1	equ	0xFE5
   504                           fsr1l	equ	0xFE1
   505                           
   506                           	psect	bssBANK0
   507  000079                     __pbssBANK0:
   508                           	opt stack 0
   509  000079                     _pin_selected:
   510                           	opt stack 0
   511  000079                     	ds	1
   512  00007A                     _slave_selected:
   513                           	opt stack 0
   514  00007A                     	ds	1
   515  00007B                     _signs:
   516                           	opt stack 0
   517  00007B                     	ds	3
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           
   527                           	psect	dataBANK1
   528  000100                     __pdataBANK1:
   529                           	opt stack 0
   530  000100                     _pin:
   531                           	opt stack 0
   532  000100                     	ds	180
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	cstackBANK0
   543  000060                     __pcstackBANK0:
   544                           	opt stack 0
   545  000060                     ??_Delay_Routine:
   546  000060                     ?_Read_Data:
   547                           	opt stack 0
   548  000060                     ?___lwmod:
   549                           	opt stack 0
   550  000060                     Transmit@operation:
   551                           	opt stack 0
   552  000060                     Save_Data@store:
   553                           	opt stack 0
   554  000060                     Write_Display_Byte@write_data:
   555                           	opt stack 0
   556  000060                     ___lwmod@dividend:
   557                           	opt stack 0
   558  000060                     Set_Bits@bits:
   559                           	opt stack 0
   560                           
   561                           ; 3 bytes @ 0x0
   562  000060                     	ds	1
   563  000061                     Delay_Routine@delay_multiplyer:
   564                           	opt stack 0
   565  000061                     Transmit@port:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x1
   569  000061                     	ds	1
   570  000062                     ??_Write_Display_Byte:
   571  000062                     Delay_Routine@delay_counter:
   572                           	opt stack 0
   573  000062                     Save_Data@store_address:
   574                           	opt stack 0
   575  000062                     Transmit@receiver:
   576                           	opt stack 0
   577  000062                     Read_Data@data_read:
   578                           	opt stack 0
   579  000062                     ___lwmod@divisor:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x2
   583  000062                     	ds	1
   584  000063                     ??_Set_Bits:
   585                           
   586                           ; 0 bytes @ 0x3
   587  000063                     	ds	1
   588  000064                     Read_Data@read_address:
   589                           	opt stack 0
   590  000064                     ___lwmod@counter:
   591                           	opt stack 0
   592                           
   593                           ; 1 bytes @ 0x4
   594  000064                     	ds	2
   595  000066                     Set_Bits@bitcount:
   596                           	opt stack 0
   597  000066                     Write_Display_Byte@counter:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x6
   601  000066                     	ds	1
   602  000067                     Set_Bits@Bitoutput:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x7
   606  000067                     	ds	1
   607  000068                     Evaluate_Display@evaluate:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x8
   611  000068                     	ds	2
   612  00006A                     ??_Evaluate_Display:
   613                           
   614                           ; 0 bytes @ 0xA
   615  00006A                     	ds	2
   616  00006C                     Evaluate_Display@size:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0xC
   620  00006C                     	ds	1
   621  00006D                     Evaluate_Signs@evaluation_value:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0xD
   625  00006D                     	ds	2
   626  00006F                     Evaluate_Signs@valuecounter:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0xF
   630  00006F                     	ds	1
   631  000070                     Set_Display@information:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x10
   635  000070                     	ds	1
   636  000071                     Set_Display@value:
   637                           	opt stack 0
   638                           
   639                           ; 2 bytes @ 0x11
   640  000071                     	ds	2
   641  000073                     Set_Display@type:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x13
   645  000073                     	ds	1
   646  000074                     ??_Load_Data:
   647                           
   648                           ; 0 bytes @ 0x14
   649  000074                     	ds	1
   650  000075                     Load_Data@counter:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x15
   654  000075                     	ds	1
   655  000076                     Del_Data@counter:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x16
   659  000076                     	ds	1
   660  000077                     ??_Check_Buttons:
   661                           
   662                           ; 0 bytes @ 0x17
   663  000077                     	ds	2
   664  000079                     tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           postinc0	equ	0xFEE
   669                           wreg	equ	0xFE8
   670                           postdec1	equ	0xFE5
   671                           fsr1l	equ	0xFE1
   672                           
   673                           ; 0 bytes @ 0x19
   674                           
   675                           	psect	cstackCOMRAM
   676  000001                     __pcstackCOMRAM:
   677                           	opt stack 0
   678  000001                     ?___awdiv:
   679                           	opt stack 0
   680  000001                     ?i2___lwmod:
   681                           	opt stack 0
   682  000001                     i2Transmit@operation:
   683                           	opt stack 0
   684  000001                     ___awdiv@dividend:
   685                           	opt stack 0
   686  000001                     i2Write_Display_Byte@write_data:
   687                           	opt stack 0
   688  000001                     i2___lwmod@dividend:
   689                           	opt stack 0
   690  000001                     i2Set_Bits@bits:
   691                           	opt stack 0
   692                           
   693                           ; 3 bytes @ 0x0
   694  000001                     	ds	1
   695  000002                     i2Transmit@port:
   696                           	opt stack 0
   697                           
   698                           ; 1 bytes @ 0x1
   699  000002                     	ds	1
   700  000003                     ??i2_Write_Display_Byte:
   701  000003                     i2Transmit@receiver:
   702                           	opt stack 0
   703  000003                     ___awdiv@divisor:
   704                           	opt stack 0
   705  000003                     i2___lwmod@divisor:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x2
   709  000003                     	ds	1
   710  000004                     ??i2_Set_Bits:
   711                           
   712                           ; 0 bytes @ 0x3
   713  000004                     	ds	1
   714  000005                     ___awdiv@counter:
   715                           	opt stack 0
   716  000005                     i2___lwmod@counter:
   717                           	opt stack 0
   718                           
   719                           ; 1 bytes @ 0x4
   720  000005                     	ds	1
   721  000006                     Ignite_Detonators@counter:
   722                           	opt stack 0
   723  000006                     ___awdiv@sign:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x5
   727  000006                     	ds	1
   728  000007                     i2Set_Bits@bitcount:
   729                           	opt stack 0
   730  000007                     i2Write_Display_Byte@counter:
   731                           	opt stack 0
   732  000007                     ___awdiv@quotient:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x6
   736  000007                     	ds	1
   737  000008                     i2Set_Bits@Bitoutput:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x7
   741  000008                     	ds	1
   742  000009                     i2Evaluate_Display@evaluate:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x8
   746  000009                     	ds	2
   747  00000B                     ??i2_Evaluate_Display:
   748                           
   749                           ; 0 bytes @ 0xA
   750  00000B                     	ds	2
   751  00000D                     i2Evaluate_Display@size:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0xC
   755  00000D                     	ds	1
   756  00000E                     i2Evaluate_Signs@evaluation_value:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0xD
   760  00000E                     	ds	2
   761  000010                     i2Evaluate_Signs@valuecounter:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0xF
   765  000010                     	ds	1
   766  000011                     i2Set_Display@information:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x10
   770  000011                     	ds	1
   771  000012                     i2Set_Display@value:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x11
   775  000012                     	ds	2
   776  000014                     i2Set_Display@type:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x13
   780  000014                     	ds	1
   781  000015                     ??_Isr:
   782                           
   783                           ; 0 bytes @ 0x14
   784  000015                     	ds	17
   785  000026                     Isr@pixel_index_array:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x25
   789  000026                     	ds	1
   790  000027                     Isr@pixel_index_bit:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x26
   794  000027                     	ds	1
   795  000028                     Isr@search_index:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x27
   799  000028                     	ds	1
   800                           tblptru	equ	0xFF8
   801                           tblptrh	equ	0xFF7
   802                           tblptrl	equ	0xFF6
   803                           tablat	equ	0xFF5
   804                           postinc0	equ	0xFEE
   805                           wreg	equ	0xFE8
   806                           postdec1	equ	0xFE5
   807                           fsr1l	equ	0xFE1
   808                           
   809 ;;
   810 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   811 ;;
   812 ;; *************** function _main *****************
   813 ;; Defined at:
   814 ;;		line 86 in file "main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;		None               void
   821 ;; Registers used:
   822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1
   828 ;;      Params:         0       0       0
   829 ;;      Locals:         0       0       0
   830 ;;      Temps:          0       0       0
   831 ;;      Totals:         0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels required when called:   12
   834 ;; This function calls:
   835 ;;		_Check_Buttons
   836 ;;		_Check_Detonators
   837 ;;		_Init
   838 ;;		_Load_Data
   839 ;;		_Set_Display
   840 ;; This function is called by:
   841 ;;		Startup code after reset
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text0
   846  001664                     __ptext0:
   847                           	opt stack 0
   848  001664                     _main:
   849                           	opt stack 19
   850                           
   851                           ;main.c: 87: Init();
   852                           
   853                           ;incstack = 0
   854  001664  EC5B  F00B         	call	_Init	;wreg free
   855                           
   856                           ;main.c: 88: Load_Data();
   857  001668  EC5B  F006         	call	_Load_Data	;wreg free
   858                           
   859                           ;main.c: 89: PORTAbits.RA0 = 1;
   860  00166C  8080               	bsf	3968,0,c	;volatile
   861  00166E                     l3214:
   862                           
   863                           ;main.c: 91: Check_Buttons();
   864  00166E  EC38  F001         	call	_Check_Buttons	;wreg free
   865                           
   866                           ;main.c: 92: if(testflag == 1) {
   867  001672  A63B               	btfss	_testflag/(0+8),_testflag& (0+7),c
   868  001674  D7FC               	goto	l3214
   869                           
   870                           ;main.c: 93: Set_Display('7', 'T',0);
   871  001676  0E54               	movlw	84
   872  001678  0100               	movlb	0	; () banked
   873  00167A  6F70               	movwf	Set_Display@information& (0+255),b
   874  00167C  0E00               	movlw	0
   875  00167E  0100               	movlb	0	; () banked
   876  001680  6F72               	movwf	(Set_Display@value+1)& (0+255),b
   877  001682  0E00               	movlw	0
   878  001684  6F71               	movwf	Set_Display@value& (0+255),b
   879  001686  0E37               	movlw	55
   880  001688  ECF5  F008         	call	_Set_Display
   881                           
   882                           ;main.c: 94: Check_Detonators();
   883  00168C  EC91  F00A         	call	_Check_Detonators	;wreg free
   884  001690  D7EE               	goto	l3214
   885  001692                     __end_of_main:
   886                           	opt stack 0
   887                           tblptru	equ	0xFF8
   888                           tblptrh	equ	0xFF7
   889                           tblptrl	equ	0xFF6
   890                           tablat	equ	0xFF5
   891                           postinc0	equ	0xFEE
   892                           wreg	equ	0xFE8
   893                           postdec1	equ	0xFE5
   894                           fsr1l	equ	0xFE1
   895                           
   896 ;; *************** function _Init *****************
   897 ;; Defined at:
   898 ;;		line 3 in file "init.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;		None
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;		None               void
   905 ;; Registers used:
   906 ;;		wreg, status,2, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1
   912 ;;      Params:         0       0       0
   913 ;;      Locals:         0       0       0
   914 ;;      Temps:          0       0       0
   915 ;;      Totals:         0       0       0
   916 ;;Total ram usage:        0 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    6
   919 ;; This function calls:
   920 ;;		_InitAnsel
   921 ;;		_InitInterrupt
   922 ;;		_InitMiscellaneous
   923 ;;		_InitPort
   924 ;;		_InitTimer
   925 ;;		_InitTransmission
   926 ;;		_InitTris
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text1
   933  0016B6                     __ptext1:
   934                           	opt stack 0
   935  0016B6                     _Init:
   936                           	opt stack 24
   937                           
   938                           ;init.c: 4: InitPort();
   939                           
   940                           ;incstack = 0
   941  0016B6  EC8B  F00B         	call	_InitPort	;wreg free
   942                           
   943                           ;init.c: 5: InitTris();
   944  0016BA  EC82  F00B         	call	_InitTris	;wreg free
   945                           
   946                           ;init.c: 6: InitAnsel();
   947  0016BE  EC78  F00B         	call	_InitAnsel	;wreg free
   948                           
   949                           ;init.c: 7: InitMiscellaneous();
   950  0016C2  ECA1  F00B         	call	_InitMiscellaneous	;wreg free
   951                           
   952                           ;init.c: 8: InitTransmission();
   953  0016C6  EC49  F00B         	call	_InitTransmission	;wreg free
   954                           
   955                           ;init.c: 9: InitTimer();
   956  0016CA  EC02  F00B         	call	_InitTimer	;wreg free
   957                           
   958                           ;init.c: 10: InitInterrupt();
   959  0016CE  EC9B  F00B         	call	_InitInterrupt	;wreg free
   960  0016D2  0012               	return		;funcret
   961  0016D4                     __end_of_Init:
   962                           	opt stack 0
   963                           tblptru	equ	0xFF8
   964                           tblptrh	equ	0xFF7
   965                           tblptrl	equ	0xFF6
   966                           tablat	equ	0xFF5
   967                           postinc0	equ	0xFEE
   968                           wreg	equ	0xFE8
   969                           postdec1	equ	0xFE5
   970                           fsr1l	equ	0xFE1
   971                           
   972 ;; *************** function _InitTris *****************
   973 ;; Defined at:
   974 ;;		line 20 in file "init.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;		None               void
   981 ;; Registers used:
   982 ;;		wreg, status,2
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1
   988 ;;      Params:         0       0       0
   989 ;;      Locals:         0       0       0
   990 ;;      Temps:          0       0       0
   991 ;;      Totals:         0       0       0
   992 ;;Total ram usage:        0 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    5
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_Init
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           
  1002                           	psect	text2
  1003  001704                     __ptext2:
  1004                           	opt stack 0
  1005  001704                     _InitTris:
  1006                           	opt stack 24
  1007                           
  1008                           ;init.c: 21: TRISA = 0b00000000;
  1009                           
  1010                           ;incstack = 0
  1011  001704  0E00               	movlw	0
  1012  001706  6E92               	movwf	3986,c	;volatile
  1013                           
  1014                           ;init.c: 22: TRISB = 0b00011111;
  1015  001708  0E1F               	movlw	31
  1016  00170A  6E93               	movwf	3987,c	;volatile
  1017                           
  1018                           ;init.c: 23: TRISC = 0b10000010;
  1019  00170C  0E82               	movlw	130
  1020  00170E  6E94               	movwf	3988,c	;volatile
  1021                           
  1022                           ;init.c: 24: TRISE = 0;
  1023  001710  0E00               	movlw	0
  1024  001712  6E96               	movwf	3990,c	;volatile
  1025  001714  0012               	return		;funcret
  1026  001716                     __end_of_InitTris:
  1027                           	opt stack 0
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           postinc0	equ	0xFEE
  1033                           wreg	equ	0xFE8
  1034                           postdec1	equ	0xFE5
  1035                           fsr1l	equ	0xFE1
  1036                           
  1037 ;; *************** function _InitTransmission *****************
  1038 ;; Defined at:
  1039 ;;		line 37 in file "init.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;		None
  1044 ;; Return value:  Size  Location     Type
  1045 ;;		None               void
  1046 ;; Registers used:
  1047 ;;		wreg, status,2
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1
  1053 ;;      Params:         0       0       0
  1054 ;;      Locals:         0       0       0
  1055 ;;      Temps:          0       0       0
  1056 ;;      Totals:         0       0       0
  1057 ;;Total ram usage:        0 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    5
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_Init
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text3
  1068  001692                     __ptext3:
  1069                           	opt stack 0
  1070  001692                     _InitTransmission:
  1071                           	opt stack 24
  1072                           
  1073                           ;init.c: 39: SSP1STAT = 0b01000000;
  1074                           
  1075                           ;incstack = 0
  1076  001692  0E40               	movlw	64
  1077  001694  6EC7               	movwf	4039,c	;volatile
  1078                           
  1079                           ;init.c: 40: SSP1CON1 = 0b00100010;
  1080  001696  0E22               	movlw	34
  1081  001698  6EC6               	movwf	4038,c	;volatile
  1082                           
  1083                           ;init.c: 42: TXSTA1bits.SYNC = 0;
  1084  00169A  98AC               	bcf	4012,4,c	;volatile
  1085                           
  1086                           ;init.c: 43: TXSTA1bits.BRGH = 1;
  1087  00169C  84AC               	bsf	4012,2,c	;volatile
  1088                           
  1089                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
  1090  00169E  96B8               	bcf	4024,3,c	;volatile
  1091                           
  1092                           ;init.c: 45: SPBRG1 = 25;
  1093  0016A0  0E19               	movlw	25
  1094  0016A2  6EAF               	movwf	4015,c	;volatile
  1095                           
  1096                           ;init.c: 46: TRISCbits.RC6 = 1;
  1097  0016A4  8C94               	bsf	3988,6,c	;volatile
  1098                           
  1099                           ;init.c: 47: TRISCbits.RC7 = 1;
  1100  0016A6  8E94               	bsf	3988,7,c	;volatile
  1101                           
  1102                           ;init.c: 48: RCSTA1bits.SPEN = 1;
  1103  0016A8  8EAB               	bsf	4011,7,c	;volatile
  1104                           
  1105                           ;init.c: 49: TXSTA1bits.TX9 = 1;
  1106  0016AA  8CAC               	bsf	4012,6,c	;volatile
  1107                           
  1108                           ;init.c: 50: TXSTA1bits.TXEN = 1;
  1109  0016AC  8AAC               	bsf	4012,5,c	;volatile
  1110                           
  1111                           ;init.c: 51: RCSTA1bits.RC9 = 1;
  1112  0016AE  8CAB               	bsf	4011,6,c	;volatile
  1113                           
  1114                           ;init.c: 52: RCSTA1bits.CREN = 1;
  1115  0016B0  88AB               	bsf	4011,4,c	;volatile
  1116                           
  1117                           ;init.c: 53: TRISCbits.RC6 = 0;
  1118  0016B2  9C94               	bcf	3988,6,c	;volatile
  1119  0016B4  0012               	return		;funcret
  1120  0016B6                     __end_of_InitTransmission:
  1121                           	opt stack 0
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           postdec1	equ	0xFE5
  1129                           fsr1l	equ	0xFE1
  1130                           
  1131 ;; *************** function _InitTimer *****************
  1132 ;; Defined at:
  1133 ;;		line 56 in file "init.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;		None               void
  1140 ;; Registers used:
  1141 ;;		wreg, status,2
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1
  1147 ;;      Params:         0       0       0
  1148 ;;      Locals:         0       0       0
  1149 ;;      Temps:          0       0       0
  1150 ;;      Totals:         0       0       0
  1151 ;;Total ram usage:        0 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    5
  1154 ;; This function calls:
  1155 ;;		Nothing
  1156 ;; This function is called by:
  1157 ;;		_Init
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text4
  1162  001604                     __ptext4:
  1163                           	opt stack 0
  1164  001604                     _InitTimer:
  1165                           	opt stack 24
  1166                           
  1167                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
  1168                           
  1169                           ;incstack = 0
  1170  001604  0E3F               	movlw	-193
  1171  001606  16CD               	andwf	4045,f,c	;volatile
  1172                           
  1173                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
  1174  001608  0E30               	movlw	48
  1175  00160A  12CD               	iorwf	4045,f,c	;volatile
  1176                           
  1177                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
  1178  00160C  94CD               	bcf	4045,2,c	;volatile
  1179                           
  1180                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
  1181  00160E  0E3F               	movlw	-193
  1182  001610  16B1               	andwf	4017,f,c	;volatile
  1183                           
  1184                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
  1185  001612  0E30               	movlw	48
  1186  001614  12B1               	iorwf	4017,f,c	;volatile
  1187                           
  1188                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
  1189  001616  94B1               	bcf	4017,2,c	;volatile
  1190                           
  1191                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
  1192  001618  50BD               	movf	4029,w,c	;volatile
  1193  00161A  0BF0               	andlw	-16
  1194  00161C  090A               	iorlw	10
  1195  00161E  6EBD               	movwf	4029,c	;volatile
  1196                           
  1197                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
  1198  001620  010F               	movlb	15	; () banked
  1199  001622  5149               	movf	73,w,b	;volatile
  1200  001624  0BFC               	andlw	-4
  1201  001626  0901               	iorlw	1
  1202  001628  6F49               	movwf	73,b	;volatile
  1203                           
  1204                           ;init.c: 68: CCPR1L = 72;
  1205  00162A  0E48               	movlw	72
  1206  00162C  6EBE               	movwf	4030,c	;volatile
  1207                           
  1208                           ;init.c: 69: CCPR1H = 232;
  1209  00162E  0EE8               	movlw	232
  1210  001630  6EBF               	movwf	4031,c	;volatile
  1211                           
  1212                           ; BSR set to: 15
  1213  001632  0012               	return		;funcret
  1214  001634                     __end_of_InitTimer:
  1215                           	opt stack 0
  1216                           tblptru	equ	0xFF8
  1217                           tblptrh	equ	0xFF7
  1218                           tblptrl	equ	0xFF6
  1219                           tablat	equ	0xFF5
  1220                           postinc0	equ	0xFEE
  1221                           wreg	equ	0xFE8
  1222                           postdec1	equ	0xFE5
  1223                           fsr1l	equ	0xFE1
  1224                           
  1225 ;; *************** function _InitPort *****************
  1226 ;; Defined at:
  1227 ;;		line 13 in file "init.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;		None               void
  1234 ;; Registers used:
  1235 ;;		wreg, status,2
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1
  1241 ;;      Params:         0       0       0
  1242 ;;      Locals:         0       0       0
  1243 ;;      Temps:          0       0       0
  1244 ;;      Totals:         0       0       0
  1245 ;;Total ram usage:        0 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    5
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_Init
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text5
  1256  001716                     __ptext5:
  1257                           	opt stack 0
  1258  001716                     _InitPort:
  1259                           	opt stack 24
  1260                           
  1261                           ;init.c: 14: PORTA = 0b00000000;
  1262                           
  1263                           ; BSR set to: 15
  1264                           ;incstack = 0
  1265  001716  0E00               	movlw	0
  1266  001718  6E80               	movwf	3968,c	;volatile
  1267                           
  1268                           ;init.c: 15: PORTB = 0b00000000;
  1269  00171A  0E00               	movlw	0
  1270  00171C  6E81               	movwf	3969,c	;volatile
  1271                           
  1272                           ;init.c: 16: PORTC = 0b00000100;
  1273  00171E  0E04               	movlw	4
  1274  001720  6E82               	movwf	3970,c	;volatile
  1275                           
  1276                           ;init.c: 17: PORTE = 0;
  1277  001722  0E00               	movlw	0
  1278  001724  6E84               	movwf	3972,c	;volatile
  1279  001726  0012               	return		;funcret
  1280  001728                     __end_of_InitPort:
  1281                           	opt stack 0
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           postinc0	equ	0xFEE
  1287                           wreg	equ	0xFE8
  1288                           postdec1	equ	0xFE5
  1289                           fsr1l	equ	0xFE1
  1290                           
  1291 ;; *************** function _InitMiscellaneous *****************
  1292 ;; Defined at:
  1293 ;;		line 33 in file "init.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;		None               void
  1300 ;; Registers used:
  1301 ;;		wreg, status,2
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1
  1307 ;;      Params:         0       0       0
  1308 ;;      Locals:         0       0       0
  1309 ;;      Temps:          0       0       0
  1310 ;;      Totals:         0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    5
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_Init
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text6
  1322  001742                     __ptext6:
  1323                           	opt stack 0
  1324  001742                     _InitMiscellaneous:
  1325                           	opt stack 24
  1326                           
  1327                           ;init.c: 34: OSCCON = 0b01010011;
  1328                           
  1329                           ;incstack = 0
  1330  001742  0E53               	movlw	83
  1331  001744  6ED3               	movwf	4051,c	;volatile
  1332  001746  0012               	return		;funcret
  1333  001748                     __end_of_InitMiscellaneous:
  1334                           	opt stack 0
  1335                           tblptru	equ	0xFF8
  1336                           tblptrh	equ	0xFF7
  1337                           tblptrl	equ	0xFF6
  1338                           tablat	equ	0xFF5
  1339                           postinc0	equ	0xFEE
  1340                           wreg	equ	0xFE8
  1341                           postdec1	equ	0xFE5
  1342                           fsr1l	equ	0xFE1
  1343                           
  1344 ;; *************** function _InitInterrupt *****************
  1345 ;; Defined at:
  1346 ;;		line 72 in file "init.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;		None
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;		None               void
  1353 ;; Registers used:
  1354 ;;		None
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1
  1360 ;;      Params:         0       0       0
  1361 ;;      Locals:         0       0       0
  1362 ;;      Temps:          0       0       0
  1363 ;;      Totals:         0       0       0
  1364 ;;Total ram usage:        0 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    5
  1367 ;; This function calls:
  1368 ;;		Nothing
  1369 ;; This function is called by:
  1370 ;;		_Init
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text7
  1375  001736                     __ptext7:
  1376                           	opt stack 0
  1377  001736                     _InitInterrupt:
  1378                           	opt stack 24
  1379                           
  1380                           ;init.c: 73: INTCONbits.GIE = 1;
  1381                           
  1382                           ;incstack = 0
  1383  001736  8EF2               	bsf	intcon,7,c	;volatile
  1384                           
  1385                           ;init.c: 74: INTCONbits.PEIE = 1;
  1386  001738  8CF2               	bsf	intcon,6,c	;volatile
  1387                           
  1388                           ;init.c: 75: PIE1bits.RCIE = 1;
  1389  00173A  8A9D               	bsf	3997,5,c	;volatile
  1390                           
  1391                           ;init.c: 76: PIE1bits.CCP1IE = 1;
  1392  00173C  849D               	bsf	3997,2,c	;volatile
  1393                           
  1394                           ;init.c: 77: PIE1bits.TMR1IE = 1;
  1395  00173E  809D               	bsf	3997,0,c	;volatile
  1396  001740  0012               	return		;funcret
  1397  001742                     __end_of_InitInterrupt:
  1398                           	opt stack 0
  1399                           tblptru	equ	0xFF8
  1400                           tblptrh	equ	0xFF7
  1401                           tblptrl	equ	0xFF6
  1402                           tablat	equ	0xFF5
  1403                           intcon	equ	0xFF2
  1404                           postinc0	equ	0xFEE
  1405                           wreg	equ	0xFE8
  1406                           postdec1	equ	0xFE5
  1407                           fsr1l	equ	0xFE1
  1408                           
  1409 ;; *************** function _InitAnsel *****************
  1410 ;; Defined at:
  1411 ;;		line 27 in file "init.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;		None
  1416 ;; Return value:  Size  Location     Type
  1417 ;;		None               void
  1418 ;; Registers used:
  1419 ;;		wreg, status,2
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1
  1425 ;;      Params:         0       0       0
  1426 ;;      Locals:         0       0       0
  1427 ;;      Temps:          0       0       0
  1428 ;;      Totals:         0       0       0
  1429 ;;Total ram usage:        0 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; Hardware stack levels required when called:    5
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_Init
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439                           	psect	text8
  1440  0016F0                     __ptext8:
  1441                           	opt stack 0
  1442  0016F0                     _InitAnsel:
  1443                           	opt stack 24
  1444                           
  1445                           ;init.c: 28: ANSELA = 0;
  1446                           
  1447                           ;incstack = 0
  1448  0016F0  0E00               	movlw	0
  1449  0016F2  010F               	movlb	15	; () banked
  1450  0016F4  6F38               	movwf	56,b	;volatile
  1451                           
  1452                           ;init.c: 29: ANSELB = 0;
  1453  0016F6  0E00               	movlw	0
  1454  0016F8  010F               	movlb	15	; () banked
  1455  0016FA  6F39               	movwf	57,b	;volatile
  1456                           
  1457                           ;init.c: 30: ANSELC = 0;
  1458  0016FC  0E00               	movlw	0
  1459  0016FE  010F               	movlb	15	; () banked
  1460  001700  6F3A               	movwf	58,b	;volatile
  1461                           
  1462                           ; BSR set to: 15
  1463  001702  0012               	return		;funcret
  1464  001704                     __end_of_InitAnsel:
  1465                           	opt stack 0
  1466                           tblptru	equ	0xFF8
  1467                           tblptrh	equ	0xFF7
  1468                           tblptrl	equ	0xFF6
  1469                           tablat	equ	0xFF5
  1470                           intcon	equ	0xFF2
  1471                           postinc0	equ	0xFEE
  1472                           wreg	equ	0xFE8
  1473                           postdec1	equ	0xFE5
  1474                           fsr1l	equ	0xFE1
  1475                           
  1476 ;; *************** function _Check_Detonators *****************
  1477 ;; Defined at:
  1478 ;;		line 25 in file "ignition.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;		None               void
  1485 ;; Registers used:
  1486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMRAM   BANK0   BANK1
  1492 ;;      Params:         0       0       0
  1493 ;;      Locals:         0       0       0
  1494 ;;      Temps:          0       0       0
  1495 ;;      Totals:         0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; Hardware stack levels required when called:    6
  1499 ;; This function calls:
  1500 ;;		_Transmit
  1501 ;; This function is called by:
  1502 ;;		_main
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text9
  1507  001522                     __ptext9:
  1508                           	opt stack 0
  1509  001522                     _Check_Detonators:
  1510                           	opt stack 24
  1511                           
  1512                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  1513                           
  1514                           ; BSR set to: 15
  1515                           ;incstack = 0
  1516  001522  0E54               	movlw	84
  1517  001524  0100               	movlb	0	; () banked
  1518  001526  6F60               	movwf	Transmit@operation& (0+255),b
  1519  001528  5031               	movf	_check_counter,w,c
  1520  00152A  0D06               	mullw	6
  1521  00152C  0E01               	movlw	1
  1522  00152E  26F3               	addwf	prodl,f,c
  1523  001530  0E00               	movlw	0
  1524  001532  22F4               	addwfc	prodh,f,c
  1525  001534  0E00               	movlw	low _pin
  1526  001536  24F3               	addwf	prodl,w,c
  1527  001538  6ED9               	movwf	fsr2l,c
  1528  00153A  0E01               	movlw	high _pin
  1529  00153C  20F4               	addwfc	prodh,w,c
  1530  00153E  6EDA               	movwf	fsr2h,c
  1531  001540  50DF               	movf	indf2,w,c
  1532  001542  0100               	movlb	0	; () banked
  1533  001544  6F61               	movwf	Transmit@port& (0+255),b
  1534  001546  5031               	movf	_check_counter,w,c
  1535  001548  0D06               	mullw	6
  1536  00154A  0E00               	movlw	low _pin
  1537  00154C  24F3               	addwf	prodl,w,c
  1538  00154E  6ED9               	movwf	fsr2l,c
  1539  001550  0E01               	movlw	high _pin
  1540  001552  20F4               	addwfc	prodh,w,c
  1541  001554  6EDA               	movwf	fsr2h,c
  1542  001556  50DF               	movf	indf2,w,c
  1543  001558  ECAF  F00A         	call	_Transmit
  1544  00155C  0012               	return		;funcret
  1545  00155E                     __end_of_Check_Detonators:
  1546                           	opt stack 0
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           prodh	equ	0xFF4
  1552                           prodl	equ	0xFF3
  1553                           intcon	equ	0xFF2
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           postdec1	equ	0xFE5
  1557                           fsr1l	equ	0xFE1
  1558                           indf2	equ	0xFDF
  1559                           fsr2h	equ	0xFDA
  1560                           fsr2l	equ	0xFD9
  1561                           
  1562 ;; *************** function _Transmit *****************
  1563 ;; Defined at:
  1564 ;;		line 15 in file "communication.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  receiver        1    wreg     unsigned char 
  1567 ;;  operation       1    0[BANK0 ] unsigned char 
  1568 ;;  port            1    1[BANK0 ] unsigned char 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  receiver        1    2[BANK0 ] unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;		None               void
  1573 ;; Registers used:
  1574 ;;		wreg, status,2
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1
  1580 ;;      Params:         0       2       0
  1581 ;;      Locals:         0       1       0
  1582 ;;      Temps:          0       0       0
  1583 ;;      Totals:         0       3       0
  1584 ;;Total ram usage:        3 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    5
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_Check_Detonators
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text10
  1595  00155E                     __ptext10:
  1596                           	opt stack 0
  1597  00155E                     _Transmit:
  1598                           	opt stack 24
  1599                           
  1600                           ;incstack = 0
  1601                           ;Transmit@receiver stored from wreg
  1602  00155E  0100               	movlb	0	; () banked
  1603  001560  6F62               	movwf	Transmit@receiver& (0+255),b
  1604                           
  1605                           ;communication.c: 17: PORTBbits.RB5 = 1;
  1606  001562  8A81               	bsf	3969,5,c	;volatile
  1607                           
  1608                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  1609  001564  98AB               	bcf	4011,4,c	;volatile
  1610                           
  1611                           ;communication.c: 20: __nop();
  1612  001566  F000               	nop	
  1613  001568                     l491:
  1614  001568  A89E               	btfss	3998,4,c	;volatile
  1615  00156A  D7FE               	goto	l491
  1616                           
  1617                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  1618  00156C  80AC               	bsf	4012,0,c	;volatile
  1619                           
  1620                           ;communication.c: 23: TXREG1 = receiver;
  1621  00156E  C062  FFAD         	movff	Transmit@receiver,4013	;volatile
  1622  001572                     l494:
  1623  001572  A89E               	btfss	3998,4,c	;volatile
  1624  001574  D7FE               	goto	l494
  1625                           
  1626                           ;communication.c: 25: TXREG1 = 0xAA;
  1627  001576  0EAA               	movlw	170
  1628  001578  6EAD               	movwf	4013,c	;volatile
  1629  00157A                     l497:
  1630  00157A  A89E               	btfss	3998,4,c	;volatile
  1631  00157C  D7FE               	goto	l497
  1632                           
  1633                           ;communication.c: 27: TXREG1 = operation;
  1634  00157E  C060  FFAD         	movff	Transmit@operation,4013	;volatile
  1635  001582                     l500:
  1636  001582  A89E               	btfss	3998,4,c	;volatile
  1637  001584  D7FE               	goto	l500
  1638                           
  1639                           ;communication.c: 29: TXREG1 = port;
  1640  001586  C061  FFAD         	movff	Transmit@port,4013	;volatile
  1641  00158A                     l503:
  1642  00158A  A2AC               	btfss	4012,1,c	;volatile
  1643  00158C  D7FE               	goto	l503
  1644                           
  1645                           ;communication.c: 31: PORTBbits.RB5 = 0;
  1646  00158E  9A81               	bcf	3969,5,c	;volatile
  1647                           
  1648                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  1649  001590  88AB               	bsf	4011,4,c	;volatile
  1650                           
  1651                           ;communication.c: 33: __nop();
  1652  001592  F000               	nop	
  1653  001594  0012               	return		;funcret
  1654  001596                     __end_of_Transmit:
  1655                           	opt stack 0
  1656                           tblptru	equ	0xFF8
  1657                           tblptrh	equ	0xFF7
  1658                           tblptrl	equ	0xFF6
  1659                           tablat	equ	0xFF5
  1660                           prodh	equ	0xFF4
  1661                           prodl	equ	0xFF3
  1662                           intcon	equ	0xFF2
  1663                           postinc0	equ	0xFEE
  1664                           wreg	equ	0xFE8
  1665                           postdec1	equ	0xFE5
  1666                           fsr1l	equ	0xFE1
  1667                           indf2	equ	0xFDF
  1668                           fsr2h	equ	0xFDA
  1669                           fsr2l	equ	0xFD9
  1670                           
  1671 ;; *************** function _Check_Buttons *****************
  1672 ;; Defined at:
  1673 ;;		line 26 in file "buttonchanges.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;		None               void
  1680 ;; Registers used:
  1681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1
  1687 ;;      Params:         0       0       0
  1688 ;;      Locals:         0       0       0
  1689 ;;      Temps:          0       2       0
  1690 ;;      Totals:         0       2       0
  1691 ;;Total ram usage:        2 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:   11
  1694 ;; This function calls:
  1695 ;;		_Del_Data
  1696 ;;		_Delay_Routine
  1697 ;;		_Read_Data
  1698 ;;		_Save_Data
  1699 ;;		_Set_Display
  1700 ;;		_Start_Timer
  1701 ;; This function is called by:
  1702 ;;		_main
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text11
  1707  000270                     __ptext11:
  1708                           	opt stack 0
  1709  000270                     _Check_Buttons:
  1710                           	opt stack 19
  1711                           
  1712                           ;buttonchanges.c: 27: if(PORTCbits.RC1 == 1) {
  1713                           
  1714                           ;incstack = 0
  1715  000270  A282               	btfss	3970,1,c	;volatile
  1716  000272  D00A               	goto	l94
  1717                           
  1718                           ;buttonchanges.c: 28: Delay_Routine(3);
  1719  000274  0E03               	movlw	3
  1720  000276  EC1A  F00B         	call	_Delay_Routine
  1721                           
  1722                           ;buttonchanges.c: 29: if(PORTCbits.RC1 == 1) {
  1723  00027A  A282               	btfss	3970,1,c	;volatile
  1724  00027C  0012               	return	
  1725                           
  1726                           ;buttonchanges.c: 30: ignite_ready = 1;
  1727  00027E  803B               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1728                           
  1729                           ;buttonchanges.c: 31: Start_Timer();
  1730  000280  EC6A  F00B         	call	_Start_Timer	;wreg free
  1731                           
  1732                           ;buttonchanges.c: 32: __nop();
  1733  000284  F000               	nop	
  1734                           
  1735                           ;buttonchanges.c: 36: }
  1736                           ;buttonchanges.c: 37: } else if(PORTBbits.RB2 == 1) {
  1737                           
  1738                           ;buttonchanges.c: 33: return;
  1739  000286  0012               	return	
  1740  000288                     l94:
  1741  000288  A481               	btfss	3969,2,c	;volatile
  1742  00028A  D060               	goto	l98
  1743                           
  1744                           ;buttonchanges.c: 38: Delay_Routine(3);
  1745  00028C  0E03               	movlw	3
  1746  00028E  EC1A  F00B         	call	_Delay_Routine
  1747                           
  1748                           ;buttonchanges.c: 39: if(PORTBbits.RB2 == 1) {
  1749  000292  A481               	btfss	3969,2,c	;volatile
  1750  000294  0012               	return	
  1751                           
  1752                           ;buttonchanges.c: 40: if(PORTBbits.RB3 == 1) {
  1753  000296  A681               	btfss	3969,3,c	;volatile
  1754  000298  D008               	goto	l3072
  1755                           
  1756                           ;buttonchanges.c: 41: Delay_Routine(3);
  1757  00029A  0E03               	movlw	3
  1758  00029C  EC1A  F00B         	call	_Delay_Routine
  1759                           
  1760                           ;buttonchanges.c: 42: if(PORTBbits.RB3 == 1) {
  1761  0002A0  A681               	btfss	3969,3,c	;volatile
  1762  0002A2  D003               	goto	l3072
  1763                           
  1764                           ;buttonchanges.c: 43: Del_Data();
  1765  0002A4  EC2A  F00A         	call	_Del_Data	;wreg free
  1766                           
  1767                           ;buttonchanges.c: 44: return;
  1768  0002A8  0012               	return	
  1769  0002AA                     l3072:
  1770                           
  1771                           ;buttonchanges.c: 46: }
  1772                           ;buttonchanges.c: 47: }
  1773                           ;buttonchanges.c: 48: pin[pin_selected].time++;
  1774  0002AA  0100               	movlb	0	; () banked
  1775  0002AC  5179               	movf	_pin_selected& (0+255),w,b
  1776  0002AE  0D06               	mullw	6
  1777  0002B0  0E04               	movlw	4
  1778  0002B2  26F3               	addwf	prodl,f,c
  1779  0002B4  0E00               	movlw	0
  1780  0002B6  22F4               	addwfc	prodh,f,c
  1781  0002B8  0E00               	movlw	low _pin
  1782  0002BA  24F3               	addwf	prodl,w,c
  1783  0002BC  6ED9               	movwf	fsr2l,c
  1784  0002BE  0E01               	movlw	high _pin
  1785  0002C0  20F4               	addwfc	prodh,w,c
  1786  0002C2  6EDA               	movwf	fsr2h,c
  1787  0002C4  2ADE               	incf	postinc2,f,c
  1788  0002C6  0E00               	movlw	0
  1789  0002C8  22DD               	addwfc	postdec2,f,c
  1790                           
  1791                           ;buttonchanges.c: 49: if(pin[pin_selected].time > 999) {
  1792  0002CA  0100               	movlb	0	; () banked
  1793  0002CC  5179               	movf	_pin_selected& (0+255),w,b
  1794  0002CE  0D06               	mullw	6
  1795  0002D0  0E04               	movlw	4
  1796  0002D2  26F3               	addwf	prodl,f,c
  1797  0002D4  0E00               	movlw	0
  1798  0002D6  22F4               	addwfc	prodh,f,c
  1799  0002D8  0E00               	movlw	low _pin
  1800  0002DA  24F3               	addwf	prodl,w,c
  1801  0002DC  6ED9               	movwf	fsr2l,c
  1802  0002DE  0E01               	movlw	high _pin
  1803  0002E0  20F4               	addwfc	prodh,w,c
  1804  0002E2  6EDA               	movwf	fsr2h,c
  1805  0002E4  0E01               	movlw	1
  1806  0002E6  BEDB               	btfsc	plusw2,7,c
  1807  0002E8  D017               	goto	l3076
  1808  0002EA  0EE8               	movlw	232
  1809  0002EC  5CDE               	subwf	postinc2,w,c
  1810  0002EE  0E03               	movlw	3
  1811  0002F0  58DE               	subwfb	postinc2,w,c
  1812  0002F2  A0D8               	btfss	status,0,c
  1813  0002F4  D011               	goto	l3076
  1814                           
  1815                           ; BSR set to: 0
  1816                           ;buttonchanges.c: 50: pin[pin_selected].time = 0;
  1817  0002F6  0100               	movlb	0	; () banked
  1818  0002F8  5179               	movf	_pin_selected& (0+255),w,b
  1819  0002FA  0D06               	mullw	6
  1820  0002FC  0E04               	movlw	4
  1821  0002FE  26F3               	addwf	prodl,f,c
  1822  000300  0E00               	movlw	0
  1823  000302  22F4               	addwfc	prodh,f,c
  1824  000304  0E00               	movlw	low _pin
  1825  000306  24F3               	addwf	prodl,w,c
  1826  000308  6ED9               	movwf	fsr2l,c
  1827  00030A  0E01               	movlw	high _pin
  1828  00030C  20F4               	addwfc	prodh,w,c
  1829  00030E  6EDA               	movwf	fsr2h,c
  1830  000310  0E00               	movlw	0
  1831  000312  6EDE               	movwf	postinc2,c
  1832  000314  0E00               	movlw	0
  1833  000316  6EDD               	movwf	postdec2,c
  1834  000318                     l3076:
  1835                           
  1836                           ; BSR set to: 0
  1837                           ;buttonchanges.c: 51: }
  1838                           ;buttonchanges.c: 52: __nop();
  1839  000318  F000               	nop	
  1840                           
  1841                           ;buttonchanges.c: 53: Set_Display('7', '-', pin[pin_selected].time);
  1842  00031A  0E2D               	movlw	45
  1843  00031C  0100               	movlb	0	; () banked
  1844  00031E  6F70               	movwf	Set_Display@information& (0+255),b
  1845  000320  0100               	movlb	0	; () banked
  1846  000322  5179               	movf	_pin_selected& (0+255),w,b
  1847  000324  0D06               	mullw	6
  1848  000326  0E04               	movlw	4
  1849  000328  26F3               	addwf	prodl,f,c
  1850  00032A  0E00               	movlw	0
  1851  00032C  22F4               	addwfc	prodh,f,c
  1852  00032E  0E00               	movlw	low _pin
  1853  000330  24F3               	addwf	prodl,w,c
  1854  000332  6ED9               	movwf	fsr2l,c
  1855  000334  0E01               	movlw	high _pin
  1856  000336  20F4               	addwfc	prodh,w,c
  1857  000338  6EDA               	movwf	fsr2h,c
  1858  00033A  CFDE F071          	movff	postinc2,Set_Display@value
  1859  00033E  CFDD F072          	movff	postdec2,Set_Display@value+1
  1860  000342  0E37               	movlw	55
  1861  000344  ECF5  F008         	call	_Set_Display
  1862                           
  1863                           ;buttonchanges.c: 54: __nop();
  1864  000348  F000               	nop	
  1865                           
  1866                           ;buttonchanges.c: 55: }
  1867                           ;buttonchanges.c: 56: } else if(PORTBbits.RB3 == 1) {
  1868  00034A  0012               	return	
  1869  00034C                     l98:
  1870  00034C  A681               	btfss	3969,3,c	;volatile
  1871  00034E  D05A               	goto	l104
  1872                           
  1873                           ;buttonchanges.c: 57: Delay_Routine(3);
  1874  000350  0E03               	movlw	3
  1875  000352  EC1A  F00B         	call	_Delay_Routine
  1876                           
  1877                           ;buttonchanges.c: 58: if(PORTBbits.RB3 == 1) {
  1878  000356  A681               	btfss	3969,3,c	;volatile
  1879  000358  0012               	return	
  1880                           
  1881                           ;buttonchanges.c: 59: if(PORTBbits.RB2 == 1) {
  1882  00035A  A481               	btfss	3969,2,c	;volatile
  1883  00035C  D008               	goto	l3096
  1884                           
  1885                           ;buttonchanges.c: 60: Delay_Routine(3);
  1886  00035E  0E03               	movlw	3
  1887  000360  EC1A  F00B         	call	_Delay_Routine
  1888                           
  1889                           ;buttonchanges.c: 61: if(PORTBbits.RB2 == 1) {
  1890  000364  A481               	btfss	3969,2,c	;volatile
  1891  000366  D003               	goto	l3096
  1892                           
  1893                           ;buttonchanges.c: 62: Del_Data();
  1894  000368  EC2A  F00A         	call	_Del_Data	;wreg free
  1895                           
  1896                           ;buttonchanges.c: 63: return;
  1897  00036C  0012               	return	
  1898  00036E                     l3096:
  1899                           
  1900                           ;buttonchanges.c: 65: }
  1901                           ;buttonchanges.c: 66: }
  1902                           ;buttonchanges.c: 67: pin[pin_selected].time--;
  1903  00036E  0100               	movlb	0	; () banked
  1904  000370  5179               	movf	_pin_selected& (0+255),w,b
  1905  000372  0D06               	mullw	6
  1906  000374  0E04               	movlw	4
  1907  000376  26F3               	addwf	prodl,f,c
  1908  000378  0E00               	movlw	0
  1909  00037A  22F4               	addwfc	prodh,f,c
  1910  00037C  0E00               	movlw	low _pin
  1911  00037E  24F3               	addwf	prodl,w,c
  1912  000380  6ED9               	movwf	fsr2l,c
  1913  000382  0E01               	movlw	high _pin
  1914  000384  20F4               	addwfc	prodh,w,c
  1915  000386  6EDA               	movwf	fsr2h,c
  1916  000388  06DE               	decf	postinc2,f,c
  1917  00038A  0E00               	movlw	0
  1918  00038C  5ADD               	subwfb	postdec2,f,c
  1919                           
  1920                           ;buttonchanges.c: 68: if(pin[pin_selected].time < 0) {
  1921  00038E  0100               	movlb	0	; () banked
  1922  000390  5179               	movf	_pin_selected& (0+255),w,b
  1923  000392  0D06               	mullw	6
  1924  000394  0E04               	movlw	4
  1925  000396  26F3               	addwf	prodl,f,c
  1926  000398  0E00               	movlw	0
  1927  00039A  22F4               	addwfc	prodh,f,c
  1928  00039C  0E00               	movlw	low _pin
  1929  00039E  24F3               	addwf	prodl,w,c
  1930  0003A0  6ED9               	movwf	fsr2l,c
  1931  0003A2  0E01               	movlw	high _pin
  1932  0003A4  20F4               	addwfc	prodh,w,c
  1933  0003A6  6EDA               	movwf	fsr2h,c
  1934  0003A8  0E01               	movlw	1
  1935  0003AA  AEDB               	btfss	plusw2,7,c
  1936  0003AC  D011               	goto	l3100
  1937                           
  1938                           ; BSR set to: 0
  1939                           ;buttonchanges.c: 69: pin[pin_selected].time = 999;
  1940  0003AE  0100               	movlb	0	; () banked
  1941  0003B0  5179               	movf	_pin_selected& (0+255),w,b
  1942  0003B2  0D06               	mullw	6
  1943  0003B4  0E04               	movlw	4
  1944  0003B6  26F3               	addwf	prodl,f,c
  1945  0003B8  0E00               	movlw	0
  1946  0003BA  22F4               	addwfc	prodh,f,c
  1947  0003BC  0E00               	movlw	low _pin
  1948  0003BE  24F3               	addwf	prodl,w,c
  1949  0003C0  6ED9               	movwf	fsr2l,c
  1950  0003C2  0E01               	movlw	high _pin
  1951  0003C4  20F4               	addwfc	prodh,w,c
  1952  0003C6  6EDA               	movwf	fsr2h,c
  1953  0003C8  0EE7               	movlw	231
  1954  0003CA  6EDE               	movwf	postinc2,c
  1955  0003CC  0E03               	movlw	3
  1956  0003CE  6EDD               	movwf	postdec2,c
  1957  0003D0                     l3100:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;buttonchanges.c: 70: }
  1961                           ;buttonchanges.c: 71: __nop();
  1962  0003D0  F000               	nop	
  1963                           
  1964                           ;buttonchanges.c: 72: Set_Display('7', '-', pin[pin_selected].time);
  1965  0003D2  0E2D               	movlw	45
  1966  0003D4  0100               	movlb	0	; () banked
  1967  0003D6  6F70               	movwf	Set_Display@information& (0+255),b
  1968  0003D8  0100               	movlb	0	; () banked
  1969  0003DA  5179               	movf	_pin_selected& (0+255),w,b
  1970  0003DC  0D06               	mullw	6
  1971  0003DE  0E04               	movlw	4
  1972  0003E0  26F3               	addwf	prodl,f,c
  1973  0003E2  0E00               	movlw	0
  1974  0003E4  22F4               	addwfc	prodh,f,c
  1975  0003E6  0E00               	movlw	low _pin
  1976  0003E8  24F3               	addwf	prodl,w,c
  1977  0003EA  6ED9               	movwf	fsr2l,c
  1978  0003EC  0E01               	movlw	high _pin
  1979  0003EE  20F4               	addwfc	prodh,w,c
  1980  0003F0  6EDA               	movwf	fsr2h,c
  1981  0003F2  CFDE F071          	movff	postinc2,Set_Display@value
  1982  0003F6  CFDD F072          	movff	postdec2,Set_Display@value+1
  1983  0003FA  0E37               	movlw	55
  1984  0003FC  ECF5  F008         	call	_Set_Display
  1985                           
  1986                           ;buttonchanges.c: 73: __nop();
  1987  000400  F000               	nop	
  1988                           
  1989                           ;buttonchanges.c: 74: }
  1990                           ;buttonchanges.c: 75: } else if(PORTBbits.RB4 == 1) {
  1991  000402  0012               	return	
  1992  000404                     l104:
  1993  000404  A881               	btfss	3969,4,c	;volatile
  1994  000406  D057               	goto	l110
  1995                           
  1996                           ;buttonchanges.c: 76: Delay_Routine(3);
  1997  000408  0E03               	movlw	3
  1998  00040A  EC1A  F00B         	call	_Delay_Routine
  1999                           
  2000                           ;buttonchanges.c: 77: if(PORTBbits.RB4 == 1) {
  2001  00040E  A881               	btfss	3969,4,c	;volatile
  2002  000410  0012               	return	
  2003                           
  2004                           ;buttonchanges.c: 78: pin[pin_selected].time += 10;
  2005  000412  0100               	movlb	0	; () banked
  2006  000414  5179               	movf	_pin_selected& (0+255),w,b
  2007  000416  0D06               	mullw	6
  2008  000418  0E04               	movlw	4
  2009  00041A  26F3               	addwf	prodl,f,c
  2010  00041C  0E00               	movlw	0
  2011  00041E  22F4               	addwfc	prodh,f,c
  2012  000420  0E00               	movlw	low _pin
  2013  000422  24F3               	addwf	prodl,w,c
  2014  000424  6ED9               	movwf	fsr2l,c
  2015  000426  0E01               	movlw	high _pin
  2016  000428  20F4               	addwfc	prodh,w,c
  2017  00042A  6EDA               	movwf	fsr2h,c
  2018  00042C  0E0A               	movlw	10
  2019  00042E  26DE               	addwf	postinc2,f,c
  2020  000430  0E00               	movlw	0
  2021  000432  22DD               	addwfc	postdec2,f,c
  2022                           
  2023                           ;buttonchanges.c: 79: if(pin[pin_selected].time > 999) {
  2024  000434  0100               	movlb	0	; () banked
  2025  000436  5179               	movf	_pin_selected& (0+255),w,b
  2026  000438  0D06               	mullw	6
  2027  00043A  0E04               	movlw	4
  2028  00043C  26F3               	addwf	prodl,f,c
  2029  00043E  0E00               	movlw	0
  2030  000440  22F4               	addwfc	prodh,f,c
  2031  000442  0E00               	movlw	low _pin
  2032  000444  24F3               	addwf	prodl,w,c
  2033  000446  6ED9               	movwf	fsr2l,c
  2034  000448  0E01               	movlw	high _pin
  2035  00044A  20F4               	addwfc	prodh,w,c
  2036  00044C  6EDA               	movwf	fsr2h,c
  2037  00044E  0E01               	movlw	1
  2038  000450  BEDB               	btfsc	plusw2,7,c
  2039  000452  D017               	goto	l3114
  2040  000454  0EE8               	movlw	232
  2041  000456  5CDE               	subwf	postinc2,w,c
  2042  000458  0E03               	movlw	3
  2043  00045A  58DE               	subwfb	postinc2,w,c
  2044  00045C  A0D8               	btfss	status,0,c
  2045  00045E  D011               	goto	l3114
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;buttonchanges.c: 80: pin[pin_selected].time = 0;
  2049  000460  0100               	movlb	0	; () banked
  2050  000462  5179               	movf	_pin_selected& (0+255),w,b
  2051  000464  0D06               	mullw	6
  2052  000466  0E04               	movlw	4
  2053  000468  26F3               	addwf	prodl,f,c
  2054  00046A  0E00               	movlw	0
  2055  00046C  22F4               	addwfc	prodh,f,c
  2056  00046E  0E00               	movlw	low _pin
  2057  000470  24F3               	addwf	prodl,w,c
  2058  000472  6ED9               	movwf	fsr2l,c
  2059  000474  0E01               	movlw	high _pin
  2060  000476  20F4               	addwfc	prodh,w,c
  2061  000478  6EDA               	movwf	fsr2h,c
  2062  00047A  0E00               	movlw	0
  2063  00047C  6EDE               	movwf	postinc2,c
  2064  00047E  0E00               	movlw	0
  2065  000480  6EDD               	movwf	postdec2,c
  2066  000482                     l3114:
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;buttonchanges.c: 81: }
  2070                           ;buttonchanges.c: 82: __nop();
  2071  000482  F000               	nop	
  2072                           
  2073                           ;buttonchanges.c: 83: Set_Display('7', '-', pin[pin_selected].time);
  2074  000484  0E2D               	movlw	45
  2075  000486  0100               	movlb	0	; () banked
  2076  000488  6F70               	movwf	Set_Display@information& (0+255),b
  2077  00048A  0100               	movlb	0	; () banked
  2078  00048C  5179               	movf	_pin_selected& (0+255),w,b
  2079  00048E  0D06               	mullw	6
  2080  000490  0E04               	movlw	4
  2081  000492  26F3               	addwf	prodl,f,c
  2082  000494  0E00               	movlw	0
  2083  000496  22F4               	addwfc	prodh,f,c
  2084  000498  0E00               	movlw	low _pin
  2085  00049A  24F3               	addwf	prodl,w,c
  2086  00049C  6ED9               	movwf	fsr2l,c
  2087  00049E  0E01               	movlw	high _pin
  2088  0004A0  20F4               	addwfc	prodh,w,c
  2089  0004A2  6EDA               	movwf	fsr2h,c
  2090  0004A4  CFDE F071          	movff	postinc2,Set_Display@value
  2091  0004A8  CFDD F072          	movff	postdec2,Set_Display@value+1
  2092  0004AC  0E37               	movlw	55
  2093  0004AE  ECF5  F008         	call	_Set_Display
  2094                           
  2095                           ;buttonchanges.c: 84: __nop();
  2096  0004B2  F000               	nop	
  2097                           
  2098                           ;buttonchanges.c: 85: }
  2099                           ;buttonchanges.c: 86: } else if(PORTBbits.RB1 == 1) {
  2100  0004B4  0012               	return	
  2101  0004B6                     l110:
  2102  0004B6  A281               	btfss	3969,1,c	;volatile
  2103  0004B8  D0B1               	goto	l114
  2104                           
  2105                           ;buttonchanges.c: 87: Delay_Routine(3);
  2106  0004BA  0E03               	movlw	3
  2107  0004BC  EC1A  F00B         	call	_Delay_Routine
  2108                           
  2109                           ;buttonchanges.c: 88: if(PORTBbits.RB1 == 1) {
  2110  0004C0  A281               	btfss	3969,1,c	;volatile
  2111  0004C2  0012               	return	
  2112                           
  2113                           ;buttonchanges.c: 89: if(PORTBbits.RB0 == 1) {
  2114  0004C4  A081               	btfss	3969,0,c	;volatile
  2115  0004C6  D007               	goto	l3132
  2116                           
  2117                           ;buttonchanges.c: 90: Delay_Routine(3);
  2118  0004C8  0E03               	movlw	3
  2119  0004CA  EC1A  F00B         	call	_Delay_Routine
  2120                           
  2121                           ;buttonchanges.c: 91: if(PORTBbits.RB0 == 1) {
  2122  0004CE  A081               	btfss	3969,0,c	;volatile
  2123  0004D0  D002               	goto	l3132
  2124                           
  2125                           ;buttonchanges.c: 92: testflag = 1;
  2126  0004D2  863B               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2127                           
  2128                           ;buttonchanges.c: 93: return;
  2129  0004D4  0012               	return	
  2130  0004D6                     l3132:
  2131                           
  2132                           ;buttonchanges.c: 95: }
  2133                           ;buttonchanges.c: 96: }
  2134                           ;buttonchanges.c: 97: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2135  0004D6  0100               	movlb	0	; () banked
  2136  0004D8  5179               	movf	_pin_selected& (0+255),w,b
  2137  0004DA  0D06               	mullw	6
  2138  0004DC  0E04               	movlw	4
  2139  0004DE  26F3               	addwf	prodl,f,c
  2140  0004E0  0E00               	movlw	0
  2141  0004E2  22F4               	addwfc	prodh,f,c
  2142  0004E4  0E00               	movlw	low _pin
  2143  0004E6  24F3               	addwf	prodl,w,c
  2144  0004E8  6ED9               	movwf	fsr2l,c
  2145  0004EA  0E01               	movlw	high _pin
  2146  0004EC  20F4               	addwfc	prodh,w,c
  2147  0004EE  6EDA               	movwf	fsr2h,c
  2148  0004F0  CFDE F060          	movff	postinc2,Save_Data@store
  2149  0004F4  CFDD F061          	movff	postdec2,Save_Data@store+1
  2150  0004F8  0100               	movlb	0	; () banked
  2151  0004FA  5179               	movf	_pin_selected& (0+255),w,b
  2152  0004FC  0D06               	mullw	6
  2153  0004FE  0E02               	movlw	2
  2154  000500  26F3               	addwf	prodl,f,c
  2155  000502  0E00               	movlw	0
  2156  000504  22F4               	addwfc	prodh,f,c
  2157  000506  0E00               	movlw	low _pin
  2158  000508  24F3               	addwf	prodl,w,c
  2159  00050A  6ED9               	movwf	fsr2l,c
  2160  00050C  0E01               	movlw	high _pin
  2161  00050E  20F4               	addwfc	prodh,w,c
  2162  000510  6EDA               	movwf	fsr2h,c
  2163  000512  50DF               	movf	indf2,w,c
  2164  000514  0100               	movlb	0	; () banked
  2165  000516  6F62               	movwf	Save_Data@store_address& (0+255),b
  2166  000518  ECB5  F009         	call	_Save_Data	;wreg free
  2167                           
  2168                           ;buttonchanges.c: 98: pin_selected++;
  2169  00051C  0100               	movlb	0	; () banked
  2170  00051E  2B79               	incf	_pin_selected& (0+255),f,b
  2171                           
  2172                           ;buttonchanges.c: 99: switch (slave_selected) {
  2173  000520  D014               	goto	l3150
  2174  000522                     l3136:
  2175                           
  2176                           ; BSR set to: 0
  2177                           ;buttonchanges.c: 101: if(pin_selected > 9) {
  2178  000522  0E09               	movlw	9
  2179  000524  0100               	movlb	0	; () banked
  2180  000526  6579               	cpfsgt	_pin_selected& (0+255),b
  2181  000528  D01B               	goto	l3152
  2182                           
  2183                           ; BSR set to: 0
  2184                           ;buttonchanges.c: 102: pin_selected = 0;
  2185  00052A  0E00               	movlw	0
  2186  00052C  D00B               	goto	L2
  2187  00052E                     l3140:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ;buttonchanges.c: 106: if(pin_selected > 19) {
  2191  00052E  0E13               	movlw	19
  2192  000530  0100               	movlb	0	; () banked
  2193  000532  6579               	cpfsgt	_pin_selected& (0+255),b
  2194  000534  D015               	goto	l3152
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;buttonchanges.c: 107: pin_selected = 10;
  2198  000536  0E0A               	movlw	10
  2199  000538  D005               	goto	L2
  2200  00053A                     l3144:
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;buttonchanges.c: 111: if(pin_selected > 29) {
  2204  00053A  0E1D               	movlw	29
  2205  00053C  0100               	movlb	0	; () banked
  2206  00053E  6579               	cpfsgt	_pin_selected& (0+255),b
  2207  000540  D00F               	goto	l3152
  2208                           
  2209                           ; BSR set to: 0
  2210                           ;buttonchanges.c: 112: pin_selected = 20;
  2211  000542  0E14               	movlw	20
  2212  000544                     L2:
  2213  000544  0100               	movlb	0	; () banked
  2214  000546  6F79               	movwf	_pin_selected& (0+255),b
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;buttonchanges.c: 115: }
  2218                           
  2219                           ; BSR set to: 0
  2220                           ;buttonchanges.c: 113: }
  2221                           ;buttonchanges.c: 114: break;
  2222  000548  D00B               	goto	l3152
  2223  00054A                     l3150:
  2224                           
  2225                           ; BSR set to: 0
  2226  00054A  0100               	movlb	0	; () banked
  2227  00054C  517A               	movf	_slave_selected& (0+255),w,b
  2228                           
  2229                           ; Switch size 1, requested type "space"
  2230                           ; Number of cases is 3, Range of values is 0 to 2
  2231                           ; switch strategies available:
  2232                           ; Name         Instructions Cycles
  2233                           ; simple_byte           10     6 (average)
  2234                           ;	Chosen strategy is simple_byte
  2235  00054E  0A00               	xorlw	0	; case 0
  2236  000550  B4D8               	btfsc	status,2,c
  2237  000552  D7E7               	goto	l3136
  2238  000554  0A01               	xorlw	1	; case 1
  2239  000556  B4D8               	btfsc	status,2,c
  2240  000558  D7EA               	goto	l3140
  2241  00055A  0A03               	xorlw	3	; case 2
  2242  00055C  B4D8               	btfsc	status,2,c
  2243  00055E  D7ED               	goto	l3144
  2244  000560                     l3152:
  2245                           
  2246                           ; BSR set to: 0
  2247                           ;buttonchanges.c: 116: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2248  000560  0100               	movlb	0	; () banked
  2249  000562  5179               	movf	_pin_selected& (0+255),w,b
  2250  000564  0D06               	mullw	6
  2251  000566  0E02               	movlw	2
  2252  000568  26F3               	addwf	prodl,f,c
  2253  00056A  0E00               	movlw	0
  2254  00056C  22F4               	addwfc	prodh,f,c
  2255  00056E  0E00               	movlw	low _pin
  2256  000570  24F3               	addwf	prodl,w,c
  2257  000572  6ED9               	movwf	fsr2l,c
  2258  000574  0E01               	movlw	high _pin
  2259  000576  20F4               	addwfc	prodh,w,c
  2260  000578  6EDA               	movwf	fsr2h,c
  2261  00057A  50DF               	movf	indf2,w,c
  2262  00057C  ECDF  F009         	call	_Read_Data
  2263  000580  0100               	movlb	0	; () banked
  2264  000582  5179               	movf	_pin_selected& (0+255),w,b
  2265  000584  0D06               	mullw	6
  2266  000586  0E04               	movlw	4
  2267  000588  26F3               	addwf	prodl,f,c
  2268  00058A  0E00               	movlw	0
  2269  00058C  22F4               	addwfc	prodh,f,c
  2270  00058E  0E00               	movlw	low _pin
  2271  000590  24F3               	addwf	prodl,w,c
  2272  000592  6ED9               	movwf	fsr2l,c
  2273  000594  0E01               	movlw	high _pin
  2274  000596  20F4               	addwfc	prodh,w,c
  2275  000598  6EDA               	movwf	fsr2h,c
  2276  00059A  0100               	movlb	0	; () banked
  2277  00059C  C060  FFDE         	movff	?_Read_Data,postinc2
  2278  0005A0  0100               	movlb	0	; () banked
  2279  0005A2  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;buttonchanges.c: 117: __nop();
  2283  0005A6  F000               	nop	
  2284                           
  2285                           ;buttonchanges.c: 118: Set_Display('7', 'A', pin[pin_selected].output);
  2286  0005A8  0E41               	movlw	65
  2287  0005AA  0100               	movlb	0	; () banked
  2288  0005AC  6F70               	movwf	Set_Display@information& (0+255),b
  2289  0005AE  0100               	movlb	0	; () banked
  2290  0005B0  5179               	movf	_pin_selected& (0+255),w,b
  2291  0005B2  0D06               	mullw	6
  2292  0005B4  0E01               	movlw	1
  2293  0005B6  26F3               	addwf	prodl,f,c
  2294  0005B8  0E00               	movlw	0
  2295  0005BA  22F4               	addwfc	prodh,f,c
  2296  0005BC  0E00               	movlw	low _pin
  2297  0005BE  24F3               	addwf	prodl,w,c
  2298  0005C0  6ED9               	movwf	fsr2l,c
  2299  0005C2  0E01               	movlw	high _pin
  2300  0005C4  20F4               	addwfc	prodh,w,c
  2301  0005C6  6EDA               	movwf	fsr2h,c
  2302  0005C8  50DF               	movf	indf2,w,c
  2303  0005CA  0100               	movlb	0	; () banked
  2304  0005CC  6F77               	movwf	??_Check_Buttons& (0+255),b
  2305  0005CE  0100               	movlb	0	; () banked
  2306  0005D0  5177               	movf	??_Check_Buttons& (0+255),w,b
  2307  0005D2  0100               	movlb	0	; () banked
  2308  0005D4  6F71               	movwf	Set_Display@value& (0+255),b
  2309  0005D6  6B72               	clrf	(Set_Display@value+1)& (0+255),b
  2310  0005D8  0E37               	movlw	55
  2311  0005DA  ECF5  F008         	call	_Set_Display
  2312                           
  2313                           ;buttonchanges.c: 119: Delay_Routine(30);
  2314  0005DE  0E1E               	movlw	30
  2315  0005E0  EC1A  F00B         	call	_Delay_Routine
  2316                           
  2317                           ;buttonchanges.c: 120: Set_Display('7', '-', pin[pin_selected].time);
  2318  0005E4  0E2D               	movlw	45
  2319  0005E6  0100               	movlb	0	; () banked
  2320  0005E8  6F70               	movwf	Set_Display@information& (0+255),b
  2321  0005EA  0100               	movlb	0	; () banked
  2322  0005EC  5179               	movf	_pin_selected& (0+255),w,b
  2323  0005EE  0D06               	mullw	6
  2324  0005F0  0E04               	movlw	4
  2325  0005F2  26F3               	addwf	prodl,f,c
  2326  0005F4  0E00               	movlw	0
  2327  0005F6  22F4               	addwfc	prodh,f,c
  2328  0005F8  0E00               	movlw	low _pin
  2329  0005FA  24F3               	addwf	prodl,w,c
  2330  0005FC  6ED9               	movwf	fsr2l,c
  2331  0005FE  0E01               	movlw	high _pin
  2332  000600  20F4               	addwfc	prodh,w,c
  2333  000602  6EDA               	movwf	fsr2h,c
  2334  000604  CFDE F071          	movff	postinc2,Set_Display@value
  2335  000608  CFDD F072          	movff	postdec2,Set_Display@value+1
  2336  00060C  0E37               	movlw	55
  2337  00060E  ECF5  F008         	call	_Set_Display
  2338                           
  2339                           ;buttonchanges.c: 121: Delay_Routine(30);
  2340  000612  0E1E               	movlw	30
  2341  000614  EC1A  F00B         	call	_Delay_Routine
  2342                           
  2343                           ;buttonchanges.c: 122: __nop();
  2344  000618  F000               	nop	
  2345                           
  2346                           ;buttonchanges.c: 123: }
  2347                           ;buttonchanges.c: 124: } else if(PORTBbits.RB0 == 1) {
  2348  00061A  0012               	return	
  2349  00061C                     l114:
  2350  00061C  A081               	btfss	3969,0,c	;volatile
  2351  00061E  0012               	return	
  2352                           
  2353                           ;buttonchanges.c: 125: Delay_Routine(3);
  2354  000620  0E03               	movlw	3
  2355  000622  EC1A  F00B         	call	_Delay_Routine
  2356                           
  2357                           ;buttonchanges.c: 126: if(PORTBbits.RB0 == 1) {
  2358  000626  A081               	btfss	3969,0,c	;volatile
  2359  000628  0012               	return	
  2360                           
  2361                           ;buttonchanges.c: 127: if(PORTBbits.RB1 == 1) {
  2362  00062A  A281               	btfss	3969,1,c	;volatile
  2363  00062C  D007               	goto	l3178
  2364                           
  2365                           ;buttonchanges.c: 128: Delay_Routine(3);
  2366  00062E  0E03               	movlw	3
  2367  000630  EC1A  F00B         	call	_Delay_Routine
  2368                           
  2369                           ;buttonchanges.c: 129: if(PORTBbits.RB1 == 1) {
  2370  000634  A281               	btfss	3969,1,c	;volatile
  2371  000636  D002               	goto	l3178
  2372                           
  2373                           ;buttonchanges.c: 130: testflag = 1;
  2374  000638  863B               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2375                           
  2376                           ;buttonchanges.c: 131: return;
  2377  00063A  0012               	return	
  2378  00063C                     l3178:
  2379                           
  2380                           ;buttonchanges.c: 133: }
  2381                           ;buttonchanges.c: 134: }
  2382                           ;buttonchanges.c: 135: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2383  00063C  0100               	movlb	0	; () banked
  2384  00063E  5179               	movf	_pin_selected& (0+255),w,b
  2385  000640  0D06               	mullw	6
  2386  000642  0E04               	movlw	4
  2387  000644  26F3               	addwf	prodl,f,c
  2388  000646  0E00               	movlw	0
  2389  000648  22F4               	addwfc	prodh,f,c
  2390  00064A  0E00               	movlw	low _pin
  2391  00064C  24F3               	addwf	prodl,w,c
  2392  00064E  6ED9               	movwf	fsr2l,c
  2393  000650  0E01               	movlw	high _pin
  2394  000652  20F4               	addwfc	prodh,w,c
  2395  000654  6EDA               	movwf	fsr2h,c
  2396  000656  CFDE F060          	movff	postinc2,Save_Data@store
  2397  00065A  CFDD F061          	movff	postdec2,Save_Data@store+1
  2398  00065E  0100               	movlb	0	; () banked
  2399  000660  5179               	movf	_pin_selected& (0+255),w,b
  2400  000662  0D06               	mullw	6
  2401  000664  0E02               	movlw	2
  2402  000666  26F3               	addwf	prodl,f,c
  2403  000668  0E00               	movlw	0
  2404  00066A  22F4               	addwfc	prodh,f,c
  2405  00066C  0E00               	movlw	low _pin
  2406  00066E  24F3               	addwf	prodl,w,c
  2407  000670  6ED9               	movwf	fsr2l,c
  2408  000672  0E01               	movlw	high _pin
  2409  000674  20F4               	addwfc	prodh,w,c
  2410  000676  6EDA               	movwf	fsr2h,c
  2411  000678  50DF               	movf	indf2,w,c
  2412  00067A  0100               	movlb	0	; () banked
  2413  00067C  6F62               	movwf	Save_Data@store_address& (0+255),b
  2414  00067E  ECB5  F009         	call	_Save_Data	;wreg free
  2415                           
  2416                           ;buttonchanges.c: 136: slave_selected++;
  2417  000682  0100               	movlb	0	; () banked
  2418  000684  2B7A               	incf	_slave_selected& (0+255),f,b
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;buttonchanges.c: 137: if(slave_selected > 2) {
  2422  000686  0E02               	movlw	2
  2423  000688  0100               	movlb	0	; () banked
  2424  00068A  657A               	cpfsgt	_slave_selected& (0+255),b
  2425  00068C  D003               	goto	l3186
  2426                           
  2427                           ; BSR set to: 0
  2428                           ;buttonchanges.c: 138: slave_selected = 0;
  2429  00068E  0E00               	movlw	0
  2430  000690  0100               	movlb	0	; () banked
  2431  000692  6F7A               	movwf	_slave_selected& (0+255),b
  2432  000694                     l3186:
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;buttonchanges.c: 139: }
  2436                           ;buttonchanges.c: 140: pin_selected = slave_selected * 10;
  2437  000694  0100               	movlb	0	; () banked
  2438  000696  517A               	movf	_slave_selected& (0+255),w,b
  2439  000698  0D0A               	mullw	10
  2440  00069A  CFF3 F079          	movff	prodl,_pin_selected
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;buttonchanges.c: 141: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2444  00069E  0100               	movlb	0	; () banked
  2445  0006A0  5179               	movf	_pin_selected& (0+255),w,b
  2446  0006A2  0D06               	mullw	6
  2447  0006A4  0E02               	movlw	2
  2448  0006A6  26F3               	addwf	prodl,f,c
  2449  0006A8  0E00               	movlw	0
  2450  0006AA  22F4               	addwfc	prodh,f,c
  2451  0006AC  0E00               	movlw	low _pin
  2452  0006AE  24F3               	addwf	prodl,w,c
  2453  0006B0  6ED9               	movwf	fsr2l,c
  2454  0006B2  0E01               	movlw	high _pin
  2455  0006B4  20F4               	addwfc	prodh,w,c
  2456  0006B6  6EDA               	movwf	fsr2h,c
  2457  0006B8  50DF               	movf	indf2,w,c
  2458  0006BA  ECDF  F009         	call	_Read_Data
  2459  0006BE  0100               	movlb	0	; () banked
  2460  0006C0  5179               	movf	_pin_selected& (0+255),w,b
  2461  0006C2  0D06               	mullw	6
  2462  0006C4  0E04               	movlw	4
  2463  0006C6  26F3               	addwf	prodl,f,c
  2464  0006C8  0E00               	movlw	0
  2465  0006CA  22F4               	addwfc	prodh,f,c
  2466  0006CC  0E00               	movlw	low _pin
  2467  0006CE  24F3               	addwf	prodl,w,c
  2468  0006D0  6ED9               	movwf	fsr2l,c
  2469  0006D2  0E01               	movlw	high _pin
  2470  0006D4  20F4               	addwfc	prodh,w,c
  2471  0006D6  6EDA               	movwf	fsr2h,c
  2472  0006D8  0100               	movlb	0	; () banked
  2473  0006DA  C060  FFDE         	movff	?_Read_Data,postinc2
  2474  0006DE  0100               	movlb	0	; () banked
  2475  0006E0  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2476                           
  2477                           ; BSR set to: 0
  2478                           ;buttonchanges.c: 142: __nop();
  2479  0006E4  F000               	nop	
  2480                           
  2481                           ;buttonchanges.c: 143: Set_Display('7', 'E', pin[pin_selected].slave);
  2482  0006E6  0E45               	movlw	69
  2483  0006E8  0100               	movlb	0	; () banked
  2484  0006EA  6F70               	movwf	Set_Display@information& (0+255),b
  2485  0006EC  0100               	movlb	0	; () banked
  2486  0006EE  5179               	movf	_pin_selected& (0+255),w,b
  2487  0006F0  0D06               	mullw	6
  2488  0006F2  0E00               	movlw	low _pin
  2489  0006F4  24F3               	addwf	prodl,w,c
  2490  0006F6  6ED9               	movwf	fsr2l,c
  2491  0006F8  0E01               	movlw	high _pin
  2492  0006FA  20F4               	addwfc	prodh,w,c
  2493  0006FC  6EDA               	movwf	fsr2h,c
  2494  0006FE  50DF               	movf	indf2,w,c
  2495  000700  0100               	movlb	0	; () banked
  2496  000702  6F77               	movwf	??_Check_Buttons& (0+255),b
  2497  000704  0100               	movlb	0	; () banked
  2498  000706  5177               	movf	??_Check_Buttons& (0+255),w,b
  2499  000708  0100               	movlb	0	; () banked
  2500  00070A  6F71               	movwf	Set_Display@value& (0+255),b
  2501  00070C  6B72               	clrf	(Set_Display@value+1)& (0+255),b
  2502  00070E  0E37               	movlw	55
  2503  000710  ECF5  F008         	call	_Set_Display
  2504                           
  2505                           ;buttonchanges.c: 145: Delay_Routine(30);
  2506  000714  0E1E               	movlw	30
  2507  000716  EC1A  F00B         	call	_Delay_Routine
  2508                           
  2509                           ;buttonchanges.c: 146: Set_Display('7', 'A', pin[pin_selected].output);
  2510  00071A  0E41               	movlw	65
  2511  00071C  0100               	movlb	0	; () banked
  2512  00071E  6F70               	movwf	Set_Display@information& (0+255),b
  2513  000720  0100               	movlb	0	; () banked
  2514  000722  5179               	movf	_pin_selected& (0+255),w,b
  2515  000724  0D06               	mullw	6
  2516  000726  0E01               	movlw	1
  2517  000728  26F3               	addwf	prodl,f,c
  2518  00072A  0E00               	movlw	0
  2519  00072C  22F4               	addwfc	prodh,f,c
  2520  00072E  0E00               	movlw	low _pin
  2521  000730  24F3               	addwf	prodl,w,c
  2522  000732  6ED9               	movwf	fsr2l,c
  2523  000734  0E01               	movlw	high _pin
  2524  000736  20F4               	addwfc	prodh,w,c
  2525  000738  6EDA               	movwf	fsr2h,c
  2526  00073A  50DF               	movf	indf2,w,c
  2527  00073C  0100               	movlb	0	; () banked
  2528  00073E  6F77               	movwf	??_Check_Buttons& (0+255),b
  2529  000740  0100               	movlb	0	; () banked
  2530  000742  5177               	movf	??_Check_Buttons& (0+255),w,b
  2531  000744  0100               	movlb	0	; () banked
  2532  000746  6F71               	movwf	Set_Display@value& (0+255),b
  2533  000748  6B72               	clrf	(Set_Display@value+1)& (0+255),b
  2534  00074A  0E37               	movlw	55
  2535  00074C  ECF5  F008         	call	_Set_Display
  2536                           
  2537                           ;buttonchanges.c: 147: Delay_Routine(30);
  2538  000750  0E1E               	movlw	30
  2539  000752  EC1A  F00B         	call	_Delay_Routine
  2540                           
  2541                           ;buttonchanges.c: 148: Set_Display('7', '-', pin[pin_selected].time);
  2542  000756  0E2D               	movlw	45
  2543  000758  0100               	movlb	0	; () banked
  2544  00075A  6F70               	movwf	Set_Display@information& (0+255),b
  2545  00075C  0100               	movlb	0	; () banked
  2546  00075E  5179               	movf	_pin_selected& (0+255),w,b
  2547  000760  0D06               	mullw	6
  2548  000762  0E04               	movlw	4
  2549  000764  26F3               	addwf	prodl,f,c
  2550  000766  0E00               	movlw	0
  2551  000768  22F4               	addwfc	prodh,f,c
  2552  00076A  0E00               	movlw	low _pin
  2553  00076C  24F3               	addwf	prodl,w,c
  2554  00076E  6ED9               	movwf	fsr2l,c
  2555  000770  0E01               	movlw	high _pin
  2556  000772  20F4               	addwfc	prodh,w,c
  2557  000774  6EDA               	movwf	fsr2h,c
  2558  000776  CFDE F071          	movff	postinc2,Set_Display@value
  2559  00077A  CFDD F072          	movff	postdec2,Set_Display@value+1
  2560  00077E  0E37               	movlw	55
  2561  000780  ECF5  F008         	call	_Set_Display
  2562                           
  2563                           ;buttonchanges.c: 149: Delay_Routine(30);
  2564  000784  0E1E               	movlw	30
  2565  000786  EC1A  F00B         	call	_Delay_Routine
  2566                           
  2567                           ;buttonchanges.c: 150: __nop();
  2568  00078A  F000               	nop	
  2569  00078C  0012               	return	
  2570  00078E                     __end_of_Check_Buttons:
  2571                           	opt stack 0
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           prodh	equ	0xFF4
  2577                           prodl	equ	0xFF3
  2578                           intcon	equ	0xFF2
  2579                           postinc0	equ	0xFEE
  2580                           wreg	equ	0xFE8
  2581                           postdec1	equ	0xFE5
  2582                           fsr1l	equ	0xFE1
  2583                           indf2	equ	0xFDF
  2584                           postinc2	equ	0xFDE
  2585                           postdec2	equ	0xFDD
  2586                           plusw2	equ	0xFDB
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _Start_Timer *****************
  2592 ;; Defined at:
  2593 ;;		line 12 in file "ignition.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;		None               void
  2600 ;; Registers used:
  2601 ;;		wreg, status,2
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1
  2607 ;;      Params:         0       0       0
  2608 ;;      Locals:         0       0       0
  2609 ;;      Temps:          0       0       0
  2610 ;;      Totals:         0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    5
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_Check_Buttons
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text12
  2622  0016D4                     __ptext12:
  2623                           	opt stack 0
  2624  0016D4                     _Start_Timer:
  2625                           	opt stack 24
  2626                           
  2627                           ;ignition.c: 13: if(ignite_ready == 1) {
  2628                           
  2629                           ;incstack = 0
  2630  0016D4  A03B               	btfss	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  2631  0016D6  0012               	return	
  2632                           
  2633                           ;ignition.c: 14: TMR1L = 0;
  2634  0016D8  0E00               	movlw	0
  2635  0016DA  6ECE               	movwf	4046,c	;volatile
  2636                           
  2637                           ;ignition.c: 15: TMR1H = 0;
  2638  0016DC  0E00               	movlw	0
  2639  0016DE  6ECF               	movwf	4047,c	;volatile
  2640                           
  2641                           ;ignition.c: 16: TMR3L = 0;
  2642  0016E0  0E00               	movlw	0
  2643  0016E2  6EB2               	movwf	4018,c	;volatile
  2644                           
  2645                           ;ignition.c: 17: TMR3H = 0;
  2646  0016E4  0E00               	movlw	0
  2647  0016E6  6EB3               	movwf	4019,c	;volatile
  2648                           
  2649                           ;ignition.c: 18: PIR1bits.TMR1IF = 0;
  2650  0016E8  909E               	bcf	3998,0,c	;volatile
  2651                           
  2652                           ;ignition.c: 19: PIR2bits.TMR3IF = 0;
  2653  0016EA  92A1               	bcf	4001,1,c	;volatile
  2654                           
  2655                           ;ignition.c: 20: T1CONbits.TMR1ON = 1;
  2656  0016EC  80CD               	bsf	4045,0,c	;volatile
  2657  0016EE  0012               	return	
  2658  0016F0                     __end_of_Start_Timer:
  2659                           	opt stack 0
  2660                           tblptru	equ	0xFF8
  2661                           tblptrh	equ	0xFF7
  2662                           tblptrl	equ	0xFF6
  2663                           tablat	equ	0xFF5
  2664                           prodh	equ	0xFF4
  2665                           prodl	equ	0xFF3
  2666                           intcon	equ	0xFF2
  2667                           postinc0	equ	0xFEE
  2668                           wreg	equ	0xFE8
  2669                           postdec1	equ	0xFE5
  2670                           fsr1l	equ	0xFE1
  2671                           indf2	equ	0xFDF
  2672                           postinc2	equ	0xFDE
  2673                           postdec2	equ	0xFDD
  2674                           plusw2	equ	0xFDB
  2675                           fsr2h	equ	0xFDA
  2676                           fsr2l	equ	0xFD9
  2677                           status	equ	0xFD8
  2678                           
  2679 ;; *************** function _Del_Data *****************
  2680 ;; Defined at:
  2681 ;;		line 85 in file "storage.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  counter         1   22[BANK0 ] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;		None               void
  2688 ;; Registers used:
  2689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1
  2695 ;;      Params:         0       0       0
  2696 ;;      Locals:         0       1       0
  2697 ;;      Temps:          0       0       0
  2698 ;;      Totals:         0       1       0
  2699 ;;Total ram usage:        1 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:   10
  2702 ;; This function calls:
  2703 ;;		_Delay_Routine
  2704 ;;		_Evaluate_Display
  2705 ;;		_Load_Data
  2706 ;;		_Save_Data
  2707 ;; This function is called by:
  2708 ;;		_Check_Buttons
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text13
  2713  001454                     __ptext13:
  2714                           	opt stack 0
  2715  001454                     _Del_Data:
  2716                           	opt stack 19
  2717                           
  2718                           ;storage.c: 86: Evaluate_Display(3, "DEL");
  2719                           
  2720                           ;incstack = 0
  2721  001454  0E6A               	movlw	low STR_2
  2722  001456  0100               	movlb	0	; () banked
  2723  001458  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  2724  00145A  0E02               	movlw	high STR_2
  2725  00145C  0100               	movlb	0	; () banked
  2726  00145E  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  2727  001460  0E03               	movlw	3
  2728  001462  ECC7  F003         	call	_Evaluate_Display
  2729                           
  2730                           ;storage.c: 87: Delay_Routine(3);
  2731  001466  0E03               	movlw	3
  2732  001468  EC1A  F00B         	call	_Delay_Routine
  2733                           
  2734                           ;storage.c: 88: for(unsigned char counter = 0; counter < 30; counter++) {
  2735  00146C  0E00               	movlw	0
  2736  00146E  0100               	movlb	0	; () banked
  2737  001470  6F76               	movwf	Del_Data@counter& (0+255),b
  2738  001472                     l2982:
  2739                           
  2740                           ; BSR set to: 0
  2741  001472  0E1D               	movlw	29
  2742  001474  0100               	movlb	0	; () banked
  2743  001476  6576               	cpfsgt	Del_Data@counter& (0+255),b
  2744  001478  D001               	goto	l2986
  2745  00147A  D00C               	goto	l2992
  2746  00147C                     l2986:
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;storage.c: 89: Save_Data(0, counter);
  2750  00147C  0E00               	movlw	0
  2751  00147E  0100               	movlb	0	; () banked
  2752  001480  6F61               	movwf	(Save_Data@store+1)& (0+255),b
  2753  001482  0E00               	movlw	0
  2754  001484  6F60               	movwf	Save_Data@store& (0+255),b
  2755  001486  C076  F062         	movff	Del_Data@counter,Save_Data@store_address
  2756  00148A  ECB5  F009         	call	_Save_Data	;wreg free
  2757  00148E  0100               	movlb	0	; () banked
  2758  001490  2B76               	incf	Del_Data@counter& (0+255),f,b
  2759  001492  D7EF               	goto	l2982
  2760  001494                     l2992:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;storage.c: 90: }
  2764                           ;storage.c: 91: Load_Data();
  2765  001494  EC5B  F006         	call	_Load_Data	;wreg free
  2766  001498  0012               	return		;funcret
  2767  00149A                     __end_of_Del_Data:
  2768                           	opt stack 0
  2769                           tblptru	equ	0xFF8
  2770                           tblptrh	equ	0xFF7
  2771                           tblptrl	equ	0xFF6
  2772                           tablat	equ	0xFF5
  2773                           prodh	equ	0xFF4
  2774                           prodl	equ	0xFF3
  2775                           intcon	equ	0xFF2
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           postdec1	equ	0xFE5
  2779                           fsr1l	equ	0xFE1
  2780                           indf2	equ	0xFDF
  2781                           postinc2	equ	0xFDE
  2782                           postdec2	equ	0xFDD
  2783                           plusw2	equ	0xFDB
  2784                           fsr2h	equ	0xFDA
  2785                           fsr2l	equ	0xFD9
  2786                           status	equ	0xFD8
  2787                           
  2788 ;; *************** function _Save_Data *****************
  2789 ;; Defined at:
  2790 ;;		line 8 in file "storage.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  store           2    0[BANK0 ] unsigned int 
  2793 ;;  store_addres    1    2[BANK0 ] unsigned char 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;		None
  2796 ;; Return value:  Size  Location     Type
  2797 ;;		None               void
  2798 ;; Registers used:
  2799 ;;		wreg, status,2, status,0
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1
  2805 ;;      Params:         0       3       0
  2806 ;;      Locals:         0       0       0
  2807 ;;      Temps:          0       0       0
  2808 ;;      Totals:         0       3       0
  2809 ;;Total ram usage:        3 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    5
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_Check_Buttons
  2816 ;;		_Del_Data
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           	psect	text14
  2821  00136A                     __ptext14:
  2822                           	opt stack 0
  2823  00136A                     _Save_Data:
  2824                           	opt stack 24
  2825                           
  2826                           ;storage.c: 10: EEADR = store_address;
  2827                           
  2828                           ;incstack = 0
  2829  00136A  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2830                           
  2831                           ;storage.c: 11: EEDATA = store;
  2832  00136E  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2833                           
  2834                           ;storage.c: 12: EECON1bits.EEPGD = 0;
  2835  001372  9EA6               	bcf	4006,7,c	;volatile
  2836                           
  2837                           ;storage.c: 13: EECON1bits.CFGS = 0;
  2838  001374  9CA6               	bcf	4006,6,c	;volatile
  2839                           
  2840                           ;storage.c: 14: INTCONbits.GIE = 0;
  2841  001376  9EF2               	bcf	intcon,7,c	;volatile
  2842                           
  2843                           ;storage.c: 15: EECON1bits.WREN = 1;
  2844  001378  84A6               	bsf	4006,2,c	;volatile
  2845                           
  2846                           ;storage.c: 16: EECON2 = 0x55;
  2847  00137A  0E55               	movlw	85
  2848  00137C  6EA7               	movwf	4007,c	;volatile
  2849                           
  2850                           ;storage.c: 17: EECON2 = 0xAA;
  2851  00137E  0EAA               	movlw	170
  2852  001380  6EA7               	movwf	4007,c	;volatile
  2853                           
  2854                           ;storage.c: 18: EECON1bits.WR = 1;
  2855  001382  82A6               	bsf	4006,1,c	;volatile
  2856  001384                     l339:
  2857  001384  A8A1               	btfss	4001,4,c	;volatile
  2858  001386  D7FE               	goto	l339
  2859                           
  2860                           ;storage.c: 20: PIR2bits.EEIF = 0;
  2861  001388  98A1               	bcf	4001,4,c	;volatile
  2862                           
  2863                           ;storage.c: 21: store >>= 8;
  2864  00138A  0100               	movlb	0	; () banked
  2865  00138C  5161               	movf	(Save_Data@store+1)& (0+255),w,b
  2866  00138E  6F60               	movwf	Save_Data@store& (0+255),b
  2867  001390  6B61               	clrf	(Save_Data@store+1)& (0+255),b
  2868                           
  2869                           ; BSR set to: 0
  2870                           ;storage.c: 22: store_address += 50;
  2871  001392  0E32               	movlw	50
  2872  001394  0100               	movlb	0	; () banked
  2873  001396  2762               	addwf	Save_Data@store_address& (0+255),f,b
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;storage.c: 23: EEADR = store_address;
  2877  001398  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;storage.c: 24: EEDATA = store;
  2881  00139C  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;storage.c: 25: EECON1bits.EEPGD = 0;
  2885  0013A0  9EA6               	bcf	4006,7,c	;volatile
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;storage.c: 26: EECON1bits.CFGS = 0;
  2889  0013A2  9CA6               	bcf	4006,6,c	;volatile
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;storage.c: 27: EECON1bits.WREN = 1;
  2893  0013A4  84A6               	bsf	4006,2,c	;volatile
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;storage.c: 28: INTCONbits.GIE = 0;
  2897  0013A6  9EF2               	bcf	intcon,7,c	;volatile
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;storage.c: 29: EECON2 = 0x55;
  2901  0013A8  0E55               	movlw	85
  2902  0013AA  6EA7               	movwf	4007,c	;volatile
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;storage.c: 30: EECON2 = 0xAA;
  2906  0013AC  0EAA               	movlw	170
  2907  0013AE  6EA7               	movwf	4007,c	;volatile
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;storage.c: 31: EECON1bits.WR = 1;
  2911  0013B0  82A6               	bsf	4006,1,c	;volatile
  2912  0013B2                     l342:
  2913  0013B2  A8A1               	btfss	4001,4,c	;volatile
  2914  0013B4  D7FE               	goto	l342
  2915                           
  2916                           ;storage.c: 33: PIR2bits.EEIF = 0;
  2917  0013B6  98A1               	bcf	4001,4,c	;volatile
  2918                           
  2919                           ;storage.c: 34: EECON1bits.WREN = 0;
  2920  0013B8  94A6               	bcf	4006,2,c	;volatile
  2921                           
  2922                           ;storage.c: 35: INTCONbits.GIE = 1;
  2923  0013BA  8EF2               	bsf	intcon,7,c	;volatile
  2924  0013BC  0012               	return		;funcret
  2925  0013BE                     __end_of_Save_Data:
  2926                           	opt stack 0
  2927                           tblptru	equ	0xFF8
  2928                           tblptrh	equ	0xFF7
  2929                           tblptrl	equ	0xFF6
  2930                           tablat	equ	0xFF5
  2931                           prodh	equ	0xFF4
  2932                           prodl	equ	0xFF3
  2933                           intcon	equ	0xFF2
  2934                           postinc0	equ	0xFEE
  2935                           wreg	equ	0xFE8
  2936                           postdec1	equ	0xFE5
  2937                           fsr1l	equ	0xFE1
  2938                           indf2	equ	0xFDF
  2939                           postinc2	equ	0xFDE
  2940                           postdec2	equ	0xFDD
  2941                           plusw2	equ	0xFDB
  2942                           fsr2h	equ	0xFDA
  2943                           fsr2l	equ	0xFD9
  2944                           status	equ	0xFD8
  2945                           
  2946 ;; *************** function _Load_Data *****************
  2947 ;; Defined at:
  2948 ;;		line 65 in file "storage.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;		None
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  counter         1   21[BANK0 ] unsigned char 
  2953 ;; Return value:  Size  Location     Type
  2954 ;;		None               void
  2955 ;; Registers used:
  2956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMRAM   BANK0   BANK1
  2962 ;;      Params:         0       0       0
  2963 ;;      Locals:         0       1       0
  2964 ;;      Temps:          0       1       0
  2965 ;;      Totals:         0       2       0
  2966 ;;Total ram usage:        2 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    9
  2969 ;; This function calls:
  2970 ;;		_Delay_Routine
  2971 ;;		_Evaluate_Display
  2972 ;;		_Read_Data
  2973 ;;		_Set_Display
  2974 ;; This function is called by:
  2975 ;;		_main
  2976 ;;		_Del_Data
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           	psect	text15
  2981  000CB6                     __ptext15:
  2982                           	opt stack 0
  2983  000CB6                     _Load_Data:
  2984                           	opt stack 21
  2985                           
  2986                           ;storage.c: 66: Evaluate_Display(3, "LOA");
  2987                           
  2988                           ;incstack = 0
  2989  000CB6  0E66               	movlw	low STR_1
  2990  000CB8  0100               	movlb	0	; () banked
  2991  000CBA  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  2992  000CBC  0E02               	movlw	high STR_1
  2993  000CBE  0100               	movlb	0	; () banked
  2994  000CC0  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  2995  000CC2  0E03               	movlw	3
  2996  000CC4  ECC7  F003         	call	_Evaluate_Display
  2997                           
  2998                           ;storage.c: 67: Delay_Routine(3);
  2999  000CC8  0E03               	movlw	3
  3000  000CCA  EC1A  F00B         	call	_Delay_Routine
  3001                           
  3002                           ;storage.c: 68: for(unsigned char counter = 0; counter < 30; counter++) {
  3003  000CCE  0E00               	movlw	0
  3004  000CD0  0100               	movlb	0	; () banked
  3005  000CD2  6F75               	movwf	Load_Data@counter& (0+255),b
  3006  000CD4                     l2914:
  3007                           
  3008                           ; BSR set to: 0
  3009  000CD4  0E1D               	movlw	29
  3010  000CD6  0100               	movlb	0	; () banked
  3011  000CD8  6575               	cpfsgt	Load_Data@counter& (0+255),b
  3012  000CDA  D001               	goto	l2918
  3013  000CDC  D01A               	goto	l2924
  3014  000CDE                     l2918:
  3015                           
  3016                           ; BSR set to: 0
  3017                           ;storage.c: 69: pin[counter].time = Read_Data(counter);
  3018  000CDE  0100               	movlb	0	; () banked
  3019  000CE0  5175               	movf	Load_Data@counter& (0+255),w,b
  3020  000CE2  ECDF  F009         	call	_Read_Data
  3021  000CE6  0100               	movlb	0	; () banked
  3022  000CE8  5175               	movf	Load_Data@counter& (0+255),w,b
  3023  000CEA  0D06               	mullw	6
  3024  000CEC  0E04               	movlw	4
  3025  000CEE  26F3               	addwf	prodl,f,c
  3026  000CF0  0E00               	movlw	0
  3027  000CF2  22F4               	addwfc	prodh,f,c
  3028  000CF4  0E00               	movlw	low _pin
  3029  000CF6  24F3               	addwf	prodl,w,c
  3030  000CF8  6ED9               	movwf	fsr2l,c
  3031  000CFA  0E01               	movlw	high _pin
  3032  000CFC  20F4               	addwfc	prodh,w,c
  3033  000CFE  6EDA               	movwf	fsr2h,c
  3034  000D00  0100               	movlb	0	; () banked
  3035  000D02  C060  FFDE         	movff	?_Read_Data,postinc2
  3036  000D06  0100               	movlb	0	; () banked
  3037  000D08  C061  FFDD         	movff	?_Read_Data+1,postdec2
  3038                           
  3039                           ; BSR set to: 0
  3040  000D0C  0100               	movlb	0	; () banked
  3041  000D0E  2B75               	incf	Load_Data@counter& (0+255),f,b
  3042  000D10  D7E1               	goto	l2914
  3043  000D12                     l2924:
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;storage.c: 70: }
  3047                           ;storage.c: 71: slave_selected = 0;
  3048  000D12  0E00               	movlw	0
  3049  000D14  0100               	movlb	0	; () banked
  3050  000D16  6F7A               	movwf	_slave_selected& (0+255),b
  3051                           
  3052                           ;storage.c: 72: pin_selected = 0;
  3053  000D18  0E00               	movlw	0
  3054  000D1A  0100               	movlb	0	; () banked
  3055  000D1C  6F79               	movwf	_pin_selected& (0+255),b
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;storage.c: 73: Set_Display('7', 'E', pin[pin_selected].slave);
  3059  000D1E  0E45               	movlw	69
  3060  000D20  0100               	movlb	0	; () banked
  3061  000D22  6F70               	movwf	Set_Display@information& (0+255),b
  3062  000D24  0100               	movlb	0	; () banked
  3063  000D26  5179               	movf	_pin_selected& (0+255),w,b
  3064  000D28  0D06               	mullw	6
  3065  000D2A  0E00               	movlw	low _pin
  3066  000D2C  24F3               	addwf	prodl,w,c
  3067  000D2E  6ED9               	movwf	fsr2l,c
  3068  000D30  0E01               	movlw	high _pin
  3069  000D32  20F4               	addwfc	prodh,w,c
  3070  000D34  6EDA               	movwf	fsr2h,c
  3071  000D36  50DF               	movf	indf2,w,c
  3072  000D38  0100               	movlb	0	; () banked
  3073  000D3A  6F74               	movwf	??_Load_Data& (0+255),b
  3074  000D3C  0100               	movlb	0	; () banked
  3075  000D3E  5174               	movf	??_Load_Data& (0+255),w,b
  3076  000D40  0100               	movlb	0	; () banked
  3077  000D42  6F71               	movwf	Set_Display@value& (0+255),b
  3078  000D44  6B72               	clrf	(Set_Display@value+1)& (0+255),b
  3079  000D46  0E37               	movlw	55
  3080  000D48  ECF5  F008         	call	_Set_Display
  3081                           
  3082                           ;storage.c: 75: Delay_Routine(20);
  3083  000D4C  0E14               	movlw	20
  3084  000D4E  EC1A  F00B         	call	_Delay_Routine
  3085                           
  3086                           ;storage.c: 76: Set_Display('7', 'A', pin[pin_selected].output);
  3087  000D52  0E41               	movlw	65
  3088  000D54  0100               	movlb	0	; () banked
  3089  000D56  6F70               	movwf	Set_Display@information& (0+255),b
  3090  000D58  0100               	movlb	0	; () banked
  3091  000D5A  5179               	movf	_pin_selected& (0+255),w,b
  3092  000D5C  0D06               	mullw	6
  3093  000D5E  0E01               	movlw	1
  3094  000D60  26F3               	addwf	prodl,f,c
  3095  000D62  0E00               	movlw	0
  3096  000D64  22F4               	addwfc	prodh,f,c
  3097  000D66  0E00               	movlw	low _pin
  3098  000D68  24F3               	addwf	prodl,w,c
  3099  000D6A  6ED9               	movwf	fsr2l,c
  3100  000D6C  0E01               	movlw	high _pin
  3101  000D6E  20F4               	addwfc	prodh,w,c
  3102  000D70  6EDA               	movwf	fsr2h,c
  3103  000D72  50DF               	movf	indf2,w,c
  3104  000D74  0100               	movlb	0	; () banked
  3105  000D76  6F74               	movwf	??_Load_Data& (0+255),b
  3106  000D78  0100               	movlb	0	; () banked
  3107  000D7A  5174               	movf	??_Load_Data& (0+255),w,b
  3108  000D7C  0100               	movlb	0	; () banked
  3109  000D7E  6F71               	movwf	Set_Display@value& (0+255),b
  3110  000D80  6B72               	clrf	(Set_Display@value+1)& (0+255),b
  3111  000D82  0E37               	movlw	55
  3112  000D84  ECF5  F008         	call	_Set_Display
  3113                           
  3114                           ;storage.c: 77: Delay_Routine(20);
  3115  000D88  0E14               	movlw	20
  3116  000D8A  EC1A  F00B         	call	_Delay_Routine
  3117                           
  3118                           ;storage.c: 78: Set_Display('7', '-', pin[pin_selected].time);
  3119  000D8E  0E2D               	movlw	45
  3120  000D90  0100               	movlb	0	; () banked
  3121  000D92  6F70               	movwf	Set_Display@information& (0+255),b
  3122  000D94  0100               	movlb	0	; () banked
  3123  000D96  5179               	movf	_pin_selected& (0+255),w,b
  3124  000D98  0D06               	mullw	6
  3125  000D9A  0E04               	movlw	4
  3126  000D9C  26F3               	addwf	prodl,f,c
  3127  000D9E  0E00               	movlw	0
  3128  000DA0  22F4               	addwfc	prodh,f,c
  3129  000DA2  0E00               	movlw	low _pin
  3130  000DA4  24F3               	addwf	prodl,w,c
  3131  000DA6  6ED9               	movwf	fsr2l,c
  3132  000DA8  0E01               	movlw	high _pin
  3133  000DAA  20F4               	addwfc	prodh,w,c
  3134  000DAC  6EDA               	movwf	fsr2h,c
  3135  000DAE  CFDE F071          	movff	postinc2,Set_Display@value
  3136  000DB2  CFDD F072          	movff	postdec2,Set_Display@value+1
  3137  000DB6  0E37               	movlw	55
  3138  000DB8  ECF5  F008         	call	_Set_Display
  3139                           
  3140                           ;storage.c: 79: Delay_Routine(20);
  3141  000DBC  0E14               	movlw	20
  3142  000DBE  EC1A  F00B         	call	_Delay_Routine
  3143  000DC2  0012               	return		;funcret
  3144  000DC4                     __end_of_Load_Data:
  3145                           	opt stack 0
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           prodh	equ	0xFF4
  3151                           prodl	equ	0xFF3
  3152                           intcon	equ	0xFF2
  3153                           postinc0	equ	0xFEE
  3154                           wreg	equ	0xFE8
  3155                           postdec1	equ	0xFE5
  3156                           fsr1l	equ	0xFE1
  3157                           indf2	equ	0xFDF
  3158                           postinc2	equ	0xFDE
  3159                           postdec2	equ	0xFDD
  3160                           plusw2	equ	0xFDB
  3161                           fsr2h	equ	0xFDA
  3162                           fsr2l	equ	0xFD9
  3163                           status	equ	0xFD8
  3164                           
  3165 ;; *************** function _Set_Display *****************
  3166 ;; Defined at:
  3167 ;;		line 138 in file "display.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  type            1    wreg     unsigned char 
  3170 ;;  information     1   16[BANK0 ] unsigned char 
  3171 ;;  value           2   17[BANK0 ] unsigned int 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  type            1   19[BANK0 ] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;		None               void
  3176 ;; Registers used:
  3177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1
  3183 ;;      Params:         0       3       0
  3184 ;;      Locals:         0       1       0
  3185 ;;      Temps:          0       0       0
  3186 ;;      Totals:         0       4       0
  3187 ;;Total ram usage:        4 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; Hardware stack levels required when called:    8
  3190 ;; This function calls:
  3191 ;;		_Evaluate_Display
  3192 ;;		_Evaluate_Signs
  3193 ;;		_Write_Display_Byte
  3194 ;; This function is called by:
  3195 ;;		_main
  3196 ;;		_Check_Buttons
  3197 ;;		_Load_Data
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text16
  3202  0011EA                     __ptext16:
  3203                           	opt stack 0
  3204  0011EA                     _Set_Display:
  3205                           	opt stack 22
  3206                           
  3207                           ;incstack = 0
  3208                           ;Set_Display@type stored from wreg
  3209  0011EA  0100               	movlb	0	; () banked
  3210  0011EC  6F73               	movwf	Set_Display@type& (0+255),b
  3211                           
  3212                           ;display.c: 140: switch (type) {
  3213  0011EE  D020               	goto	l2872
  3214  0011F0                     l2856:
  3215                           
  3216                           ;display.c: 142: if(information != '-') {
  3217  0011F0  0E2D               	movlw	45
  3218  0011F2  0100               	movlb	0	; () banked
  3219  0011F4  1970               	xorwf	Set_Display@information& (0+255),w,b
  3220  0011F6  B4D8               	btfsc	status,2,c
  3221  0011F8  D014               	goto	l2868
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;display.c: 143: signs[0] = value;
  3225  0011FA  C071  F07B         	movff	Set_Display@value,_signs
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;display.c: 144: signs[0] += 0x30;
  3229  0011FE  0E30               	movlw	48
  3230  001200  0100               	movlb	0	; () banked
  3231  001202  277B               	addwf	_signs& (0+255),f,b
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;display.c: 145: signs[1] = '-';
  3235  001204  0E2D               	movlw	45
  3236  001206  0100               	movlb	0	; () banked
  3237  001208  6F7C               	movwf	(_signs+1)& (0+255),b
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;display.c: 146: signs[2] = information;
  3241  00120A  C070  F07D         	movff	Set_Display@information,_signs+2
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;display.c: 147: Evaluate_Display(sizeof(signs), signs);
  3245  00120E  0E7B               	movlw	low _signs
  3246  001210  0100               	movlb	0	; () banked
  3247  001212  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3248  001214  0E00               	movlw	high _signs
  3249  001216  0100               	movlb	0	; () banked
  3250  001218  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3251  00121A  0E03               	movlw	3
  3252  00121C  ECC7  F003         	call	_Evaluate_Display
  3253                           
  3254                           ;display.c: 148: } else {
  3255  001220  D00D               	goto	l2874
  3256  001222                     l2868:
  3257                           
  3258                           ;display.c: 149: Evaluate_Signs(value);
  3259  001222  C071  F06D         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  3260  001226  C072  F06E         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  3261  00122A  EC50  F008         	call	_Evaluate_Signs	;wreg free
  3262                           
  3263                           ;display.c: 155: }
  3264                           
  3265                           ;display.c: 154: break;
  3266                           
  3267                           ;display.c: 152: case 'L':
  3268                           
  3269                           ;display.c: 150: }
  3270                           ;display.c: 151: break;
  3271  00122E  D006               	goto	l2874
  3272  001230                     l2872:
  3273  001230  0100               	movlb	0	; () banked
  3274  001232  5173               	movf	Set_Display@type& (0+255),w,b
  3275                           
  3276                           ; Switch size 1, requested type "space"
  3277                           ; Number of cases is 2, Range of values is 55 to 76
  3278                           ; switch strategies available:
  3279                           ; Name         Instructions Cycles
  3280                           ; simple_byte            7     4 (average)
  3281                           ;	Chosen strategy is simple_byte
  3282  001234  0A37               	xorlw	55	; case 55
  3283  001236  B4D8               	btfsc	status,2,c
  3284  001238  D7DB               	goto	l2856
  3285  00123A  0A7B               	xorlw	123	; case 76
  3286  00123C                     l2874:
  3287                           
  3288                           ;display.c: 156: Write_Display_Byte(pixels);
  3289  00123C  0E34               	movlw	low _pixels
  3290  00123E  0100               	movlb	0	; () banked
  3291  001240  6F60               	movwf	Write_Display_Byte@write_data& (0+255),b
  3292  001242  0E00               	movlw	high _pixels
  3293  001244  0100               	movlb	0	; () banked
  3294  001246  6F61               	movwf	(Write_Display_Byte@write_data+1)& (0+255),b
  3295  001248  ECC2  F008         	call	_Write_Display_Byte	;wreg free
  3296  00124C  0012               	return		;funcret
  3297  00124E                     __end_of_Set_Display:
  3298                           	opt stack 0
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           prodh	equ	0xFF4
  3304                           prodl	equ	0xFF3
  3305                           intcon	equ	0xFF2
  3306                           postinc0	equ	0xFEE
  3307                           wreg	equ	0xFE8
  3308                           postdec1	equ	0xFE5
  3309                           fsr1l	equ	0xFE1
  3310                           indf2	equ	0xFDF
  3311                           postinc2	equ	0xFDE
  3312                           postdec2	equ	0xFDD
  3313                           plusw2	equ	0xFDB
  3314                           fsr2h	equ	0xFDA
  3315                           fsr2l	equ	0xFD9
  3316                           status	equ	0xFD8
  3317                           
  3318 ;; *************** function _Write_Display_Byte *****************
  3319 ;; Defined at:
  3320 ;;		line 46 in file "communication.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  write_data      2    0[BANK0 ] PTR unsigned char 
  3323 ;;		 -> pixels(7), 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  counter         1    6[BANK0 ] unsigned char 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;		None               void
  3328 ;; Registers used:
  3329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK1
  3335 ;;      Params:         0       2       0
  3336 ;;      Locals:         0       1       0
  3337 ;;      Temps:          0       4       0
  3338 ;;      Totals:         0       7       0
  3339 ;;Total ram usage:        7 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    5
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_Set_Display
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text17
  3350  001184                     __ptext17:
  3351                           	opt stack 0
  3352  001184                     _Write_Display_Byte:
  3353                           	opt stack 24
  3354                           
  3355                           ;communication.c: 47: for(unsigned char counter = sizeof(pixels); counter > 0;
  3356                           
  3357                           ;incstack = 0
  3358  001184  0E07               	movlw	7
  3359  001186  0100               	movlb	0	; () banked
  3360  001188  6F66               	movwf	Write_Display_Byte@counter& (0+255),b
  3361  00118A                     
  3362                           ;communication.c: 48: counter--) {
  3363  00118A  0100               	movlb	0	; () banked
  3364  00118C  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3365  00118E  0100               	movlb	0	; () banked
  3366  001190  B4D8               	btfsc	status,2,c
  3367  001192  0012               	return	
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;communication.c: 49: if(SSP1IF = 1) {
  3371                           
  3372                           ; BSR set to: 0
  3373  001194  869E               	bsf	3998,3,c	;volatile
  3374  001196  B69E               	btfsc	3998,3,c	;volatile
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;communication.c: 50: SSP1IF = 0;
  3378  001198  969E               	bcf	3998,3,c	;volatile
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;communication.c: 51: }
  3382                           ;communication.c: 52: SSP1BUF = write_data[counter - 1];
  3383                           
  3384                           ; BSR set to: 0
  3385  00119A  0EFF               	movlw	255
  3386  00119C  0100               	movlb	0	; () banked
  3387  00119E  6F62               	movwf	??_Write_Display_Byte& (0+255),b
  3388  0011A0  0EFF               	movlw	255
  3389  0011A2  0100               	movlb	0	; () banked
  3390  0011A4  6F63               	movwf	(??_Write_Display_Byte+1)& (0+255),b
  3391  0011A6  0100               	movlb	0	; () banked
  3392  0011A8  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3393  0011AA  0100               	movlb	0	; () banked
  3394  0011AC  6F64               	movwf	(??_Write_Display_Byte+2)& (0+255),b
  3395  0011AE  6B65               	clrf	(??_Write_Display_Byte+3)& (0+255),b
  3396  0011B0  0100               	movlb	0	; () banked
  3397  0011B2  5162               	movf	??_Write_Display_Byte& (0+255),w,b
  3398  0011B4  0100               	movlb	0	; () banked
  3399  0011B6  2764               	addwf	(??_Write_Display_Byte+2)& (0+255),f,b
  3400  0011B8  0100               	movlb	0	; () banked
  3401  0011BA  5163               	movf	(??_Write_Display_Byte+1)& (0+255),w,b
  3402  0011BC  0100               	movlb	0	; () banked
  3403  0011BE  2365               	addwfc	(??_Write_Display_Byte+3)& (0+255),f,b
  3404  0011C0  0100               	movlb	0	; () banked
  3405  0011C2  5164               	movf	(??_Write_Display_Byte+2)& (0+255),w,b
  3406  0011C4  0100               	movlb	0	; () banked
  3407  0011C6  2560               	addwf	Write_Display_Byte@write_data& (0+255),w,b
  3408  0011C8  6ED9               	movwf	fsr2l,c
  3409  0011CA  0100               	movlb	0	; () banked
  3410  0011CC  5165               	movf	(??_Write_Display_Byte+3)& (0+255),w,b
  3411  0011CE  0100               	movlb	0	; () banked
  3412  0011D0  2161               	addwfc	(Write_Display_Byte@write_data+1)& (0+255),w,b
  3413  0011D2  6EDA               	movwf	fsr2h,c
  3414  0011D4  50DF               	movf	indf2,w,c
  3415  0011D6  6EC9               	movwf	4041,c	;volatile
  3416  0011D8                     l516:
  3417  0011D8  A69E               	btfss	3998,3,c	;volatile
  3418  0011DA  D7FE               	goto	l516
  3419                           
  3420                           ;communication.c: 54: SSP1IF = 0;
  3421  0011DC  969E               	bcf	3998,3,c	;volatile
  3422                           
  3423                           ;communication.c: 55: PORTCbits.RC0 = 0;
  3424  0011DE  9082               	bcf	3970,0,c	;volatile
  3425                           
  3426                           ;communication.c: 56: PORTCbits.RC0 = 1;
  3427  0011E0  8082               	bsf	3970,0,c	;volatile
  3428                           
  3429                           ;communication.c: 57: PORTCbits.RC0 = 0;
  3430  0011E2  9082               	bcf	3970,0,c	;volatile
  3431  0011E4  0100               	movlb	0	; () banked
  3432  0011E6  0766               	decf	Write_Display_Byte@counter& (0+255),f,b
  3433  0011E8  D7D0               	goto	L3
  3434  0011EA                     __end_of_Write_Display_Byte:
  3435                           	opt stack 0
  3436                           tblptru	equ	0xFF8
  3437                           tblptrh	equ	0xFF7
  3438                           tblptrl	equ	0xFF6
  3439                           tablat	equ	0xFF5
  3440                           prodh	equ	0xFF4
  3441                           prodl	equ	0xFF3
  3442                           intcon	equ	0xFF2
  3443                           postinc0	equ	0xFEE
  3444                           wreg	equ	0xFE8
  3445                           postdec1	equ	0xFE5
  3446                           fsr1l	equ	0xFE1
  3447                           indf2	equ	0xFDF
  3448                           postinc2	equ	0xFDE
  3449                           postdec2	equ	0xFDD
  3450                           plusw2	equ	0xFDB
  3451                           fsr2h	equ	0xFDA
  3452                           fsr2l	equ	0xFD9
  3453                           status	equ	0xFD8
  3454                           
  3455 ;; *************** function _Evaluate_Signs *****************
  3456 ;; Defined at:
  3457 ;;		line 118 in file "display.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  evaluation_v    2   13[BANK0 ] unsigned int 
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  valuecounter    1   15[BANK0 ] unsigned char 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;		None               void
  3464 ;; Registers used:
  3465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1
  3471 ;;      Params:         0       2       0
  3472 ;;      Locals:         0       1       0
  3473 ;;      Temps:          0       0       0
  3474 ;;      Totals:         0       3       0
  3475 ;;Total ram usage:        3 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    7
  3478 ;; This function calls:
  3479 ;;		_Evaluate_Display
  3480 ;;		___lwmod
  3481 ;; This function is called by:
  3482 ;;		_Set_Display
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           
  3486                           	psect	text18
  3487  0010A0                     __ptext18:
  3488                           	opt stack 0
  3489  0010A0                     _Evaluate_Signs:
  3490                           	opt stack 22
  3491                           
  3492                           ;display.c: 119: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  3493                           
  3494                           ; BSR set to: 0
  3495                           ;incstack = 0
  3496  0010A0  0E00               	movlw	0
  3497  0010A2  0100               	movlb	0	; () banked
  3498  0010A4  6F6F               	movwf	Evaluate_Signs@valuecounter& (0+255),b
  3499  0010A6                     l2818:
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;display.c: 120: valuecounter++) {
  3503  0010A6  0E02               	movlw	2
  3504  0010A8  0100               	movlb	0	; () banked
  3505  0010AA  656F               	cpfsgt	Evaluate_Signs@valuecounter& (0+255),b
  3506  0010AC  D001               	goto	l2822
  3507  0010AE  D029               	goto	l430
  3508  0010B0                     l2822:
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;display.c: 121: signs[valuecounter] = evaluation_value % 10;
  3512  0010B0  0100               	movlb	0	; () banked
  3513  0010B2  516F               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3514  0010B4  0D01               	mullw	1
  3515  0010B6  0E7B               	movlw	low _signs
  3516  0010B8  24F3               	addwf	prodl,w,c
  3517  0010BA  6ED9               	movwf	fsr2l,c
  3518  0010BC  0E00               	movlw	high _signs
  3519  0010BE  20F4               	addwfc	prodh,w,c
  3520  0010C0  6EDA               	movwf	fsr2h,c
  3521  0010C2  C06D  F060         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  3522  0010C6  C06E  F061         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  3523  0010CA  0E00               	movlw	0
  3524  0010CC  0100               	movlb	0	; () banked
  3525  0010CE  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  3526  0010D0  0E0A               	movlw	10
  3527  0010D2  6F62               	movwf	___lwmod@divisor& (0+255),b
  3528  0010D4  EC59  F009         	call	___lwmod	;wreg free
  3529  0010D8  0100               	movlb	0	; () banked
  3530  0010DA  5160               	movf	?___lwmod& (0+255),w,b
  3531  0010DC  6EDF               	movwf	indf2,c
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;display.c: 122: signs[valuecounter] += 0x30;
  3535  0010DE  0100               	movlb	0	; () banked
  3536  0010E0  516F               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3537  0010E2  0D01               	mullw	1
  3538  0010E4  0E7B               	movlw	low _signs
  3539  0010E6  24F3               	addwf	prodl,w,c
  3540  0010E8  6ED9               	movwf	fsr2l,c
  3541  0010EA  0E00               	movlw	high _signs
  3542  0010EC  20F4               	addwfc	prodh,w,c
  3543  0010EE  6EDA               	movwf	fsr2h,c
  3544  0010F0  0E30               	movlw	48
  3545  0010F2  26DF               	addwf	indf2,f,c
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;display.c: 123: evaluation_value >>= 1;
  3549  0010F4  0100               	movlb	0	; () banked
  3550  0010F6  90D8               	bcf	status,0,c
  3551  0010F8  336E               	rrcf	(Evaluate_Signs@evaluation_value+1)& (0+255),f,b
  3552  0010FA  336D               	rrcf	Evaluate_Signs@evaluation_value& (0+255),f,b
  3553                           
  3554                           ; BSR set to: 0
  3555  0010FC  0100               	movlb	0	; () banked
  3556  0010FE  2B6F               	incf	Evaluate_Signs@valuecounter& (0+255),f,b
  3557  001100  D7D2               	goto	l2818
  3558  001102                     l430:
  3559                           
  3560                           ; BSR set to: 0
  3561                           ;display.c: 124: }
  3562                           ;display.c: 125: __nop();
  3563  001102  F000               	nop	
  3564                           
  3565                           ;display.c: 126: Evaluate_Display(sizeof(signs), signs);
  3566  001104  0E7B               	movlw	low _signs
  3567  001106  0100               	movlb	0	; () banked
  3568  001108  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3569  00110A  0E00               	movlw	high _signs
  3570  00110C  0100               	movlb	0	; () banked
  3571  00110E  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3572  001110  0E03               	movlw	3
  3573  001112  ECC7  F003         	call	_Evaluate_Display
  3574  001116  0012               	return		;funcret
  3575  001118                     __end_of_Evaluate_Signs:
  3576                           	opt stack 0
  3577                           tblptru	equ	0xFF8
  3578                           tblptrh	equ	0xFF7
  3579                           tblptrl	equ	0xFF6
  3580                           tablat	equ	0xFF5
  3581                           prodh	equ	0xFF4
  3582                           prodl	equ	0xFF3
  3583                           intcon	equ	0xFF2
  3584                           postinc0	equ	0xFEE
  3585                           wreg	equ	0xFE8
  3586                           postdec1	equ	0xFE5
  3587                           fsr1l	equ	0xFE1
  3588                           indf2	equ	0xFDF
  3589                           postinc2	equ	0xFDE
  3590                           postdec2	equ	0xFDD
  3591                           plusw2	equ	0xFDB
  3592                           fsr2h	equ	0xFDA
  3593                           fsr2l	equ	0xFD9
  3594                           status	equ	0xFD8
  3595                           
  3596 ;; *************** function ___lwmod *****************
  3597 ;; Defined at:
  3598 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;  dividend        2    0[BANK0 ] unsigned int 
  3601 ;;  divisor         2    2[BANK0 ] unsigned int 
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;  counter         1    4[BANK0 ] unsigned char 
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  2    0[BANK0 ] unsigned int 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1
  3613 ;;      Params:         0       4       0
  3614 ;;      Locals:         0       1       0
  3615 ;;      Temps:          0       0       0
  3616 ;;      Totals:         0       5       0
  3617 ;;Total ram usage:        5 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    5
  3620 ;; This function calls:
  3621 ;;		Nothing
  3622 ;; This function is called by:
  3623 ;;		_Evaluate_Signs
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text19
  3628  0012B2                     __ptext19:
  3629                           	opt stack 0
  3630  0012B2                     ___lwmod:
  3631                           	opt stack 23
  3632                           
  3633                           ;incstack = 0
  3634  0012B2  0100               	movlb	0	; () banked
  3635  0012B4  5162               	movf	___lwmod@divisor& (0+255),w,b
  3636  0012B6  0100               	movlb	0	; () banked
  3637  0012B8  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3638  0012BA  B4D8               	btfsc	status,2,c
  3639  0012BC  D026               	goto	l1005
  3640                           
  3641                           ; BSR set to: 0
  3642  0012BE  0E01               	movlw	1
  3643  0012C0  0100               	movlb	0	; () banked
  3644  0012C2  6F64               	movwf	___lwmod@counter& (0+255),b
  3645  0012C4  D006               	goto	l2806
  3646  0012C6                     l2804:
  3647                           
  3648                           ; BSR set to: 0
  3649  0012C6  0100               	movlb	0	; () banked
  3650  0012C8  90D8               	bcf	status,0,c
  3651  0012CA  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  3652  0012CC  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3653  0012CE  0100               	movlb	0	; () banked
  3654  0012D0  2B64               	incf	___lwmod@counter& (0+255),f,b
  3655  0012D2                     l2806:
  3656                           
  3657                           ; BSR set to: 0
  3658  0012D2  0100               	movlb	0	; () banked
  3659  0012D4  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3660  0012D6  D7F7               	goto	l2804
  3661  0012D8                     l2808:
  3662                           
  3663                           ; BSR set to: 0
  3664  0012D8  0100               	movlb	0	; () banked
  3665  0012DA  5162               	movf	___lwmod@divisor& (0+255),w,b
  3666  0012DC  0100               	movlb	0	; () banked
  3667  0012DE  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  3668  0012E0  0100               	movlb	0	; () banked
  3669  0012E2  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3670  0012E4  0100               	movlb	0	; () banked
  3671  0012E6  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3672  0012E8  A0D8               	btfss	status,0,c
  3673  0012EA  D008               	goto	l2812
  3674                           
  3675                           ; BSR set to: 0
  3676  0012EC  0100               	movlb	0	; () banked
  3677  0012EE  5162               	movf	___lwmod@divisor& (0+255),w,b
  3678  0012F0  0100               	movlb	0	; () banked
  3679  0012F2  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  3680  0012F4  0100               	movlb	0	; () banked
  3681  0012F6  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3682  0012F8  0100               	movlb	0	; () banked
  3683  0012FA  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3684  0012FC                     l2812:
  3685                           
  3686                           ; BSR set to: 0
  3687  0012FC  0100               	movlb	0	; () banked
  3688  0012FE  90D8               	bcf	status,0,c
  3689  001300  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3690  001302  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  3691                           
  3692                           ; BSR set to: 0
  3693  001304  0100               	movlb	0	; () banked
  3694  001306  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  3695  001308  D7E7               	goto	l2808
  3696  00130A                     l1005:
  3697                           
  3698                           ; BSR set to: 0
  3699  00130A  C060  F060         	movff	___lwmod@dividend,?___lwmod
  3700  00130E  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  3701                           
  3702                           ; BSR set to: 0
  3703  001312  0012               	return		;funcret
  3704  001314                     __end_of___lwmod:
  3705                           	opt stack 0
  3706                           tblptru	equ	0xFF8
  3707                           tblptrh	equ	0xFF7
  3708                           tblptrl	equ	0xFF6
  3709                           tablat	equ	0xFF5
  3710                           prodh	equ	0xFF4
  3711                           prodl	equ	0xFF3
  3712                           intcon	equ	0xFF2
  3713                           postinc0	equ	0xFEE
  3714                           wreg	equ	0xFE8
  3715                           postdec1	equ	0xFE5
  3716                           fsr1l	equ	0xFE1
  3717                           indf2	equ	0xFDF
  3718                           postinc2	equ	0xFDE
  3719                           postdec2	equ	0xFDD
  3720                           plusw2	equ	0xFDB
  3721                           fsr2h	equ	0xFDA
  3722                           fsr2l	equ	0xFD9
  3723                           status	equ	0xFD8
  3724                           
  3725 ;; *************** function _Evaluate_Display *****************
  3726 ;; Defined at:
  3727 ;;		line 52 in file "display.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  size            1    wreg     unsigned char 
  3730 ;;  evaluate        2    8[BANK0 ] PTR const unsigned char 
  3731 ;;		 -> signs(3), STR_2(4), STR_1(4), 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  size            1   12[BANK0 ] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;		None               void
  3736 ;; Registers used:
  3737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1
  3743 ;;      Params:         0       2       0
  3744 ;;      Locals:         0       1       0
  3745 ;;      Temps:          0       2       0
  3746 ;;      Totals:         0       5       0
  3747 ;;Total ram usage:        5 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    6
  3750 ;; This function calls:
  3751 ;;		_Set_Bits
  3752 ;; This function is called by:
  3753 ;;		_Load_Data
  3754 ;;		_Del_Data
  3755 ;;		_Evaluate_Signs
  3756 ;;		_Set_Display
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text20
  3761  00078E                     __ptext20:
  3762                           	opt stack 0
  3763  00078E                     _Evaluate_Display:
  3764                           	opt stack 22
  3765                           
  3766                           ; BSR set to: 0
  3767                           ;incstack = 0
  3768                           ;Evaluate_Display@size stored from wreg
  3769  00078E  0100               	movlb	0	; () banked
  3770  000790  6F6C               	movwf	Evaluate_Display@size& (0+255),b
  3771                           
  3772                           ;display.c: 53: for(display_counter = 0; display_counter < size;
  3773  000792  0E00               	movlw	0
  3774  000794  6E32               	movwf	_display_counter,c
  3775                           
  3776                           ;display.c: 54: display_counter++) {
  3777  000796  D15C               	goto	l2798
  3778  000798                     l2758:
  3779                           
  3780                           ;display.c: 57: Set_Bits("ABCDEF");
  3781  000798  0E23               	movlw	low STR_3
  3782  00079A  0100               	movlb	0	; () banked
  3783  00079C  6F60               	movwf	Set_Bits@bits& (0+255),b
  3784  00079E  0E02               	movlw	high STR_3
  3785  0007A0  0100               	movlb	0	; () banked
  3786  0007A2  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3787  0007A4  0100               	movlb	0	; () banked
  3788  0007A6  5160               	movf	Set_Bits@bits& (0+255),w,b
  3789  0007A8  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3790  0007AA  A4D8               	btfss	status,2,c
  3791  0007AC  0E00               	movlw	low (__mediumconst shr (0+16))
  3792  0007AE  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3793  0007B0  ECE2  F006         	call	_Set_Bits	;wreg free
  3794                           
  3795                           ;display.c: 58: break;
  3796  0007B4  D14C               	goto	l2796
  3797  0007B6                     l2760:
  3798                           
  3799                           ;display.c: 60: Set_Bits("BC");
  3800  0007B6  0E63               	movlw	low (STR_10+1)
  3801  0007B8  0100               	movlb	0	; () banked
  3802  0007BA  6F60               	movwf	Set_Bits@bits& (0+255),b
  3803  0007BC  0E02               	movlw	high (STR_10+1)
  3804  0007BE  0100               	movlb	0	; () banked
  3805  0007C0  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3806  0007C2  0100               	movlb	0	; () banked
  3807  0007C4  5160               	movf	Set_Bits@bits& (0+255),w,b
  3808  0007C6  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3809  0007C8  A4D8               	btfss	status,2,c
  3810  0007CA  0E00               	movlw	low (__mediumconst shr (0+16))
  3811  0007CC  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3812  0007CE  ECE2  F006         	call	_Set_Bits	;wreg free
  3813                           
  3814                           ;display.c: 61: break;
  3815  0007D2  D13D               	goto	l2796
  3816  0007D4                     l2762:
  3817                           
  3818                           ;display.c: 63: Set_Bits("ABDEG");
  3819  0007D4  0E45               	movlw	low STR_5
  3820  0007D6  0100               	movlb	0	; () banked
  3821  0007D8  6F60               	movwf	Set_Bits@bits& (0+255),b
  3822  0007DA  0E02               	movlw	high STR_5
  3823  0007DC  0100               	movlb	0	; () banked
  3824  0007DE  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3825  0007E0  0100               	movlb	0	; () banked
  3826  0007E2  5160               	movf	Set_Bits@bits& (0+255),w,b
  3827  0007E4  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3828  0007E6  A4D8               	btfss	status,2,c
  3829  0007E8  0E00               	movlw	low (__mediumconst shr (0+16))
  3830  0007EA  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3831  0007EC  ECE2  F006         	call	_Set_Bits	;wreg free
  3832                           
  3833                           ;display.c: 64: break;
  3834  0007F0  D12E               	goto	l2796
  3835  0007F2                     l2764:
  3836                           
  3837                           ;display.c: 66: Set_Bits("ABCDG");
  3838  0007F2  0E3F               	movlw	low STR_6
  3839  0007F4  0100               	movlb	0	; () banked
  3840  0007F6  6F60               	movwf	Set_Bits@bits& (0+255),b
  3841  0007F8  0E02               	movlw	high STR_6
  3842  0007FA  0100               	movlb	0	; () banked
  3843  0007FC  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3844  0007FE  0100               	movlb	0	; () banked
  3845  000800  5160               	movf	Set_Bits@bits& (0+255),w,b
  3846  000802  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3847  000804  A4D8               	btfss	status,2,c
  3848  000806  0E00               	movlw	low (__mediumconst shr (0+16))
  3849  000808  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3850  00080A  ECE2  F006         	call	_Set_Bits	;wreg free
  3851                           
  3852                           ;display.c: 67: break;
  3853  00080E  D11F               	goto	l2796
  3854  000810                     l2766:
  3855                           
  3856                           ;display.c: 69: Set_Bits("BCFG");
  3857  000810  0E5D               	movlw	low STR_7
  3858  000812  0100               	movlb	0	; () banked
  3859  000814  6F60               	movwf	Set_Bits@bits& (0+255),b
  3860  000816  0E02               	movlw	high STR_7
  3861  000818  0100               	movlb	0	; () banked
  3862  00081A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3863  00081C  0100               	movlb	0	; () banked
  3864  00081E  5160               	movf	Set_Bits@bits& (0+255),w,b
  3865  000820  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3866  000822  A4D8               	btfss	status,2,c
  3867  000824  0E00               	movlw	low (__mediumconst shr (0+16))
  3868  000826  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3869  000828  ECE2  F006         	call	_Set_Bits	;wreg free
  3870                           
  3871                           ;display.c: 70: break;
  3872  00082C  D110               	goto	l2796
  3873  00082E                     l2768:
  3874                           
  3875                           ;display.c: 72: Set_Bits("ACDFG");
  3876  00082E  0E4B               	movlw	low STR_8
  3877  000830  0100               	movlb	0	; () banked
  3878  000832  6F60               	movwf	Set_Bits@bits& (0+255),b
  3879  000834  0E02               	movlw	high STR_8
  3880  000836  0100               	movlb	0	; () banked
  3881  000838  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3882  00083A  0100               	movlb	0	; () banked
  3883  00083C  5160               	movf	Set_Bits@bits& (0+255),w,b
  3884  00083E  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3885  000840  A4D8               	btfss	status,2,c
  3886  000842  0E00               	movlw	low (__mediumconst shr (0+16))
  3887  000844  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3888  000846  ECE2  F006         	call	_Set_Bits	;wreg free
  3889                           
  3890                           ;display.c: 73: break;
  3891  00084A  D101               	goto	l2796
  3892  00084C                     l2770:
  3893                           
  3894                           ;display.c: 75: Set_Bits("ACDEFG");
  3895  00084C  0E38               	movlw	low STR_9
  3896  00084E  0100               	movlb	0	; () banked
  3897  000850  6F60               	movwf	Set_Bits@bits& (0+255),b
  3898  000852  0E02               	movlw	high STR_9
  3899  000854  0100               	movlb	0	; () banked
  3900  000856  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3901  000858  0100               	movlb	0	; () banked
  3902  00085A  5160               	movf	Set_Bits@bits& (0+255),w,b
  3903  00085C  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3904  00085E  A4D8               	btfss	status,2,c
  3905  000860  0E00               	movlw	low (__mediumconst shr (0+16))
  3906  000862  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3907  000864  ECE2  F006         	call	_Set_Bits	;wreg free
  3908                           
  3909                           ;display.c: 76: break;
  3910  000868  D0F2               	goto	l2796
  3911  00086A                     l2772:
  3912                           
  3913                           ;display.c: 78: Set_Bits("ABC");
  3914  00086A  0E62               	movlw	low STR_10
  3915  00086C  0100               	movlb	0	; () banked
  3916  00086E  6F60               	movwf	Set_Bits@bits& (0+255),b
  3917  000870  0E02               	movlw	high STR_10
  3918  000872  0100               	movlb	0	; () banked
  3919  000874  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3920  000876  0100               	movlb	0	; () banked
  3921  000878  5160               	movf	Set_Bits@bits& (0+255),w,b
  3922  00087A  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3923  00087C  A4D8               	btfss	status,2,c
  3924  00087E  0E00               	movlw	low (__mediumconst shr (0+16))
  3925  000880  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3926  000882  ECE2  F006         	call	_Set_Bits	;wreg free
  3927                           
  3928                           ;display.c: 79: break;
  3929  000886  D0E3               	goto	l2796
  3930  000888                     l2774:
  3931                           
  3932                           ;display.c: 81: Set_Bits("ABCDEFG");
  3933  000888  0E1B               	movlw	low STR_11
  3934  00088A  0100               	movlb	0	; () banked
  3935  00088C  6F60               	movwf	Set_Bits@bits& (0+255),b
  3936  00088E  0E02               	movlw	high STR_11
  3937  000890  0100               	movlb	0	; () banked
  3938  000892  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3939  000894  0100               	movlb	0	; () banked
  3940  000896  5160               	movf	Set_Bits@bits& (0+255),w,b
  3941  000898  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3942  00089A  A4D8               	btfss	status,2,c
  3943  00089C  0E00               	movlw	low (__mediumconst shr (0+16))
  3944  00089E  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3945  0008A0  ECE2  F006         	call	_Set_Bits	;wreg free
  3946                           
  3947                           ;display.c: 82: break;
  3948  0008A4  D0D4               	goto	l2796
  3949  0008A6                     l2776:
  3950                           
  3951                           ;display.c: 84: Set_Bits("ABCDFG");
  3952  0008A6  0E2A               	movlw	low STR_12
  3953  0008A8  0100               	movlb	0	; () banked
  3954  0008AA  6F60               	movwf	Set_Bits@bits& (0+255),b
  3955  0008AC  0E02               	movlw	high STR_12
  3956  0008AE  0100               	movlb	0	; () banked
  3957  0008B0  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3958  0008B2  0100               	movlb	0	; () banked
  3959  0008B4  5160               	movf	Set_Bits@bits& (0+255),w,b
  3960  0008B6  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3961  0008B8  A4D8               	btfss	status,2,c
  3962  0008BA  0E00               	movlw	low (__mediumconst shr (0+16))
  3963  0008BC  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3964  0008BE  ECE2  F006         	call	_Set_Bits	;wreg free
  3965                           
  3966                           ;display.c: 85: break;
  3967  0008C2  D0C5               	goto	l2796
  3968  0008C4                     l2778:
  3969                           
  3970                           ;display.c: 87: Set_Bits("ABCEFG");
  3971  0008C4  0E31               	movlw	low STR_13
  3972  0008C6  0100               	movlb	0	; () banked
  3973  0008C8  6F60               	movwf	Set_Bits@bits& (0+255),b
  3974  0008CA  0E02               	movlw	high STR_13
  3975  0008CC  0100               	movlb	0	; () banked
  3976  0008CE  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3977  0008D0  0100               	movlb	0	; () banked
  3978  0008D2  5160               	movf	Set_Bits@bits& (0+255),w,b
  3979  0008D4  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3980  0008D6  A4D8               	btfss	status,2,c
  3981  0008D8  0E00               	movlw	low (__mediumconst shr (0+16))
  3982  0008DA  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3983  0008DC  ECE2  F006         	call	_Set_Bits	;wreg free
  3984                           
  3985                           ;display.c: 88: break;
  3986  0008E0  D0B6               	goto	l2796
  3987  0008E2                     l2780:
  3988                           
  3989                           ;display.c: 90: Set_Bits("ABCDEF");
  3990  0008E2  0E23               	movlw	low STR_3
  3991  0008E4  0100               	movlb	0	; () banked
  3992  0008E6  6F60               	movwf	Set_Bits@bits& (0+255),b
  3993  0008E8  0E02               	movlw	high STR_3
  3994  0008EA  0100               	movlb	0	; () banked
  3995  0008EC  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3996  0008EE  0100               	movlb	0	; () banked
  3997  0008F0  5160               	movf	Set_Bits@bits& (0+255),w,b
  3998  0008F2  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3999  0008F4  A4D8               	btfss	status,2,c
  4000  0008F6  0E00               	movlw	low (__mediumconst shr (0+16))
  4001  0008F8  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4002  0008FA  ECE2  F006         	call	_Set_Bits	;wreg free
  4003                           
  4004                           ;display.c: 91: break;
  4005  0008FE  D0A7               	goto	l2796
  4006  000900                     l2782:
  4007                           
  4008                           ;display.c: 93: Set_Bits("ADEFG");
  4009  000900  0E57               	movlw	low STR_15
  4010  000902  0100               	movlb	0	; () banked
  4011  000904  6F60               	movwf	Set_Bits@bits& (0+255),b
  4012  000906  0E02               	movlw	high STR_15
  4013  000908  0100               	movlb	0	; () banked
  4014  00090A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4015  00090C  0100               	movlb	0	; () banked
  4016  00090E  5160               	movf	Set_Bits@bits& (0+255),w,b
  4017  000910  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4018  000912  A4D8               	btfss	status,2,c
  4019  000914  0E00               	movlw	low (__mediumconst shr (0+16))
  4020  000916  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4021  000918  ECE2  F006         	call	_Set_Bits	;wreg free
  4022                           
  4023                           ;display.c: 94: break;
  4024  00091C  D098               	goto	l2796
  4025  00091E                     l2784:
  4026                           
  4027                           ;display.c: 96: Set_Bits("DEF");
  4028  00091E  0E26               	movlw	low (STR_3+3)
  4029  000920  0100               	movlb	0	; () banked
  4030  000922  6F60               	movwf	Set_Bits@bits& (0+255),b
  4031  000924  0E02               	movlw	high (STR_3+3)
  4032  000926  0100               	movlb	0	; () banked
  4033  000928  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4034  00092A  0100               	movlb	0	; () banked
  4035  00092C  5160               	movf	Set_Bits@bits& (0+255),w,b
  4036  00092E  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4037  000930  A4D8               	btfss	status,2,c
  4038  000932  0E00               	movlw	low (__mediumconst shr (0+16))
  4039  000934  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4040  000936  ECE2  F006         	call	_Set_Bits	;wreg free
  4041                           
  4042                           ;display.c: 97: break;
  4043  00093A  D089               	goto	l2796
  4044  00093C                     l2786:
  4045                           
  4046                           ;display.c: 99: Set_Bits("ABCDEF");
  4047  00093C  0E23               	movlw	low STR_3
  4048  00093E  0100               	movlb	0	; () banked
  4049  000940  6F60               	movwf	Set_Bits@bits& (0+255),b
  4050  000942  0E02               	movlw	high STR_3
  4051  000944  0100               	movlb	0	; () banked
  4052  000946  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4053  000948  0100               	movlb	0	; () banked
  4054  00094A  5160               	movf	Set_Bits@bits& (0+255),w,b
  4055  00094C  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4056  00094E  A4D8               	btfss	status,2,c
  4057  000950  0E00               	movlw	low (__mediumconst shr (0+16))
  4058  000952  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4059  000954  ECE2  F006         	call	_Set_Bits	;wreg free
  4060                           
  4061                           ;display.c: 100: break;
  4062  000958  D07A               	goto	l2796
  4063  00095A                     l2788:
  4064                           
  4065                           ;display.c: 102: Set_Bits("ABEFG");
  4066  00095A  0E51               	movlw	low STR_18
  4067  00095C  0100               	movlb	0	; () banked
  4068  00095E  6F60               	movwf	Set_Bits@bits& (0+255),b
  4069  000960  0E02               	movlw	high STR_18
  4070  000962  0100               	movlb	0	; () banked
  4071  000964  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4072  000966  0100               	movlb	0	; () banked
  4073  000968  5160               	movf	Set_Bits@bits& (0+255),w,b
  4074  00096A  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4075  00096C  A4D8               	btfss	status,2,c
  4076  00096E  0E00               	movlw	low (__mediumconst shr (0+16))
  4077  000970  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4078  000972  ECE2  F006         	call	_Set_Bits	;wreg free
  4079                           
  4080                           ;display.c: 103: break;
  4081  000976  D06B               	goto	l2796
  4082  000978                     l2790:
  4083                           
  4084                           ;display.c: 105: Set_Bits("G");
  4085  000978  0E43               	movlw	low (STR_6+4)
  4086  00097A  0100               	movlb	0	; () banked
  4087  00097C  6F60               	movwf	Set_Bits@bits& (0+255),b
  4088  00097E  0E02               	movlw	high (STR_6+4)
  4089  000980  0100               	movlb	0	; () banked
  4090  000982  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4091  000984  0100               	movlb	0	; () banked
  4092  000986  5160               	movf	Set_Bits@bits& (0+255),w,b
  4093  000988  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4094  00098A  A4D8               	btfss	status,2,c
  4095  00098C  0E00               	movlw	low (__mediumconst shr (0+16))
  4096  00098E  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4097  000990  ECE2  F006         	call	_Set_Bits	;wreg free
  4098                           
  4099                           ;display.c: 106: break;
  4100  000994  D05C               	goto	l2796
  4101  000996                     l2792:
  4102                           
  4103                           ;display.c: 108: Set_Bits(0);
  4104  000996  0E00               	movlw	0
  4105  000998  0100               	movlb	0	; () banked
  4106  00099A  6F60               	movwf	Set_Bits@bits& (0+255),b
  4107  00099C  0E00               	movlw	0
  4108  00099E  0100               	movlb	0	; () banked
  4109  0009A0  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4110  0009A2  0E00               	movlw	0
  4111  0009A4  0100               	movlb	0	; () banked
  4112  0009A6  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4113  0009A8  ECE2  F006         	call	_Set_Bits	;wreg free
  4114                           
  4115                           ;display.c: 109: }
  4116  0009AC  D050               	goto	l2796
  4117  0009AE                     l2794:
  4118  0009AE  5032               	movf	_display_counter,w,c
  4119  0009B0  0D01               	mullw	1
  4120  0009B2  C068  F06A         	movff	Evaluate_Display@evaluate,??_Evaluate_Display
  4121  0009B6  C069  F06B         	movff	Evaluate_Display@evaluate+1,??_Evaluate_Display+1
  4122  0009BA  50F3               	movf	prodl,w,c
  4123  0009BC  0100               	movlb	0	; () banked
  4124  0009BE  276A               	addwf	??_Evaluate_Display& (0+255),f,b
  4125  0009C0  50F4               	movf	prodh,w,c
  4126  0009C2  0100               	movlb	0	; () banked
  4127  0009C4  236B               	addwfc	(??_Evaluate_Display+1)& (0+255),f,b
  4128  0009C6  C06A  FFF6         	movff	??_Evaluate_Display,tblptrl
  4129  0009CA  C06B  FFF7         	movff	??_Evaluate_Display+1,tblptrh
  4130  0009CE  6AF8               	clrf	tblptru,c
  4131  0009D0  0E01               	movlw	(high __ramtop+-1)
  4132  0009D2  64F7               	cpfsgt	tblptrh,c
  4133  0009D4  D003               	bra	u1967
  4134  0009D6  0008               	tblrd		*
  4135  0009D8  50F5               	movf	tablat,w,c
  4136  0009DA  D005               	bra	u1960
  4137  0009DC                     u1967:
  4138  0009DC  CFF6 FFD9          	movff	tblptrl,fsr2l
  4139  0009E0  CFF7 FFDA          	movff	tblptrh,fsr2h
  4140  0009E4  50DF               	movf	indf2,w,c
  4141  0009E6                     u1960:
  4142                           
  4143                           ; Switch size 1, requested type "space"
  4144                           ; Number of cases is 17, Range of values is 45 to 80
  4145                           ; switch strategies available:
  4146                           ; Name         Instructions Cycles
  4147                           ; simple_byte           52    27 (average)
  4148                           ;	Chosen strategy is simple_byte
  4149  0009E6  0A2D               	xorlw	45	; case 45
  4150  0009E8  B4D8               	btfsc	status,2,c
  4151  0009EA  D7C6               	goto	l2790
  4152  0009EC  0A1D               	xorlw	29	; case 48
  4153  0009EE  B4D8               	btfsc	status,2,c
  4154  0009F0  D6D3               	goto	l2758
  4155  0009F2  0A01               	xorlw	1	; case 49
  4156  0009F4  B4D8               	btfsc	status,2,c
  4157  0009F6  D6DF               	goto	l2760
  4158  0009F8  0A03               	xorlw	3	; case 50
  4159  0009FA  B4D8               	btfsc	status,2,c
  4160  0009FC  D6EB               	goto	l2762
  4161  0009FE  0A01               	xorlw	1	; case 51
  4162  000A00  B4D8               	btfsc	status,2,c
  4163  000A02  D6F7               	goto	l2764
  4164  000A04  0A07               	xorlw	7	; case 52
  4165  000A06  B4D8               	btfsc	status,2,c
  4166  000A08  D703               	goto	l2766
  4167  000A0A  0A01               	xorlw	1	; case 53
  4168  000A0C  B4D8               	btfsc	status,2,c
  4169  000A0E  D70F               	goto	l2768
  4170  000A10  0A03               	xorlw	3	; case 54
  4171  000A12  B4D8               	btfsc	status,2,c
  4172  000A14  D71B               	goto	l2770
  4173  000A16  0A01               	xorlw	1	; case 55
  4174  000A18  B4D8               	btfsc	status,2,c
  4175  000A1A  D727               	goto	l2772
  4176  000A1C  0A0F               	xorlw	15	; case 56
  4177  000A1E  B4D8               	btfsc	status,2,c
  4178  000A20  D733               	goto	l2774
  4179  000A22  0A01               	xorlw	1	; case 57
  4180  000A24  B4D8               	btfsc	status,2,c
  4181  000A26  D73F               	goto	l2776
  4182  000A28  0A78               	xorlw	120	; case 65
  4183  000A2A  B4D8               	btfsc	status,2,c
  4184  000A2C  D74B               	goto	l2778
  4185  000A2E  0A05               	xorlw	5	; case 68
  4186  000A30  B4D8               	btfsc	status,2,c
  4187  000A32  D757               	goto	l2780
  4188  000A34  0A01               	xorlw	1	; case 69
  4189  000A36  B4D8               	btfsc	status,2,c
  4190  000A38  D763               	goto	l2782
  4191  000A3A  0A09               	xorlw	9	; case 76
  4192  000A3C  B4D8               	btfsc	status,2,c
  4193  000A3E  D76F               	goto	l2784
  4194  000A40  0A03               	xorlw	3	; case 79
  4195  000A42  B4D8               	btfsc	status,2,c
  4196  000A44  D77B               	goto	l2786
  4197  000A46  0A1F               	xorlw	31	; case 80
  4198  000A48  B4D8               	btfsc	status,2,c
  4199  000A4A  D787               	goto	l2788
  4200  000A4C  D7A4               	goto	l2792
  4201  000A4E                     l2796:
  4202  000A4E  2A32               	incf	_display_counter,f,c
  4203  000A50                     l2798:
  4204  000A50  0100               	movlb	0	; () banked
  4205  000A52  516C               	movf	Evaluate_Display@size& (0+255),w,b
  4206  000A54  5C32               	subwf	_display_counter,w,c
  4207  000A56  B0D8               	btfsc	status,0,c
  4208  000A58  0012               	return	
  4209  000A5A  D7A9               	goto	l2794
  4210  000A5C                     __end_of_Evaluate_Display:
  4211                           	opt stack 0
  4212                           tblptru	equ	0xFF8
  4213                           tblptrh	equ	0xFF7
  4214                           tblptrl	equ	0xFF6
  4215                           tablat	equ	0xFF5
  4216                           prodh	equ	0xFF4
  4217                           prodl	equ	0xFF3
  4218                           intcon	equ	0xFF2
  4219                           postinc0	equ	0xFEE
  4220                           wreg	equ	0xFE8
  4221                           postdec1	equ	0xFE5
  4222                           fsr1l	equ	0xFE1
  4223                           indf2	equ	0xFDF
  4224                           postinc2	equ	0xFDE
  4225                           postdec2	equ	0xFDD
  4226                           plusw2	equ	0xFDB
  4227                           fsr2h	equ	0xFDA
  4228                           fsr2l	equ	0xFD9
  4229                           status	equ	0xFD8
  4230                           
  4231 ;; *************** function _Set_Bits *****************
  4232 ;; Defined at:
  4233 ;;		line 12 in file "display.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  bits            3    0[BANK0 ] PTR const unsigned char 
  4236 ;;		 -> ROM(8191), STR_19(2), STR_18(6), STR_17(7), 
  4237 ;;		 -> STR_16(4), STR_15(6), STR_14(7), STR_13(7), 
  4238 ;;		 -> STR_12(7), STR_11(8), STR_10(4), STR_9(7), 
  4239 ;;		 -> STR_8(6), STR_7(5), STR_6(6), STR_5(6), 
  4240 ;;		 -> STR_4(3), STR_3(7), 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  bitcount        1    6[BANK0 ] unsigned char 
  4243 ;;  Bitoutput       1    7[BANK0 ] unsigned char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;		None               void
  4246 ;; Registers used:
  4247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1
  4253 ;;      Params:         0       3       0
  4254 ;;      Locals:         0       2       0
  4255 ;;      Temps:          0       3       0
  4256 ;;      Totals:         0       8       0
  4257 ;;Total ram usage:        8 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    5
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_Evaluate_Display
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text21
  4268  000DC4                     __ptext21:
  4269                           	opt stack 0
  4270  000DC4                     _Set_Bits:
  4271                           	opt stack 22
  4272                           
  4273                           ;display.c: 13: unsigned char Bitoutput = 0;
  4274                           
  4275                           ; BSR set to: 0
  4276                           ;incstack = 0
  4277  000DC4  0E00               	movlw	0
  4278  000DC6  0100               	movlb	0	; () banked
  4279  000DC8  6F67               	movwf	Set_Bits@Bitoutput& (0+255),b
  4280                           
  4281                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  4282  000DCA  0E00               	movlw	0
  4283  000DCC  0100               	movlb	0	; () banked
  4284  000DCE  6F66               	movwf	Set_Bits@bitcount& (0+255),b
  4285                           
  4286                           ;display.c: 15: bitcount++) {
  4287  000DD0  D046               	goto	l2752
  4288  000DD2                     l2732:
  4289                           
  4290                           ; BSR set to: 0
  4291                           ;display.c: 18: Bitoutput |= 0b00000001;
  4292  000DD2  0100               	movlb	0	; () banked
  4293  000DD4  8167               	bsf	Set_Bits@Bitoutput& (0+255),0,b
  4294                           
  4295                           ;display.c: 19: break;
  4296  000DD6  D041               	goto	l2750
  4297  000DD8                     l2734:
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;display.c: 21: Bitoutput |= 0b00000010;
  4301  000DD8  0100               	movlb	0	; () banked
  4302  000DDA  8367               	bsf	Set_Bits@Bitoutput& (0+255),1,b
  4303                           
  4304                           ;display.c: 22: break;
  4305  000DDC  D03E               	goto	l2750
  4306  000DDE                     l2736:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;display.c: 24: Bitoutput |= 0b00000100;
  4310  000DDE  0100               	movlb	0	; () banked
  4311  000DE0  8567               	bsf	Set_Bits@Bitoutput& (0+255),2,b
  4312                           
  4313                           ;display.c: 25: break;
  4314  000DE2  D03B               	goto	l2750
  4315  000DE4                     l2738:
  4316                           
  4317                           ; BSR set to: 0
  4318                           ;display.c: 27: Bitoutput |= 0b00001000;
  4319  000DE4  0100               	movlb	0	; () banked
  4320  000DE6  8767               	bsf	Set_Bits@Bitoutput& (0+255),3,b
  4321                           
  4322                           ;display.c: 28: break;
  4323  000DE8  D038               	goto	l2750
  4324  000DEA                     l2740:
  4325                           
  4326                           ; BSR set to: 0
  4327                           ;display.c: 30: Bitoutput |= 0b00010000;
  4328  000DEA  0100               	movlb	0	; () banked
  4329  000DEC  8967               	bsf	Set_Bits@Bitoutput& (0+255),4,b
  4330                           
  4331                           ;display.c: 31: break;
  4332  000DEE  D035               	goto	l2750
  4333  000DF0                     l2742:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;display.c: 33: Bitoutput |= 0b00100000;
  4337  000DF0  0100               	movlb	0	; () banked
  4338  000DF2  8B67               	bsf	Set_Bits@Bitoutput& (0+255),5,b
  4339                           
  4340                           ;display.c: 34: break;
  4341  000DF4  D032               	goto	l2750
  4342  000DF6                     l2744:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;display.c: 36: Bitoutput |= 0b01000000;
  4346  000DF6  0100               	movlb	0	; () banked
  4347  000DF8  8D67               	bsf	Set_Bits@Bitoutput& (0+255),6,b
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;display.c: 40: }
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;display.c: 39: break;
  4354                           
  4355                           ;display.c: 38: default:
  4356                           
  4357                           ;display.c: 37: break;
  4358  000DFA  D02F               	goto	l2750
  4359  000DFC                     l2748:
  4360                           
  4361                           ; BSR set to: 0
  4362  000DFC  0100               	movlb	0	; () banked
  4363  000DFE  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4364  000E00  0D01               	mullw	1
  4365  000E02  50F3               	movf	prodl,w,c
  4366  000E04  0100               	movlb	0	; () banked
  4367  000E06  2560               	addwf	Set_Bits@bits& (0+255),w,b
  4368  000E08  0100               	movlb	0	; () banked
  4369  000E0A  6F63               	movwf	??_Set_Bits& (0+255),b
  4370  000E0C  50F4               	movf	prodh,w,c
  4371  000E0E  0100               	movlb	0	; () banked
  4372  000E10  2161               	addwfc	(Set_Bits@bits+1)& (0+255),w,b
  4373  000E12  0100               	movlb	0	; () banked
  4374  000E14  6F64               	movwf	(??_Set_Bits+1)& (0+255),b
  4375  000E16  0E00               	movlw	0
  4376  000E18  0100               	movlb	0	; () banked
  4377  000E1A  2162               	addwfc	(Set_Bits@bits+2)& (0+255),w,b
  4378  000E1C  0100               	movlb	0	; () banked
  4379  000E1E  6F65               	movwf	(??_Set_Bits+2)& (0+255),b
  4380  000E20  C063  FFF6         	movff	??_Set_Bits,tblptrl
  4381  000E24  C064  FFF7         	movff	??_Set_Bits+1,tblptrh
  4382  000E28  C065  FFF8         	movff	??_Set_Bits+2,tblptru
  4383  000E2C  0008               	tblrd		*
  4384  000E2E  50F5               	movf	tablat,w,c
  4385                           
  4386                           ; Switch size 1, requested type "space"
  4387                           ; Number of cases is 7, Range of values is 65 to 71
  4388                           ; switch strategies available:
  4389                           ; Name         Instructions Cycles
  4390                           ; simple_byte           22    12 (average)
  4391                           ;	Chosen strategy is simple_byte
  4392  000E30  0A41               	xorlw	65	; case 65
  4393  000E32  B4D8               	btfsc	status,2,c
  4394  000E34  D7CE               	goto	l2732
  4395  000E36  0A03               	xorlw	3	; case 66
  4396  000E38  B4D8               	btfsc	status,2,c
  4397  000E3A  D7CE               	goto	l2734
  4398  000E3C  0A01               	xorlw	1	; case 67
  4399  000E3E  B4D8               	btfsc	status,2,c
  4400  000E40  D7CE               	goto	l2736
  4401  000E42  0A07               	xorlw	7	; case 68
  4402  000E44  B4D8               	btfsc	status,2,c
  4403  000E46  D7CE               	goto	l2738
  4404  000E48  0A01               	xorlw	1	; case 69
  4405  000E4A  B4D8               	btfsc	status,2,c
  4406  000E4C  D7CE               	goto	l2740
  4407  000E4E  0A03               	xorlw	3	; case 70
  4408  000E50  B4D8               	btfsc	status,2,c
  4409  000E52  D7CE               	goto	l2742
  4410  000E54  0A01               	xorlw	1	; case 71
  4411  000E56  B4D8               	btfsc	status,2,c
  4412  000E58  D7CE               	goto	l2744
  4413  000E5A                     l2750:
  4414                           
  4415                           ; BSR set to: 0
  4416  000E5A  0100               	movlb	0	; () banked
  4417  000E5C  2B66               	incf	Set_Bits@bitcount& (0+255),f,b
  4418  000E5E                     l2752:
  4419                           
  4420                           ; BSR set to: 0
  4421  000E5E  0100               	movlb	0	; () banked
  4422  000E60  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4423  000E62  0D01               	mullw	1
  4424  000E64  50F3               	movf	prodl,w,c
  4425  000E66  0100               	movlb	0	; () banked
  4426  000E68  2560               	addwf	Set_Bits@bits& (0+255),w,b
  4427  000E6A  0100               	movlb	0	; () banked
  4428  000E6C  6F63               	movwf	??_Set_Bits& (0+255),b
  4429  000E6E  50F4               	movf	prodh,w,c
  4430  000E70  0100               	movlb	0	; () banked
  4431  000E72  2161               	addwfc	(Set_Bits@bits+1)& (0+255),w,b
  4432  000E74  0100               	movlb	0	; () banked
  4433  000E76  6F64               	movwf	(??_Set_Bits+1)& (0+255),b
  4434  000E78  0E00               	movlw	0
  4435  000E7A  0100               	movlb	0	; () banked
  4436  000E7C  2162               	addwfc	(Set_Bits@bits+2)& (0+255),w,b
  4437  000E7E  0100               	movlb	0	; () banked
  4438  000E80  6F65               	movwf	(??_Set_Bits+2)& (0+255),b
  4439  000E82  C063  FFF6         	movff	??_Set_Bits,tblptrl
  4440  000E86  C064  FFF7         	movff	??_Set_Bits+1,tblptrh
  4441  000E8A  C065  FFF8         	movff	??_Set_Bits+2,tblptru
  4442  000E8E  0008               	tblrd		*
  4443  000E90  50F5               	movf	tablat,w,c
  4444  000E92  0900               	iorlw	0
  4445  000E94  A4D8               	btfss	status,2,c
  4446  000E96  D7B2               	goto	l2748
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;display.c: 41: }
  4450                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  4451                           
  4452                           ; BSR set to: 0
  4453  000E98  5032               	movf	_display_counter,w,c
  4454  000E9A  0D01               	mullw	1
  4455  000E9C  0E34               	movlw	low _pixels
  4456  000E9E  24F3               	addwf	prodl,w,c
  4457  000EA0  6ED9               	movwf	fsr2l,c
  4458  000EA2  0E00               	movlw	high _pixels
  4459  000EA4  20F4               	addwfc	prodh,w,c
  4460  000EA6  6EDA               	movwf	fsr2h,c
  4461  000EA8  C067  FFDF         	movff	Set_Bits@Bitoutput,indf2
  4462                           
  4463                           ; BSR set to: 0
  4464  000EAC  0012               	return		;funcret
  4465  000EAE                     __end_of_Set_Bits:
  4466                           	opt stack 0
  4467                           tblptru	equ	0xFF8
  4468                           tblptrh	equ	0xFF7
  4469                           tblptrl	equ	0xFF6
  4470                           tablat	equ	0xFF5
  4471                           prodh	equ	0xFF4
  4472                           prodl	equ	0xFF3
  4473                           intcon	equ	0xFF2
  4474                           postinc0	equ	0xFEE
  4475                           wreg	equ	0xFE8
  4476                           postdec1	equ	0xFE5
  4477                           fsr1l	equ	0xFE1
  4478                           indf2	equ	0xFDF
  4479                           postinc2	equ	0xFDE
  4480                           postdec2	equ	0xFDD
  4481                           plusw2	equ	0xFDB
  4482                           fsr2h	equ	0xFDA
  4483                           fsr2l	equ	0xFD9
  4484                           status	equ	0xFD8
  4485                           
  4486 ;; *************** function _Read_Data *****************
  4487 ;; Defined at:
  4488 ;;		line 44 in file "storage.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  read_address    1    wreg     unsigned char 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  read_address    1    4[BANK0 ] unsigned char 
  4493 ;;  data_read       2    2[BANK0 ] unsigned int 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  2    0[BANK0 ] unsigned int 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1
  4503 ;;      Params:         0       2       0
  4504 ;;      Locals:         0       3       0
  4505 ;;      Temps:          0       0       0
  4506 ;;      Totals:         0       5       0
  4507 ;;Total ram usage:        5 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    5
  4510 ;; This function calls:
  4511 ;;		Nothing
  4512 ;; This function is called by:
  4513 ;;		_Check_Buttons
  4514 ;;		_Load_Data
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text22
  4519  0013BE                     __ptext22:
  4520                           	opt stack 0
  4521  0013BE                     _Read_Data:
  4522                           	opt stack 24
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;incstack = 0
  4526                           ;Read_Data@read_address stored from wreg
  4527  0013BE  0100               	movlb	0	; () banked
  4528  0013C0  6F64               	movwf	Read_Data@read_address& (0+255),b
  4529                           
  4530                           ;storage.c: 45: unsigned int data_read = 0;
  4531  0013C2  0E00               	movlw	0
  4532  0013C4  0100               	movlb	0	; () banked
  4533  0013C6  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4534  0013C8  0E00               	movlw	0
  4535  0013CA  6F62               	movwf	Read_Data@data_read& (0+255),b
  4536                           
  4537                           ; BSR set to: 0
  4538                           ;storage.c: 46: read_address += 50;
  4539  0013CC  0E32               	movlw	50
  4540  0013CE  0100               	movlb	0	; () banked
  4541  0013D0  2764               	addwf	Read_Data@read_address& (0+255),f,b
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;storage.c: 47: EEADR = read_address;
  4545  0013D2  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;storage.c: 48: EECON1bits.EEPGD = 0;
  4549  0013D6  9EA6               	bcf	4006,7,c	;volatile
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;storage.c: 49: EECON1bits.CFGS = 0;
  4553  0013D8  9CA6               	bcf	4006,6,c	;volatile
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;storage.c: 50: EECON1bits.RD = 1;
  4557  0013DA  80A6               	bsf	4006,0,c	;volatile
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;storage.c: 51: data_read = EEDATA;
  4561  0013DC  CFA8 F062          	movff	4008,Read_Data@data_read	;volatile
  4562  0013E0  0100               	movlb	0	; () banked
  4563  0013E2  6B63               	clrf	(Read_Data@data_read+1)& (0+255),b
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;storage.c: 52: read_address -= 50;
  4567  0013E4  0E32               	movlw	50
  4568  0013E6  0100               	movlb	0	; () banked
  4569  0013E8  5F64               	subwf	Read_Data@read_address& (0+255),f,b
  4570                           
  4571                           ; BSR set to: 0
  4572                           ;storage.c: 53: data_read <<= 8;
  4573  0013EA  0100               	movlb	0	; () banked
  4574  0013EC  5162               	movf	Read_Data@data_read& (0+255),w,b
  4575  0013EE  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4576  0013F0  6B62               	clrf	Read_Data@data_read& (0+255),b
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;storage.c: 54: EEADR = read_address;
  4580  0013F2  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;storage.c: 55: EECON1bits.EEPGD = 0;
  4584  0013F6  9EA6               	bcf	4006,7,c	;volatile
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;storage.c: 56: EECON1bits.CFGS = 0;
  4588  0013F8  9CA6               	bcf	4006,6,c	;volatile
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;storage.c: 57: EECON1bits.RD = 1;
  4592  0013FA  80A6               	bsf	4006,0,c	;volatile
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;storage.c: 58: data_read |= EEDATA;
  4596  0013FC  50A8               	movf	4008,w,c	;volatile
  4597  0013FE  0100               	movlb	0	; () banked
  4598  001400  1362               	iorwf	Read_Data@data_read& (0+255),f,b
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;storage.c: 59: return data_read;
  4602  001402  C062  F060         	movff	Read_Data@data_read,?_Read_Data
  4603  001406  C063  F061         	movff	Read_Data@data_read+1,?_Read_Data+1
  4604  00140A  0012               	return	
  4605  00140C                     __end_of_Read_Data:
  4606                           	opt stack 0
  4607                           tblptru	equ	0xFF8
  4608                           tblptrh	equ	0xFF7
  4609                           tblptrl	equ	0xFF6
  4610                           tablat	equ	0xFF5
  4611                           prodh	equ	0xFF4
  4612                           prodl	equ	0xFF3
  4613                           intcon	equ	0xFF2
  4614                           postinc0	equ	0xFEE
  4615                           wreg	equ	0xFE8
  4616                           postdec1	equ	0xFE5
  4617                           fsr1l	equ	0xFE1
  4618                           indf2	equ	0xFDF
  4619                           postinc2	equ	0xFDE
  4620                           postdec2	equ	0xFDD
  4621                           plusw2	equ	0xFDB
  4622                           fsr2h	equ	0xFDA
  4623                           fsr2l	equ	0xFD9
  4624                           status	equ	0xFD8
  4625                           
  4626 ;; *************** function _Delay_Routine *****************
  4627 ;; Defined at:
  4628 ;;		line 78 in file "main.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  delay_multip    1    wreg     unsigned char 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  delay_multip    1    1[BANK0 ] unsigned char 
  4633 ;;  delay_counte    1    2[BANK0 ] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;		None               void
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1
  4643 ;;      Params:         0       0       0
  4644 ;;      Locals:         0       2       0
  4645 ;;      Temps:          0       1       0
  4646 ;;      Totals:         0       3       0
  4647 ;;Total ram usage:        3 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    5
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_Check_Buttons
  4654 ;;		_Load_Data
  4655 ;;		_Del_Data
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text23
  4660  001634                     __ptext23:
  4661                           	opt stack 0
  4662  001634                     _Delay_Routine:
  4663                           	opt stack 24
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;incstack = 0
  4667                           ;Delay_Routine@delay_multiplyer stored from wreg
  4668  001634  0100               	movlb	0	; () banked
  4669  001636  6F61               	movwf	Delay_Routine@delay_multiplyer& (0+255),b
  4670                           
  4671                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  4672  001638  0E00               	movlw	0
  4673  00163A  0100               	movlb	0	; () banked
  4674  00163C  6F62               	movwf	Delay_Routine@delay_counter& (0+255),b
  4675                           
  4676                           ;main.c: 80: delay_counter++) {
  4677  00163E  D00A               	goto	l2852
  4678  001640                     l2848:
  4679                           
  4680                           ; BSR set to: 0
  4681                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  4682  001640  0E82               	movlw	130
  4683  001642  0100               	movlb	0	; () banked
  4684  001644  6F60               	movwf	??_Delay_Routine& (0+255),b
  4685  001646  0EDE               	movlw	222
  4686  001648                     u2497:
  4687  001648  2EE8               	decfsz	wreg,f,c
  4688  00164A  D7FE               	goto	u2497
  4689  00164C  2F60               	decfsz	??_Delay_Routine& (0+255),f,b
  4690  00164E  D7FC               	goto	u2497
  4691  001650  0100               	movlb	0	; () banked
  4692  001652  2B62               	incf	Delay_Routine@delay_counter& (0+255),f,b
  4693  001654                     l2852:
  4694                           
  4695                           ; BSR set to: 0
  4696  001654  0100               	movlb	0	; () banked
  4697  001656  5161               	movf	Delay_Routine@delay_multiplyer& (0+255),w,b
  4698  001658  0100               	movlb	0	; () banked
  4699  00165A  5D62               	subwf	Delay_Routine@delay_counter& (0+255),w,b
  4700  00165C  A0D8               	btfss	status,0,c
  4701  00165E  D7F0               	goto	l2848
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;main.c: 82: }
  4705                           ;main.c: 83: __nop();
  4706  001660  F000               	nop	
  4707  001662  0012               	return		;funcret
  4708  001664                     __end_of_Delay_Routine:
  4709                           	opt stack 0
  4710                           tblptru	equ	0xFF8
  4711                           tblptrh	equ	0xFF7
  4712                           tblptrl	equ	0xFF6
  4713                           tablat	equ	0xFF5
  4714                           prodh	equ	0xFF4
  4715                           prodl	equ	0xFF3
  4716                           intcon	equ	0xFF2
  4717                           postinc0	equ	0xFEE
  4718                           wreg	equ	0xFE8
  4719                           postdec1	equ	0xFE5
  4720                           fsr1l	equ	0xFE1
  4721                           indf2	equ	0xFDF
  4722                           postinc2	equ	0xFDE
  4723                           postdec2	equ	0xFDD
  4724                           plusw2	equ	0xFDB
  4725                           fsr2h	equ	0xFDA
  4726                           fsr2l	equ	0xFD9
  4727                           status	equ	0xFD8
  4728                           
  4729 ;; *************** function _Isr *****************
  4730 ;; Defined at:
  4731 ;;		line 4 in file "interrupt.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;		None
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  search_index    1   39[COMRAM] unsigned char 
  4736 ;;  pixel_index_    1   38[COMRAM] unsigned char 
  4737 ;;  pixel_index_    1   37[COMRAM] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;		None               void
  4740 ;; Registers used:
  4741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1
  4747 ;;      Params:         0       0       0
  4748 ;;      Locals:         3       0       0
  4749 ;;      Temps:         17       0       0
  4750 ;;      Totals:        20       0       0
  4751 ;;Total ram usage:       20 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    4
  4754 ;; This function calls:
  4755 ;;		_Ignite_Detonators
  4756 ;;		_Receive
  4757 ;;		___awdiv
  4758 ;;		i2_Check_Detonators
  4759 ;;		i2_Set_Display
  4760 ;; This function is called by:
  4761 ;;		Interrupt level 2
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	intcode
  4766  000008                     __pintcode:
  4767                           	opt stack 0
  4768  000008                     _Isr:
  4769                           	opt stack 19
  4770                           
  4771                           ;incstack = 0
  4772  000008  823C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4773  00000A  CFFA F018          	movff	pclath,??_Isr+3
  4774  00000E  CFFB F019          	movff	pclatu,??_Isr+4
  4775  000012  CFE9 F01A          	movff	fsr0l,??_Isr+5
  4776  000016  CFEA F01B          	movff	fsr0h,??_Isr+6
  4777  00001A  CFE1 F01C          	movff	fsr1l,??_Isr+7
  4778  00001E  CFE2 F01D          	movff	fsr1h,??_Isr+8
  4779  000022  CFD9 F01E          	movff	fsr2l,??_Isr+9
  4780  000026  CFDA F01F          	movff	fsr2h,??_Isr+10
  4781  00002A  CFF3 F020          	movff	prodl,??_Isr+11
  4782  00002E  CFF4 F021          	movff	prodh,??_Isr+12
  4783  000032  CFF6 F022          	movff	tblptrl,??_Isr+13
  4784  000036  CFF7 F023          	movff	tblptrh,??_Isr+14
  4785  00003A  CFF8 F024          	movff	tblptru,??_Isr+15
  4786  00003E  CFF5 F025          	movff	tablat,??_Isr+16
  4787                           
  4788                           ;interrupt.c: 5: if(PIR1bits.CCP1IF == 1) {
  4789  000042  A49E               	btfss	3998,2,c	;volatile
  4790  000044  D00B               	goto	i2l2660
  4791                           
  4792                           ;interrupt.c: 7: PIR1bits.CCP1IF = 0;
  4793  000046  949E               	bcf	3998,2,c	;volatile
  4794                           
  4795                           ;interrupt.c: 8: T1CONbits.TMR1ON = 1;
  4796  000048  80CD               	bsf	4045,0,c	;volatile
  4797                           
  4798                           ;interrupt.c: 9: T3CONbits.TMR3ON = 0;
  4799  00004A  90B1               	bcf	4017,0,c	;volatile
  4800                           
  4801                           ;interrupt.c: 10: TMR3L = 0;
  4802  00004C  0E00               	movlw	0
  4803  00004E  6EB2               	movwf	4018,c	;volatile
  4804                           
  4805                           ;interrupt.c: 11: TMR3H = 0;
  4806  000050  0E00               	movlw	0
  4807  000052  6EB3               	movwf	4019,c	;volatile
  4808                           
  4809                           ;interrupt.c: 12: current_time++;
  4810  000054  4A2F               	infsnz	_current_time,f,c
  4811  000056  2A30               	incf	_current_time+1,f,c
  4812                           
  4813                           ;interrupt.c: 13: Ignite_Detonators();
  4814  000058  EC8C  F008         	call	_Ignite_Detonators	;wreg free
  4815  00005C                     i2l2660:
  4816                           
  4817                           ;interrupt.c: 14: }
  4818                           ;interrupt.c: 15: if(PIR1bits.TMR1IF == 1) {
  4819  00005C  A09E               	btfss	3998,0,c	;volatile
  4820  00005E  D007               	goto	i2l2666
  4821                           
  4822                           ;interrupt.c: 16: PIR1bits.TMR1IF = 0;
  4823  000060  909E               	bcf	3998,0,c	;volatile
  4824                           
  4825                           ;interrupt.c: 17: T3CONbits.TMR3ON = 1;
  4826  000062  80B1               	bsf	4017,0,c	;volatile
  4827                           
  4828                           ;interrupt.c: 18: T1CONbits.TMR1ON = 0;
  4829  000064  90CD               	bcf	4045,0,c	;volatile
  4830                           
  4831                           ;interrupt.c: 19: TMR1L = 0;
  4832  000066  0E00               	movlw	0
  4833  000068  6ECE               	movwf	4046,c	;volatile
  4834                           
  4835                           ;interrupt.c: 20: TMR1H = 0;
  4836  00006A  0E00               	movlw	0
  4837  00006C  6ECF               	movwf	4047,c	;volatile
  4838  00006E                     i2l2666:
  4839                           
  4840                           ;interrupt.c: 21: }
  4841                           ;interrupt.c: 22: if(PIR1bits.RCIF == 1) {
  4842  00006E  AA9E               	btfss	3998,5,c	;volatile
  4843  000070  D0B4               	goto	i2l592
  4844                           
  4845                           ;interrupt.c: 23: PIR1bits.RCIF = 0;
  4846  000072  9A9E               	bcf	3998,5,c	;volatile
  4847                           
  4848                           ;interrupt.c: 24: if(RCSTAbits.RX9D == 1) {
  4849  000074  A0AB               	btfss	4011,0,c	;volatile
  4850  000076  D016               	goto	i2l579
  4851                           
  4852                           ;interrupt.c: 25: receive_counter = 0;
  4853  000078  0E00               	movlw	0
  4854  00007A  6E33               	movwf	_receive_counter,c
  4855                           
  4856                           ;interrupt.c: 27: received[receive_counter] =
  4857                           ;interrupt.c: 28: Receive();
  4858  00007C  5033               	movf	_receive_counter,w,c
  4859  00007E  0D01               	mullw	1
  4860  000080  0E29               	movlw	low _received
  4861  000082  24F3               	addwf	prodl,w,c
  4862  000084  6ED9               	movwf	fsr2l,c
  4863  000086  0E00               	movlw	high _received
  4864  000088  20F4               	addwfc	prodh,w,c
  4865  00008A  6EDA               	movwf	fsr2h,c
  4866  00008C  EC94  F00B         	call	_Receive	;wreg free
  4867  000090  6EDF               	movwf	indf2,c
  4868                           
  4869                           ;interrupt.c: 29: receive_counter++;
  4870  000092  2A33               	incf	_receive_counter,f,c
  4871                           
  4872                           ;interrupt.c: 31: if(received[0] == 0xAA) {
  4873  000094  0EAA               	movlw	170
  4874  000096  1829               	xorwf	_received,w,c
  4875  000098  A4D8               	btfss	status,2,c
  4876  00009A  D002               	goto	i2l580
  4877                           
  4878                           ;interrupt.c: 32: master_addressed = 1;
  4879  00009C  823B               	bsf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4880                           
  4881                           ;interrupt.c: 33: } else {
  4882  00009E  D090               	goto	i2l2716
  4883  0000A0                     i2l580:
  4884                           
  4885                           ;interrupt.c: 34: master_addressed = 0;
  4886  0000A0  923B               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4887                           
  4888                           ;interrupt.c: 35: }
  4889                           ;interrupt.c: 36: } else if(master_addressed == 1) {
  4890  0000A2  D08E               	goto	i2l2716
  4891  0000A4                     i2l579:
  4892  0000A4  A23B               	btfss	_master_addressed/(0+8),_master_addressed& (0+7),c
  4893  0000A6  D08C               	goto	i2l2716
  4894                           
  4895                           ;interrupt.c: 37: received[receive_counter] =
  4896                           ;interrupt.c: 38: Receive();
  4897  0000A8  5033               	movf	_receive_counter,w,c
  4898  0000AA  0D01               	mullw	1
  4899  0000AC  0E29               	movlw	low _received
  4900  0000AE  24F3               	addwf	prodl,w,c
  4901  0000B0  6ED9               	movwf	fsr2l,c
  4902  0000B2  0E00               	movlw	high _received
  4903  0000B4  20F4               	addwfc	prodh,w,c
  4904  0000B6  6EDA               	movwf	fsr2h,c
  4905  0000B8  EC94  F00B         	call	_Receive	;wreg free
  4906  0000BC  6EDF               	movwf	indf2,c
  4907                           
  4908                           ;interrupt.c: 39: receive_counter++;
  4909  0000BE  2A33               	incf	_receive_counter,f,c
  4910                           
  4911                           ;interrupt.c: 41: if(receive_counter > 5) {
  4912  0000C0  0E05               	movlw	5
  4913  0000C2  6433               	cpfsgt	_receive_counter,c
  4914  0000C4  D07D               	goto	i2l2716
  4915                           
  4916                           ;interrupt.c: 42: receive_counter = 0;
  4917  0000C6  0E00               	movlw	0
  4918  0000C8  6E33               	movwf	_receive_counter,c
  4919                           
  4920                           ;interrupt.c: 43: master_addressed = 0;
  4921  0000CA  923B               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4922                           
  4923                           ;interrupt.c: 45: if(received[2] == 'T') {
  4924  0000CC  0E54               	movlw	84
  4925  0000CE  182B               	xorwf	_received+2,w,c
  4926  0000D0  A4D8               	btfss	status,2,c
  4927  0000D2  D076               	goto	i2l2716
  4928                           
  4929                           ;interrupt.c: 46: unsigned char search_index = 0xFF;
  4930  0000D4  6828               	setf	Isr@search_index,c
  4931                           
  4932                           ;interrupt.c: 47: unsigned char pixel_index_array = 0;
  4933  0000D6  0E00               	movlw	0
  4934  0000D8  6E26               	movwf	Isr@pixel_index_array,c
  4935                           
  4936                           ;interrupt.c: 48: unsigned char pixel_index_bit = 0;
  4937  0000DA  0E00               	movlw	0
  4938  0000DC  6E27               	movwf	Isr@pixel_index_bit,c
  4939                           
  4940                           ;interrupt.c: 49: search_index = (received[1] * 10);
  4941  0000DE  502A               	movf	_received+1,w,c
  4942  0000E0  0D0A               	mullw	10
  4943  0000E2  CFF3 F028          	movff	prodl,Isr@search_index
  4944                           
  4945                           ;interrupt.c: 51: search_index += received[3];
  4946  0000E6  502C               	movf	_received+3,w,c
  4947  0000E8  2628               	addwf	Isr@search_index,f,c
  4948                           
  4949                           ;interrupt.c: 53: pixel_index_array =
  4950                           ;interrupt.c: 54: pin[search_index].led_address / 8;
  4951  0000EA  5028               	movf	Isr@search_index,w,c
  4952  0000EC  0D06               	mullw	6
  4953  0000EE  0E03               	movlw	3
  4954  0000F0  26F3               	addwf	prodl,f,c
  4955  0000F2  0E00               	movlw	0
  4956  0000F4  22F4               	addwfc	prodh,f,c
  4957  0000F6  0E00               	movlw	low _pin
  4958  0000F8  24F3               	addwf	prodl,w,c
  4959  0000FA  6ED9               	movwf	fsr2l,c
  4960  0000FC  0E01               	movlw	high _pin
  4961  0000FE  20F4               	addwfc	prodh,w,c
  4962  000100  6EDA               	movwf	fsr2h,c
  4963  000102  50DF               	movf	indf2,w,c
  4964  000104  6E15               	movwf	??_Isr& (0+255),c
  4965  000106  5015               	movf	??_Isr,w,c
  4966  000108  6E01               	movwf	___awdiv@dividend,c
  4967  00010A  6A02               	clrf	___awdiv@dividend+1,c
  4968  00010C  0E00               	movlw	0
  4969  00010E  6E04               	movwf	___awdiv@divisor+1,c
  4970  000110  0E08               	movlw	8
  4971  000112  6E03               	movwf	___awdiv@divisor,c
  4972  000114  EC0E  F008         	call	___awdiv	;wreg free
  4973  000118  5001               	movf	?___awdiv,w,c
  4974  00011A  6E26               	movwf	Isr@pixel_index_array,c
  4975                           
  4976                           ;interrupt.c: 55: pixel_index_bit =
  4977                           ;interrupt.c: 56: pin[search_index].led_address % 8;
  4978  00011C  5028               	movf	Isr@search_index,w,c
  4979  00011E  0D06               	mullw	6
  4980  000120  0E03               	movlw	3
  4981  000122  26F3               	addwf	prodl,f,c
  4982  000124  0E00               	movlw	0
  4983  000126  22F4               	addwfc	prodh,f,c
  4984  000128  0E00               	movlw	low _pin
  4985  00012A  24F3               	addwf	prodl,w,c
  4986  00012C  6ED9               	movwf	fsr2l,c
  4987  00012E  0E01               	movlw	high _pin
  4988  000130  20F4               	addwfc	prodh,w,c
  4989  000132  6EDA               	movwf	fsr2h,c
  4990  000134  50DF               	movf	indf2,w,c
  4991  000136  0B07               	andlw	7
  4992  000138  6E27               	movwf	Isr@pixel_index_bit,c
  4993                           
  4994                           ;interrupt.c: 57: if(received[4] == '1'){
  4995  00013A  0E31               	movlw	49
  4996  00013C  182D               	xorwf	_received+4,w,c
  4997  00013E  A4D8               	btfss	status,2,c
  4998  000140  D015               	goto	i2l2708
  4999                           
  5000                           ;interrupt.c: 58: pixels[pixel_index_array] |=
  5001                           ;interrupt.c: 59: (1 << pixel_index_bit);
  5002  000142  C027  F015         	movff	Isr@pixel_index_bit,??_Isr
  5003  000146  0E01               	movlw	1
  5004  000148  6E16               	movwf	(??_Isr+1)& (0+255),c
  5005  00014A  2A15               	incf	??_Isr,f,c
  5006  00014C  D002               	goto	i2u189_44
  5007  00014E                     i2u189_45:
  5008  00014E  90D8               	bcf	status,0,c
  5009  000150  3616               	rlcf	??_Isr+1,f,c
  5010  000152                     i2u189_44:
  5011  000152  2E15               	decfsz	??_Isr,f,c
  5012  000154  D7FC               	goto	i2u189_45
  5013  000156  5026               	movf	Isr@pixel_index_array,w,c
  5014  000158  0D01               	mullw	1
  5015  00015A  0E34               	movlw	low _pixels
  5016  00015C  24F3               	addwf	prodl,w,c
  5017  00015E  6ED9               	movwf	fsr2l,c
  5018  000160  0E00               	movlw	high _pixels
  5019  000162  20F4               	addwfc	prodh,w,c
  5020  000164  6EDA               	movwf	fsr2h,c
  5021  000166  5016               	movf	??_Isr+1,w,c
  5022  000168  12DF               	iorwf	indf2,f,c
  5023                           
  5024                           ;interrupt.c: 60: }else if(received[4] == '0') {
  5025  00016A  D01B               	goto	i2l2712
  5026  00016C                     i2l2708:
  5027  00016C  0E30               	movlw	48
  5028  00016E  182D               	xorwf	_received+4,w,c
  5029  000170  A4D8               	btfss	status,2,c
  5030  000172  D017               	goto	i2l2712
  5031                           
  5032                           ;interrupt.c: 61: pixels[pixel_index_array] &=
  5033                           ;interrupt.c: 62: ~(1 << pixel_index_bit);
  5034  000174  C027  F015         	movff	Isr@pixel_index_bit,??_Isr
  5035  000178  0E01               	movlw	1
  5036  00017A  6E16               	movwf	(??_Isr+1)& (0+255),c
  5037  00017C  2A15               	incf	??_Isr,f,c
  5038  00017E  D002               	goto	i2u191_44
  5039  000180                     i2u191_45:
  5040  000180  90D8               	bcf	status,0,c
  5041  000182  3616               	rlcf	??_Isr+1,f,c
  5042  000184                     i2u191_44:
  5043  000184  2E15               	decfsz	??_Isr,f,c
  5044  000186  D7FC               	goto	i2u191_45
  5045  000188  5016               	movf	??_Isr+1,w,c
  5046  00018A  0AFF               	xorlw	255
  5047  00018C  6E17               	movwf	(??_Isr+2)& (0+255),c
  5048  00018E  5026               	movf	Isr@pixel_index_array,w,c
  5049  000190  0D01               	mullw	1
  5050  000192  0E34               	movlw	low _pixels
  5051  000194  24F3               	addwf	prodl,w,c
  5052  000196  6ED9               	movwf	fsr2l,c
  5053  000198  0E00               	movlw	high _pixels
  5054  00019A  20F4               	addwfc	prodh,w,c
  5055  00019C  6EDA               	movwf	fsr2h,c
  5056  00019E  5017               	movf	??_Isr+2,w,c
  5057  0001A0  16DF               	andwf	indf2,f,c
  5058  0001A2                     i2l2712:
  5059                           
  5060                           ;interrupt.c: 63: }
  5061                           ;interrupt.c: 64: if(received[5] == '1') {
  5062  0001A2  0E31               	movlw	49
  5063  0001A4  182E               	xorwf	_received+5,w,c
  5064  0001A6  A4D8               	btfss	status,2,c
  5065  0001A8  D00B               	goto	i2l2716
  5066                           
  5067                           ;interrupt.c: 65: Set_Display('7', 'P', (received[1] + 1));
  5068  0001AA  0E50               	movlw	80
  5069  0001AC  6E11               	movwf	i2Set_Display@information,c
  5070  0001AE  0E01               	movlw	1
  5071  0001B0  242A               	addwf	_received+1,w,c
  5072  0001B2  6E12               	movwf	i2Set_Display@value,c
  5073  0001B4  6A13               	clrf	i2Set_Display@value+1,c
  5074  0001B6  0E00               	movlw	0
  5075  0001B8  2213               	addwfc	i2Set_Display@value+1,f,c
  5076  0001BA  0E37               	movlw	55
  5077  0001BC  EC8A  F009         	call	i2_Set_Display
  5078  0001C0                     i2l2716:
  5079                           
  5080                           ;interrupt.c: 66: }
  5081                           ;interrupt.c: 67: }
  5082                           ;interrupt.c: 68: }
  5083                           ;interrupt.c: 69: }
  5084                           ;interrupt.c: 70: __nop();
  5085  0001C0  F000               	nop	
  5086                           
  5087                           ;interrupt.c: 71: if(check_counter < 30 && testflag == 1) {
  5088  0001C2  0E1E               	movlw	30
  5089  0001C4  6031               	cpfslt	_check_counter,c
  5090  0001C6  D006               	goto	i2l2726
  5091  0001C8  A63B               	btfss	_testflag/(0+8),_testflag& (0+7),c
  5092  0001CA  D004               	goto	i2l2726
  5093                           
  5094                           ;interrupt.c: 72: check_counter++;
  5095  0001CC  2A31               	incf	_check_counter,f,c
  5096                           
  5097                           ;interrupt.c: 73: Check_Detonators();
  5098  0001CE  ECCB  F00A         	call	i2_Check_Detonators	;wreg free
  5099                           
  5100                           ;interrupt.c: 74: }else {
  5101  0001D2  D003               	goto	i2l592
  5102  0001D4                     i2l2726:
  5103                           
  5104                           ;interrupt.c: 75: check_counter = 0;
  5105  0001D4  0E00               	movlw	0
  5106  0001D6  6E31               	movwf	_check_counter,c
  5107                           
  5108                           ;interrupt.c: 76: testflag = 0;
  5109  0001D8  963B               	bcf	_testflag/(0+8),_testflag& (0+7),c
  5110  0001DA                     i2l592:
  5111  0001DA  C025  FFF5         	movff	??_Isr+16,tablat
  5112  0001DE  C024  FFF8         	movff	??_Isr+15,tblptru
  5113  0001E2  C023  FFF7         	movff	??_Isr+14,tblptrh
  5114  0001E6  C022  FFF6         	movff	??_Isr+13,tblptrl
  5115  0001EA  C021  FFF4         	movff	??_Isr+12,prodh
  5116  0001EE  C020  FFF3         	movff	??_Isr+11,prodl
  5117  0001F2  C01F  FFDA         	movff	??_Isr+10,fsr2h
  5118  0001F6  C01E  FFD9         	movff	??_Isr+9,fsr2l
  5119  0001FA  C01D  FFE2         	movff	??_Isr+8,fsr1h
  5120  0001FE  C01C  FFE1         	movff	??_Isr+7,fsr1l
  5121  000202  C01B  FFEA         	movff	??_Isr+6,fsr0h
  5122  000206  C01A  FFE9         	movff	??_Isr+5,fsr0l
  5123  00020A  C019  FFFB         	movff	??_Isr+4,pclatu
  5124  00020E  C018  FFFA         	movff	??_Isr+3,pclath
  5125  000212  923C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5126  000214  0011               	retfie		f
  5127  000216                     __end_of_Isr:
  5128                           	opt stack 0
  5129                           pclatu	equ	0xFFB
  5130                           pclath	equ	0xFFA
  5131                           tblptru	equ	0xFF8
  5132                           tblptrh	equ	0xFF7
  5133                           tblptrl	equ	0xFF6
  5134                           tablat	equ	0xFF5
  5135                           prodh	equ	0xFF4
  5136                           prodl	equ	0xFF3
  5137                           intcon	equ	0xFF2
  5138                           postinc0	equ	0xFEE
  5139                           fsr0h	equ	0xFEA
  5140                           fsr0l	equ	0xFE9
  5141                           wreg	equ	0xFE8
  5142                           postdec1	equ	0xFE5
  5143                           fsr1h	equ	0xFE2
  5144                           fsr1l	equ	0xFE1
  5145                           indf2	equ	0xFDF
  5146                           postinc2	equ	0xFDE
  5147                           postdec2	equ	0xFDD
  5148                           plusw2	equ	0xFDB
  5149                           fsr2h	equ	0xFDA
  5150                           fsr2l	equ	0xFD9
  5151                           status	equ	0xFD8
  5152                           
  5153 ;; *************** function i2_Set_Display *****************
  5154 ;; Defined at:
  5155 ;;		line 138 in file "display.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  type            1    wreg     unsigned char 
  5158 ;;  information     1   16[COMRAM] unsigned char 
  5159 ;;  value           2   17[COMRAM] unsigned int 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  type            1   19[COMRAM] unsigned char 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;		None               void
  5164 ;; Registers used:
  5165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1
  5171 ;;      Params:         3       0       0
  5172 ;;      Locals:         1       0       0
  5173 ;;      Temps:          0       0       0
  5174 ;;      Totals:         4       0       0
  5175 ;;Total ram usage:        4 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    3
  5178 ;; This function calls:
  5179 ;;		i2_Evaluate_Display
  5180 ;;		i2_Evaluate_Signs
  5181 ;;		i2_Write_Display_Byte
  5182 ;; This function is called by:
  5183 ;;		_Isr
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text25
  5188  001314                     __ptext25:
  5189                           	opt stack 0
  5190  001314                     i2_Set_Display:
  5191                           	opt stack 19
  5192                           
  5193                           ;incstack = 0
  5194                           ;i2Set_Display@type stored from wreg
  5195  001314  6E14               	movwf	i2Set_Display@type,c
  5196                           
  5197                           ;display.c: 140: switch (type) {
  5198  001316  D01D               	goto	i2l2632
  5199  001318                     i2l2616:
  5200                           
  5201                           ;display.c: 142: if(information != '-') {
  5202  001318  0E2D               	movlw	45
  5203  00131A  1811               	xorwf	i2Set_Display@information,w,c
  5204  00131C  B4D8               	btfsc	status,2,c
  5205  00131E  D012               	goto	i2l2628
  5206                           
  5207                           ;display.c: 143: signs[0] = value;
  5208  001320  C012  F07B         	movff	i2Set_Display@value,_signs
  5209                           
  5210                           ;display.c: 144: signs[0] += 0x30;
  5211  001324  0E30               	movlw	48
  5212  001326  0100               	movlb	0	; () banked
  5213  001328  277B               	addwf	_signs& (0+255),f,b
  5214                           
  5215                           ; BSR set to: 0
  5216                           ;display.c: 145: signs[1] = '-';
  5217  00132A  0E2D               	movlw	45
  5218  00132C  0100               	movlb	0	; () banked
  5219  00132E  6F7C               	movwf	(_signs+1)& (0+255),b
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;display.c: 146: signs[2] = information;
  5223  001330  C011  F07D         	movff	i2Set_Display@information,_signs+2
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;display.c: 147: Evaluate_Display(sizeof(signs), signs);
  5227  001334  0E7B               	movlw	low _signs
  5228  001336  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5229  001338  0E00               	movlw	high _signs
  5230  00133A  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5231  00133C  0E03               	movlw	3
  5232  00133E  EC2E  F005         	call	i2_Evaluate_Display
  5233                           
  5234                           ;display.c: 148: } else {
  5235  001342  D00C               	goto	i2l2634
  5236  001344                     i2l2628:
  5237                           
  5238                           ;display.c: 149: Evaluate_Signs(value);
  5239  001344  C012  F00E         	movff	i2Set_Display@value,i2Evaluate_Signs@evaluation_value
  5240  001348  C013  F00F         	movff	i2Set_Display@value+1,i2Evaluate_Signs@evaluation_value+1
  5241  00134C  EC27  F009         	call	i2_Evaluate_Signs	;wreg free
  5242                           
  5243                           ;display.c: 155: }
  5244                           
  5245                           ;display.c: 154: break;
  5246                           
  5247                           ;display.c: 152: case 'L':
  5248                           
  5249                           ;display.c: 150: }
  5250                           ;display.c: 151: break;
  5251  001350  D005               	goto	i2l2634
  5252  001352                     i2l2632:
  5253  001352  5014               	movf	i2Set_Display@type,w,c
  5254                           
  5255                           ; Switch size 1, requested type "space"
  5256                           ; Number of cases is 2, Range of values is 55 to 76
  5257                           ; switch strategies available:
  5258                           ; Name         Instructions Cycles
  5259                           ; simple_byte            7     4 (average)
  5260                           ;	Chosen strategy is simple_byte
  5261  001354  0A37               	xorlw	55	; case 55
  5262  001356  B4D8               	btfsc	status,2,c
  5263  001358  D7DF               	goto	i2l2616
  5264  00135A  0A7B               	xorlw	123	; case 76
  5265  00135C                     i2l2634:
  5266                           
  5267                           ;display.c: 156: Write_Display_Byte(pixels);
  5268  00135C  0E34               	movlw	low _pixels
  5269  00135E  6E01               	movwf	i2Write_Display_Byte@write_data,c
  5270  001360  0E00               	movlw	high _pixels
  5271  001362  6E02               	movwf	i2Write_Display_Byte@write_data+1,c
  5272  001364  EC4D  F00A         	call	i2_Write_Display_Byte	;wreg free
  5273  001368  0012               	return		;funcret
  5274  00136A                     __end_ofi2_Set_Display:
  5275                           	opt stack 0
  5276                           pclatu	equ	0xFFB
  5277                           pclath	equ	0xFFA
  5278                           tblptru	equ	0xFF8
  5279                           tblptrh	equ	0xFF7
  5280                           tblptrl	equ	0xFF6
  5281                           tablat	equ	0xFF5
  5282                           prodh	equ	0xFF4
  5283                           prodl	equ	0xFF3
  5284                           intcon	equ	0xFF2
  5285                           postinc0	equ	0xFEE
  5286                           fsr0h	equ	0xFEA
  5287                           fsr0l	equ	0xFE9
  5288                           wreg	equ	0xFE8
  5289                           postdec1	equ	0xFE5
  5290                           fsr1h	equ	0xFE2
  5291                           fsr1l	equ	0xFE1
  5292                           indf2	equ	0xFDF
  5293                           postinc2	equ	0xFDE
  5294                           postdec2	equ	0xFDD
  5295                           plusw2	equ	0xFDB
  5296                           fsr2h	equ	0xFDA
  5297                           fsr2l	equ	0xFD9
  5298                           status	equ	0xFD8
  5299                           
  5300 ;; *************** function i2_Write_Display_Byte *****************
  5301 ;; Defined at:
  5302 ;;		line 46 in file "communication.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  write_data      2    0[COMRAM] PTR unsigned char 
  5305 ;;		 -> pixels(7), 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  Write_Displa    1    6[COMRAM] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;		None               void
  5310 ;; Registers used:
  5311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1
  5317 ;;      Params:         2       0       0
  5318 ;;      Locals:         1       0       0
  5319 ;;      Temps:          4       0       0
  5320 ;;      Totals:         7       0       0
  5321 ;;Total ram usage:        7 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		i2_Set_Display
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           
  5330                           	psect	text26
  5331  00149A                     __ptext26:
  5332                           	opt stack 0
  5333  00149A                     i2_Write_Display_Byte:
  5334                           	opt stack 21
  5335                           
  5336                           ;communication.c: 47: for(unsigned char counter = sizeof(pixels); counter > 0;
  5337                           
  5338                           ;incstack = 0
  5339  00149A  0E07               	movlw	7
  5340  00149C  6E07               	movwf	i2Write_Display_Byte@counter,c
  5341  00149E                     
  5342                           ;communication.c: 48: counter--) {
  5343  00149E  5007               	movf	i2Write_Display_Byte@counter,w,c
  5344  0014A0  B4D8               	btfsc	status,2,c
  5345  0014A2  0012               	return	
  5346                           
  5347                           ;communication.c: 49: if(SSP1IF = 1) {
  5348  0014A4  869E               	bsf	3998,3,c	;volatile
  5349  0014A6  B69E               	btfsc	3998,3,c	;volatile
  5350                           
  5351                           ;communication.c: 50: SSP1IF = 0;
  5352  0014A8  969E               	bcf	3998,3,c	;volatile
  5353                           
  5354                           ;communication.c: 51: }
  5355                           ;communication.c: 52: SSP1BUF = write_data[counter - 1];
  5356  0014AA  0EFF               	movlw	255
  5357  0014AC  6E03               	movwf	??i2_Write_Display_Byte& (0+255),c
  5358  0014AE  0EFF               	movlw	255
  5359  0014B0  6E04               	movwf	(??i2_Write_Display_Byte+1)& (0+255),c
  5360  0014B2  5007               	movf	i2Write_Display_Byte@counter,w,c
  5361  0014B4  6E05               	movwf	(??i2_Write_Display_Byte+2)& (0+255),c
  5362  0014B6  6A06               	clrf	(??i2_Write_Display_Byte+3)& (0+255),c
  5363  0014B8  5003               	movf	??i2_Write_Display_Byte,w,c
  5364  0014BA  2605               	addwf	??i2_Write_Display_Byte+2,f,c
  5365  0014BC  5004               	movf	??i2_Write_Display_Byte+1,w,c
  5366  0014BE  2206               	addwfc	??i2_Write_Display_Byte+3,f,c
  5367  0014C0  5005               	movf	??i2_Write_Display_Byte+2,w,c
  5368  0014C2  2401               	addwf	i2Write_Display_Byte@write_data,w,c
  5369  0014C4  6ED9               	movwf	fsr2l,c
  5370  0014C6  5006               	movf	??i2_Write_Display_Byte+3,w,c
  5371  0014C8  2002               	addwfc	i2Write_Display_Byte@write_data+1,w,c
  5372  0014CA  6EDA               	movwf	fsr2h,c
  5373  0014CC  50DF               	movf	indf2,w,c
  5374  0014CE  6EC9               	movwf	4041,c	;volatile
  5375  0014D0                     i2l516:
  5376  0014D0  A69E               	btfss	3998,3,c	;volatile
  5377  0014D2  D7FE               	goto	i2l516
  5378                           
  5379                           ;communication.c: 54: SSP1IF = 0;
  5380  0014D4  969E               	bcf	3998,3,c	;volatile
  5381                           
  5382                           ;communication.c: 55: PORTCbits.RC0 = 0;
  5383  0014D6  9082               	bcf	3970,0,c	;volatile
  5384                           
  5385                           ;communication.c: 56: PORTCbits.RC0 = 1;
  5386  0014D8  8082               	bsf	3970,0,c	;volatile
  5387                           
  5388                           ;communication.c: 57: PORTCbits.RC0 = 0;
  5389  0014DA  9082               	bcf	3970,0,c	;volatile
  5390  0014DC  0607               	decf	i2Write_Display_Byte@counter,f,c
  5391  0014DE  D7DF               	goto	L4
  5392  0014E0                     __end_ofi2_Write_Display_Byte:
  5393                           	opt stack 0
  5394                           pclatu	equ	0xFFB
  5395                           pclath	equ	0xFFA
  5396                           tblptru	equ	0xFF8
  5397                           tblptrh	equ	0xFF7
  5398                           tblptrl	equ	0xFF6
  5399                           tablat	equ	0xFF5
  5400                           prodh	equ	0xFF4
  5401                           prodl	equ	0xFF3
  5402                           intcon	equ	0xFF2
  5403                           postinc0	equ	0xFEE
  5404                           fsr0h	equ	0xFEA
  5405                           fsr0l	equ	0xFE9
  5406                           wreg	equ	0xFE8
  5407                           postdec1	equ	0xFE5
  5408                           fsr1h	equ	0xFE2
  5409                           fsr1l	equ	0xFE1
  5410                           indf2	equ	0xFDF
  5411                           postinc2	equ	0xFDE
  5412                           postdec2	equ	0xFDD
  5413                           plusw2	equ	0xFDB
  5414                           fsr2h	equ	0xFDA
  5415                           fsr2l	equ	0xFD9
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function i2_Evaluate_Signs *****************
  5419 ;; Defined at:
  5420 ;;		line 118 in file "display.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;  evaluation_v    2   13[COMRAM] unsigned int 
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  Evaluate_Sig    1   15[COMRAM] unsigned char 
  5425 ;; Return value:  Size  Location     Type
  5426 ;;		None               void
  5427 ;; Registers used:
  5428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1
  5434 ;;      Params:         2       0       0
  5435 ;;      Locals:         1       0       0
  5436 ;;      Temps:          0       0       0
  5437 ;;      Totals:         3       0       0
  5438 ;;Total ram usage:        3 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    2
  5441 ;; This function calls:
  5442 ;;		i2_Evaluate_Display
  5443 ;;		i2___lwmod
  5444 ;; This function is called by:
  5445 ;;		i2_Set_Display
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text27
  5450  00124E                     __ptext27:
  5451                           	opt stack 0
  5452  00124E                     i2_Evaluate_Signs:
  5453                           	opt stack 19
  5454                           
  5455                           ;display.c: 119: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  5456                           
  5457                           ;incstack = 0
  5458  00124E  0E00               	movlw	0
  5459  001250  6E10               	movwf	i2Evaluate_Signs@valuecounter,c
  5460  001252                     i2l2348:
  5461                           
  5462                           ;display.c: 120: valuecounter++) {
  5463  001252  0E02               	movlw	2
  5464  001254  6410               	cpfsgt	i2Evaluate_Signs@valuecounter,c
  5465  001256  D001               	goto	i2l2352
  5466  001258  D023               	goto	i2l430
  5467  00125A                     i2l2352:
  5468                           
  5469                           ;display.c: 121: signs[valuecounter] = evaluation_value % 10;
  5470  00125A  5010               	movf	i2Evaluate_Signs@valuecounter,w,c
  5471  00125C  0D01               	mullw	1
  5472  00125E  0E7B               	movlw	low _signs
  5473  001260  24F3               	addwf	prodl,w,c
  5474  001262  6ED9               	movwf	fsr2l,c
  5475  001264  0E00               	movlw	high _signs
  5476  001266  20F4               	addwfc	prodh,w,c
  5477  001268  6EDA               	movwf	fsr2h,c
  5478  00126A  C00E  F001         	movff	i2Evaluate_Signs@evaluation_value,i2___lwmod@dividend
  5479  00126E  C00F  F002         	movff	i2Evaluate_Signs@evaluation_value+1,i2___lwmod@dividend+1
  5480  001272  0E00               	movlw	0
  5481  001274  6E04               	movwf	i2___lwmod@divisor+1,c
  5482  001276  0E0A               	movlw	10
  5483  001278  6E03               	movwf	i2___lwmod@divisor,c
  5484  00127A  EC70  F00A         	call	i2___lwmod	;wreg free
  5485  00127E  5001               	movf	?i2___lwmod,w,c
  5486  001280  6EDF               	movwf	indf2,c
  5487                           
  5488                           ;display.c: 122: signs[valuecounter] += 0x30;
  5489  001282  5010               	movf	i2Evaluate_Signs@valuecounter,w,c
  5490  001284  0D01               	mullw	1
  5491  001286  0E7B               	movlw	low _signs
  5492  001288  24F3               	addwf	prodl,w,c
  5493  00128A  6ED9               	movwf	fsr2l,c
  5494  00128C  0E00               	movlw	high _signs
  5495  00128E  20F4               	addwfc	prodh,w,c
  5496  001290  6EDA               	movwf	fsr2h,c
  5497  001292  0E30               	movlw	48
  5498  001294  26DF               	addwf	indf2,f,c
  5499                           
  5500                           ;display.c: 123: evaluation_value >>= 1;
  5501  001296  90D8               	bcf	status,0,c
  5502  001298  320F               	rrcf	i2Evaluate_Signs@evaluation_value+1,f,c
  5503  00129A  320E               	rrcf	i2Evaluate_Signs@evaluation_value,f,c
  5504  00129C  2A10               	incf	i2Evaluate_Signs@valuecounter,f,c
  5505  00129E  D7D9               	goto	i2l2348
  5506  0012A0                     i2l430:
  5507                           
  5508                           ;display.c: 124: }
  5509                           ;display.c: 125: __nop();
  5510  0012A0  F000               	nop	
  5511                           
  5512                           ;display.c: 126: Evaluate_Display(sizeof(signs), signs);
  5513  0012A2  0E7B               	movlw	low _signs
  5514  0012A4  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5515  0012A6  0E00               	movlw	high _signs
  5516  0012A8  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5517  0012AA  0E03               	movlw	3
  5518  0012AC  EC2E  F005         	call	i2_Evaluate_Display
  5519  0012B0  0012               	return		;funcret
  5520  0012B2                     __end_ofi2_Evaluate_Signs:
  5521                           	opt stack 0
  5522                           pclatu	equ	0xFFB
  5523                           pclath	equ	0xFFA
  5524                           tblptru	equ	0xFF8
  5525                           tblptrh	equ	0xFF7
  5526                           tblptrl	equ	0xFF6
  5527                           tablat	equ	0xFF5
  5528                           prodh	equ	0xFF4
  5529                           prodl	equ	0xFF3
  5530                           intcon	equ	0xFF2
  5531                           postinc0	equ	0xFEE
  5532                           fsr0h	equ	0xFEA
  5533                           fsr0l	equ	0xFE9
  5534                           wreg	equ	0xFE8
  5535                           postdec1	equ	0xFE5
  5536                           fsr1h	equ	0xFE2
  5537                           fsr1l	equ	0xFE1
  5538                           indf2	equ	0xFDF
  5539                           postinc2	equ	0xFDE
  5540                           postdec2	equ	0xFDD
  5541                           plusw2	equ	0xFDB
  5542                           fsr2h	equ	0xFDA
  5543                           fsr2l	equ	0xFD9
  5544                           status	equ	0xFD8
  5545                           
  5546 ;; *************** function i2___lwmod *****************
  5547 ;; Defined at:
  5548 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5549 ;; Parameters:    Size  Location     Type
  5550 ;;  dividend        2    0[COMRAM] unsigned int 
  5551 ;;  divisor         2    2[COMRAM] unsigned int 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  __lwmod         1    4[COMRAM] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  2    0[COMRAM] unsigned int 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMRAM   BANK0   BANK1
  5563 ;;      Params:         4       0       0
  5564 ;;      Locals:         1       0       0
  5565 ;;      Temps:          0       0       0
  5566 ;;      Totals:         5       0       0
  5567 ;;Total ram usage:        5 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		i2_Evaluate_Signs
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text28
  5577  0014E0                     __ptext28:
  5578                           	opt stack 0
  5579  0014E0                     i2___lwmod:
  5580                           	opt stack 20
  5581                           
  5582                           ;incstack = 0
  5583  0014E0  5003               	movf	i2___lwmod@divisor,w,c
  5584  0014E2  1004               	iorwf	i2___lwmod@divisor+1,w,c
  5585  0014E4  B4D8               	btfsc	status,2,c
  5586  0014E6  D018               	goto	i2l1005
  5587  0014E8  0E01               	movlw	1
  5588  0014EA  6E05               	movwf	i2___lwmod@counter,c
  5589  0014EC  D004               	goto	i2l2302
  5590  0014EE                     i2l2300:
  5591  0014EE  90D8               	bcf	status,0,c
  5592  0014F0  3603               	rlcf	i2___lwmod@divisor,f,c
  5593  0014F2  3604               	rlcf	i2___lwmod@divisor+1,f,c
  5594  0014F4  2A05               	incf	i2___lwmod@counter,f,c
  5595  0014F6                     i2l2302:
  5596  0014F6  AE04               	btfss	i2___lwmod@divisor+1,7,c
  5597  0014F8  D7FA               	goto	i2l2300
  5598  0014FA                     i2l2304:
  5599  0014FA  5003               	movf	i2___lwmod@divisor,w,c
  5600  0014FC  5C01               	subwf	i2___lwmod@dividend,w,c
  5601  0014FE  5004               	movf	i2___lwmod@divisor+1,w,c
  5602  001500  5802               	subwfb	i2___lwmod@dividend+1,w,c
  5603  001502  A0D8               	btfss	status,0,c
  5604  001504  D004               	goto	i2l2308
  5605  001506  5003               	movf	i2___lwmod@divisor,w,c
  5606  001508  5E01               	subwf	i2___lwmod@dividend,f,c
  5607  00150A  5004               	movf	i2___lwmod@divisor+1,w,c
  5608  00150C  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  5609  00150E                     i2l2308:
  5610  00150E  90D8               	bcf	status,0,c
  5611  001510  3204               	rrcf	i2___lwmod@divisor+1,f,c
  5612  001512  3203               	rrcf	i2___lwmod@divisor,f,c
  5613  001514  2E05               	decfsz	i2___lwmod@counter,f,c
  5614  001516  D7F1               	goto	i2l2304
  5615  001518                     i2l1005:
  5616  001518  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  5617  00151C  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  5618  001520  0012               	return		;funcret
  5619  001522                     __end_ofi2___lwmod:
  5620                           	opt stack 0
  5621                           pclatu	equ	0xFFB
  5622                           pclath	equ	0xFFA
  5623                           tblptru	equ	0xFF8
  5624                           tblptrh	equ	0xFF7
  5625                           tblptrl	equ	0xFF6
  5626                           tablat	equ	0xFF5
  5627                           prodh	equ	0xFF4
  5628                           prodl	equ	0xFF3
  5629                           intcon	equ	0xFF2
  5630                           postinc0	equ	0xFEE
  5631                           fsr0h	equ	0xFEA
  5632                           fsr0l	equ	0xFE9
  5633                           wreg	equ	0xFE8
  5634                           postdec1	equ	0xFE5
  5635                           fsr1h	equ	0xFE2
  5636                           fsr1l	equ	0xFE1
  5637                           indf2	equ	0xFDF
  5638                           postinc2	equ	0xFDE
  5639                           postdec2	equ	0xFDD
  5640                           plusw2	equ	0xFDB
  5641                           fsr2h	equ	0xFDA
  5642                           fsr2l	equ	0xFD9
  5643                           status	equ	0xFD8
  5644                           
  5645 ;; *************** function i2_Evaluate_Display *****************
  5646 ;; Defined at:
  5647 ;;		line 52 in file "display.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  size            1    wreg     unsigned char 
  5650 ;;  evaluate        2    8[COMRAM] PTR const unsigned char 
  5651 ;;		 -> signs(3), STR_2(4), STR_1(4), 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;  size            1   12[COMRAM] unsigned char 
  5654 ;; Return value:  Size  Location     Type
  5655 ;;		None               void
  5656 ;; Registers used:
  5657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1
  5663 ;;      Params:         2       0       0
  5664 ;;      Locals:         1       0       0
  5665 ;;      Temps:          2       0       0
  5666 ;;      Totals:         5       0       0
  5667 ;;Total ram usage:        5 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    1
  5670 ;; This function calls:
  5671 ;;		i2_Set_Bits
  5672 ;; This function is called by:
  5673 ;;		i2_Evaluate_Signs
  5674 ;;		i2_Set_Display
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text29
  5679  000A5C                     __ptext29:
  5680                           	opt stack 0
  5681  000A5C                     i2_Evaluate_Display:
  5682                           	opt stack 19
  5683                           
  5684                           ;incstack = 0
  5685                           ;i2Evaluate_Display@size stored from wreg
  5686  000A5C  6E0D               	movwf	i2Evaluate_Display@size,c
  5687                           
  5688                           ;display.c: 53: for(display_counter = 0; display_counter < size;
  5689  000A5E  0E00               	movlw	0
  5690  000A60  6E32               	movwf	_display_counter,c
  5691                           
  5692                           ;display.c: 54: display_counter++) {
  5693  000A62  D124               	goto	i2l2294
  5694  000A64                     i2l2254:
  5695                           
  5696                           ;display.c: 57: Set_Bits("ABCDEF");
  5697  000A64  0E23               	movlw	low STR_3
  5698  000A66  6E01               	movwf	i2Set_Bits@bits,c
  5699  000A68  0E02               	movlw	high STR_3
  5700  000A6A  6E02               	movwf	i2Set_Bits@bits+1,c
  5701  000A6C  5001               	movf	i2Set_Bits@bits,w,c
  5702  000A6E  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5703  000A70  A4D8               	btfss	status,2,c
  5704  000A72  0E00               	movlw	low (__mediumconst shr (0+16))
  5705  000A74  6E03               	movwf	i2Set_Bits@bits+2,c
  5706  000A76  EC57  F007         	call	i2_Set_Bits	;wreg free
  5707                           
  5708                           ;display.c: 58: break;
  5709  000A7A  D117               	goto	i2l2292
  5710  000A7C                     i2l2256:
  5711                           
  5712                           ;display.c: 60: Set_Bits("BC");
  5713  000A7C  0E63               	movlw	low (STR_10+1)
  5714  000A7E  6E01               	movwf	i2Set_Bits@bits,c
  5715  000A80  0E02               	movlw	high (STR_10+1)
  5716  000A82  6E02               	movwf	i2Set_Bits@bits+1,c
  5717  000A84  5001               	movf	i2Set_Bits@bits,w,c
  5718  000A86  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5719  000A88  A4D8               	btfss	status,2,c
  5720  000A8A  0E00               	movlw	low (__mediumconst shr (0+16))
  5721  000A8C  6E03               	movwf	i2Set_Bits@bits+2,c
  5722  000A8E  EC57  F007         	call	i2_Set_Bits	;wreg free
  5723                           
  5724                           ;display.c: 61: break;
  5725  000A92  D10B               	goto	i2l2292
  5726  000A94                     i2l2258:
  5727                           
  5728                           ;display.c: 63: Set_Bits("ABDEG");
  5729  000A94  0E45               	movlw	low STR_5
  5730  000A96  6E01               	movwf	i2Set_Bits@bits,c
  5731  000A98  0E02               	movlw	high STR_5
  5732  000A9A  6E02               	movwf	i2Set_Bits@bits+1,c
  5733  000A9C  5001               	movf	i2Set_Bits@bits,w,c
  5734  000A9E  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5735  000AA0  A4D8               	btfss	status,2,c
  5736  000AA2  0E00               	movlw	low (__mediumconst shr (0+16))
  5737  000AA4  6E03               	movwf	i2Set_Bits@bits+2,c
  5738  000AA6  EC57  F007         	call	i2_Set_Bits	;wreg free
  5739                           
  5740                           ;display.c: 64: break;
  5741  000AAA  D0FF               	goto	i2l2292
  5742  000AAC                     i2l2260:
  5743                           
  5744                           ;display.c: 66: Set_Bits("ABCDG");
  5745  000AAC  0E3F               	movlw	low STR_6
  5746  000AAE  6E01               	movwf	i2Set_Bits@bits,c
  5747  000AB0  0E02               	movlw	high STR_6
  5748  000AB2  6E02               	movwf	i2Set_Bits@bits+1,c
  5749  000AB4  5001               	movf	i2Set_Bits@bits,w,c
  5750  000AB6  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5751  000AB8  A4D8               	btfss	status,2,c
  5752  000ABA  0E00               	movlw	low (__mediumconst shr (0+16))
  5753  000ABC  6E03               	movwf	i2Set_Bits@bits+2,c
  5754  000ABE  EC57  F007         	call	i2_Set_Bits	;wreg free
  5755                           
  5756                           ;display.c: 67: break;
  5757  000AC2  D0F3               	goto	i2l2292
  5758  000AC4                     i2l2262:
  5759                           
  5760                           ;display.c: 69: Set_Bits("BCFG");
  5761  000AC4  0E5D               	movlw	low STR_7
  5762  000AC6  6E01               	movwf	i2Set_Bits@bits,c
  5763  000AC8  0E02               	movlw	high STR_7
  5764  000ACA  6E02               	movwf	i2Set_Bits@bits+1,c
  5765  000ACC  5001               	movf	i2Set_Bits@bits,w,c
  5766  000ACE  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5767  000AD0  A4D8               	btfss	status,2,c
  5768  000AD2  0E00               	movlw	low (__mediumconst shr (0+16))
  5769  000AD4  6E03               	movwf	i2Set_Bits@bits+2,c
  5770  000AD6  EC57  F007         	call	i2_Set_Bits	;wreg free
  5771                           
  5772                           ;display.c: 70: break;
  5773  000ADA  D0E7               	goto	i2l2292
  5774  000ADC                     i2l2264:
  5775                           
  5776                           ;display.c: 72: Set_Bits("ACDFG");
  5777  000ADC  0E4B               	movlw	low STR_8
  5778  000ADE  6E01               	movwf	i2Set_Bits@bits,c
  5779  000AE0  0E02               	movlw	high STR_8
  5780  000AE2  6E02               	movwf	i2Set_Bits@bits+1,c
  5781  000AE4  5001               	movf	i2Set_Bits@bits,w,c
  5782  000AE6  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5783  000AE8  A4D8               	btfss	status,2,c
  5784  000AEA  0E00               	movlw	low (__mediumconst shr (0+16))
  5785  000AEC  6E03               	movwf	i2Set_Bits@bits+2,c
  5786  000AEE  EC57  F007         	call	i2_Set_Bits	;wreg free
  5787                           
  5788                           ;display.c: 73: break;
  5789  000AF2  D0DB               	goto	i2l2292
  5790  000AF4                     i2l2266:
  5791                           
  5792                           ;display.c: 75: Set_Bits("ACDEFG");
  5793  000AF4  0E38               	movlw	low STR_9
  5794  000AF6  6E01               	movwf	i2Set_Bits@bits,c
  5795  000AF8  0E02               	movlw	high STR_9
  5796  000AFA  6E02               	movwf	i2Set_Bits@bits+1,c
  5797  000AFC  5001               	movf	i2Set_Bits@bits,w,c
  5798  000AFE  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5799  000B00  A4D8               	btfss	status,2,c
  5800  000B02  0E00               	movlw	low (__mediumconst shr (0+16))
  5801  000B04  6E03               	movwf	i2Set_Bits@bits+2,c
  5802  000B06  EC57  F007         	call	i2_Set_Bits	;wreg free
  5803                           
  5804                           ;display.c: 76: break;
  5805  000B0A  D0CF               	goto	i2l2292
  5806  000B0C                     i2l2268:
  5807                           
  5808                           ;display.c: 78: Set_Bits("ABC");
  5809  000B0C  0E62               	movlw	low STR_10
  5810  000B0E  6E01               	movwf	i2Set_Bits@bits,c
  5811  000B10  0E02               	movlw	high STR_10
  5812  000B12  6E02               	movwf	i2Set_Bits@bits+1,c
  5813  000B14  5001               	movf	i2Set_Bits@bits,w,c
  5814  000B16  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5815  000B18  A4D8               	btfss	status,2,c
  5816  000B1A  0E00               	movlw	low (__mediumconst shr (0+16))
  5817  000B1C  6E03               	movwf	i2Set_Bits@bits+2,c
  5818  000B1E  EC57  F007         	call	i2_Set_Bits	;wreg free
  5819                           
  5820                           ;display.c: 79: break;
  5821  000B22  D0C3               	goto	i2l2292
  5822  000B24                     i2l2270:
  5823                           
  5824                           ;display.c: 81: Set_Bits("ABCDEFG");
  5825  000B24  0E1B               	movlw	low STR_11
  5826  000B26  6E01               	movwf	i2Set_Bits@bits,c
  5827  000B28  0E02               	movlw	high STR_11
  5828  000B2A  6E02               	movwf	i2Set_Bits@bits+1,c
  5829  000B2C  5001               	movf	i2Set_Bits@bits,w,c
  5830  000B2E  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5831  000B30  A4D8               	btfss	status,2,c
  5832  000B32  0E00               	movlw	low (__mediumconst shr (0+16))
  5833  000B34  6E03               	movwf	i2Set_Bits@bits+2,c
  5834  000B36  EC57  F007         	call	i2_Set_Bits	;wreg free
  5835                           
  5836                           ;display.c: 82: break;
  5837  000B3A  D0B7               	goto	i2l2292
  5838  000B3C                     i2l2272:
  5839                           
  5840                           ;display.c: 84: Set_Bits("ABCDFG");
  5841  000B3C  0E2A               	movlw	low STR_12
  5842  000B3E  6E01               	movwf	i2Set_Bits@bits,c
  5843  000B40  0E02               	movlw	high STR_12
  5844  000B42  6E02               	movwf	i2Set_Bits@bits+1,c
  5845  000B44  5001               	movf	i2Set_Bits@bits,w,c
  5846  000B46  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5847  000B48  A4D8               	btfss	status,2,c
  5848  000B4A  0E00               	movlw	low (__mediumconst shr (0+16))
  5849  000B4C  6E03               	movwf	i2Set_Bits@bits+2,c
  5850  000B4E  EC57  F007         	call	i2_Set_Bits	;wreg free
  5851                           
  5852                           ;display.c: 85: break;
  5853  000B52  D0AB               	goto	i2l2292
  5854  000B54                     i2l2274:
  5855                           
  5856                           ;display.c: 87: Set_Bits("ABCEFG");
  5857  000B54  0E31               	movlw	low STR_13
  5858  000B56  6E01               	movwf	i2Set_Bits@bits,c
  5859  000B58  0E02               	movlw	high STR_13
  5860  000B5A  6E02               	movwf	i2Set_Bits@bits+1,c
  5861  000B5C  5001               	movf	i2Set_Bits@bits,w,c
  5862  000B5E  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5863  000B60  A4D8               	btfss	status,2,c
  5864  000B62  0E00               	movlw	low (__mediumconst shr (0+16))
  5865  000B64  6E03               	movwf	i2Set_Bits@bits+2,c
  5866  000B66  EC57  F007         	call	i2_Set_Bits	;wreg free
  5867                           
  5868                           ;display.c: 88: break;
  5869  000B6A  D09F               	goto	i2l2292
  5870  000B6C                     i2l2276:
  5871                           
  5872                           ;display.c: 90: Set_Bits("ABCDEF");
  5873  000B6C  0E23               	movlw	low STR_3
  5874  000B6E  6E01               	movwf	i2Set_Bits@bits,c
  5875  000B70  0E02               	movlw	high STR_3
  5876  000B72  6E02               	movwf	i2Set_Bits@bits+1,c
  5877  000B74  5001               	movf	i2Set_Bits@bits,w,c
  5878  000B76  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5879  000B78  A4D8               	btfss	status,2,c
  5880  000B7A  0E00               	movlw	low (__mediumconst shr (0+16))
  5881  000B7C  6E03               	movwf	i2Set_Bits@bits+2,c
  5882  000B7E  EC57  F007         	call	i2_Set_Bits	;wreg free
  5883                           
  5884                           ;display.c: 91: break;
  5885  000B82  D093               	goto	i2l2292
  5886  000B84                     i2l2278:
  5887                           
  5888                           ;display.c: 93: Set_Bits("ADEFG");
  5889  000B84  0E57               	movlw	low STR_15
  5890  000B86  6E01               	movwf	i2Set_Bits@bits,c
  5891  000B88  0E02               	movlw	high STR_15
  5892  000B8A  6E02               	movwf	i2Set_Bits@bits+1,c
  5893  000B8C  5001               	movf	i2Set_Bits@bits,w,c
  5894  000B8E  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5895  000B90  A4D8               	btfss	status,2,c
  5896  000B92  0E00               	movlw	low (__mediumconst shr (0+16))
  5897  000B94  6E03               	movwf	i2Set_Bits@bits+2,c
  5898  000B96  EC57  F007         	call	i2_Set_Bits	;wreg free
  5899                           
  5900                           ;display.c: 94: break;
  5901  000B9A  D087               	goto	i2l2292
  5902  000B9C                     i2l2280:
  5903                           
  5904                           ;display.c: 96: Set_Bits("DEF");
  5905  000B9C  0E26               	movlw	low (STR_3+3)
  5906  000B9E  6E01               	movwf	i2Set_Bits@bits,c
  5907  000BA0  0E02               	movlw	high (STR_3+3)
  5908  000BA2  6E02               	movwf	i2Set_Bits@bits+1,c
  5909  000BA4  5001               	movf	i2Set_Bits@bits,w,c
  5910  000BA6  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5911  000BA8  A4D8               	btfss	status,2,c
  5912  000BAA  0E00               	movlw	low (__mediumconst shr (0+16))
  5913  000BAC  6E03               	movwf	i2Set_Bits@bits+2,c
  5914  000BAE  EC57  F007         	call	i2_Set_Bits	;wreg free
  5915                           
  5916                           ;display.c: 97: break;
  5917  000BB2  D07B               	goto	i2l2292
  5918  000BB4                     i2l2282:
  5919                           
  5920                           ;display.c: 99: Set_Bits("ABCDEF");
  5921  000BB4  0E23               	movlw	low STR_3
  5922  000BB6  6E01               	movwf	i2Set_Bits@bits,c
  5923  000BB8  0E02               	movlw	high STR_3
  5924  000BBA  6E02               	movwf	i2Set_Bits@bits+1,c
  5925  000BBC  5001               	movf	i2Set_Bits@bits,w,c
  5926  000BBE  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5927  000BC0  A4D8               	btfss	status,2,c
  5928  000BC2  0E00               	movlw	low (__mediumconst shr (0+16))
  5929  000BC4  6E03               	movwf	i2Set_Bits@bits+2,c
  5930  000BC6  EC57  F007         	call	i2_Set_Bits	;wreg free
  5931                           
  5932                           ;display.c: 100: break;
  5933  000BCA  D06F               	goto	i2l2292
  5934  000BCC                     i2l2284:
  5935                           
  5936                           ;display.c: 102: Set_Bits("ABEFG");
  5937  000BCC  0E51               	movlw	low STR_18
  5938  000BCE  6E01               	movwf	i2Set_Bits@bits,c
  5939  000BD0  0E02               	movlw	high STR_18
  5940  000BD2  6E02               	movwf	i2Set_Bits@bits+1,c
  5941  000BD4  5001               	movf	i2Set_Bits@bits,w,c
  5942  000BD6  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5943  000BD8  A4D8               	btfss	status,2,c
  5944  000BDA  0E00               	movlw	low (__mediumconst shr (0+16))
  5945  000BDC  6E03               	movwf	i2Set_Bits@bits+2,c
  5946  000BDE  EC57  F007         	call	i2_Set_Bits	;wreg free
  5947                           
  5948                           ;display.c: 103: break;
  5949  000BE2  D063               	goto	i2l2292
  5950  000BE4                     i2l2286:
  5951                           
  5952                           ;display.c: 105: Set_Bits("G");
  5953  000BE4  0E43               	movlw	low (STR_6+4)
  5954  000BE6  6E01               	movwf	i2Set_Bits@bits,c
  5955  000BE8  0E02               	movlw	high (STR_6+4)
  5956  000BEA  6E02               	movwf	i2Set_Bits@bits+1,c
  5957  000BEC  5001               	movf	i2Set_Bits@bits,w,c
  5958  000BEE  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5959  000BF0  A4D8               	btfss	status,2,c
  5960  000BF2  0E00               	movlw	low (__mediumconst shr (0+16))
  5961  000BF4  6E03               	movwf	i2Set_Bits@bits+2,c
  5962  000BF6  EC57  F007         	call	i2_Set_Bits	;wreg free
  5963                           
  5964                           ;display.c: 106: break;
  5965  000BFA  D057               	goto	i2l2292
  5966  000BFC                     i2l2288:
  5967                           
  5968                           ;display.c: 108: Set_Bits(0);
  5969  000BFC  0E00               	movlw	0
  5970  000BFE  6E01               	movwf	i2Set_Bits@bits,c
  5971  000C00  0E00               	movlw	0
  5972  000C02  6E02               	movwf	i2Set_Bits@bits+1,c
  5973  000C04  0E00               	movlw	0
  5974  000C06  6E03               	movwf	i2Set_Bits@bits+2,c
  5975  000C08  EC57  F007         	call	i2_Set_Bits	;wreg free
  5976                           
  5977                           ;display.c: 109: }
  5978  000C0C  D04E               	goto	i2l2292
  5979  000C0E                     i2l2290:
  5980  000C0E  5032               	movf	_display_counter,w,c
  5981  000C10  0D01               	mullw	1
  5982  000C12  C009  F00B         	movff	i2Evaluate_Display@evaluate,??i2_Evaluate_Display
  5983  000C16  C00A  F00C         	movff	i2Evaluate_Display@evaluate+1,??i2_Evaluate_Display+1
  5984  000C1A  50F3               	movf	prodl,w,c
  5985  000C1C  260B               	addwf	??i2_Evaluate_Display,f,c
  5986  000C1E  50F4               	movf	prodh,w,c
  5987  000C20  220C               	addwfc	??i2_Evaluate_Display+1,f,c
  5988  000C22  C00B  FFF6         	movff	??i2_Evaluate_Display,tblptrl
  5989  000C26  C00C  FFF7         	movff	??i2_Evaluate_Display+1,tblptrh
  5990  000C2A  6AF8               	clrf	tblptru,c
  5991  000C2C  0E01               	movlw	(high __ramtop+-1)
  5992  000C2E  64F7               	cpfsgt	tblptrh,c
  5993  000C30  D003               	bra	i2u117_47
  5994  000C32  0008               	tblrd		*
  5995  000C34  50F5               	movf	tablat,w,c
  5996  000C36  D005               	bra	i2u117_40
  5997  000C38                     i2u117_47:
  5998  000C38  CFF6 FFD9          	movff	tblptrl,fsr2l
  5999  000C3C  CFF7 FFDA          	movff	tblptrh,fsr2h
  6000  000C40  50DF               	movf	indf2,w,c
  6001  000C42                     i2u117_40:
  6002                           
  6003                           ; Switch size 1, requested type "space"
  6004                           ; Number of cases is 17, Range of values is 45 to 80
  6005                           ; switch strategies available:
  6006                           ; Name         Instructions Cycles
  6007                           ; simple_byte           52    27 (average)
  6008                           ;	Chosen strategy is simple_byte
  6009  000C42  0A2D               	xorlw	45	; case 45
  6010  000C44  B4D8               	btfsc	status,2,c
  6011  000C46  D7CE               	goto	i2l2286
  6012  000C48  0A1D               	xorlw	29	; case 48
  6013  000C4A  B4D8               	btfsc	status,2,c
  6014  000C4C  D70B               	goto	i2l2254
  6015  000C4E  0A01               	xorlw	1	; case 49
  6016  000C50  B4D8               	btfsc	status,2,c
  6017  000C52  D714               	goto	i2l2256
  6018  000C54  0A03               	xorlw	3	; case 50
  6019  000C56  B4D8               	btfsc	status,2,c
  6020  000C58  D71D               	goto	i2l2258
  6021  000C5A  0A01               	xorlw	1	; case 51
  6022  000C5C  B4D8               	btfsc	status,2,c
  6023  000C5E  D726               	goto	i2l2260
  6024  000C60  0A07               	xorlw	7	; case 52
  6025  000C62  B4D8               	btfsc	status,2,c
  6026  000C64  D72F               	goto	i2l2262
  6027  000C66  0A01               	xorlw	1	; case 53
  6028  000C68  B4D8               	btfsc	status,2,c
  6029  000C6A  D738               	goto	i2l2264
  6030  000C6C  0A03               	xorlw	3	; case 54
  6031  000C6E  B4D8               	btfsc	status,2,c
  6032  000C70  D741               	goto	i2l2266
  6033  000C72  0A01               	xorlw	1	; case 55
  6034  000C74  B4D8               	btfsc	status,2,c
  6035  000C76  D74A               	goto	i2l2268
  6036  000C78  0A0F               	xorlw	15	; case 56
  6037  000C7A  B4D8               	btfsc	status,2,c
  6038  000C7C  D753               	goto	i2l2270
  6039  000C7E  0A01               	xorlw	1	; case 57
  6040  000C80  B4D8               	btfsc	status,2,c
  6041  000C82  D75C               	goto	i2l2272
  6042  000C84  0A78               	xorlw	120	; case 65
  6043  000C86  B4D8               	btfsc	status,2,c
  6044  000C88  D765               	goto	i2l2274
  6045  000C8A  0A05               	xorlw	5	; case 68
  6046  000C8C  B4D8               	btfsc	status,2,c
  6047  000C8E  D76E               	goto	i2l2276
  6048  000C90  0A01               	xorlw	1	; case 69
  6049  000C92  B4D8               	btfsc	status,2,c
  6050  000C94  D777               	goto	i2l2278
  6051  000C96  0A09               	xorlw	9	; case 76
  6052  000C98  B4D8               	btfsc	status,2,c
  6053  000C9A  D780               	goto	i2l2280
  6054  000C9C  0A03               	xorlw	3	; case 79
  6055  000C9E  B4D8               	btfsc	status,2,c
  6056  000CA0  D789               	goto	i2l2282
  6057  000CA2  0A1F               	xorlw	31	; case 80
  6058  000CA4  B4D8               	btfsc	status,2,c
  6059  000CA6  D792               	goto	i2l2284
  6060  000CA8  D7A9               	goto	i2l2288
  6061  000CAA                     i2l2292:
  6062  000CAA  2A32               	incf	_display_counter,f,c
  6063  000CAC                     i2l2294:
  6064  000CAC  500D               	movf	i2Evaluate_Display@size,w,c
  6065  000CAE  5C32               	subwf	_display_counter,w,c
  6066  000CB0  B0D8               	btfsc	status,0,c
  6067  000CB2  0012               	return	
  6068  000CB4  D7AC               	goto	i2l2290
  6069  000CB6                     __end_ofi2_Evaluate_Display:
  6070                           	opt stack 0
  6071                           pclatu	equ	0xFFB
  6072                           pclath	equ	0xFFA
  6073                           tblptru	equ	0xFF8
  6074                           tblptrh	equ	0xFF7
  6075                           tblptrl	equ	0xFF6
  6076                           tablat	equ	0xFF5
  6077                           prodh	equ	0xFF4
  6078                           prodl	equ	0xFF3
  6079                           intcon	equ	0xFF2
  6080                           postinc0	equ	0xFEE
  6081                           fsr0h	equ	0xFEA
  6082                           fsr0l	equ	0xFE9
  6083                           wreg	equ	0xFE8
  6084                           postdec1	equ	0xFE5
  6085                           fsr1h	equ	0xFE2
  6086                           fsr1l	equ	0xFE1
  6087                           indf2	equ	0xFDF
  6088                           postinc2	equ	0xFDE
  6089                           postdec2	equ	0xFDD
  6090                           plusw2	equ	0xFDB
  6091                           fsr2h	equ	0xFDA
  6092                           fsr2l	equ	0xFD9
  6093                           status	equ	0xFD8
  6094                           
  6095 ;; *************** function i2_Set_Bits *****************
  6096 ;; Defined at:
  6097 ;;		line 12 in file "display.c"
  6098 ;; Parameters:    Size  Location     Type
  6099 ;;  bits            3    0[COMRAM] PTR const unsigned char 
  6100 ;;		 -> ROM(8191), STR_19(2), STR_18(6), STR_17(7), 
  6101 ;;		 -> STR_16(4), STR_15(6), STR_14(7), STR_13(7), 
  6102 ;;		 -> STR_12(7), STR_11(8), STR_10(4), STR_9(7), 
  6103 ;;		 -> STR_8(6), STR_7(5), STR_6(6), STR_5(6), 
  6104 ;;		 -> STR_4(3), STR_3(7), 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  Set_Bits        1    7[COMRAM] unsigned char 
  6107 ;;  Set_Bits        1    6[COMRAM] unsigned char 
  6108 ;; Return value:  Size  Location     Type
  6109 ;;		None               void
  6110 ;; Registers used:
  6111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6112 ;; Tracked objects:
  6113 ;;		On entry : 0/0
  6114 ;;		On exit  : 0/0
  6115 ;;		Unchanged: 0/0
  6116 ;; Data sizes:     COMRAM   BANK0   BANK1
  6117 ;;      Params:         3       0       0
  6118 ;;      Locals:         2       0       0
  6119 ;;      Temps:          3       0       0
  6120 ;;      Totals:         8       0       0
  6121 ;;Total ram usage:        8 bytes
  6122 ;; Hardware stack levels used:    1
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		i2_Evaluate_Display
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text30
  6131  000EAE                     __ptext30:
  6132                           	opt stack 0
  6133  000EAE                     i2_Set_Bits:
  6134                           	opt stack 19
  6135                           
  6136                           ;display.c: 13: unsigned char Bitoutput = 0;
  6137                           
  6138                           ;incstack = 0
  6139  000EAE  0E00               	movlw	0
  6140  000EB0  6E08               	movwf	i2Set_Bits@Bitoutput,c
  6141                           
  6142                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  6143  000EB2  0E00               	movlw	0
  6144  000EB4  6E07               	movwf	i2Set_Bits@bitcount,c
  6145                           
  6146                           ;display.c: 15: bitcount++) {
  6147  000EB6  D037               	goto	i2l2190
  6148  000EB8                     i2l2170:
  6149                           
  6150                           ;display.c: 18: Bitoutput |= 0b00000001;
  6151  000EB8  8008               	bsf	i2Set_Bits@Bitoutput,0,c
  6152                           
  6153                           ;display.c: 19: break;
  6154  000EBA  D034               	goto	i2l2188
  6155  000EBC                     i2l2172:
  6156                           
  6157                           ;display.c: 21: Bitoutput |= 0b00000010;
  6158  000EBC  8208               	bsf	i2Set_Bits@Bitoutput,1,c
  6159                           
  6160                           ;display.c: 22: break;
  6161  000EBE  D032               	goto	i2l2188
  6162  000EC0                     i2l2174:
  6163                           
  6164                           ;display.c: 24: Bitoutput |= 0b00000100;
  6165  000EC0  8408               	bsf	i2Set_Bits@Bitoutput,2,c
  6166                           
  6167                           ;display.c: 25: break;
  6168  000EC2  D030               	goto	i2l2188
  6169  000EC4                     i2l2176:
  6170                           
  6171                           ;display.c: 27: Bitoutput |= 0b00001000;
  6172  000EC4  8608               	bsf	i2Set_Bits@Bitoutput,3,c
  6173                           
  6174                           ;display.c: 28: break;
  6175  000EC6  D02E               	goto	i2l2188
  6176  000EC8                     i2l2178:
  6177                           
  6178                           ;display.c: 30: Bitoutput |= 0b00010000;
  6179  000EC8  8808               	bsf	i2Set_Bits@Bitoutput,4,c
  6180                           
  6181                           ;display.c: 31: break;
  6182  000ECA  D02C               	goto	i2l2188
  6183  000ECC                     i2l2180:
  6184                           
  6185                           ;display.c: 33: Bitoutput |= 0b00100000;
  6186  000ECC  8A08               	bsf	i2Set_Bits@Bitoutput,5,c
  6187                           
  6188                           ;display.c: 34: break;
  6189  000ECE  D02A               	goto	i2l2188
  6190  000ED0                     i2l2182:
  6191                           
  6192                           ;display.c: 36: Bitoutput |= 0b01000000;
  6193  000ED0  8C08               	bsf	i2Set_Bits@Bitoutput,6,c
  6194                           
  6195                           ;display.c: 40: }
  6196                           
  6197                           ;display.c: 39: break;
  6198                           
  6199                           ;display.c: 38: default:
  6200                           
  6201                           ;display.c: 37: break;
  6202  000ED2  D028               	goto	i2l2188
  6203  000ED4                     i2l2186:
  6204  000ED4  5007               	movf	i2Set_Bits@bitcount,w,c
  6205  000ED6  0D01               	mullw	1
  6206  000ED8  50F3               	movf	prodl,w,c
  6207  000EDA  2401               	addwf	i2Set_Bits@bits,w,c
  6208  000EDC  6E04               	movwf	??i2_Set_Bits& (0+255),c
  6209  000EDE  50F4               	movf	prodh,w,c
  6210  000EE0  2002               	addwfc	i2Set_Bits@bits+1,w,c
  6211  000EE2  6E05               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6212  000EE4  0E00               	movlw	0
  6213  000EE6  2003               	addwfc	i2Set_Bits@bits+2,w,c
  6214  000EE8  6E06               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6215  000EEA  C004  FFF6         	movff	??i2_Set_Bits,tblptrl
  6216  000EEE  C005  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6217  000EF2  C006  FFF8         	movff	??i2_Set_Bits+2,tblptru
  6218  000EF6  0008               	tblrd		*
  6219  000EF8  50F5               	movf	tablat,w,c
  6220                           
  6221                           ; Switch size 1, requested type "space"
  6222                           ; Number of cases is 7, Range of values is 65 to 71
  6223                           ; switch strategies available:
  6224                           ; Name         Instructions Cycles
  6225                           ; simple_byte           22    12 (average)
  6226                           ;	Chosen strategy is simple_byte
  6227  000EFA  0A41               	xorlw	65	; case 65
  6228  000EFC  B4D8               	btfsc	status,2,c
  6229  000EFE  D7DC               	goto	i2l2170
  6230  000F00  0A03               	xorlw	3	; case 66
  6231  000F02  B4D8               	btfsc	status,2,c
  6232  000F04  D7DB               	goto	i2l2172
  6233  000F06  0A01               	xorlw	1	; case 67
  6234  000F08  B4D8               	btfsc	status,2,c
  6235  000F0A  D7DA               	goto	i2l2174
  6236  000F0C  0A07               	xorlw	7	; case 68
  6237  000F0E  B4D8               	btfsc	status,2,c
  6238  000F10  D7D9               	goto	i2l2176
  6239  000F12  0A01               	xorlw	1	; case 69
  6240  000F14  B4D8               	btfsc	status,2,c
  6241  000F16  D7D8               	goto	i2l2178
  6242  000F18  0A03               	xorlw	3	; case 70
  6243  000F1A  B4D8               	btfsc	status,2,c
  6244  000F1C  D7D7               	goto	i2l2180
  6245  000F1E  0A01               	xorlw	1	; case 71
  6246  000F20  B4D8               	btfsc	status,2,c
  6247  000F22  D7D6               	goto	i2l2182
  6248  000F24                     i2l2188:
  6249  000F24  2A07               	incf	i2Set_Bits@bitcount,f,c
  6250  000F26                     i2l2190:
  6251  000F26  5007               	movf	i2Set_Bits@bitcount,w,c
  6252  000F28  0D01               	mullw	1
  6253  000F2A  50F3               	movf	prodl,w,c
  6254  000F2C  2401               	addwf	i2Set_Bits@bits,w,c
  6255  000F2E  6E04               	movwf	??i2_Set_Bits& (0+255),c
  6256  000F30  50F4               	movf	prodh,w,c
  6257  000F32  2002               	addwfc	i2Set_Bits@bits+1,w,c
  6258  000F34  6E05               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6259  000F36  0E00               	movlw	0
  6260  000F38  2003               	addwfc	i2Set_Bits@bits+2,w,c
  6261  000F3A  6E06               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6262  000F3C  C004  FFF6         	movff	??i2_Set_Bits,tblptrl
  6263  000F40  C005  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6264  000F44  C006  FFF8         	movff	??i2_Set_Bits+2,tblptru
  6265  000F48  0008               	tblrd		*
  6266  000F4A  50F5               	movf	tablat,w,c
  6267  000F4C  0900               	iorlw	0
  6268  000F4E  A4D8               	btfss	status,2,c
  6269  000F50  D7C1               	goto	i2l2186
  6270                           
  6271                           ;display.c: 41: }
  6272                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  6273  000F52  5032               	movf	_display_counter,w,c
  6274  000F54  0D01               	mullw	1
  6275  000F56  0E34               	movlw	low _pixels
  6276  000F58  24F3               	addwf	prodl,w,c
  6277  000F5A  6ED9               	movwf	fsr2l,c
  6278  000F5C  0E00               	movlw	high _pixels
  6279  000F5E  20F4               	addwfc	prodh,w,c
  6280  000F60  6EDA               	movwf	fsr2h,c
  6281  000F62  C008  FFDF         	movff	i2Set_Bits@Bitoutput,indf2
  6282  000F66  0012               	return		;funcret
  6283  000F68                     __end_ofi2_Set_Bits:
  6284                           	opt stack 0
  6285                           pclatu	equ	0xFFB
  6286                           pclath	equ	0xFFA
  6287                           tblptru	equ	0xFF8
  6288                           tblptrh	equ	0xFF7
  6289                           tblptrl	equ	0xFF6
  6290                           tablat	equ	0xFF5
  6291                           prodh	equ	0xFF4
  6292                           prodl	equ	0xFF3
  6293                           intcon	equ	0xFF2
  6294                           postinc0	equ	0xFEE
  6295                           fsr0h	equ	0xFEA
  6296                           fsr0l	equ	0xFE9
  6297                           wreg	equ	0xFE8
  6298                           postdec1	equ	0xFE5
  6299                           fsr1h	equ	0xFE2
  6300                           fsr1l	equ	0xFE1
  6301                           indf2	equ	0xFDF
  6302                           postinc2	equ	0xFDE
  6303                           postdec2	equ	0xFDD
  6304                           plusw2	equ	0xFDB
  6305                           fsr2h	equ	0xFDA
  6306                           fsr2l	equ	0xFD9
  6307                           status	equ	0xFD8
  6308                           
  6309 ;; *************** function i2_Check_Detonators *****************
  6310 ;; Defined at:
  6311 ;;		line 25 in file "ignition.c"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;		None
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;		None
  6316 ;; Return value:  Size  Location     Type
  6317 ;;		None               void
  6318 ;; Registers used:
  6319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6320 ;; Tracked objects:
  6321 ;;		On entry : 0/0
  6322 ;;		On exit  : 0/0
  6323 ;;		Unchanged: 0/0
  6324 ;; Data sizes:     COMRAM   BANK0   BANK1
  6325 ;;      Params:         0       0       0
  6326 ;;      Locals:         0       0       0
  6327 ;;      Temps:          0       0       0
  6328 ;;      Totals:         0       0       0
  6329 ;;Total ram usage:        0 bytes
  6330 ;; Hardware stack levels used:    1
  6331 ;; Hardware stack levels required when called:    1
  6332 ;; This function calls:
  6333 ;;		i2_Transmit
  6334 ;; This function is called by:
  6335 ;;		_Isr
  6336 ;; This function uses a non-reentrant model
  6337 ;;
  6338                           
  6339                           	psect	text31
  6340  001596                     __ptext31:
  6341                           	opt stack 0
  6342  001596                     i2_Check_Detonators:
  6343                           	opt stack 21
  6344                           
  6345                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  6346                           
  6347                           ;incstack = 0
  6348  001596  0E54               	movlw	84
  6349  001598  6E01               	movwf	i2Transmit@operation,c
  6350  00159A  5031               	movf	_check_counter,w,c
  6351  00159C  0D06               	mullw	6
  6352  00159E  0E01               	movlw	1
  6353  0015A0  26F3               	addwf	prodl,f,c
  6354  0015A2  0E00               	movlw	0
  6355  0015A4  22F4               	addwfc	prodh,f,c
  6356  0015A6  0E00               	movlw	low _pin
  6357  0015A8  24F3               	addwf	prodl,w,c
  6358  0015AA  6ED9               	movwf	fsr2l,c
  6359  0015AC  0E01               	movlw	high _pin
  6360  0015AE  20F4               	addwfc	prodh,w,c
  6361  0015B0  6EDA               	movwf	fsr2h,c
  6362  0015B2  50DF               	movf	indf2,w,c
  6363  0015B4  6E02               	movwf	i2Transmit@port,c
  6364  0015B6  5031               	movf	_check_counter,w,c
  6365  0015B8  0D06               	mullw	6
  6366  0015BA  0E00               	movlw	low _pin
  6367  0015BC  24F3               	addwf	prodl,w,c
  6368  0015BE  6ED9               	movwf	fsr2l,c
  6369  0015C0  0E01               	movlw	high _pin
  6370  0015C2  20F4               	addwfc	prodh,w,c
  6371  0015C4  6EDA               	movwf	fsr2h,c
  6372  0015C6  50DF               	movf	indf2,w,c
  6373  0015C8  ECE7  F00A         	call	i2_Transmit
  6374  0015CC  0012               	return		;funcret
  6375  0015CE                     __end_ofi2_Check_Detonators:
  6376                           	opt stack 0
  6377                           pclatu	equ	0xFFB
  6378                           pclath	equ	0xFFA
  6379                           tblptru	equ	0xFF8
  6380                           tblptrh	equ	0xFF7
  6381                           tblptrl	equ	0xFF6
  6382                           tablat	equ	0xFF5
  6383                           prodh	equ	0xFF4
  6384                           prodl	equ	0xFF3
  6385                           intcon	equ	0xFF2
  6386                           postinc0	equ	0xFEE
  6387                           fsr0h	equ	0xFEA
  6388                           fsr0l	equ	0xFE9
  6389                           wreg	equ	0xFE8
  6390                           postdec1	equ	0xFE5
  6391                           fsr1h	equ	0xFE2
  6392                           fsr1l	equ	0xFE1
  6393                           indf2	equ	0xFDF
  6394                           postinc2	equ	0xFDE
  6395                           postdec2	equ	0xFDD
  6396                           plusw2	equ	0xFDB
  6397                           fsr2h	equ	0xFDA
  6398                           fsr2l	equ	0xFD9
  6399                           status	equ	0xFD8
  6400                           
  6401 ;; *************** function ___awdiv *****************
  6402 ;; Defined at:
  6403 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  dividend        2    0[COMRAM] int 
  6406 ;;  divisor         2    2[COMRAM] int 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  quotient        2    6[COMRAM] int 
  6409 ;;  sign            1    5[COMRAM] unsigned char 
  6410 ;;  counter         1    4[COMRAM] unsigned char 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  2    0[COMRAM] int 
  6413 ;; Registers used:
  6414 ;;		wreg, status,2, status,0
  6415 ;; Tracked objects:
  6416 ;;		On entry : 0/0
  6417 ;;		On exit  : 0/0
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1
  6420 ;;      Params:         4       0       0
  6421 ;;      Locals:         4       0       0
  6422 ;;      Temps:          0       0       0
  6423 ;;      Totals:         8       0       0
  6424 ;;Total ram usage:        8 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; This function calls:
  6427 ;;		Nothing
  6428 ;; This function is called by:
  6429 ;;		_Isr
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text32
  6434  00101C                     __ptext32:
  6435                           	opt stack 0
  6436  00101C                     ___awdiv:
  6437                           	opt stack 22
  6438                           
  6439                           ;incstack = 0
  6440  00101C  0E00               	movlw	0
  6441  00101E  6E06               	movwf	___awdiv@sign,c
  6442  001020  AE04               	btfss	___awdiv@divisor+1,7,c
  6443  001022  D006               	goto	i2l2576
  6444  001024  6C03               	negf	___awdiv@divisor,c
  6445  001026  1E04               	comf	___awdiv@divisor+1,f,c
  6446  001028  B0D8               	btfsc	status,0,c
  6447  00102A  2A04               	incf	___awdiv@divisor+1,f,c
  6448  00102C  0E01               	movlw	1
  6449  00102E  6E06               	movwf	___awdiv@sign,c
  6450  001030                     i2l2576:
  6451  001030  AE02               	btfss	___awdiv@dividend+1,7,c
  6452  001032  D006               	goto	i2l2582
  6453  001034  6C01               	negf	___awdiv@dividend,c
  6454  001036  1E02               	comf	___awdiv@dividend+1,f,c
  6455  001038  B0D8               	btfsc	status,0,c
  6456  00103A  2A02               	incf	___awdiv@dividend+1,f,c
  6457  00103C  0E01               	movlw	1
  6458  00103E  1A06               	xorwf	___awdiv@sign,f,c
  6459  001040                     i2l2582:
  6460  001040  0E00               	movlw	0
  6461  001042  6E08               	movwf	___awdiv@quotient+1,c
  6462  001044  0E00               	movlw	0
  6463  001046  6E07               	movwf	___awdiv@quotient,c
  6464  001048  5003               	movf	___awdiv@divisor,w,c
  6465  00104A  1004               	iorwf	___awdiv@divisor+1,w,c
  6466  00104C  B4D8               	btfsc	status,2,c
  6467  00104E  D01C               	goto	i2l2604
  6468  001050  0E01               	movlw	1
  6469  001052  6E05               	movwf	___awdiv@counter,c
  6470  001054  D004               	goto	i2l2590
  6471  001056                     i2l2588:
  6472  001056  90D8               	bcf	status,0,c
  6473  001058  3603               	rlcf	___awdiv@divisor,f,c
  6474  00105A  3604               	rlcf	___awdiv@divisor+1,f,c
  6475  00105C  2A05               	incf	___awdiv@counter,f,c
  6476  00105E                     i2l2590:
  6477  00105E  AE04               	btfss	___awdiv@divisor+1,7,c
  6478  001060  D7FA               	goto	i2l2588
  6479  001062                     i2l2592:
  6480  001062  90D8               	bcf	status,0,c
  6481  001064  3607               	rlcf	___awdiv@quotient,f,c
  6482  001066  3608               	rlcf	___awdiv@quotient+1,f,c
  6483  001068  5003               	movf	___awdiv@divisor,w,c
  6484  00106A  5C01               	subwf	___awdiv@dividend,w,c
  6485  00106C  5004               	movf	___awdiv@divisor+1,w,c
  6486  00106E  5802               	subwfb	___awdiv@dividend+1,w,c
  6487  001070  A0D8               	btfss	status,0,c
  6488  001072  D005               	goto	i2l2600
  6489  001074  5003               	movf	___awdiv@divisor,w,c
  6490  001076  5E01               	subwf	___awdiv@dividend,f,c
  6491  001078  5004               	movf	___awdiv@divisor+1,w,c
  6492  00107A  5A02               	subwfb	___awdiv@dividend+1,f,c
  6493  00107C  8007               	bsf	___awdiv@quotient,0,c
  6494  00107E                     i2l2600:
  6495  00107E  90D8               	bcf	status,0,c
  6496  001080  3204               	rrcf	___awdiv@divisor+1,f,c
  6497  001082  3203               	rrcf	___awdiv@divisor,f,c
  6498  001084  2E05               	decfsz	___awdiv@counter,f,c
  6499  001086  D7ED               	goto	i2l2592
  6500  001088                     i2l2604:
  6501  001088  5006               	movf	___awdiv@sign,w,c
  6502  00108A  B4D8               	btfsc	status,2,c
  6503  00108C  D004               	goto	i2l2608
  6504  00108E  6C07               	negf	___awdiv@quotient,c
  6505  001090  1E08               	comf	___awdiv@quotient+1,f,c
  6506  001092  B0D8               	btfsc	status,0,c
  6507  001094  2A08               	incf	___awdiv@quotient+1,f,c
  6508  001096                     i2l2608:
  6509  001096  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6510  00109A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6511  00109E  0012               	return	
  6512  0010A0                     __end_of___awdiv:
  6513                           	opt stack 0
  6514                           pclatu	equ	0xFFB
  6515                           pclath	equ	0xFFA
  6516                           tblptru	equ	0xFF8
  6517                           tblptrh	equ	0xFF7
  6518                           tblptrl	equ	0xFF6
  6519                           tablat	equ	0xFF5
  6520                           prodh	equ	0xFF4
  6521                           prodl	equ	0xFF3
  6522                           intcon	equ	0xFF2
  6523                           postinc0	equ	0xFEE
  6524                           fsr0h	equ	0xFEA
  6525                           fsr0l	equ	0xFE9
  6526                           wreg	equ	0xFE8
  6527                           postdec1	equ	0xFE5
  6528                           fsr1h	equ	0xFE2
  6529                           fsr1l	equ	0xFE1
  6530                           indf2	equ	0xFDF
  6531                           postinc2	equ	0xFDE
  6532                           postdec2	equ	0xFDD
  6533                           plusw2	equ	0xFDB
  6534                           fsr2h	equ	0xFDA
  6535                           fsr2l	equ	0xFD9
  6536                           status	equ	0xFD8
  6537                           
  6538 ;; *************** function _Receive *****************
  6539 ;; Defined at:
  6540 ;;		line 37 in file "communication.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;		None
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;		None
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1    wreg      unsigned char 
  6547 ;; Registers used:
  6548 ;;		wreg, status,2
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1
  6554 ;;      Params:         0       0       0
  6555 ;;      Locals:         0       0       0
  6556 ;;      Temps:          0       0       0
  6557 ;;      Totals:         0       0       0
  6558 ;;Total ram usage:        0 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; This function calls:
  6561 ;;		Nothing
  6562 ;; This function is called by:
  6563 ;;		_Isr
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           	psect	text33
  6568  001728                     __ptext33:
  6569                           	opt stack 0
  6570  001728                     _Receive:
  6571                           	opt stack 22
  6572                           
  6573                           ;communication.c: 38: if(RCSTA1bits.OERR == 1) {
  6574                           
  6575                           ;incstack = 0
  6576  001728  A2AB               	btfss	4011,1,c	;volatile
  6577  00172A  D003               	goto	i2l2564
  6578                           
  6579                           ;communication.c: 39: RCSTA1bits.CREN = 0;
  6580  00172C  98AB               	bcf	4011,4,c	;volatile
  6581                           
  6582                           ;communication.c: 40: RCSTA1bits.CREN = 1;
  6583  00172E  88AB               	bsf	4011,4,c	;volatile
  6584                           
  6585                           ;communication.c: 41: overrun = 1;
  6586  001730  843B               	bsf	_overrun/(0+8),_overrun& (0+7),c
  6587  001732                     i2l2564:
  6588                           
  6589                           ;communication.c: 42: }
  6590                           ;communication.c: 43: return (RCREG1);
  6591  001732  50AE               	movf	4014,w,c	;volatile
  6592  001734  0012               	return	
  6593  001736                     __end_of_Receive:
  6594                           	opt stack 0
  6595                           pclatu	equ	0xFFB
  6596                           pclath	equ	0xFFA
  6597                           tblptru	equ	0xFF8
  6598                           tblptrh	equ	0xFF7
  6599                           tblptrl	equ	0xFF6
  6600                           tablat	equ	0xFF5
  6601                           prodh	equ	0xFF4
  6602                           prodl	equ	0xFF3
  6603                           intcon	equ	0xFF2
  6604                           postinc0	equ	0xFEE
  6605                           fsr0h	equ	0xFEA
  6606                           fsr0l	equ	0xFE9
  6607                           wreg	equ	0xFE8
  6608                           postdec1	equ	0xFE5
  6609                           fsr1h	equ	0xFE2
  6610                           fsr1l	equ	0xFE1
  6611                           indf2	equ	0xFDF
  6612                           postinc2	equ	0xFDE
  6613                           postdec2	equ	0xFDD
  6614                           plusw2	equ	0xFDB
  6615                           fsr2h	equ	0xFDA
  6616                           fsr2l	equ	0xFD9
  6617                           status	equ	0xFD8
  6618                           
  6619 ;; *************** function _Ignite_Detonators *****************
  6620 ;; Defined at:
  6621 ;;		line 29 in file "ignition.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;		None
  6624 ;; Auto vars:     Size  Location     Type
  6625 ;;  counter         1    5[COMRAM] unsigned char 
  6626 ;; Return value:  Size  Location     Type
  6627 ;;		None               void
  6628 ;; Registers used:
  6629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMRAM   BANK0   BANK1
  6635 ;;      Params:         0       0       0
  6636 ;;      Locals:         1       0       0
  6637 ;;      Temps:          2       0       0
  6638 ;;      Totals:         3       0       0
  6639 ;;Total ram usage:        3 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; Hardware stack levels required when called:    1
  6642 ;; This function calls:
  6643 ;;		i2_Transmit
  6644 ;; This function is called by:
  6645 ;;		_Isr
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           
  6649                           	psect	text34
  6650  001118                     __ptext34:
  6651                           	opt stack 0
  6652  001118                     _Ignite_Detonators:
  6653                           	opt stack 21
  6654                           
  6655                           ;ignition.c: 30: for(unsigned char counter = 0; counter < 30; counter++) {
  6656                           
  6657                           ;incstack = 0
  6658  001118  0E00               	movlw	0
  6659  00111A  6E06               	movwf	Ignite_Detonators@counter,c
  6660  00111C                     i2l2548:
  6661  00111C  0E1D               	movlw	29
  6662  00111E  6406               	cpfsgt	Ignite_Detonators@counter,c
  6663  001120  D001               	goto	i2l2552
  6664  001122  0012               	return	
  6665  001124                     i2l2552:
  6666                           
  6667                           ;ignition.c: 31: if(pin[counter].time == current_time) {
  6668  001124  5006               	movf	Ignite_Detonators@counter,w,c
  6669  001126  0D06               	mullw	6
  6670  001128  0E04               	movlw	4
  6671  00112A  26F3               	addwf	prodl,f,c
  6672  00112C  0E00               	movlw	0
  6673  00112E  22F4               	addwfc	prodh,f,c
  6674  001130  0E00               	movlw	low _pin
  6675  001132  24F3               	addwf	prodl,w,c
  6676  001134  6ED9               	movwf	fsr2l,c
  6677  001136  0E01               	movlw	high _pin
  6678  001138  20F4               	addwfc	prodh,w,c
  6679  00113A  6EDA               	movwf	fsr2h,c
  6680  00113C  502F               	movf	_current_time,w,c
  6681  00113E  18DE               	xorwf	postinc2,w,c
  6682  001140  E11F               	bnz	i2l2556
  6683  001142  5030               	movf	_current_time+1,w,c
  6684  001144  18DE               	xorwf	postinc2,w,c
  6685  001146  A4D8               	btfss	status,2,c
  6686  001148  D01B               	goto	i2l2556
  6687                           
  6688                           ;ignition.c: 32: Transmit(pin[counter].slave, 'I', pin[counter].output);
  6689  00114A  0E49               	movlw	73
  6690  00114C  6E01               	movwf	i2Transmit@operation,c
  6691  00114E  5006               	movf	Ignite_Detonators@counter,w,c
  6692  001150  0D06               	mullw	6
  6693  001152  0E01               	movlw	1
  6694  001154  26F3               	addwf	prodl,f,c
  6695  001156  0E00               	movlw	0
  6696  001158  22F4               	addwfc	prodh,f,c
  6697  00115A  0E00               	movlw	low _pin
  6698  00115C  24F3               	addwf	prodl,w,c
  6699  00115E  6ED9               	movwf	fsr2l,c
  6700  001160  0E01               	movlw	high _pin
  6701  001162  20F4               	addwfc	prodh,w,c
  6702  001164  6EDA               	movwf	fsr2h,c
  6703  001166  50DF               	movf	indf2,w,c
  6704  001168  6E02               	movwf	i2Transmit@port,c
  6705  00116A  5006               	movf	Ignite_Detonators@counter,w,c
  6706  00116C  0D06               	mullw	6
  6707  00116E  0E00               	movlw	low _pin
  6708  001170  24F3               	addwf	prodl,w,c
  6709  001172  6ED9               	movwf	fsr2l,c
  6710  001174  0E01               	movlw	high _pin
  6711  001176  20F4               	addwfc	prodh,w,c
  6712  001178  6EDA               	movwf	fsr2h,c
  6713  00117A  50DF               	movf	indf2,w,c
  6714  00117C  ECE7  F00A         	call	i2_Transmit
  6715  001180                     i2l2556:
  6716  001180  2A06               	incf	Ignite_Detonators@counter,f,c
  6717  001182  D7CC               	goto	i2l2548
  6718  001184                     __end_of_Ignite_Detonators:
  6719                           	opt stack 0
  6720                           pclatu	equ	0xFFB
  6721                           pclath	equ	0xFFA
  6722                           tblptru	equ	0xFF8
  6723                           tblptrh	equ	0xFF7
  6724                           tblptrl	equ	0xFF6
  6725                           tablat	equ	0xFF5
  6726                           prodh	equ	0xFF4
  6727                           prodl	equ	0xFF3
  6728                           intcon	equ	0xFF2
  6729                           postinc0	equ	0xFEE
  6730                           fsr0h	equ	0xFEA
  6731                           fsr0l	equ	0xFE9
  6732                           wreg	equ	0xFE8
  6733                           postdec1	equ	0xFE5
  6734                           fsr1h	equ	0xFE2
  6735                           fsr1l	equ	0xFE1
  6736                           indf2	equ	0xFDF
  6737                           postinc2	equ	0xFDE
  6738                           postdec2	equ	0xFDD
  6739                           plusw2	equ	0xFDB
  6740                           fsr2h	equ	0xFDA
  6741                           fsr2l	equ	0xFD9
  6742                           status	equ	0xFD8
  6743                           
  6744 ;; *************** function i2_Transmit *****************
  6745 ;; Defined at:
  6746 ;;		line 15 in file "communication.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  receiver        1    wreg     unsigned char 
  6749 ;;  operation       1    0[COMRAM] unsigned char 
  6750 ;;  port            1    1[COMRAM] unsigned char 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;  receiver        1    2[COMRAM] unsigned char 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;		None               void
  6755 ;; Registers used:
  6756 ;;		wreg, status,2
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1
  6762 ;;      Params:         2       0       0
  6763 ;;      Locals:         1       0       0
  6764 ;;      Temps:          0       0       0
  6765 ;;      Totals:         3       0       0
  6766 ;;Total ram usage:        3 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; This function calls:
  6769 ;;		Nothing
  6770 ;; This function is called by:
  6771 ;;		_Ignite_Detonators
  6772 ;;		i2_Check_Detonators
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text35
  6777  0015CE                     __ptext35:
  6778                           	opt stack 0
  6779  0015CE                     i2_Transmit:
  6780                           	opt stack 21
  6781                           
  6782                           ;incstack = 0
  6783                           ;i2Transmit@receiver stored from wreg
  6784  0015CE  6E03               	movwf	i2Transmit@receiver,c
  6785                           
  6786                           ;communication.c: 17: PORTBbits.RB5 = 1;
  6787  0015D0  8A81               	bsf	3969,5,c	;volatile
  6788                           
  6789                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  6790  0015D2  98AB               	bcf	4011,4,c	;volatile
  6791                           
  6792                           ;communication.c: 20: __nop();
  6793  0015D4  F000               	nop	
  6794  0015D6                     i2l491:
  6795  0015D6  A89E               	btfss	3998,4,c	;volatile
  6796  0015D8  D7FE               	goto	i2l491
  6797                           
  6798                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  6799  0015DA  80AC               	bsf	4012,0,c	;volatile
  6800                           
  6801                           ;communication.c: 23: TXREG1 = receiver;
  6802  0015DC  C003  FFAD         	movff	i2Transmit@receiver,4013	;volatile
  6803  0015E0                     i2l494:
  6804  0015E0  A89E               	btfss	3998,4,c	;volatile
  6805  0015E2  D7FE               	goto	i2l494
  6806                           
  6807                           ;communication.c: 25: TXREG1 = 0xAA;
  6808  0015E4  0EAA               	movlw	170
  6809  0015E6  6EAD               	movwf	4013,c	;volatile
  6810  0015E8                     i2l497:
  6811  0015E8  A89E               	btfss	3998,4,c	;volatile
  6812  0015EA  D7FE               	goto	i2l497
  6813                           
  6814                           ;communication.c: 27: TXREG1 = operation;
  6815  0015EC  C001  FFAD         	movff	i2Transmit@operation,4013	;volatile
  6816  0015F0                     i2l500:
  6817  0015F0  A89E               	btfss	3998,4,c	;volatile
  6818  0015F2  D7FE               	goto	i2l500
  6819                           
  6820                           ;communication.c: 29: TXREG1 = port;
  6821  0015F4  C002  FFAD         	movff	i2Transmit@port,4013	;volatile
  6822  0015F8                     i2l503:
  6823  0015F8  A2AC               	btfss	4012,1,c	;volatile
  6824  0015FA  D7FE               	goto	i2l503
  6825                           
  6826                           ;communication.c: 31: PORTBbits.RB5 = 0;
  6827  0015FC  9A81               	bcf	3969,5,c	;volatile
  6828                           
  6829                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  6830  0015FE  88AB               	bsf	4011,4,c	;volatile
  6831                           
  6832                           ;communication.c: 33: __nop();
  6833  001600  F000               	nop	
  6834  001602  0012               	return		;funcret
  6835  001604                     __end_ofi2_Transmit:
  6836                           	opt stack 0
  6837                           pclatu	equ	0xFFB
  6838                           pclath	equ	0xFFA
  6839                           tblptru	equ	0xFF8
  6840                           tblptrh	equ	0xFF7
  6841                           tblptrl	equ	0xFF6
  6842                           tablat	equ	0xFF5
  6843                           prodh	equ	0xFF4
  6844                           prodl	equ	0xFF3
  6845                           intcon	equ	0xFF2
  6846                           postinc0	equ	0xFEE
  6847                           fsr0h	equ	0xFEA
  6848                           fsr0l	equ	0xFE9
  6849                           wreg	equ	0xFE8
  6850                           postdec1	equ	0xFE5
  6851                           fsr1h	equ	0xFE2
  6852                           fsr1l	equ	0xFE1
  6853                           indf2	equ	0xFDF
  6854                           postinc2	equ	0xFDE
  6855                           postdec2	equ	0xFDD
  6856                           plusw2	equ	0xFDB
  6857                           fsr2h	equ	0xFDA
  6858                           fsr2l	equ	0xFD9
  6859                           status	equ	0xFD8
  6860                           pclatu	equ	0xFFB
  6861                           pclath	equ	0xFFA
  6862                           tblptru	equ	0xFF8
  6863                           tblptrh	equ	0xFF7
  6864                           tblptrl	equ	0xFF6
  6865                           tablat	equ	0xFF5
  6866                           prodh	equ	0xFF4
  6867                           prodl	equ	0xFF3
  6868                           intcon	equ	0xFF2
  6869                           postinc0	equ	0xFEE
  6870                           fsr0h	equ	0xFEA
  6871                           fsr0l	equ	0xFE9
  6872                           wreg	equ	0xFE8
  6873                           postdec1	equ	0xFE5
  6874                           fsr1h	equ	0xFE2
  6875                           fsr1l	equ	0xFE1
  6876                           indf2	equ	0xFDF
  6877                           postinc2	equ	0xFDE
  6878                           postdec2	equ	0xFDD
  6879                           plusw2	equ	0xFDB
  6880                           fsr2h	equ	0xFDA
  6881                           fsr2l	equ	0xFD9
  6882                           status	equ	0xFD8
  6883                           
  6884                           	psect	rparam
  6885  0000                     pclatu	equ	0xFFB
  6886                           pclath	equ	0xFFA
  6887                           tblptru	equ	0xFF8
  6888                           tblptrh	equ	0xFF7
  6889                           tblptrl	equ	0xFF6
  6890                           tablat	equ	0xFF5
  6891                           prodh	equ	0xFF4
  6892                           prodl	equ	0xFF3
  6893                           intcon	equ	0xFF2
  6894                           postinc0	equ	0xFEE
  6895                           fsr0h	equ	0xFEA
  6896                           fsr0l	equ	0xFE9
  6897                           wreg	equ	0xFE8
  6898                           postdec1	equ	0xFE5
  6899                           fsr1h	equ	0xFE2
  6900                           fsr1l	equ	0xFE1
  6901                           indf2	equ	0xFDF
  6902                           postinc2	equ	0xFDE
  6903                           postdec2	equ	0xFDD
  6904                           plusw2	equ	0xFDB
  6905                           fsr2h	equ	0xFDA
  6906                           fsr2l	equ	0xFD9
  6907                           status	equ	0xFD8
  6908                           
  6909                           	psect	temp
  6910  00003C                     btemp:
  6911                           	opt stack 0
  6912  00003C                     	ds	1
  6913  0000                     int$flags	set	btemp
  6914                           pclatu	equ	0xFFB
  6915                           pclath	equ	0xFFA
  6916                           tblptru	equ	0xFF8
  6917                           tblptrh	equ	0xFF7
  6918                           tblptrl	equ	0xFF6
  6919                           tablat	equ	0xFF5
  6920                           prodh	equ	0xFF4
  6921                           prodl	equ	0xFF3
  6922                           intcon	equ	0xFF2
  6923                           postinc0	equ	0xFEE
  6924                           fsr0h	equ	0xFEA
  6925                           fsr0l	equ	0xFE9
  6926                           wreg	equ	0xFE8
  6927                           postdec1	equ	0xFE5
  6928                           fsr1h	equ	0xFE2
  6929                           fsr1l	equ	0xFE1
  6930                           indf2	equ	0xFDF
  6931                           postinc2	equ	0xFDE
  6932                           postdec2	equ	0xFDD
  6933                           plusw2	equ	0xFDB
  6934                           fsr2h	equ	0xFDA
  6935                           fsr2l	equ	0xFD9
  6936                           status	equ	0xFD8


Data Sizes:
    Strings     83
    Constant    0
    Data        180
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      59
    BANK0           160     25      30
    BANK1           256      0     180

Pointer List with Targets:

    Write_Display_Byte@write_data	PTR unsigned char  size(2) Largest target is 7
		 -> pixels(COMRAM[7]), 

    Evaluate_Display@evaluate	PTR const unsigned char  size(2) Largest target is 4
		 -> signs(BANK0[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    Set_Bits@bits	PTR const unsigned char  size(3) Largest target is 8191
		 -> ROM(CODE[8191]), STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[4]), STR_15(CODE[6]), STR_14(CODE[7]), STR_13(CODE[7]), 
		 -> STR_12(CODE[7]), STR_11(CODE[8]), STR_10(CODE[4]), STR_9(CODE[7]), 
		 -> STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[3]), STR_3(CODE[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Isr->i2_Set_Display
    i2_Set_Display->i2_Evaluate_Signs
    i2_Evaluate_Signs->i2_Evaluate_Display
    i2_Evaluate_Display->i2_Set_Bits
    i2_Check_Detonators->i2_Transmit
    _Ignite_Detonators->i2_Transmit

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _Check_Detonators->_Transmit
    _Check_Buttons->_Del_Data
    _Del_Data->_Load_Data
    _Load_Data->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   35514
                      _Check_Buttons
                   _Check_Detonators
                               _Init
                          _Load_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Detonators                                     0     0      0     331
                           _Transmit
 ---------------------------------------------------------------------------------
 (2) _Transmit                                             3     1      2     331
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0   19327
                                             23 BANK0      2     2      0
                           _Del_Data
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (2) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Del_Data                                             1     1      0   11753
                                             22 BANK0      1     1      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Load_Data
                          _Save_Data
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     592
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Load_Data                                            2     2      0    9053
                                             20 BANK0      2     2      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Read_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Set_Display                                          4     1      3    6803
                                             16 BANK0      4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
                 _Write_Display_Byte
 ---------------------------------------------------------------------------------
 (2) _Write_Display_Byte                                   7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _Evaluate_Signs                                       3     1      2    2568
                                             13 BANK0      3     1      2
                   _Evaluate_Display
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Display                                     5     3      2    1941
                                              8 BANK0      5     3      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (4) _Set_Bits                                             8     5      3    1571
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2     111
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Isr                                                 20    20      0    3015
                                             20 COMRAM    20    20      0
                  _Ignite_Detonators
                            _Receive
                            ___awdiv
                 i2_Check_Detonators
                      i2_Set_Display
 ---------------------------------------------------------------------------------
 (9) i2_Set_Display                                        4     1      3    1996
                                             16 COMRAM     4     1      3
                 i2_Evaluate_Display
                   i2_Evaluate_Signs
               i2_Write_Display_Byte
 ---------------------------------------------------------------------------------
 (10) i2_Write_Display_Byte                                7     5      2     116
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) i2_Evaluate_Signs                                    3     1      2    1034
                                             13 COMRAM     3     1      2
                 i2_Evaluate_Display
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2_Evaluate_Display                                  5     3      2     684
                                              8 COMRAM     5     3      2
                         i2_Set_Bits
 ---------------------------------------------------------------------------------
 (12) i2_Set_Bits                                          8     5      3     588
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (9) i2_Check_Detonators                                   0     0      0     170
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Ignite_Detonators                                    3     3      0     282
                                              3 COMRAM     3     3      0
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (10) i2_Transmit                                          3     1      2     170
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Del_Data
       _Delay_Routine
       _Evaluate_Display
         _Set_Bits
       _Load_Data
         _Delay_Routine
         _Evaluate_Display
           _Set_Bits
         _Read_Data
         _Set_Display
           _Evaluate_Display
             _Set_Bits
           _Evaluate_Signs
             _Evaluate_Display
               _Set_Bits
             ___lwmod
           _Write_Display_Byte
       _Save_Data
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
       _Write_Display_Byte
     _Start_Timer
   _Check_Detonators
     _Transmit
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Load_Data
     _Delay_Routine
     _Evaluate_Display
       _Set_Bits
     _Read_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
       _Write_Display_Byte
   _Set_Display
     _Evaluate_Display
       _Set_Bits
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
       ___lwmod
     _Write_Display_Byte

 _Isr (ROOT)
   _Ignite_Detonators
     i2_Transmit
   _Receive
   ___awdiv
   i2_Check_Detonators
     i2_Transmit
   i2_Set_Display
     i2_Evaluate_Display
       i2_Set_Bits
     i2_Evaluate_Signs
       i2_Evaluate_Display
         i2_Set_Bits
       i2___lwmod
     i2_Write_Display_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     19      1E       4       18.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     28      3B       1       62.8%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10D       6        0.0%
DATA                 0      0     10D       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Feb 03 20:42:37 2017

        Evaluate_Display@evaluate 0068                        i2_Transmit 15CE  
                              l94 0288                                l98 034C  
                    ___awdiv@sign 0006                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                               l110 04B6  
                             l104 0404                               l114 061C  
                             l500 1582                               l430 1102  
                             l342 13B2                               l503 158A  
                             l339 1384                               l516 11D8  
                             l491 1568                               l494 1572  
                             l497 157A                    ?i2_Set_Display 0011  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _Isr 0008                               _pin 0100  
                  _Evaluate_Signs 10A0                               prod 000FF3  
                             wreg 000FE8                 Set_Bits@Bitoutput 0067  
                      _TXSTA1bits 000FAC                      __CFG_LVP$OFF 000000  
                            ?_Isr 0001                              l1005 130A  
                            l3100 03D0                              l3114 0482  
                            l3140 052E                              l3132 04D6  
                            l3150 054A                              l3214 166E  
                            l3144 053A                              l3152 0560  
                            l3136 0522                              l3072 02AA  
                            l3076 0318                              l3096 036E  
                            l3186 0694                              l3178 063C  
                            l2740 0DEA                              l2732 0DD2  
                            l2812 12FC                              l2804 12C6  
                            l2742 0DF0                              l2734 0DD8  
                            l2750 0E5A                              l2806 12D2  
                            l2822 10B0                              l2744 0DF6  
                            l2736 0DDE                              l2752 0E5E  
                            l2760 07B6                              l2808 12D8  
                            l2738 0DE4                              l2770 084C  
                            l2762 07D4                              l2818 10A6  
                            l2914 0CD4                              l2852 1654  
                            l2748 0DFC                              l2780 08E2  
                            l2772 086A                              l2764 07F2  
                            l2924 0D12                              l2790 0978  
                            l2782 0900                              l2774 0888  
                            l2766 0810                              l2758 0798  
                            l2918 0CDE                              l2848 1640  
                            l2792 0996                              l2784 091E  
                            l2776 08A6                              l2768 082E  
                            l2856 11F0                              l2872 1230  
                            l2786 093C                              l2778 08C4  
                            l2794 09AE                              l2874 123C  
                            l2788 095A                              l2796 0A4E  
                            l2868 1222                              l2798 0A50  
                            l2982 1472                              l2992 1494  
                            l2986 147C                              STR_1 0266  
                            STR_2 026A                              STR_3 0223  
                            STR_4 0263                              STR_5 0245  
                            STR_6 023F                              STR_7 025D  
                            STR_8 024B                              STR_9 0238  
                            u1960 09E6                              u2497 1648  
                            u1967 09DC                              _Init 16B6  
                            _main 1664                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 003C                     __CFG_BORV$190 000000  
                    Transmit@port 0061                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0216                     __CFG_IESO$OFF 000000  
                  Save_Data@store 0060                _Write_Display_Byte 1184  
                    ___param_bank 000010                     _InitInterrupt 1736  
                           ??_Isr 0015                   __end_of_Receive 1736  
             ?_Write_Display_Byte 0060                      _BAUDCON1bits 000FB8  
                           ?_Init 0001                             ?_main 0001  
                 __end_of___awdiv 10A0                             _EEADR 000FA9  
                           STR_10 0262                             STR_11 021B  
                           STR_12 022A                             STR_13 0231  
                           STR_14 0223                             STR_15 0257  
                           STR_16 0226                             STR_17 0223  
                           STR_18 0251                             STR_19 0243  
          __end_of_Evaluate_Signs 1118                   ___awdiv@divisor 0003  
               _InitMiscellaneous 1742                   __end_of___lwmod 1314  
                           i2l500 15F0                             i2l430 12A0  
                           i2l503 15F8                             i2l516 14D0  
                           i2l491 15D6                             i2l580 00A0  
                           i2l494 15E0                             i2l592 01DA  
                           i2l497 15E8                             i2l579 00A4  
                 ___awdiv@counter 0005                 _Ignite_Detonators 1118  
                           _TMR1H 000FCF                             _TMR3H 000FB3  
                           _TMR1L 000FCE                             _TMR3L 000FB2  
                           _PORTA 000F80                             _PORTB 000F81  
                           _PORTC 000F82                             _PORTE 000F84  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISE 000F96  
                   __CFG_WRT0$OFF 000000          __end_of_InitTransmission 16B6  
                   __CFG_WRT1$OFF 000000                ?_InitMiscellaneous 0001  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                ?_Ignite_Detonators 0001  
               i2Set_Display@type 0014          __end_ofi2_Evaluate_Signs 12B2  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                  _Evaluate_Display 078E  
                  __CFG_EBTRB$OFF 000000                             _signs 007B  
              __CFG_MCLRE$EXTMCLR 000000              ??_Write_Display_Byte 0062  
                  __pbitbssCOMRAM 01D8                    __CFG_BOREN$OFF 000000  
             ??_InitMiscellaneous 0060                             tablat 000FF5  
             ??_Ignite_Detonators 0004                             plusw2 000FDB  
                __end_of_Del_Data 149A                             status 000FD8  
                     ?i2_Set_Bits 0001                __size_ofi2___lwmod 0042  
                  ?_InitInterrupt 0001                   __initialization 140C  
                    __end_of_Init 16D4                      __end_of_main 1692  
                     ?i2_Transmit 0001                  __end_of_InitPort 1728  
                __end_of_InitTris 1716            Set_Display@information 0070  
       __end_of_InitMiscellaneous 1748                   ??i2_Set_Display 0014  
                          ??_Init 0060         __end_of_Ignite_Detonators 1184  
                   ??_Set_Display 0073                            ??_main 0079  
                __end_of_Set_Bits 0EAE                   ?_Evaluate_Signs 006D  
                   __activetblptr 000002        __end_ofi2_Evaluate_Display 0CB6  
                __end_of_Transmit 1596                            _EEDATA 000FA8  
                          _CCPR1H 000FBF                            _CCPR1L 000FBE  
                          _EECON2 000FA7                  ___awdiv@dividend 0001  
                          _ANSELA 000F38                            _ANSELB 000F39  
                          _ANSELC 000F3A                            i2l1005 1518  
                          i2l2300 14EE                            i2l2302 14F6  
                          i2l2304 14FA                            i2l2170 0EB8  
                          i2l2180 0ECC                            i2l2172 0EBC  
                          i2l2260 0AAC                            i2l2308 150E  
                          i2l2182 0ED0                            i2l2174 0EC0  
                          i2l2190 0F26                            i2l2270 0B24  
                          i2l2262 0AC4                            i2l2254 0A64  
                          i2l2600 107E                            i2l2176 0EC4  
                          i2l2280 0B9C                            i2l2272 0B3C  
                          i2l2264 0ADC                            i2l2256 0A7C  
                          i2l2352 125A                            i2l2178 0EC8  
                          i2l2186 0ED4                            i2l2282 0BB4  
                          i2l2274 0B54                            i2l2266 0AF4  
                          i2l2258 0A94                            i2l2290 0C0E  
                          i2l2604 1088                            i2l2188 0F24  
                          i2l2284 0BCC                            i2l2276 0B6C  
                          i2l2268 0B0C                            i2l2292 0CAA  
                          i2l2348 1252                            i2l2286 0BE4  
                          i2l2278 0B84                            i2l2294 0CAC  
                  __CFG_WDTEN$OFF 000000                            i2l2552 1124  
                          i2l2608 1096                            i2l2288 0BFC  
                          i2l2616 1318                            i2l2632 1352  
                          i2l2712 01A2                            i2l2634 135C  
                          i2l2556 1180                            i2l2548 111C  
                          i2l2564 1732                            i2l2628 1344  
                          i2l2708 016C                            i2l2716 01C0  
                          i2l2660 005C                            i2l2590 105E  
                          i2l2582 1040                            i2l2726 01D4  
                          i2l2592 1062                            i2l2576 1030  
                          i2l2666 006E                            i2l2588 1056  
                          _RCREG1 000FAE                __size_of_Load_Data 010E  
                          _OSCCON 000FD3                __size_of_InitAnsel 0014  
                          _SPBRG1 000FAF                            _SSP1IF 007CF3  
              __size_of_Read_Data 004E                __size_of_InitTimer 0030  
                          _TXREG1 000FAD                         ??_Receive 0001  
              i2Set_Display@value 0012                    __CFG_XINST$OFF 000000  
                    _CCPTMRS0bits 000F49       __size_ofi2_Check_Detonators 0038  
              __size_of_Save_Data 0054                         ??___awdiv 0005  
                       ??___lwmod 0064                            clear_0 1420  
                ___awdiv@quotient 0007                            _pixels 0034  
          __size_of_Check_Buttons 051E  i2Evaluate_Signs@evaluation_value 000E  
  Evaluate_Signs@evaluation_value 006D                      __mediumconst 0000  
               __end_ofi2___lwmod 1522               __size_ofi2_Set_Bits 00BA  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                i2Transmit@receiver 0003  
             __end_of_Set_Display 124E                   __CFG_HFOFST$OFF 000000  
             __size_ofi2_Transmit 0036              Isr@pixel_index_array 0026  
                      __accesstop 0060           __end_of__initialization 1446  
                 __CFG_PBADEN$OFF 000000                   ??_InitInterrupt 0060  
                   ___rparam_used 000001                    i2Transmit@port 0002  
              i2___lwmod@dividend 0001                    __pcstackCOMRAM 0001  
       __size_of_Check_Detonators 003C                      __pidataBANK1 0F68  
                   ??_Start_Timer 0060        __size_of_InitMiscellaneous 0006  
      __size_of_Ignite_Detonators 006C                 __end_of_Load_Data 0DC4  
               __end_of_InitAnsel 1704                 __end_of_Read_Data 140C  
               __end_of_InitTimer 1634                         ?_Del_Data 0001  
    __end_ofi2_Write_Display_Byte 14E0                 __end_of_Save_Data 13BE  
                      __pbssBANK0 0079                Isr@pixel_index_bit 0027  
                 __CFG_PLLCFG$OFF 000000                     _Check_Buttons 0270  
                       ?_InitPort 0001                         ?_InitTris 0001  
                       ?_Set_Bits 0060                __CFG_CCP2MX$PORTC1 000000  
        __end_of_Evaluate_Display 0A5C                __CFG_CCP3MX$PORTB5 000000  
                       ?_Transmit 0060                       _Set_Display 11EA  
                      ??_Del_Data 0076            __size_of_Delay_Routine 0030  
             __end_of_Start_Timer 16F0                 ?_InitTransmission 0001  
               __CFG_PRICLKEN$OFF 000000                           _SSP1BUF 000FC9  
               ?i2_Evaluate_Signs 000E                ??_InitTransmission 0060  
              ??i2_Evaluate_Signs 0010                    ?_Check_Buttons 0001  
                      ??_InitPort 0060                        ??_InitTris 0060  
     i2Write_Display_Byte@counter 0007                      ??i2_Set_Bits 0004  
                      ??_Set_Bits 0063                   __CFG_PWRTEN$OFF 000000  
                         _Receive 1728                           __Hparam 0000  
                         __Lparam 0000                  Load_Data@counter 0075  
                         ___awdiv 101C                  ??_Evaluate_Signs 006F  
                    ??i2_Transmit 0003                        ??_Transmit 0062  
                         ___lwmod 12B2                      __psmallconst 021A  
                 __CFG_STVREN$OFF 000000                           __pcinit 140C  
                         __ramtop 0200                           __ptext0 1664  
                         __ptext1 16B6                           __ptext2 1704  
                         __ptext3 1692                           __ptext4 1604  
                         __ptext5 1716                           __ptext6 1742  
                         __ptext7 1736                           __ptext8 16F0  
                         __ptext9 1522                         _T1CONbits 000FCD  
                    __size_of_Isr 020E                   Set_Display@type 0073  
                       _T3CONbits 000FB1                __end_ofi2_Set_Bits 0F68  
                         _overrun 01DA              end_of_initialization 1446  
     __size_of_Write_Display_Byte 0066                __end_ofi2_Transmit 1604  
                   __Lmediumconst 0000                i2_Evaluate_Display 0A5C  
                   _Delay_Routine 1634              i2_Write_Display_Byte 149A  
             ?i2_Evaluate_Display 0009                         _RCSTAbits 000FAB  
                _Check_Detonators 1522                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE            i2Evaluate_Display@size 000D  
                     _Start_Timer 16D4                         _PORTAbits 000F80  
                       _PORTBbits 000F81                         _PORTCbits 000F82  
             i2Transmit@operation 0001             __end_ofi2_Set_Display 136A  
                       _TRISCbits 000F94              ??i2_Evaluate_Display 000B  
                 ??_Check_Buttons 0077          Ignite_Detonators@counter 0006  
                       i2___lwmod 14E0                     _check_counter 0031  
                  ?_Delay_Routine 0001                       _CCP1CONbits 000FBD  
           ?i2_Write_Display_Byte 0001        __end_ofi2_Check_Detonators 15CE  
        i2Set_Display@information 0011                      Set_Bits@bits 0060  
             start_initialization 140C                         _Load_Data 0CB6  
                       _InitAnsel 16F0                      _ignite_ready 01D8  
               __size_of_Del_Data 0046                       __end_of_Isr 0216  
                       _Read_Data 13BE                         _InitTimer 1604  
                      ?i2___lwmod 0001                  Set_Bits@bitcount 0066  
                       _Save_Data 136A    i2Write_Display_Byte@write_data 0001  
               __size_of_InitPort 0012                 __size_of_InitTris 0012  
           __end_of_InitInterrupt 1742                 __size_of_Set_Bits 00EA  
               ?_Evaluate_Display 0068                       __pdataBANK1 0100  
              ??_Evaluate_Display 006A                    _slave_selected 007A  
               __size_of_Transmit 0038                      ?_Set_Display 0070  
          Save_Data@store_address 0062                       __pbssCOMRAM 0029  
                      ?_Load_Data 0001                        ?_InitAnsel 0001  
                   __pcstackBANK0 0060                        ?_Read_Data 0060  
                      ?_InitTimer 0001                 i2___lwmod@divisor 0003  
               i2___lwmod@counter 0005                   ??_Delay_Routine 0060  
                      ?_Save_Data 0060            ??i2_Write_Display_Byte 0003  
                    _current_time 002F                  _master_addressed 01D9  
                        ?_Receive 0001         __size_of_InitTransmission 0024  
       __size_ofi2_Evaluate_Signs 0064             Read_Data@read_address 0064  
                       __pintcode 0008                          ?___awdiv 0001  
                        ?___lwmod 0060                       __smallconst 021A  
        __end_of_Check_Detonators 155E                       ??i2___lwmod 0005  
                        _PIE1bits 000F9D               i2Set_Bits@Bitoutput 0008  
                        i2u117_40 0C42                          i2u117_47 0C38  
                        i2u191_44 0184                          i2u191_45 0180  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        i2u189_44 0152                          i2u189_45 014E  
                __CFG_WDTPS$32768 000000        i2Evaluate_Display@evaluate 0009  
                        _SSP1CON1 000FC6                          _SSP1STAT 000FC7  
                    ?_Start_Timer 0001                    i2Set_Bits@bits 0001  
                        _Del_Data 1454                       ??_Load_Data 0074  
                     ??_InitAnsel 0060                   _receive_counter 0033  
                     ??_Read_Data 0062                       ??_InitTimer 0060  
      __end_of_Write_Display_Byte 11EA                         copy_data0 143A  
                        _InitPort 1716                          _InitTris 1704  
                     ??_Save_Data 0063                 Transmit@operation 0060  
                      _EECON1bits 000FA6                   Isr@search_index 0028  
                        _Set_Bits 0DC4                      _pin_selected 0079  
                        __Hrparam 0000                  __size_of_Receive 000E  
                        __Lrparam 0000                 __CFG_P2BMX$PORTB5 000000  
                        _Transmit 155E                  __size_of___awdiv 0084  
                __size_of___lwmod 0062      i2Evaluate_Signs@valuecounter 0010  
              i2_Check_Detonators 1596              __size_of_Set_Display 0064  
         __size_of_Evaluate_Signs 0078       __size_ofi2_Evaluate_Display 025A  
             ?i2_Check_Detonators 0001                          __ptext10 155E  
                        __ptext11 0270                          __ptext20 078E  
                        __ptext12 16D4                          __ptext21 0DC4  
                        __ptext13 1454                          __ptext30 0EAE  
                        __ptext22 13BE                          __ptext14 136A  
                        __ptext31 1596                          __ptext23 1634  
                        __ptext15 0CB6                          __ptext32 101C  
                        __ptext16 11EA                          __ptext33 1728  
                        __ptext25 1314                          __ptext17 1184  
                        __ptext34 1118                          __ptext26 149A  
                        __ptext18 10A0                          __ptext35 15CE  
                        __ptext27 124E                          __ptext19 12B2  
                        __ptext28 14E0                          __ptext29 0A5C  
           __end_of_Check_Buttons 078E                  Set_Display@value 0071  
                   __size_of_Init 001E                     __size_of_main 002E  
                        _received 0029            __size_ofi2_Set_Display 0056  
                _InitTransmission 1692        Delay_Routine@delay_counter 0062  
                i2_Evaluate_Signs 124E              ??i2_Check_Detonators 0004  
                        _testflag 01DB                          int$flags 003C  
            Evaluate_Display@size 006C                  Transmit@receiver 0062  
    Write_Display_Byte@write_data 0060        Evaluate_Signs@valuecounter 006F  
                      _INTCONbits 000FF2         __size_of_Evaluate_Display 02CE  
              Read_Data@data_read 0062                          intlevel2 0000  
                ___lwmod@dividend 0060         Write_Display_Byte@counter 0066  
                      _RCSTA1bits 000FAB                   _display_counter 0032  
              i2Set_Bits@bitcount 0007                   Del_Data@counter 0076  
            __size_of_Start_Timer 001C                     i2_Set_Display 1314  
                 ___lwmod@divisor 0062     Delay_Routine@delay_multiplyer 0061  
                 ___lwmod@counter 0064                 __CFG_T3CMX$PORTC0 000000  
          __size_of_InitInterrupt 000C                 ?_Check_Detonators 0001  
              ??_Check_Detonators 0063             __end_of_Delay_Routine 1664  
               __CFG_FOSC$INTIO67 000000                        i2_Set_Bits 0EAE  
   __size_ofi2_Write_Display_Byte 0046  
