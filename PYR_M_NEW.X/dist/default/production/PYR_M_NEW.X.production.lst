

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Nov 27 22:06:22 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataBANK1
    40  00087E                     __pidataBANK1:
    41                           	opt stack 0
    42                           
    43                           ;initializer for _pin
    44  00087E  00                 	db	0
    45  00087F  00                 	db	0
    46  000880  00                 	db	0
    47  000881  1F                 	db	31
    48  000882  00                 	db	0
    49  000883  00                 	db	0
    50  000884  00                 	db	0
    51  000885  01                 	db	1
    52  000886  01                 	db	1
    53  000887  1E                 	db	30
    54  000888  00                 	db	0
    55  000889  00                 	db	0
    56  00088A  00                 	db	0
    57  00088B  02                 	db	2
    58  00088C  02                 	db	2
    59  00088D  1D                 	db	29
    60  00088E  00                 	db	0
    61  00088F  00                 	db	0
    62  000890  00                 	db	0
    63  000891  03                 	db	3
    64  000892  03                 	db	3
    65  000893  1C                 	db	28
    66  000894  00                 	db	0
    67  000895  00                 	db	0
    68  000896  00                 	db	0
    69  000897  04                 	db	4
    70  000898  04                 	db	4
    71  000899  1B                 	db	27
    72  00089A  00                 	db	0
    73  00089B  00                 	db	0
    74  00089C  00                 	db	0
    75  00089D  05                 	db	5
    76  00089E  05                 	db	5
    77  00089F  1A                 	db	26
    78  0008A0  00                 	db	0
    79  0008A1  00                 	db	0
    80  0008A2  00                 	db	0
    81  0008A3  06                 	db	6
    82  0008A4  06                 	db	6
    83  0008A5  19                 	db	25
    84  0008A6  00                 	db	0
    85  0008A7  00                 	db	0
    86  0008A8  00                 	db	0
    87  0008A9  07                 	db	7
    88  0008AA  07                 	db	7
    89  0008AB  18                 	db	24
    90  0008AC  00                 	db	0
    91  0008AD  00                 	db	0
    92  0008AE  00                 	db	0
    93  0008AF  08                 	db	8
    94  0008B0  08                 	db	8
    95  0008B1  27                 	db	39
    96  0008B2  00                 	db	0
    97  0008B3  00                 	db	0
    98  0008B4  00                 	db	0
    99  0008B5  09                 	db	9
   100  0008B6  09                 	db	9
   101  0008B7  26                 	db	38
   102  0008B8  00                 	db	0
   103  0008B9  00                 	db	0
   104  0008BA  01                 	db	1
   105  0008BB  00                 	db	0
   106  0008BC  0A                 	db	10
   107  0008BD  25                 	db	37
   108  0008BE  00                 	db	0
   109  0008BF  00                 	db	0
   110  0008C0  01                 	db	1
   111  0008C1  01                 	db	1
   112  0008C2  0B                 	db	11
   113  0008C3  24                 	db	36
   114  0008C4  00                 	db	0
   115  0008C5  00                 	db	0
   116  0008C6  01                 	db	1
   117  0008C7  02                 	db	2
   118  0008C8  0C                 	db	12
   119  0008C9  23                 	db	35
   120  0008CA  00                 	db	0
   121  0008CB  00                 	db	0
   122  0008CC  01                 	db	1
   123  0008CD  03                 	db	3
   124  0008CE  0D                 	db	13
   125  0008CF  22                 	db	34
   126  0008D0  00                 	db	0
   127  0008D1  00                 	db	0
   128  0008D2  01                 	db	1
   129  0008D3  04                 	db	4
   130  0008D4  0E                 	db	14
   131  0008D5  21                 	db	33
   132  0008D6  00                 	db	0
   133  0008D7  00                 	db	0
   134  0008D8  01                 	db	1
   135  0008D9  05                 	db	5
   136  0008DA  0F                 	db	15
   137  0008DB  20                 	db	32
   138  0008DC  00                 	db	0
   139  0008DD  00                 	db	0
   140  0008DE  01                 	db	1
   141  0008DF  06                 	db	6
   142  0008E0  10                 	db	16
   143  0008E1  2F                 	db	47
   144  0008E2  00                 	db	0
   145  0008E3  00                 	db	0
   146  0008E4  01                 	db	1
   147  0008E5  07                 	db	7
   148  0008E6  11                 	db	17
   149  0008E7  2E                 	db	46
   150  0008E8  00                 	db	0
   151  0008E9  00                 	db	0
   152  0008EA  01                 	db	1
   153  0008EB  08                 	db	8
   154  0008EC  12                 	db	18
   155  0008ED  2D                 	db	45
   156  0008EE  00                 	db	0
   157  0008EF  00                 	db	0
   158  0008F0  01                 	db	1
   159  0008F1  09                 	db	9
   160  0008F2  13                 	db	19
   161  0008F3  2C                 	db	44
   162  0008F4  00                 	db	0
   163  0008F5  00                 	db	0
   164  0008F6  02                 	db	2
   165  0008F7  00                 	db	0
   166  0008F8  14                 	db	20
   167  0008F9  2B                 	db	43
   168  0008FA  00                 	db	0
   169  0008FB  00                 	db	0
   170  0008FC  02                 	db	2
   171  0008FD  01                 	db	1
   172  0008FE  15                 	db	21
   173  0008FF  2A                 	db	42
   174  000900  00                 	db	0
   175  000901  00                 	db	0
   176  000902  02                 	db	2
   177  000903  02                 	db	2
   178  000904  16                 	db	22
   179  000905  29                 	db	41
   180  000906  00                 	db	0
   181  000907  00                 	db	0
   182  000908  02                 	db	2
   183  000909  03                 	db	3
   184  00090A  17                 	db	23
   185  00090B  28                 	db	40
   186  00090C  00                 	db	0
   187  00090D  00                 	db	0
   188  00090E  02                 	db	2
   189  00090F  04                 	db	4
   190  000910  18                 	db	24
   191  000911  35                 	db	53
   192  000912  00                 	db	0
   193  000913  00                 	db	0
   194  000914  02                 	db	2
   195  000915  05                 	db	5
   196  000916  19                 	db	25
   197  000917  34                 	db	52
   198  000918  00                 	db	0
   199  000919  00                 	db	0
   200  00091A  02                 	db	2
   201  00091B  06                 	db	6
   202  00091C  1A                 	db	26
   203  00091D  33                 	db	51
   204  00091E  00                 	db	0
   205  00091F  00                 	db	0
   206  000920  02                 	db	2
   207  000921  07                 	db	7
   208  000922  1B                 	db	27
   209  000923  32                 	db	50
   210  000924  00                 	db	0
   211  000925  00                 	db	0
   212  000926  02                 	db	2
   213  000927  08                 	db	8
   214  000928  1C                 	db	28
   215  000929  31                 	db	49
   216  00092A  00                 	db	0
   217  00092B  00                 	db	0
   218  00092C  02                 	db	2
   219  00092D  09                 	db	9
   220  00092E  1D                 	db	29
   221  00092F  30                 	db	48
   222  000930  00                 	db	0
   223  000931  00                 	db	0
   224  0000                     _ANSELA	set	3896
   225  0000                     _ANSELB	set	3897
   226  0000                     _ANSELC	set	3898
   227  0000                     _CCPTMRS0bits	set	3913
   228  0000                     _BAUDCON1bits	set	4024
   229  0000                     _CCP1CONbits	set	4029
   230  0000                     _CCPR1H	set	4031
   231  0000                     _CCPR1L	set	4030
   232  0000                     _EEADR	set	4009
   233  0000                     _EECON1bits	set	4006
   234  0000                     _EECON2	set	4007
   235  0000                     _EEDATA	set	4008
   236  0000                     _INTCONbits	set	4082
   237  0000                     _OSCCON	set	4051
   238  0000                     _PIE1bits	set	3997
   239  0000                     _PIR1bits	set	3998
   240  0000                     _PIR2bits	set	4001
   241  0000                     _PORTA	set	3968
   242  0000                     _PORTAbits	set	3968
   243  0000                     _PORTB	set	3969
   244  0000                     _PORTBbits	set	3969
   245  0000                     _PORTC	set	3970
   246  0000                     _PORTCbits	set	3970
   247  0000                     _PORTE	set	3972
   248  0000                     _RCREG1	set	4014
   249  0000                     _RCSTA1bits	set	4011
   250  0000                     _SPBRG1	set	4015
   251  0000                     _SSP1BUF	set	4041
   252  0000                     _SSP1CON1	set	4038
   253  0000                     _SSP1STAT	set	4039
   254  0000                     _T1CONbits	set	4045
   255  0000                     _T3CONbits	set	4017
   256  0000                     _TMR1H	set	4047
   257  0000                     _TMR1L	set	4046
   258  0000                     _TRISA	set	3986
   259  0000                     _TRISB	set	3987
   260  0000                     _TRISC	set	3988
   261  0000                     _TRISCbits	set	3988
   262  0000                     _TRISE	set	3990
   263  0000                     _TXREG1	set	4013
   264  0000                     _TXSTA1bits	set	4012
   265  0000                     _SSP1IF	set	31987
   266                           
   267                           	psect	smallconst
   268  000200                     __psmallconst:
   269                           	opt stack 0
   270  000200  00                 	db	0
   271  000201                     STR_9:
   272  000201  41                 	db	65	;'A'
   273  000202  42                 	db	66	;'B'
   274  000203  43                 	db	67	;'C'
   275  000204  44                 	db	68	;'D'
   276  000205  45                 	db	69	;'E'
   277  000206  46                 	db	70	;'F'
   278  000207  47                 	db	71	;'G'
   279  000208  00                 	db	0
   280  000209                     STR_1:
   281  000209  41                 	db	65	;'A'
   282  00020A  42                 	db	66	;'B'
   283  00020B  43                 	db	67	;'C'
   284  00020C  44                 	db	68	;'D'
   285  00020D  45                 	db	69	;'E'
   286  00020E  46                 	db	70	;'F'
   287  00020F  00                 	db	0
   288  000210                     STR_10:
   289  000210  41                 	db	65	;'A'
   290  000211  42                 	db	66	;'B'
   291  000212  43                 	db	67	;'C'
   292  000213  44                 	db	68	;'D'
   293  000214  46                 	db	70	;'F'
   294  000215  47                 	db	71	;'G'
   295  000216  00                 	db	0
   296  000217                     STR_12:
   297  000217  41                 	db	65	;'A'
   298  000218  42                 	db	66	;'B'
   299  000219  43                 	db	67	;'C'
   300  00021A  45                 	db	69	;'E'
   301  00021B  46                 	db	70	;'F'
   302  00021C  47                 	db	71	;'G'
   303  00021D  00                 	db	0
   304  00021E                     STR_7:
   305  00021E  41                 	db	65	;'A'
   306  00021F  43                 	db	67	;'C'
   307  000220  44                 	db	68	;'D'
   308  000221  45                 	db	69	;'E'
   309  000222  46                 	db	70	;'F'
   310  000223  47                 	db	71	;'G'
   311  000224  00                 	db	0
   312  000225                     STR_4:
   313  000225  41                 	db	65	;'A'
   314  000226  42                 	db	66	;'B'
   315  000227  43                 	db	67	;'C'
   316  000228  44                 	db	68	;'D'
   317  000229  47                 	db	71	;'G'
   318  00022A  00                 	db	0
   319  00022B                     STR_3:
   320  00022B  41                 	db	65	;'A'
   321  00022C  42                 	db	66	;'B'
   322  00022D  44                 	db	68	;'D'
   323  00022E  45                 	db	69	;'E'
   324  00022F  47                 	db	71	;'G'
   325  000230  00                 	db	0
   326  000231                     STR_6:
   327  000231  41                 	db	65	;'A'
   328  000232  43                 	db	67	;'C'
   329  000233  44                 	db	68	;'D'
   330  000234  46                 	db	70	;'F'
   331  000235  47                 	db	71	;'G'
   332  000236  00                 	db	0
   333  000237                     STR_11:
   334  000237  41                 	db	65	;'A'
   335  000238  44                 	db	68	;'D'
   336  000239  45                 	db	69	;'E'
   337  00023A  46                 	db	70	;'F'
   338  00023B  47                 	db	71	;'G'
   339  00023C  00                 	db	0
   340  00023D                     STR_5:
   341  00023D  42                 	db	66	;'B'
   342  00023E  43                 	db	67	;'C'
   343  00023F  46                 	db	70	;'F'
   344  000240  47                 	db	71	;'G'
   345  000241  00                 	db	0
   346  000242                     STR_8:
   347  000242  41                 	db	65	;'A'
   348  000243  42                 	db	66	;'B'
   349  000244  43                 	db	67	;'C'
   350  000245  00                 	db	0
   351  0000                     
   352                           ; #config settings
   353  000246  00                 	db	0	; dummy byte at the end
   354  0000                     
   355                           	psect	cinit
   356  000A92                     __pcinit:
   357                           	opt stack 0
   358  000A92                     start_initialization:
   359                           	opt stack 0
   360  000A92                     __initialization:
   361                           	opt stack 0
   362                           
   363                           ; Clear objects allocated to BANK0 (57 bytes)
   364  000A92  EE00  F060         	lfsr	0,__pbssBANK0
   365  000A96  0E39               	movlw	57
   366  000A98                     clear_0:
   367  000A98  6AEE               	clrf	postinc0,c
   368  000A9A  06E8               	decf	wreg,f,c
   369  000A9C  E1FD               	bnz	clear_0
   370                           
   371                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   372  000A9E  6A2E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   373                           
   374                           ; Clear objects allocated to COMRAM (8 bytes)
   375  000AA0  EE00  F026         	lfsr	0,__pbssCOMRAM
   376  000AA4  0E08               	movlw	8
   377  000AA6                     clear_1:
   378  000AA6  6AEE               	clrf	postinc0,c
   379  000AA8  06E8               	decf	wreg,f,c
   380  000AAA  E1FD               	bnz	clear_1
   381                           
   382                           ; Initialize objects allocated to BANK1 (180 bytes)
   383                           ; load TBLPTR registers with __pidataBANK1
   384  000AAC  0E7E               	movlw	low __pidataBANK1
   385  000AAE  6EF6               	movwf	tblptrl,c
   386  000AB0  0E08               	movlw	high __pidataBANK1
   387  000AB2  6EF7               	movwf	tblptrh,c
   388  000AB4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   389  000AB6  6EF8               	movwf	tblptru,c
   390  000AB8  EE01  F000         	lfsr	0,__pdataBANK1
   391  000ABC  EE10 F0B4          	lfsr	1,180
   392  000AC0                     copy_data0:
   393  000AC0  0009               	tblrd		*+
   394  000AC2  CFF5 FFEE          	movff	tablat,postinc0
   395  000AC6  50E5               	movf	postdec1,w,c
   396  000AC8  50E1               	movf	fsr1l,w,c
   397  000ACA  E1FA               	bnz	copy_data0
   398  000ACC                     end_of_initialization:
   399                           	opt stack 0
   400  000ACC                     __end_of__initialization:
   401                           	opt stack 0
   402  000ACC  902F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   403  000ACE  922F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   404  000AD0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   405  000AD2  6EF8               	movwf	tblptru,c
   406  000AD4  0100               	movlb	0
   407  000AD6  EFE5  F005         	goto	_main	;jump to C main() function
   408                           tblptru	equ	0xFF8
   409                           tblptrh	equ	0xFF7
   410                           tblptrl	equ	0xFF6
   411                           tablat	equ	0xFF5
   412                           postinc0	equ	0xFEE
   413                           wreg	equ	0xFE8
   414                           postdec1	equ	0xFE5
   415                           fsr1l	equ	0xFE1
   416                           
   417                           	psect	bitbssCOMRAM
   418  000170                     __pbitbssCOMRAM:
   419                           	opt stack 0
   420  000170                     _ignite_ready:
   421                           	opt stack 0
   422  000170                     	ds	1
   423  000171                     _testflag:
   424                           	opt stack 0
   425  000171                     	ds	1
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           
   435                           	psect	bssCOMRAM
   436  000026                     __pbssCOMRAM:
   437                           	opt stack 0
   438  000026                     _current_time:
   439                           	opt stack 0
   440  000026                     	ds	2
   441  000028                     _overrun:
   442                           	opt stack 0
   443  000028                     	ds	1
   444  000029                     _pin_selected:
   445                           	opt stack 0
   446  000029                     	ds	1
   447  00002A                     _slave_selected:
   448                           	opt stack 0
   449  00002A                     	ds	1
   450  00002B                     _signs:
   451                           	opt stack 0
   452  00002B                     	ds	3
   453                           tblptru	equ	0xFF8
   454                           tblptrh	equ	0xFF7
   455                           tblptrl	equ	0xFF6
   456                           tablat	equ	0xFF5
   457                           postinc0	equ	0xFEE
   458                           wreg	equ	0xFE8
   459                           postdec1	equ	0xFE5
   460                           fsr1l	equ	0xFE1
   461                           
   462                           	psect	bssBANK0
   463  000060                     __pbssBANK0:
   464                           	opt stack 0
   465  000060                     _pixels:
   466                           	opt stack 0
   467  000060                     	ds	57
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           
   477                           	psect	dataBANK1
   478  000100                     __pdataBANK1:
   479                           	opt stack 0
   480  000100                     _pin:
   481                           	opt stack 0
   482  000100                     	ds	180
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           postinc0	equ	0xFEE
   488                           wreg	equ	0xFE8
   489                           postdec1	equ	0xFE5
   490                           fsr1l	equ	0xFE1
   491                           
   492                           	psect	cstackCOMRAM
   493  000001                     __pcstackCOMRAM:
   494                           	opt stack 0
   495  000001                     ??_Isr:
   496  000001                     
   497                           ; 1 bytes @ 0x0
   498  000001                     	ds	14
   499  00000F                     Isr@received:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0xE
   503  00000F                     	ds	1
   504  000010                     ??_Delay_Routine:
   505  000010                     ?_Read_Data:
   506                           	opt stack 0
   507  000010                     ?___lwmod:
   508                           	opt stack 0
   509  000010                     Write_Display@write_data:
   510                           	opt stack 0
   511  000010                     Save_Data@store:
   512                           	opt stack 0
   513  000010                     ___lwmod@dividend:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0xF
   517  000010                     	ds	1
   518  000011                     Delay_Routine@delay_multiplyer:
   519                           	opt stack 0
   520  000011                     Set_Bits@bits:
   521                           	opt stack 0
   522                           
   523                           ; 3 bytes @ 0x10
   524  000011                     	ds	1
   525  000012                     Delay_Routine@delay_counter:
   526                           	opt stack 0
   527  000012                     Save_Data@store_address:
   528                           	opt stack 0
   529  000012                     Read_Data@data_read:
   530                           	opt stack 0
   531  000012                     ___lwmod@divisor:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x11
   535  000012                     	ds	1
   536  000013                     
   537                           ; 0 bytes @ 0x12
   538  000013                     	ds	1
   539  000014                     ??_Set_Bits:
   540  000014                     Read_Data@read_address:
   541                           	opt stack 0
   542  000014                     ___lwmod@counter:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x13
   546  000014                     	ds	3
   547  000017                     Set_Bits@bitcount:
   548                           	opt stack 0
   549                           
   550                           ; 1 bytes @ 0x16
   551  000017                     	ds	1
   552  000018                     Set_Bits@Bitoutput:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x17
   556  000018                     	ds	1
   557  000019                     Evaluate_Display@evaluate:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x18
   561  000019                     	ds	2
   562  00001B                     Evaluate_Display@size:
   563                           	opt stack 0
   564                           
   565                           ; 1 bytes @ 0x1A
   566  00001B                     	ds	1
   567  00001C                     Evaluate_Display@counter:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x1B
   571  00001C                     	ds	1
   572  00001D                     Evaluate_Signs@evaluation_value:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x1C
   576  00001D                     	ds	2
   577  00001F                     Evaluate_Signs@valuecounter:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x1E
   581  00001F                     	ds	1
   582  000020                     Set_Display@information:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x1F
   586  000020                     	ds	1
   587  000021                     Set_Display@value:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x20
   591  000021                     	ds	2
   592  000023                     Set_Display@type:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x22
   596  000023                     	ds	1
   597  000024                     ??_Check_Buttons:
   598                           
   599                           ; 0 bytes @ 0x23
   600  000024                     	ds	2
   601  000026                     tblptru	equ	0xFF8
   602                           tblptrh	equ	0xFF7
   603                           tblptrl	equ	0xFF6
   604                           tablat	equ	0xFF5
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           postdec1	equ	0xFE5
   608                           fsr1l	equ	0xFE1
   609                           
   610                           ; 0 bytes @ 0x25
   611 ;;
   612 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   613 ;;
   614 ;; *************** function _main *****************
   615 ;; Defined at:
   616 ;;		line 86 in file "main.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;		None               void
   623 ;; Registers used:
   624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1
   630 ;;      Params:         0       0       0
   631 ;;      Locals:         0       0       0
   632 ;;      Temps:          0       0       0
   633 ;;      Totals:         0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels required when called:    8
   636 ;; This function calls:
   637 ;;		_Check_Buttons
   638 ;;		_Check_Detonators
   639 ;;		_Init
   640 ;;		_Set_Display
   641 ;; This function is called by:
   642 ;;		Startup code after reset
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text0
   647  000BCA                     __ptext0:
   648                           	opt stack 0
   649  000BCA                     _main:
   650                           	opt stack 23
   651                           
   652                           ;main.c: 87: Init();
   653                           
   654                           ;incstack = 0
   655  000BCA  EC1B  F006         	call	_Init	;wreg free
   656  000BCE                     l1857:
   657                           
   658                           ;main.c: 89: Check_Buttons();
   659  000BCE  EC24  F001         	call	_Check_Buttons	;wreg free
   660                           
   661                           ;main.c: 90: if(testflag == 1) {
   662  000BD2  A22E               	btfss	_testflag/(0+8),_testflag& (0+7),c
   663  000BD4  D7FC               	goto	l1857
   664                           
   665                           ;main.c: 91: Set_Display('7', 'T',0);
   666  000BD6  0E54               	movlw	84
   667  000BD8  6E20               	movwf	Set_Display@information,c
   668  000BDA  0E00               	movlw	0
   669  000BDC  6E22               	movwf	Set_Display@value+1,c
   670  000BDE  0E00               	movlw	0
   671  000BE0  6E21               	movwf	Set_Display@value,c
   672  000BE2  0E37               	movlw	55
   673  000BE4  EC6D  F005         	call	_Set_Display
   674                           
   675                           ;main.c: 92: Check_Detonators();
   676  000BE8  EC60  F006         	call	_Check_Detonators	;wreg free
   677  000BEC  D7F0               	goto	l1857
   678  000BEE                     __end_of_main:
   679                           	opt stack 0
   680                           tblptru	equ	0xFF8
   681                           tblptrh	equ	0xFF7
   682                           tblptrl	equ	0xFF6
   683                           tablat	equ	0xFF5
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           postdec1	equ	0xFE5
   687                           fsr1l	equ	0xFE1
   688                           
   689 ;; *************** function _Init *****************
   690 ;; Defined at:
   691 ;;		line 3 in file "init.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;		None               void
   698 ;; Registers used:
   699 ;;		wreg, status,2, cstack
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1
   705 ;;      Params:         0       0       0
   706 ;;      Locals:         0       0       0
   707 ;;      Temps:          0       0       0
   708 ;;      Totals:         0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    3
   712 ;; This function calls:
   713 ;;		_InitAnsel
   714 ;;		_InitInterrupt
   715 ;;		_InitMiscellaneous
   716 ;;		_InitPort
   717 ;;		_InitTimer
   718 ;;		_InitTransmission
   719 ;;		_InitTris
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text1
   726  000C36                     __ptext1:
   727                           	opt stack 0
   728  000C36                     _Init:
   729                           	opt stack 27
   730                           
   731                           ;init.c: 4: InitPort();
   732                           
   733                           ;incstack = 0
   734  000C36  EC47  F006         	call	_InitPort	;wreg free
   735                           
   736                           ;init.c: 5: InitTris();
   737  000C3A  EC3E  F006         	call	_InitTris	;wreg free
   738                           
   739                           ;init.c: 6: InitAnsel();
   740  000C3E  EC2A  F006         	call	_InitAnsel	;wreg free
   741                           
   742                           ;init.c: 7: InitMiscellaneous();
   743  000C42  EC5D  F006         	call	_InitMiscellaneous	;wreg free
   744                           
   745                           ;init.c: 8: InitTransmission();
   746  000C46  ECF7  F005         	call	_InitTransmission	;wreg free
   747                           
   748                           ;init.c: 9: InitTimer();
   749  000C4A  ECD1  F005         	call	_InitTimer	;wreg free
   750                           
   751                           ;init.c: 10: InitInterrupt();
   752  000C4E  EC58  F006         	call	_InitInterrupt	;wreg free
   753  000C52  0012               	return		;funcret
   754  000C54                     __end_of_Init:
   755                           	opt stack 0
   756                           tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           tblptrl	equ	0xFF6
   759                           tablat	equ	0xFF5
   760                           postinc0	equ	0xFEE
   761                           wreg	equ	0xFE8
   762                           postdec1	equ	0xFE5
   763                           fsr1l	equ	0xFE1
   764                           
   765 ;; *************** function _InitTris *****************
   766 ;; Defined at:
   767 ;;		line 20 in file "init.c"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;		None               void
   774 ;; Registers used:
   775 ;;		wreg, status,2
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMRAM   BANK0   BANK1
   781 ;;      Params:         0       0       0
   782 ;;      Locals:         0       0       0
   783 ;;      Temps:          0       0       0
   784 ;;      Totals:         0       0       0
   785 ;;Total ram usage:        0 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    2
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_Init
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           	psect	text2
   796  000C7C                     __ptext2:
   797                           	opt stack 0
   798  000C7C                     _InitTris:
   799                           	opt stack 27
   800                           
   801                           ;init.c: 21: TRISA = 0b00000000;
   802                           
   803                           ;incstack = 0
   804  000C7C  0E00               	movlw	0
   805  000C7E  6E92               	movwf	3986,c	;volatile
   806                           
   807                           ;init.c: 22: TRISB = 0b00011111;
   808  000C80  0E1F               	movlw	31
   809  000C82  6E93               	movwf	3987,c	;volatile
   810                           
   811                           ;init.c: 23: TRISC = 0b10000010;
   812  000C84  0E82               	movlw	130
   813  000C86  6E94               	movwf	3988,c	;volatile
   814                           
   815                           ;init.c: 24: TRISE = 0;
   816  000C88  0E00               	movlw	0
   817  000C8A  6E96               	movwf	3990,c	;volatile
   818  000C8C  0012               	return		;funcret
   819  000C8E                     __end_of_InitTris:
   820                           	opt stack 0
   821                           tblptru	equ	0xFF8
   822                           tblptrh	equ	0xFF7
   823                           tblptrl	equ	0xFF6
   824                           tablat	equ	0xFF5
   825                           postinc0	equ	0xFEE
   826                           wreg	equ	0xFE8
   827                           postdec1	equ	0xFE5
   828                           fsr1l	equ	0xFE1
   829                           
   830 ;; *************** function _InitTransmission *****************
   831 ;; Defined at:
   832 ;;		line 37 in file "init.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;		None
   837 ;; Return value:  Size  Location     Type
   838 ;;		None               void
   839 ;; Registers used:
   840 ;;		wreg, status,2
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMRAM   BANK0   BANK1
   846 ;;      Params:         0       0       0
   847 ;;      Locals:         0       0       0
   848 ;;      Temps:          0       0       0
   849 ;;      Totals:         0       0       0
   850 ;;Total ram usage:        0 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:    2
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_Init
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           	psect	text3
   861  000BEE                     __ptext3:
   862                           	opt stack 0
   863  000BEE                     _InitTransmission:
   864                           	opt stack 27
   865                           
   866                           ;init.c: 39: SSP1STAT = 0b01000000;
   867                           
   868                           ;incstack = 0
   869  000BEE  0E40               	movlw	64
   870  000BF0  6EC7               	movwf	4039,c	;volatile
   871                           
   872                           ;init.c: 40: SSP1CON1 = 0b00100010;
   873  000BF2  0E22               	movlw	34
   874  000BF4  6EC6               	movwf	4038,c	;volatile
   875                           
   876                           ;init.c: 42: TXSTA1bits.SYNC = 0;
   877  000BF6  98AC               	bcf	4012,4,c	;volatile
   878                           
   879                           ;init.c: 43: TXSTA1bits.BRGH = 1;
   880  000BF8  84AC               	bsf	4012,2,c	;volatile
   881                           
   882                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
   883  000BFA  96B8               	bcf	4024,3,c	;volatile
   884                           
   885                           ;init.c: 45: SPBRG1 = 25;
   886  000BFC  0E19               	movlw	25
   887  000BFE  6EAF               	movwf	4015,c	;volatile
   888                           
   889                           ;init.c: 46: TRISCbits.RC6 = 1;
   890  000C00  8C94               	bsf	3988,6,c	;volatile
   891                           
   892                           ;init.c: 47: TRISCbits.RC7 = 1;
   893  000C02  8E94               	bsf	3988,7,c	;volatile
   894                           
   895                           ;init.c: 48: RCSTA1bits.SPEN = 1;
   896  000C04  8EAB               	bsf	4011,7,c	;volatile
   897                           
   898                           ;init.c: 49: TXSTA1bits.TX9 = 1;
   899  000C06  8CAC               	bsf	4012,6,c	;volatile
   900                           
   901                           ;init.c: 50: TXSTA1bits.TXEN = 1;
   902  000C08  8AAC               	bsf	4012,5,c	;volatile
   903                           
   904                           ;init.c: 51: RCSTA1bits.RC9 = 1;
   905  000C0A  8CAB               	bsf	4011,6,c	;volatile
   906                           
   907                           ;init.c: 52: RCSTA1bits.CREN = 1;
   908  000C0C  88AB               	bsf	4011,4,c	;volatile
   909                           
   910                           ;init.c: 53: TRISCbits.RC6 = 0;
   911  000C0E  9C94               	bcf	3988,6,c	;volatile
   912  000C10  0012               	return		;funcret
   913  000C12                     __end_of_InitTransmission:
   914                           	opt stack 0
   915                           tblptru	equ	0xFF8
   916                           tblptrh	equ	0xFF7
   917                           tblptrl	equ	0xFF6
   918                           tablat	equ	0xFF5
   919                           postinc0	equ	0xFEE
   920                           wreg	equ	0xFE8
   921                           postdec1	equ	0xFE5
   922                           fsr1l	equ	0xFE1
   923                           
   924 ;; *************** function _InitTimer *****************
   925 ;; Defined at:
   926 ;;		line 56 in file "init.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;		None               void
   933 ;; Registers used:
   934 ;;		wreg, status,2
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1
   940 ;;      Params:         0       0       0
   941 ;;      Locals:         0       0       0
   942 ;;      Temps:          0       0       0
   943 ;;      Totals:         0       0       0
   944 ;;Total ram usage:        0 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    2
   947 ;; This function calls:
   948 ;;		Nothing
   949 ;; This function is called by:
   950 ;;		_Init
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text4
   955  000BA2                     __ptext4:
   956                           	opt stack 0
   957  000BA2                     _InitTimer:
   958                           	opt stack 27
   959                           
   960                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
   961                           
   962                           ;incstack = 0
   963  000BA2  0E3F               	movlw	-193
   964  000BA4  16CD               	andwf	4045,f,c	;volatile
   965                           
   966                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
   967  000BA6  0E30               	movlw	48
   968  000BA8  12CD               	iorwf	4045,f,c	;volatile
   969                           
   970                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
   971  000BAA  94CD               	bcf	4045,2,c	;volatile
   972                           
   973                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
   974  000BAC  0E3F               	movlw	-193
   975  000BAE  16B1               	andwf	4017,f,c	;volatile
   976                           
   977                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
   978  000BB0  0E30               	movlw	48
   979  000BB2  12B1               	iorwf	4017,f,c	;volatile
   980                           
   981                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
   982  000BB4  94B1               	bcf	4017,2,c	;volatile
   983                           
   984                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
   985  000BB6  50BD               	movf	4029,w,c	;volatile
   986  000BB8  0BF0               	andlw	-16
   987  000BBA  090A               	iorlw	10
   988  000BBC  6EBD               	movwf	4029,c	;volatile
   989                           
   990                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
   991  000BBE  010F               	movlb	15	; () banked
   992  000BC0  5149               	movf	73,w,b	;volatile
   993  000BC2  0BFC               	andlw	-4
   994  000BC4  0901               	iorlw	1
   995  000BC6  6F49               	movwf	73,b	;volatile
   996                           
   997                           ; BSR set to: 15
   998  000BC8  0012               	return		;funcret
   999  000BCA                     __end_of_InitTimer:
  1000                           	opt stack 0
  1001                           tblptru	equ	0xFF8
  1002                           tblptrh	equ	0xFF7
  1003                           tblptrl	equ	0xFF6
  1004                           tablat	equ	0xFF5
  1005                           postinc0	equ	0xFEE
  1006                           wreg	equ	0xFE8
  1007                           postdec1	equ	0xFE5
  1008                           fsr1l	equ	0xFE1
  1009                           
  1010 ;; *************** function _InitPort *****************
  1011 ;; Defined at:
  1012 ;;		line 13 in file "init.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;		None               void
  1019 ;; Registers used:
  1020 ;;		wreg, status,2
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1
  1026 ;;      Params:         0       0       0
  1027 ;;      Locals:         0       0       0
  1028 ;;      Temps:          0       0       0
  1029 ;;      Totals:         0       0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    2
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_Init
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text5
  1041  000C8E                     __ptext5:
  1042                           	opt stack 0
  1043  000C8E                     _InitPort:
  1044                           	opt stack 27
  1045                           
  1046                           ;init.c: 14: PORTA = 0b00000000;
  1047                           
  1048                           ; BSR set to: 15
  1049                           ;incstack = 0
  1050  000C8E  0E00               	movlw	0
  1051  000C90  6E80               	movwf	3968,c	;volatile
  1052                           
  1053                           ;init.c: 15: PORTB = 0b00000000;
  1054  000C92  0E00               	movlw	0
  1055  000C94  6E81               	movwf	3969,c	;volatile
  1056                           
  1057                           ;init.c: 16: PORTC = 0b00000001;
  1058  000C96  0E01               	movlw	1
  1059  000C98  6E82               	movwf	3970,c	;volatile
  1060                           
  1061                           ;init.c: 17: PORTE = 0;
  1062  000C9A  0E00               	movlw	0
  1063  000C9C  6E84               	movwf	3972,c	;volatile
  1064  000C9E  0012               	return		;funcret
  1065  000CA0                     __end_of_InitPort:
  1066                           	opt stack 0
  1067                           tblptru	equ	0xFF8
  1068                           tblptrh	equ	0xFF7
  1069                           tblptrl	equ	0xFF6
  1070                           tablat	equ	0xFF5
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           postdec1	equ	0xFE5
  1074                           fsr1l	equ	0xFE1
  1075                           
  1076 ;; *************** function _InitMiscellaneous *****************
  1077 ;; Defined at:
  1078 ;;		line 33 in file "init.c"
  1079 ;; Parameters:    Size  Location     Type
  1080 ;;		None
  1081 ;; Auto vars:     Size  Location     Type
  1082 ;;		None
  1083 ;; Return value:  Size  Location     Type
  1084 ;;		None               void
  1085 ;; Registers used:
  1086 ;;		wreg, status,2
  1087 ;; Tracked objects:
  1088 ;;		On entry : 0/0
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMRAM   BANK0   BANK1
  1092 ;;      Params:         0       0       0
  1093 ;;      Locals:         0       0       0
  1094 ;;      Temps:          0       0       0
  1095 ;;      Totals:         0       0       0
  1096 ;;Total ram usage:        0 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:    2
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_Init
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text6
  1107  000CBA                     __ptext6:
  1108                           	opt stack 0
  1109  000CBA                     _InitMiscellaneous:
  1110                           	opt stack 27
  1111                           
  1112                           ;init.c: 34: OSCCON = 0b01010011;
  1113                           
  1114                           ;incstack = 0
  1115  000CBA  0E53               	movlw	83
  1116  000CBC  6ED3               	movwf	4051,c	;volatile
  1117  000CBE  0012               	return		;funcret
  1118  000CC0                     __end_of_InitMiscellaneous:
  1119                           	opt stack 0
  1120                           tblptru	equ	0xFF8
  1121                           tblptrh	equ	0xFF7
  1122                           tblptrl	equ	0xFF6
  1123                           tablat	equ	0xFF5
  1124                           postinc0	equ	0xFEE
  1125                           wreg	equ	0xFE8
  1126                           postdec1	equ	0xFE5
  1127                           fsr1l	equ	0xFE1
  1128                           
  1129 ;; *************** function _InitInterrupt *****************
  1130 ;; Defined at:
  1131 ;;		line 70 in file "init.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;		None               void
  1138 ;; Registers used:
  1139 ;;		None
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1
  1145 ;;      Params:         0       0       0
  1146 ;;      Locals:         0       0       0
  1147 ;;      Temps:          0       0       0
  1148 ;;      Totals:         0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels used:    1
  1151 ;; Hardware stack levels required when called:    2
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_Init
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text7
  1160  000CB0                     __ptext7:
  1161                           	opt stack 0
  1162  000CB0                     _InitInterrupt:
  1163                           	opt stack 27
  1164                           
  1165                           ;init.c: 71: INTCONbits.GIE = 1;
  1166                           
  1167                           ;incstack = 0
  1168  000CB0  8EF2               	bsf	intcon,7,c	;volatile
  1169                           
  1170                           ;init.c: 72: INTCONbits.PEIE = 1;
  1171  000CB2  8CF2               	bsf	intcon,6,c	;volatile
  1172                           
  1173                           ;init.c: 73: PIE1bits.RCIE = 1;
  1174  000CB4  8A9D               	bsf	3997,5,c	;volatile
  1175                           
  1176                           ;init.c: 74: PIE1bits.CCP1IE = 1;
  1177  000CB6  849D               	bsf	3997,2,c	;volatile
  1178  000CB8  0012               	return		;funcret
  1179  000CBA                     __end_of_InitInterrupt:
  1180                           	opt stack 0
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           intcon	equ	0xFF2
  1186                           postinc0	equ	0xFEE
  1187                           wreg	equ	0xFE8
  1188                           postdec1	equ	0xFE5
  1189                           fsr1l	equ	0xFE1
  1190                           
  1191 ;; *************** function _InitAnsel *****************
  1192 ;; Defined at:
  1193 ;;		line 27 in file "init.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;		None               void
  1200 ;; Registers used:
  1201 ;;		wreg, status,2
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1
  1207 ;;      Params:         0       0       0
  1208 ;;      Locals:         0       0       0
  1209 ;;      Temps:          0       0       0
  1210 ;;      Totals:         0       0       0
  1211 ;;Total ram usage:        0 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    2
  1214 ;; This function calls:
  1215 ;;		Nothing
  1216 ;; This function is called by:
  1217 ;;		_Init
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           
  1221                           	psect	text8
  1222  000C54                     __ptext8:
  1223                           	opt stack 0
  1224  000C54                     _InitAnsel:
  1225                           	opt stack 27
  1226                           
  1227                           ;init.c: 28: ANSELA = 0;
  1228                           
  1229                           ;incstack = 0
  1230  000C54  0E00               	movlw	0
  1231  000C56  010F               	movlb	15	; () banked
  1232  000C58  6F38               	movwf	56,b	;volatile
  1233                           
  1234                           ;init.c: 29: ANSELB = 0;
  1235  000C5A  0E00               	movlw	0
  1236  000C5C  010F               	movlb	15	; () banked
  1237  000C5E  6F39               	movwf	57,b	;volatile
  1238                           
  1239                           ;init.c: 30: ANSELC = 0;
  1240  000C60  0E00               	movlw	0
  1241  000C62  010F               	movlb	15	; () banked
  1242  000C64  6F3A               	movwf	58,b	;volatile
  1243                           
  1244                           ; BSR set to: 15
  1245  000C66  0012               	return		;funcret
  1246  000C68                     __end_of_InitAnsel:
  1247                           	opt stack 0
  1248                           tblptru	equ	0xFF8
  1249                           tblptrh	equ	0xFF7
  1250                           tblptrl	equ	0xFF6
  1251                           tablat	equ	0xFF5
  1252                           intcon	equ	0xFF2
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           postdec1	equ	0xFE5
  1256                           fsr1l	equ	0xFE1
  1257                           
  1258 ;; *************** function _Check_Detonators *****************
  1259 ;; Defined at:
  1260 ;;		line 25 in file "ignition.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;		None               void
  1267 ;; Registers used:
  1268 ;;		None
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1
  1274 ;;      Params:         0       0       0
  1275 ;;      Locals:         0       0       0
  1276 ;;      Temps:          0       0       0
  1277 ;;      Totals:         0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    2
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text9
  1289  000CC0                     __ptext9:
  1290                           	opt stack 0
  1291  000CC0                     _Check_Detonators:
  1292                           	opt stack 28
  1293                           
  1294                           ; BSR set to: 15
  1295                           ;incstack = 0
  1296  000CC0  0012               	return		;funcret
  1297  000CC2                     __end_of_Check_Detonators:
  1298                           	opt stack 0
  1299                           tblptru	equ	0xFF8
  1300                           tblptrh	equ	0xFF7
  1301                           tblptrl	equ	0xFF6
  1302                           tablat	equ	0xFF5
  1303                           intcon	equ	0xFF2
  1304                           postinc0	equ	0xFEE
  1305                           wreg	equ	0xFE8
  1306                           postdec1	equ	0xFE5
  1307                           fsr1l	equ	0xFE1
  1308                           
  1309 ;; *************** function _Check_Buttons *****************
  1310 ;; Defined at:
  1311 ;;		line 3 in file "buttonchanges.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;		None               void
  1318 ;; Registers used:
  1319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMRAM   BANK0   BANK1
  1325 ;;      Params:         0       0       0
  1326 ;;      Locals:         0       0       0
  1327 ;;      Temps:          2       0       0
  1328 ;;      Totals:         2       0       0
  1329 ;;Total ram usage:        2 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    7
  1332 ;; This function calls:
  1333 ;;		_Delay_Routine
  1334 ;;		_Read_Data
  1335 ;;		_Save_Data
  1336 ;;		_Set_Display
  1337 ;; This function is called by:
  1338 ;;		_main
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text10
  1343  000248                     __ptext10:
  1344                           	opt stack 0
  1345  000248                     _Check_Buttons:
  1346                           	opt stack 23
  1347                           
  1348                           ;buttonchanges.c: 4: if(PORTCbits.RC1 == 1) {
  1349                           
  1350                           ;incstack = 0
  1351  000248  A282               	btfss	3970,1,c	;volatile
  1352  00024A  D008               	goto	l78
  1353                           
  1354                           ;buttonchanges.c: 5: Delay_Routine(3);
  1355  00024C  0E03               	movlw	3
  1356  00024E  EC09  F006         	call	_Delay_Routine
  1357                           
  1358                           ;buttonchanges.c: 6: if(PORTCbits.RC1 == 1) {
  1359  000252  A282               	btfss	3970,1,c	;volatile
  1360  000254  0012               	return	
  1361                           
  1362                           ;buttonchanges.c: 7: ignite_ready = 1;
  1363  000256  802E               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1364                           
  1365                           ;buttonchanges.c: 8: __nop();
  1366  000258  F000               	nop	
  1367                           
  1368                           ;buttonchanges.c: 12: }
  1369                           ;buttonchanges.c: 13: } else if(PORTBbits.RB2 == 1) {
  1370                           
  1371                           ;buttonchanges.c: 9: return;
  1372  00025A  0012               	return	
  1373  00025C                     l78:
  1374  00025C  A481               	btfss	3969,2,c	;volatile
  1375  00025E  D051               	goto	l82
  1376                           
  1377                           ;buttonchanges.c: 14: Delay_Routine(3);
  1378  000260  0E03               	movlw	3
  1379  000262  EC09  F006         	call	_Delay_Routine
  1380                           
  1381                           ;buttonchanges.c: 15: if(PORTBbits.RB2 == 1) {
  1382  000266  A481               	btfss	3969,2,c	;volatile
  1383  000268  0012               	return	
  1384                           
  1385                           ;buttonchanges.c: 16: pin[pin_selected].time++;
  1386  00026A  5029               	movf	_pin_selected,w,c
  1387  00026C  0D06               	mullw	6
  1388  00026E  0E04               	movlw	4
  1389  000270  26F3               	addwf	prodl,f,c
  1390  000272  0E00               	movlw	0
  1391  000274  22F4               	addwfc	prodh,f,c
  1392  000276  0E00               	movlw	low _pin
  1393  000278  24F3               	addwf	prodl,w,c
  1394  00027A  6ED9               	movwf	fsr2l,c
  1395  00027C  0E01               	movlw	high _pin
  1396  00027E  20F4               	addwfc	prodh,w,c
  1397  000280  6EDA               	movwf	fsr2h,c
  1398  000282  2ADE               	incf	postinc2,f,c
  1399  000284  0E00               	movlw	0
  1400  000286  22DD               	addwfc	postdec2,f,c
  1401                           
  1402                           ;buttonchanges.c: 17: if(pin[pin_selected].time > 999) {
  1403  000288  5029               	movf	_pin_selected,w,c
  1404  00028A  0D06               	mullw	6
  1405  00028C  0E04               	movlw	4
  1406  00028E  26F3               	addwf	prodl,f,c
  1407  000290  0E00               	movlw	0
  1408  000292  22F4               	addwfc	prodh,f,c
  1409  000294  0E00               	movlw	low _pin
  1410  000296  24F3               	addwf	prodl,w,c
  1411  000298  6ED9               	movwf	fsr2l,c
  1412  00029A  0E01               	movlw	high _pin
  1413  00029C  20F4               	addwfc	prodh,w,c
  1414  00029E  6EDA               	movwf	fsr2h,c
  1415  0002A0  0E01               	movlw	1
  1416  0002A2  BEDB               	btfsc	plusw2,7,c
  1417  0002A4  D016               	goto	l1735
  1418  0002A6  0EE8               	movlw	232
  1419  0002A8  5CDE               	subwf	postinc2,w,c
  1420  0002AA  0E03               	movlw	3
  1421  0002AC  58DE               	subwfb	postinc2,w,c
  1422  0002AE  A0D8               	btfss	status,0,c
  1423  0002B0  D010               	goto	l1735
  1424                           
  1425                           ;buttonchanges.c: 18: pin[pin_selected].time = 0;
  1426  0002B2  5029               	movf	_pin_selected,w,c
  1427  0002B4  0D06               	mullw	6
  1428  0002B6  0E04               	movlw	4
  1429  0002B8  26F3               	addwf	prodl,f,c
  1430  0002BA  0E00               	movlw	0
  1431  0002BC  22F4               	addwfc	prodh,f,c
  1432  0002BE  0E00               	movlw	low _pin
  1433  0002C0  24F3               	addwf	prodl,w,c
  1434  0002C2  6ED9               	movwf	fsr2l,c
  1435  0002C4  0E01               	movlw	high _pin
  1436  0002C6  20F4               	addwfc	prodh,w,c
  1437  0002C8  6EDA               	movwf	fsr2h,c
  1438  0002CA  0E00               	movlw	0
  1439  0002CC  6EDE               	movwf	postinc2,c
  1440  0002CE  0E00               	movlw	0
  1441  0002D0  6EDD               	movwf	postdec2,c
  1442  0002D2                     l1735:
  1443                           
  1444                           ;buttonchanges.c: 19: }
  1445                           ;buttonchanges.c: 20: __nop();
  1446  0002D2  F000               	nop	
  1447                           
  1448                           ;buttonchanges.c: 21: Set_Display('7', '-', pin[pin_selected].time);
  1449  0002D4  0E2D               	movlw	45
  1450  0002D6  6E20               	movwf	Set_Display@information,c
  1451  0002D8  5029               	movf	_pin_selected,w,c
  1452  0002DA  0D06               	mullw	6
  1453  0002DC  0E04               	movlw	4
  1454  0002DE  26F3               	addwf	prodl,f,c
  1455  0002E0  0E00               	movlw	0
  1456  0002E2  22F4               	addwfc	prodh,f,c
  1457  0002E4  0E00               	movlw	low _pin
  1458  0002E6  24F3               	addwf	prodl,w,c
  1459  0002E8  6ED9               	movwf	fsr2l,c
  1460  0002EA  0E01               	movlw	high _pin
  1461  0002EC  20F4               	addwfc	prodh,w,c
  1462  0002EE  6EDA               	movwf	fsr2h,c
  1463  0002F0  CFDE F021          	movff	postinc2,Set_Display@value
  1464  0002F4  CFDD F022          	movff	postdec2,Set_Display@value+1
  1465  0002F8  0E37               	movlw	55
  1466  0002FA  EC6D  F005         	call	_Set_Display
  1467                           
  1468                           ;buttonchanges.c: 22: __nop();
  1469  0002FE  F000               	nop	
  1470                           
  1471                           ;buttonchanges.c: 23: }
  1472                           ;buttonchanges.c: 24: } else if(PORTBbits.RB3 == 1) {
  1473  000300  0012               	return	
  1474  000302                     l82:
  1475  000302  A681               	btfss	3969,3,c	;volatile
  1476  000304  D04B               	goto	l86
  1477                           
  1478                           ;buttonchanges.c: 25: Delay_Routine(3);
  1479  000306  0E03               	movlw	3
  1480  000308  EC09  F006         	call	_Delay_Routine
  1481                           
  1482                           ;buttonchanges.c: 26: if(PORTBbits.RB3 == 1) {
  1483  00030C  A681               	btfss	3969,3,c	;volatile
  1484  00030E  0012               	return	
  1485                           
  1486                           ;buttonchanges.c: 27: pin[pin_selected].time--;
  1487  000310  5029               	movf	_pin_selected,w,c
  1488  000312  0D06               	mullw	6
  1489  000314  0E04               	movlw	4
  1490  000316  26F3               	addwf	prodl,f,c
  1491  000318  0E00               	movlw	0
  1492  00031A  22F4               	addwfc	prodh,f,c
  1493  00031C  0E00               	movlw	low _pin
  1494  00031E  24F3               	addwf	prodl,w,c
  1495  000320  6ED9               	movwf	fsr2l,c
  1496  000322  0E01               	movlw	high _pin
  1497  000324  20F4               	addwfc	prodh,w,c
  1498  000326  6EDA               	movwf	fsr2h,c
  1499  000328  06DE               	decf	postinc2,f,c
  1500  00032A  0E00               	movlw	0
  1501  00032C  5ADD               	subwfb	postdec2,f,c
  1502                           
  1503                           ;buttonchanges.c: 28: if(pin[pin_selected].time < 0) {
  1504  00032E  5029               	movf	_pin_selected,w,c
  1505  000330  0D06               	mullw	6
  1506  000332  0E04               	movlw	4
  1507  000334  26F3               	addwf	prodl,f,c
  1508  000336  0E00               	movlw	0
  1509  000338  22F4               	addwfc	prodh,f,c
  1510  00033A  0E00               	movlw	low _pin
  1511  00033C  24F3               	addwf	prodl,w,c
  1512  00033E  6ED9               	movwf	fsr2l,c
  1513  000340  0E01               	movlw	high _pin
  1514  000342  20F4               	addwfc	prodh,w,c
  1515  000344  6EDA               	movwf	fsr2h,c
  1516  000346  0E01               	movlw	1
  1517  000348  AEDB               	btfss	plusw2,7,c
  1518  00034A  D010               	goto	l1749
  1519                           
  1520                           ;buttonchanges.c: 29: pin[pin_selected].time = 999;
  1521  00034C  5029               	movf	_pin_selected,w,c
  1522  00034E  0D06               	mullw	6
  1523  000350  0E04               	movlw	4
  1524  000352  26F3               	addwf	prodl,f,c
  1525  000354  0E00               	movlw	0
  1526  000356  22F4               	addwfc	prodh,f,c
  1527  000358  0E00               	movlw	low _pin
  1528  00035A  24F3               	addwf	prodl,w,c
  1529  00035C  6ED9               	movwf	fsr2l,c
  1530  00035E  0E01               	movlw	high _pin
  1531  000360  20F4               	addwfc	prodh,w,c
  1532  000362  6EDA               	movwf	fsr2h,c
  1533  000364  0EE7               	movlw	231
  1534  000366  6EDE               	movwf	postinc2,c
  1535  000368  0E03               	movlw	3
  1536  00036A  6EDD               	movwf	postdec2,c
  1537  00036C                     l1749:
  1538                           
  1539                           ;buttonchanges.c: 30: }
  1540                           ;buttonchanges.c: 31: __nop();
  1541  00036C  F000               	nop	
  1542                           
  1543                           ;buttonchanges.c: 32: Set_Display('7', '-', pin[pin_selected].time);
  1544  00036E  0E2D               	movlw	45
  1545  000370  6E20               	movwf	Set_Display@information,c
  1546  000372  5029               	movf	_pin_selected,w,c
  1547  000374  0D06               	mullw	6
  1548  000376  0E04               	movlw	4
  1549  000378  26F3               	addwf	prodl,f,c
  1550  00037A  0E00               	movlw	0
  1551  00037C  22F4               	addwfc	prodh,f,c
  1552  00037E  0E00               	movlw	low _pin
  1553  000380  24F3               	addwf	prodl,w,c
  1554  000382  6ED9               	movwf	fsr2l,c
  1555  000384  0E01               	movlw	high _pin
  1556  000386  20F4               	addwfc	prodh,w,c
  1557  000388  6EDA               	movwf	fsr2h,c
  1558  00038A  CFDE F021          	movff	postinc2,Set_Display@value
  1559  00038E  CFDD F022          	movff	postdec2,Set_Display@value+1
  1560  000392  0E37               	movlw	55
  1561  000394  EC6D  F005         	call	_Set_Display
  1562                           
  1563                           ;buttonchanges.c: 33: __nop();
  1564  000398  F000               	nop	
  1565                           
  1566                           ;buttonchanges.c: 34: }
  1567                           ;buttonchanges.c: 35: } else if(PORTBbits.RB4 == 1) {
  1568  00039A  0012               	return	
  1569  00039C                     l86:
  1570  00039C  A881               	btfss	3969,4,c	;volatile
  1571  00039E  D052               	goto	l90
  1572                           
  1573                           ;buttonchanges.c: 36: Delay_Routine(3);
  1574  0003A0  0E03               	movlw	3
  1575  0003A2  EC09  F006         	call	_Delay_Routine
  1576                           
  1577                           ;buttonchanges.c: 37: if(PORTBbits.RB4 == 1) {
  1578  0003A6  A881               	btfss	3969,4,c	;volatile
  1579  0003A8  0012               	return	
  1580                           
  1581                           ;buttonchanges.c: 38: pin[pin_selected].time += 10;
  1582  0003AA  5029               	movf	_pin_selected,w,c
  1583  0003AC  0D06               	mullw	6
  1584  0003AE  0E04               	movlw	4
  1585  0003B0  26F3               	addwf	prodl,f,c
  1586  0003B2  0E00               	movlw	0
  1587  0003B4  22F4               	addwfc	prodh,f,c
  1588  0003B6  0E00               	movlw	low _pin
  1589  0003B8  24F3               	addwf	prodl,w,c
  1590  0003BA  6ED9               	movwf	fsr2l,c
  1591  0003BC  0E01               	movlw	high _pin
  1592  0003BE  20F4               	addwfc	prodh,w,c
  1593  0003C0  6EDA               	movwf	fsr2h,c
  1594  0003C2  0E0A               	movlw	10
  1595  0003C4  26DE               	addwf	postinc2,f,c
  1596  0003C6  0E00               	movlw	0
  1597  0003C8  22DD               	addwfc	postdec2,f,c
  1598                           
  1599                           ;buttonchanges.c: 39: if(pin[pin_selected].time > 999) {
  1600  0003CA  5029               	movf	_pin_selected,w,c
  1601  0003CC  0D06               	mullw	6
  1602  0003CE  0E04               	movlw	4
  1603  0003D0  26F3               	addwf	prodl,f,c
  1604  0003D2  0E00               	movlw	0
  1605  0003D4  22F4               	addwfc	prodh,f,c
  1606  0003D6  0E00               	movlw	low _pin
  1607  0003D8  24F3               	addwf	prodl,w,c
  1608  0003DA  6ED9               	movwf	fsr2l,c
  1609  0003DC  0E01               	movlw	high _pin
  1610  0003DE  20F4               	addwfc	prodh,w,c
  1611  0003E0  6EDA               	movwf	fsr2h,c
  1612  0003E2  0E01               	movlw	1
  1613  0003E4  BEDB               	btfsc	plusw2,7,c
  1614  0003E6  D016               	goto	l1763
  1615  0003E8  0EE8               	movlw	232
  1616  0003EA  5CDE               	subwf	postinc2,w,c
  1617  0003EC  0E03               	movlw	3
  1618  0003EE  58DE               	subwfb	postinc2,w,c
  1619  0003F0  A0D8               	btfss	status,0,c
  1620  0003F2  D010               	goto	l1763
  1621                           
  1622                           ;buttonchanges.c: 40: pin[pin_selected].time = 0;
  1623  0003F4  5029               	movf	_pin_selected,w,c
  1624  0003F6  0D06               	mullw	6
  1625  0003F8  0E04               	movlw	4
  1626  0003FA  26F3               	addwf	prodl,f,c
  1627  0003FC  0E00               	movlw	0
  1628  0003FE  22F4               	addwfc	prodh,f,c
  1629  000400  0E00               	movlw	low _pin
  1630  000402  24F3               	addwf	prodl,w,c
  1631  000404  6ED9               	movwf	fsr2l,c
  1632  000406  0E01               	movlw	high _pin
  1633  000408  20F4               	addwfc	prodh,w,c
  1634  00040A  6EDA               	movwf	fsr2h,c
  1635  00040C  0E00               	movlw	0
  1636  00040E  6EDE               	movwf	postinc2,c
  1637  000410  0E00               	movlw	0
  1638  000412  6EDD               	movwf	postdec2,c
  1639  000414                     l1763:
  1640                           
  1641                           ;buttonchanges.c: 41: }
  1642                           ;buttonchanges.c: 42: __nop();
  1643  000414  F000               	nop	
  1644                           
  1645                           ;buttonchanges.c: 43: Set_Display('7', '-', pin[pin_selected].time);
  1646  000416  0E2D               	movlw	45
  1647  000418  6E20               	movwf	Set_Display@information,c
  1648  00041A  5029               	movf	_pin_selected,w,c
  1649  00041C  0D06               	mullw	6
  1650  00041E  0E04               	movlw	4
  1651  000420  26F3               	addwf	prodl,f,c
  1652  000422  0E00               	movlw	0
  1653  000424  22F4               	addwfc	prodh,f,c
  1654  000426  0E00               	movlw	low _pin
  1655  000428  24F3               	addwf	prodl,w,c
  1656  00042A  6ED9               	movwf	fsr2l,c
  1657  00042C  0E01               	movlw	high _pin
  1658  00042E  20F4               	addwfc	prodh,w,c
  1659  000430  6EDA               	movwf	fsr2h,c
  1660  000432  CFDE F021          	movff	postinc2,Set_Display@value
  1661  000436  CFDD F022          	movff	postdec2,Set_Display@value+1
  1662  00043A  0E37               	movlw	55
  1663  00043C  EC6D  F005         	call	_Set_Display
  1664                           
  1665                           ;buttonchanges.c: 44: __nop();
  1666  000440  F000               	nop	
  1667                           
  1668                           ;buttonchanges.c: 45: }
  1669                           ;buttonchanges.c: 46: } else if(PORTBbits.RB1 == 1) {
  1670  000442  0012               	return	
  1671  000444                     l90:
  1672  000444  A281               	btfss	3969,1,c	;volatile
  1673  000446  D09B               	goto	l94
  1674                           
  1675                           ;buttonchanges.c: 47: Delay_Routine(3);
  1676  000448  0E03               	movlw	3
  1677  00044A  EC09  F006         	call	_Delay_Routine
  1678                           
  1679                           ;buttonchanges.c: 48: if(PORTBbits.RB1 == 1) {
  1680  00044E  A281               	btfss	3969,1,c	;volatile
  1681  000450  0012               	return	
  1682                           
  1683                           ;buttonchanges.c: 49: if(PORTBbits.RB0 == 1) {
  1684  000452  A081               	btfss	3969,0,c	;volatile
  1685  000454  D005               	goto	l1781
  1686                           
  1687                           ;buttonchanges.c: 50: Delay_Routine(3);
  1688  000456  0E03               	movlw	3
  1689  000458  EC09  F006         	call	_Delay_Routine
  1690                           
  1691                           ;buttonchanges.c: 51: if(PORTBbits.RB0 == 1) {
  1692  00045C  B081               	btfsc	3969,0,c	;volatile
  1693                           
  1694                           ;buttonchanges.c: 52: testflag = 1;
  1695  00045E  822E               	bsf	_testflag/(0+8),_testflag& (0+7),c
  1696  000460                     l1781:
  1697                           
  1698                           ;buttonchanges.c: 53: }
  1699                           ;buttonchanges.c: 54: }
  1700                           ;buttonchanges.c: 55: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  1701  000460  5029               	movf	_pin_selected,w,c
  1702  000462  0D06               	mullw	6
  1703  000464  0E04               	movlw	4
  1704  000466  26F3               	addwf	prodl,f,c
  1705  000468  0E00               	movlw	0
  1706  00046A  22F4               	addwfc	prodh,f,c
  1707  00046C  0E00               	movlw	low _pin
  1708  00046E  24F3               	addwf	prodl,w,c
  1709  000470  6ED9               	movwf	fsr2l,c
  1710  000472  0E01               	movlw	high _pin
  1711  000474  20F4               	addwfc	prodh,w,c
  1712  000476  6EDA               	movwf	fsr2h,c
  1713  000478  CFDE F010          	movff	postinc2,Save_Data@store
  1714  00047C  CFDD F011          	movff	postdec2,Save_Data@store+1
  1715  000480  5029               	movf	_pin_selected,w,c
  1716  000482  0D06               	mullw	6
  1717  000484  0E02               	movlw	2
  1718  000486  26F3               	addwf	prodl,f,c
  1719  000488  0E00               	movlw	0
  1720  00048A  22F4               	addwfc	prodh,f,c
  1721  00048C  0E00               	movlw	low _pin
  1722  00048E  24F3               	addwf	prodl,w,c
  1723  000490  6ED9               	movwf	fsr2l,c
  1724  000492  0E01               	movlw	high _pin
  1725  000494  20F4               	addwfc	prodh,w,c
  1726  000496  6EDA               	movwf	fsr2h,c
  1727  000498  50DF               	movf	indf2,w,c
  1728  00049A  6E12               	movwf	Save_Data@store_address,c
  1729  00049C  EC21  F005         	call	_Save_Data	;wreg free
  1730                           
  1731                           ;buttonchanges.c: 56: pin_selected++;
  1732  0004A0  2A29               	incf	_pin_selected,f,c
  1733                           
  1734                           ;buttonchanges.c: 57: switch (slave_selected) {
  1735  0004A2  D010               	goto	l1799
  1736  0004A4                     l1785:
  1737                           
  1738                           ;buttonchanges.c: 59: if(pin_selected > 9) {
  1739  0004A4  0E09               	movlw	9
  1740  0004A6  6429               	cpfsgt	_pin_selected,c
  1741  0004A8  D017               	goto	l1801
  1742                           
  1743                           ;buttonchanges.c: 60: pin_selected = 0;
  1744  0004AA  0E00               	movlw	0
  1745  0004AC  D009               	goto	L2
  1746  0004AE                     l1789:
  1747                           
  1748                           ;buttonchanges.c: 64: if(pin_selected > 19) {
  1749  0004AE  0E13               	movlw	19
  1750  0004B0  6429               	cpfsgt	_pin_selected,c
  1751  0004B2  D012               	goto	l1801
  1752                           
  1753                           ;buttonchanges.c: 65: pin_selected = 10;
  1754  0004B4  0E0A               	movlw	10
  1755  0004B6  D004               	goto	L2
  1756  0004B8                     l1793:
  1757                           
  1758                           ;buttonchanges.c: 69: if(pin_selected > 29) {
  1759  0004B8  0E1D               	movlw	29
  1760  0004BA  6429               	cpfsgt	_pin_selected,c
  1761  0004BC  D00D               	goto	l1801
  1762                           
  1763                           ;buttonchanges.c: 70: pin_selected = 20;
  1764  0004BE  0E14               	movlw	20
  1765  0004C0                     L2:
  1766  0004C0  6E29               	movwf	_pin_selected,c
  1767                           
  1768                           ;buttonchanges.c: 73: }
  1769                           
  1770                           ;buttonchanges.c: 71: }
  1771                           ;buttonchanges.c: 72: break;
  1772  0004C2  D00A               	goto	l1801
  1773  0004C4                     l1799:
  1774  0004C4  502A               	movf	_slave_selected,w,c
  1775                           
  1776                           ; Switch size 1, requested type "space"
  1777                           ; Number of cases is 3, Range of values is 0 to 2
  1778                           ; switch strategies available:
  1779                           ; Name         Instructions Cycles
  1780                           ; simple_byte           10     6 (average)
  1781                           ;	Chosen strategy is simple_byte
  1782  0004C6  0A00               	xorlw	0	; case 0
  1783  0004C8  B4D8               	btfsc	status,2,c
  1784  0004CA  D7EC               	goto	l1785
  1785  0004CC  0A01               	xorlw	1	; case 1
  1786  0004CE  B4D8               	btfsc	status,2,c
  1787  0004D0  D7EE               	goto	l1789
  1788  0004D2  0A03               	xorlw	3	; case 2
  1789  0004D4  B4D8               	btfsc	status,2,c
  1790  0004D6  D7F0               	goto	l1793
  1791  0004D8                     l1801:
  1792                           
  1793                           ;buttonchanges.c: 74: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  1794  0004D8  5029               	movf	_pin_selected,w,c
  1795  0004DA  0D06               	mullw	6
  1796  0004DC  0E02               	movlw	2
  1797  0004DE  26F3               	addwf	prodl,f,c
  1798  0004E0  0E00               	movlw	0
  1799  0004E2  22F4               	addwfc	prodh,f,c
  1800  0004E4  0E00               	movlw	low _pin
  1801  0004E6  24F3               	addwf	prodl,w,c
  1802  0004E8  6ED9               	movwf	fsr2l,c
  1803  0004EA  0E01               	movlw	high _pin
  1804  0004EC  20F4               	addwfc	prodh,w,c
  1805  0004EE  6EDA               	movwf	fsr2h,c
  1806  0004F0  50DF               	movf	indf2,w,c
  1807  0004F2  ECB1  F005         	call	_Read_Data
  1808  0004F6  5029               	movf	_pin_selected,w,c
  1809  0004F8  0D06               	mullw	6
  1810  0004FA  0E04               	movlw	4
  1811  0004FC  26F3               	addwf	prodl,f,c
  1812  0004FE  0E00               	movlw	0
  1813  000500  22F4               	addwfc	prodh,f,c
  1814  000502  0E00               	movlw	low _pin
  1815  000504  24F3               	addwf	prodl,w,c
  1816  000506  6ED9               	movwf	fsr2l,c
  1817  000508  0E01               	movlw	high _pin
  1818  00050A  20F4               	addwfc	prodh,w,c
  1819  00050C  6EDA               	movwf	fsr2h,c
  1820  00050E  C010  FFDE         	movff	?_Read_Data,postinc2
  1821  000512  C011  FFDD         	movff	?_Read_Data+1,postdec2
  1822                           
  1823                           ;buttonchanges.c: 75: __nop();
  1824  000516  F000               	nop	
  1825                           
  1826                           ;buttonchanges.c: 76: Set_Display('7', 'A', pin[pin_selected].output);
  1827  000518  0E41               	movlw	65
  1828  00051A  6E20               	movwf	Set_Display@information,c
  1829  00051C  5029               	movf	_pin_selected,w,c
  1830  00051E  0D06               	mullw	6
  1831  000520  0E01               	movlw	1
  1832  000522  26F3               	addwf	prodl,f,c
  1833  000524  0E00               	movlw	0
  1834  000526  22F4               	addwfc	prodh,f,c
  1835  000528  0E00               	movlw	low _pin
  1836  00052A  24F3               	addwf	prodl,w,c
  1837  00052C  6ED9               	movwf	fsr2l,c
  1838  00052E  0E01               	movlw	high _pin
  1839  000530  20F4               	addwfc	prodh,w,c
  1840  000532  6EDA               	movwf	fsr2h,c
  1841  000534  50DF               	movf	indf2,w,c
  1842  000536  6E24               	movwf	??_Check_Buttons& (0+255),c
  1843  000538  5024               	movf	??_Check_Buttons,w,c
  1844  00053A  6E21               	movwf	Set_Display@value,c
  1845  00053C  6A22               	clrf	Set_Display@value+1,c
  1846  00053E  0E37               	movlw	55
  1847  000540  EC6D  F005         	call	_Set_Display
  1848                           
  1849                           ;buttonchanges.c: 77: Delay_Routine(30);
  1850  000544  0E1E               	movlw	30
  1851  000546  EC09  F006         	call	_Delay_Routine
  1852                           
  1853                           ;buttonchanges.c: 78: Set_Display('7', '-', pin[pin_selected].time);
  1854  00054A  0E2D               	movlw	45
  1855  00054C  6E20               	movwf	Set_Display@information,c
  1856  00054E  5029               	movf	_pin_selected,w,c
  1857  000550  0D06               	mullw	6
  1858  000552  0E04               	movlw	4
  1859  000554  26F3               	addwf	prodl,f,c
  1860  000556  0E00               	movlw	0
  1861  000558  22F4               	addwfc	prodh,f,c
  1862  00055A  0E00               	movlw	low _pin
  1863  00055C  24F3               	addwf	prodl,w,c
  1864  00055E  6ED9               	movwf	fsr2l,c
  1865  000560  0E01               	movlw	high _pin
  1866  000562  20F4               	addwfc	prodh,w,c
  1867  000564  6EDA               	movwf	fsr2h,c
  1868  000566  CFDE F021          	movff	postinc2,Set_Display@value
  1869  00056A  CFDD F022          	movff	postdec2,Set_Display@value+1
  1870  00056E  0E37               	movlw	55
  1871  000570  EC6D  F005         	call	_Set_Display
  1872                           
  1873                           ;buttonchanges.c: 79: Delay_Routine(30);
  1874  000574  0E1E               	movlw	30
  1875  000576  EC09  F006         	call	_Delay_Routine
  1876                           
  1877                           ;buttonchanges.c: 80: __nop();
  1878  00057A  F000               	nop	
  1879                           
  1880                           ;buttonchanges.c: 81: }
  1881                           ;buttonchanges.c: 82: } else if(PORTBbits.RB0 == 1) {
  1882  00057C  0012               	return	
  1883  00057E                     l94:
  1884  00057E  A081               	btfss	3969,0,c	;volatile
  1885  000580  0012               	return	
  1886                           
  1887                           ;buttonchanges.c: 83: Delay_Routine(3);
  1888  000582  0E03               	movlw	3
  1889  000584  EC09  F006         	call	_Delay_Routine
  1890                           
  1891                           ;buttonchanges.c: 84: if(PORTBbits.RB0 == 1) {
  1892  000588  A081               	btfss	3969,0,c	;volatile
  1893  00058A  0012               	return	
  1894                           
  1895                           ;buttonchanges.c: 85: if(PORTBbits.RB1 == 1) {
  1896  00058C  A281               	btfss	3969,1,c	;volatile
  1897  00058E  D005               	goto	l1827
  1898                           
  1899                           ;buttonchanges.c: 86: Delay_Routine(3);
  1900  000590  0E03               	movlw	3
  1901  000592  EC09  F006         	call	_Delay_Routine
  1902                           
  1903                           ;buttonchanges.c: 87: if(PORTBbits.RB1 == 1) {
  1904  000596  B281               	btfsc	3969,1,c	;volatile
  1905                           
  1906                           ;buttonchanges.c: 88: testflag = 1;
  1907  000598  822E               	bsf	_testflag/(0+8),_testflag& (0+7),c
  1908  00059A                     l1827:
  1909                           
  1910                           ;buttonchanges.c: 89: }
  1911                           ;buttonchanges.c: 90: }
  1912                           ;buttonchanges.c: 91: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  1913  00059A  5029               	movf	_pin_selected,w,c
  1914  00059C  0D06               	mullw	6
  1915  00059E  0E04               	movlw	4
  1916  0005A0  26F3               	addwf	prodl,f,c
  1917  0005A2  0E00               	movlw	0
  1918  0005A4  22F4               	addwfc	prodh,f,c
  1919  0005A6  0E00               	movlw	low _pin
  1920  0005A8  24F3               	addwf	prodl,w,c
  1921  0005AA  6ED9               	movwf	fsr2l,c
  1922  0005AC  0E01               	movlw	high _pin
  1923  0005AE  20F4               	addwfc	prodh,w,c
  1924  0005B0  6EDA               	movwf	fsr2h,c
  1925  0005B2  CFDE F010          	movff	postinc2,Save_Data@store
  1926  0005B6  CFDD F011          	movff	postdec2,Save_Data@store+1
  1927  0005BA  5029               	movf	_pin_selected,w,c
  1928  0005BC  0D06               	mullw	6
  1929  0005BE  0E02               	movlw	2
  1930  0005C0  26F3               	addwf	prodl,f,c
  1931  0005C2  0E00               	movlw	0
  1932  0005C4  22F4               	addwfc	prodh,f,c
  1933  0005C6  0E00               	movlw	low _pin
  1934  0005C8  24F3               	addwf	prodl,w,c
  1935  0005CA  6ED9               	movwf	fsr2l,c
  1936  0005CC  0E01               	movlw	high _pin
  1937  0005CE  20F4               	addwfc	prodh,w,c
  1938  0005D0  6EDA               	movwf	fsr2h,c
  1939  0005D2  50DF               	movf	indf2,w,c
  1940  0005D4  6E12               	movwf	Save_Data@store_address,c
  1941  0005D6  EC21  F005         	call	_Save_Data	;wreg free
  1942                           
  1943                           ;buttonchanges.c: 92: slave_selected++;
  1944  0005DA  2A2A               	incf	_slave_selected,f,c
  1945                           
  1946                           ;buttonchanges.c: 93: if(slave_selected > 2) {
  1947  0005DC  0E02               	movlw	2
  1948  0005DE  642A               	cpfsgt	_slave_selected,c
  1949  0005E0  D002               	goto	l1835
  1950                           
  1951                           ;buttonchanges.c: 94: slave_selected = 0;
  1952  0005E2  0E00               	movlw	0
  1953  0005E4  6E2A               	movwf	_slave_selected,c
  1954  0005E6                     l1835:
  1955                           
  1956                           ;buttonchanges.c: 95: }
  1957                           ;buttonchanges.c: 96: pin_selected = slave_selected * 10;
  1958  0005E6  502A               	movf	_slave_selected,w,c
  1959  0005E8  0D0A               	mullw	10
  1960  0005EA  CFF3 F029          	movff	prodl,_pin_selected
  1961                           
  1962                           ;buttonchanges.c: 97: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  1963  0005EE  5029               	movf	_pin_selected,w,c
  1964  0005F0  0D06               	mullw	6
  1965  0005F2  0E02               	movlw	2
  1966  0005F4  26F3               	addwf	prodl,f,c
  1967  0005F6  0E00               	movlw	0
  1968  0005F8  22F4               	addwfc	prodh,f,c
  1969  0005FA  0E00               	movlw	low _pin
  1970  0005FC  24F3               	addwf	prodl,w,c
  1971  0005FE  6ED9               	movwf	fsr2l,c
  1972  000600  0E01               	movlw	high _pin
  1973  000602  20F4               	addwfc	prodh,w,c
  1974  000604  6EDA               	movwf	fsr2h,c
  1975  000606  50DF               	movf	indf2,w,c
  1976  000608  ECB1  F005         	call	_Read_Data
  1977  00060C  5029               	movf	_pin_selected,w,c
  1978  00060E  0D06               	mullw	6
  1979  000610  0E04               	movlw	4
  1980  000612  26F3               	addwf	prodl,f,c
  1981  000614  0E00               	movlw	0
  1982  000616  22F4               	addwfc	prodh,f,c
  1983  000618  0E00               	movlw	low _pin
  1984  00061A  24F3               	addwf	prodl,w,c
  1985  00061C  6ED9               	movwf	fsr2l,c
  1986  00061E  0E01               	movlw	high _pin
  1987  000620  20F4               	addwfc	prodh,w,c
  1988  000622  6EDA               	movwf	fsr2h,c
  1989  000624  C010  FFDE         	movff	?_Read_Data,postinc2
  1990  000628  C011  FFDD         	movff	?_Read_Data+1,postdec2
  1991                           
  1992                           ;buttonchanges.c: 98: __nop();
  1993  00062C  F000               	nop	
  1994                           
  1995                           ;buttonchanges.c: 99: Set_Display('7', 'E', pin[pin_selected].slave);
  1996  00062E  0E45               	movlw	69
  1997  000630  6E20               	movwf	Set_Display@information,c
  1998  000632  5029               	movf	_pin_selected,w,c
  1999  000634  0D06               	mullw	6
  2000  000636  0E00               	movlw	low _pin
  2001  000638  24F3               	addwf	prodl,w,c
  2002  00063A  6ED9               	movwf	fsr2l,c
  2003  00063C  0E01               	movlw	high _pin
  2004  00063E  20F4               	addwfc	prodh,w,c
  2005  000640  6EDA               	movwf	fsr2h,c
  2006  000642  50DF               	movf	indf2,w,c
  2007  000644  6E24               	movwf	??_Check_Buttons& (0+255),c
  2008  000646  5024               	movf	??_Check_Buttons,w,c
  2009  000648  6E21               	movwf	Set_Display@value,c
  2010  00064A  6A22               	clrf	Set_Display@value+1,c
  2011  00064C  0E37               	movlw	55
  2012  00064E  EC6D  F005         	call	_Set_Display
  2013                           
  2014                           ;buttonchanges.c: 101: Delay_Routine(30);
  2015  000652  0E1E               	movlw	30
  2016  000654  EC09  F006         	call	_Delay_Routine
  2017                           
  2018                           ;buttonchanges.c: 102: Set_Display('7', 'A', pin[pin_selected].output);
  2019  000658  0E41               	movlw	65
  2020  00065A  6E20               	movwf	Set_Display@information,c
  2021  00065C  5029               	movf	_pin_selected,w,c
  2022  00065E  0D06               	mullw	6
  2023  000660  0E01               	movlw	1
  2024  000662  26F3               	addwf	prodl,f,c
  2025  000664  0E00               	movlw	0
  2026  000666  22F4               	addwfc	prodh,f,c
  2027  000668  0E00               	movlw	low _pin
  2028  00066A  24F3               	addwf	prodl,w,c
  2029  00066C  6ED9               	movwf	fsr2l,c
  2030  00066E  0E01               	movlw	high _pin
  2031  000670  20F4               	addwfc	prodh,w,c
  2032  000672  6EDA               	movwf	fsr2h,c
  2033  000674  50DF               	movf	indf2,w,c
  2034  000676  6E24               	movwf	??_Check_Buttons& (0+255),c
  2035  000678  5024               	movf	??_Check_Buttons,w,c
  2036  00067A  6E21               	movwf	Set_Display@value,c
  2037  00067C  6A22               	clrf	Set_Display@value+1,c
  2038  00067E  0E37               	movlw	55
  2039  000680  EC6D  F005         	call	_Set_Display
  2040                           
  2041                           ;buttonchanges.c: 103: Delay_Routine(30);
  2042  000684  0E1E               	movlw	30
  2043  000686  EC09  F006         	call	_Delay_Routine
  2044                           
  2045                           ;buttonchanges.c: 104: Set_Display('7', '-', pin[pin_selected].time);
  2046  00068A  0E2D               	movlw	45
  2047  00068C  6E20               	movwf	Set_Display@information,c
  2048  00068E  5029               	movf	_pin_selected,w,c
  2049  000690  0D06               	mullw	6
  2050  000692  0E04               	movlw	4
  2051  000694  26F3               	addwf	prodl,f,c
  2052  000696  0E00               	movlw	0
  2053  000698  22F4               	addwfc	prodh,f,c
  2054  00069A  0E00               	movlw	low _pin
  2055  00069C  24F3               	addwf	prodl,w,c
  2056  00069E  6ED9               	movwf	fsr2l,c
  2057  0006A0  0E01               	movlw	high _pin
  2058  0006A2  20F4               	addwfc	prodh,w,c
  2059  0006A4  6EDA               	movwf	fsr2h,c
  2060  0006A6  CFDE F021          	movff	postinc2,Set_Display@value
  2061  0006AA  CFDD F022          	movff	postdec2,Set_Display@value+1
  2062  0006AE  0E37               	movlw	55
  2063  0006B0  EC6D  F005         	call	_Set_Display
  2064                           
  2065                           ;buttonchanges.c: 105: Delay_Routine(30);
  2066  0006B4  0E1E               	movlw	30
  2067  0006B6  EC09  F006         	call	_Delay_Routine
  2068                           
  2069                           ;buttonchanges.c: 106: __nop();
  2070  0006BA  F000               	nop	
  2071  0006BC  0012               	return	
  2072  0006BE                     __end_of_Check_Buttons:
  2073                           	opt stack 0
  2074                           tblptru	equ	0xFF8
  2075                           tblptrh	equ	0xFF7
  2076                           tblptrl	equ	0xFF6
  2077                           tablat	equ	0xFF5
  2078                           prodh	equ	0xFF4
  2079                           prodl	equ	0xFF3
  2080                           intcon	equ	0xFF2
  2081                           postinc0	equ	0xFEE
  2082                           wreg	equ	0xFE8
  2083                           postdec1	equ	0xFE5
  2084                           fsr1l	equ	0xFE1
  2085                           indf2	equ	0xFDF
  2086                           postinc2	equ	0xFDE
  2087                           postdec2	equ	0xFDD
  2088                           plusw2	equ	0xFDB
  2089                           fsr2h	equ	0xFDA
  2090                           fsr2l	equ	0xFD9
  2091                           status	equ	0xFD8
  2092                           
  2093 ;; *************** function _Set_Display *****************
  2094 ;; Defined at:
  2095 ;;		line 121 in file "display.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  type            1    wreg     unsigned char 
  2098 ;;  information     1   31[COMRAM] unsigned char 
  2099 ;;  value           2   32[COMRAM] unsigned int 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  type            1   34[COMRAM] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;		None               void
  2104 ;; Registers used:
  2105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1
  2111 ;;      Params:         3       0       0
  2112 ;;      Locals:         1       0       0
  2113 ;;      Temps:          0       0       0
  2114 ;;      Totals:         4       0       0
  2115 ;;Total ram usage:        4 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    6
  2118 ;; This function calls:
  2119 ;;		_Evaluate_Display
  2120 ;;		_Evaluate_Signs
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;;		_Check_Buttons
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text11
  2128  000ADA                     __ptext11:
  2129                           	opt stack 0
  2130  000ADA                     _Set_Display:
  2131                           	opt stack 24
  2132                           
  2133                           ;incstack = 0
  2134                           ;Set_Display@type stored from wreg
  2135  000ADA  6E23               	movwf	Set_Display@type,c
  2136                           
  2137                           ;display.c: 123: switch (type) {
  2138  000ADC  D01B               	goto	l1657
  2139  000ADE                     l1641:
  2140                           
  2141                           ;display.c: 125: if(information != '-') {
  2142  000ADE  0E2D               	movlw	45
  2143  000AE0  1820               	xorwf	Set_Display@information,w,c
  2144  000AE2  B4D8               	btfsc	status,2,c
  2145  000AE4  D010               	goto	l1653
  2146                           
  2147                           ;display.c: 126: signs[0] = value;
  2148  000AE6  C021  F02B         	movff	Set_Display@value,_signs
  2149                           
  2150                           ;display.c: 127: signs[0] += 0x30;
  2151  000AEA  0E30               	movlw	48
  2152  000AEC  262B               	addwf	_signs,f,c
  2153                           
  2154                           ;display.c: 128: signs[1] = '-';
  2155  000AEE  0E2D               	movlw	45
  2156  000AF0  6E2C               	movwf	_signs+1,c
  2157                           
  2158                           ;display.c: 129: signs[2] = information;
  2159  000AF2  C020  F02D         	movff	Set_Display@information,_signs+2
  2160                           
  2161                           ;display.c: 130: Evaluate_Display(sizeof(signs), signs);
  2162  000AF6  0E2B               	movlw	low _signs
  2163  000AF8  6E19               	movwf	Evaluate_Display@evaluate,c
  2164  000AFA  0E00               	movlw	high _signs
  2165  000AFC  6E1A               	movwf	Evaluate_Display@evaluate+1,c
  2166  000AFE  0E03               	movlw	3
  2167  000B00  EC5F  F003         	call	_Evaluate_Display
  2168                           
  2169                           ;display.c: 131: } else {
  2170  000B04  0012               	return	
  2171  000B06                     l1653:
  2172                           
  2173                           ;display.c: 132: Evaluate_Signs(value);
  2174  000B06  C021  F01D         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  2175  000B0A  C022  F01E         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  2176  000B0E  ECEF  F004         	call	_Evaluate_Signs	;wreg free
  2177                           
  2178                           ;display.c: 138: }
  2179                           
  2180                           ;display.c: 137: break;
  2181                           
  2182                           ;display.c: 135: case 'L':
  2183                           
  2184                           ;display.c: 133: }
  2185                           ;display.c: 134: break;
  2186  000B12  0012               	return	
  2187  000B14                     l1657:
  2188  000B14  5023               	movf	Set_Display@type,w,c
  2189                           
  2190                           ; Switch size 1, requested type "space"
  2191                           ; Number of cases is 2, Range of values is 55 to 76
  2192                           ; switch strategies available:
  2193                           ; Name         Instructions Cycles
  2194                           ; simple_byte            7     4 (average)
  2195                           ;	Chosen strategy is simple_byte
  2196  000B16  0A37               	xorlw	55	; case 55
  2197  000B18  B4D8               	btfsc	status,2,c
  2198  000B1A  D7E1               	goto	l1641
  2199  000B1C  0A7B               	xorlw	123	; case 76
  2200  000B1E  0012               	return	
  2201  000B20                     __end_of_Set_Display:
  2202                           	opt stack 0
  2203                           tblptru	equ	0xFF8
  2204                           tblptrh	equ	0xFF7
  2205                           tblptrl	equ	0xFF6
  2206                           tablat	equ	0xFF5
  2207                           prodh	equ	0xFF4
  2208                           prodl	equ	0xFF3
  2209                           intcon	equ	0xFF2
  2210                           postinc0	equ	0xFEE
  2211                           wreg	equ	0xFE8
  2212                           postdec1	equ	0xFE5
  2213                           fsr1l	equ	0xFE1
  2214                           indf2	equ	0xFDF
  2215                           postinc2	equ	0xFDE
  2216                           postdec2	equ	0xFDD
  2217                           plusw2	equ	0xFDB
  2218                           fsr2h	equ	0xFDA
  2219                           fsr2l	equ	0xFD9
  2220                           status	equ	0xFD8
  2221                           
  2222 ;; *************** function _Evaluate_Signs *****************
  2223 ;; Defined at:
  2224 ;;		line 101 in file "display.c"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;  evaluation_v    2   28[COMRAM] unsigned int 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  valuecounter    1   30[COMRAM] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;		None               void
  2231 ;; Registers used:
  2232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1
  2238 ;;      Params:         2       0       0
  2239 ;;      Locals:         1       0       0
  2240 ;;      Temps:          0       0       0
  2241 ;;      Totals:         3       0       0
  2242 ;;Total ram usage:        3 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    5
  2245 ;; This function calls:
  2246 ;;		_Evaluate_Display
  2247 ;;		___lwmod
  2248 ;; This function is called by:
  2249 ;;		_Set_Display
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text12
  2254  0009DE                     __ptext12:
  2255                           	opt stack 0
  2256  0009DE                     _Evaluate_Signs:
  2257                           	opt stack 24
  2258                           
  2259                           ;display.c: 102: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  2260                           
  2261                           ;incstack = 0
  2262  0009DE  0E00               	movlw	0
  2263  0009E0  6E1F               	movwf	Evaluate_Signs@valuecounter,c
  2264  0009E2                     l1615:
  2265                           
  2266                           ;display.c: 103: valuecounter++) {
  2267  0009E2  0E02               	movlw	2
  2268  0009E4  641F               	cpfsgt	Evaluate_Signs@valuecounter,c
  2269  0009E6  D001               	goto	l1619
  2270  0009E8  D023               	goto	l364
  2271  0009EA                     l1619:
  2272                           
  2273                           ;display.c: 104: signs[valuecounter] = evaluation_value % 10;
  2274  0009EA  501F               	movf	Evaluate_Signs@valuecounter,w,c
  2275  0009EC  0D01               	mullw	1
  2276  0009EE  0E2B               	movlw	low _signs
  2277  0009F0  24F3               	addwf	prodl,w,c
  2278  0009F2  6ED9               	movwf	fsr2l,c
  2279  0009F4  0E00               	movlw	high _signs
  2280  0009F6  20F4               	addwfc	prodh,w,c
  2281  0009F8  6EDA               	movwf	fsr2h,c
  2282  0009FA  C01D  F010         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  2283  0009FE  C01E  F011         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  2284  000A02  0E00               	movlw	0
  2285  000A04  6E13               	movwf	___lwmod@divisor+1,c
  2286  000A06  0E0A               	movlw	10
  2287  000A08  6E12               	movwf	___lwmod@divisor,c
  2288  000A0A  EC90  F005         	call	___lwmod	;wreg free
  2289  000A0E  5010               	movf	?___lwmod,w,c
  2290  000A10  6EDF               	movwf	indf2,c
  2291                           
  2292                           ;display.c: 105: signs[valuecounter] += 0x30;
  2293  000A12  501F               	movf	Evaluate_Signs@valuecounter,w,c
  2294  000A14  0D01               	mullw	1
  2295  000A16  0E2B               	movlw	low _signs
  2296  000A18  24F3               	addwf	prodl,w,c
  2297  000A1A  6ED9               	movwf	fsr2l,c
  2298  000A1C  0E00               	movlw	high _signs
  2299  000A1E  20F4               	addwfc	prodh,w,c
  2300  000A20  6EDA               	movwf	fsr2h,c
  2301  000A22  0E30               	movlw	48
  2302  000A24  26DF               	addwf	indf2,f,c
  2303                           
  2304                           ;display.c: 106: evaluation_value >>= 1;
  2305  000A26  90D8               	bcf	status,0,c
  2306  000A28  321E               	rrcf	Evaluate_Signs@evaluation_value+1,f,c
  2307  000A2A  321D               	rrcf	Evaluate_Signs@evaluation_value,f,c
  2308  000A2C  2A1F               	incf	Evaluate_Signs@valuecounter,f,c
  2309  000A2E  D7D9               	goto	l1615
  2310  000A30                     l364:
  2311                           
  2312                           ;display.c: 107: }
  2313                           ;display.c: 108: __nop();
  2314  000A30  F000               	nop	
  2315                           
  2316                           ;display.c: 109: Evaluate_Display(sizeof(signs), signs);
  2317  000A32  0E2B               	movlw	low _signs
  2318  000A34  6E19               	movwf	Evaluate_Display@evaluate,c
  2319  000A36  0E00               	movlw	high _signs
  2320  000A38  6E1A               	movwf	Evaluate_Display@evaluate+1,c
  2321  000A3A  0E03               	movlw	3
  2322  000A3C  EC5F  F003         	call	_Evaluate_Display
  2323  000A40  0012               	return		;funcret
  2324  000A42                     __end_of_Evaluate_Signs:
  2325                           	opt stack 0
  2326                           tblptru	equ	0xFF8
  2327                           tblptrh	equ	0xFF7
  2328                           tblptrl	equ	0xFF6
  2329                           tablat	equ	0xFF5
  2330                           prodh	equ	0xFF4
  2331                           prodl	equ	0xFF3
  2332                           intcon	equ	0xFF2
  2333                           postinc0	equ	0xFEE
  2334                           wreg	equ	0xFE8
  2335                           postdec1	equ	0xFE5
  2336                           fsr1l	equ	0xFE1
  2337                           indf2	equ	0xFDF
  2338                           postinc2	equ	0xFDE
  2339                           postdec2	equ	0xFDD
  2340                           plusw2	equ	0xFDB
  2341                           fsr2h	equ	0xFDA
  2342                           fsr2l	equ	0xFD9
  2343                           status	equ	0xFD8
  2344                           
  2345 ;; *************** function ___lwmod *****************
  2346 ;; Defined at:
  2347 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  dividend        2   15[COMRAM] unsigned int 
  2350 ;;  divisor         2   17[COMRAM] unsigned int 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  counter         1   19[COMRAM] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  2   15[COMRAM] unsigned int 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1
  2362 ;;      Params:         4       0       0
  2363 ;;      Locals:         1       0       0
  2364 ;;      Temps:          0       0       0
  2365 ;;      Totals:         5       0       0
  2366 ;;Total ram usage:        5 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_Evaluate_Signs
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text13
  2377  000B20                     __ptext13:
  2378                           	opt stack 0
  2379  000B20                     ___lwmod:
  2380                           	opt stack 26
  2381                           
  2382                           ;incstack = 0
  2383  000B20  5012               	movf	___lwmod@divisor,w,c
  2384  000B22  1013               	iorwf	___lwmod@divisor+1,w,c
  2385  000B24  B4D8               	btfsc	status,2,c
  2386  000B26  D018               	goto	l888
  2387  000B28  0E01               	movlw	1
  2388  000B2A  6E14               	movwf	___lwmod@counter,c
  2389  000B2C  D004               	goto	l1603
  2390  000B2E                     l1601:
  2391  000B2E  90D8               	bcf	status,0,c
  2392  000B30  3612               	rlcf	___lwmod@divisor,f,c
  2393  000B32  3613               	rlcf	___lwmod@divisor+1,f,c
  2394  000B34  2A14               	incf	___lwmod@counter,f,c
  2395  000B36                     l1603:
  2396  000B36  AE13               	btfss	___lwmod@divisor+1,7,c
  2397  000B38  D7FA               	goto	l1601
  2398  000B3A                     l1605:
  2399  000B3A  5012               	movf	___lwmod@divisor,w,c
  2400  000B3C  5C10               	subwf	___lwmod@dividend,w,c
  2401  000B3E  5013               	movf	___lwmod@divisor+1,w,c
  2402  000B40  5811               	subwfb	___lwmod@dividend+1,w,c
  2403  000B42  A0D8               	btfss	status,0,c
  2404  000B44  D004               	goto	l1609
  2405  000B46  5012               	movf	___lwmod@divisor,w,c
  2406  000B48  5E10               	subwf	___lwmod@dividend,f,c
  2407  000B4A  5013               	movf	___lwmod@divisor+1,w,c
  2408  000B4C  5A11               	subwfb	___lwmod@dividend+1,f,c
  2409  000B4E                     l1609:
  2410  000B4E  90D8               	bcf	status,0,c
  2411  000B50  3213               	rrcf	___lwmod@divisor+1,f,c
  2412  000B52  3212               	rrcf	___lwmod@divisor,f,c
  2413  000B54  2E14               	decfsz	___lwmod@counter,f,c
  2414  000B56  D7F1               	goto	l1605
  2415  000B58                     l888:
  2416  000B58  C010  F010         	movff	___lwmod@dividend,?___lwmod
  2417  000B5C  C011  F011         	movff	___lwmod@dividend+1,?___lwmod+1
  2418  000B60  0012               	return		;funcret
  2419  000B62                     __end_of___lwmod:
  2420                           	opt stack 0
  2421                           tblptru	equ	0xFF8
  2422                           tblptrh	equ	0xFF7
  2423                           tblptrl	equ	0xFF6
  2424                           tablat	equ	0xFF5
  2425                           prodh	equ	0xFF4
  2426                           prodl	equ	0xFF3
  2427                           intcon	equ	0xFF2
  2428                           postinc0	equ	0xFEE
  2429                           wreg	equ	0xFE8
  2430                           postdec1	equ	0xFE5
  2431                           fsr1l	equ	0xFE1
  2432                           indf2	equ	0xFDF
  2433                           postinc2	equ	0xFDE
  2434                           postdec2	equ	0xFDD
  2435                           plusw2	equ	0xFDB
  2436                           fsr2h	equ	0xFDA
  2437                           fsr2l	equ	0xFD9
  2438                           status	equ	0xFD8
  2439                           
  2440 ;; *************** function _Evaluate_Display *****************
  2441 ;; Defined at:
  2442 ;;		line 49 in file "display.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  size            1    wreg     unsigned char 
  2445 ;;  evaluate        2   24[COMRAM] PTR unsigned char 
  2446 ;;		 -> signs(3), 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  size            1   26[COMRAM] unsigned char 
  2449 ;;  counter         1   27[COMRAM] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;		None               void
  2452 ;; Registers used:
  2453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1
  2459 ;;      Params:         2       0       0
  2460 ;;      Locals:         2       0       0
  2461 ;;      Temps:          0       0       0
  2462 ;;      Totals:         4       0       0
  2463 ;;Total ram usage:        4 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    4
  2466 ;; This function calls:
  2467 ;;		_Set_Bits
  2468 ;; This function is called by:
  2469 ;;		_Evaluate_Signs
  2470 ;;		_Set_Display
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text14
  2475  0006BE                     __ptext14:
  2476                           	opt stack 0
  2477  0006BE                     _Evaluate_Display:
  2478                           	opt stack 24
  2479                           
  2480                           ;incstack = 0
  2481                           ;Evaluate_Display@size stored from wreg
  2482  0006BE  6E1B               	movwf	Evaluate_Display@size,c
  2483                           
  2484                           ;display.c: 50: for(unsigned char counter = 0; counter < size; counter++)
  2485  0006C0  0E00               	movlw	0
  2486  0006C2  6E1C               	movwf	Evaluate_Display@counter,c
  2487  0006C4  D0D7               	goto	l1595
  2488  0006C6                     l1563:
  2489                           
  2490                           ;display.c: 53: Set_Bits("ABCDEF");
  2491  0006C6  0E09               	movlw	low STR_1
  2492  0006C8  6E11               	movwf	Set_Bits@bits,c
  2493  0006CA  0E02               	movlw	high STR_1
  2494  0006CC  6E12               	movwf	Set_Bits@bits+1,c
  2495  0006CE  5011               	movf	Set_Bits@bits,w,c
  2496  0006D0  1012               	iorwf	Set_Bits@bits+1,w,c
  2497  0006D2  A4D8               	btfss	status,2,c
  2498  0006D4  0E00               	movlw	low (__mediumconst shr (0+16))
  2499  0006D6  6E13               	movwf	Set_Bits@bits+2,c
  2500  0006D8  EC99  F004         	call	_Set_Bits	;wreg free
  2501                           
  2502                           ;display.c: 54: break;
  2503  0006DC  D0CA               	goto	l1593
  2504  0006DE                     l1565:
  2505                           
  2506                           ;display.c: 56: Set_Bits("BC");
  2507  0006DE  0E43               	movlw	low (STR_8+1)
  2508  0006E0  6E11               	movwf	Set_Bits@bits,c
  2509  0006E2  0E02               	movlw	high (STR_8+1)
  2510  0006E4  6E12               	movwf	Set_Bits@bits+1,c
  2511  0006E6  5011               	movf	Set_Bits@bits,w,c
  2512  0006E8  1012               	iorwf	Set_Bits@bits+1,w,c
  2513  0006EA  A4D8               	btfss	status,2,c
  2514  0006EC  0E00               	movlw	low (__mediumconst shr (0+16))
  2515  0006EE  6E13               	movwf	Set_Bits@bits+2,c
  2516  0006F0  EC99  F004         	call	_Set_Bits	;wreg free
  2517                           
  2518                           ;display.c: 57: break;
  2519  0006F4  D0BE               	goto	l1593
  2520  0006F6                     l1567:
  2521                           
  2522                           ;display.c: 59: Set_Bits("ABDEG");
  2523  0006F6  0E2B               	movlw	low STR_3
  2524  0006F8  6E11               	movwf	Set_Bits@bits,c
  2525  0006FA  0E02               	movlw	high STR_3
  2526  0006FC  6E12               	movwf	Set_Bits@bits+1,c
  2527  0006FE  5011               	movf	Set_Bits@bits,w,c
  2528  000700  1012               	iorwf	Set_Bits@bits+1,w,c
  2529  000702  A4D8               	btfss	status,2,c
  2530  000704  0E00               	movlw	low (__mediumconst shr (0+16))
  2531  000706  6E13               	movwf	Set_Bits@bits+2,c
  2532  000708  EC99  F004         	call	_Set_Bits	;wreg free
  2533                           
  2534                           ;display.c: 60: break;
  2535  00070C  D0B2               	goto	l1593
  2536  00070E                     l1569:
  2537                           
  2538                           ;display.c: 62: Set_Bits("ABCDG");
  2539  00070E  0E25               	movlw	low STR_4
  2540  000710  6E11               	movwf	Set_Bits@bits,c
  2541  000712  0E02               	movlw	high STR_4
  2542  000714  6E12               	movwf	Set_Bits@bits+1,c
  2543  000716  5011               	movf	Set_Bits@bits,w,c
  2544  000718  1012               	iorwf	Set_Bits@bits+1,w,c
  2545  00071A  A4D8               	btfss	status,2,c
  2546  00071C  0E00               	movlw	low (__mediumconst shr (0+16))
  2547  00071E  6E13               	movwf	Set_Bits@bits+2,c
  2548  000720  EC99  F004         	call	_Set_Bits	;wreg free
  2549                           
  2550                           ;display.c: 63: break;
  2551  000724  D0A6               	goto	l1593
  2552  000726                     l1571:
  2553                           
  2554                           ;display.c: 65: Set_Bits("BCFG");
  2555  000726  0E3D               	movlw	low STR_5
  2556  000728  6E11               	movwf	Set_Bits@bits,c
  2557  00072A  0E02               	movlw	high STR_5
  2558  00072C  6E12               	movwf	Set_Bits@bits+1,c
  2559  00072E  5011               	movf	Set_Bits@bits,w,c
  2560  000730  1012               	iorwf	Set_Bits@bits+1,w,c
  2561  000732  A4D8               	btfss	status,2,c
  2562  000734  0E00               	movlw	low (__mediumconst shr (0+16))
  2563  000736  6E13               	movwf	Set_Bits@bits+2,c
  2564  000738  EC99  F004         	call	_Set_Bits	;wreg free
  2565                           
  2566                           ;display.c: 66: break;
  2567  00073C  D09A               	goto	l1593
  2568  00073E                     l1573:
  2569                           
  2570                           ;display.c: 68: Set_Bits("ACDFG");
  2571  00073E  0E31               	movlw	low STR_6
  2572  000740  6E11               	movwf	Set_Bits@bits,c
  2573  000742  0E02               	movlw	high STR_6
  2574  000744  6E12               	movwf	Set_Bits@bits+1,c
  2575  000746  5011               	movf	Set_Bits@bits,w,c
  2576  000748  1012               	iorwf	Set_Bits@bits+1,w,c
  2577  00074A  A4D8               	btfss	status,2,c
  2578  00074C  0E00               	movlw	low (__mediumconst shr (0+16))
  2579  00074E  6E13               	movwf	Set_Bits@bits+2,c
  2580  000750  EC99  F004         	call	_Set_Bits	;wreg free
  2581                           
  2582                           ;display.c: 69: break;
  2583  000754  D08E               	goto	l1593
  2584  000756                     l1575:
  2585                           
  2586                           ;display.c: 71: Set_Bits("ACDEFG");
  2587  000756  0E1E               	movlw	low STR_7
  2588  000758  6E11               	movwf	Set_Bits@bits,c
  2589  00075A  0E02               	movlw	high STR_7
  2590  00075C  6E12               	movwf	Set_Bits@bits+1,c
  2591  00075E  5011               	movf	Set_Bits@bits,w,c
  2592  000760  1012               	iorwf	Set_Bits@bits+1,w,c
  2593  000762  A4D8               	btfss	status,2,c
  2594  000764  0E00               	movlw	low (__mediumconst shr (0+16))
  2595  000766  6E13               	movwf	Set_Bits@bits+2,c
  2596  000768  EC99  F004         	call	_Set_Bits	;wreg free
  2597                           
  2598                           ;display.c: 72: break;
  2599  00076C  D082               	goto	l1593
  2600  00076E                     l1577:
  2601                           
  2602                           ;display.c: 74: Set_Bits("ABC");
  2603  00076E  0E42               	movlw	low STR_8
  2604  000770  6E11               	movwf	Set_Bits@bits,c
  2605  000772  0E02               	movlw	high STR_8
  2606  000774  6E12               	movwf	Set_Bits@bits+1,c
  2607  000776  5011               	movf	Set_Bits@bits,w,c
  2608  000778  1012               	iorwf	Set_Bits@bits+1,w,c
  2609  00077A  A4D8               	btfss	status,2,c
  2610  00077C  0E00               	movlw	low (__mediumconst shr (0+16))
  2611  00077E  6E13               	movwf	Set_Bits@bits+2,c
  2612  000780  EC99  F004         	call	_Set_Bits	;wreg free
  2613                           
  2614                           ;display.c: 75: break;
  2615  000784  D076               	goto	l1593
  2616  000786                     l1579:
  2617                           
  2618                           ;display.c: 77: Set_Bits("ABCDEFG");
  2619  000786  0E01               	movlw	low STR_9
  2620  000788  6E11               	movwf	Set_Bits@bits,c
  2621  00078A  0E02               	movlw	high STR_9
  2622  00078C  6E12               	movwf	Set_Bits@bits+1,c
  2623  00078E  5011               	movf	Set_Bits@bits,w,c
  2624  000790  1012               	iorwf	Set_Bits@bits+1,w,c
  2625  000792  A4D8               	btfss	status,2,c
  2626  000794  0E00               	movlw	low (__mediumconst shr (0+16))
  2627  000796  6E13               	movwf	Set_Bits@bits+2,c
  2628  000798  EC99  F004         	call	_Set_Bits	;wreg free
  2629                           
  2630                           ;display.c: 78: break;
  2631  00079C  D06A               	goto	l1593
  2632  00079E                     l1581:
  2633                           
  2634                           ;display.c: 80: Set_Bits("ABCDFG");
  2635  00079E  0E10               	movlw	low STR_10
  2636  0007A0  6E11               	movwf	Set_Bits@bits,c
  2637  0007A2  0E02               	movlw	high STR_10
  2638  0007A4  6E12               	movwf	Set_Bits@bits+1,c
  2639  0007A6  5011               	movf	Set_Bits@bits,w,c
  2640  0007A8  1012               	iorwf	Set_Bits@bits+1,w,c
  2641  0007AA  A4D8               	btfss	status,2,c
  2642  0007AC  0E00               	movlw	low (__mediumconst shr (0+16))
  2643  0007AE  6E13               	movwf	Set_Bits@bits+2,c
  2644  0007B0  EC99  F004         	call	_Set_Bits	;wreg free
  2645                           
  2646                           ;display.c: 81: break;
  2647  0007B4  D05E               	goto	l1593
  2648  0007B6                     l1583:
  2649                           
  2650                           ;display.c: 83: Set_Bits("ADEFG");
  2651  0007B6  0E37               	movlw	low STR_11
  2652  0007B8  6E11               	movwf	Set_Bits@bits,c
  2653  0007BA  0E02               	movlw	high STR_11
  2654  0007BC  6E12               	movwf	Set_Bits@bits+1,c
  2655  0007BE  5011               	movf	Set_Bits@bits,w,c
  2656  0007C0  1012               	iorwf	Set_Bits@bits+1,w,c
  2657  0007C2  A4D8               	btfss	status,2,c
  2658  0007C4  0E00               	movlw	low (__mediumconst shr (0+16))
  2659  0007C6  6E13               	movwf	Set_Bits@bits+2,c
  2660  0007C8  EC99  F004         	call	_Set_Bits	;wreg free
  2661                           
  2662                           ;display.c: 84: break;
  2663  0007CC  D052               	goto	l1593
  2664  0007CE                     l1585:
  2665                           
  2666                           ;display.c: 86: Set_Bits("ABCEFG");
  2667  0007CE  0E17               	movlw	low STR_12
  2668  0007D0  6E11               	movwf	Set_Bits@bits,c
  2669  0007D2  0E02               	movlw	high STR_12
  2670  0007D4  6E12               	movwf	Set_Bits@bits+1,c
  2671  0007D6  5011               	movf	Set_Bits@bits,w,c
  2672  0007D8  1012               	iorwf	Set_Bits@bits+1,w,c
  2673  0007DA  A4D8               	btfss	status,2,c
  2674  0007DC  0E00               	movlw	low (__mediumconst shr (0+16))
  2675  0007DE  6E13               	movwf	Set_Bits@bits+2,c
  2676  0007E0  EC99  F004         	call	_Set_Bits	;wreg free
  2677                           
  2678                           ;display.c: 87: break;
  2679  0007E4  D046               	goto	l1593
  2680  0007E6                     l1587:
  2681                           
  2682                           ;display.c: 89: Set_Bits("G");
  2683  0007E6  0E29               	movlw	low (STR_4+4)
  2684  0007E8  6E11               	movwf	Set_Bits@bits,c
  2685  0007EA  0E02               	movlw	high (STR_4+4)
  2686  0007EC  6E12               	movwf	Set_Bits@bits+1,c
  2687  0007EE  5011               	movf	Set_Bits@bits,w,c
  2688  0007F0  1012               	iorwf	Set_Bits@bits+1,w,c
  2689  0007F2  A4D8               	btfss	status,2,c
  2690  0007F4  0E00               	movlw	low (__mediumconst shr (0+16))
  2691  0007F6  6E13               	movwf	Set_Bits@bits+2,c
  2692  0007F8  EC99  F004         	call	_Set_Bits	;wreg free
  2693                           
  2694                           ;display.c: 90: break;
  2695  0007FC  D03A               	goto	l1593
  2696  0007FE                     l1589:
  2697                           
  2698                           ;display.c: 92: Set_Bits(0);
  2699  0007FE  0E00               	movlw	0
  2700  000800  6E11               	movwf	Set_Bits@bits,c
  2701  000802  0E00               	movlw	0
  2702  000804  6E12               	movwf	Set_Bits@bits+1,c
  2703  000806  0E00               	movlw	0
  2704  000808  6E13               	movwf	Set_Bits@bits+2,c
  2705  00080A  EC99  F004         	call	_Set_Bits	;wreg free
  2706                           
  2707                           ;display.c: 93: }
  2708  00080E  D031               	goto	l1593
  2709  000810                     l1591:
  2710  000810  501C               	movf	Evaluate_Display@counter,w,c
  2711  000812  0D01               	mullw	1
  2712  000814  50F3               	movf	prodl,w,c
  2713  000816  2419               	addwf	Evaluate_Display@evaluate,w,c
  2714  000818  6ED9               	movwf	fsr2l,c
  2715  00081A  50F4               	movf	prodh,w,c
  2716  00081C  201A               	addwfc	Evaluate_Display@evaluate+1,w,c
  2717  00081E  6EDA               	movwf	fsr2h,c
  2718  000820  50DF               	movf	indf2,w,c
  2719                           
  2720                           ; Switch size 1, requested type "space"
  2721                           ; Number of cases is 13, Range of values is 45 to 69
  2722                           ; switch strategies available:
  2723                           ; Name         Instructions Cycles
  2724                           ; simple_byte           40    21 (average)
  2725                           ;	Chosen strategy is simple_byte
  2726  000822  0A2D               	xorlw	45	; case 45
  2727  000824  B4D8               	btfsc	status,2,c
  2728  000826  D7DF               	goto	l1587
  2729  000828  0A1D               	xorlw	29	; case 48
  2730  00082A  B4D8               	btfsc	status,2,c
  2731  00082C  D74C               	goto	l1563
  2732  00082E  0A01               	xorlw	1	; case 49
  2733  000830  B4D8               	btfsc	status,2,c
  2734  000832  D755               	goto	l1565
  2735  000834  0A03               	xorlw	3	; case 50
  2736  000836  B4D8               	btfsc	status,2,c
  2737  000838  D75E               	goto	l1567
  2738  00083A  0A01               	xorlw	1	; case 51
  2739  00083C  B4D8               	btfsc	status,2,c
  2740  00083E  D767               	goto	l1569
  2741  000840  0A07               	xorlw	7	; case 52
  2742  000842  B4D8               	btfsc	status,2,c
  2743  000844  D770               	goto	l1571
  2744  000846  0A01               	xorlw	1	; case 53
  2745  000848  B4D8               	btfsc	status,2,c
  2746  00084A  D779               	goto	l1573
  2747  00084C  0A03               	xorlw	3	; case 54
  2748  00084E  B4D8               	btfsc	status,2,c
  2749  000850  D782               	goto	l1575
  2750  000852  0A01               	xorlw	1	; case 55
  2751  000854  B4D8               	btfsc	status,2,c
  2752  000856  D78B               	goto	l1577
  2753  000858  0A0F               	xorlw	15	; case 56
  2754  00085A  B4D8               	btfsc	status,2,c
  2755  00085C  D794               	goto	l1579
  2756  00085E  0A01               	xorlw	1	; case 57
  2757  000860  B4D8               	btfsc	status,2,c
  2758  000862  D79D               	goto	l1581
  2759  000864  0A78               	xorlw	120	; case 65
  2760  000866  B4D8               	btfsc	status,2,c
  2761  000868  D7B2               	goto	l1585
  2762  00086A  0A04               	xorlw	4	; case 69
  2763  00086C  B4D8               	btfsc	status,2,c
  2764  00086E  D7A3               	goto	l1583
  2765  000870  D7C6               	goto	l1589
  2766  000872                     l1593:
  2767  000872  2A1C               	incf	Evaluate_Display@counter,f,c
  2768  000874                     l1595:
  2769  000874  501B               	movf	Evaluate_Display@size,w,c
  2770  000876  5C1C               	subwf	Evaluate_Display@counter,w,c
  2771  000878  B0D8               	btfsc	status,0,c
  2772  00087A  0012               	return	
  2773  00087C  D7C9               	goto	l1591
  2774  00087E                     __end_of_Evaluate_Display:
  2775                           	opt stack 0
  2776                           tblptru	equ	0xFF8
  2777                           tblptrh	equ	0xFF7
  2778                           tblptrl	equ	0xFF6
  2779                           tablat	equ	0xFF5
  2780                           prodh	equ	0xFF4
  2781                           prodl	equ	0xFF3
  2782                           intcon	equ	0xFF2
  2783                           postinc0	equ	0xFEE
  2784                           wreg	equ	0xFE8
  2785                           postdec1	equ	0xFE5
  2786                           fsr1l	equ	0xFE1
  2787                           indf2	equ	0xFDF
  2788                           postinc2	equ	0xFDE
  2789                           postdec2	equ	0xFDD
  2790                           plusw2	equ	0xFDB
  2791                           fsr2h	equ	0xFDA
  2792                           fsr2l	equ	0xFD9
  2793                           status	equ	0xFD8
  2794                           
  2795 ;; *************** function _Set_Bits *****************
  2796 ;; Defined at:
  2797 ;;		line 9 in file "display.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  bits            3   16[COMRAM] PTR const unsigned char 
  2800 ;;		 -> ROM(8191), STR_13(2), STR_12(7), STR_11(6), 
  2801 ;;		 -> STR_10(7), STR_9(8), STR_8(4), STR_7(7), 
  2802 ;;		 -> STR_6(6), STR_5(5), STR_4(6), STR_3(6), 
  2803 ;;		 -> STR_2(3), STR_1(7), 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  bitcount        1   22[COMRAM] unsigned char 
  2806 ;;  Bitoutput       1   23[COMRAM] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;		None               void
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1
  2816 ;;      Params:         3       0       0
  2817 ;;      Locals:         2       0       0
  2818 ;;      Temps:          3       0       0
  2819 ;;      Totals:         8       0       0
  2820 ;;Total ram usage:        8 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    3
  2823 ;; This function calls:
  2824 ;;		_Write_Display
  2825 ;; This function is called by:
  2826 ;;		_Evaluate_Display
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text15
  2831  000932                     __ptext15:
  2832                           	opt stack 0
  2833  000932                     _Set_Bits:
  2834                           	opt stack 24
  2835                           
  2836                           ;display.c: 10: unsigned char Bitoutput = 0;
  2837                           
  2838                           ;incstack = 0
  2839  000932  0E00               	movlw	0
  2840  000934  6E18               	movwf	Set_Bits@Bitoutput,c
  2841                           
  2842                           ;display.c: 11: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  2843  000936  0E00               	movlw	0
  2844  000938  6E17               	movwf	Set_Bits@bitcount,c
  2845                           
  2846                           ;display.c: 12: bitcount++) {
  2847  00093A  D037               	goto	l1557
  2848  00093C                     l1537:
  2849                           
  2850                           ;display.c: 15: Bitoutput |= 0b00000001;
  2851  00093C  8018               	bsf	Set_Bits@Bitoutput,0,c
  2852                           
  2853                           ;display.c: 16: break;
  2854  00093E  D034               	goto	l1555
  2855  000940                     l1539:
  2856                           
  2857                           ;display.c: 18: Bitoutput |= 0b00000010;
  2858  000940  8218               	bsf	Set_Bits@Bitoutput,1,c
  2859                           
  2860                           ;display.c: 19: break;
  2861  000942  D032               	goto	l1555
  2862  000944                     l1541:
  2863                           
  2864                           ;display.c: 21: Bitoutput |= 0b00000100;
  2865  000944  8418               	bsf	Set_Bits@Bitoutput,2,c
  2866                           
  2867                           ;display.c: 22: break;
  2868  000946  D030               	goto	l1555
  2869  000948                     l1543:
  2870                           
  2871                           ;display.c: 24: Bitoutput |= 0b00001000;
  2872  000948  8618               	bsf	Set_Bits@Bitoutput,3,c
  2873                           
  2874                           ;display.c: 25: break;
  2875  00094A  D02E               	goto	l1555
  2876  00094C                     l1545:
  2877                           
  2878                           ;display.c: 27: Bitoutput |= 0b00010000;
  2879  00094C  8818               	bsf	Set_Bits@Bitoutput,4,c
  2880                           
  2881                           ;display.c: 28: break;
  2882  00094E  D02C               	goto	l1555
  2883  000950                     l1547:
  2884                           
  2885                           ;display.c: 30: Bitoutput |= 0b00100000;
  2886  000950  8A18               	bsf	Set_Bits@Bitoutput,5,c
  2887                           
  2888                           ;display.c: 31: break;
  2889  000952  D02A               	goto	l1555
  2890  000954                     l1549:
  2891                           
  2892                           ;display.c: 33: Bitoutput |= 0b01000000;
  2893  000954  8C18               	bsf	Set_Bits@Bitoutput,6,c
  2894                           
  2895                           ;display.c: 37: }
  2896                           
  2897                           ;display.c: 36: break;
  2898                           
  2899                           ;display.c: 35: default:
  2900                           
  2901                           ;display.c: 34: break;
  2902  000956  D028               	goto	l1555
  2903  000958                     l1553:
  2904  000958  5017               	movf	Set_Bits@bitcount,w,c
  2905  00095A  0D01               	mullw	1
  2906  00095C  50F3               	movf	prodl,w,c
  2907  00095E  2411               	addwf	Set_Bits@bits,w,c
  2908  000960  6E14               	movwf	??_Set_Bits& (0+255),c
  2909  000962  50F4               	movf	prodh,w,c
  2910  000964  2012               	addwfc	Set_Bits@bits+1,w,c
  2911  000966  6E15               	movwf	(??_Set_Bits+1)& (0+255),c
  2912  000968  0E00               	movlw	0
  2913  00096A  2013               	addwfc	Set_Bits@bits+2,w,c
  2914  00096C  6E16               	movwf	(??_Set_Bits+2)& (0+255),c
  2915  00096E  C014  FFF6         	movff	??_Set_Bits,tblptrl
  2916  000972  C015  FFF7         	movff	??_Set_Bits+1,tblptrh
  2917  000976  C016  FFF8         	movff	??_Set_Bits+2,tblptru
  2918  00097A  0008               	tblrd		*
  2919  00097C  50F5               	movf	tablat,w,c
  2920                           
  2921                           ; Switch size 1, requested type "space"
  2922                           ; Number of cases is 7, Range of values is 65 to 71
  2923                           ; switch strategies available:
  2924                           ; Name         Instructions Cycles
  2925                           ; simple_byte           22    12 (average)
  2926                           ;	Chosen strategy is simple_byte
  2927  00097E  0A41               	xorlw	65	; case 65
  2928  000980  B4D8               	btfsc	status,2,c
  2929  000982  D7DC               	goto	l1537
  2930  000984  0A03               	xorlw	3	; case 66
  2931  000986  B4D8               	btfsc	status,2,c
  2932  000988  D7DB               	goto	l1539
  2933  00098A  0A01               	xorlw	1	; case 67
  2934  00098C  B4D8               	btfsc	status,2,c
  2935  00098E  D7DA               	goto	l1541
  2936  000990  0A07               	xorlw	7	; case 68
  2937  000992  B4D8               	btfsc	status,2,c
  2938  000994  D7D9               	goto	l1543
  2939  000996  0A01               	xorlw	1	; case 69
  2940  000998  B4D8               	btfsc	status,2,c
  2941  00099A  D7D8               	goto	l1545
  2942  00099C  0A03               	xorlw	3	; case 70
  2943  00099E  B4D8               	btfsc	status,2,c
  2944  0009A0  D7D7               	goto	l1547
  2945  0009A2  0A01               	xorlw	1	; case 71
  2946  0009A4  B4D8               	btfsc	status,2,c
  2947  0009A6  D7D6               	goto	l1549
  2948  0009A8                     l1555:
  2949  0009A8  2A17               	incf	Set_Bits@bitcount,f,c
  2950  0009AA                     l1557:
  2951  0009AA  5017               	movf	Set_Bits@bitcount,w,c
  2952  0009AC  0D01               	mullw	1
  2953  0009AE  50F3               	movf	prodl,w,c
  2954  0009B0  2411               	addwf	Set_Bits@bits,w,c
  2955  0009B2  6E14               	movwf	??_Set_Bits& (0+255),c
  2956  0009B4  50F4               	movf	prodh,w,c
  2957  0009B6  2012               	addwfc	Set_Bits@bits+1,w,c
  2958  0009B8  6E15               	movwf	(??_Set_Bits+1)& (0+255),c
  2959  0009BA  0E00               	movlw	0
  2960  0009BC  2013               	addwfc	Set_Bits@bits+2,w,c
  2961  0009BE  6E16               	movwf	(??_Set_Bits+2)& (0+255),c
  2962  0009C0  C014  FFF6         	movff	??_Set_Bits,tblptrl
  2963  0009C4  C015  FFF7         	movff	??_Set_Bits+1,tblptrh
  2964  0009C8  C016  FFF8         	movff	??_Set_Bits+2,tblptru
  2965  0009CC  0008               	tblrd		*
  2966  0009CE  50F5               	movf	tablat,w,c
  2967  0009D0  0900               	iorlw	0
  2968  0009D2  A4D8               	btfss	status,2,c
  2969  0009D4  D7C1               	goto	l1553
  2970                           
  2971                           ;display.c: 38: }
  2972                           ;display.c: 39: Write_Display(Bitoutput);
  2973  0009D6  5018               	movf	Set_Bits@Bitoutput,w,c
  2974  0009D8  EC34  F006         	call	_Write_Display
  2975  0009DC  0012               	return		;funcret
  2976  0009DE                     __end_of_Set_Bits:
  2977                           	opt stack 0
  2978                           tblptru	equ	0xFF8
  2979                           tblptrh	equ	0xFF7
  2980                           tblptrl	equ	0xFF6
  2981                           tablat	equ	0xFF5
  2982                           prodh	equ	0xFF4
  2983                           prodl	equ	0xFF3
  2984                           intcon	equ	0xFF2
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           postdec1	equ	0xFE5
  2988                           fsr1l	equ	0xFE1
  2989                           indf2	equ	0xFDF
  2990                           postinc2	equ	0xFDE
  2991                           postdec2	equ	0xFDD
  2992                           plusw2	equ	0xFDB
  2993                           fsr2h	equ	0xFDA
  2994                           fsr2l	equ	0xFD9
  2995                           status	equ	0xFD8
  2996                           
  2997 ;; *************** function _Write_Display *****************
  2998 ;; Defined at:
  2999 ;;		line 42 in file "communication.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  write_data      1    wreg     unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  write_data      1   15[COMRAM] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;		None               void
  3006 ;; Registers used:
  3007 ;;		wreg
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1
  3013 ;;      Params:         0       0       0
  3014 ;;      Locals:         1       0       0
  3015 ;;      Temps:          0       0       0
  3016 ;;      Totals:         1       0       0
  3017 ;;Total ram usage:        1 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    2
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_Set_Bits
  3024 ;;		_Display
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text16
  3029  000C68                     __ptext16:
  3030                           	opt stack 0
  3031  000C68                     _Write_Display:
  3032                           	opt stack 24
  3033                           
  3034                           ;incstack = 0
  3035                           ;Write_Display@write_data stored from wreg
  3036  000C68  6E10               	movwf	Write_Display@write_data,c
  3037                           
  3038                           ;communication.c: 43: if(SSP1IF = 1) {
  3039  000C6A  869E               	bsf	3998,3,c	;volatile
  3040  000C6C  B69E               	btfsc	3998,3,c	;volatile
  3041                           
  3042                           ;communication.c: 44: SSP1IF = 0;
  3043  000C6E  969E               	bcf	3998,3,c	;volatile
  3044                           
  3045                           ;communication.c: 45: }
  3046                           ;communication.c: 46: SSP1BUF = write_data;
  3047  000C70  C010  FFC9         	movff	Write_Display@write_data,4041	;volatile
  3048  000C74                     l437:
  3049  000C74  A69E               	btfss	3998,3,c	;volatile
  3050  000C76  D7FE               	goto	l437
  3051                           
  3052                           ;communication.c: 48: SSP1IF = 0;
  3053  000C78  969E               	bcf	3998,3,c	;volatile
  3054  000C7A  0012               	return		;funcret
  3055  000C7C                     __end_of_Write_Display:
  3056                           	opt stack 0
  3057                           tblptru	equ	0xFF8
  3058                           tblptrh	equ	0xFF7
  3059                           tblptrl	equ	0xFF6
  3060                           tablat	equ	0xFF5
  3061                           prodh	equ	0xFF4
  3062                           prodl	equ	0xFF3
  3063                           intcon	equ	0xFF2
  3064                           postinc0	equ	0xFEE
  3065                           wreg	equ	0xFE8
  3066                           postdec1	equ	0xFE5
  3067                           fsr1l	equ	0xFE1
  3068                           indf2	equ	0xFDF
  3069                           postinc2	equ	0xFDE
  3070                           postdec2	equ	0xFDD
  3071                           plusw2	equ	0xFDB
  3072                           fsr2h	equ	0xFDA
  3073                           fsr2l	equ	0xFD9
  3074                           status	equ	0xFD8
  3075                           
  3076 ;; *************** function _Save_Data *****************
  3077 ;; Defined at:
  3078 ;;		line 8 in file "storage.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  store           2   15[COMRAM] unsigned int 
  3081 ;;  store_addres    1   17[COMRAM] unsigned char 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;		None               void
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1
  3093 ;;      Params:         3       0       0
  3094 ;;      Locals:         0       0       0
  3095 ;;      Temps:          0       0       0
  3096 ;;      Totals:         3       0       0
  3097 ;;Total ram usage:        3 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    2
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_Check_Buttons
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text17
  3108  000A42                     __ptext17:
  3109                           	opt stack 0
  3110  000A42                     _Save_Data:
  3111                           	opt stack 27
  3112                           
  3113                           ;storage.c: 10: EEADR = store_address;
  3114                           
  3115                           ;incstack = 0
  3116  000A42  C012  FFA9         	movff	Save_Data@store_address,4009	;volatile
  3117                           
  3118                           ;storage.c: 11: EEDATA = store;
  3119  000A46  C010  FFA8         	movff	Save_Data@store,4008	;volatile
  3120                           
  3121                           ;storage.c: 12: EECON1bits.EEPGD = 0;
  3122  000A4A  9EA6               	bcf	4006,7,c	;volatile
  3123                           
  3124                           ;storage.c: 13: EECON1bits.CFGS = 0;
  3125  000A4C  9CA6               	bcf	4006,6,c	;volatile
  3126                           
  3127                           ;storage.c: 14: INTCONbits.GIE = 0;
  3128  000A4E  9EF2               	bcf	intcon,7,c	;volatile
  3129                           
  3130                           ;storage.c: 15: EECON1bits.WREN = 1;
  3131  000A50  84A6               	bsf	4006,2,c	;volatile
  3132                           
  3133                           ;storage.c: 16: EECON2 = 0x55;
  3134  000A52  0E55               	movlw	85
  3135  000A54  6EA7               	movwf	4007,c	;volatile
  3136                           
  3137                           ;storage.c: 17: EECON2 = 0xAA;
  3138  000A56  0EAA               	movlw	170
  3139  000A58  6EA7               	movwf	4007,c	;volatile
  3140                           
  3141                           ;storage.c: 18: EECON1bits.WR = 1;
  3142  000A5A  82A6               	bsf	4006,1,c	;volatile
  3143  000A5C                     l291:
  3144  000A5C  A8A1               	btfss	4001,4,c	;volatile
  3145  000A5E  D7FE               	goto	l291
  3146                           
  3147                           ;storage.c: 20: PIR2bits.EEIF = 0;
  3148  000A60  98A1               	bcf	4001,4,c	;volatile
  3149                           
  3150                           ;storage.c: 21: store >>= 8;
  3151  000A62  5011               	movf	Save_Data@store+1,w,c
  3152  000A64  6E10               	movwf	Save_Data@store,c
  3153  000A66  6A11               	clrf	Save_Data@store+1,c
  3154                           
  3155                           ;storage.c: 22: store_address += 50;
  3156  000A68  0E32               	movlw	50
  3157  000A6A  2612               	addwf	Save_Data@store_address,f,c
  3158                           
  3159                           ;storage.c: 23: EEADR = store_address;
  3160  000A6C  C012  FFA9         	movff	Save_Data@store_address,4009	;volatile
  3161                           
  3162                           ;storage.c: 24: EEDATA = store;
  3163  000A70  C010  FFA8         	movff	Save_Data@store,4008	;volatile
  3164                           
  3165                           ;storage.c: 25: EECON1bits.EEPGD = 0;
  3166  000A74  9EA6               	bcf	4006,7,c	;volatile
  3167                           
  3168                           ;storage.c: 26: EECON1bits.CFGS = 0;
  3169  000A76  9CA6               	bcf	4006,6,c	;volatile
  3170                           
  3171                           ;storage.c: 27: EECON1bits.WREN = 1;
  3172  000A78  84A6               	bsf	4006,2,c	;volatile
  3173                           
  3174                           ;storage.c: 28: INTCONbits.GIE = 0;
  3175  000A7A  9EF2               	bcf	intcon,7,c	;volatile
  3176                           
  3177                           ;storage.c: 29: EECON2 = 0x55;
  3178  000A7C  0E55               	movlw	85
  3179  000A7E  6EA7               	movwf	4007,c	;volatile
  3180                           
  3181                           ;storage.c: 30: EECON2 = 0xAA;
  3182  000A80  0EAA               	movlw	170
  3183  000A82  6EA7               	movwf	4007,c	;volatile
  3184                           
  3185                           ;storage.c: 31: EECON1bits.WR = 1;
  3186  000A84  82A6               	bsf	4006,1,c	;volatile
  3187  000A86                     l294:
  3188  000A86  A8A1               	btfss	4001,4,c	;volatile
  3189  000A88  D7FE               	goto	l294
  3190                           
  3191                           ;storage.c: 33: PIR2bits.EEIF = 0;
  3192  000A8A  98A1               	bcf	4001,4,c	;volatile
  3193                           
  3194                           ;storage.c: 34: EECON1bits.WREN = 0;
  3195  000A8C  94A6               	bcf	4006,2,c	;volatile
  3196                           
  3197                           ;storage.c: 35: INTCONbits.GIE = 1;
  3198  000A8E  8EF2               	bsf	intcon,7,c	;volatile
  3199  000A90  0012               	return		;funcret
  3200  000A92                     __end_of_Save_Data:
  3201                           	opt stack 0
  3202                           tblptru	equ	0xFF8
  3203                           tblptrh	equ	0xFF7
  3204                           tblptrl	equ	0xFF6
  3205                           tablat	equ	0xFF5
  3206                           prodh	equ	0xFF4
  3207                           prodl	equ	0xFF3
  3208                           intcon	equ	0xFF2
  3209                           postinc0	equ	0xFEE
  3210                           wreg	equ	0xFE8
  3211                           postdec1	equ	0xFE5
  3212                           fsr1l	equ	0xFE1
  3213                           indf2	equ	0xFDF
  3214                           postinc2	equ	0xFDE
  3215                           postdec2	equ	0xFDD
  3216                           plusw2	equ	0xFDB
  3217                           fsr2h	equ	0xFDA
  3218                           fsr2l	equ	0xFD9
  3219                           status	equ	0xFD8
  3220                           
  3221 ;; *************** function _Read_Data *****************
  3222 ;; Defined at:
  3223 ;;		line 44 in file "storage.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  read_address    1    wreg     unsigned char 
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  read_address    1   19[COMRAM] unsigned char 
  3228 ;;  data_read       2   17[COMRAM] unsigned int 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  2   15[COMRAM] unsigned int 
  3231 ;; Registers used:
  3232 ;;		wreg, status,2, status,0
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK0   BANK1
  3238 ;;      Params:         2       0       0
  3239 ;;      Locals:         3       0       0
  3240 ;;      Temps:          0       0       0
  3241 ;;      Totals:         5       0       0
  3242 ;;Total ram usage:        5 bytes
  3243 ;; Hardware stack levels used:    1
  3244 ;; Hardware stack levels required when called:    2
  3245 ;; This function calls:
  3246 ;;		Nothing
  3247 ;; This function is called by:
  3248 ;;		_Check_Buttons
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text18
  3253  000B62                     __ptext18:
  3254                           	opt stack 0
  3255  000B62                     _Read_Data:
  3256                           	opt stack 27
  3257                           
  3258                           ;incstack = 0
  3259                           ;Read_Data@read_address stored from wreg
  3260  000B62  6E14               	movwf	Read_Data@read_address,c
  3261                           
  3262                           ;storage.c: 45: unsigned int data_read = 0;
  3263  000B64  0E00               	movlw	0
  3264  000B66  6E13               	movwf	Read_Data@data_read+1,c
  3265  000B68  0E00               	movlw	0
  3266  000B6A  6E12               	movwf	Read_Data@data_read,c
  3267                           
  3268                           ;storage.c: 46: read_address += 50;
  3269  000B6C  0E32               	movlw	50
  3270  000B6E  2614               	addwf	Read_Data@read_address,f,c
  3271                           
  3272                           ;storage.c: 47: EEADR = read_address;
  3273  000B70  C014  FFA9         	movff	Read_Data@read_address,4009	;volatile
  3274                           
  3275                           ;storage.c: 48: EECON1bits.EEPGD = 0;
  3276  000B74  9EA6               	bcf	4006,7,c	;volatile
  3277                           
  3278                           ;storage.c: 49: EECON1bits.CFGS = 0;
  3279  000B76  9CA6               	bcf	4006,6,c	;volatile
  3280                           
  3281                           ;storage.c: 50: EECON1bits.RD = 1;
  3282  000B78  80A6               	bsf	4006,0,c	;volatile
  3283                           
  3284                           ;storage.c: 51: data_read = EEDATA;
  3285  000B7A  CFA8 F012          	movff	4008,Read_Data@data_read	;volatile
  3286  000B7E  6A13               	clrf	Read_Data@data_read+1,c
  3287                           
  3288                           ;storage.c: 52: read_address -= 50;
  3289  000B80  0E32               	movlw	50
  3290  000B82  5E14               	subwf	Read_Data@read_address,f,c
  3291                           
  3292                           ;storage.c: 53: data_read <<= 8;
  3293  000B84  5012               	movf	Read_Data@data_read,w,c
  3294  000B86  6E13               	movwf	Read_Data@data_read+1,c
  3295  000B88  6A12               	clrf	Read_Data@data_read,c
  3296                           
  3297                           ;storage.c: 54: EEADR = read_address;
  3298  000B8A  C014  FFA9         	movff	Read_Data@read_address,4009	;volatile
  3299                           
  3300                           ;storage.c: 55: EECON1bits.EEPGD = 0;
  3301  000B8E  9EA6               	bcf	4006,7,c	;volatile
  3302                           
  3303                           ;storage.c: 56: EECON1bits.CFGS = 0;
  3304  000B90  9CA6               	bcf	4006,6,c	;volatile
  3305                           
  3306                           ;storage.c: 57: EECON1bits.RD = 1;
  3307  000B92  80A6               	bsf	4006,0,c	;volatile
  3308                           
  3309                           ;storage.c: 58: data_read |= EEDATA;
  3310  000B94  50A8               	movf	4008,w,c	;volatile
  3311  000B96  1212               	iorwf	Read_Data@data_read,f,c
  3312                           
  3313                           ;storage.c: 59: return data_read;
  3314  000B98  C012  F010         	movff	Read_Data@data_read,?_Read_Data
  3315  000B9C  C013  F011         	movff	Read_Data@data_read+1,?_Read_Data+1
  3316  000BA0  0012               	return	
  3317  000BA2                     __end_of_Read_Data:
  3318                           	opt stack 0
  3319                           tblptru	equ	0xFF8
  3320                           tblptrh	equ	0xFF7
  3321                           tblptrl	equ	0xFF6
  3322                           tablat	equ	0xFF5
  3323                           prodh	equ	0xFF4
  3324                           prodl	equ	0xFF3
  3325                           intcon	equ	0xFF2
  3326                           postinc0	equ	0xFEE
  3327                           wreg	equ	0xFE8
  3328                           postdec1	equ	0xFE5
  3329                           fsr1l	equ	0xFE1
  3330                           indf2	equ	0xFDF
  3331                           postinc2	equ	0xFDE
  3332                           postdec2	equ	0xFDD
  3333                           plusw2	equ	0xFDB
  3334                           fsr2h	equ	0xFDA
  3335                           fsr2l	equ	0xFD9
  3336                           status	equ	0xFD8
  3337                           
  3338 ;; *************** function _Delay_Routine *****************
  3339 ;; Defined at:
  3340 ;;		line 78 in file "main.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  delay_multip    1    wreg     unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  delay_multip    1   16[COMRAM] unsigned char 
  3345 ;;  delay_counte    1   17[COMRAM] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;		None               void
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1
  3355 ;;      Params:         0       0       0
  3356 ;;      Locals:         2       0       0
  3357 ;;      Temps:          1       0       0
  3358 ;;      Totals:         3       0       0
  3359 ;;Total ram usage:        3 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    2
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_Check_Buttons
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text19
  3370  000C12                     __ptext19:
  3371                           	opt stack 0
  3372  000C12                     _Delay_Routine:
  3373                           	opt stack 27
  3374                           
  3375                           ;incstack = 0
  3376                           ;Delay_Routine@delay_multiplyer stored from wreg
  3377  000C12  6E11               	movwf	Delay_Routine@delay_multiplyer,c
  3378                           
  3379                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  3380  000C14  0E00               	movlw	0
  3381  000C16  6E12               	movwf	Delay_Routine@delay_counter,c
  3382                           
  3383                           ;main.c: 80: delay_counter++) {
  3384  000C18  D008               	goto	l1637
  3385  000C1A                     l1633:
  3386                           
  3387                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  3388  000C1A  0E82               	movlw	130
  3389  000C1C  6E10               	movwf	??_Delay_Routine& (0+255),c
  3390  000C1E  0EDE               	movlw	222
  3391  000C20                     u927:
  3392  000C20  2EE8               	decfsz	wreg,f,c
  3393  000C22  D7FE               	goto	u927
  3394  000C24  2E10               	decfsz	??_Delay_Routine& (0+255),f,c
  3395  000C26  D7FC               	goto	u927
  3396  000C28  2A12               	incf	Delay_Routine@delay_counter,f,c
  3397  000C2A                     l1637:
  3398  000C2A  5011               	movf	Delay_Routine@delay_multiplyer,w,c
  3399  000C2C  5C12               	subwf	Delay_Routine@delay_counter,w,c
  3400  000C2E  A0D8               	btfss	status,0,c
  3401  000C30  D7F4               	goto	l1633
  3402                           
  3403                           ;main.c: 82: }
  3404                           ;main.c: 83: __nop();
  3405  000C32  F000               	nop	
  3406  000C34  0012               	return		;funcret
  3407  000C36                     __end_of_Delay_Routine:
  3408                           	opt stack 0
  3409                           tblptru	equ	0xFF8
  3410                           tblptrh	equ	0xFF7
  3411                           tblptrl	equ	0xFF6
  3412                           tablat	equ	0xFF5
  3413                           prodh	equ	0xFF4
  3414                           prodl	equ	0xFF3
  3415                           intcon	equ	0xFF2
  3416                           postinc0	equ	0xFEE
  3417                           wreg	equ	0xFE8
  3418                           postdec1	equ	0xFE5
  3419                           fsr1l	equ	0xFE1
  3420                           indf2	equ	0xFDF
  3421                           postinc2	equ	0xFDE
  3422                           postdec2	equ	0xFDD
  3423                           plusw2	equ	0xFDB
  3424                           fsr2h	equ	0xFDA
  3425                           fsr2l	equ	0xFD9
  3426                           status	equ	0xFD8
  3427                           
  3428 ;; *************** function _Isr *****************
  3429 ;; Defined at:
  3430 ;;		line 3 in file "interrupt.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  received        1   14[COMRAM] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;		None               void
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1
  3444 ;;      Params:         0       0       0
  3445 ;;      Locals:         1       0       0
  3446 ;;      Temps:         14       0       0
  3447 ;;      Totals:        15       0       0
  3448 ;;Total ram usage:       15 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    1
  3451 ;; This function calls:
  3452 ;;		_Receive
  3453 ;; This function is called by:
  3454 ;;		Interrupt level 2
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	intcode
  3459  000008                     __pintcode:
  3460                           	opt stack 0
  3461  000008                     _Isr:
  3462                           	opt stack 23
  3463                           
  3464                           ;incstack = 0
  3465  000008  822F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3466  00000A  CFFA F001          	movff	pclath,??_Isr
  3467  00000E  CFFB F002          	movff	pclatu,??_Isr+1
  3468  000012  CFE9 F003          	movff	fsr0l,??_Isr+2
  3469  000016  CFEA F004          	movff	fsr0h,??_Isr+3
  3470  00001A  CFE1 F005          	movff	fsr1l,??_Isr+4
  3471  00001E  CFE2 F006          	movff	fsr1h,??_Isr+5
  3472  000022  CFD9 F007          	movff	fsr2l,??_Isr+6
  3473  000026  CFDA F008          	movff	fsr2h,??_Isr+7
  3474  00002A  CFF3 F009          	movff	prodl,??_Isr+8
  3475  00002E  CFF4 F00A          	movff	prodh,??_Isr+9
  3476  000032  CFF6 F00B          	movff	tblptrl,??_Isr+10
  3477  000036  CFF7 F00C          	movff	tblptrh,??_Isr+11
  3478  00003A  CFF8 F00D          	movff	tblptru,??_Isr+12
  3479  00003E  CFF5 F00E          	movff	tablat,??_Isr+13
  3480                           
  3481                           ;interrupt.c: 4: if(PIR1bits.RCIF == 1) {
  3482  000042  AA9E               	btfss	3998,5,c	;volatile
  3483  000044  D012               	goto	i2l469
  3484                           
  3485                           ;interrupt.c: 5: PIR1bits.RCIF = 0;
  3486  000046  9A9E               	bcf	3998,5,c	;volatile
  3487                           
  3488                           ;interrupt.c: 6: unsigned char received = 0;
  3489  000048  0E00               	movlw	0
  3490  00004A  6E0F               	movwf	Isr@received,c
  3491                           
  3492                           ;interrupt.c: 7: received = Receive();
  3493  00004C  EC50  F006         	call	_Receive	;wreg free
  3494  000050  6E0F               	movwf	Isr@received,c
  3495                           
  3496                           ;interrupt.c: 8: __nop();
  3497  000052  F000               	nop	
  3498                           
  3499                           ;interrupt.c: 9: if(received == '1' || received == 'L') {
  3500  000054  0E31               	movlw	49
  3501  000056  180F               	xorwf	Isr@received,w,c
  3502  000058  B4D8               	btfsc	status,2,c
  3503  00005A  D004               	goto	i2l472
  3504  00005C  0E4C               	movlw	76
  3505  00005E  180F               	xorwf	Isr@received,w,c
  3506  000060  A4D8               	btfss	status,2,c
  3507  000062  D002               	goto	i2l470
  3508  000064                     i2l472:
  3509                           
  3510                           ;interrupt.c: 10: PORTAbits.RA0 = 1;
  3511  000064  8080               	bsf	3968,0,c	;volatile
  3512                           
  3513                           ;interrupt.c: 11: }else {
  3514  000066  D001               	goto	i2l469
  3515  000068                     i2l470:
  3516                           
  3517                           ;interrupt.c: 12: PORTAbits.RA0 = 0;
  3518  000068  9080               	bcf	3968,0,c	;volatile
  3519  00006A                     i2l469:
  3520                           
  3521                           ;interrupt.c: 13: }
  3522                           ;interrupt.c: 14: }if(PIR1bits.CCP1IF == 1) {
  3523  00006A  A49E               	btfss	3998,2,c	;volatile
  3524  00006C  D003               	goto	i2l475
  3525                           
  3526                           ;interrupt.c: 15: PIR1bits.CCP1IF = 0;
  3527  00006E  949E               	bcf	3998,2,c	;volatile
  3528                           
  3529                           ;interrupt.c: 16: current_time++;
  3530  000070  4A26               	infsnz	_current_time,f,c
  3531  000072  2A27               	incf	_current_time+1,f,c
  3532  000074                     i2l475:
  3533  000074  C00E  FFF5         	movff	??_Isr+13,tablat
  3534  000078  C00D  FFF8         	movff	??_Isr+12,tblptru
  3535  00007C  C00C  FFF7         	movff	??_Isr+11,tblptrh
  3536  000080  C00B  FFF6         	movff	??_Isr+10,tblptrl
  3537  000084  C00A  FFF4         	movff	??_Isr+9,prodh
  3538  000088  C009  FFF3         	movff	??_Isr+8,prodl
  3539  00008C  C008  FFDA         	movff	??_Isr+7,fsr2h
  3540  000090  C007  FFD9         	movff	??_Isr+6,fsr2l
  3541  000094  C006  FFE2         	movff	??_Isr+5,fsr1h
  3542  000098  C005  FFE1         	movff	??_Isr+4,fsr1l
  3543  00009C  C004  FFEA         	movff	??_Isr+3,fsr0h
  3544  0000A0  C003  FFE9         	movff	??_Isr+2,fsr0l
  3545  0000A4  C002  FFFB         	movff	??_Isr+1,pclatu
  3546  0000A8  C001  FFFA         	movff	??_Isr,pclath
  3547  0000AC  922F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3548  0000AE  0011               	retfie		f
  3549  0000B0                     __end_of_Isr:
  3550                           	opt stack 0
  3551                           pclatu	equ	0xFFB
  3552                           pclath	equ	0xFFA
  3553                           tblptru	equ	0xFF8
  3554                           tblptrh	equ	0xFF7
  3555                           tblptrl	equ	0xFF6
  3556                           tablat	equ	0xFF5
  3557                           prodh	equ	0xFF4
  3558                           prodl	equ	0xFF3
  3559                           intcon	equ	0xFF2
  3560                           postinc0	equ	0xFEE
  3561                           fsr0h	equ	0xFEA
  3562                           fsr0l	equ	0xFE9
  3563                           wreg	equ	0xFE8
  3564                           postdec1	equ	0xFE5
  3565                           fsr1h	equ	0xFE2
  3566                           fsr1l	equ	0xFE1
  3567                           indf2	equ	0xFDF
  3568                           postinc2	equ	0xFDE
  3569                           postdec2	equ	0xFDD
  3570                           plusw2	equ	0xFDB
  3571                           fsr2h	equ	0xFDA
  3572                           fsr2l	equ	0xFD9
  3573                           status	equ	0xFD8
  3574                           
  3575 ;; *************** function _Receive *****************
  3576 ;; Defined at:
  3577 ;;		line 32 in file "communication.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;		None
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;		None
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      unsigned char 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1
  3591 ;;      Params:         0       0       0
  3592 ;;      Locals:         0       0       0
  3593 ;;      Temps:          0       0       0
  3594 ;;      Totals:         0       0       0
  3595 ;;Total ram usage:        0 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_Isr
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text21
  3605  000CA0                     __ptext21:
  3606                           	opt stack 0
  3607  000CA0                     _Receive:
  3608                           	opt stack 23
  3609                           
  3610                           ;communication.c: 33: if(RCSTA1bits.OERR == 1) {
  3611                           
  3612                           ;incstack = 0
  3613  000CA0  A2AB               	btfss	4011,1,c	;volatile
  3614  000CA2  D004               	goto	i2l432
  3615                           
  3616                           ;communication.c: 34: RCSTA1bits.CREN = 0;
  3617  000CA4  98AB               	bcf	4011,4,c	;volatile
  3618                           
  3619                           ;communication.c: 35: RCSTA1bits.CREN = 1;
  3620  000CA6  88AB               	bsf	4011,4,c	;volatile
  3621                           
  3622                           ;communication.c: 36: overrun = 1;
  3623  000CA8  0E01               	movlw	1
  3624  000CAA  6E28               	movwf	_overrun,c
  3625  000CAC                     i2l432:
  3626                           
  3627                           ;communication.c: 37: }
  3628                           ;communication.c: 39: return (RCREG1);
  3629  000CAC  50AE               	movf	4014,w,c	;volatile
  3630  000CAE  0012               	return	
  3631  000CB0                     __end_of_Receive:
  3632                           	opt stack 0
  3633                           pclatu	equ	0xFFB
  3634                           pclath	equ	0xFFA
  3635                           tblptru	equ	0xFF8
  3636                           tblptrh	equ	0xFF7
  3637                           tblptrl	equ	0xFF6
  3638                           tablat	equ	0xFF5
  3639                           prodh	equ	0xFF4
  3640                           prodl	equ	0xFF3
  3641                           intcon	equ	0xFF2
  3642                           postinc0	equ	0xFEE
  3643                           fsr0h	equ	0xFEA
  3644                           fsr0l	equ	0xFE9
  3645                           wreg	equ	0xFE8
  3646                           postdec1	equ	0xFE5
  3647                           fsr1h	equ	0xFE2
  3648                           fsr1l	equ	0xFE1
  3649                           indf2	equ	0xFDF
  3650                           postinc2	equ	0xFDE
  3651                           postdec2	equ	0xFDD
  3652                           plusw2	equ	0xFDB
  3653                           fsr2h	equ	0xFDA
  3654                           fsr2l	equ	0xFD9
  3655                           status	equ	0xFD8
  3656                           pclatu	equ	0xFFB
  3657                           pclath	equ	0xFFA
  3658                           tblptru	equ	0xFF8
  3659                           tblptrh	equ	0xFF7
  3660                           tblptrl	equ	0xFF6
  3661                           tablat	equ	0xFF5
  3662                           prodh	equ	0xFF4
  3663                           prodl	equ	0xFF3
  3664                           intcon	equ	0xFF2
  3665                           postinc0	equ	0xFEE
  3666                           fsr0h	equ	0xFEA
  3667                           fsr0l	equ	0xFE9
  3668                           wreg	equ	0xFE8
  3669                           postdec1	equ	0xFE5
  3670                           fsr1h	equ	0xFE2
  3671                           fsr1l	equ	0xFE1
  3672                           indf2	equ	0xFDF
  3673                           postinc2	equ	0xFDE
  3674                           postdec2	equ	0xFDD
  3675                           plusw2	equ	0xFDB
  3676                           fsr2h	equ	0xFDA
  3677                           fsr2l	equ	0xFD9
  3678                           status	equ	0xFD8
  3679                           
  3680                           	psect	rparam
  3681  0000                     pclatu	equ	0xFFB
  3682                           pclath	equ	0xFFA
  3683                           tblptru	equ	0xFF8
  3684                           tblptrh	equ	0xFF7
  3685                           tblptrl	equ	0xFF6
  3686                           tablat	equ	0xFF5
  3687                           prodh	equ	0xFF4
  3688                           prodl	equ	0xFF3
  3689                           intcon	equ	0xFF2
  3690                           postinc0	equ	0xFEE
  3691                           fsr0h	equ	0xFEA
  3692                           fsr0l	equ	0xFE9
  3693                           wreg	equ	0xFE8
  3694                           postdec1	equ	0xFE5
  3695                           fsr1h	equ	0xFE2
  3696                           fsr1l	equ	0xFE1
  3697                           indf2	equ	0xFDF
  3698                           postinc2	equ	0xFDE
  3699                           postdec2	equ	0xFDD
  3700                           plusw2	equ	0xFDB
  3701                           fsr2h	equ	0xFDA
  3702                           fsr2l	equ	0xFD9
  3703                           status	equ	0xFD8
  3704                           
  3705                           	psect	temp
  3706  00002F                     btemp:
  3707                           	opt stack 0
  3708  00002F                     	ds	1
  3709  0000                     int$flags	set	btemp
  3710                           pclatu	equ	0xFFB
  3711                           pclath	equ	0xFFA
  3712                           tblptru	equ	0xFF8
  3713                           tblptrh	equ	0xFF7
  3714                           tblptrl	equ	0xFF6
  3715                           tablat	equ	0xFF5
  3716                           prodh	equ	0xFF4
  3717                           prodl	equ	0xFF3
  3718                           intcon	equ	0xFF2
  3719                           postinc0	equ	0xFEE
  3720                           fsr0h	equ	0xFEA
  3721                           fsr0l	equ	0xFE9
  3722                           wreg	equ	0xFE8
  3723                           postdec1	equ	0xFE5
  3724                           fsr1h	equ	0xFE2
  3725                           fsr1l	equ	0xFE1
  3726                           indf2	equ	0xFDF
  3727                           postinc2	equ	0xFDE
  3728                           postdec2	equ	0xFDD
  3729                           plusw2	equ	0xFDB
  3730                           fsr2h	equ	0xFDA
  3731                           fsr2l	equ	0xFD9
  3732                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    0
    Data        180
    BSS         65
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      46
    BANK0           160      0      57
    BANK1           256      0     180

Pointer List with Targets:

    Evaluate_Display@evaluate	PTR unsigned char  size(2) Largest target is 3
		 -> signs(COMRAM[3]), 

    Set_Bits@bits	PTR const unsigned char  size(3) Largest target is 8191
		 -> ROM(CODE[8191]), STR_13(CODE[2]), STR_12(CODE[7]), STR_11(CODE[6]), 
		 -> STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[7]), 
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[3]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_Check_Buttons
    _Check_Buttons->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits
    _Set_Bits->_Write_Display

Critical Paths under _Isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8940
                      _Check_Buttons
                   _Check_Detonators
                               _Init
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Detonators                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0    4702
                                             35 COMRAM     2     2      0
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Set_Display                                          4     1      3    4238
                                             31 COMRAM     4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
 ---------------------------------------------------------------------------------
 (2) _Evaluate_Signs                                       3     1      2    1720
                                             28 COMRAM     3     1      2
                   _Evaluate_Display
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             15 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Display                                     4     2      2    1256
                                             24 COMRAM     4     2      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (4) _Set_Bits                                             8     5      3    1038
                                             16 COMRAM     8     5      3
                      _Write_Display
 ---------------------------------------------------------------------------------
 (5) _Write_Display                                        1     1      0      22
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     346
                                             15 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2      72
                                             15 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      46
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _Isr                                                 15    15      0      30
                                              0 COMRAM    15    15      0
                            _Receive
 ---------------------------------------------------------------------------------
 (8) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
           _Write_Display
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
             _Write_Display
         ___lwmod
   _Check_Detonators
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Set_Display
     _Evaluate_Display
       _Set_Bits
         _Write_Display
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
           _Write_Display
       ___lwmod

 _Isr (ROOT)
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      39       4       35.6%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     25      2E       1       48.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11B       6        0.0%
DATA                 0      0     11B       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Nov 27 22:06:22 2016

       Evaluate_Display@counter 001C        Evaluate_Display@evaluate 0019                              l90 0444  
                            l82 0302                              l94 057E                              l86 039C  
                            l78 025C                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                           l291 0A5C                             l364 0A30                             l437 0C74  
                           l294 0A86                             l888 0B58                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                             u927 0C20                             _Isr 0008  
                           _pin 0100                  _Evaluate_Signs 09DE                             prod 000FF3  
                           wreg 000FE8               Set_Bits@Bitoutput 0018                      _TXSTA1bits 000FAC  
                  __CFG_LVP$OFF 000000                            ?_Isr 0001                            l1601 0B2E  
                          l1603 0B36                            l1541 0944                            l1605 0B3A  
                          l1543 0948                            l1615 09E2                            l1633 0C1A  
                          l1545 094C                            l1537 093C                            l1553 0958  
                          l1609 0B4E                            l1641 0ADE                            l1801 04D8  
                          l1547 0950                            l1539 0940                            l1555 09A8  
                          l1571 0726                            l1563 06C6                            l1619 09EA  
                          l1637 0C2A                            l1549 0954                            l1557 09AA  
                          l1581 079E                            l1573 073E                            l1565 06DE  
                          l1653 0B06                            l1583 07B6                            l1575 0756  
                          l1567 06F6                            l1591 0810                            l1735 02D2  
                          l1585 07CE                            l1577 076E                            l1569 070E  
                          l1593 0872                            l1657 0B14                            l1587 07E6  
                          l1579 0786                            l1595 0874                            l1835 05E6  
                          l1827 059A                            l1763 0414                            l1589 07FE  
                          l1781 0460                            l1749 036C                            l1793 04B8  
                          l1785 04A4                            l1857 0BCE                            l1789 04AE  
                          l1799 04C4                            STR_1 0209                            STR_2 0243  
                          STR_3 022B                            STR_4 0225                            STR_5 023D  
                          STR_6 0231                            STR_7 021E                            STR_8 0242  
                          STR_9 0201                            _Init 0C36                            _main 0BCA  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            btemp 002F                   __CFG_BORV$190 000000  
                          pclat 000FFA                            prodh 000FF4                            prodl 000FF3  
                          start 00B0                   __CFG_IESO$OFF 000000                  Save_Data@store 0010  
                  ___param_bank 000010                   _InitInterrupt 0CB0                           ??_Isr 0001  
               __end_of_Receive 0CB0                    _BAUDCON1bits 000FB8                           ?_Init 0001  
                         ?_main 0001                           _EEADR 000FA9                           STR_10 0210  
                         STR_11 0237                           STR_12 0217                           STR_13 0229  
        __end_of_Evaluate_Signs 0A42               _InitMiscellaneous 0CBA                 __end_of___lwmod 0B62  
                         i2l432 0CAC                           i2l470 0068                           i2l472 0064  
                         i2l475 0074                           i2l469 006A          __size_of_Write_Display 0014  
                         _TMR1H 000FCF                           _TMR1L 000FCE                           _PORTA 000F80  
                         _PORTB 000F81                           _PORTC 000F82                           _PORTE 000F84  
                         _TRISA 000F92                           _TRISB 000F93                           _TRISC 000F94  
                         _TRISE 000F96                   __CFG_WRT0$OFF 000000        __end_of_InitTransmission 0C12  
                 __CFG_WRT1$OFF 000000              ?_InitMiscellaneous 0001                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                _Evaluate_Display 06BE  
                __CFG_EBTRB$OFF 000000                           _signs 002B              __CFG_MCLRE$EXTMCLR 000000  
                   Isr@received 000F                  __pbitbssCOMRAM 0170                  __CFG_BOREN$OFF 000000  
           ??_InitMiscellaneous 0010                           tablat 000FF5                           plusw2 000FDB  
                         status 000FD8                  ?_InitInterrupt 0001                 __initialization 0A92  
                  __end_of_Init 0C54                    __end_of_main 0BEE                __end_of_InitPort 0CA0  
              __end_of_InitTris 0C8E          Set_Display@information 0020       __end_of_InitMiscellaneous 0CC0  
                        ??_Init 0010                   ??_Set_Display 0023                          ??_main 0026  
              __end_of_Set_Bits 09DE                 ?_Evaluate_Signs 001D                   __activetblptr 000002  
                        _EEDATA 000FA8                          _CCPR1H 000FBF                          _CCPR1L 000FBE  
                        _EECON2 000FA7                          _ANSELA 000F38                          _ANSELB 000F39  
                        _ANSELC 000F3A                  __CFG_WDTEN$OFF 000000                          _RCREG1 000FAE  
                        _OSCCON 000FD3              __size_of_InitAnsel 0014                          _SPBRG1 000FAF  
                        _SSP1IF 007CF3              __size_of_Read_Data 0040              __size_of_InitTimer 0028  
                        _TXREG1 000FAD                   _Write_Display 0C68                       ??_Receive 0001  
                __CFG_XINST$OFF 000000                    _CCPTMRS0bits 000F49              __size_of_Save_Data 0050  
                     ??___lwmod 0014                          clear_0 0A98                          clear_1 0AA6  
                        _pixels 0060          __size_of_Check_Buttons 0476  Evaluate_Signs@evaluation_value 001D  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8             __end_of_Set_Display 0B20                 __CFG_HFOFST$OFF 000000  
                    __accesstop 0060         __end_of__initialization 0ACC                  ?_Write_Display 0001  
               __CFG_PBADEN$OFF 000000                 ??_InitInterrupt 0010                   ___rparam_used 000001  
                __pcstackCOMRAM 0001       __size_of_Check_Detonators 0002                    __pidataBANK1 087E  
    __size_of_InitMiscellaneous 0006               __end_of_InitAnsel 0C68               __end_of_Read_Data 0BA2  
             __end_of_InitTimer 0BCA               __end_of_Save_Data 0A92                      __pbssBANK0 0060  
               __CFG_PLLCFG$OFF 000000                   _Check_Buttons 0248                       ?_InitPort 0001  
                     ?_InitTris 0001                       ?_Set_Bits 0011              __CFG_CCP2MX$PORTC1 000000  
      __end_of_Evaluate_Display 087E              __CFG_CCP3MX$PORTB5 000000                     _Set_Display 0ADA  
        __size_of_Delay_Routine 0024               ?_InitTransmission 0001               __CFG_PRICLKEN$OFF 000000  
                       _SSP1BUF 000FC9              ??_InitTransmission 0010                 ??_Write_Display 0010  
                ?_Check_Buttons 0001                      ??_InitPort 0010                      ??_InitTris 0010  
                    ??_Set_Bits 0014                 __CFG_PWRTEN$OFF 000000                         _Receive 0CA0  
                       __Hparam 0000                         __Lparam 0000                ??_Evaluate_Signs 001F  
                       ___lwmod 0B20                    __psmallconst 0200                 __CFG_STVREN$OFF 000000  
                       __pcinit 0A92                         __ramtop 0200                         __ptext0 0BCA  
                       __ptext1 0C36                         __ptext2 0C7C                         __ptext3 0BEE  
                       __ptext4 0BA2                         __ptext5 0C8E                         __ptext6 0CBA  
                       __ptext7 0CB0                         __ptext8 0C54                         __ptext9 0CC0  
                     _T1CONbits 000FCD                    __size_of_Isr 00A8                 Set_Display@type 0023  
                     _T3CONbits 000FB1                         _overrun 0028            end_of_initialization 0ACC  
                 __Lmediumconst 0000                   _Delay_Routine 0C12                _Check_Detonators 0CC0  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE         Write_Display@write_data 0010                       _PORTAbits 000F80  
                     _PORTBbits 000F81                       _PORTCbits 000F82                       _TRISCbits 000F94  
               ??_Check_Buttons 0024                  ?_Delay_Routine 0001                     _CCP1CONbits 000FBD  
                  Set_Bits@bits 0011             start_initialization 0A92                       _InitAnsel 0C54  
                  _ignite_ready 0170                     __end_of_Isr 00B0                       _Read_Data 0B62  
                     _InitTimer 0BA2                Set_Bits@bitcount 0017                       _Save_Data 0A42  
             __size_of_InitPort 0012               __size_of_InitTris 0012           __end_of_InitInterrupt 0CBA  
             __size_of_Set_Bits 00AC               ?_Evaluate_Display 0019                     __pdataBANK1 0100  
            ??_Evaluate_Display 001B                  _slave_selected 002A                    ?_Set_Display 0020  
        Save_Data@store_address 0012                     __pbssCOMRAM 0026                      ?_InitAnsel 0001  
                    ?_Read_Data 0010                      ?_InitTimer 0001                 ??_Delay_Routine 0010  
                    ?_Save_Data 0010                    _current_time 0026                        ?_Receive 0001  
     __size_of_InitTransmission 0024           Read_Data@read_address 0014                       __pintcode 0008  
                      ?___lwmod 0010                     __smallconst 0200        __end_of_Check_Detonators 0CC2  
         __end_of_Write_Display 0C7C                        _PIE1bits 000F9D                        _PIR1bits 000F9E  
                      _PIR2bits 000FA1                __CFG_WDTPS$32768 000000                        _SSP1CON1 000FC6  
                      _SSP1STAT 000FC7                     ??_InitAnsel 0010                     ??_Read_Data 0012  
                   ??_InitTimer 0010                       copy_data0 0AC0                        _InitPort 0C8E  
                      _InitTris 0C7C                     ??_Save_Data 0013                      _EECON1bits 000FA6  
                      _Set_Bits 0932                    _pin_selected 0029                        __Hrparam 0000  
              __size_of_Receive 0010                        __Lrparam 0000               __CFG_P2BMX$PORTB5 000000  
              __size_of___lwmod 0042            __size_of_Set_Display 0046         __size_of_Evaluate_Signs 0064  
                      __ptext10 0248                        __ptext11 0ADA                        __ptext12 09DE  
                      __ptext21 0CA0                        __ptext13 0B20                        __ptext14 06BE  
                      __ptext15 0932                        __ptext16 0C68                        __ptext17 0A42  
                      __ptext18 0B62                        __ptext19 0C12           __end_of_Check_Buttons 06BE  
              Set_Display@value 0021                   __size_of_Init 001E                   __size_of_main 0024  
              _InitTransmission 0BEE      Delay_Routine@delay_counter 0012                        _testflag 0171  
                      int$flags 002F            Evaluate_Display@size 001B      Evaluate_Signs@valuecounter 001F  
                    _INTCONbits 000FF2       __size_of_Evaluate_Display 01C0              Read_Data@data_read 0012  
                      intlevel2 0000                ___lwmod@dividend 0010                      _RCSTA1bits 000FAB  
               ___lwmod@divisor 0012   Delay_Routine@delay_multiplyer 0011                 ___lwmod@counter 0014  
             __CFG_T3CMX$PORTC0 000000          __size_of_InitInterrupt 000A               ?_Check_Detonators 0001  
            ??_Check_Detonators 0010           __end_of_Delay_Routine 0C36               __CFG_FOSC$INTIO67 000000  
