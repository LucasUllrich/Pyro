

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Feb 10 17:53:07 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	idataBANK1
    57  000F6C                     __pidataBANK1:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _pin
    61  000F6C  00                 	db	0
    62  000F6D  00                 	db	0
    63  000F6E  00                 	db	0
    64  000F6F  1F                 	db	31
    65  000F70  00                 	db	0
    66  000F71  00                 	db	0
    67  000F72  00                 	db	0
    68  000F73  01                 	db	1
    69  000F74  01                 	db	1
    70  000F75  1E                 	db	30
    71  000F76  00                 	db	0
    72  000F77  00                 	db	0
    73  000F78  00                 	db	0
    74  000F79  02                 	db	2
    75  000F7A  02                 	db	2
    76  000F7B  1D                 	db	29
    77  000F7C  00                 	db	0
    78  000F7D  00                 	db	0
    79  000F7E  00                 	db	0
    80  000F7F  03                 	db	3
    81  000F80  03                 	db	3
    82  000F81  1C                 	db	28
    83  000F82  00                 	db	0
    84  000F83  00                 	db	0
    85  000F84  00                 	db	0
    86  000F85  04                 	db	4
    87  000F86  04                 	db	4
    88  000F87  1B                 	db	27
    89  000F88  00                 	db	0
    90  000F89  00                 	db	0
    91  000F8A  00                 	db	0
    92  000F8B  05                 	db	5
    93  000F8C  05                 	db	5
    94  000F8D  1A                 	db	26
    95  000F8E  00                 	db	0
    96  000F8F  00                 	db	0
    97  000F90  00                 	db	0
    98  000F91  06                 	db	6
    99  000F92  06                 	db	6
   100  000F93  19                 	db	25
   101  000F94  00                 	db	0
   102  000F95  00                 	db	0
   103  000F96  00                 	db	0
   104  000F97  07                 	db	7
   105  000F98  07                 	db	7
   106  000F99  18                 	db	24
   107  000F9A  00                 	db	0
   108  000F9B  00                 	db	0
   109  000F9C  00                 	db	0
   110  000F9D  08                 	db	8
   111  000F9E  08                 	db	8
   112  000F9F  27                 	db	39
   113  000FA0  00                 	db	0
   114  000FA1  00                 	db	0
   115  000FA2  00                 	db	0
   116  000FA3  09                 	db	9
   117  000FA4  09                 	db	9
   118  000FA5  26                 	db	38
   119  000FA6  00                 	db	0
   120  000FA7  00                 	db	0
   121  000FA8  01                 	db	1
   122  000FA9  00                 	db	0
   123  000FAA  0A                 	db	10
   124  000FAB  25                 	db	37
   125  000FAC  00                 	db	0
   126  000FAD  00                 	db	0
   127  000FAE  01                 	db	1
   128  000FAF  01                 	db	1
   129  000FB0  0B                 	db	11
   130  000FB1  24                 	db	36
   131  000FB2  00                 	db	0
   132  000FB3  00                 	db	0
   133  000FB4  01                 	db	1
   134  000FB5  02                 	db	2
   135  000FB6  0C                 	db	12
   136  000FB7  23                 	db	35
   137  000FB8  00                 	db	0
   138  000FB9  00                 	db	0
   139  000FBA  01                 	db	1
   140  000FBB  03                 	db	3
   141  000FBC  0D                 	db	13
   142  000FBD  22                 	db	34
   143  000FBE  00                 	db	0
   144  000FBF  00                 	db	0
   145  000FC0  01                 	db	1
   146  000FC1  04                 	db	4
   147  000FC2  0E                 	db	14
   148  000FC3  21                 	db	33
   149  000FC4  00                 	db	0
   150  000FC5  00                 	db	0
   151  000FC6  01                 	db	1
   152  000FC7  05                 	db	5
   153  000FC8  0F                 	db	15
   154  000FC9  20                 	db	32
   155  000FCA  00                 	db	0
   156  000FCB  00                 	db	0
   157  000FCC  01                 	db	1
   158  000FCD  06                 	db	6
   159  000FCE  10                 	db	16
   160  000FCF  2F                 	db	47
   161  000FD0  00                 	db	0
   162  000FD1  00                 	db	0
   163  000FD2  01                 	db	1
   164  000FD3  07                 	db	7
   165  000FD4  11                 	db	17
   166  000FD5  2E                 	db	46
   167  000FD6  00                 	db	0
   168  000FD7  00                 	db	0
   169  000FD8  01                 	db	1
   170  000FD9  08                 	db	8
   171  000FDA  12                 	db	18
   172  000FDB  2D                 	db	45
   173  000FDC  00                 	db	0
   174  000FDD  00                 	db	0
   175  000FDE  01                 	db	1
   176  000FDF  09                 	db	9
   177  000FE0  13                 	db	19
   178  000FE1  2C                 	db	44
   179  000FE2  00                 	db	0
   180  000FE3  00                 	db	0
   181  000FE4  02                 	db	2
   182  000FE5  00                 	db	0
   183  000FE6  14                 	db	20
   184  000FE7  2B                 	db	43
   185  000FE8  00                 	db	0
   186  000FE9  00                 	db	0
   187  000FEA  02                 	db	2
   188  000FEB  01                 	db	1
   189  000FEC  15                 	db	21
   190  000FED  2A                 	db	42
   191  000FEE  00                 	db	0
   192  000FEF  00                 	db	0
   193  000FF0  02                 	db	2
   194  000FF1  02                 	db	2
   195  000FF2  16                 	db	22
   196  000FF3  29                 	db	41
   197  000FF4  00                 	db	0
   198  000FF5  00                 	db	0
   199  000FF6  02                 	db	2
   200  000FF7  03                 	db	3
   201  000FF8  17                 	db	23
   202  000FF9  28                 	db	40
   203  000FFA  00                 	db	0
   204  000FFB  00                 	db	0
   205  000FFC  02                 	db	2
   206  000FFD  04                 	db	4
   207  000FFE  18                 	db	24
   208  000FFF  35                 	db	53
   209  001000  00                 	db	0
   210  001001  00                 	db	0
   211  001002  02                 	db	2
   212  001003  05                 	db	5
   213  001004  19                 	db	25
   214  001005  34                 	db	52
   215  001006  00                 	db	0
   216  001007  00                 	db	0
   217  001008  02                 	db	2
   218  001009  06                 	db	6
   219  00100A  1A                 	db	26
   220  00100B  33                 	db	51
   221  00100C  00                 	db	0
   222  00100D  00                 	db	0
   223  00100E  02                 	db	2
   224  00100F  07                 	db	7
   225  001010  1B                 	db	27
   226  001011  32                 	db	50
   227  001012  00                 	db	0
   228  001013  00                 	db	0
   229  001014  02                 	db	2
   230  001015  08                 	db	8
   231  001016  1C                 	db	28
   232  001017  31                 	db	49
   233  001018  00                 	db	0
   234  001019  00                 	db	0
   235  00101A  02                 	db	2
   236  00101B  09                 	db	9
   237  00101C  1D                 	db	29
   238  00101D  30                 	db	48
   239  00101E  00                 	db	0
   240  00101F  00                 	db	0
   241                           
   242                           	psect	nvCOMRAM
   243  00003D                     __pnvCOMRAM:
   244                           	opt stack 0
   245  00003D                     _display_counter:
   246                           	opt stack 0
   247  00003D                     	ds	1
   248  0000                     _ANSELA	set	3896
   249  0000                     _ANSELB	set	3897
   250  0000                     _ANSELC	set	3898
   251  0000                     _CCPTMRS0bits	set	3913
   252  0000                     _BAUDCON1bits	set	4024
   253  0000                     _CCP1CONbits	set	4029
   254  0000                     _CCPR1H	set	4031
   255  0000                     _CCPR1L	set	4030
   256  0000                     _EEADR	set	4009
   257  0000                     _EECON1bits	set	4006
   258  0000                     _EECON2	set	4007
   259  0000                     _EEDATA	set	4008
   260  0000                     _INTCONbits	set	4082
   261  0000                     _OSCCON	set	4051
   262  0000                     _PIE1bits	set	3997
   263  0000                     _PIR1bits	set	3998
   264  0000                     _PIR2bits	set	4001
   265  0000                     _PORTA	set	3968
   266  0000                     _PORTAbits	set	3968
   267  0000                     _PORTB	set	3969
   268  0000                     _PORTBbits	set	3969
   269  0000                     _PORTC	set	3970
   270  0000                     _PORTCbits	set	3970
   271  0000                     _PORTE	set	3972
   272  0000                     _RCREG1	set	4014
   273  0000                     _RCSTA1bits	set	4011
   274  0000                     _RCSTAbits	set	4011
   275  0000                     _SPBRG1	set	4015
   276  0000                     _SSP1BUF	set	4041
   277  0000                     _SSP1CON1	set	4038
   278  0000                     _SSP1STAT	set	4039
   279  0000                     _T1CONbits	set	4045
   280  0000                     _T3CONbits	set	4017
   281  0000                     _TMR1H	set	4047
   282  0000                     _TMR1L	set	4046
   283  0000                     _TMR3H	set	4019
   284  0000                     _TMR3L	set	4018
   285  0000                     _TRISA	set	3986
   286  0000                     _TRISB	set	3987
   287  0000                     _TRISC	set	3988
   288  0000                     _TRISCbits	set	3988
   289  0000                     _TRISE	set	3990
   290  0000                     _TXREG1	set	4013
   291  0000                     _TXSTA1bits	set	4012
   292  0000                     _SSP1IF	set	31987
   293                           
   294                           	psect	smallconst
   295  00021E                     __psmallconst:
   296                           	opt stack 0
   297  00021E  00                 	db	0
   298  00021F                     STR_9:
   299  00021F  41                 	db	65	;'A'
   300  000220  42                 	db	66	;'B'
   301  000221  43                 	db	67	;'C'
   302  000222  44                 	db	68	;'D'
   303  000223  45                 	db	69	;'E'
   304  000224  46                 	db	70	;'F'
   305  000225  47                 	db	71	;'G'
   306  000226  00                 	db	0
   307  000227                     STR_1:
   308  000227  41                 	db	65	;'A'
   309  000228  42                 	db	66	;'B'
   310  000229  43                 	db	67	;'C'
   311  00022A  44                 	db	68	;'D'
   312  00022B  45                 	db	69	;'E'
   313  00022C  46                 	db	70	;'F'
   314  00022D  00                 	db	0
   315  00022E                     STR_10:
   316  00022E  41                 	db	65	;'A'
   317  00022F  42                 	db	66	;'B'
   318  000230  43                 	db	67	;'C'
   319  000231  44                 	db	68	;'D'
   320  000232  46                 	db	70	;'F'
   321  000233  47                 	db	71	;'G'
   322  000234  00                 	db	0
   323  000235                     STR_11:
   324  000235  41                 	db	65	;'A'
   325  000236  42                 	db	66	;'B'
   326  000237  43                 	db	67	;'C'
   327  000238  45                 	db	69	;'E'
   328  000239  46                 	db	70	;'F'
   329  00023A  47                 	db	71	;'G'
   330  00023B  00                 	db	0
   331  00023C                     STR_7:
   332  00023C  41                 	db	65	;'A'
   333  00023D  43                 	db	67	;'C'
   334  00023E  44                 	db	68	;'D'
   335  00023F  45                 	db	69	;'E'
   336  000240  46                 	db	70	;'F'
   337  000241  47                 	db	71	;'G'
   338  000242  00                 	db	0
   339  000243                     STR_4:
   340  000243  41                 	db	65	;'A'
   341  000244  42                 	db	66	;'B'
   342  000245  43                 	db	67	;'C'
   343  000246  44                 	db	68	;'D'
   344  000247  47                 	db	71	;'G'
   345  000248  00                 	db	0
   346  000249                     STR_3:
   347  000249  41                 	db	65	;'A'
   348  00024A  42                 	db	66	;'B'
   349  00024B  44                 	db	68	;'D'
   350  00024C  45                 	db	69	;'E'
   351  00024D  47                 	db	71	;'G'
   352  00024E  00                 	db	0
   353  00024F                     STR_6:
   354  00024F  41                 	db	65	;'A'
   355  000250  43                 	db	67	;'C'
   356  000251  44                 	db	68	;'D'
   357  000252  46                 	db	70	;'F'
   358  000253  47                 	db	71	;'G'
   359  000254  00                 	db	0
   360  000255                     STR_16:
   361  000255  41                 	db	65	;'A'
   362  000256  42                 	db	66	;'B'
   363  000257  45                 	db	69	;'E'
   364  000258  46                 	db	70	;'F'
   365  000259  47                 	db	71	;'G'
   366  00025A  00                 	db	0
   367  00025B                     STR_13:
   368  00025B  41                 	db	65	;'A'
   369  00025C  44                 	db	68	;'D'
   370  00025D  45                 	db	69	;'E'
   371  00025E  46                 	db	70	;'F'
   372  00025F  47                 	db	71	;'G'
   373  000260  00                 	db	0
   374  000261                     STR_5:
   375  000261  42                 	db	66	;'B'
   376  000262  43                 	db	67	;'C'
   377  000263  46                 	db	70	;'F'
   378  000264  47                 	db	71	;'G'
   379  000265  00                 	db	0
   380  000266                     STR_8:
   381  000266  41                 	db	65	;'A'
   382  000267  42                 	db	66	;'B'
   383  000268  43                 	db	67	;'C'
   384  000269  00                 	db	0
   385  0000                     
   386                           ; #config settings
   387  00026A  00                 	db	0	; dummy byte at the end
   388  0000                     
   389                           	psect	cinit
   390  001464                     __pcinit:
   391                           	opt stack 0
   392  001464                     start_initialization:
   393                           	opt stack 0
   394  001464                     __initialization:
   395                           	opt stack 0
   396                           
   397                           ; Clear objects allocated to BANK0 (11 bytes)
   398  001464  EE00  F07B         	lfsr	0,__pbssBANK0
   399  001468  0E0B               	movlw	11
   400  00146A                     clear_0:
   401  00146A  6AEE               	clrf	postinc0,c
   402  00146C  06E8               	decf	wreg,f,c
   403  00146E  E1FD               	bnz	clear_0
   404                           
   405                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   406  001470  6A3C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   407                           
   408                           ; Clear objects allocated to COMRAM (17 bytes)
   409  001472  EE00  F02B         	lfsr	0,__pbssCOMRAM
   410  001476  0E11               	movlw	17
   411  001478                     clear_1:
   412  001478  6AEE               	clrf	postinc0,c
   413  00147A  06E8               	decf	wreg,f,c
   414  00147C  E1FD               	bnz	clear_1
   415                           
   416                           ; Initialize objects allocated to BANK1 (180 bytes)
   417                           ; load TBLPTR registers with __pidataBANK1
   418  00147E  0E6C               	movlw	low __pidataBANK1
   419  001480  6EF6               	movwf	tblptrl,c
   420  001482  0E0F               	movlw	high __pidataBANK1
   421  001484  6EF7               	movwf	tblptrh,c
   422  001486  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   423  001488  6EF8               	movwf	tblptru,c
   424  00148A  EE01  F000         	lfsr	0,__pdataBANK1
   425  00148E  EE10 F0B4          	lfsr	1,180
   426  001492                     copy_data0:
   427  001492  0009               	tblrd		*+
   428  001494  CFF5 FFEE          	movff	tablat,postinc0
   429  001498  50E5               	movf	postdec1,w,c
   430  00149A  50E1               	movf	fsr1l,w,c
   431  00149C  E1FA               	bnz	copy_data0
   432  00149E                     end_of_initialization:
   433                           	opt stack 0
   434  00149E                     __end_of__initialization:
   435                           	opt stack 0
   436  00149E  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   437  0014A0  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   438  0014A2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   439  0014A4  6EF8               	movwf	tblptru,c
   440  0014A6  0100               	movlb	0
   441  0014A8  EF39  F00B         	goto	_main	;jump to C main() function
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	bitbssCOMRAM
   452  0001E0                     __pbitbssCOMRAM:
   453                           	opt stack 0
   454  0001E0                     _ignite_ready:
   455                           	opt stack 0
   456  0001E0                     	ds	1
   457  0001E1                     _master_addressed:
   458                           	opt stack 0
   459  0001E1                     	ds	1
   460  0001E2                     _overrun:
   461                           	opt stack 0
   462  0001E2                     	ds	1
   463  0001E3                     _testflag:
   464                           	opt stack 0
   465  0001E3                     	ds	1
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           postdec1	equ	0xFE5
   473                           fsr1l	equ	0xFE1
   474                           
   475                           	psect	bssCOMRAM
   476  00002B                     __pbssCOMRAM:
   477                           	opt stack 0
   478  00002B                     _received:
   479                           	opt stack 0
   480  00002B                     	ds	6
   481  000031                     _current_time:
   482                           	opt stack 0
   483  000031                     	ds	2
   484  000033                     _check_counter:
   485                           	opt stack 0
   486  000033                     	ds	1
   487  000034                     _receive_counter:
   488                           	opt stack 0
   489  000034                     	ds	1
   490  000035                     _pixels:
   491                           	opt stack 0
   492  000035                     	ds	7
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           postdec1	equ	0xFE5
   500                           fsr1l	equ	0xFE1
   501                           
   502                           	psect	bssBANK0
   503  00007B                     __pbssBANK0:
   504                           	opt stack 0
   505  00007B                     _pin_selected:
   506                           	opt stack 0
   507  00007B                     	ds	1
   508  00007C                     _slave_selected:
   509                           	opt stack 0
   510  00007C                     	ds	1
   511  00007D                     _signs:
   512                           	opt stack 0
   513  00007D                     	ds	3
   514  000080                     _string_delete:
   515                           	opt stack 0
   516  000080                     	ds	3
   517  000083                     _string_load:
   518                           	opt stack 0
   519  000083                     	ds	3
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           postdec1	equ	0xFE5
   527                           fsr1l	equ	0xFE1
   528                           
   529                           	psect	dataBANK1
   530  000100                     __pdataBANK1:
   531                           	opt stack 0
   532  000100                     _pin:
   533                           	opt stack 0
   534  000100                     	ds	180
   535                           tblptru	equ	0xFF8
   536                           tblptrh	equ	0xFF7
   537                           tblptrl	equ	0xFF6
   538                           tablat	equ	0xFF5
   539                           postinc0	equ	0xFEE
   540                           wreg	equ	0xFE8
   541                           postdec1	equ	0xFE5
   542                           fsr1l	equ	0xFE1
   543                           
   544                           	psect	cstackBANK0
   545  000060                     __pcstackBANK0:
   546                           	opt stack 0
   547  000060                     ??_Delay_Routine:
   548  000060                     ?_Read_Data:
   549                           	opt stack 0
   550  000060                     ?___lwmod:
   551                           	opt stack 0
   552  000060                     Transmit@operation:
   553                           	opt stack 0
   554  000060                     Save_Data@store:
   555                           	opt stack 0
   556  000060                     Write_Display_Byte@write_data:
   557                           	opt stack 0
   558  000060                     ___lwmod@dividend:
   559                           	opt stack 0
   560  000060                     Set_Bits@bits:
   561                           	opt stack 0
   562                           
   563                           ; 3 bytes @ 0x0
   564  000060                     	ds	1
   565  000061                     Delay_Routine@delay_multiplyer:
   566                           	opt stack 0
   567  000061                     Transmit@port:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x1
   571  000061                     	ds	1
   572  000062                     ??_Write_Display_Byte:
   573  000062                     Delay_Routine@delay_counter:
   574                           	opt stack 0
   575  000062                     Save_Data@store_address:
   576                           	opt stack 0
   577  000062                     Transmit@receiver:
   578                           	opt stack 0
   579  000062                     Read_Data@data_read:
   580                           	opt stack 0
   581  000062                     ___lwmod@divisor:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0x2
   585  000062                     	ds	1
   586  000063                     ??_Set_Bits:
   587                           
   588                           ; 0 bytes @ 0x3
   589  000063                     	ds	1
   590  000064                     Read_Data@read_address:
   591                           	opt stack 0
   592  000064                     ___lwmod@counter:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x4
   596  000064                     	ds	2
   597  000066                     Set_Bits@bitcount:
   598                           	opt stack 0
   599  000066                     Write_Display_Byte@counter:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x6
   603  000066                     	ds	1
   604  000067                     Set_Bits@Bitoutput:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x7
   608  000067                     	ds	1
   609  000068                     Evaluate_Display@evaluate:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x8
   613  000068                     	ds	2
   614  00006A                     ??_Evaluate_Display:
   615                           
   616                           ; 0 bytes @ 0xA
   617  00006A                     	ds	4
   618  00006E                     Evaluate_Display@size:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0xE
   622  00006E                     	ds	1
   623  00006F                     Evaluate_Signs@evaluation_value:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0xF
   627  00006F                     	ds	2
   628  000071                     Evaluate_Signs@valuecounter:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x11
   632  000071                     	ds	1
   633  000072                     Set_Display@information:
   634                           	opt stack 0
   635                           
   636                           ; 1 bytes @ 0x12
   637  000072                     	ds	1
   638  000073                     Set_Display@value:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x13
   642  000073                     	ds	2
   643  000075                     Set_Display@type:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x15
   647  000075                     	ds	1
   648  000076                     ??_Load_Data:
   649                           
   650                           ; 0 bytes @ 0x16
   651  000076                     	ds	1
   652  000077                     Load_Data@counter:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x17
   656  000077                     	ds	1
   657  000078                     Del_Data@counter:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x18
   661  000078                     	ds	1
   662  000079                     ??_Check_Buttons:
   663                           
   664                           ; 0 bytes @ 0x19
   665  000079                     	ds	2
   666  00007B                     tblptru	equ	0xFF8
   667                           tblptrh	equ	0xFF7
   668                           tblptrl	equ	0xFF6
   669                           tablat	equ	0xFF5
   670                           postinc0	equ	0xFEE
   671                           wreg	equ	0xFE8
   672                           postdec1	equ	0xFE5
   673                           fsr1l	equ	0xFE1
   674                           
   675                           ; 0 bytes @ 0x1B
   676                           
   677                           	psect	cstackCOMRAM
   678  000001                     __pcstackCOMRAM:
   679                           	opt stack 0
   680  000001                     ?___awdiv:
   681                           	opt stack 0
   682  000001                     ?i2___lwmod:
   683                           	opt stack 0
   684  000001                     Receive_Dump@dump:
   685                           	opt stack 0
   686  000001                     i2Transmit@operation:
   687                           	opt stack 0
   688  000001                     ___awdiv@dividend:
   689                           	opt stack 0
   690  000001                     i2Write_Display_Byte@write_data:
   691                           	opt stack 0
   692  000001                     i2___lwmod@dividend:
   693                           	opt stack 0
   694  000001                     i2Set_Bits@bits:
   695                           	opt stack 0
   696                           
   697                           ; 3 bytes @ 0x0
   698  000001                     	ds	1
   699  000002                     i2Transmit@port:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x1
   703  000002                     	ds	1
   704  000003                     ??i2_Write_Display_Byte:
   705  000003                     i2Transmit@receiver:
   706                           	opt stack 0
   707  000003                     ___awdiv@divisor:
   708                           	opt stack 0
   709  000003                     i2___lwmod@divisor:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x2
   713  000003                     	ds	1
   714  000004                     ??i2_Set_Bits:
   715                           
   716                           ; 0 bytes @ 0x3
   717  000004                     	ds	1
   718  000005                     ___awdiv@counter:
   719                           	opt stack 0
   720  000005                     i2___lwmod@counter:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x4
   724  000005                     	ds	1
   725  000006                     Ignite_Detonators@counter:
   726                           	opt stack 0
   727  000006                     ___awdiv@sign:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x5
   731  000006                     	ds	1
   732  000007                     i2Set_Bits@bitcount:
   733                           	opt stack 0
   734  000007                     i2Write_Display_Byte@counter:
   735                           	opt stack 0
   736  000007                     ___awdiv@quotient:
   737                           	opt stack 0
   738                           
   739                           ; 2 bytes @ 0x6
   740  000007                     	ds	1
   741  000008                     i2Set_Bits@Bitoutput:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x7
   745  000008                     	ds	1
   746  000009                     i2Evaluate_Display@evaluate:
   747                           	opt stack 0
   748                           
   749                           ; 2 bytes @ 0x8
   750  000009                     	ds	2
   751  00000B                     ??i2_Evaluate_Display:
   752                           
   753                           ; 0 bytes @ 0xA
   754  00000B                     	ds	4
   755  00000F                     i2Evaluate_Display@size:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0xE
   759  00000F                     	ds	1
   760  000010                     i2Evaluate_Signs@evaluation_value:
   761                           	opt stack 0
   762                           
   763                           ; 2 bytes @ 0xF
   764  000010                     	ds	2
   765  000012                     i2Evaluate_Signs@valuecounter:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x11
   769  000012                     	ds	1
   770  000013                     i2Set_Display@information:
   771                           	opt stack 0
   772                           
   773                           ; 1 bytes @ 0x12
   774  000013                     	ds	1
   775  000014                     i2Set_Display@value:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x13
   779  000014                     	ds	2
   780  000016                     i2Set_Display@type:
   781                           	opt stack 0
   782                           
   783                           ; 1 bytes @ 0x15
   784  000016                     	ds	1
   785  000017                     ??_Isr:
   786                           
   787                           ; 0 bytes @ 0x16
   788  000017                     	ds	17
   789  000028                     Isr@pixel_index_array:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x27
   793  000028                     	ds	1
   794  000029                     Isr@pixel_index_bit:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x28
   798  000029                     	ds	1
   799  00002A                     Isr@search_index:
   800                           	opt stack 0
   801                           
   802                           ; 1 bytes @ 0x29
   803  00002A                     	ds	1
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           postinc0	equ	0xFEE
   809                           wreg	equ	0xFE8
   810                           postdec1	equ	0xFE5
   811                           fsr1l	equ	0xFE1
   812                           
   813 ;;
   814 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   815 ;;
   816 ;; *************** function _main *****************
   817 ;; Defined at:
   818 ;;		line 86 in file "main.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;		None               void
   825 ;; Registers used:
   826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1
   832 ;;      Params:         0       0       0
   833 ;;      Locals:         0       0       0
   834 ;;      Temps:          0       0       0
   835 ;;      Totals:         0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels required when called:   12
   838 ;; This function calls:
   839 ;;		_Check_Buttons
   840 ;;		_Check_Detonators
   841 ;;		_Init
   842 ;;		_Load_Data
   843 ;;		_Set_Display
   844 ;; This function is called by:
   845 ;;		Startup code after reset
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text0
   850  001672                     __ptext0:
   851                           	opt stack 0
   852  001672                     _main:
   853                           	opt stack 19
   854                           
   855                           ;main.c: 87: Init();
   856                           
   857                           ;incstack = 0
   858  001672  EC62  F00B         	call	_Init	;wreg free
   859                           
   860                           ;main.c: 88: Load_Data();
   861  001676  EC54  F006         	call	_Load_Data	;wreg free
   862                           
   863                           ;main.c: 89: PORTAbits.RA0 = 1;
   864  00167A  8080               	bsf	3968,0,c	;volatile
   865  00167C                     l3314:
   866                           
   867                           ;main.c: 91: Check_Buttons();
   868  00167C  EC36  F001         	call	_Check_Buttons	;wreg free
   869                           
   870                           ;main.c: 92: if(testflag == 1) {
   871  001680  A63C               	btfss	_testflag/(0+8),_testflag& (0+7),c
   872  001682  D7FC               	goto	l3314
   873                           
   874                           ;main.c: 93: Set_Display('7', 'T',0);
   875  001684  0E54               	movlw	84
   876  001686  0100               	movlb	0	; () banked
   877  001688  6F72               	movwf	Set_Display@information& (0+255),b
   878  00168A  0E00               	movlw	0
   879  00168C  0100               	movlb	0	; () banked
   880  00168E  6F74               	movwf	(Set_Display@value+1)& (0+255),b
   881  001690  0E00               	movlw	0
   882  001692  6F73               	movwf	Set_Display@value& (0+255),b
   883  001694  0E37               	movlw	55
   884  001696  ECC4  F008         	call	_Set_Display
   885                           
   886                           ;main.c: 94: Check_Detonators();
   887  00169A  EC98  F00A         	call	_Check_Detonators	;wreg free
   888  00169E  D7EE               	goto	l3314
   889  0016A0                     __end_of_main:
   890                           	opt stack 0
   891                           tblptru	equ	0xFF8
   892                           tblptrh	equ	0xFF7
   893                           tblptrl	equ	0xFF6
   894                           tablat	equ	0xFF5
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           postdec1	equ	0xFE5
   898                           fsr1l	equ	0xFE1
   899                           
   900 ;; *************** function _Init *****************
   901 ;; Defined at:
   902 ;;		line 3 in file "init.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;		None               void
   909 ;; Registers used:
   910 ;;		wreg, status,2, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMRAM   BANK0   BANK1
   916 ;;      Params:         0       0       0
   917 ;;      Locals:         0       0       0
   918 ;;      Temps:          0       0       0
   919 ;;      Totals:         0       0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    6
   923 ;; This function calls:
   924 ;;		_InitAnsel
   925 ;;		_InitInterrupt
   926 ;;		_InitMiscellaneous
   927 ;;		_InitPort
   928 ;;		_InitTimer
   929 ;;		_InitTransmission
   930 ;;		_InitTris
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text1
   937  0016C4                     __ptext1:
   938                           	opt stack 0
   939  0016C4                     _Init:
   940                           	opt stack 24
   941                           
   942                           ;init.c: 4: InitPort();
   943                           
   944                           ;incstack = 0
   945  0016C4  EC92  F00B         	call	_InitPort	;wreg free
   946                           
   947                           ;init.c: 5: InitTris();
   948  0016C8  EC89  F00B         	call	_InitTris	;wreg free
   949                           
   950                           ;init.c: 6: InitAnsel();
   951  0016CC  EC7F  F00B         	call	_InitAnsel	;wreg free
   952                           
   953                           ;init.c: 7: InitMiscellaneous();
   954  0016D0  ECB0  F00B         	call	_InitMiscellaneous	;wreg free
   955                           
   956                           ;init.c: 8: InitTransmission();
   957  0016D4  EC50  F00B         	call	_InitTransmission	;wreg free
   958                           
   959                           ;init.c: 9: InitTimer();
   960  0016D8  EC09  F00B         	call	_InitTimer	;wreg free
   961                           
   962                           ;init.c: 10: InitInterrupt();
   963  0016DC  ECAA  F00B         	call	_InitInterrupt	;wreg free
   964  0016E0  0012               	return		;funcret
   965  0016E2                     __end_of_Init:
   966                           	opt stack 0
   967                           tblptru	equ	0xFF8
   968                           tblptrh	equ	0xFF7
   969                           tblptrl	equ	0xFF6
   970                           tablat	equ	0xFF5
   971                           postinc0	equ	0xFEE
   972                           wreg	equ	0xFE8
   973                           postdec1	equ	0xFE5
   974                           fsr1l	equ	0xFE1
   975                           
   976 ;; *************** function _InitTris *****************
   977 ;; Defined at:
   978 ;;		line 20 in file "init.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;		None               void
   985 ;; Registers used:
   986 ;;		wreg, status,2
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1
   992 ;;      Params:         0       0       0
   993 ;;      Locals:         0       0       0
   994 ;;      Temps:          0       0       0
   995 ;;      Totals:         0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    5
   999 ;; This function calls:
  1000 ;;		Nothing
  1001 ;; This function is called by:
  1002 ;;		_Init
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text2
  1007  001712                     __ptext2:
  1008                           	opt stack 0
  1009  001712                     _InitTris:
  1010                           	opt stack 24
  1011                           
  1012                           ;init.c: 21: TRISA = 0b00000000;
  1013                           
  1014                           ;incstack = 0
  1015  001712  0E00               	movlw	0
  1016  001714  6E92               	movwf	3986,c	;volatile
  1017                           
  1018                           ;init.c: 22: TRISB = 0b00011111;
  1019  001716  0E1F               	movlw	31
  1020  001718  6E93               	movwf	3987,c	;volatile
  1021                           
  1022                           ;init.c: 23: TRISC = 0b10000010;
  1023  00171A  0E82               	movlw	130
  1024  00171C  6E94               	movwf	3988,c	;volatile
  1025                           
  1026                           ;init.c: 24: TRISE = 0;
  1027  00171E  0E00               	movlw	0
  1028  001720  6E96               	movwf	3990,c	;volatile
  1029  001722  0012               	return		;funcret
  1030  001724                     __end_of_InitTris:
  1031                           	opt stack 0
  1032                           tblptru	equ	0xFF8
  1033                           tblptrh	equ	0xFF7
  1034                           tblptrl	equ	0xFF6
  1035                           tablat	equ	0xFF5
  1036                           postinc0	equ	0xFEE
  1037                           wreg	equ	0xFE8
  1038                           postdec1	equ	0xFE5
  1039                           fsr1l	equ	0xFE1
  1040                           
  1041 ;; *************** function _InitTransmission *****************
  1042 ;; Defined at:
  1043 ;;		line 37 in file "init.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;		None               void
  1050 ;; Registers used:
  1051 ;;		wreg, status,2
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1
  1057 ;;      Params:         0       0       0
  1058 ;;      Locals:         0       0       0
  1059 ;;      Temps:          0       0       0
  1060 ;;      Totals:         0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    5
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_Init
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text3
  1072  0016A0                     __ptext3:
  1073                           	opt stack 0
  1074  0016A0                     _InitTransmission:
  1075                           	opt stack 24
  1076                           
  1077                           ;init.c: 39: SSP1STAT = 0b01000000;
  1078                           
  1079                           ;incstack = 0
  1080  0016A0  0E40               	movlw	64
  1081  0016A2  6EC7               	movwf	4039,c	;volatile
  1082                           
  1083                           ;init.c: 40: SSP1CON1 = 0b00100010;
  1084  0016A4  0E22               	movlw	34
  1085  0016A6  6EC6               	movwf	4038,c	;volatile
  1086                           
  1087                           ;init.c: 42: TXSTA1bits.SYNC = 0;
  1088  0016A8  98AC               	bcf	4012,4,c	;volatile
  1089                           
  1090                           ;init.c: 43: TXSTA1bits.BRGH = 1;
  1091  0016AA  84AC               	bsf	4012,2,c	;volatile
  1092                           
  1093                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
  1094  0016AC  96B8               	bcf	4024,3,c	;volatile
  1095                           
  1096                           ;init.c: 45: SPBRG1 = 25;
  1097  0016AE  0E19               	movlw	25
  1098  0016B0  6EAF               	movwf	4015,c	;volatile
  1099                           
  1100                           ;init.c: 46: TRISCbits.RC6 = 1;
  1101  0016B2  8C94               	bsf	3988,6,c	;volatile
  1102                           
  1103                           ;init.c: 47: TRISCbits.RC7 = 1;
  1104  0016B4  8E94               	bsf	3988,7,c	;volatile
  1105                           
  1106                           ;init.c: 48: RCSTA1bits.SPEN = 1;
  1107  0016B6  8EAB               	bsf	4011,7,c	;volatile
  1108                           
  1109                           ;init.c: 49: TXSTA1bits.TX9 = 1;
  1110  0016B8  8CAC               	bsf	4012,6,c	;volatile
  1111                           
  1112                           ;init.c: 50: TXSTA1bits.TXEN = 1;
  1113  0016BA  8AAC               	bsf	4012,5,c	;volatile
  1114                           
  1115                           ;init.c: 51: RCSTA1bits.RC9 = 1;
  1116  0016BC  8CAB               	bsf	4011,6,c	;volatile
  1117                           
  1118                           ;init.c: 52: RCSTA1bits.CREN = 1;
  1119  0016BE  88AB               	bsf	4011,4,c	;volatile
  1120                           
  1121                           ;init.c: 53: TRISCbits.RC6 = 0;
  1122  0016C0  9C94               	bcf	3988,6,c	;volatile
  1123  0016C2  0012               	return		;funcret
  1124  0016C4                     __end_of_InitTransmission:
  1125                           	opt stack 0
  1126                           tblptru	equ	0xFF8
  1127                           tblptrh	equ	0xFF7
  1128                           tblptrl	equ	0xFF6
  1129                           tablat	equ	0xFF5
  1130                           postinc0	equ	0xFEE
  1131                           wreg	equ	0xFE8
  1132                           postdec1	equ	0xFE5
  1133                           fsr1l	equ	0xFE1
  1134                           
  1135 ;; *************** function _InitTimer *****************
  1136 ;; Defined at:
  1137 ;;		line 56 in file "init.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;		None               void
  1144 ;; Registers used:
  1145 ;;		wreg, status,2
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK0   BANK1
  1151 ;;      Params:         0       0       0
  1152 ;;      Locals:         0       0       0
  1153 ;;      Temps:          0       0       0
  1154 ;;      Totals:         0       0       0
  1155 ;;Total ram usage:        0 bytes
  1156 ;; Hardware stack levels used:    1
  1157 ;; Hardware stack levels required when called:    5
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_Init
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text4
  1166  001612                     __ptext4:
  1167                           	opt stack 0
  1168  001612                     _InitTimer:
  1169                           	opt stack 24
  1170                           
  1171                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
  1172                           
  1173                           ;incstack = 0
  1174  001612  0E3F               	movlw	-193
  1175  001614  16CD               	andwf	4045,f,c	;volatile
  1176                           
  1177                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
  1178  001616  0E30               	movlw	48
  1179  001618  12CD               	iorwf	4045,f,c	;volatile
  1180                           
  1181                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
  1182  00161A  94CD               	bcf	4045,2,c	;volatile
  1183                           
  1184                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
  1185  00161C  0E3F               	movlw	-193
  1186  00161E  16B1               	andwf	4017,f,c	;volatile
  1187                           
  1188                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
  1189  001620  0E30               	movlw	48
  1190  001622  12B1               	iorwf	4017,f,c	;volatile
  1191                           
  1192                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
  1193  001624  94B1               	bcf	4017,2,c	;volatile
  1194                           
  1195                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
  1196  001626  50BD               	movf	4029,w,c	;volatile
  1197  001628  0BF0               	andlw	-16
  1198  00162A  090A               	iorlw	10
  1199  00162C  6EBD               	movwf	4029,c	;volatile
  1200                           
  1201                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
  1202  00162E  010F               	movlb	15	; () banked
  1203  001630  5149               	movf	73,w,b	;volatile
  1204  001632  0BFC               	andlw	-4
  1205  001634  0901               	iorlw	1
  1206  001636  6F49               	movwf	73,b	;volatile
  1207                           
  1208                           ;init.c: 68: CCPR1L = 72;
  1209  001638  0E48               	movlw	72
  1210  00163A  6EBE               	movwf	4030,c	;volatile
  1211                           
  1212                           ;init.c: 69: CCPR1H = 232;
  1213  00163C  0EE8               	movlw	232
  1214  00163E  6EBF               	movwf	4031,c	;volatile
  1215                           
  1216                           ; BSR set to: 15
  1217  001640  0012               	return		;funcret
  1218  001642                     __end_of_InitTimer:
  1219                           	opt stack 0
  1220                           tblptru	equ	0xFF8
  1221                           tblptrh	equ	0xFF7
  1222                           tblptrl	equ	0xFF6
  1223                           tablat	equ	0xFF5
  1224                           postinc0	equ	0xFEE
  1225                           wreg	equ	0xFE8
  1226                           postdec1	equ	0xFE5
  1227                           fsr1l	equ	0xFE1
  1228                           
  1229 ;; *************** function _InitPort *****************
  1230 ;; Defined at:
  1231 ;;		line 13 in file "init.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;		None               void
  1238 ;; Registers used:
  1239 ;;		wreg, status,2
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1
  1245 ;;      Params:         0       0       0
  1246 ;;      Locals:         0       0       0
  1247 ;;      Temps:          0       0       0
  1248 ;;      Totals:         0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    5
  1252 ;; This function calls:
  1253 ;;		Nothing
  1254 ;; This function is called by:
  1255 ;;		_Init
  1256 ;; This function uses a non-reentrant model
  1257 ;;
  1258                           
  1259                           	psect	text5
  1260  001724                     __ptext5:
  1261                           	opt stack 0
  1262  001724                     _InitPort:
  1263                           	opt stack 24
  1264                           
  1265                           ;init.c: 14: PORTA = 0b00000000;
  1266                           
  1267                           ; BSR set to: 15
  1268                           ;incstack = 0
  1269  001724  0E00               	movlw	0
  1270  001726  6E80               	movwf	3968,c	;volatile
  1271                           
  1272                           ;init.c: 15: PORTB = 0b00000000;
  1273  001728  0E00               	movlw	0
  1274  00172A  6E81               	movwf	3969,c	;volatile
  1275                           
  1276                           ;init.c: 16: PORTC = 0b00000100;
  1277  00172C  0E04               	movlw	4
  1278  00172E  6E82               	movwf	3970,c	;volatile
  1279                           
  1280                           ;init.c: 17: PORTE = 0;
  1281  001730  0E00               	movlw	0
  1282  001732  6E84               	movwf	3972,c	;volatile
  1283  001734  0012               	return		;funcret
  1284  001736                     __end_of_InitPort:
  1285                           	opt stack 0
  1286                           tblptru	equ	0xFF8
  1287                           tblptrh	equ	0xFF7
  1288                           tblptrl	equ	0xFF6
  1289                           tablat	equ	0xFF5
  1290                           postinc0	equ	0xFEE
  1291                           wreg	equ	0xFE8
  1292                           postdec1	equ	0xFE5
  1293                           fsr1l	equ	0xFE1
  1294                           
  1295 ;; *************** function _InitMiscellaneous *****************
  1296 ;; Defined at:
  1297 ;;		line 33 in file "init.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;		None
  1300 ;; Auto vars:     Size  Location     Type
  1301 ;;		None
  1302 ;; Return value:  Size  Location     Type
  1303 ;;		None               void
  1304 ;; Registers used:
  1305 ;;		wreg, status,2
  1306 ;; Tracked objects:
  1307 ;;		On entry : 0/0
  1308 ;;		On exit  : 0/0
  1309 ;;		Unchanged: 0/0
  1310 ;; Data sizes:     COMRAM   BANK0   BANK1
  1311 ;;      Params:         0       0       0
  1312 ;;      Locals:         0       0       0
  1313 ;;      Temps:          0       0       0
  1314 ;;      Totals:         0       0       0
  1315 ;;Total ram usage:        0 bytes
  1316 ;; Hardware stack levels used:    1
  1317 ;; Hardware stack levels required when called:    5
  1318 ;; This function calls:
  1319 ;;		Nothing
  1320 ;; This function is called by:
  1321 ;;		_Init
  1322 ;; This function uses a non-reentrant model
  1323 ;;
  1324                           
  1325                           	psect	text6
  1326  001760                     __ptext6:
  1327                           	opt stack 0
  1328  001760                     _InitMiscellaneous:
  1329                           	opt stack 24
  1330                           
  1331                           ;init.c: 34: OSCCON = 0b01010011;
  1332                           
  1333                           ;incstack = 0
  1334  001760  0E53               	movlw	83
  1335  001762  6ED3               	movwf	4051,c	;volatile
  1336  001764  0012               	return		;funcret
  1337  001766                     __end_of_InitMiscellaneous:
  1338                           	opt stack 0
  1339                           tblptru	equ	0xFF8
  1340                           tblptrh	equ	0xFF7
  1341                           tblptrl	equ	0xFF6
  1342                           tablat	equ	0xFF5
  1343                           postinc0	equ	0xFEE
  1344                           wreg	equ	0xFE8
  1345                           postdec1	equ	0xFE5
  1346                           fsr1l	equ	0xFE1
  1347                           
  1348 ;; *************** function _InitInterrupt *****************
  1349 ;; Defined at:
  1350 ;;		line 72 in file "init.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;		None               void
  1357 ;; Registers used:
  1358 ;;		None
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMRAM   BANK0   BANK1
  1364 ;;      Params:         0       0       0
  1365 ;;      Locals:         0       0       0
  1366 ;;      Temps:          0       0       0
  1367 ;;      Totals:         0       0       0
  1368 ;;Total ram usage:        0 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; Hardware stack levels required when called:    5
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_Init
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           	psect	text7
  1379  001754                     __ptext7:
  1380                           	opt stack 0
  1381  001754                     _InitInterrupt:
  1382                           	opt stack 24
  1383                           
  1384                           ;init.c: 73: INTCONbits.GIE = 1;
  1385                           
  1386                           ;incstack = 0
  1387  001754  8EF2               	bsf	intcon,7,c	;volatile
  1388                           
  1389                           ;init.c: 74: INTCONbits.PEIE = 1;
  1390  001756  8CF2               	bsf	intcon,6,c	;volatile
  1391                           
  1392                           ;init.c: 75: PIE1bits.RCIE = 1;
  1393  001758  8A9D               	bsf	3997,5,c	;volatile
  1394                           
  1395                           ;init.c: 76: PIE1bits.CCP1IE = 1;
  1396  00175A  849D               	bsf	3997,2,c	;volatile
  1397                           
  1398                           ;init.c: 77: PIE1bits.TMR1IE = 1;
  1399  00175C  809D               	bsf	3997,0,c	;volatile
  1400  00175E  0012               	return		;funcret
  1401  001760                     __end_of_InitInterrupt:
  1402                           	opt stack 0
  1403                           tblptru	equ	0xFF8
  1404                           tblptrh	equ	0xFF7
  1405                           tblptrl	equ	0xFF6
  1406                           tablat	equ	0xFF5
  1407                           intcon	equ	0xFF2
  1408                           postinc0	equ	0xFEE
  1409                           wreg	equ	0xFE8
  1410                           postdec1	equ	0xFE5
  1411                           fsr1l	equ	0xFE1
  1412                           
  1413 ;; *************** function _InitAnsel *****************
  1414 ;; Defined at:
  1415 ;;		line 27 in file "init.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;		None
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;		None               void
  1422 ;; Registers used:
  1423 ;;		wreg, status,2
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMRAM   BANK0   BANK1
  1429 ;;      Params:         0       0       0
  1430 ;;      Locals:         0       0       0
  1431 ;;      Temps:          0       0       0
  1432 ;;      Totals:         0       0       0
  1433 ;;Total ram usage:        0 bytes
  1434 ;; Hardware stack levels used:    1
  1435 ;; Hardware stack levels required when called:    5
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_Init
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text8
  1444  0016FE                     __ptext8:
  1445                           	opt stack 0
  1446  0016FE                     _InitAnsel:
  1447                           	opt stack 24
  1448                           
  1449                           ;init.c: 28: ANSELA = 0;
  1450                           
  1451                           ;incstack = 0
  1452  0016FE  0E00               	movlw	0
  1453  001700  010F               	movlb	15	; () banked
  1454  001702  6F38               	movwf	56,b	;volatile
  1455                           
  1456                           ;init.c: 29: ANSELB = 0;
  1457  001704  0E00               	movlw	0
  1458  001706  010F               	movlb	15	; () banked
  1459  001708  6F39               	movwf	57,b	;volatile
  1460                           
  1461                           ;init.c: 30: ANSELC = 0;
  1462  00170A  0E00               	movlw	0
  1463  00170C  010F               	movlb	15	; () banked
  1464  00170E  6F3A               	movwf	58,b	;volatile
  1465                           
  1466                           ; BSR set to: 15
  1467  001710  0012               	return		;funcret
  1468  001712                     __end_of_InitAnsel:
  1469                           	opt stack 0
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           intcon	equ	0xFF2
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           postdec1	equ	0xFE5
  1478                           fsr1l	equ	0xFE1
  1479                           
  1480 ;; *************** function _Check_Detonators *****************
  1481 ;; Defined at:
  1482 ;;		line 25 in file "ignition.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;		None               void
  1489 ;; Registers used:
  1490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1
  1496 ;;      Params:         0       0       0
  1497 ;;      Locals:         0       0       0
  1498 ;;      Temps:          0       0       0
  1499 ;;      Totals:         0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    6
  1503 ;; This function calls:
  1504 ;;		_Transmit
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text9
  1511  001530                     __ptext9:
  1512                           	opt stack 0
  1513  001530                     _Check_Detonators:
  1514                           	opt stack 24
  1515                           
  1516                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  1517                           
  1518                           ; BSR set to: 15
  1519                           ;incstack = 0
  1520  001530  0E54               	movlw	84
  1521  001532  0100               	movlb	0	; () banked
  1522  001534  6F60               	movwf	Transmit@operation& (0+255),b
  1523  001536  5033               	movf	_check_counter,w,c
  1524  001538  0D06               	mullw	6
  1525  00153A  0E01               	movlw	1
  1526  00153C  26F3               	addwf	prodl,f,c
  1527  00153E  0E00               	movlw	0
  1528  001540  22F4               	addwfc	prodh,f,c
  1529  001542  0E00               	movlw	low _pin
  1530  001544  24F3               	addwf	prodl,w,c
  1531  001546  6ED9               	movwf	fsr2l,c
  1532  001548  0E01               	movlw	high _pin
  1533  00154A  20F4               	addwfc	prodh,w,c
  1534  00154C  6EDA               	movwf	fsr2h,c
  1535  00154E  50DF               	movf	indf2,w,c
  1536  001550  0100               	movlb	0	; () banked
  1537  001552  6F61               	movwf	Transmit@port& (0+255),b
  1538  001554  5033               	movf	_check_counter,w,c
  1539  001556  0D06               	mullw	6
  1540  001558  0E00               	movlw	low _pin
  1541  00155A  24F3               	addwf	prodl,w,c
  1542  00155C  6ED9               	movwf	fsr2l,c
  1543  00155E  0E01               	movlw	high _pin
  1544  001560  20F4               	addwfc	prodh,w,c
  1545  001562  6EDA               	movwf	fsr2h,c
  1546  001564  50DF               	movf	indf2,w,c
  1547  001566  ECB6  F00A         	call	_Transmit
  1548  00156A  0012               	return		;funcret
  1549  00156C                     __end_of_Check_Detonators:
  1550                           	opt stack 0
  1551                           tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           prodh	equ	0xFF4
  1556                           prodl	equ	0xFF3
  1557                           intcon	equ	0xFF2
  1558                           postinc0	equ	0xFEE
  1559                           wreg	equ	0xFE8
  1560                           postdec1	equ	0xFE5
  1561                           fsr1l	equ	0xFE1
  1562                           indf2	equ	0xFDF
  1563                           fsr2h	equ	0xFDA
  1564                           fsr2l	equ	0xFD9
  1565                           
  1566 ;; *************** function _Transmit *****************
  1567 ;; Defined at:
  1568 ;;		line 15 in file "communication.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  receiver        1    wreg     unsigned char 
  1571 ;;  operation       1    0[BANK0 ] unsigned char 
  1572 ;;  port            1    1[BANK0 ] unsigned char 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  receiver        1    2[BANK0 ] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;		None               void
  1577 ;; Registers used:
  1578 ;;		wreg, status,2
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1
  1584 ;;      Params:         0       2       0
  1585 ;;      Locals:         0       1       0
  1586 ;;      Temps:          0       0       0
  1587 ;;      Totals:         0       3       0
  1588 ;;Total ram usage:        3 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:    5
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_Check_Detonators
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text10
  1599  00156C                     __ptext10:
  1600                           	opt stack 0
  1601  00156C                     _Transmit:
  1602                           	opt stack 24
  1603                           
  1604                           ;incstack = 0
  1605                           ;Transmit@receiver stored from wreg
  1606  00156C  0100               	movlb	0	; () banked
  1607  00156E  6F62               	movwf	Transmit@receiver& (0+255),b
  1608                           
  1609                           ;communication.c: 17: PORTBbits.RB5 = 1;
  1610  001570  8A81               	bsf	3969,5,c	;volatile
  1611                           
  1612                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  1613  001572  98AB               	bcf	4011,4,c	;volatile
  1614                           
  1615                           ;communication.c: 20: __nop();
  1616  001574  F000               	nop	
  1617  001576                     l519:
  1618  001576  A89E               	btfss	3998,4,c	;volatile
  1619  001578  D7FE               	goto	l519
  1620                           
  1621                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  1622  00157A  80AC               	bsf	4012,0,c	;volatile
  1623                           
  1624                           ;communication.c: 23: TXREG1 = receiver;
  1625  00157C  C062  FFAD         	movff	Transmit@receiver,4013	;volatile
  1626  001580                     l522:
  1627  001580  A89E               	btfss	3998,4,c	;volatile
  1628  001582  D7FE               	goto	l522
  1629                           
  1630                           ;communication.c: 25: TXREG1 = 0xAA;
  1631  001584  0EAA               	movlw	170
  1632  001586  6EAD               	movwf	4013,c	;volatile
  1633  001588                     l525:
  1634  001588  A89E               	btfss	3998,4,c	;volatile
  1635  00158A  D7FE               	goto	l525
  1636                           
  1637                           ;communication.c: 27: TXREG1 = operation;
  1638  00158C  C060  FFAD         	movff	Transmit@operation,4013	;volatile
  1639  001590                     l528:
  1640  001590  A89E               	btfss	3998,4,c	;volatile
  1641  001592  D7FE               	goto	l528
  1642                           
  1643                           ;communication.c: 29: TXREG1 = port;
  1644  001594  C061  FFAD         	movff	Transmit@port,4013	;volatile
  1645  001598                     l531:
  1646  001598  A2AC               	btfss	4012,1,c	;volatile
  1647  00159A  D7FE               	goto	l531
  1648                           
  1649                           ;communication.c: 31: PORTBbits.RB5 = 0;
  1650  00159C  9A81               	bcf	3969,5,c	;volatile
  1651                           
  1652                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  1653  00159E  88AB               	bsf	4011,4,c	;volatile
  1654                           
  1655                           ;communication.c: 33: __nop();
  1656  0015A0  F000               	nop	
  1657  0015A2  0012               	return		;funcret
  1658  0015A4                     __end_of_Transmit:
  1659                           	opt stack 0
  1660                           tblptru	equ	0xFF8
  1661                           tblptrh	equ	0xFF7
  1662                           tblptrl	equ	0xFF6
  1663                           tablat	equ	0xFF5
  1664                           prodh	equ	0xFF4
  1665                           prodl	equ	0xFF3
  1666                           intcon	equ	0xFF2
  1667                           postinc0	equ	0xFEE
  1668                           wreg	equ	0xFE8
  1669                           postdec1	equ	0xFE5
  1670                           fsr1l	equ	0xFE1
  1671                           indf2	equ	0xFDF
  1672                           fsr2h	equ	0xFDA
  1673                           fsr2l	equ	0xFD9
  1674                           
  1675 ;; *************** function _Check_Buttons *****************
  1676 ;; Defined at:
  1677 ;;		line 26 in file "buttonchanges.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;		None
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;		None
  1682 ;; Return value:  Size  Location     Type
  1683 ;;		None               void
  1684 ;; Registers used:
  1685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1
  1691 ;;      Params:         0       0       0
  1692 ;;      Locals:         0       0       0
  1693 ;;      Temps:          0       2       0
  1694 ;;      Totals:         0       2       0
  1695 ;;Total ram usage:        2 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; Hardware stack levels required when called:   11
  1698 ;; This function calls:
  1699 ;;		_Del_Data
  1700 ;;		_Delay_Routine
  1701 ;;		_Read_Data
  1702 ;;		_Save_Data
  1703 ;;		_Set_Display
  1704 ;;		_Start_Timer
  1705 ;; This function is called by:
  1706 ;;		_main
  1707 ;; This function uses a non-reentrant model
  1708 ;;
  1709                           
  1710                           	psect	text11
  1711  00026C                     __ptext11:
  1712                           	opt stack 0
  1713  00026C                     _Check_Buttons:
  1714                           	opt stack 19
  1715                           
  1716                           ;buttonchanges.c: 27: if(PORTCbits.RC1 == 1) {
  1717                           
  1718                           ;incstack = 0
  1719  00026C  A282               	btfss	3970,1,c	;volatile
  1720  00026E  D00A               	goto	l102
  1721                           
  1722                           ;buttonchanges.c: 28: Delay_Routine(3);
  1723  000270  0E03               	movlw	3
  1724  000272  EC21  F00B         	call	_Delay_Routine
  1725                           
  1726                           ;buttonchanges.c: 29: if(PORTCbits.RC1 == 1) {
  1727  000276  A282               	btfss	3970,1,c	;volatile
  1728  000278  0012               	return	
  1729                           
  1730                           ;buttonchanges.c: 30: ignite_ready = 1;
  1731  00027A  803C               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1732                           
  1733                           ;buttonchanges.c: 31: Start_Timer();
  1734  00027C  EC71  F00B         	call	_Start_Timer	;wreg free
  1735                           
  1736                           ;buttonchanges.c: 32: __nop();
  1737  000280  F000               	nop	
  1738                           
  1739                           ;buttonchanges.c: 36: }
  1740                           ;buttonchanges.c: 37: } else if(PORTBbits.RB2 == 1) {
  1741                           
  1742                           ;buttonchanges.c: 33: return;
  1743  000282  0012               	return	
  1744  000284                     l102:
  1745  000284  A481               	btfss	3969,2,c	;volatile
  1746  000286  D060               	goto	l106
  1747                           
  1748                           ;buttonchanges.c: 38: Delay_Routine(3);
  1749  000288  0E03               	movlw	3
  1750  00028A  EC21  F00B         	call	_Delay_Routine
  1751                           
  1752                           ;buttonchanges.c: 39: if(PORTBbits.RB2 == 1) {
  1753  00028E  A481               	btfss	3969,2,c	;volatile
  1754  000290  0012               	return	
  1755                           
  1756                           ;buttonchanges.c: 40: if(PORTBbits.RB3 == 1) {
  1757  000292  A681               	btfss	3969,3,c	;volatile
  1758  000294  D008               	goto	l3172
  1759                           
  1760                           ;buttonchanges.c: 41: Delay_Routine(3);
  1761  000296  0E03               	movlw	3
  1762  000298  EC21  F00B         	call	_Delay_Routine
  1763                           
  1764                           ;buttonchanges.c: 42: if(PORTBbits.RB3 == 1) {
  1765  00029C  A681               	btfss	3969,3,c	;volatile
  1766  00029E  D003               	goto	l3172
  1767                           
  1768                           ;buttonchanges.c: 43: Del_Data();
  1769  0002A0  EC8A  F009         	call	_Del_Data	;wreg free
  1770                           
  1771                           ;buttonchanges.c: 44: return;
  1772  0002A4  0012               	return	
  1773  0002A6                     l3172:
  1774                           
  1775                           ;buttonchanges.c: 46: }
  1776                           ;buttonchanges.c: 47: }
  1777                           ;buttonchanges.c: 48: pin[pin_selected].time++;
  1778  0002A6  0100               	movlb	0	; () banked
  1779  0002A8  517B               	movf	_pin_selected& (0+255),w,b
  1780  0002AA  0D06               	mullw	6
  1781  0002AC  0E04               	movlw	4
  1782  0002AE  26F3               	addwf	prodl,f,c
  1783  0002B0  0E00               	movlw	0
  1784  0002B2  22F4               	addwfc	prodh,f,c
  1785  0002B4  0E00               	movlw	low _pin
  1786  0002B6  24F3               	addwf	prodl,w,c
  1787  0002B8  6ED9               	movwf	fsr2l,c
  1788  0002BA  0E01               	movlw	high _pin
  1789  0002BC  20F4               	addwfc	prodh,w,c
  1790  0002BE  6EDA               	movwf	fsr2h,c
  1791  0002C0  2ADE               	incf	postinc2,f,c
  1792  0002C2  0E00               	movlw	0
  1793  0002C4  22DD               	addwfc	postdec2,f,c
  1794                           
  1795                           ;buttonchanges.c: 49: if(pin[pin_selected].time > 999) {
  1796  0002C6  0100               	movlb	0	; () banked
  1797  0002C8  517B               	movf	_pin_selected& (0+255),w,b
  1798  0002CA  0D06               	mullw	6
  1799  0002CC  0E04               	movlw	4
  1800  0002CE  26F3               	addwf	prodl,f,c
  1801  0002D0  0E00               	movlw	0
  1802  0002D2  22F4               	addwfc	prodh,f,c
  1803  0002D4  0E00               	movlw	low _pin
  1804  0002D6  24F3               	addwf	prodl,w,c
  1805  0002D8  6ED9               	movwf	fsr2l,c
  1806  0002DA  0E01               	movlw	high _pin
  1807  0002DC  20F4               	addwfc	prodh,w,c
  1808  0002DE  6EDA               	movwf	fsr2h,c
  1809  0002E0  0E01               	movlw	1
  1810  0002E2  BEDB               	btfsc	plusw2,7,c
  1811  0002E4  D017               	goto	l3176
  1812  0002E6  0EE8               	movlw	232
  1813  0002E8  5CDE               	subwf	postinc2,w,c
  1814  0002EA  0E03               	movlw	3
  1815  0002EC  58DE               	subwfb	postinc2,w,c
  1816  0002EE  A0D8               	btfss	status,0,c
  1817  0002F0  D011               	goto	l3176
  1818                           
  1819                           ; BSR set to: 0
  1820                           ;buttonchanges.c: 50: pin[pin_selected].time = 0;
  1821  0002F2  0100               	movlb	0	; () banked
  1822  0002F4  517B               	movf	_pin_selected& (0+255),w,b
  1823  0002F6  0D06               	mullw	6
  1824  0002F8  0E04               	movlw	4
  1825  0002FA  26F3               	addwf	prodl,f,c
  1826  0002FC  0E00               	movlw	0
  1827  0002FE  22F4               	addwfc	prodh,f,c
  1828  000300  0E00               	movlw	low _pin
  1829  000302  24F3               	addwf	prodl,w,c
  1830  000304  6ED9               	movwf	fsr2l,c
  1831  000306  0E01               	movlw	high _pin
  1832  000308  20F4               	addwfc	prodh,w,c
  1833  00030A  6EDA               	movwf	fsr2h,c
  1834  00030C  0E00               	movlw	0
  1835  00030E  6EDE               	movwf	postinc2,c
  1836  000310  0E00               	movlw	0
  1837  000312  6EDD               	movwf	postdec2,c
  1838  000314                     l3176:
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;buttonchanges.c: 51: }
  1842                           ;buttonchanges.c: 52: __nop();
  1843  000314  F000               	nop	
  1844                           
  1845                           ;buttonchanges.c: 53: Set_Display('7', '-', pin[pin_selected].time);
  1846  000316  0E2D               	movlw	45
  1847  000318  0100               	movlb	0	; () banked
  1848  00031A  6F72               	movwf	Set_Display@information& (0+255),b
  1849  00031C  0100               	movlb	0	; () banked
  1850  00031E  517B               	movf	_pin_selected& (0+255),w,b
  1851  000320  0D06               	mullw	6
  1852  000322  0E04               	movlw	4
  1853  000324  26F3               	addwf	prodl,f,c
  1854  000326  0E00               	movlw	0
  1855  000328  22F4               	addwfc	prodh,f,c
  1856  00032A  0E00               	movlw	low _pin
  1857  00032C  24F3               	addwf	prodl,w,c
  1858  00032E  6ED9               	movwf	fsr2l,c
  1859  000330  0E01               	movlw	high _pin
  1860  000332  20F4               	addwfc	prodh,w,c
  1861  000334  6EDA               	movwf	fsr2h,c
  1862  000336  CFDE F073          	movff	postinc2,Set_Display@value
  1863  00033A  CFDD F074          	movff	postdec2,Set_Display@value+1
  1864  00033E  0E37               	movlw	55
  1865  000340  ECC4  F008         	call	_Set_Display
  1866                           
  1867                           ;buttonchanges.c: 54: __nop();
  1868  000344  F000               	nop	
  1869                           
  1870                           ;buttonchanges.c: 55: }
  1871                           ;buttonchanges.c: 56: } else if(PORTBbits.RB3 == 1) {
  1872  000346  0012               	return	
  1873  000348                     l106:
  1874  000348  A681               	btfss	3969,3,c	;volatile
  1875  00034A  D05A               	goto	l112
  1876                           
  1877                           ;buttonchanges.c: 57: Delay_Routine(3);
  1878  00034C  0E03               	movlw	3
  1879  00034E  EC21  F00B         	call	_Delay_Routine
  1880                           
  1881                           ;buttonchanges.c: 58: if(PORTBbits.RB3 == 1) {
  1882  000352  A681               	btfss	3969,3,c	;volatile
  1883  000354  0012               	return	
  1884                           
  1885                           ;buttonchanges.c: 59: if(PORTBbits.RB2 == 1) {
  1886  000356  A481               	btfss	3969,2,c	;volatile
  1887  000358  D008               	goto	l3196
  1888                           
  1889                           ;buttonchanges.c: 60: Delay_Routine(3);
  1890  00035A  0E03               	movlw	3
  1891  00035C  EC21  F00B         	call	_Delay_Routine
  1892                           
  1893                           ;buttonchanges.c: 61: if(PORTBbits.RB2 == 1) {
  1894  000360  A481               	btfss	3969,2,c	;volatile
  1895  000362  D003               	goto	l3196
  1896                           
  1897                           ;buttonchanges.c: 62: Del_Data();
  1898  000364  EC8A  F009         	call	_Del_Data	;wreg free
  1899                           
  1900                           ;buttonchanges.c: 63: return;
  1901  000368  0012               	return	
  1902  00036A                     l3196:
  1903                           
  1904                           ;buttonchanges.c: 65: }
  1905                           ;buttonchanges.c: 66: }
  1906                           ;buttonchanges.c: 67: pin[pin_selected].time--;
  1907  00036A  0100               	movlb	0	; () banked
  1908  00036C  517B               	movf	_pin_selected& (0+255),w,b
  1909  00036E  0D06               	mullw	6
  1910  000370  0E04               	movlw	4
  1911  000372  26F3               	addwf	prodl,f,c
  1912  000374  0E00               	movlw	0
  1913  000376  22F4               	addwfc	prodh,f,c
  1914  000378  0E00               	movlw	low _pin
  1915  00037A  24F3               	addwf	prodl,w,c
  1916  00037C  6ED9               	movwf	fsr2l,c
  1917  00037E  0E01               	movlw	high _pin
  1918  000380  20F4               	addwfc	prodh,w,c
  1919  000382  6EDA               	movwf	fsr2h,c
  1920  000384  06DE               	decf	postinc2,f,c
  1921  000386  0E00               	movlw	0
  1922  000388  5ADD               	subwfb	postdec2,f,c
  1923                           
  1924                           ;buttonchanges.c: 68: if(pin[pin_selected].time < 0) {
  1925  00038A  0100               	movlb	0	; () banked
  1926  00038C  517B               	movf	_pin_selected& (0+255),w,b
  1927  00038E  0D06               	mullw	6
  1928  000390  0E04               	movlw	4
  1929  000392  26F3               	addwf	prodl,f,c
  1930  000394  0E00               	movlw	0
  1931  000396  22F4               	addwfc	prodh,f,c
  1932  000398  0E00               	movlw	low _pin
  1933  00039A  24F3               	addwf	prodl,w,c
  1934  00039C  6ED9               	movwf	fsr2l,c
  1935  00039E  0E01               	movlw	high _pin
  1936  0003A0  20F4               	addwfc	prodh,w,c
  1937  0003A2  6EDA               	movwf	fsr2h,c
  1938  0003A4  0E01               	movlw	1
  1939  0003A6  AEDB               	btfss	plusw2,7,c
  1940  0003A8  D011               	goto	l3200
  1941                           
  1942                           ; BSR set to: 0
  1943                           ;buttonchanges.c: 69: pin[pin_selected].time = 999;
  1944  0003AA  0100               	movlb	0	; () banked
  1945  0003AC  517B               	movf	_pin_selected& (0+255),w,b
  1946  0003AE  0D06               	mullw	6
  1947  0003B0  0E04               	movlw	4
  1948  0003B2  26F3               	addwf	prodl,f,c
  1949  0003B4  0E00               	movlw	0
  1950  0003B6  22F4               	addwfc	prodh,f,c
  1951  0003B8  0E00               	movlw	low _pin
  1952  0003BA  24F3               	addwf	prodl,w,c
  1953  0003BC  6ED9               	movwf	fsr2l,c
  1954  0003BE  0E01               	movlw	high _pin
  1955  0003C0  20F4               	addwfc	prodh,w,c
  1956  0003C2  6EDA               	movwf	fsr2h,c
  1957  0003C4  0EE7               	movlw	231
  1958  0003C6  6EDE               	movwf	postinc2,c
  1959  0003C8  0E03               	movlw	3
  1960  0003CA  6EDD               	movwf	postdec2,c
  1961  0003CC                     l3200:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;buttonchanges.c: 70: }
  1965                           ;buttonchanges.c: 71: __nop();
  1966  0003CC  F000               	nop	
  1967                           
  1968                           ;buttonchanges.c: 72: Set_Display('7', '-', pin[pin_selected].time);
  1969  0003CE  0E2D               	movlw	45
  1970  0003D0  0100               	movlb	0	; () banked
  1971  0003D2  6F72               	movwf	Set_Display@information& (0+255),b
  1972  0003D4  0100               	movlb	0	; () banked
  1973  0003D6  517B               	movf	_pin_selected& (0+255),w,b
  1974  0003D8  0D06               	mullw	6
  1975  0003DA  0E04               	movlw	4
  1976  0003DC  26F3               	addwf	prodl,f,c
  1977  0003DE  0E00               	movlw	0
  1978  0003E0  22F4               	addwfc	prodh,f,c
  1979  0003E2  0E00               	movlw	low _pin
  1980  0003E4  24F3               	addwf	prodl,w,c
  1981  0003E6  6ED9               	movwf	fsr2l,c
  1982  0003E8  0E01               	movlw	high _pin
  1983  0003EA  20F4               	addwfc	prodh,w,c
  1984  0003EC  6EDA               	movwf	fsr2h,c
  1985  0003EE  CFDE F073          	movff	postinc2,Set_Display@value
  1986  0003F2  CFDD F074          	movff	postdec2,Set_Display@value+1
  1987  0003F6  0E37               	movlw	55
  1988  0003F8  ECC4  F008         	call	_Set_Display
  1989                           
  1990                           ;buttonchanges.c: 73: __nop();
  1991  0003FC  F000               	nop	
  1992                           
  1993                           ;buttonchanges.c: 74: }
  1994                           ;buttonchanges.c: 75: } else if(PORTBbits.RB4 == 1) {
  1995  0003FE  0012               	return	
  1996  000400                     l112:
  1997  000400  A881               	btfss	3969,4,c	;volatile
  1998  000402  D057               	goto	l118
  1999                           
  2000                           ;buttonchanges.c: 76: Delay_Routine(3);
  2001  000404  0E03               	movlw	3
  2002  000406  EC21  F00B         	call	_Delay_Routine
  2003                           
  2004                           ;buttonchanges.c: 77: if(PORTBbits.RB4 == 1) {
  2005  00040A  A881               	btfss	3969,4,c	;volatile
  2006  00040C  0012               	return	
  2007                           
  2008                           ;buttonchanges.c: 78: pin[pin_selected].time += 10;
  2009  00040E  0100               	movlb	0	; () banked
  2010  000410  517B               	movf	_pin_selected& (0+255),w,b
  2011  000412  0D06               	mullw	6
  2012  000414  0E04               	movlw	4
  2013  000416  26F3               	addwf	prodl,f,c
  2014  000418  0E00               	movlw	0
  2015  00041A  22F4               	addwfc	prodh,f,c
  2016  00041C  0E00               	movlw	low _pin
  2017  00041E  24F3               	addwf	prodl,w,c
  2018  000420  6ED9               	movwf	fsr2l,c
  2019  000422  0E01               	movlw	high _pin
  2020  000424  20F4               	addwfc	prodh,w,c
  2021  000426  6EDA               	movwf	fsr2h,c
  2022  000428  0E0A               	movlw	10
  2023  00042A  26DE               	addwf	postinc2,f,c
  2024  00042C  0E00               	movlw	0
  2025  00042E  22DD               	addwfc	postdec2,f,c
  2026                           
  2027                           ;buttonchanges.c: 79: if(pin[pin_selected].time > 999) {
  2028  000430  0100               	movlb	0	; () banked
  2029  000432  517B               	movf	_pin_selected& (0+255),w,b
  2030  000434  0D06               	mullw	6
  2031  000436  0E04               	movlw	4
  2032  000438  26F3               	addwf	prodl,f,c
  2033  00043A  0E00               	movlw	0
  2034  00043C  22F4               	addwfc	prodh,f,c
  2035  00043E  0E00               	movlw	low _pin
  2036  000440  24F3               	addwf	prodl,w,c
  2037  000442  6ED9               	movwf	fsr2l,c
  2038  000444  0E01               	movlw	high _pin
  2039  000446  20F4               	addwfc	prodh,w,c
  2040  000448  6EDA               	movwf	fsr2h,c
  2041  00044A  0E01               	movlw	1
  2042  00044C  BEDB               	btfsc	plusw2,7,c
  2043  00044E  D017               	goto	l3214
  2044  000450  0EE8               	movlw	232
  2045  000452  5CDE               	subwf	postinc2,w,c
  2046  000454  0E03               	movlw	3
  2047  000456  58DE               	subwfb	postinc2,w,c
  2048  000458  A0D8               	btfss	status,0,c
  2049  00045A  D011               	goto	l3214
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;buttonchanges.c: 80: pin[pin_selected].time = 0;
  2053  00045C  0100               	movlb	0	; () banked
  2054  00045E  517B               	movf	_pin_selected& (0+255),w,b
  2055  000460  0D06               	mullw	6
  2056  000462  0E04               	movlw	4
  2057  000464  26F3               	addwf	prodl,f,c
  2058  000466  0E00               	movlw	0
  2059  000468  22F4               	addwfc	prodh,f,c
  2060  00046A  0E00               	movlw	low _pin
  2061  00046C  24F3               	addwf	prodl,w,c
  2062  00046E  6ED9               	movwf	fsr2l,c
  2063  000470  0E01               	movlw	high _pin
  2064  000472  20F4               	addwfc	prodh,w,c
  2065  000474  6EDA               	movwf	fsr2h,c
  2066  000476  0E00               	movlw	0
  2067  000478  6EDE               	movwf	postinc2,c
  2068  00047A  0E00               	movlw	0
  2069  00047C  6EDD               	movwf	postdec2,c
  2070  00047E                     l3214:
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;buttonchanges.c: 81: }
  2074                           ;buttonchanges.c: 82: __nop();
  2075  00047E  F000               	nop	
  2076                           
  2077                           ;buttonchanges.c: 83: Set_Display('7', '-', pin[pin_selected].time);
  2078  000480  0E2D               	movlw	45
  2079  000482  0100               	movlb	0	; () banked
  2080  000484  6F72               	movwf	Set_Display@information& (0+255),b
  2081  000486  0100               	movlb	0	; () banked
  2082  000488  517B               	movf	_pin_selected& (0+255),w,b
  2083  00048A  0D06               	mullw	6
  2084  00048C  0E04               	movlw	4
  2085  00048E  26F3               	addwf	prodl,f,c
  2086  000490  0E00               	movlw	0
  2087  000492  22F4               	addwfc	prodh,f,c
  2088  000494  0E00               	movlw	low _pin
  2089  000496  24F3               	addwf	prodl,w,c
  2090  000498  6ED9               	movwf	fsr2l,c
  2091  00049A  0E01               	movlw	high _pin
  2092  00049C  20F4               	addwfc	prodh,w,c
  2093  00049E  6EDA               	movwf	fsr2h,c
  2094  0004A0  CFDE F073          	movff	postinc2,Set_Display@value
  2095  0004A4  CFDD F074          	movff	postdec2,Set_Display@value+1
  2096  0004A8  0E37               	movlw	55
  2097  0004AA  ECC4  F008         	call	_Set_Display
  2098                           
  2099                           ;buttonchanges.c: 84: __nop();
  2100  0004AE  F000               	nop	
  2101                           
  2102                           ;buttonchanges.c: 85: }
  2103                           ;buttonchanges.c: 86: } else if(PORTBbits.RB1 == 1) {
  2104  0004B0  0012               	return	
  2105  0004B2                     l118:
  2106  0004B2  A281               	btfss	3969,1,c	;volatile
  2107  0004B4  D0B1               	goto	l122
  2108                           
  2109                           ;buttonchanges.c: 87: Delay_Routine(3);
  2110  0004B6  0E03               	movlw	3
  2111  0004B8  EC21  F00B         	call	_Delay_Routine
  2112                           
  2113                           ;buttonchanges.c: 88: if(PORTBbits.RB1 == 1) {
  2114  0004BC  A281               	btfss	3969,1,c	;volatile
  2115  0004BE  0012               	return	
  2116                           
  2117                           ;buttonchanges.c: 89: if(PORTBbits.RB0 == 1) {
  2118  0004C0  A081               	btfss	3969,0,c	;volatile
  2119  0004C2  D007               	goto	l3232
  2120                           
  2121                           ;buttonchanges.c: 90: Delay_Routine(3);
  2122  0004C4  0E03               	movlw	3
  2123  0004C6  EC21  F00B         	call	_Delay_Routine
  2124                           
  2125                           ;buttonchanges.c: 91: if(PORTBbits.RB0 == 1) {
  2126  0004CA  A081               	btfss	3969,0,c	;volatile
  2127  0004CC  D002               	goto	l3232
  2128                           
  2129                           ;buttonchanges.c: 92: testflag = 1;
  2130  0004CE  863C               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2131                           
  2132                           ;buttonchanges.c: 93: return;
  2133  0004D0  0012               	return	
  2134  0004D2                     l3232:
  2135                           
  2136                           ;buttonchanges.c: 95: }
  2137                           ;buttonchanges.c: 96: }
  2138                           ;buttonchanges.c: 97: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2139  0004D2  0100               	movlb	0	; () banked
  2140  0004D4  517B               	movf	_pin_selected& (0+255),w,b
  2141  0004D6  0D06               	mullw	6
  2142  0004D8  0E04               	movlw	4
  2143  0004DA  26F3               	addwf	prodl,f,c
  2144  0004DC  0E00               	movlw	0
  2145  0004DE  22F4               	addwfc	prodh,f,c
  2146  0004E0  0E00               	movlw	low _pin
  2147  0004E2  24F3               	addwf	prodl,w,c
  2148  0004E4  6ED9               	movwf	fsr2l,c
  2149  0004E6  0E01               	movlw	high _pin
  2150  0004E8  20F4               	addwfc	prodh,w,c
  2151  0004EA  6EDA               	movwf	fsr2h,c
  2152  0004EC  CFDE F060          	movff	postinc2,Save_Data@store
  2153  0004F0  CFDD F061          	movff	postdec2,Save_Data@store+1
  2154  0004F4  0100               	movlb	0	; () banked
  2155  0004F6  517B               	movf	_pin_selected& (0+255),w,b
  2156  0004F8  0D06               	mullw	6
  2157  0004FA  0E02               	movlw	2
  2158  0004FC  26F3               	addwf	prodl,f,c
  2159  0004FE  0E00               	movlw	0
  2160  000500  22F4               	addwfc	prodh,f,c
  2161  000502  0E00               	movlw	low _pin
  2162  000504  24F3               	addwf	prodl,w,c
  2163  000506  6ED9               	movwf	fsr2l,c
  2164  000508  0E01               	movlw	high _pin
  2165  00050A  20F4               	addwfc	prodh,w,c
  2166  00050C  6EDA               	movwf	fsr2h,c
  2167  00050E  50DF               	movf	indf2,w,c
  2168  000510  0100               	movlb	0	; () banked
  2169  000512  6F62               	movwf	Save_Data@store_address& (0+255),b
  2170  000514  ECE1  F009         	call	_Save_Data	;wreg free
  2171                           
  2172                           ;buttonchanges.c: 98: pin_selected++;
  2173  000518  0100               	movlb	0	; () banked
  2174  00051A  2B7B               	incf	_pin_selected& (0+255),f,b
  2175                           
  2176                           ;buttonchanges.c: 99: switch (slave_selected) {
  2177  00051C  D014               	goto	l3250
  2178  00051E                     l3236:
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;buttonchanges.c: 101: if(pin_selected > 9) {
  2182  00051E  0E09               	movlw	9
  2183  000520  0100               	movlb	0	; () banked
  2184  000522  657B               	cpfsgt	_pin_selected& (0+255),b
  2185  000524  D01B               	goto	l3252
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;buttonchanges.c: 102: pin_selected = 0;
  2189  000526  0E00               	movlw	0
  2190  000528  D00B               	goto	L2
  2191  00052A                     l3240:
  2192                           
  2193                           ; BSR set to: 0
  2194                           ;buttonchanges.c: 106: if(pin_selected > 19) {
  2195  00052A  0E13               	movlw	19
  2196  00052C  0100               	movlb	0	; () banked
  2197  00052E  657B               	cpfsgt	_pin_selected& (0+255),b
  2198  000530  D015               	goto	l3252
  2199                           
  2200                           ; BSR set to: 0
  2201                           ;buttonchanges.c: 107: pin_selected = 10;
  2202  000532  0E0A               	movlw	10
  2203  000534  D005               	goto	L2
  2204  000536                     l3244:
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;buttonchanges.c: 111: if(pin_selected > 29) {
  2208  000536  0E1D               	movlw	29
  2209  000538  0100               	movlb	0	; () banked
  2210  00053A  657B               	cpfsgt	_pin_selected& (0+255),b
  2211  00053C  D00F               	goto	l3252
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;buttonchanges.c: 112: pin_selected = 20;
  2215  00053E  0E14               	movlw	20
  2216  000540                     L2:
  2217  000540  0100               	movlb	0	; () banked
  2218  000542  6F7B               	movwf	_pin_selected& (0+255),b
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;buttonchanges.c: 115: }
  2222                           
  2223                           ; BSR set to: 0
  2224                           ;buttonchanges.c: 113: }
  2225                           ;buttonchanges.c: 114: break;
  2226  000544  D00B               	goto	l3252
  2227  000546                     l3250:
  2228                           
  2229                           ; BSR set to: 0
  2230  000546  0100               	movlb	0	; () banked
  2231  000548  517C               	movf	_slave_selected& (0+255),w,b
  2232                           
  2233                           ; Switch size 1, requested type "space"
  2234                           ; Number of cases is 3, Range of values is 0 to 2
  2235                           ; switch strategies available:
  2236                           ; Name         Instructions Cycles
  2237                           ; simple_byte           10     6 (average)
  2238                           ;	Chosen strategy is simple_byte
  2239  00054A  0A00               	xorlw	0	; case 0
  2240  00054C  B4D8               	btfsc	status,2,c
  2241  00054E  D7E7               	goto	l3236
  2242  000550  0A01               	xorlw	1	; case 1
  2243  000552  B4D8               	btfsc	status,2,c
  2244  000554  D7EA               	goto	l3240
  2245  000556  0A03               	xorlw	3	; case 2
  2246  000558  B4D8               	btfsc	status,2,c
  2247  00055A  D7ED               	goto	l3244
  2248  00055C                     l3252:
  2249                           
  2250                           ; BSR set to: 0
  2251                           ;buttonchanges.c: 116: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2252  00055C  0100               	movlb	0	; () banked
  2253  00055E  517B               	movf	_pin_selected& (0+255),w,b
  2254  000560  0D06               	mullw	6
  2255  000562  0E02               	movlw	2
  2256  000564  26F3               	addwf	prodl,f,c
  2257  000566  0E00               	movlw	0
  2258  000568  22F4               	addwfc	prodh,f,c
  2259  00056A  0E00               	movlw	low _pin
  2260  00056C  24F3               	addwf	prodl,w,c
  2261  00056E  6ED9               	movwf	fsr2l,c
  2262  000570  0E01               	movlw	high _pin
  2263  000572  20F4               	addwfc	prodh,w,c
  2264  000574  6EDA               	movwf	fsr2h,c
  2265  000576  50DF               	movf	indf2,w,c
  2266  000578  EC0B  F00A         	call	_Read_Data
  2267  00057C  0100               	movlb	0	; () banked
  2268  00057E  517B               	movf	_pin_selected& (0+255),w,b
  2269  000580  0D06               	mullw	6
  2270  000582  0E04               	movlw	4
  2271  000584  26F3               	addwf	prodl,f,c
  2272  000586  0E00               	movlw	0
  2273  000588  22F4               	addwfc	prodh,f,c
  2274  00058A  0E00               	movlw	low _pin
  2275  00058C  24F3               	addwf	prodl,w,c
  2276  00058E  6ED9               	movwf	fsr2l,c
  2277  000590  0E01               	movlw	high _pin
  2278  000592  20F4               	addwfc	prodh,w,c
  2279  000594  6EDA               	movwf	fsr2h,c
  2280  000596  0100               	movlb	0	; () banked
  2281  000598  C060  FFDE         	movff	?_Read_Data,postinc2
  2282  00059C  0100               	movlb	0	; () banked
  2283  00059E  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2284                           
  2285                           ; BSR set to: 0
  2286                           ;buttonchanges.c: 117: __nop();
  2287  0005A2  F000               	nop	
  2288                           
  2289                           ;buttonchanges.c: 118: Set_Display('7', 'A', pin[pin_selected].output);
  2290  0005A4  0E41               	movlw	65
  2291  0005A6  0100               	movlb	0	; () banked
  2292  0005A8  6F72               	movwf	Set_Display@information& (0+255),b
  2293  0005AA  0100               	movlb	0	; () banked
  2294  0005AC  517B               	movf	_pin_selected& (0+255),w,b
  2295  0005AE  0D06               	mullw	6
  2296  0005B0  0E01               	movlw	1
  2297  0005B2  26F3               	addwf	prodl,f,c
  2298  0005B4  0E00               	movlw	0
  2299  0005B6  22F4               	addwfc	prodh,f,c
  2300  0005B8  0E00               	movlw	low _pin
  2301  0005BA  24F3               	addwf	prodl,w,c
  2302  0005BC  6ED9               	movwf	fsr2l,c
  2303  0005BE  0E01               	movlw	high _pin
  2304  0005C0  20F4               	addwfc	prodh,w,c
  2305  0005C2  6EDA               	movwf	fsr2h,c
  2306  0005C4  50DF               	movf	indf2,w,c
  2307  0005C6  0100               	movlb	0	; () banked
  2308  0005C8  6F79               	movwf	??_Check_Buttons& (0+255),b
  2309  0005CA  0100               	movlb	0	; () banked
  2310  0005CC  5179               	movf	??_Check_Buttons& (0+255),w,b
  2311  0005CE  0100               	movlb	0	; () banked
  2312  0005D0  6F73               	movwf	Set_Display@value& (0+255),b
  2313  0005D2  6B74               	clrf	(Set_Display@value+1)& (0+255),b
  2314  0005D4  0E37               	movlw	55
  2315  0005D6  ECC4  F008         	call	_Set_Display
  2316                           
  2317                           ;buttonchanges.c: 119: Delay_Routine(30);
  2318  0005DA  0E1E               	movlw	30
  2319  0005DC  EC21  F00B         	call	_Delay_Routine
  2320                           
  2321                           ;buttonchanges.c: 120: Set_Display('7', '-', pin[pin_selected].time);
  2322  0005E0  0E2D               	movlw	45
  2323  0005E2  0100               	movlb	0	; () banked
  2324  0005E4  6F72               	movwf	Set_Display@information& (0+255),b
  2325  0005E6  0100               	movlb	0	; () banked
  2326  0005E8  517B               	movf	_pin_selected& (0+255),w,b
  2327  0005EA  0D06               	mullw	6
  2328  0005EC  0E04               	movlw	4
  2329  0005EE  26F3               	addwf	prodl,f,c
  2330  0005F0  0E00               	movlw	0
  2331  0005F2  22F4               	addwfc	prodh,f,c
  2332  0005F4  0E00               	movlw	low _pin
  2333  0005F6  24F3               	addwf	prodl,w,c
  2334  0005F8  6ED9               	movwf	fsr2l,c
  2335  0005FA  0E01               	movlw	high _pin
  2336  0005FC  20F4               	addwfc	prodh,w,c
  2337  0005FE  6EDA               	movwf	fsr2h,c
  2338  000600  CFDE F073          	movff	postinc2,Set_Display@value
  2339  000604  CFDD F074          	movff	postdec2,Set_Display@value+1
  2340  000608  0E37               	movlw	55
  2341  00060A  ECC4  F008         	call	_Set_Display
  2342                           
  2343                           ;buttonchanges.c: 121: Delay_Routine(30);
  2344  00060E  0E1E               	movlw	30
  2345  000610  EC21  F00B         	call	_Delay_Routine
  2346                           
  2347                           ;buttonchanges.c: 122: __nop();
  2348  000614  F000               	nop	
  2349                           
  2350                           ;buttonchanges.c: 123: }
  2351                           ;buttonchanges.c: 124: } else if(PORTBbits.RB0 == 1) {
  2352  000616  0012               	return	
  2353  000618                     l122:
  2354  000618  A081               	btfss	3969,0,c	;volatile
  2355  00061A  0012               	return	
  2356                           
  2357                           ;buttonchanges.c: 125: Delay_Routine(3);
  2358  00061C  0E03               	movlw	3
  2359  00061E  EC21  F00B         	call	_Delay_Routine
  2360                           
  2361                           ;buttonchanges.c: 126: if(PORTBbits.RB0 == 1) {
  2362  000622  A081               	btfss	3969,0,c	;volatile
  2363  000624  0012               	return	
  2364                           
  2365                           ;buttonchanges.c: 127: if(PORTBbits.RB1 == 1) {
  2366  000626  A281               	btfss	3969,1,c	;volatile
  2367  000628  D007               	goto	l3278
  2368                           
  2369                           ;buttonchanges.c: 128: Delay_Routine(3);
  2370  00062A  0E03               	movlw	3
  2371  00062C  EC21  F00B         	call	_Delay_Routine
  2372                           
  2373                           ;buttonchanges.c: 129: if(PORTBbits.RB1 == 1) {
  2374  000630  A281               	btfss	3969,1,c	;volatile
  2375  000632  D002               	goto	l3278
  2376                           
  2377                           ;buttonchanges.c: 130: testflag = 1;
  2378  000634  863C               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2379                           
  2380                           ;buttonchanges.c: 131: return;
  2381  000636  0012               	return	
  2382  000638                     l3278:
  2383                           
  2384                           ;buttonchanges.c: 133: }
  2385                           ;buttonchanges.c: 134: }
  2386                           ;buttonchanges.c: 135: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2387  000638  0100               	movlb	0	; () banked
  2388  00063A  517B               	movf	_pin_selected& (0+255),w,b
  2389  00063C  0D06               	mullw	6
  2390  00063E  0E04               	movlw	4
  2391  000640  26F3               	addwf	prodl,f,c
  2392  000642  0E00               	movlw	0
  2393  000644  22F4               	addwfc	prodh,f,c
  2394  000646  0E00               	movlw	low _pin
  2395  000648  24F3               	addwf	prodl,w,c
  2396  00064A  6ED9               	movwf	fsr2l,c
  2397  00064C  0E01               	movlw	high _pin
  2398  00064E  20F4               	addwfc	prodh,w,c
  2399  000650  6EDA               	movwf	fsr2h,c
  2400  000652  CFDE F060          	movff	postinc2,Save_Data@store
  2401  000656  CFDD F061          	movff	postdec2,Save_Data@store+1
  2402  00065A  0100               	movlb	0	; () banked
  2403  00065C  517B               	movf	_pin_selected& (0+255),w,b
  2404  00065E  0D06               	mullw	6
  2405  000660  0E02               	movlw	2
  2406  000662  26F3               	addwf	prodl,f,c
  2407  000664  0E00               	movlw	0
  2408  000666  22F4               	addwfc	prodh,f,c
  2409  000668  0E00               	movlw	low _pin
  2410  00066A  24F3               	addwf	prodl,w,c
  2411  00066C  6ED9               	movwf	fsr2l,c
  2412  00066E  0E01               	movlw	high _pin
  2413  000670  20F4               	addwfc	prodh,w,c
  2414  000672  6EDA               	movwf	fsr2h,c
  2415  000674  50DF               	movf	indf2,w,c
  2416  000676  0100               	movlb	0	; () banked
  2417  000678  6F62               	movwf	Save_Data@store_address& (0+255),b
  2418  00067A  ECE1  F009         	call	_Save_Data	;wreg free
  2419                           
  2420                           ;buttonchanges.c: 136: slave_selected++;
  2421  00067E  0100               	movlb	0	; () banked
  2422  000680  2B7C               	incf	_slave_selected& (0+255),f,b
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;buttonchanges.c: 137: if(slave_selected > 2) {
  2426  000682  0E02               	movlw	2
  2427  000684  0100               	movlb	0	; () banked
  2428  000686  657C               	cpfsgt	_slave_selected& (0+255),b
  2429  000688  D003               	goto	l3286
  2430                           
  2431                           ; BSR set to: 0
  2432                           ;buttonchanges.c: 138: slave_selected = 0;
  2433  00068A  0E00               	movlw	0
  2434  00068C  0100               	movlb	0	; () banked
  2435  00068E  6F7C               	movwf	_slave_selected& (0+255),b
  2436  000690                     l3286:
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;buttonchanges.c: 139: }
  2440                           ;buttonchanges.c: 140: pin_selected = slave_selected * 10;
  2441  000690  0100               	movlb	0	; () banked
  2442  000692  517C               	movf	_slave_selected& (0+255),w,b
  2443  000694  0D0A               	mullw	10
  2444  000696  CFF3 F07B          	movff	prodl,_pin_selected
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;buttonchanges.c: 141: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2448  00069A  0100               	movlb	0	; () banked
  2449  00069C  517B               	movf	_pin_selected& (0+255),w,b
  2450  00069E  0D06               	mullw	6
  2451  0006A0  0E02               	movlw	2
  2452  0006A2  26F3               	addwf	prodl,f,c
  2453  0006A4  0E00               	movlw	0
  2454  0006A6  22F4               	addwfc	prodh,f,c
  2455  0006A8  0E00               	movlw	low _pin
  2456  0006AA  24F3               	addwf	prodl,w,c
  2457  0006AC  6ED9               	movwf	fsr2l,c
  2458  0006AE  0E01               	movlw	high _pin
  2459  0006B0  20F4               	addwfc	prodh,w,c
  2460  0006B2  6EDA               	movwf	fsr2h,c
  2461  0006B4  50DF               	movf	indf2,w,c
  2462  0006B6  EC0B  F00A         	call	_Read_Data
  2463  0006BA  0100               	movlb	0	; () banked
  2464  0006BC  517B               	movf	_pin_selected& (0+255),w,b
  2465  0006BE  0D06               	mullw	6
  2466  0006C0  0E04               	movlw	4
  2467  0006C2  26F3               	addwf	prodl,f,c
  2468  0006C4  0E00               	movlw	0
  2469  0006C6  22F4               	addwfc	prodh,f,c
  2470  0006C8  0E00               	movlw	low _pin
  2471  0006CA  24F3               	addwf	prodl,w,c
  2472  0006CC  6ED9               	movwf	fsr2l,c
  2473  0006CE  0E01               	movlw	high _pin
  2474  0006D0  20F4               	addwfc	prodh,w,c
  2475  0006D2  6EDA               	movwf	fsr2h,c
  2476  0006D4  0100               	movlb	0	; () banked
  2477  0006D6  C060  FFDE         	movff	?_Read_Data,postinc2
  2478  0006DA  0100               	movlb	0	; () banked
  2479  0006DC  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;buttonchanges.c: 142: __nop();
  2483  0006E0  F000               	nop	
  2484                           
  2485                           ;buttonchanges.c: 143: Set_Display('7', 'E', pin[pin_selected].slave);
  2486  0006E2  0E45               	movlw	69
  2487  0006E4  0100               	movlb	0	; () banked
  2488  0006E6  6F72               	movwf	Set_Display@information& (0+255),b
  2489  0006E8  0100               	movlb	0	; () banked
  2490  0006EA  517B               	movf	_pin_selected& (0+255),w,b
  2491  0006EC  0D06               	mullw	6
  2492  0006EE  0E00               	movlw	low _pin
  2493  0006F0  24F3               	addwf	prodl,w,c
  2494  0006F2  6ED9               	movwf	fsr2l,c
  2495  0006F4  0E01               	movlw	high _pin
  2496  0006F6  20F4               	addwfc	prodh,w,c
  2497  0006F8  6EDA               	movwf	fsr2h,c
  2498  0006FA  50DF               	movf	indf2,w,c
  2499  0006FC  0100               	movlb	0	; () banked
  2500  0006FE  6F79               	movwf	??_Check_Buttons& (0+255),b
  2501  000700  0100               	movlb	0	; () banked
  2502  000702  5179               	movf	??_Check_Buttons& (0+255),w,b
  2503  000704  0100               	movlb	0	; () banked
  2504  000706  6F73               	movwf	Set_Display@value& (0+255),b
  2505  000708  6B74               	clrf	(Set_Display@value+1)& (0+255),b
  2506  00070A  0E37               	movlw	55
  2507  00070C  ECC4  F008         	call	_Set_Display
  2508                           
  2509                           ;buttonchanges.c: 145: Delay_Routine(30);
  2510  000710  0E1E               	movlw	30
  2511  000712  EC21  F00B         	call	_Delay_Routine
  2512                           
  2513                           ;buttonchanges.c: 146: Set_Display('7', 'A', pin[pin_selected].output);
  2514  000716  0E41               	movlw	65
  2515  000718  0100               	movlb	0	; () banked
  2516  00071A  6F72               	movwf	Set_Display@information& (0+255),b
  2517  00071C  0100               	movlb	0	; () banked
  2518  00071E  517B               	movf	_pin_selected& (0+255),w,b
  2519  000720  0D06               	mullw	6
  2520  000722  0E01               	movlw	1
  2521  000724  26F3               	addwf	prodl,f,c
  2522  000726  0E00               	movlw	0
  2523  000728  22F4               	addwfc	prodh,f,c
  2524  00072A  0E00               	movlw	low _pin
  2525  00072C  24F3               	addwf	prodl,w,c
  2526  00072E  6ED9               	movwf	fsr2l,c
  2527  000730  0E01               	movlw	high _pin
  2528  000732  20F4               	addwfc	prodh,w,c
  2529  000734  6EDA               	movwf	fsr2h,c
  2530  000736  50DF               	movf	indf2,w,c
  2531  000738  0100               	movlb	0	; () banked
  2532  00073A  6F79               	movwf	??_Check_Buttons& (0+255),b
  2533  00073C  0100               	movlb	0	; () banked
  2534  00073E  5179               	movf	??_Check_Buttons& (0+255),w,b
  2535  000740  0100               	movlb	0	; () banked
  2536  000742  6F73               	movwf	Set_Display@value& (0+255),b
  2537  000744  6B74               	clrf	(Set_Display@value+1)& (0+255),b
  2538  000746  0E37               	movlw	55
  2539  000748  ECC4  F008         	call	_Set_Display
  2540                           
  2541                           ;buttonchanges.c: 147: Delay_Routine(30);
  2542  00074C  0E1E               	movlw	30
  2543  00074E  EC21  F00B         	call	_Delay_Routine
  2544                           
  2545                           ;buttonchanges.c: 148: Set_Display('7', '-', pin[pin_selected].time);
  2546  000752  0E2D               	movlw	45
  2547  000754  0100               	movlb	0	; () banked
  2548  000756  6F72               	movwf	Set_Display@information& (0+255),b
  2549  000758  0100               	movlb	0	; () banked
  2550  00075A  517B               	movf	_pin_selected& (0+255),w,b
  2551  00075C  0D06               	mullw	6
  2552  00075E  0E04               	movlw	4
  2553  000760  26F3               	addwf	prodl,f,c
  2554  000762  0E00               	movlw	0
  2555  000764  22F4               	addwfc	prodh,f,c
  2556  000766  0E00               	movlw	low _pin
  2557  000768  24F3               	addwf	prodl,w,c
  2558  00076A  6ED9               	movwf	fsr2l,c
  2559  00076C  0E01               	movlw	high _pin
  2560  00076E  20F4               	addwfc	prodh,w,c
  2561  000770  6EDA               	movwf	fsr2h,c
  2562  000772  CFDE F073          	movff	postinc2,Set_Display@value
  2563  000776  CFDD F074          	movff	postdec2,Set_Display@value+1
  2564  00077A  0E37               	movlw	55
  2565  00077C  ECC4  F008         	call	_Set_Display
  2566                           
  2567                           ;buttonchanges.c: 149: Delay_Routine(30);
  2568  000780  0E1E               	movlw	30
  2569  000782  EC21  F00B         	call	_Delay_Routine
  2570                           
  2571                           ;buttonchanges.c: 150: __nop();
  2572  000786  F000               	nop	
  2573  000788  0012               	return	
  2574  00078A                     __end_of_Check_Buttons:
  2575                           	opt stack 0
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           prodh	equ	0xFF4
  2581                           prodl	equ	0xFF3
  2582                           intcon	equ	0xFF2
  2583                           postinc0	equ	0xFEE
  2584                           wreg	equ	0xFE8
  2585                           postdec1	equ	0xFE5
  2586                           fsr1l	equ	0xFE1
  2587                           indf2	equ	0xFDF
  2588                           postinc2	equ	0xFDE
  2589                           postdec2	equ	0xFDD
  2590                           plusw2	equ	0xFDB
  2591                           fsr2h	equ	0xFDA
  2592                           fsr2l	equ	0xFD9
  2593                           status	equ	0xFD8
  2594                           
  2595 ;; *************** function _Start_Timer *****************
  2596 ;; Defined at:
  2597 ;;		line 12 in file "ignition.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;		None               void
  2604 ;; Registers used:
  2605 ;;		wreg, status,2
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK0   BANK1
  2611 ;;      Params:         0       0       0
  2612 ;;      Locals:         0       0       0
  2613 ;;      Temps:          0       0       0
  2614 ;;      Totals:         0       0       0
  2615 ;;Total ram usage:        0 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    5
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_Check_Buttons
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text12
  2626  0016E2                     __ptext12:
  2627                           	opt stack 0
  2628  0016E2                     _Start_Timer:
  2629                           	opt stack 24
  2630                           
  2631                           ;ignition.c: 13: if(ignite_ready == 1) {
  2632                           
  2633                           ;incstack = 0
  2634  0016E2  A03C               	btfss	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  2635  0016E4  0012               	return	
  2636                           
  2637                           ;ignition.c: 14: TMR1L = 0;
  2638  0016E6  0E00               	movlw	0
  2639  0016E8  6ECE               	movwf	4046,c	;volatile
  2640                           
  2641                           ;ignition.c: 15: TMR1H = 0;
  2642  0016EA  0E00               	movlw	0
  2643  0016EC  6ECF               	movwf	4047,c	;volatile
  2644                           
  2645                           ;ignition.c: 16: TMR3L = 0;
  2646  0016EE  0E00               	movlw	0
  2647  0016F0  6EB2               	movwf	4018,c	;volatile
  2648                           
  2649                           ;ignition.c: 17: TMR3H = 0;
  2650  0016F2  0E00               	movlw	0
  2651  0016F4  6EB3               	movwf	4019,c	;volatile
  2652                           
  2653                           ;ignition.c: 18: PIR1bits.TMR1IF = 0;
  2654  0016F6  909E               	bcf	3998,0,c	;volatile
  2655                           
  2656                           ;ignition.c: 19: PIR2bits.TMR3IF = 0;
  2657  0016F8  92A1               	bcf	4001,1,c	;volatile
  2658                           
  2659                           ;ignition.c: 20: T1CONbits.TMR1ON = 1;
  2660  0016FA  80CD               	bsf	4045,0,c	;volatile
  2661  0016FC  0012               	return	
  2662  0016FE                     __end_of_Start_Timer:
  2663                           	opt stack 0
  2664                           tblptru	equ	0xFF8
  2665                           tblptrh	equ	0xFF7
  2666                           tblptrl	equ	0xFF6
  2667                           tablat	equ	0xFF5
  2668                           prodh	equ	0xFF4
  2669                           prodl	equ	0xFF3
  2670                           intcon	equ	0xFF2
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           postdec1	equ	0xFE5
  2674                           fsr1l	equ	0xFE1
  2675                           indf2	equ	0xFDF
  2676                           postinc2	equ	0xFDE
  2677                           postdec2	equ	0xFDD
  2678                           plusw2	equ	0xFDB
  2679                           fsr2h	equ	0xFDA
  2680                           fsr2l	equ	0xFD9
  2681                           status	equ	0xFD8
  2682                           
  2683 ;; *************** function _Del_Data *****************
  2684 ;; Defined at:
  2685 ;;		line 89 in file "storage.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;		None
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  counter         1   24[BANK0 ] unsigned char 
  2690 ;; Return value:  Size  Location     Type
  2691 ;;		None               void
  2692 ;; Registers used:
  2693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1
  2699 ;;      Params:         0       0       0
  2700 ;;      Locals:         0       1       0
  2701 ;;      Temps:          0       0       0
  2702 ;;      Totals:         0       1       0
  2703 ;;Total ram usage:        1 bytes
  2704 ;; Hardware stack levels used:    1
  2705 ;; Hardware stack levels required when called:   10
  2706 ;; This function calls:
  2707 ;;		_Delay_Routine
  2708 ;;		_Evaluate_Display
  2709 ;;		_Load_Data
  2710 ;;		_Save_Data
  2711 ;; This function is called by:
  2712 ;;		_Check_Buttons
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           	psect	text13
  2717  001314                     __ptext13:
  2718                           	opt stack 0
  2719  001314                     _Del_Data:
  2720                           	opt stack 19
  2721                           
  2722                           ;storage.c: 90: string_delete[0] = 'D';
  2723                           
  2724                           ;incstack = 0
  2725  001314  0E44               	movlw	68
  2726  001316  0100               	movlb	0	; () banked
  2727  001318  6F80               	movwf	_string_delete& (0+255),b
  2728                           
  2729                           ;storage.c: 91: string_delete[1] = 'E';
  2730  00131A  0E45               	movlw	69
  2731  00131C  0100               	movlb	0	; () banked
  2732  00131E  6F81               	movwf	(_string_delete+1)& (0+255),b
  2733                           
  2734                           ;storage.c: 92: string_delete[2] = 'L';
  2735  001320  0E4C               	movlw	76
  2736  001322  0100               	movlb	0	; () banked
  2737  001324  6F82               	movwf	(_string_delete+2)& (0+255),b
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;storage.c: 94: Evaluate_Display(3, string_delete);
  2741  001326  0E80               	movlw	low _string_delete
  2742  001328  0100               	movlb	0	; () banked
  2743  00132A  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  2744  00132C  0E00               	movlw	high _string_delete
  2745  00132E  0100               	movlb	0	; () banked
  2746  001330  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  2747  001332  0E03               	movlw	3
  2748  001334  ECC5  F003         	call	_Evaluate_Display
  2749                           
  2750                           ;storage.c: 95: Delay_Routine(3);
  2751  001338  0E03               	movlw	3
  2752  00133A  EC21  F00B         	call	_Delay_Routine
  2753                           
  2754                           ;storage.c: 96: for(unsigned char counter = 0; counter < 30; counter++) {
  2755  00133E  0E00               	movlw	0
  2756  001340  0100               	movlb	0	; () banked
  2757  001342  6F78               	movwf	Del_Data@counter& (0+255),b
  2758  001344                     l3082:
  2759                           
  2760                           ; BSR set to: 0
  2761  001344  0E1D               	movlw	29
  2762  001346  0100               	movlb	0	; () banked
  2763  001348  6578               	cpfsgt	Del_Data@counter& (0+255),b
  2764  00134A  D001               	goto	l3086
  2765  00134C  D00C               	goto	l3092
  2766  00134E                     l3086:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;storage.c: 97: Save_Data(0, counter);
  2770  00134E  0E00               	movlw	0
  2771  001350  0100               	movlb	0	; () banked
  2772  001352  6F61               	movwf	(Save_Data@store+1)& (0+255),b
  2773  001354  0E00               	movlw	0
  2774  001356  6F60               	movwf	Save_Data@store& (0+255),b
  2775  001358  C078  F062         	movff	Del_Data@counter,Save_Data@store_address
  2776  00135C  ECE1  F009         	call	_Save_Data	;wreg free
  2777  001360  0100               	movlb	0	; () banked
  2778  001362  2B78               	incf	Del_Data@counter& (0+255),f,b
  2779  001364  D7EF               	goto	l3082
  2780  001366                     l3092:
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;storage.c: 98: }
  2784                           ;storage.c: 99: Load_Data();
  2785  001366  EC54  F006         	call	_Load_Data	;wreg free
  2786  00136A  0012               	return		;funcret
  2787  00136C                     __end_of_Del_Data:
  2788                           	opt stack 0
  2789                           tblptru	equ	0xFF8
  2790                           tblptrh	equ	0xFF7
  2791                           tblptrl	equ	0xFF6
  2792                           tablat	equ	0xFF5
  2793                           prodh	equ	0xFF4
  2794                           prodl	equ	0xFF3
  2795                           intcon	equ	0xFF2
  2796                           postinc0	equ	0xFEE
  2797                           wreg	equ	0xFE8
  2798                           postdec1	equ	0xFE5
  2799                           fsr1l	equ	0xFE1
  2800                           indf2	equ	0xFDF
  2801                           postinc2	equ	0xFDE
  2802                           postdec2	equ	0xFDD
  2803                           plusw2	equ	0xFDB
  2804                           fsr2h	equ	0xFDA
  2805                           fsr2l	equ	0xFD9
  2806                           status	equ	0xFD8
  2807                           
  2808 ;; *************** function _Save_Data *****************
  2809 ;; Defined at:
  2810 ;;		line 8 in file "storage.c"
  2811 ;; Parameters:    Size  Location     Type
  2812 ;;  store           2    0[BANK0 ] unsigned int 
  2813 ;;  store_addres    1    2[BANK0 ] unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;		None               void
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1
  2825 ;;      Params:         0       3       0
  2826 ;;      Locals:         0       0       0
  2827 ;;      Temps:          0       0       0
  2828 ;;      Totals:         0       3       0
  2829 ;;Total ram usage:        3 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    5
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_Check_Buttons
  2836 ;;		_Del_Data
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text14
  2841  0013C2                     __ptext14:
  2842                           	opt stack 0
  2843  0013C2                     _Save_Data:
  2844                           	opt stack 24
  2845                           
  2846                           ;storage.c: 10: EEADR = store_address;
  2847                           
  2848                           ;incstack = 0
  2849  0013C2  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2850                           
  2851                           ;storage.c: 11: EEDATA = store;
  2852  0013C6  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2853                           
  2854                           ;storage.c: 12: EECON1bits.EEPGD = 0;
  2855  0013CA  9EA6               	bcf	4006,7,c	;volatile
  2856                           
  2857                           ;storage.c: 13: EECON1bits.CFGS = 0;
  2858  0013CC  9CA6               	bcf	4006,6,c	;volatile
  2859                           
  2860                           ;storage.c: 14: INTCONbits.GIE = 0;
  2861  0013CE  9EF2               	bcf	intcon,7,c	;volatile
  2862                           
  2863                           ;storage.c: 15: EECON1bits.WREN = 1;
  2864  0013D0  84A6               	bsf	4006,2,c	;volatile
  2865                           
  2866                           ;storage.c: 16: EECON2 = 0x55;
  2867  0013D2  0E55               	movlw	85
  2868  0013D4  6EA7               	movwf	4007,c	;volatile
  2869                           
  2870                           ;storage.c: 17: EECON2 = 0xAA;
  2871  0013D6  0EAA               	movlw	170
  2872  0013D8  6EA7               	movwf	4007,c	;volatile
  2873                           
  2874                           ;storage.c: 18: EECON1bits.WR = 1;
  2875  0013DA  82A6               	bsf	4006,1,c	;volatile
  2876  0013DC                     l359:
  2877  0013DC  A8A1               	btfss	4001,4,c	;volatile
  2878  0013DE  D7FE               	goto	l359
  2879                           
  2880                           ;storage.c: 20: PIR2bits.EEIF = 0;
  2881  0013E0  98A1               	bcf	4001,4,c	;volatile
  2882                           
  2883                           ;storage.c: 21: store >>= 8;
  2884  0013E2  0100               	movlb	0	; () banked
  2885  0013E4  5161               	movf	(Save_Data@store+1)& (0+255),w,b
  2886  0013E6  6F60               	movwf	Save_Data@store& (0+255),b
  2887  0013E8  6B61               	clrf	(Save_Data@store+1)& (0+255),b
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;storage.c: 22: store_address += 50;
  2891  0013EA  0E32               	movlw	50
  2892  0013EC  0100               	movlb	0	; () banked
  2893  0013EE  2762               	addwf	Save_Data@store_address& (0+255),f,b
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;storage.c: 23: EEADR = store_address;
  2897  0013F0  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;storage.c: 24: EEDATA = store;
  2901  0013F4  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;storage.c: 25: EECON1bits.EEPGD = 0;
  2905  0013F8  9EA6               	bcf	4006,7,c	;volatile
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;storage.c: 26: EECON1bits.CFGS = 0;
  2909  0013FA  9CA6               	bcf	4006,6,c	;volatile
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;storage.c: 27: EECON1bits.WREN = 1;
  2913  0013FC  84A6               	bsf	4006,2,c	;volatile
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;storage.c: 28: INTCONbits.GIE = 0;
  2917  0013FE  9EF2               	bcf	intcon,7,c	;volatile
  2918                           
  2919                           ; BSR set to: 0
  2920                           ;storage.c: 29: EECON2 = 0x55;
  2921  001400  0E55               	movlw	85
  2922  001402  6EA7               	movwf	4007,c	;volatile
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;storage.c: 30: EECON2 = 0xAA;
  2926  001404  0EAA               	movlw	170
  2927  001406  6EA7               	movwf	4007,c	;volatile
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;storage.c: 31: EECON1bits.WR = 1;
  2931  001408  82A6               	bsf	4006,1,c	;volatile
  2932  00140A                     l362:
  2933  00140A  A8A1               	btfss	4001,4,c	;volatile
  2934  00140C  D7FE               	goto	l362
  2935                           
  2936                           ;storage.c: 33: PIR2bits.EEIF = 0;
  2937  00140E  98A1               	bcf	4001,4,c	;volatile
  2938                           
  2939                           ;storage.c: 34: EECON1bits.WREN = 0;
  2940  001410  94A6               	bcf	4006,2,c	;volatile
  2941                           
  2942                           ;storage.c: 35: INTCONbits.GIE = 1;
  2943  001412  8EF2               	bsf	intcon,7,c	;volatile
  2944  001414  0012               	return		;funcret
  2945  001416                     __end_of_Save_Data:
  2946                           	opt stack 0
  2947                           tblptru	equ	0xFF8
  2948                           tblptrh	equ	0xFF7
  2949                           tblptrl	equ	0xFF6
  2950                           tablat	equ	0xFF5
  2951                           prodh	equ	0xFF4
  2952                           prodl	equ	0xFF3
  2953                           intcon	equ	0xFF2
  2954                           postinc0	equ	0xFEE
  2955                           wreg	equ	0xFE8
  2956                           postdec1	equ	0xFE5
  2957                           fsr1l	equ	0xFE1
  2958                           indf2	equ	0xFDF
  2959                           postinc2	equ	0xFDE
  2960                           postdec2	equ	0xFDD
  2961                           plusw2	equ	0xFDB
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _Load_Data *****************
  2967 ;; Defined at:
  2968 ;;		line 65 in file "storage.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  counter         1   23[BANK0 ] unsigned char 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;		None               void
  2975 ;; Registers used:
  2976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1
  2982 ;;      Params:         0       0       0
  2983 ;;      Locals:         0       1       0
  2984 ;;      Temps:          0       1       0
  2985 ;;      Totals:         0       2       0
  2986 ;;Total ram usage:        2 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:    9
  2989 ;; This function calls:
  2990 ;;		_Delay_Routine
  2991 ;;		_Evaluate_Display
  2992 ;;		_Read_Data
  2993 ;;		_Set_Display
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;;		_Del_Data
  2997 ;; This function uses a non-reentrant model
  2998 ;;
  2999                           
  3000                           	psect	text15
  3001  000CA8                     __ptext15:
  3002                           	opt stack 0
  3003  000CA8                     _Load_Data:
  3004                           	opt stack 21
  3005                           
  3006                           ;storage.c: 66: string_load[0] = 'L';
  3007                           
  3008                           ;incstack = 0
  3009  000CA8  0E4C               	movlw	76
  3010  000CAA  0100               	movlb	0	; () banked
  3011  000CAC  6F83               	movwf	_string_load& (0+255),b
  3012                           
  3013                           ;storage.c: 67: string_load[1] = 'O';
  3014  000CAE  0E4F               	movlw	79
  3015  000CB0  0100               	movlb	0	; () banked
  3016  000CB2  6F84               	movwf	(_string_load+1)& (0+255),b
  3017                           
  3018                           ;storage.c: 68: string_load[2] = 'A';
  3019  000CB4  0E41               	movlw	65
  3020  000CB6  0100               	movlb	0	; () banked
  3021  000CB8  6F85               	movwf	(_string_load+2)& (0+255),b
  3022                           
  3023                           ; BSR set to: 0
  3024                           ;storage.c: 70: Evaluate_Display(3, string_load);
  3025  000CBA  0E83               	movlw	low _string_load
  3026  000CBC  0100               	movlb	0	; () banked
  3027  000CBE  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3028  000CC0  0E00               	movlw	high _string_load
  3029  000CC2  0100               	movlb	0	; () banked
  3030  000CC4  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3031  000CC6  0E03               	movlw	3
  3032  000CC8  ECC5  F003         	call	_Evaluate_Display
  3033                           
  3034                           ;storage.c: 71: Delay_Routine(3);
  3035  000CCC  0E03               	movlw	3
  3036  000CCE  EC21  F00B         	call	_Delay_Routine
  3037                           
  3038                           ;storage.c: 72: for(unsigned char counter = 0; counter < 30; counter++) {
  3039  000CD2  0E00               	movlw	0
  3040  000CD4  0100               	movlb	0	; () banked
  3041  000CD6  6F77               	movwf	Load_Data@counter& (0+255),b
  3042  000CD8                     l3012:
  3043                           
  3044                           ; BSR set to: 0
  3045  000CD8  0E1D               	movlw	29
  3046  000CDA  0100               	movlb	0	; () banked
  3047  000CDC  6577               	cpfsgt	Load_Data@counter& (0+255),b
  3048  000CDE  D001               	goto	l3016
  3049  000CE0  D01A               	goto	l3022
  3050  000CE2                     l3016:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;storage.c: 73: pin[counter].time = Read_Data(counter);
  3054  000CE2  0100               	movlb	0	; () banked
  3055  000CE4  5177               	movf	Load_Data@counter& (0+255),w,b
  3056  000CE6  EC0B  F00A         	call	_Read_Data
  3057  000CEA  0100               	movlb	0	; () banked
  3058  000CEC  5177               	movf	Load_Data@counter& (0+255),w,b
  3059  000CEE  0D06               	mullw	6
  3060  000CF0  0E04               	movlw	4
  3061  000CF2  26F3               	addwf	prodl,f,c
  3062  000CF4  0E00               	movlw	0
  3063  000CF6  22F4               	addwfc	prodh,f,c
  3064  000CF8  0E00               	movlw	low _pin
  3065  000CFA  24F3               	addwf	prodl,w,c
  3066  000CFC  6ED9               	movwf	fsr2l,c
  3067  000CFE  0E01               	movlw	high _pin
  3068  000D00  20F4               	addwfc	prodh,w,c
  3069  000D02  6EDA               	movwf	fsr2h,c
  3070  000D04  0100               	movlb	0	; () banked
  3071  000D06  C060  FFDE         	movff	?_Read_Data,postinc2
  3072  000D0A  0100               	movlb	0	; () banked
  3073  000D0C  C061  FFDD         	movff	?_Read_Data+1,postdec2
  3074                           
  3075                           ; BSR set to: 0
  3076  000D10  0100               	movlb	0	; () banked
  3077  000D12  2B77               	incf	Load_Data@counter& (0+255),f,b
  3078  000D14  D7E1               	goto	l3012
  3079  000D16                     l3022:
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;storage.c: 74: }
  3083                           ;storage.c: 75: slave_selected = 0;
  3084  000D16  0E00               	movlw	0
  3085  000D18  0100               	movlb	0	; () banked
  3086  000D1A  6F7C               	movwf	_slave_selected& (0+255),b
  3087                           
  3088                           ;storage.c: 76: pin_selected = 0;
  3089  000D1C  0E00               	movlw	0
  3090  000D1E  0100               	movlb	0	; () banked
  3091  000D20  6F7B               	movwf	_pin_selected& (0+255),b
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;storage.c: 77: Set_Display('7', 'E', pin[pin_selected].slave);
  3095  000D22  0E45               	movlw	69
  3096  000D24  0100               	movlb	0	; () banked
  3097  000D26  6F72               	movwf	Set_Display@information& (0+255),b
  3098  000D28  0100               	movlb	0	; () banked
  3099  000D2A  517B               	movf	_pin_selected& (0+255),w,b
  3100  000D2C  0D06               	mullw	6
  3101  000D2E  0E00               	movlw	low _pin
  3102  000D30  24F3               	addwf	prodl,w,c
  3103  000D32  6ED9               	movwf	fsr2l,c
  3104  000D34  0E01               	movlw	high _pin
  3105  000D36  20F4               	addwfc	prodh,w,c
  3106  000D38  6EDA               	movwf	fsr2h,c
  3107  000D3A  50DF               	movf	indf2,w,c
  3108  000D3C  0100               	movlb	0	; () banked
  3109  000D3E  6F76               	movwf	??_Load_Data& (0+255),b
  3110  000D40  0100               	movlb	0	; () banked
  3111  000D42  5176               	movf	??_Load_Data& (0+255),w,b
  3112  000D44  0100               	movlb	0	; () banked
  3113  000D46  6F73               	movwf	Set_Display@value& (0+255),b
  3114  000D48  6B74               	clrf	(Set_Display@value+1)& (0+255),b
  3115  000D4A  0E37               	movlw	55
  3116  000D4C  ECC4  F008         	call	_Set_Display
  3117                           
  3118                           ;storage.c: 79: Delay_Routine(20);
  3119  000D50  0E14               	movlw	20
  3120  000D52  EC21  F00B         	call	_Delay_Routine
  3121                           
  3122                           ;storage.c: 80: Set_Display('7', 'A', pin[pin_selected].output);
  3123  000D56  0E41               	movlw	65
  3124  000D58  0100               	movlb	0	; () banked
  3125  000D5A  6F72               	movwf	Set_Display@information& (0+255),b
  3126  000D5C  0100               	movlb	0	; () banked
  3127  000D5E  517B               	movf	_pin_selected& (0+255),w,b
  3128  000D60  0D06               	mullw	6
  3129  000D62  0E01               	movlw	1
  3130  000D64  26F3               	addwf	prodl,f,c
  3131  000D66  0E00               	movlw	0
  3132  000D68  22F4               	addwfc	prodh,f,c
  3133  000D6A  0E00               	movlw	low _pin
  3134  000D6C  24F3               	addwf	prodl,w,c
  3135  000D6E  6ED9               	movwf	fsr2l,c
  3136  000D70  0E01               	movlw	high _pin
  3137  000D72  20F4               	addwfc	prodh,w,c
  3138  000D74  6EDA               	movwf	fsr2h,c
  3139  000D76  50DF               	movf	indf2,w,c
  3140  000D78  0100               	movlb	0	; () banked
  3141  000D7A  6F76               	movwf	??_Load_Data& (0+255),b
  3142  000D7C  0100               	movlb	0	; () banked
  3143  000D7E  5176               	movf	??_Load_Data& (0+255),w,b
  3144  000D80  0100               	movlb	0	; () banked
  3145  000D82  6F73               	movwf	Set_Display@value& (0+255),b
  3146  000D84  6B74               	clrf	(Set_Display@value+1)& (0+255),b
  3147  000D86  0E37               	movlw	55
  3148  000D88  ECC4  F008         	call	_Set_Display
  3149                           
  3150                           ;storage.c: 81: Delay_Routine(20);
  3151  000D8C  0E14               	movlw	20
  3152  000D8E  EC21  F00B         	call	_Delay_Routine
  3153                           
  3154                           ;storage.c: 82: Set_Display('7', '-', pin[pin_selected].time);
  3155  000D92  0E2D               	movlw	45
  3156  000D94  0100               	movlb	0	; () banked
  3157  000D96  6F72               	movwf	Set_Display@information& (0+255),b
  3158  000D98  0100               	movlb	0	; () banked
  3159  000D9A  517B               	movf	_pin_selected& (0+255),w,b
  3160  000D9C  0D06               	mullw	6
  3161  000D9E  0E04               	movlw	4
  3162  000DA0  26F3               	addwf	prodl,f,c
  3163  000DA2  0E00               	movlw	0
  3164  000DA4  22F4               	addwfc	prodh,f,c
  3165  000DA6  0E00               	movlw	low _pin
  3166  000DA8  24F3               	addwf	prodl,w,c
  3167  000DAA  6ED9               	movwf	fsr2l,c
  3168  000DAC  0E01               	movlw	high _pin
  3169  000DAE  20F4               	addwfc	prodh,w,c
  3170  000DB0  6EDA               	movwf	fsr2h,c
  3171  000DB2  CFDE F073          	movff	postinc2,Set_Display@value
  3172  000DB6  CFDD F074          	movff	postdec2,Set_Display@value+1
  3173  000DBA  0E37               	movlw	55
  3174  000DBC  ECC4  F008         	call	_Set_Display
  3175                           
  3176                           ;storage.c: 83: Delay_Routine(20);
  3177  000DC0  0E14               	movlw	20
  3178  000DC2  EC21  F00B         	call	_Delay_Routine
  3179  000DC6  0012               	return		;funcret
  3180  000DC8                     __end_of_Load_Data:
  3181                           	opt stack 0
  3182                           tblptru	equ	0xFF8
  3183                           tblptrh	equ	0xFF7
  3184                           tblptrl	equ	0xFF6
  3185                           tablat	equ	0xFF5
  3186                           prodh	equ	0xFF4
  3187                           prodl	equ	0xFF3
  3188                           intcon	equ	0xFF2
  3189                           postinc0	equ	0xFEE
  3190                           wreg	equ	0xFE8
  3191                           postdec1	equ	0xFE5
  3192                           fsr1l	equ	0xFE1
  3193                           indf2	equ	0xFDF
  3194                           postinc2	equ	0xFDE
  3195                           postdec2	equ	0xFDD
  3196                           plusw2	equ	0xFDB
  3197                           fsr2h	equ	0xFDA
  3198                           fsr2l	equ	0xFD9
  3199                           status	equ	0xFD8
  3200                           
  3201 ;; *************** function _Set_Display *****************
  3202 ;; Defined at:
  3203 ;;		line 139 in file "display.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  type            1    wreg     unsigned char 
  3206 ;;  information     1   18[BANK0 ] unsigned char 
  3207 ;;  value           2   19[BANK0 ] unsigned int 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  type            1   21[BANK0 ] unsigned char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;		None               void
  3212 ;; Registers used:
  3213 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1
  3219 ;;      Params:         0       3       0
  3220 ;;      Locals:         0       1       0
  3221 ;;      Temps:          0       0       0
  3222 ;;      Totals:         0       4       0
  3223 ;;Total ram usage:        4 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    8
  3226 ;; This function calls:
  3227 ;;		_Evaluate_Display
  3228 ;;		_Evaluate_Signs
  3229 ;;		_Write_Display_Byte
  3230 ;; This function is called by:
  3231 ;;		_main
  3232 ;;		_Check_Buttons
  3233 ;;		_Load_Data
  3234 ;; This function uses a non-reentrant model
  3235 ;;
  3236                           
  3237                           	psect	text16
  3238  001188                     __ptext16:
  3239                           	opt stack 0
  3240  001188                     _Set_Display:
  3241                           	opt stack 22
  3242                           
  3243                           ;incstack = 0
  3244                           ;Set_Display@type stored from wreg
  3245  001188  0100               	movlb	0	; () banked
  3246  00118A  6F75               	movwf	Set_Display@type& (0+255),b
  3247                           
  3248                           ;display.c: 141: switch (type) {
  3249  00118C  D020               	goto	l2968
  3250  00118E                     l2952:
  3251                           
  3252                           ;display.c: 143: if(information != '-') {
  3253  00118E  0E2D               	movlw	45
  3254  001190  0100               	movlb	0	; () banked
  3255  001192  1972               	xorwf	Set_Display@information& (0+255),w,b
  3256  001194  B4D8               	btfsc	status,2,c
  3257  001196  D014               	goto	l2964
  3258                           
  3259                           ; BSR set to: 0
  3260                           ;display.c: 144: signs[0] = value;
  3261  001198  C073  F07D         	movff	Set_Display@value,_signs
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;display.c: 145: signs[0] += 0x30;
  3265  00119C  0E30               	movlw	48
  3266  00119E  0100               	movlb	0	; () banked
  3267  0011A0  277D               	addwf	_signs& (0+255),f,b
  3268                           
  3269                           ; BSR set to: 0
  3270                           ;display.c: 146: signs[1] = '-';
  3271  0011A2  0E2D               	movlw	45
  3272  0011A4  0100               	movlb	0	; () banked
  3273  0011A6  6F7E               	movwf	(_signs+1)& (0+255),b
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;display.c: 147: signs[2] = information;
  3277  0011A8  C072  F07F         	movff	Set_Display@information,_signs+2
  3278                           
  3279                           ; BSR set to: 0
  3280                           ;display.c: 148: Evaluate_Display(sizeof(signs), signs);
  3281  0011AC  0E7D               	movlw	low _signs
  3282  0011AE  0100               	movlb	0	; () banked
  3283  0011B0  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3284  0011B2  0E00               	movlw	high _signs
  3285  0011B4  0100               	movlb	0	; () banked
  3286  0011B6  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3287  0011B8  0E03               	movlw	3
  3288  0011BA  ECC5  F003         	call	_Evaluate_Display
  3289                           
  3290                           ;display.c: 149: } else {
  3291  0011BE  D00D               	goto	l2970
  3292  0011C0                     l2964:
  3293                           
  3294                           ;display.c: 150: Evaluate_Signs(value);
  3295  0011C0  C073  F06F         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  3296  0011C4  C074  F070         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  3297  0011C8  EC52  F008         	call	_Evaluate_Signs	;wreg free
  3298                           
  3299                           ;display.c: 156: }
  3300                           
  3301                           ;display.c: 155: break;
  3302                           
  3303                           ;display.c: 153: case 'L':
  3304                           
  3305                           ;display.c: 151: }
  3306                           ;display.c: 152: break;
  3307  0011CC  D006               	goto	l2970
  3308  0011CE                     l2968:
  3309  0011CE  0100               	movlb	0	; () banked
  3310  0011D0  5175               	movf	Set_Display@type& (0+255),w,b
  3311                           
  3312                           ; Switch size 1, requested type "space"
  3313                           ; Number of cases is 2, Range of values is 55 to 76
  3314                           ; switch strategies available:
  3315                           ; Name         Instructions Cycles
  3316                           ; simple_byte            7     4 (average)
  3317                           ;	Chosen strategy is simple_byte
  3318  0011D2  0A37               	xorlw	55	; case 55
  3319  0011D4  B4D8               	btfsc	status,2,c
  3320  0011D6  D7DB               	goto	l2952
  3321  0011D8  0A7B               	xorlw	123	; case 76
  3322  0011DA                     l2970:
  3323                           
  3324                           ;display.c: 157: Write_Display_Byte(pixels);
  3325  0011DA  0E35               	movlw	low _pixels
  3326  0011DC  0100               	movlb	0	; () banked
  3327  0011DE  6F60               	movwf	Write_Display_Byte@write_data& (0+255),b
  3328  0011E0  0E00               	movlw	high _pixels
  3329  0011E2  0100               	movlb	0	; () banked
  3330  0011E4  6F61               	movwf	(Write_Display_Byte@write_data+1)& (0+255),b
  3331  0011E6  EC28  F009         	call	_Write_Display_Byte	;wreg free
  3332  0011EA  0012               	return		;funcret
  3333  0011EC                     __end_of_Set_Display:
  3334                           	opt stack 0
  3335                           tblptru	equ	0xFF8
  3336                           tblptrh	equ	0xFF7
  3337                           tblptrl	equ	0xFF6
  3338                           tablat	equ	0xFF5
  3339                           prodh	equ	0xFF4
  3340                           prodl	equ	0xFF3
  3341                           intcon	equ	0xFF2
  3342                           postinc0	equ	0xFEE
  3343                           wreg	equ	0xFE8
  3344                           postdec1	equ	0xFE5
  3345                           fsr1l	equ	0xFE1
  3346                           indf2	equ	0xFDF
  3347                           postinc2	equ	0xFDE
  3348                           postdec2	equ	0xFDD
  3349                           plusw2	equ	0xFDB
  3350                           fsr2h	equ	0xFDA
  3351                           fsr2l	equ	0xFD9
  3352                           status	equ	0xFD8
  3353                           
  3354 ;; *************** function _Write_Display_Byte *****************
  3355 ;; Defined at:
  3356 ;;		line 56 in file "communication.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  write_data      2    0[BANK0 ] PTR unsigned char 
  3359 ;;		 -> pixels(7), 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  counter         1    6[BANK0 ] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;		None               void
  3364 ;; Registers used:
  3365 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1
  3371 ;;      Params:         0       2       0
  3372 ;;      Locals:         0       1       0
  3373 ;;      Temps:          0       4       0
  3374 ;;      Totals:         0       7       0
  3375 ;;Total ram usage:        7 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    5
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_Set_Display
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text17
  3386  001250                     __ptext17:
  3387                           	opt stack 0
  3388  001250                     _Write_Display_Byte:
  3389                           	opt stack 24
  3390                           
  3391                           ;communication.c: 57: for(unsigned char counter = sizeof(pixels); counter > 0;
  3392                           
  3393                           ;incstack = 0
  3394  001250  0E07               	movlw	7
  3395  001252  0100               	movlb	0	; () banked
  3396  001254  6F66               	movwf	Write_Display_Byte@counter& (0+255),b
  3397  001256                     
  3398                           ;communication.c: 58: counter--) {
  3399  001256  0100               	movlb	0	; () banked
  3400  001258  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3401  00125A  0100               	movlb	0	; () banked
  3402  00125C  B4D8               	btfsc	status,2,c
  3403  00125E  0012               	return	
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;communication.c: 59: if(SSP1IF = 1) {
  3407                           
  3408                           ; BSR set to: 0
  3409  001260  869E               	bsf	3998,3,c	;volatile
  3410  001262  B69E               	btfsc	3998,3,c	;volatile
  3411                           
  3412                           ; BSR set to: 0
  3413                           ;communication.c: 60: SSP1IF = 0;
  3414  001264  969E               	bcf	3998,3,c	;volatile
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;communication.c: 61: }
  3418                           ;communication.c: 62: SSP1BUF = write_data[counter - 1];
  3419                           
  3420                           ; BSR set to: 0
  3421  001266  0EFF               	movlw	255
  3422  001268  0100               	movlb	0	; () banked
  3423  00126A  6F62               	movwf	??_Write_Display_Byte& (0+255),b
  3424  00126C  0EFF               	movlw	255
  3425  00126E  0100               	movlb	0	; () banked
  3426  001270  6F63               	movwf	(??_Write_Display_Byte+1)& (0+255),b
  3427  001272  0100               	movlb	0	; () banked
  3428  001274  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3429  001276  0100               	movlb	0	; () banked
  3430  001278  6F64               	movwf	(??_Write_Display_Byte+2)& (0+255),b
  3431  00127A  6B65               	clrf	(??_Write_Display_Byte+3)& (0+255),b
  3432  00127C  0100               	movlb	0	; () banked
  3433  00127E  5162               	movf	??_Write_Display_Byte& (0+255),w,b
  3434  001280  0100               	movlb	0	; () banked
  3435  001282  2764               	addwf	(??_Write_Display_Byte+2)& (0+255),f,b
  3436  001284  0100               	movlb	0	; () banked
  3437  001286  5163               	movf	(??_Write_Display_Byte+1)& (0+255),w,b
  3438  001288  0100               	movlb	0	; () banked
  3439  00128A  2365               	addwfc	(??_Write_Display_Byte+3)& (0+255),f,b
  3440  00128C  0100               	movlb	0	; () banked
  3441  00128E  5164               	movf	(??_Write_Display_Byte+2)& (0+255),w,b
  3442  001290  0100               	movlb	0	; () banked
  3443  001292  2560               	addwf	Write_Display_Byte@write_data& (0+255),w,b
  3444  001294  6ED9               	movwf	fsr2l,c
  3445  001296  0100               	movlb	0	; () banked
  3446  001298  5165               	movf	(??_Write_Display_Byte+3)& (0+255),w,b
  3447  00129A  0100               	movlb	0	; () banked
  3448  00129C  2161               	addwfc	(Write_Display_Byte@write_data+1)& (0+255),w,b
  3449  00129E  6EDA               	movwf	fsr2h,c
  3450  0012A0  50DF               	movf	indf2,w,c
  3451  0012A2  6EC9               	movwf	4041,c	;volatile
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;communication.c: 64: SSP1IF = 0;
  3455  0012A4  969E               	bcf	3998,3,c	;volatile
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;communication.c: 65: PORTCbits.RC0 = 0;
  3459  0012A6  9082               	bcf	3970,0,c	;volatile
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;communication.c: 66: PORTCbits.RC0 = 1;
  3463  0012A8  8082               	bsf	3970,0,c	;volatile
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;communication.c: 67: PORTCbits.RC0 = 0;
  3467  0012AA  9082               	bcf	3970,0,c	;volatile
  3468                           
  3469                           ; BSR set to: 0
  3470  0012AC  0100               	movlb	0	; () banked
  3471  0012AE  0766               	decf	Write_Display_Byte@counter& (0+255),f,b
  3472  0012B0  D7D2               	goto	L3
  3473  0012B2                     __end_of_Write_Display_Byte:
  3474                           	opt stack 0
  3475                           tblptru	equ	0xFF8
  3476                           tblptrh	equ	0xFF7
  3477                           tblptrl	equ	0xFF6
  3478                           tablat	equ	0xFF5
  3479                           prodh	equ	0xFF4
  3480                           prodl	equ	0xFF3
  3481                           intcon	equ	0xFF2
  3482                           postinc0	equ	0xFEE
  3483                           wreg	equ	0xFE8
  3484                           postdec1	equ	0xFE5
  3485                           fsr1l	equ	0xFE1
  3486                           indf2	equ	0xFDF
  3487                           postinc2	equ	0xFDE
  3488                           postdec2	equ	0xFDD
  3489                           plusw2	equ	0xFDB
  3490                           fsr2h	equ	0xFDA
  3491                           fsr2l	equ	0xFD9
  3492                           status	equ	0xFD8
  3493                           
  3494 ;; *************** function _Evaluate_Signs *****************
  3495 ;; Defined at:
  3496 ;;		line 119 in file "display.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  evaluation_v    2   15[BANK0 ] unsigned int 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  valuecounter    1   17[BANK0 ] unsigned char 
  3501 ;; Return value:  Size  Location     Type
  3502 ;;		None               void
  3503 ;; Registers used:
  3504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMRAM   BANK0   BANK1
  3510 ;;      Params:         0       2       0
  3511 ;;      Locals:         0       1       0
  3512 ;;      Temps:          0       0       0
  3513 ;;      Totals:         0       3       0
  3514 ;;Total ram usage:        3 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    7
  3517 ;; This function calls:
  3518 ;;		_Evaluate_Display
  3519 ;;		___lwmod
  3520 ;; This function is called by:
  3521 ;;		_Set_Display
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text18
  3526  0010A4                     __ptext18:
  3527                           	opt stack 0
  3528  0010A4                     _Evaluate_Signs:
  3529                           	opt stack 22
  3530                           
  3531                           ;display.c: 120: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;incstack = 0
  3535  0010A4  0E00               	movlw	0
  3536  0010A6  0100               	movlb	0	; () banked
  3537  0010A8  6F71               	movwf	Evaluate_Signs@valuecounter& (0+255),b
  3538  0010AA                     l2906:
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;display.c: 121: valuecounter++) {
  3542  0010AA  0E02               	movlw	2
  3543  0010AC  0100               	movlb	0	; () banked
  3544  0010AE  6571               	cpfsgt	Evaluate_Signs@valuecounter& (0+255),b
  3545  0010B0  D001               	goto	l2910
  3546  0010B2  D029               	goto	l454
  3547  0010B4                     l2910:
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;display.c: 122: signs[valuecounter] = evaluation_value % 10;
  3551  0010B4  0100               	movlb	0	; () banked
  3552  0010B6  5171               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3553  0010B8  0D01               	mullw	1
  3554  0010BA  0E7D               	movlw	low _signs
  3555  0010BC  24F3               	addwf	prodl,w,c
  3556  0010BE  6ED9               	movwf	fsr2l,c
  3557  0010C0  0E00               	movlw	high _signs
  3558  0010C2  20F4               	addwfc	prodh,w,c
  3559  0010C4  6EDA               	movwf	fsr2h,c
  3560  0010C6  C06F  F060         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  3561  0010CA  C070  F061         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  3562  0010CE  0E00               	movlw	0
  3563  0010D0  0100               	movlb	0	; () banked
  3564  0010D2  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  3565  0010D4  0E0A               	movlw	10
  3566  0010D6  6F62               	movwf	___lwmod@divisor& (0+255),b
  3567  0010D8  EC59  F009         	call	___lwmod	;wreg free
  3568  0010DC  0100               	movlb	0	; () banked
  3569  0010DE  5160               	movf	?___lwmod& (0+255),w,b
  3570  0010E0  6EDF               	movwf	indf2,c
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;display.c: 123: signs[valuecounter] += 0x30;
  3574  0010E2  0100               	movlb	0	; () banked
  3575  0010E4  5171               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3576  0010E6  0D01               	mullw	1
  3577  0010E8  0E7D               	movlw	low _signs
  3578  0010EA  24F3               	addwf	prodl,w,c
  3579  0010EC  6ED9               	movwf	fsr2l,c
  3580  0010EE  0E00               	movlw	high _signs
  3581  0010F0  20F4               	addwfc	prodh,w,c
  3582  0010F2  6EDA               	movwf	fsr2h,c
  3583  0010F4  0E30               	movlw	48
  3584  0010F6  26DF               	addwf	indf2,f,c
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;display.c: 124: evaluation_value >>= 1;
  3588  0010F8  0100               	movlb	0	; () banked
  3589  0010FA  90D8               	bcf	status,0,c
  3590  0010FC  3370               	rrcf	(Evaluate_Signs@evaluation_value+1)& (0+255),f,b
  3591  0010FE  336F               	rrcf	Evaluate_Signs@evaluation_value& (0+255),f,b
  3592                           
  3593                           ; BSR set to: 0
  3594  001100  0100               	movlb	0	; () banked
  3595  001102  2B71               	incf	Evaluate_Signs@valuecounter& (0+255),f,b
  3596  001104  D7D2               	goto	l2906
  3597  001106                     l454:
  3598                           
  3599                           ; BSR set to: 0
  3600                           ;display.c: 125: }
  3601                           ;display.c: 126: __nop();
  3602  001106  F000               	nop	
  3603                           
  3604                           ;display.c: 127: Evaluate_Display(sizeof(signs), signs);
  3605  001108  0E7D               	movlw	low _signs
  3606  00110A  0100               	movlb	0	; () banked
  3607  00110C  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3608  00110E  0E00               	movlw	high _signs
  3609  001110  0100               	movlb	0	; () banked
  3610  001112  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3611  001114  0E03               	movlw	3
  3612  001116  ECC5  F003         	call	_Evaluate_Display
  3613  00111A  0012               	return		;funcret
  3614  00111C                     __end_of_Evaluate_Signs:
  3615                           	opt stack 0
  3616                           tblptru	equ	0xFF8
  3617                           tblptrh	equ	0xFF7
  3618                           tblptrl	equ	0xFF6
  3619                           tablat	equ	0xFF5
  3620                           prodh	equ	0xFF4
  3621                           prodl	equ	0xFF3
  3622                           intcon	equ	0xFF2
  3623                           postinc0	equ	0xFEE
  3624                           wreg	equ	0xFE8
  3625                           postdec1	equ	0xFE5
  3626                           fsr1l	equ	0xFE1
  3627                           indf2	equ	0xFDF
  3628                           postinc2	equ	0xFDE
  3629                           postdec2	equ	0xFDD
  3630                           plusw2	equ	0xFDB
  3631                           fsr2h	equ	0xFDA
  3632                           fsr2l	equ	0xFD9
  3633                           status	equ	0xFD8
  3634                           
  3635 ;; *************** function ___lwmod *****************
  3636 ;; Defined at:
  3637 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;  dividend        2    0[BANK0 ] unsigned int 
  3640 ;;  divisor         2    2[BANK0 ] unsigned int 
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;  counter         1    4[BANK0 ] unsigned char 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  2    0[BANK0 ] unsigned int 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1
  3652 ;;      Params:         0       4       0
  3653 ;;      Locals:         0       1       0
  3654 ;;      Temps:          0       0       0
  3655 ;;      Totals:         0       5       0
  3656 ;;Total ram usage:        5 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    5
  3659 ;; This function calls:
  3660 ;;		Nothing
  3661 ;; This function is called by:
  3662 ;;		_Evaluate_Signs
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text19
  3667  0012B2                     __ptext19:
  3668                           	opt stack 0
  3669  0012B2                     ___lwmod:
  3670                           	opt stack 23
  3671                           
  3672                           ;incstack = 0
  3673  0012B2  0100               	movlb	0	; () banked
  3674  0012B4  5162               	movf	___lwmod@divisor& (0+255),w,b
  3675  0012B6  0100               	movlb	0	; () banked
  3676  0012B8  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3677  0012BA  B4D8               	btfsc	status,2,c
  3678  0012BC  D026               	goto	l1041
  3679                           
  3680                           ; BSR set to: 0
  3681  0012BE  0E01               	movlw	1
  3682  0012C0  0100               	movlb	0	; () banked
  3683  0012C2  6F64               	movwf	___lwmod@counter& (0+255),b
  3684  0012C4  D006               	goto	l2894
  3685  0012C6                     l2892:
  3686                           
  3687                           ; BSR set to: 0
  3688  0012C6  0100               	movlb	0	; () banked
  3689  0012C8  90D8               	bcf	status,0,c
  3690  0012CA  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  3691  0012CC  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3692  0012CE  0100               	movlb	0	; () banked
  3693  0012D0  2B64               	incf	___lwmod@counter& (0+255),f,b
  3694  0012D2                     l2894:
  3695                           
  3696                           ; BSR set to: 0
  3697  0012D2  0100               	movlb	0	; () banked
  3698  0012D4  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3699  0012D6  D7F7               	goto	l2892
  3700  0012D8                     l2896:
  3701                           
  3702                           ; BSR set to: 0
  3703  0012D8  0100               	movlb	0	; () banked
  3704  0012DA  5162               	movf	___lwmod@divisor& (0+255),w,b
  3705  0012DC  0100               	movlb	0	; () banked
  3706  0012DE  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  3707  0012E0  0100               	movlb	0	; () banked
  3708  0012E2  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3709  0012E4  0100               	movlb	0	; () banked
  3710  0012E6  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3711  0012E8  A0D8               	btfss	status,0,c
  3712  0012EA  D008               	goto	l2900
  3713                           
  3714                           ; BSR set to: 0
  3715  0012EC  0100               	movlb	0	; () banked
  3716  0012EE  5162               	movf	___lwmod@divisor& (0+255),w,b
  3717  0012F0  0100               	movlb	0	; () banked
  3718  0012F2  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  3719  0012F4  0100               	movlb	0	; () banked
  3720  0012F6  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3721  0012F8  0100               	movlb	0	; () banked
  3722  0012FA  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3723  0012FC                     l2900:
  3724                           
  3725                           ; BSR set to: 0
  3726  0012FC  0100               	movlb	0	; () banked
  3727  0012FE  90D8               	bcf	status,0,c
  3728  001300  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3729  001302  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  3730                           
  3731                           ; BSR set to: 0
  3732  001304  0100               	movlb	0	; () banked
  3733  001306  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  3734  001308  D7E7               	goto	l2896
  3735  00130A                     l1041:
  3736                           
  3737                           ; BSR set to: 0
  3738  00130A  C060  F060         	movff	___lwmod@dividend,?___lwmod
  3739  00130E  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  3740                           
  3741                           ; BSR set to: 0
  3742  001312  0012               	return		;funcret
  3743  001314                     __end_of___lwmod:
  3744                           	opt stack 0
  3745                           tblptru	equ	0xFF8
  3746                           tblptrh	equ	0xFF7
  3747                           tblptrl	equ	0xFF6
  3748                           tablat	equ	0xFF5
  3749                           prodh	equ	0xFF4
  3750                           prodl	equ	0xFF3
  3751                           intcon	equ	0xFF2
  3752                           postinc0	equ	0xFEE
  3753                           wreg	equ	0xFE8
  3754                           postdec1	equ	0xFE5
  3755                           fsr1l	equ	0xFE1
  3756                           indf2	equ	0xFDF
  3757                           postinc2	equ	0xFDE
  3758                           postdec2	equ	0xFDD
  3759                           plusw2	equ	0xFDB
  3760                           fsr2h	equ	0xFDA
  3761                           fsr2l	equ	0xFD9
  3762                           status	equ	0xFD8
  3763                           
  3764 ;; *************** function _Evaluate_Display *****************
  3765 ;; Defined at:
  3766 ;;		line 52 in file "display.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  size            1    wreg     unsigned char 
  3769 ;;  evaluate        2    8[BANK0 ] PTR unsigned char 
  3770 ;;		 -> signs(3), string_delete(3), string_load(3), 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  size            1   14[BANK0 ] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;		None               void
  3775 ;; Registers used:
  3776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1
  3782 ;;      Params:         0       2       0
  3783 ;;      Locals:         0       1       0
  3784 ;;      Temps:          0       4       0
  3785 ;;      Totals:         0       7       0
  3786 ;;Total ram usage:        7 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    6
  3789 ;; This function calls:
  3790 ;;		_Set_Bits
  3791 ;; This function is called by:
  3792 ;;		_Load_Data
  3793 ;;		_Del_Data
  3794 ;;		_Evaluate_Signs
  3795 ;;		_Set_Display
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text20
  3800  00078A                     __ptext20:
  3801                           	opt stack 0
  3802  00078A                     _Evaluate_Display:
  3803                           	opt stack 22
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;incstack = 0
  3807                           ;Evaluate_Display@size stored from wreg
  3808  00078A  0100               	movlb	0	; () banked
  3809  00078C  6F6E               	movwf	Evaluate_Display@size& (0+255),b
  3810                           
  3811                           ;display.c: 53: for(display_counter = (size + 1); display_counter > 0;
  3812  00078E  0100               	movlb	0	; () banked
  3813  000790  296E               	incf	Evaluate_Display@size& (0+255),w,b
  3814  000792  6E3D               	movwf	_display_counter,c
  3815                           
  3816                           ;display.c: 54: display_counter--) {
  3817  000794  D15F               	goto	l2886
  3818  000796                     l428:
  3819                           
  3820                           ;display.c: 55: __nop();
  3821  000796  F000               	nop	
  3822                           
  3823                           ;display.c: 56: switch (evaluate[(display_counter - 1)]) {
  3824  000798  D10B               	goto	l2882
  3825  00079A                     l2846:
  3826                           
  3827                           ;display.c: 58: Set_Bits("ABCDEF");
  3828  00079A  0E27               	movlw	low STR_1
  3829  00079C  0100               	movlb	0	; () banked
  3830  00079E  6F60               	movwf	Set_Bits@bits& (0+255),b
  3831  0007A0  0E02               	movlw	high STR_1
  3832  0007A2  0100               	movlb	0	; () banked
  3833  0007A4  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3834  0007A6  0100               	movlb	0	; () banked
  3835  0007A8  5160               	movf	Set_Bits@bits& (0+255),w,b
  3836  0007AA  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3837  0007AC  A4D8               	btfss	status,2,c
  3838  0007AE  0E00               	movlw	low (__mediumconst shr (0+16))
  3839  0007B0  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3840  0007B2  ECE4  F006         	call	_Set_Bits	;wreg free
  3841                           
  3842                           ;display.c: 59: break;
  3843  0007B6  D14D               	goto	l2884
  3844  0007B8                     l2848:
  3845                           
  3846                           ;display.c: 61: Set_Bits("BC");
  3847  0007B8  0E67               	movlw	low (STR_8+1)
  3848  0007BA  0100               	movlb	0	; () banked
  3849  0007BC  6F60               	movwf	Set_Bits@bits& (0+255),b
  3850  0007BE  0E02               	movlw	high (STR_8+1)
  3851  0007C0  0100               	movlb	0	; () banked
  3852  0007C2  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3853  0007C4  0100               	movlb	0	; () banked
  3854  0007C6  5160               	movf	Set_Bits@bits& (0+255),w,b
  3855  0007C8  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3856  0007CA  A4D8               	btfss	status,2,c
  3857  0007CC  0E00               	movlw	low (__mediumconst shr (0+16))
  3858  0007CE  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3859  0007D0  ECE4  F006         	call	_Set_Bits	;wreg free
  3860                           
  3861                           ;display.c: 62: break;
  3862  0007D4  D13E               	goto	l2884
  3863  0007D6                     l2850:
  3864                           
  3865                           ;display.c: 64: Set_Bits("ABDEG");
  3866  0007D6  0E49               	movlw	low STR_3
  3867  0007D8  0100               	movlb	0	; () banked
  3868  0007DA  6F60               	movwf	Set_Bits@bits& (0+255),b
  3869  0007DC  0E02               	movlw	high STR_3
  3870  0007DE  0100               	movlb	0	; () banked
  3871  0007E0  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3872  0007E2  0100               	movlb	0	; () banked
  3873  0007E4  5160               	movf	Set_Bits@bits& (0+255),w,b
  3874  0007E6  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3875  0007E8  A4D8               	btfss	status,2,c
  3876  0007EA  0E00               	movlw	low (__mediumconst shr (0+16))
  3877  0007EC  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3878  0007EE  ECE4  F006         	call	_Set_Bits	;wreg free
  3879                           
  3880                           ;display.c: 65: break;
  3881  0007F2  D12F               	goto	l2884
  3882  0007F4                     l2852:
  3883                           
  3884                           ;display.c: 67: Set_Bits("ABCDG");
  3885  0007F4  0E43               	movlw	low STR_4
  3886  0007F6  0100               	movlb	0	; () banked
  3887  0007F8  6F60               	movwf	Set_Bits@bits& (0+255),b
  3888  0007FA  0E02               	movlw	high STR_4
  3889  0007FC  0100               	movlb	0	; () banked
  3890  0007FE  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3891  000800  0100               	movlb	0	; () banked
  3892  000802  5160               	movf	Set_Bits@bits& (0+255),w,b
  3893  000804  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3894  000806  A4D8               	btfss	status,2,c
  3895  000808  0E00               	movlw	low (__mediumconst shr (0+16))
  3896  00080A  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3897  00080C  ECE4  F006         	call	_Set_Bits	;wreg free
  3898                           
  3899                           ;display.c: 68: break;
  3900  000810  D120               	goto	l2884
  3901  000812                     l2854:
  3902                           
  3903                           ;display.c: 70: Set_Bits("BCFG");
  3904  000812  0E61               	movlw	low STR_5
  3905  000814  0100               	movlb	0	; () banked
  3906  000816  6F60               	movwf	Set_Bits@bits& (0+255),b
  3907  000818  0E02               	movlw	high STR_5
  3908  00081A  0100               	movlb	0	; () banked
  3909  00081C  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3910  00081E  0100               	movlb	0	; () banked
  3911  000820  5160               	movf	Set_Bits@bits& (0+255),w,b
  3912  000822  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3913  000824  A4D8               	btfss	status,2,c
  3914  000826  0E00               	movlw	low (__mediumconst shr (0+16))
  3915  000828  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3916  00082A  ECE4  F006         	call	_Set_Bits	;wreg free
  3917                           
  3918                           ;display.c: 71: break;
  3919  00082E  D111               	goto	l2884
  3920  000830                     l2856:
  3921                           
  3922                           ;display.c: 73: Set_Bits("ACDFG");
  3923  000830  0E4F               	movlw	low STR_6
  3924  000832  0100               	movlb	0	; () banked
  3925  000834  6F60               	movwf	Set_Bits@bits& (0+255),b
  3926  000836  0E02               	movlw	high STR_6
  3927  000838  0100               	movlb	0	; () banked
  3928  00083A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3929  00083C  0100               	movlb	0	; () banked
  3930  00083E  5160               	movf	Set_Bits@bits& (0+255),w,b
  3931  000840  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3932  000842  A4D8               	btfss	status,2,c
  3933  000844  0E00               	movlw	low (__mediumconst shr (0+16))
  3934  000846  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3935  000848  ECE4  F006         	call	_Set_Bits	;wreg free
  3936                           
  3937                           ;display.c: 74: break;
  3938  00084C  D102               	goto	l2884
  3939  00084E                     l2858:
  3940                           
  3941                           ;display.c: 76: Set_Bits("ACDEFG");
  3942  00084E  0E3C               	movlw	low STR_7
  3943  000850  0100               	movlb	0	; () banked
  3944  000852  6F60               	movwf	Set_Bits@bits& (0+255),b
  3945  000854  0E02               	movlw	high STR_7
  3946  000856  0100               	movlb	0	; () banked
  3947  000858  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3948  00085A  0100               	movlb	0	; () banked
  3949  00085C  5160               	movf	Set_Bits@bits& (0+255),w,b
  3950  00085E  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3951  000860  A4D8               	btfss	status,2,c
  3952  000862  0E00               	movlw	low (__mediumconst shr (0+16))
  3953  000864  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3954  000866  ECE4  F006         	call	_Set_Bits	;wreg free
  3955                           
  3956                           ;display.c: 77: break;
  3957  00086A  D0F3               	goto	l2884
  3958  00086C                     l2860:
  3959                           
  3960                           ;display.c: 79: Set_Bits("ABC");
  3961  00086C  0E66               	movlw	low STR_8
  3962  00086E  0100               	movlb	0	; () banked
  3963  000870  6F60               	movwf	Set_Bits@bits& (0+255),b
  3964  000872  0E02               	movlw	high STR_8
  3965  000874  0100               	movlb	0	; () banked
  3966  000876  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3967  000878  0100               	movlb	0	; () banked
  3968  00087A  5160               	movf	Set_Bits@bits& (0+255),w,b
  3969  00087C  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3970  00087E  A4D8               	btfss	status,2,c
  3971  000880  0E00               	movlw	low (__mediumconst shr (0+16))
  3972  000882  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3973  000884  ECE4  F006         	call	_Set_Bits	;wreg free
  3974                           
  3975                           ;display.c: 80: break;
  3976  000888  D0E4               	goto	l2884
  3977  00088A                     l2862:
  3978                           
  3979                           ;display.c: 82: Set_Bits("ABCDEFG");
  3980  00088A  0E1F               	movlw	low STR_9
  3981  00088C  0100               	movlb	0	; () banked
  3982  00088E  6F60               	movwf	Set_Bits@bits& (0+255),b
  3983  000890  0E02               	movlw	high STR_9
  3984  000892  0100               	movlb	0	; () banked
  3985  000894  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3986  000896  0100               	movlb	0	; () banked
  3987  000898  5160               	movf	Set_Bits@bits& (0+255),w,b
  3988  00089A  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3989  00089C  A4D8               	btfss	status,2,c
  3990  00089E  0E00               	movlw	low (__mediumconst shr (0+16))
  3991  0008A0  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3992  0008A2  ECE4  F006         	call	_Set_Bits	;wreg free
  3993                           
  3994                           ;display.c: 83: break;
  3995  0008A6  D0D5               	goto	l2884
  3996  0008A8                     l2864:
  3997                           
  3998                           ;display.c: 85: Set_Bits("ABCDFG");
  3999  0008A8  0E2E               	movlw	low STR_10
  4000  0008AA  0100               	movlb	0	; () banked
  4001  0008AC  6F60               	movwf	Set_Bits@bits& (0+255),b
  4002  0008AE  0E02               	movlw	high STR_10
  4003  0008B0  0100               	movlb	0	; () banked
  4004  0008B2  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4005  0008B4  0100               	movlb	0	; () banked
  4006  0008B6  5160               	movf	Set_Bits@bits& (0+255),w,b
  4007  0008B8  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4008  0008BA  A4D8               	btfss	status,2,c
  4009  0008BC  0E00               	movlw	low (__mediumconst shr (0+16))
  4010  0008BE  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4011  0008C0  ECE4  F006         	call	_Set_Bits	;wreg free
  4012                           
  4013                           ;display.c: 86: break;
  4014  0008C4  D0C6               	goto	l2884
  4015  0008C6                     l2866:
  4016                           
  4017                           ;display.c: 88: Set_Bits("ABCEFG");
  4018  0008C6  0E35               	movlw	low STR_11
  4019  0008C8  0100               	movlb	0	; () banked
  4020  0008CA  6F60               	movwf	Set_Bits@bits& (0+255),b
  4021  0008CC  0E02               	movlw	high STR_11
  4022  0008CE  0100               	movlb	0	; () banked
  4023  0008D0  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4024  0008D2  0100               	movlb	0	; () banked
  4025  0008D4  5160               	movf	Set_Bits@bits& (0+255),w,b
  4026  0008D6  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4027  0008D8  A4D8               	btfss	status,2,c
  4028  0008DA  0E00               	movlw	low (__mediumconst shr (0+16))
  4029  0008DC  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4030  0008DE  ECE4  F006         	call	_Set_Bits	;wreg free
  4031                           
  4032                           ;display.c: 89: break;
  4033  0008E2  D0B7               	goto	l2884
  4034  0008E4                     l2868:
  4035                           
  4036                           ;display.c: 91: Set_Bits("ABCDEF");
  4037  0008E4  0E27               	movlw	low STR_1
  4038  0008E6  0100               	movlb	0	; () banked
  4039  0008E8  6F60               	movwf	Set_Bits@bits& (0+255),b
  4040  0008EA  0E02               	movlw	high STR_1
  4041  0008EC  0100               	movlb	0	; () banked
  4042  0008EE  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4043  0008F0  0100               	movlb	0	; () banked
  4044  0008F2  5160               	movf	Set_Bits@bits& (0+255),w,b
  4045  0008F4  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4046  0008F6  A4D8               	btfss	status,2,c
  4047  0008F8  0E00               	movlw	low (__mediumconst shr (0+16))
  4048  0008FA  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4049  0008FC  ECE4  F006         	call	_Set_Bits	;wreg free
  4050                           
  4051                           ;display.c: 92: break;
  4052  000900  D0A8               	goto	l2884
  4053  000902                     l2870:
  4054                           
  4055                           ;display.c: 94: Set_Bits("ADEFG");
  4056  000902  0E5B               	movlw	low STR_13
  4057  000904  0100               	movlb	0	; () banked
  4058  000906  6F60               	movwf	Set_Bits@bits& (0+255),b
  4059  000908  0E02               	movlw	high STR_13
  4060  00090A  0100               	movlb	0	; () banked
  4061  00090C  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4062  00090E  0100               	movlb	0	; () banked
  4063  000910  5160               	movf	Set_Bits@bits& (0+255),w,b
  4064  000912  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4065  000914  A4D8               	btfss	status,2,c
  4066  000916  0E00               	movlw	low (__mediumconst shr (0+16))
  4067  000918  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4068  00091A  ECE4  F006         	call	_Set_Bits	;wreg free
  4069                           
  4070                           ;display.c: 95: break;
  4071  00091E  D099               	goto	l2884
  4072  000920                     l2872:
  4073                           
  4074                           ;display.c: 97: Set_Bits("DEF");
  4075  000920  0E2A               	movlw	low (STR_1+3)
  4076  000922  0100               	movlb	0	; () banked
  4077  000924  6F60               	movwf	Set_Bits@bits& (0+255),b
  4078  000926  0E02               	movlw	high (STR_1+3)
  4079  000928  0100               	movlb	0	; () banked
  4080  00092A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4081  00092C  0100               	movlb	0	; () banked
  4082  00092E  5160               	movf	Set_Bits@bits& (0+255),w,b
  4083  000930  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4084  000932  A4D8               	btfss	status,2,c
  4085  000934  0E00               	movlw	low (__mediumconst shr (0+16))
  4086  000936  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4087  000938  ECE4  F006         	call	_Set_Bits	;wreg free
  4088                           
  4089                           ;display.c: 98: break;
  4090  00093C  D08A               	goto	l2884
  4091  00093E                     l2874:
  4092                           
  4093                           ;display.c: 100: Set_Bits("ABCDEF");
  4094  00093E  0E27               	movlw	low STR_1
  4095  000940  0100               	movlb	0	; () banked
  4096  000942  6F60               	movwf	Set_Bits@bits& (0+255),b
  4097  000944  0E02               	movlw	high STR_1
  4098  000946  0100               	movlb	0	; () banked
  4099  000948  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4100  00094A  0100               	movlb	0	; () banked
  4101  00094C  5160               	movf	Set_Bits@bits& (0+255),w,b
  4102  00094E  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4103  000950  A4D8               	btfss	status,2,c
  4104  000952  0E00               	movlw	low (__mediumconst shr (0+16))
  4105  000954  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4106  000956  ECE4  F006         	call	_Set_Bits	;wreg free
  4107                           
  4108                           ;display.c: 101: break;
  4109  00095A  D07B               	goto	l2884
  4110  00095C                     l2876:
  4111                           
  4112                           ;display.c: 103: Set_Bits("ABEFG");
  4113  00095C  0E55               	movlw	low STR_16
  4114  00095E  0100               	movlb	0	; () banked
  4115  000960  6F60               	movwf	Set_Bits@bits& (0+255),b
  4116  000962  0E02               	movlw	high STR_16
  4117  000964  0100               	movlb	0	; () banked
  4118  000966  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4119  000968  0100               	movlb	0	; () banked
  4120  00096A  5160               	movf	Set_Bits@bits& (0+255),w,b
  4121  00096C  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4122  00096E  A4D8               	btfss	status,2,c
  4123  000970  0E00               	movlw	low (__mediumconst shr (0+16))
  4124  000972  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4125  000974  ECE4  F006         	call	_Set_Bits	;wreg free
  4126                           
  4127                           ;display.c: 104: break;
  4128  000978  D06C               	goto	l2884
  4129  00097A                     l2878:
  4130                           
  4131                           ;display.c: 106: Set_Bits("G");
  4132  00097A  0E47               	movlw	low (STR_4+4)
  4133  00097C  0100               	movlb	0	; () banked
  4134  00097E  6F60               	movwf	Set_Bits@bits& (0+255),b
  4135  000980  0E02               	movlw	high (STR_4+4)
  4136  000982  0100               	movlb	0	; () banked
  4137  000984  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4138  000986  0100               	movlb	0	; () banked
  4139  000988  5160               	movf	Set_Bits@bits& (0+255),w,b
  4140  00098A  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4141  00098C  A4D8               	btfss	status,2,c
  4142  00098E  0E00               	movlw	low (__mediumconst shr (0+16))
  4143  000990  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4144  000992  ECE4  F006         	call	_Set_Bits	;wreg free
  4145                           
  4146                           ;display.c: 107: break;
  4147  000996  D05D               	goto	l2884
  4148  000998                     l2880:
  4149                           
  4150                           ;display.c: 109: Set_Bits(0);
  4151  000998  0E00               	movlw	0
  4152  00099A  0100               	movlb	0	; () banked
  4153  00099C  6F60               	movwf	Set_Bits@bits& (0+255),b
  4154  00099E  0E00               	movlw	0
  4155  0009A0  0100               	movlb	0	; () banked
  4156  0009A2  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4157  0009A4  0E00               	movlw	0
  4158  0009A6  0100               	movlb	0	; () banked
  4159  0009A8  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4160  0009AA  ECE4  F006         	call	_Set_Bits	;wreg free
  4161                           
  4162                           ;display.c: 110: }
  4163  0009AE  D051               	goto	l2884
  4164  0009B0                     l2882:
  4165  0009B0  0EFF               	movlw	255
  4166  0009B2  0100               	movlb	0	; () banked
  4167  0009B4  6F6A               	movwf	??_Evaluate_Display& (0+255),b
  4168  0009B6  0EFF               	movlw	255
  4169  0009B8  0100               	movlb	0	; () banked
  4170  0009BA  6F6B               	movwf	(??_Evaluate_Display+1)& (0+255),b
  4171  0009BC  503D               	movf	_display_counter,w,c
  4172  0009BE  0100               	movlb	0	; () banked
  4173  0009C0  6F6C               	movwf	(??_Evaluate_Display+2)& (0+255),b
  4174  0009C2  6B6D               	clrf	(??_Evaluate_Display+3)& (0+255),b
  4175  0009C4  0100               	movlb	0	; () banked
  4176  0009C6  516A               	movf	??_Evaluate_Display& (0+255),w,b
  4177  0009C8  0100               	movlb	0	; () banked
  4178  0009CA  276C               	addwf	(??_Evaluate_Display+2)& (0+255),f,b
  4179  0009CC  0100               	movlb	0	; () banked
  4180  0009CE  516B               	movf	(??_Evaluate_Display+1)& (0+255),w,b
  4181  0009D0  0100               	movlb	0	; () banked
  4182  0009D2  236D               	addwfc	(??_Evaluate_Display+3)& (0+255),f,b
  4183  0009D4  0100               	movlb	0	; () banked
  4184  0009D6  516C               	movf	(??_Evaluate_Display+2)& (0+255),w,b
  4185  0009D8  0100               	movlb	0	; () banked
  4186  0009DA  2568               	addwf	Evaluate_Display@evaluate& (0+255),w,b
  4187  0009DC  6ED9               	movwf	fsr2l,c
  4188  0009DE  0100               	movlb	0	; () banked
  4189  0009E0  516D               	movf	(??_Evaluate_Display+3)& (0+255),w,b
  4190  0009E2  0100               	movlb	0	; () banked
  4191  0009E4  2169               	addwfc	(Evaluate_Display@evaluate+1)& (0+255),w,b
  4192  0009E6  6EDA               	movwf	fsr2h,c
  4193  0009E8  50DF               	movf	indf2,w,c
  4194                           
  4195                           ; Switch size 1, requested type "space"
  4196                           ; Number of cases is 17, Range of values is 45 to 80
  4197                           ; switch strategies available:
  4198                           ; Name         Instructions Cycles
  4199                           ; simple_byte           52    27 (average)
  4200                           ;	Chosen strategy is simple_byte
  4201  0009EA  0A2D               	xorlw	45	; case 45
  4202  0009EC  B4D8               	btfsc	status,2,c
  4203  0009EE  D7C5               	goto	l2878
  4204  0009F0  0A1D               	xorlw	29	; case 48
  4205  0009F2  B4D8               	btfsc	status,2,c
  4206  0009F4  D6D2               	goto	l2846
  4207  0009F6  0A01               	xorlw	1	; case 49
  4208  0009F8  B4D8               	btfsc	status,2,c
  4209  0009FA  D6DE               	goto	l2848
  4210  0009FC  0A03               	xorlw	3	; case 50
  4211  0009FE  B4D8               	btfsc	status,2,c
  4212  000A00  D6EA               	goto	l2850
  4213  000A02  0A01               	xorlw	1	; case 51
  4214  000A04  B4D8               	btfsc	status,2,c
  4215  000A06  D6F6               	goto	l2852
  4216  000A08  0A07               	xorlw	7	; case 52
  4217  000A0A  B4D8               	btfsc	status,2,c
  4218  000A0C  D702               	goto	l2854
  4219  000A0E  0A01               	xorlw	1	; case 53
  4220  000A10  B4D8               	btfsc	status,2,c
  4221  000A12  D70E               	goto	l2856
  4222  000A14  0A03               	xorlw	3	; case 54
  4223  000A16  B4D8               	btfsc	status,2,c
  4224  000A18  D71A               	goto	l2858
  4225  000A1A  0A01               	xorlw	1	; case 55
  4226  000A1C  B4D8               	btfsc	status,2,c
  4227  000A1E  D726               	goto	l2860
  4228  000A20  0A0F               	xorlw	15	; case 56
  4229  000A22  B4D8               	btfsc	status,2,c
  4230  000A24  D732               	goto	l2862
  4231  000A26  0A01               	xorlw	1	; case 57
  4232  000A28  B4D8               	btfsc	status,2,c
  4233  000A2A  D73E               	goto	l2864
  4234  000A2C  0A78               	xorlw	120	; case 65
  4235  000A2E  B4D8               	btfsc	status,2,c
  4236  000A30  D74A               	goto	l2866
  4237  000A32  0A05               	xorlw	5	; case 68
  4238  000A34  B4D8               	btfsc	status,2,c
  4239  000A36  D756               	goto	l2868
  4240  000A38  0A01               	xorlw	1	; case 69
  4241  000A3A  B4D8               	btfsc	status,2,c
  4242  000A3C  D762               	goto	l2870
  4243  000A3E  0A09               	xorlw	9	; case 76
  4244  000A40  B4D8               	btfsc	status,2,c
  4245  000A42  D76E               	goto	l2872
  4246  000A44  0A03               	xorlw	3	; case 79
  4247  000A46  B4D8               	btfsc	status,2,c
  4248  000A48  D77A               	goto	l2874
  4249  000A4A  0A1F               	xorlw	31	; case 80
  4250  000A4C  B4D8               	btfsc	status,2,c
  4251  000A4E  D786               	goto	l2876
  4252  000A50  D7A3               	goto	l2880
  4253  000A52                     l2884:
  4254  000A52  063D               	decf	_display_counter,f,c
  4255  000A54                     l2886:
  4256  000A54  503D               	movf	_display_counter,w,c
  4257  000A56  B4D8               	btfsc	status,2,c
  4258  000A58  0012               	return	
  4259  000A5A  D69D               	goto	l428
  4260  000A5C                     __end_of_Evaluate_Display:
  4261                           	opt stack 0
  4262                           tblptru	equ	0xFF8
  4263                           tblptrh	equ	0xFF7
  4264                           tblptrl	equ	0xFF6
  4265                           tablat	equ	0xFF5
  4266                           prodh	equ	0xFF4
  4267                           prodl	equ	0xFF3
  4268                           intcon	equ	0xFF2
  4269                           postinc0	equ	0xFEE
  4270                           wreg	equ	0xFE8
  4271                           postdec1	equ	0xFE5
  4272                           fsr1l	equ	0xFE1
  4273                           indf2	equ	0xFDF
  4274                           postinc2	equ	0xFDE
  4275                           postdec2	equ	0xFDD
  4276                           plusw2	equ	0xFDB
  4277                           fsr2h	equ	0xFDA
  4278                           fsr2l	equ	0xFD9
  4279                           status	equ	0xFD8
  4280                           
  4281 ;; *************** function _Set_Bits *****************
  4282 ;; Defined at:
  4283 ;;		line 12 in file "display.c"
  4284 ;; Parameters:    Size  Location     Type
  4285 ;;  bits            3    0[BANK0 ] PTR const unsigned char 
  4286 ;;		 -> ROM(8191), STR_17(2), STR_16(6), STR_15(7), 
  4287 ;;		 -> STR_14(4), STR_13(6), STR_12(7), STR_11(7), 
  4288 ;;		 -> STR_10(7), STR_9(8), STR_8(4), STR_7(7), 
  4289 ;;		 -> STR_6(6), STR_5(5), STR_4(6), STR_3(6), 
  4290 ;;		 -> STR_2(3), STR_1(7), 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  bitcount        1    6[BANK0 ] unsigned char 
  4293 ;;  Bitoutput       1    7[BANK0 ] unsigned char 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;		None               void
  4296 ;; Registers used:
  4297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1
  4303 ;;      Params:         0       3       0
  4304 ;;      Locals:         0       2       0
  4305 ;;      Temps:          0       3       0
  4306 ;;      Totals:         0       8       0
  4307 ;;Total ram usage:        8 bytes
  4308 ;; Hardware stack levels used:    1
  4309 ;; Hardware stack levels required when called:    5
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_Evaluate_Display
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text21
  4318  000DC8                     __ptext21:
  4319                           	opt stack 0
  4320  000DC8                     _Set_Bits:
  4321                           	opt stack 22
  4322                           
  4323                           ;display.c: 13: unsigned char Bitoutput = 0;
  4324                           
  4325                           ;incstack = 0
  4326  000DC8  0E00               	movlw	0
  4327  000DCA  0100               	movlb	0	; () banked
  4328  000DCC  6F67               	movwf	Set_Bits@Bitoutput& (0+255),b
  4329                           
  4330                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  4331  000DCE  0E00               	movlw	0
  4332  000DD0  0100               	movlb	0	; () banked
  4333  000DD2  6F66               	movwf	Set_Bits@bitcount& (0+255),b
  4334                           
  4335                           ;display.c: 15: bitcount++) {
  4336  000DD4  D046               	goto	l2840
  4337  000DD6                     l2820:
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;display.c: 18: Bitoutput |= 0b00000001;
  4341  000DD6  0100               	movlb	0	; () banked
  4342  000DD8  8167               	bsf	Set_Bits@Bitoutput& (0+255),0,b
  4343                           
  4344                           ;display.c: 19: break;
  4345  000DDA  D041               	goto	l2838
  4346  000DDC                     l2822:
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;display.c: 21: Bitoutput |= 0b00000010;
  4350  000DDC  0100               	movlb	0	; () banked
  4351  000DDE  8367               	bsf	Set_Bits@Bitoutput& (0+255),1,b
  4352                           
  4353                           ;display.c: 22: break;
  4354  000DE0  D03E               	goto	l2838
  4355  000DE2                     l2824:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;display.c: 24: Bitoutput |= 0b00000100;
  4359  000DE2  0100               	movlb	0	; () banked
  4360  000DE4  8567               	bsf	Set_Bits@Bitoutput& (0+255),2,b
  4361                           
  4362                           ;display.c: 25: break;
  4363  000DE6  D03B               	goto	l2838
  4364  000DE8                     l2826:
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;display.c: 27: Bitoutput |= 0b00001000;
  4368  000DE8  0100               	movlb	0	; () banked
  4369  000DEA  8767               	bsf	Set_Bits@Bitoutput& (0+255),3,b
  4370                           
  4371                           ;display.c: 28: break;
  4372  000DEC  D038               	goto	l2838
  4373  000DEE                     l2828:
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;display.c: 30: Bitoutput |= 0b00010000;
  4377  000DEE  0100               	movlb	0	; () banked
  4378  000DF0  8967               	bsf	Set_Bits@Bitoutput& (0+255),4,b
  4379                           
  4380                           ;display.c: 31: break;
  4381  000DF2  D035               	goto	l2838
  4382  000DF4                     l2830:
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;display.c: 33: Bitoutput |= 0b00100000;
  4386  000DF4  0100               	movlb	0	; () banked
  4387  000DF6  8B67               	bsf	Set_Bits@Bitoutput& (0+255),5,b
  4388                           
  4389                           ;display.c: 34: break;
  4390  000DF8  D032               	goto	l2838
  4391  000DFA                     l2832:
  4392                           
  4393                           ; BSR set to: 0
  4394                           ;display.c: 36: Bitoutput |= 0b01000000;
  4395  000DFA  0100               	movlb	0	; () banked
  4396  000DFC  8D67               	bsf	Set_Bits@Bitoutput& (0+255),6,b
  4397                           
  4398                           ; BSR set to: 0
  4399                           ;display.c: 40: }
  4400                           
  4401                           ; BSR set to: 0
  4402                           ;display.c: 39: break;
  4403                           
  4404                           ;display.c: 38: default:
  4405                           
  4406                           ;display.c: 37: break;
  4407  000DFE  D02F               	goto	l2838
  4408  000E00                     l2836:
  4409                           
  4410                           ; BSR set to: 0
  4411  000E00  0100               	movlb	0	; () banked
  4412  000E02  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4413  000E04  0D01               	mullw	1
  4414  000E06  50F3               	movf	prodl,w,c
  4415  000E08  0100               	movlb	0	; () banked
  4416  000E0A  2560               	addwf	Set_Bits@bits& (0+255),w,b
  4417  000E0C  0100               	movlb	0	; () banked
  4418  000E0E  6F63               	movwf	??_Set_Bits& (0+255),b
  4419  000E10  50F4               	movf	prodh,w,c
  4420  000E12  0100               	movlb	0	; () banked
  4421  000E14  2161               	addwfc	(Set_Bits@bits+1)& (0+255),w,b
  4422  000E16  0100               	movlb	0	; () banked
  4423  000E18  6F64               	movwf	(??_Set_Bits+1)& (0+255),b
  4424  000E1A  0E00               	movlw	0
  4425  000E1C  0100               	movlb	0	; () banked
  4426  000E1E  2162               	addwfc	(Set_Bits@bits+2)& (0+255),w,b
  4427  000E20  0100               	movlb	0	; () banked
  4428  000E22  6F65               	movwf	(??_Set_Bits+2)& (0+255),b
  4429  000E24  C063  FFF6         	movff	??_Set_Bits,tblptrl
  4430  000E28  C064  FFF7         	movff	??_Set_Bits+1,tblptrh
  4431  000E2C  C065  FFF8         	movff	??_Set_Bits+2,tblptru
  4432  000E30  0008               	tblrd		*
  4433  000E32  50F5               	movf	tablat,w,c
  4434                           
  4435                           ; Switch size 1, requested type "space"
  4436                           ; Number of cases is 7, Range of values is 65 to 71
  4437                           ; switch strategies available:
  4438                           ; Name         Instructions Cycles
  4439                           ; simple_byte           22    12 (average)
  4440                           ;	Chosen strategy is simple_byte
  4441  000E34  0A41               	xorlw	65	; case 65
  4442  000E36  B4D8               	btfsc	status,2,c
  4443  000E38  D7CE               	goto	l2820
  4444  000E3A  0A03               	xorlw	3	; case 66
  4445  000E3C  B4D8               	btfsc	status,2,c
  4446  000E3E  D7CE               	goto	l2822
  4447  000E40  0A01               	xorlw	1	; case 67
  4448  000E42  B4D8               	btfsc	status,2,c
  4449  000E44  D7CE               	goto	l2824
  4450  000E46  0A07               	xorlw	7	; case 68
  4451  000E48  B4D8               	btfsc	status,2,c
  4452  000E4A  D7CE               	goto	l2826
  4453  000E4C  0A01               	xorlw	1	; case 69
  4454  000E4E  B4D8               	btfsc	status,2,c
  4455  000E50  D7CE               	goto	l2828
  4456  000E52  0A03               	xorlw	3	; case 70
  4457  000E54  B4D8               	btfsc	status,2,c
  4458  000E56  D7CE               	goto	l2830
  4459  000E58  0A01               	xorlw	1	; case 71
  4460  000E5A  B4D8               	btfsc	status,2,c
  4461  000E5C  D7CE               	goto	l2832
  4462  000E5E                     l2838:
  4463                           
  4464                           ; BSR set to: 0
  4465  000E5E  0100               	movlb	0	; () banked
  4466  000E60  2B66               	incf	Set_Bits@bitcount& (0+255),f,b
  4467  000E62                     l2840:
  4468                           
  4469                           ; BSR set to: 0
  4470  000E62  0100               	movlb	0	; () banked
  4471  000E64  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4472  000E66  0D01               	mullw	1
  4473  000E68  50F3               	movf	prodl,w,c
  4474  000E6A  0100               	movlb	0	; () banked
  4475  000E6C  2560               	addwf	Set_Bits@bits& (0+255),w,b
  4476  000E6E  0100               	movlb	0	; () banked
  4477  000E70  6F63               	movwf	??_Set_Bits& (0+255),b
  4478  000E72  50F4               	movf	prodh,w,c
  4479  000E74  0100               	movlb	0	; () banked
  4480  000E76  2161               	addwfc	(Set_Bits@bits+1)& (0+255),w,b
  4481  000E78  0100               	movlb	0	; () banked
  4482  000E7A  6F64               	movwf	(??_Set_Bits+1)& (0+255),b
  4483  000E7C  0E00               	movlw	0
  4484  000E7E  0100               	movlb	0	; () banked
  4485  000E80  2162               	addwfc	(Set_Bits@bits+2)& (0+255),w,b
  4486  000E82  0100               	movlb	0	; () banked
  4487  000E84  6F65               	movwf	(??_Set_Bits+2)& (0+255),b
  4488  000E86  C063  FFF6         	movff	??_Set_Bits,tblptrl
  4489  000E8A  C064  FFF7         	movff	??_Set_Bits+1,tblptrh
  4490  000E8E  C065  FFF8         	movff	??_Set_Bits+2,tblptru
  4491  000E92  0008               	tblrd		*
  4492  000E94  50F5               	movf	tablat,w,c
  4493  000E96  0900               	iorlw	0
  4494  000E98  A4D8               	btfss	status,2,c
  4495  000E9A  D7B2               	goto	l2836
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;display.c: 41: }
  4499                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  4500                           
  4501                           ; BSR set to: 0
  4502  000E9C  503D               	movf	_display_counter,w,c
  4503  000E9E  0D01               	mullw	1
  4504  000EA0  0E35               	movlw	low _pixels
  4505  000EA2  24F3               	addwf	prodl,w,c
  4506  000EA4  6ED9               	movwf	fsr2l,c
  4507  000EA6  0E00               	movlw	high _pixels
  4508  000EA8  20F4               	addwfc	prodh,w,c
  4509  000EAA  6EDA               	movwf	fsr2h,c
  4510  000EAC  C067  FFDF         	movff	Set_Bits@Bitoutput,indf2
  4511                           
  4512                           ; BSR set to: 0
  4513  000EB0  0012               	return		;funcret
  4514  000EB2                     __end_of_Set_Bits:
  4515                           	opt stack 0
  4516                           tblptru	equ	0xFF8
  4517                           tblptrh	equ	0xFF7
  4518                           tblptrl	equ	0xFF6
  4519                           tablat	equ	0xFF5
  4520                           prodh	equ	0xFF4
  4521                           prodl	equ	0xFF3
  4522                           intcon	equ	0xFF2
  4523                           postinc0	equ	0xFEE
  4524                           wreg	equ	0xFE8
  4525                           postdec1	equ	0xFE5
  4526                           fsr1l	equ	0xFE1
  4527                           indf2	equ	0xFDF
  4528                           postinc2	equ	0xFDE
  4529                           postdec2	equ	0xFDD
  4530                           plusw2	equ	0xFDB
  4531                           fsr2h	equ	0xFDA
  4532                           fsr2l	equ	0xFD9
  4533                           status	equ	0xFD8
  4534                           
  4535 ;; *************** function _Read_Data *****************
  4536 ;; Defined at:
  4537 ;;		line 44 in file "storage.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  read_address    1    wreg     unsigned char 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  read_address    1    4[BANK0 ] unsigned char 
  4542 ;;  data_read       2    2[BANK0 ] unsigned int 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  2    0[BANK0 ] unsigned int 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1
  4552 ;;      Params:         0       2       0
  4553 ;;      Locals:         0       3       0
  4554 ;;      Temps:          0       0       0
  4555 ;;      Totals:         0       5       0
  4556 ;;Total ram usage:        5 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; Hardware stack levels required when called:    5
  4559 ;; This function calls:
  4560 ;;		Nothing
  4561 ;; This function is called by:
  4562 ;;		_Check_Buttons
  4563 ;;		_Load_Data
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text22
  4568  001416                     __ptext22:
  4569                           	opt stack 0
  4570  001416                     _Read_Data:
  4571                           	opt stack 24
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;incstack = 0
  4575                           ;Read_Data@read_address stored from wreg
  4576  001416  0100               	movlb	0	; () banked
  4577  001418  6F64               	movwf	Read_Data@read_address& (0+255),b
  4578                           
  4579                           ;storage.c: 45: unsigned int data_read = 0;
  4580  00141A  0E00               	movlw	0
  4581  00141C  0100               	movlb	0	; () banked
  4582  00141E  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4583  001420  0E00               	movlw	0
  4584  001422  6F62               	movwf	Read_Data@data_read& (0+255),b
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;storage.c: 46: read_address += 50;
  4588  001424  0E32               	movlw	50
  4589  001426  0100               	movlb	0	; () banked
  4590  001428  2764               	addwf	Read_Data@read_address& (0+255),f,b
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;storage.c: 47: EEADR = read_address;
  4594  00142A  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;storage.c: 48: EECON1bits.EEPGD = 0;
  4598  00142E  9EA6               	bcf	4006,7,c	;volatile
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;storage.c: 49: EECON1bits.CFGS = 0;
  4602  001430  9CA6               	bcf	4006,6,c	;volatile
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;storage.c: 50: EECON1bits.RD = 1;
  4606  001432  80A6               	bsf	4006,0,c	;volatile
  4607                           
  4608                           ; BSR set to: 0
  4609                           ;storage.c: 51: data_read = EEDATA;
  4610  001434  CFA8 F062          	movff	4008,Read_Data@data_read	;volatile
  4611  001438  0100               	movlb	0	; () banked
  4612  00143A  6B63               	clrf	(Read_Data@data_read+1)& (0+255),b
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;storage.c: 52: read_address -= 50;
  4616  00143C  0E32               	movlw	50
  4617  00143E  0100               	movlb	0	; () banked
  4618  001440  5F64               	subwf	Read_Data@read_address& (0+255),f,b
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;storage.c: 53: data_read <<= 8;
  4622  001442  0100               	movlb	0	; () banked
  4623  001444  5162               	movf	Read_Data@data_read& (0+255),w,b
  4624  001446  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4625  001448  6B62               	clrf	Read_Data@data_read& (0+255),b
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;storage.c: 54: EEADR = read_address;
  4629  00144A  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;storage.c: 55: EECON1bits.EEPGD = 0;
  4633  00144E  9EA6               	bcf	4006,7,c	;volatile
  4634                           
  4635                           ; BSR set to: 0
  4636                           ;storage.c: 56: EECON1bits.CFGS = 0;
  4637  001450  9CA6               	bcf	4006,6,c	;volatile
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;storage.c: 57: EECON1bits.RD = 1;
  4641  001452  80A6               	bsf	4006,0,c	;volatile
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;storage.c: 58: data_read |= EEDATA;
  4645  001454  50A8               	movf	4008,w,c	;volatile
  4646  001456  0100               	movlb	0	; () banked
  4647  001458  1362               	iorwf	Read_Data@data_read& (0+255),f,b
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;storage.c: 59: return data_read;
  4651  00145A  C062  F060         	movff	Read_Data@data_read,?_Read_Data
  4652  00145E  C063  F061         	movff	Read_Data@data_read+1,?_Read_Data+1
  4653  001462  0012               	return	
  4654  001464                     __end_of_Read_Data:
  4655                           	opt stack 0
  4656                           tblptru	equ	0xFF8
  4657                           tblptrh	equ	0xFF7
  4658                           tblptrl	equ	0xFF6
  4659                           tablat	equ	0xFF5
  4660                           prodh	equ	0xFF4
  4661                           prodl	equ	0xFF3
  4662                           intcon	equ	0xFF2
  4663                           postinc0	equ	0xFEE
  4664                           wreg	equ	0xFE8
  4665                           postdec1	equ	0xFE5
  4666                           fsr1l	equ	0xFE1
  4667                           indf2	equ	0xFDF
  4668                           postinc2	equ	0xFDE
  4669                           postdec2	equ	0xFDD
  4670                           plusw2	equ	0xFDB
  4671                           fsr2h	equ	0xFDA
  4672                           fsr2l	equ	0xFD9
  4673                           status	equ	0xFD8
  4674                           
  4675 ;; *************** function _Delay_Routine *****************
  4676 ;; Defined at:
  4677 ;;		line 78 in file "main.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  delay_multip    1    wreg     unsigned char 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  delay_multip    1    1[BANK0 ] unsigned char 
  4682 ;;  delay_counte    1    2[BANK0 ] unsigned char 
  4683 ;; Return value:  Size  Location     Type
  4684 ;;		None               void
  4685 ;; Registers used:
  4686 ;;		wreg, status,2, status,0, cstack
  4687 ;; Tracked objects:
  4688 ;;		On entry : 0/0
  4689 ;;		On exit  : 0/0
  4690 ;;		Unchanged: 0/0
  4691 ;; Data sizes:     COMRAM   BANK0   BANK1
  4692 ;;      Params:         0       0       0
  4693 ;;      Locals:         0       2       0
  4694 ;;      Temps:          0       1       0
  4695 ;;      Totals:         0       3       0
  4696 ;;Total ram usage:        3 bytes
  4697 ;; Hardware stack levels used:    1
  4698 ;; Hardware stack levels required when called:    5
  4699 ;; This function calls:
  4700 ;;		Nothing
  4701 ;; This function is called by:
  4702 ;;		_Check_Buttons
  4703 ;;		_Load_Data
  4704 ;;		_Del_Data
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           	psect	text23
  4709  001642                     __ptext23:
  4710                           	opt stack 0
  4711  001642                     _Delay_Routine:
  4712                           	opt stack 24
  4713                           
  4714                           ; BSR set to: 0
  4715                           ;incstack = 0
  4716                           ;Delay_Routine@delay_multiplyer stored from wreg
  4717  001642  0100               	movlb	0	; () banked
  4718  001644  6F61               	movwf	Delay_Routine@delay_multiplyer& (0+255),b
  4719                           
  4720                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  4721  001646  0E00               	movlw	0
  4722  001648  0100               	movlb	0	; () banked
  4723  00164A  6F62               	movwf	Delay_Routine@delay_counter& (0+255),b
  4724                           
  4725                           ;main.c: 80: delay_counter++) {
  4726  00164C  D00A               	goto	l2948
  4727  00164E                     l2944:
  4728                           
  4729                           ; BSR set to: 0
  4730                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  4731  00164E  0E82               	movlw	130
  4732  001650  0100               	movlb	0	; () banked
  4733  001652  6F60               	movwf	??_Delay_Routine& (0+255),b
  4734  001654  0EDE               	movlw	222
  4735  001656                     u2417:
  4736  001656  2EE8               	decfsz	wreg,f,c
  4737  001658  D7FE               	goto	u2417
  4738  00165A  2F60               	decfsz	??_Delay_Routine& (0+255),f,b
  4739  00165C  D7FC               	goto	u2417
  4740  00165E  0100               	movlb	0	; () banked
  4741  001660  2B62               	incf	Delay_Routine@delay_counter& (0+255),f,b
  4742  001662                     l2948:
  4743                           
  4744                           ; BSR set to: 0
  4745  001662  0100               	movlb	0	; () banked
  4746  001664  5161               	movf	Delay_Routine@delay_multiplyer& (0+255),w,b
  4747  001666  0100               	movlb	0	; () banked
  4748  001668  5D62               	subwf	Delay_Routine@delay_counter& (0+255),w,b
  4749  00166A  A0D8               	btfss	status,0,c
  4750  00166C  D7F0               	goto	l2944
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;main.c: 82: }
  4754                           ;main.c: 83: __nop();
  4755  00166E  F000               	nop	
  4756  001670  0012               	return		;funcret
  4757  001672                     __end_of_Delay_Routine:
  4758                           	opt stack 0
  4759                           tblptru	equ	0xFF8
  4760                           tblptrh	equ	0xFF7
  4761                           tblptrl	equ	0xFF6
  4762                           tablat	equ	0xFF5
  4763                           prodh	equ	0xFF4
  4764                           prodl	equ	0xFF3
  4765                           intcon	equ	0xFF2
  4766                           postinc0	equ	0xFEE
  4767                           wreg	equ	0xFE8
  4768                           postdec1	equ	0xFE5
  4769                           fsr1l	equ	0xFE1
  4770                           indf2	equ	0xFDF
  4771                           postinc2	equ	0xFDE
  4772                           postdec2	equ	0xFDD
  4773                           plusw2	equ	0xFDB
  4774                           fsr2h	equ	0xFDA
  4775                           fsr2l	equ	0xFD9
  4776                           status	equ	0xFD8
  4777                           
  4778 ;; *************** function _Isr *****************
  4779 ;; Defined at:
  4780 ;;		line 4 in file "interrupt.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  search_index    1   41[COMRAM] unsigned char 
  4785 ;;  pixel_index_    1   40[COMRAM] unsigned char 
  4786 ;;  pixel_index_    1   39[COMRAM] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;		None               void
  4789 ;; Registers used:
  4790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1
  4796 ;;      Params:         0       0       0
  4797 ;;      Locals:         3       0       0
  4798 ;;      Temps:         17       0       0
  4799 ;;      Totals:        20       0       0
  4800 ;;Total ram usage:       20 bytes
  4801 ;; Hardware stack levels used:    1
  4802 ;; Hardware stack levels required when called:    4
  4803 ;; This function calls:
  4804 ;;		_Ignite_Detonators
  4805 ;;		_Receive
  4806 ;;		_Receive_Dump
  4807 ;;		___awdiv
  4808 ;;		i2_Check_Detonators
  4809 ;;		i2_Set_Display
  4810 ;; This function is called by:
  4811 ;;		Interrupt level 2
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	intcode
  4816  000008                     __pintcode:
  4817                           	opt stack 0
  4818  000008                     _Isr:
  4819                           	opt stack 19
  4820                           
  4821                           ;incstack = 0
  4822  000008  823E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4823  00000A  CFFA F01A          	movff	pclath,??_Isr+3
  4824  00000E  CFFB F01B          	movff	pclatu,??_Isr+4
  4825  000012  CFE9 F01C          	movff	fsr0l,??_Isr+5
  4826  000016  CFEA F01D          	movff	fsr0h,??_Isr+6
  4827  00001A  CFE1 F01E          	movff	fsr1l,??_Isr+7
  4828  00001E  CFE2 F01F          	movff	fsr1h,??_Isr+8
  4829  000022  CFD9 F020          	movff	fsr2l,??_Isr+9
  4830  000026  CFDA F021          	movff	fsr2h,??_Isr+10
  4831  00002A  CFF3 F022          	movff	prodl,??_Isr+11
  4832  00002E  CFF4 F023          	movff	prodh,??_Isr+12
  4833  000032  CFF6 F024          	movff	tblptrl,??_Isr+13
  4834  000036  CFF7 F025          	movff	tblptrh,??_Isr+14
  4835  00003A  CFF8 F026          	movff	tblptru,??_Isr+15
  4836  00003E  CFF5 F027          	movff	tablat,??_Isr+16
  4837                           
  4838                           ;interrupt.c: 5: if(PIR1bits.CCP1IF == 1) {
  4839  000042  A49E               	btfss	3998,2,c	;volatile
  4840  000044  D00B               	goto	i2l2746
  4841                           
  4842                           ;interrupt.c: 7: PIR1bits.CCP1IF = 0;
  4843  000046  949E               	bcf	3998,2,c	;volatile
  4844                           
  4845                           ;interrupt.c: 8: T1CONbits.TMR1ON = 1;
  4846  000048  80CD               	bsf	4045,0,c	;volatile
  4847                           
  4848                           ;interrupt.c: 9: T3CONbits.TMR3ON = 0;
  4849  00004A  90B1               	bcf	4017,0,c	;volatile
  4850                           
  4851                           ;interrupt.c: 10: TMR3L = 0;
  4852  00004C  0E00               	movlw	0
  4853  00004E  6EB2               	movwf	4018,c	;volatile
  4854                           
  4855                           ;interrupt.c: 11: TMR3H = 0;
  4856  000050  0E00               	movlw	0
  4857  000052  6EB3               	movwf	4019,c	;volatile
  4858                           
  4859                           ;interrupt.c: 12: current_time++;
  4860  000054  4A31               	infsnz	_current_time,f,c
  4861  000056  2A32               	incf	_current_time+1,f,c
  4862                           
  4863                           ;interrupt.c: 13: Ignite_Detonators();
  4864  000058  EC8E  F008         	call	_Ignite_Detonators	;wreg free
  4865  00005C                     i2l2746:
  4866                           
  4867                           ;interrupt.c: 14: }
  4868                           ;interrupt.c: 15: if(PIR1bits.TMR1IF == 1) {
  4869  00005C  A09E               	btfss	3998,0,c	;volatile
  4870  00005E  D007               	goto	i2l2752
  4871                           
  4872                           ;interrupt.c: 16: PIR1bits.TMR1IF = 0;
  4873  000060  909E               	bcf	3998,0,c	;volatile
  4874                           
  4875                           ;interrupt.c: 17: T3CONbits.TMR3ON = 1;
  4876  000062  80B1               	bsf	4017,0,c	;volatile
  4877                           
  4878                           ;interrupt.c: 18: T1CONbits.TMR1ON = 0;
  4879  000064  90CD               	bcf	4045,0,c	;volatile
  4880                           
  4881                           ;interrupt.c: 19: TMR1L = 0;
  4882  000066  0E00               	movlw	0
  4883  000068  6ECE               	movwf	4046,c	;volatile
  4884                           
  4885                           ;interrupt.c: 20: TMR1H = 0;
  4886  00006A  0E00               	movlw	0
  4887  00006C  6ECF               	movwf	4047,c	;volatile
  4888  00006E                     i2l2752:
  4889                           
  4890                           ;interrupt.c: 21: }
  4891                           ;interrupt.c: 22: if(PIR1bits.RCIF == 1) {
  4892  00006E  AA9E               	btfss	3998,5,c	;volatile
  4893  000070  D0B6               	goto	i2l628
  4894                           
  4895                           ;interrupt.c: 23: if(RCSTAbits.RX9D == 1) {
  4896  000072  A0AB               	btfss	4011,0,c	;volatile
  4897  000074  D016               	goto	i2l614
  4898                           
  4899                           ;interrupt.c: 24: receive_counter = 0;
  4900  000076  0E00               	movlw	0
  4901  000078  6E34               	movwf	_receive_counter,c
  4902                           
  4903                           ;interrupt.c: 26: received[receive_counter] =
  4904                           ;interrupt.c: 27: Receive();
  4905  00007A  5034               	movf	_receive_counter,w,c
  4906  00007C  0D01               	mullw	1
  4907  00007E  0E2B               	movlw	low _received
  4908  000080  24F3               	addwf	prodl,w,c
  4909  000082  6ED9               	movwf	fsr2l,c
  4910  000084  0E00               	movlw	high _received
  4911  000086  20F4               	addwfc	prodh,w,c
  4912  000088  6EDA               	movwf	fsr2h,c
  4913  00008A  ECA3  F00B         	call	_Receive	;wreg free
  4914  00008E  6EDF               	movwf	indf2,c
  4915                           
  4916                           ;interrupt.c: 28: receive_counter++;
  4917  000090  2A34               	incf	_receive_counter,f,c
  4918                           
  4919                           ;interrupt.c: 30: if(received[0] == 0xAA) {
  4920  000092  0EAA               	movlw	170
  4921  000094  182B               	xorwf	_received,w,c
  4922  000096  A4D8               	btfss	status,2,c
  4923  000098  D002               	goto	i2l615
  4924                           
  4925                           ;interrupt.c: 31: master_addressed = 1;
  4926  00009A  823C               	bsf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4927                           
  4928                           ;interrupt.c: 32: } else {
  4929  00009C  D093               	goto	i2l2804
  4930  00009E                     i2l615:
  4931                           
  4932                           ;interrupt.c: 33: master_addressed = 0;
  4933  00009E  923C               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4934                           
  4935                           ;interrupt.c: 34: }
  4936                           ;interrupt.c: 35: } else if(master_addressed == 1) {
  4937  0000A0  D091               	goto	i2l2804
  4938  0000A2                     i2l614:
  4939  0000A2  A23C               	btfss	_master_addressed/(0+8),_master_addressed& (0+7),c
  4940  0000A4  D08D               	goto	i2l2802
  4941                           
  4942                           ;interrupt.c: 36: received[receive_counter] =
  4943                           ;interrupt.c: 37: Receive();
  4944  0000A6  5034               	movf	_receive_counter,w,c
  4945  0000A8  0D01               	mullw	1
  4946  0000AA  0E2B               	movlw	low _received
  4947  0000AC  24F3               	addwf	prodl,w,c
  4948  0000AE  6ED9               	movwf	fsr2l,c
  4949  0000B0  0E00               	movlw	high _received
  4950  0000B2  20F4               	addwfc	prodh,w,c
  4951  0000B4  6EDA               	movwf	fsr2h,c
  4952  0000B6  ECA3  F00B         	call	_Receive	;wreg free
  4953  0000BA  6EDF               	movwf	indf2,c
  4954                           
  4955                           ;interrupt.c: 38: receive_counter++;
  4956  0000BC  2A34               	incf	_receive_counter,f,c
  4957                           
  4958                           ;interrupt.c: 40: if(receive_counter > 5) {
  4959  0000BE  0E05               	movlw	5
  4960  0000C0  6434               	cpfsgt	_receive_counter,c
  4961  0000C2  D080               	goto	i2l2804
  4962                           
  4963                           ;interrupt.c: 41: receive_counter = 0;
  4964  0000C4  0E00               	movlw	0
  4965  0000C6  6E34               	movwf	_receive_counter,c
  4966                           
  4967                           ;interrupt.c: 42: master_addressed = 0;
  4968  0000C8  923C               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4969                           
  4970                           ;interrupt.c: 44: if(received[2] == 'T') {
  4971  0000CA  0E54               	movlw	84
  4972  0000CC  182D               	xorwf	_received+2,w,c
  4973  0000CE  A4D8               	btfss	status,2,c
  4974  0000D0  D079               	goto	i2l2804
  4975                           
  4976                           ;interrupt.c: 45: unsigned char search_index = 0xFF;
  4977  0000D2  682A               	setf	Isr@search_index,c
  4978                           
  4979                           ;interrupt.c: 46: unsigned char pixel_index_array = 0;
  4980  0000D4  0E00               	movlw	0
  4981  0000D6  6E28               	movwf	Isr@pixel_index_array,c
  4982                           
  4983                           ;interrupt.c: 47: unsigned char pixel_index_bit = 0;
  4984  0000D8  0E00               	movlw	0
  4985  0000DA  6E29               	movwf	Isr@pixel_index_bit,c
  4986                           
  4987                           ;interrupt.c: 48: search_index = (received[1] * 10);
  4988  0000DC  502C               	movf	_received+1,w,c
  4989  0000DE  0D0A               	mullw	10
  4990  0000E0  CFF3 F02A          	movff	prodl,Isr@search_index
  4991                           
  4992                           ;interrupt.c: 50: search_index += received[3];
  4993  0000E4  502E               	movf	_received+3,w,c
  4994  0000E6  262A               	addwf	Isr@search_index,f,c
  4995                           
  4996                           ;interrupt.c: 52: pixel_index_array =
  4997                           ;interrupt.c: 53: pin[search_index].led_address / 8;
  4998  0000E8  502A               	movf	Isr@search_index,w,c
  4999  0000EA  0D06               	mullw	6
  5000  0000EC  0E03               	movlw	3
  5001  0000EE  26F3               	addwf	prodl,f,c
  5002  0000F0  0E00               	movlw	0
  5003  0000F2  22F4               	addwfc	prodh,f,c
  5004  0000F4  0E00               	movlw	low _pin
  5005  0000F6  24F3               	addwf	prodl,w,c
  5006  0000F8  6ED9               	movwf	fsr2l,c
  5007  0000FA  0E01               	movlw	high _pin
  5008  0000FC  20F4               	addwfc	prodh,w,c
  5009  0000FE  6EDA               	movwf	fsr2h,c
  5010  000100  50DF               	movf	indf2,w,c
  5011  000102  6E17               	movwf	??_Isr& (0+255),c
  5012  000104  5017               	movf	??_Isr,w,c
  5013  000106  6E01               	movwf	___awdiv@dividend,c
  5014  000108  6A02               	clrf	___awdiv@dividend+1,c
  5015  00010A  0E00               	movlw	0
  5016  00010C  6E04               	movwf	___awdiv@divisor+1,c
  5017  00010E  0E08               	movlw	8
  5018  000110  6E03               	movwf	___awdiv@divisor,c
  5019  000112  EC10  F008         	call	___awdiv	;wreg free
  5020  000116  5001               	movf	?___awdiv,w,c
  5021  000118  6E28               	movwf	Isr@pixel_index_array,c
  5022                           
  5023                           ;interrupt.c: 54: pixel_index_bit =
  5024                           ;interrupt.c: 55: pin[search_index].led_address % 8;
  5025  00011A  502A               	movf	Isr@search_index,w,c
  5026  00011C  0D06               	mullw	6
  5027  00011E  0E03               	movlw	3
  5028  000120  26F3               	addwf	prodl,f,c
  5029  000122  0E00               	movlw	0
  5030  000124  22F4               	addwfc	prodh,f,c
  5031  000126  0E00               	movlw	low _pin
  5032  000128  24F3               	addwf	prodl,w,c
  5033  00012A  6ED9               	movwf	fsr2l,c
  5034  00012C  0E01               	movlw	high _pin
  5035  00012E  20F4               	addwfc	prodh,w,c
  5036  000130  6EDA               	movwf	fsr2h,c
  5037  000132  50DF               	movf	indf2,w,c
  5038  000134  0B07               	andlw	7
  5039  000136  6E29               	movwf	Isr@pixel_index_bit,c
  5040                           
  5041                           ;interrupt.c: 56: if(received[4] == '1'){
  5042  000138  0E31               	movlw	49
  5043  00013A  182F               	xorwf	_received+4,w,c
  5044  00013C  A4D8               	btfss	status,2,c
  5045  00013E  D015               	goto	i2l2794
  5046                           
  5047                           ;interrupt.c: 57: pixels[pixel_index_array] |=
  5048                           ;interrupt.c: 58: (1 << pixel_index_bit);
  5049  000140  C029  F017         	movff	Isr@pixel_index_bit,??_Isr
  5050  000144  0E01               	movlw	1
  5051  000146  6E18               	movwf	(??_Isr+1)& (0+255),c
  5052  000148  2A17               	incf	??_Isr,f,c
  5053  00014A  D002               	goto	i2u183_44
  5054  00014C                     i2u183_45:
  5055  00014C  90D8               	bcf	status,0,c
  5056  00014E  3618               	rlcf	??_Isr+1,f,c
  5057  000150                     i2u183_44:
  5058  000150  2E17               	decfsz	??_Isr,f,c
  5059  000152  D7FC               	goto	i2u183_45
  5060  000154  5028               	movf	Isr@pixel_index_array,w,c
  5061  000156  0D01               	mullw	1
  5062  000158  0E35               	movlw	low _pixels
  5063  00015A  24F3               	addwf	prodl,w,c
  5064  00015C  6ED9               	movwf	fsr2l,c
  5065  00015E  0E00               	movlw	high _pixels
  5066  000160  20F4               	addwfc	prodh,w,c
  5067  000162  6EDA               	movwf	fsr2h,c
  5068  000164  5018               	movf	??_Isr+1,w,c
  5069  000166  12DF               	iorwf	indf2,f,c
  5070                           
  5071                           ;interrupt.c: 59: }else if(received[4] == '0') {
  5072  000168  D01B               	goto	i2l2798
  5073  00016A                     i2l2794:
  5074  00016A  0E30               	movlw	48
  5075  00016C  182F               	xorwf	_received+4,w,c
  5076  00016E  A4D8               	btfss	status,2,c
  5077  000170  D017               	goto	i2l2798
  5078                           
  5079                           ;interrupt.c: 60: pixels[pixel_index_array] &=
  5080                           ;interrupt.c: 61: ~(1 << pixel_index_bit);
  5081  000172  C029  F017         	movff	Isr@pixel_index_bit,??_Isr
  5082  000176  0E01               	movlw	1
  5083  000178  6E18               	movwf	(??_Isr+1)& (0+255),c
  5084  00017A  2A17               	incf	??_Isr,f,c
  5085  00017C  D002               	goto	i2u185_44
  5086  00017E                     i2u185_45:
  5087  00017E  90D8               	bcf	status,0,c
  5088  000180  3618               	rlcf	??_Isr+1,f,c
  5089  000182                     i2u185_44:
  5090  000182  2E17               	decfsz	??_Isr,f,c
  5091  000184  D7FC               	goto	i2u185_45
  5092  000186  5018               	movf	??_Isr+1,w,c
  5093  000188  0AFF               	xorlw	255
  5094  00018A  6E19               	movwf	(??_Isr+2)& (0+255),c
  5095  00018C  5028               	movf	Isr@pixel_index_array,w,c
  5096  00018E  0D01               	mullw	1
  5097  000190  0E35               	movlw	low _pixels
  5098  000192  24F3               	addwf	prodl,w,c
  5099  000194  6ED9               	movwf	fsr2l,c
  5100  000196  0E00               	movlw	high _pixels
  5101  000198  20F4               	addwfc	prodh,w,c
  5102  00019A  6EDA               	movwf	fsr2h,c
  5103  00019C  5019               	movf	??_Isr+2,w,c
  5104  00019E  16DF               	andwf	indf2,f,c
  5105  0001A0                     i2l2798:
  5106                           
  5107                           ;interrupt.c: 62: }
  5108                           ;interrupt.c: 63: if(received[5] == '1') {
  5109  0001A0  0E31               	movlw	49
  5110  0001A2  1830               	xorwf	_received+5,w,c
  5111  0001A4  A4D8               	btfss	status,2,c
  5112  0001A6  D00E               	goto	i2l2804
  5113                           
  5114                           ;interrupt.c: 64: Set_Display('7', 'P', (received[1] + 1));
  5115  0001A8  0E50               	movlw	80
  5116  0001AA  6E13               	movwf	i2Set_Display@information,c
  5117  0001AC  0E01               	movlw	1
  5118  0001AE  242C               	addwf	_received+1,w,c
  5119  0001B0  6E14               	movwf	i2Set_Display@value,c
  5120  0001B2  6A15               	clrf	i2Set_Display@value+1,c
  5121  0001B4  0E00               	movlw	0
  5122  0001B6  2215               	addwfc	i2Set_Display@value+1,f,c
  5123  0001B8  0E37               	movlw	55
  5124  0001BA  ECB6  F009         	call	i2_Set_Display
  5125                           
  5126                           ;interrupt.c: 65: }
  5127                           ;interrupt.c: 66: }
  5128                           ;interrupt.c: 67: }
  5129                           ;interrupt.c: 68: } else {
  5130  0001BE  D002               	goto	i2l2804
  5131  0001C0                     i2l2802:
  5132                           
  5133                           ;interrupt.c: 69: Receive_Dump();
  5134  0001C0  EC9B  F00B         	call	_Receive_Dump	;wreg free
  5135  0001C4                     i2l2804:
  5136                           
  5137                           ;interrupt.c: 70: }
  5138                           ;interrupt.c: 71: __nop();
  5139  0001C4  F000               	nop	
  5140                           
  5141                           ;interrupt.c: 72: if(check_counter < 30 && testflag == 1) {
  5142  0001C6  0E1E               	movlw	30
  5143  0001C8  6033               	cpfslt	_check_counter,c
  5144  0001CA  D006               	goto	i2l2814
  5145  0001CC  A63C               	btfss	_testflag/(0+8),_testflag& (0+7),c
  5146  0001CE  D004               	goto	i2l2814
  5147                           
  5148                           ;interrupt.c: 73: check_counter++;
  5149  0001D0  2A33               	incf	_check_counter,f,c
  5150                           
  5151                           ;interrupt.c: 74: Check_Detonators();
  5152  0001D2  ECD2  F00A         	call	i2_Check_Detonators	;wreg free
  5153                           
  5154                           ;interrupt.c: 75: }else {
  5155  0001D6  D003               	goto	i2l628
  5156  0001D8                     i2l2814:
  5157                           
  5158                           ;interrupt.c: 76: check_counter = 0;
  5159  0001D8  0E00               	movlw	0
  5160  0001DA  6E33               	movwf	_check_counter,c
  5161                           
  5162                           ;interrupt.c: 77: testflag = 0;
  5163  0001DC  963C               	bcf	_testflag/(0+8),_testflag& (0+7),c
  5164  0001DE                     i2l628:
  5165  0001DE  C027  FFF5         	movff	??_Isr+16,tablat
  5166  0001E2  C026  FFF8         	movff	??_Isr+15,tblptru
  5167  0001E6  C025  FFF7         	movff	??_Isr+14,tblptrh
  5168  0001EA  C024  FFF6         	movff	??_Isr+13,tblptrl
  5169  0001EE  C023  FFF4         	movff	??_Isr+12,prodh
  5170  0001F2  C022  FFF3         	movff	??_Isr+11,prodl
  5171  0001F6  C021  FFDA         	movff	??_Isr+10,fsr2h
  5172  0001FA  C020  FFD9         	movff	??_Isr+9,fsr2l
  5173  0001FE  C01F  FFE2         	movff	??_Isr+8,fsr1h
  5174  000202  C01E  FFE1         	movff	??_Isr+7,fsr1l
  5175  000206  C01D  FFEA         	movff	??_Isr+6,fsr0h
  5176  00020A  C01C  FFE9         	movff	??_Isr+5,fsr0l
  5177  00020E  C01B  FFFB         	movff	??_Isr+4,pclatu
  5178  000212  C01A  FFFA         	movff	??_Isr+3,pclath
  5179  000216  923E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5180  000218  0011               	retfie		f
  5181  00021A                     __end_of_Isr:
  5182                           	opt stack 0
  5183                           pclatu	equ	0xFFB
  5184                           pclath	equ	0xFFA
  5185                           tblptru	equ	0xFF8
  5186                           tblptrh	equ	0xFF7
  5187                           tblptrl	equ	0xFF6
  5188                           tablat	equ	0xFF5
  5189                           prodh	equ	0xFF4
  5190                           prodl	equ	0xFF3
  5191                           intcon	equ	0xFF2
  5192                           postinc0	equ	0xFEE
  5193                           fsr0h	equ	0xFEA
  5194                           fsr0l	equ	0xFE9
  5195                           wreg	equ	0xFE8
  5196                           postdec1	equ	0xFE5
  5197                           fsr1h	equ	0xFE2
  5198                           fsr1l	equ	0xFE1
  5199                           indf2	equ	0xFDF
  5200                           postinc2	equ	0xFDE
  5201                           postdec2	equ	0xFDD
  5202                           plusw2	equ	0xFDB
  5203                           fsr2h	equ	0xFDA
  5204                           fsr2l	equ	0xFD9
  5205                           status	equ	0xFD8
  5206                           
  5207 ;; *************** function i2_Set_Display *****************
  5208 ;; Defined at:
  5209 ;;		line 139 in file "display.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  type            1    wreg     unsigned char 
  5212 ;;  information     1   18[COMRAM] unsigned char 
  5213 ;;  value           2   19[COMRAM] unsigned int 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  type            1   21[COMRAM] unsigned char 
  5216 ;; Return value:  Size  Location     Type
  5217 ;;		None               void
  5218 ;; Registers used:
  5219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMRAM   BANK0   BANK1
  5225 ;;      Params:         3       0       0
  5226 ;;      Locals:         1       0       0
  5227 ;;      Temps:          0       0       0
  5228 ;;      Totals:         4       0       0
  5229 ;;Total ram usage:        4 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; Hardware stack levels required when called:    3
  5232 ;; This function calls:
  5233 ;;		i2_Evaluate_Display
  5234 ;;		i2_Evaluate_Signs
  5235 ;;		i2_Write_Display_Byte
  5236 ;; This function is called by:
  5237 ;;		_Isr
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text25
  5242  00136C                     __ptext25:
  5243                           	opt stack 0
  5244  00136C                     i2_Set_Display:
  5245                           	opt stack 19
  5246                           
  5247                           ;incstack = 0
  5248                           ;i2Set_Display@type stored from wreg
  5249  00136C  6E16               	movwf	i2Set_Display@type,c
  5250                           
  5251                           ;display.c: 141: switch (type) {
  5252  00136E  D01D               	goto	i2l2718
  5253  001370                     i2l2702:
  5254                           
  5255                           ;display.c: 143: if(information != '-') {
  5256  001370  0E2D               	movlw	45
  5257  001372  1813               	xorwf	i2Set_Display@information,w,c
  5258  001374  B4D8               	btfsc	status,2,c
  5259  001376  D012               	goto	i2l2714
  5260                           
  5261                           ;display.c: 144: signs[0] = value;
  5262  001378  C014  F07D         	movff	i2Set_Display@value,_signs
  5263                           
  5264                           ;display.c: 145: signs[0] += 0x30;
  5265  00137C  0E30               	movlw	48
  5266  00137E  0100               	movlb	0	; () banked
  5267  001380  277D               	addwf	_signs& (0+255),f,b
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;display.c: 146: signs[1] = '-';
  5271  001382  0E2D               	movlw	45
  5272  001384  0100               	movlb	0	; () banked
  5273  001386  6F7E               	movwf	(_signs+1)& (0+255),b
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;display.c: 147: signs[2] = information;
  5277  001388  C013  F07F         	movff	i2Set_Display@information,_signs+2
  5278                           
  5279                           ; BSR set to: 0
  5280                           ;display.c: 148: Evaluate_Display(sizeof(signs), signs);
  5281  00138C  0E7D               	movlw	low _signs
  5282  00138E  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5283  001390  0E00               	movlw	high _signs
  5284  001392  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5285  001394  0E03               	movlw	3
  5286  001396  EC2E  F005         	call	i2_Evaluate_Display
  5287                           
  5288                           ;display.c: 149: } else {
  5289  00139A  D00C               	goto	i2l2720
  5290  00139C                     i2l2714:
  5291                           
  5292                           ;display.c: 150: Evaluate_Signs(value);
  5293  00139C  C014  F010         	movff	i2Set_Display@value,i2Evaluate_Signs@evaluation_value
  5294  0013A0  C015  F011         	movff	i2Set_Display@value+1,i2Evaluate_Signs@evaluation_value+1
  5295  0013A4  ECF6  F008         	call	i2_Evaluate_Signs	;wreg free
  5296                           
  5297                           ;display.c: 156: }
  5298                           
  5299                           ;display.c: 155: break;
  5300                           
  5301                           ;display.c: 153: case 'L':
  5302                           
  5303                           ;display.c: 151: }
  5304                           ;display.c: 152: break;
  5305  0013A8  D005               	goto	i2l2720
  5306  0013AA                     i2l2718:
  5307  0013AA  5016               	movf	i2Set_Display@type,w,c
  5308                           
  5309                           ; Switch size 1, requested type "space"
  5310                           ; Number of cases is 2, Range of values is 55 to 76
  5311                           ; switch strategies available:
  5312                           ; Name         Instructions Cycles
  5313                           ; simple_byte            7     4 (average)
  5314                           ;	Chosen strategy is simple_byte
  5315  0013AC  0A37               	xorlw	55	; case 55
  5316  0013AE  B4D8               	btfsc	status,2,c
  5317  0013B0  D7DF               	goto	i2l2702
  5318  0013B2  0A7B               	xorlw	123	; case 76
  5319  0013B4                     i2l2720:
  5320                           
  5321                           ;display.c: 157: Write_Display_Byte(pixels);
  5322  0013B4  0E35               	movlw	low _pixels
  5323  0013B6  6E01               	movwf	i2Write_Display_Byte@write_data,c
  5324  0013B8  0E00               	movlw	high _pixels
  5325  0013BA  6E02               	movwf	i2Write_Display_Byte@write_data+1,c
  5326  0013BC  EC56  F00A         	call	i2_Write_Display_Byte	;wreg free
  5327  0013C0  0012               	return		;funcret
  5328  0013C2                     __end_ofi2_Set_Display:
  5329                           	opt stack 0
  5330                           pclatu	equ	0xFFB
  5331                           pclath	equ	0xFFA
  5332                           tblptru	equ	0xFF8
  5333                           tblptrh	equ	0xFF7
  5334                           tblptrl	equ	0xFF6
  5335                           tablat	equ	0xFF5
  5336                           prodh	equ	0xFF4
  5337                           prodl	equ	0xFF3
  5338                           intcon	equ	0xFF2
  5339                           postinc0	equ	0xFEE
  5340                           fsr0h	equ	0xFEA
  5341                           fsr0l	equ	0xFE9
  5342                           wreg	equ	0xFE8
  5343                           postdec1	equ	0xFE5
  5344                           fsr1h	equ	0xFE2
  5345                           fsr1l	equ	0xFE1
  5346                           indf2	equ	0xFDF
  5347                           postinc2	equ	0xFDE
  5348                           postdec2	equ	0xFDD
  5349                           plusw2	equ	0xFDB
  5350                           fsr2h	equ	0xFDA
  5351                           fsr2l	equ	0xFD9
  5352                           status	equ	0xFD8
  5353                           
  5354 ;; *************** function i2_Write_Display_Byte *****************
  5355 ;; Defined at:
  5356 ;;		line 56 in file "communication.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  write_data      2    0[COMRAM] PTR unsigned char 
  5359 ;;		 -> pixels(7), 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  Write_Displa    1    6[COMRAM] unsigned char 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;		None               void
  5364 ;; Registers used:
  5365 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1
  5371 ;;      Params:         2       0       0
  5372 ;;      Locals:         1       0       0
  5373 ;;      Temps:          4       0       0
  5374 ;;      Totals:         7       0       0
  5375 ;;Total ram usage:        7 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		i2_Set_Display
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           	psect	text26
  5385  0014AC                     __ptext26:
  5386                           	opt stack 0
  5387  0014AC                     i2_Write_Display_Byte:
  5388                           	opt stack 21
  5389                           
  5390                           ;communication.c: 57: for(unsigned char counter = sizeof(pixels); counter > 0;
  5391                           
  5392                           ;incstack = 0
  5393  0014AC  0E07               	movlw	7
  5394  0014AE  6E07               	movwf	i2Write_Display_Byte@counter,c
  5395  0014B0                     
  5396                           ;communication.c: 58: counter--) {
  5397  0014B0  5007               	movf	i2Write_Display_Byte@counter,w,c
  5398  0014B2  B4D8               	btfsc	status,2,c
  5399  0014B4  0012               	return	
  5400                           
  5401                           ;communication.c: 59: if(SSP1IF = 1) {
  5402  0014B6  869E               	bsf	3998,3,c	;volatile
  5403  0014B8  B69E               	btfsc	3998,3,c	;volatile
  5404                           
  5405                           ;communication.c: 60: SSP1IF = 0;
  5406  0014BA  969E               	bcf	3998,3,c	;volatile
  5407                           
  5408                           ;communication.c: 61: }
  5409                           ;communication.c: 62: SSP1BUF = write_data[counter - 1];
  5410  0014BC  0EFF               	movlw	255
  5411  0014BE  6E03               	movwf	??i2_Write_Display_Byte& (0+255),c
  5412  0014C0  0EFF               	movlw	255
  5413  0014C2  6E04               	movwf	(??i2_Write_Display_Byte+1)& (0+255),c
  5414  0014C4  5007               	movf	i2Write_Display_Byte@counter,w,c
  5415  0014C6  6E05               	movwf	(??i2_Write_Display_Byte+2)& (0+255),c
  5416  0014C8  6A06               	clrf	(??i2_Write_Display_Byte+3)& (0+255),c
  5417  0014CA  5003               	movf	??i2_Write_Display_Byte,w,c
  5418  0014CC  2605               	addwf	??i2_Write_Display_Byte+2,f,c
  5419  0014CE  5004               	movf	??i2_Write_Display_Byte+1,w,c
  5420  0014D0  2206               	addwfc	??i2_Write_Display_Byte+3,f,c
  5421  0014D2  5005               	movf	??i2_Write_Display_Byte+2,w,c
  5422  0014D4  2401               	addwf	i2Write_Display_Byte@write_data,w,c
  5423  0014D6  6ED9               	movwf	fsr2l,c
  5424  0014D8  5006               	movf	??i2_Write_Display_Byte+3,w,c
  5425  0014DA  2002               	addwfc	i2Write_Display_Byte@write_data+1,w,c
  5426  0014DC  6EDA               	movwf	fsr2h,c
  5427  0014DE  50DF               	movf	indf2,w,c
  5428  0014E0  6EC9               	movwf	4041,c	;volatile
  5429                           
  5430                           ;communication.c: 64: SSP1IF = 0;
  5431  0014E2  969E               	bcf	3998,3,c	;volatile
  5432                           
  5433                           ;communication.c: 65: PORTCbits.RC0 = 0;
  5434  0014E4  9082               	bcf	3970,0,c	;volatile
  5435                           
  5436                           ;communication.c: 66: PORTCbits.RC0 = 1;
  5437  0014E6  8082               	bsf	3970,0,c	;volatile
  5438                           
  5439                           ;communication.c: 67: PORTCbits.RC0 = 0;
  5440  0014E8  9082               	bcf	3970,0,c	;volatile
  5441  0014EA  0607               	decf	i2Write_Display_Byte@counter,f,c
  5442  0014EC  D7E1               	goto	L4
  5443  0014EE                     __end_ofi2_Write_Display_Byte:
  5444                           	opt stack 0
  5445                           pclatu	equ	0xFFB
  5446                           pclath	equ	0xFFA
  5447                           tblptru	equ	0xFF8
  5448                           tblptrh	equ	0xFF7
  5449                           tblptrl	equ	0xFF6
  5450                           tablat	equ	0xFF5
  5451                           prodh	equ	0xFF4
  5452                           prodl	equ	0xFF3
  5453                           intcon	equ	0xFF2
  5454                           postinc0	equ	0xFEE
  5455                           fsr0h	equ	0xFEA
  5456                           fsr0l	equ	0xFE9
  5457                           wreg	equ	0xFE8
  5458                           postdec1	equ	0xFE5
  5459                           fsr1h	equ	0xFE2
  5460                           fsr1l	equ	0xFE1
  5461                           indf2	equ	0xFDF
  5462                           postinc2	equ	0xFDE
  5463                           postdec2	equ	0xFDD
  5464                           plusw2	equ	0xFDB
  5465                           fsr2h	equ	0xFDA
  5466                           fsr2l	equ	0xFD9
  5467                           status	equ	0xFD8
  5468                           
  5469 ;; *************** function i2_Evaluate_Signs *****************
  5470 ;; Defined at:
  5471 ;;		line 119 in file "display.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;  evaluation_v    2   15[COMRAM] unsigned int 
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;  Evaluate_Sig    1   17[COMRAM] unsigned char 
  5476 ;; Return value:  Size  Location     Type
  5477 ;;		None               void
  5478 ;; Registers used:
  5479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1
  5485 ;;      Params:         2       0       0
  5486 ;;      Locals:         1       0       0
  5487 ;;      Temps:          0       0       0
  5488 ;;      Totals:         3       0       0
  5489 ;;Total ram usage:        3 bytes
  5490 ;; Hardware stack levels used:    1
  5491 ;; Hardware stack levels required when called:    2
  5492 ;; This function calls:
  5493 ;;		i2_Evaluate_Display
  5494 ;;		i2___lwmod
  5495 ;; This function is called by:
  5496 ;;		i2_Set_Display
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           	psect	text27
  5501  0011EC                     __ptext27:
  5502                           	opt stack 0
  5503  0011EC                     i2_Evaluate_Signs:
  5504                           	opt stack 19
  5505                           
  5506                           ;display.c: 120: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  5507                           
  5508                           ;incstack = 0
  5509  0011EC  0E00               	movlw	0
  5510  0011EE  6E12               	movwf	i2Evaluate_Signs@valuecounter,c
  5511  0011F0                     i2l2422:
  5512                           
  5513                           ;display.c: 121: valuecounter++) {
  5514  0011F0  0E02               	movlw	2
  5515  0011F2  6412               	cpfsgt	i2Evaluate_Signs@valuecounter,c
  5516  0011F4  D001               	goto	i2l2426
  5517  0011F6  D023               	goto	i2l454
  5518  0011F8                     i2l2426:
  5519                           
  5520                           ;display.c: 122: signs[valuecounter] = evaluation_value % 10;
  5521  0011F8  5012               	movf	i2Evaluate_Signs@valuecounter,w,c
  5522  0011FA  0D01               	mullw	1
  5523  0011FC  0E7D               	movlw	low _signs
  5524  0011FE  24F3               	addwf	prodl,w,c
  5525  001200  6ED9               	movwf	fsr2l,c
  5526  001202  0E00               	movlw	high _signs
  5527  001204  20F4               	addwfc	prodh,w,c
  5528  001206  6EDA               	movwf	fsr2h,c
  5529  001208  C010  F001         	movff	i2Evaluate_Signs@evaluation_value,i2___lwmod@dividend
  5530  00120C  C011  F002         	movff	i2Evaluate_Signs@evaluation_value+1,i2___lwmod@dividend+1
  5531  001210  0E00               	movlw	0
  5532  001212  6E04               	movwf	i2___lwmod@divisor+1,c
  5533  001214  0E0A               	movlw	10
  5534  001216  6E03               	movwf	i2___lwmod@divisor,c
  5535  001218  EC77  F00A         	call	i2___lwmod	;wreg free
  5536  00121C  5001               	movf	?i2___lwmod,w,c
  5537  00121E  6EDF               	movwf	indf2,c
  5538                           
  5539                           ;display.c: 123: signs[valuecounter] += 0x30;
  5540  001220  5012               	movf	i2Evaluate_Signs@valuecounter,w,c
  5541  001222  0D01               	mullw	1
  5542  001224  0E7D               	movlw	low _signs
  5543  001226  24F3               	addwf	prodl,w,c
  5544  001228  6ED9               	movwf	fsr2l,c
  5545  00122A  0E00               	movlw	high _signs
  5546  00122C  20F4               	addwfc	prodh,w,c
  5547  00122E  6EDA               	movwf	fsr2h,c
  5548  001230  0E30               	movlw	48
  5549  001232  26DF               	addwf	indf2,f,c
  5550                           
  5551                           ;display.c: 124: evaluation_value >>= 1;
  5552  001234  90D8               	bcf	status,0,c
  5553  001236  3211               	rrcf	i2Evaluate_Signs@evaluation_value+1,f,c
  5554  001238  3210               	rrcf	i2Evaluate_Signs@evaluation_value,f,c
  5555  00123A  2A12               	incf	i2Evaluate_Signs@valuecounter,f,c
  5556  00123C  D7D9               	goto	i2l2422
  5557  00123E                     i2l454:
  5558                           
  5559                           ;display.c: 125: }
  5560                           ;display.c: 126: __nop();
  5561  00123E  F000               	nop	
  5562                           
  5563                           ;display.c: 127: Evaluate_Display(sizeof(signs), signs);
  5564  001240  0E7D               	movlw	low _signs
  5565  001242  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5566  001244  0E00               	movlw	high _signs
  5567  001246  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5568  001248  0E03               	movlw	3
  5569  00124A  EC2E  F005         	call	i2_Evaluate_Display
  5570  00124E  0012               	return		;funcret
  5571  001250                     __end_ofi2_Evaluate_Signs:
  5572                           	opt stack 0
  5573                           pclatu	equ	0xFFB
  5574                           pclath	equ	0xFFA
  5575                           tblptru	equ	0xFF8
  5576                           tblptrh	equ	0xFF7
  5577                           tblptrl	equ	0xFF6
  5578                           tablat	equ	0xFF5
  5579                           prodh	equ	0xFF4
  5580                           prodl	equ	0xFF3
  5581                           intcon	equ	0xFF2
  5582                           postinc0	equ	0xFEE
  5583                           fsr0h	equ	0xFEA
  5584                           fsr0l	equ	0xFE9
  5585                           wreg	equ	0xFE8
  5586                           postdec1	equ	0xFE5
  5587                           fsr1h	equ	0xFE2
  5588                           fsr1l	equ	0xFE1
  5589                           indf2	equ	0xFDF
  5590                           postinc2	equ	0xFDE
  5591                           postdec2	equ	0xFDD
  5592                           plusw2	equ	0xFDB
  5593                           fsr2h	equ	0xFDA
  5594                           fsr2l	equ	0xFD9
  5595                           status	equ	0xFD8
  5596                           
  5597 ;; *************** function i2___lwmod *****************
  5598 ;; Defined at:
  5599 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5600 ;; Parameters:    Size  Location     Type
  5601 ;;  dividend        2    0[COMRAM] unsigned int 
  5602 ;;  divisor         2    2[COMRAM] unsigned int 
  5603 ;; Auto vars:     Size  Location     Type
  5604 ;;  __lwmod         1    4[COMRAM] unsigned char 
  5605 ;; Return value:  Size  Location     Type
  5606 ;;                  2    0[COMRAM] unsigned int 
  5607 ;; Registers used:
  5608 ;;		wreg, status,2, status,0
  5609 ;; Tracked objects:
  5610 ;;		On entry : 0/0
  5611 ;;		On exit  : 0/0
  5612 ;;		Unchanged: 0/0
  5613 ;; Data sizes:     COMRAM   BANK0   BANK1
  5614 ;;      Params:         4       0       0
  5615 ;;      Locals:         1       0       0
  5616 ;;      Temps:          0       0       0
  5617 ;;      Totals:         5       0       0
  5618 ;;Total ram usage:        5 bytes
  5619 ;; Hardware stack levels used:    1
  5620 ;; This function calls:
  5621 ;;		Nothing
  5622 ;; This function is called by:
  5623 ;;		i2_Evaluate_Signs
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           	psect	text28
  5628  0014EE                     __ptext28:
  5629                           	opt stack 0
  5630  0014EE                     i2___lwmod:
  5631                           	opt stack 20
  5632                           
  5633                           ;incstack = 0
  5634  0014EE  5003               	movf	i2___lwmod@divisor,w,c
  5635  0014F0  1004               	iorwf	i2___lwmod@divisor+1,w,c
  5636  0014F2  B4D8               	btfsc	status,2,c
  5637  0014F4  D018               	goto	i2l1041
  5638  0014F6  0E01               	movlw	1
  5639  0014F8  6E05               	movwf	i2___lwmod@counter,c
  5640  0014FA  D004               	goto	i2l2374
  5641  0014FC                     i2l2372:
  5642  0014FC  90D8               	bcf	status,0,c
  5643  0014FE  3603               	rlcf	i2___lwmod@divisor,f,c
  5644  001500  3604               	rlcf	i2___lwmod@divisor+1,f,c
  5645  001502  2A05               	incf	i2___lwmod@counter,f,c
  5646  001504                     i2l2374:
  5647  001504  AE04               	btfss	i2___lwmod@divisor+1,7,c
  5648  001506  D7FA               	goto	i2l2372
  5649  001508                     i2l2376:
  5650  001508  5003               	movf	i2___lwmod@divisor,w,c
  5651  00150A  5C01               	subwf	i2___lwmod@dividend,w,c
  5652  00150C  5004               	movf	i2___lwmod@divisor+1,w,c
  5653  00150E  5802               	subwfb	i2___lwmod@dividend+1,w,c
  5654  001510  A0D8               	btfss	status,0,c
  5655  001512  D004               	goto	i2l2380
  5656  001514  5003               	movf	i2___lwmod@divisor,w,c
  5657  001516  5E01               	subwf	i2___lwmod@dividend,f,c
  5658  001518  5004               	movf	i2___lwmod@divisor+1,w,c
  5659  00151A  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  5660  00151C                     i2l2380:
  5661  00151C  90D8               	bcf	status,0,c
  5662  00151E  3204               	rrcf	i2___lwmod@divisor+1,f,c
  5663  001520  3203               	rrcf	i2___lwmod@divisor,f,c
  5664  001522  2E05               	decfsz	i2___lwmod@counter,f,c
  5665  001524  D7F1               	goto	i2l2376
  5666  001526                     i2l1041:
  5667  001526  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  5668  00152A  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  5669  00152E  0012               	return		;funcret
  5670  001530                     __end_ofi2___lwmod:
  5671                           	opt stack 0
  5672                           pclatu	equ	0xFFB
  5673                           pclath	equ	0xFFA
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           prodh	equ	0xFF4
  5679                           prodl	equ	0xFF3
  5680                           intcon	equ	0xFF2
  5681                           postinc0	equ	0xFEE
  5682                           fsr0h	equ	0xFEA
  5683                           fsr0l	equ	0xFE9
  5684                           wreg	equ	0xFE8
  5685                           postdec1	equ	0xFE5
  5686                           fsr1h	equ	0xFE2
  5687                           fsr1l	equ	0xFE1
  5688                           indf2	equ	0xFDF
  5689                           postinc2	equ	0xFDE
  5690                           postdec2	equ	0xFDD
  5691                           plusw2	equ	0xFDB
  5692                           fsr2h	equ	0xFDA
  5693                           fsr2l	equ	0xFD9
  5694                           status	equ	0xFD8
  5695                           
  5696 ;; *************** function i2_Evaluate_Display *****************
  5697 ;; Defined at:
  5698 ;;		line 52 in file "display.c"
  5699 ;; Parameters:    Size  Location     Type
  5700 ;;  size            1    wreg     unsigned char 
  5701 ;;  evaluate        2    8[COMRAM] PTR unsigned char 
  5702 ;;		 -> signs(3), string_delete(3), string_load(3), 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  size            1   14[COMRAM] unsigned char 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;		None               void
  5707 ;; Registers used:
  5708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1
  5714 ;;      Params:         2       0       0
  5715 ;;      Locals:         1       0       0
  5716 ;;      Temps:          4       0       0
  5717 ;;      Totals:         7       0       0
  5718 ;;Total ram usage:        7 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    1
  5721 ;; This function calls:
  5722 ;;		i2_Set_Bits
  5723 ;; This function is called by:
  5724 ;;		i2_Evaluate_Signs
  5725 ;;		i2_Set_Display
  5726 ;; This function uses a non-reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text29
  5730  000A5C                     __ptext29:
  5731                           	opt stack 0
  5732  000A5C                     i2_Evaluate_Display:
  5733                           	opt stack 19
  5734                           
  5735                           ;incstack = 0
  5736                           ;i2Evaluate_Display@size stored from wreg
  5737  000A5C  6E0F               	movwf	i2Evaluate_Display@size,c
  5738                           
  5739                           ;display.c: 53: for(display_counter = (size + 1); display_counter > 0;
  5740  000A5E  280F               	incf	i2Evaluate_Display@size,w,c
  5741  000A60  6E3D               	movwf	_display_counter,c
  5742                           
  5743                           ;display.c: 54: display_counter--) {
  5744  000A62  D11E               	goto	i2l2366
  5745  000A64                     i2l428:
  5746                           
  5747                           ;display.c: 55: __nop();
  5748  000A64  F000               	nop	
  5749                           
  5750                           ;display.c: 56: switch (evaluate[(display_counter - 1)]) {
  5751  000A66  D0D5               	goto	i2l2362
  5752  000A68                     i2l2326:
  5753                           
  5754                           ;display.c: 58: Set_Bits("ABCDEF");
  5755  000A68  0E27               	movlw	low STR_1
  5756  000A6A  6E01               	movwf	i2Set_Bits@bits,c
  5757  000A6C  0E02               	movlw	high STR_1
  5758  000A6E  6E02               	movwf	i2Set_Bits@bits+1,c
  5759  000A70  5001               	movf	i2Set_Bits@bits,w,c
  5760  000A72  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5761  000A74  A4D8               	btfss	status,2,c
  5762  000A76  0E00               	movlw	low (__mediumconst shr (0+16))
  5763  000A78  6E03               	movwf	i2Set_Bits@bits+2,c
  5764  000A7A  EC59  F007         	call	i2_Set_Bits	;wreg free
  5765                           
  5766                           ;display.c: 59: break;
  5767  000A7E  D10F               	goto	i2l2364
  5768  000A80                     i2l2328:
  5769                           
  5770                           ;display.c: 61: Set_Bits("BC");
  5771  000A80  0E67               	movlw	low (STR_8+1)
  5772  000A82  6E01               	movwf	i2Set_Bits@bits,c
  5773  000A84  0E02               	movlw	high (STR_8+1)
  5774  000A86  6E02               	movwf	i2Set_Bits@bits+1,c
  5775  000A88  5001               	movf	i2Set_Bits@bits,w,c
  5776  000A8A  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5777  000A8C  A4D8               	btfss	status,2,c
  5778  000A8E  0E00               	movlw	low (__mediumconst shr (0+16))
  5779  000A90  6E03               	movwf	i2Set_Bits@bits+2,c
  5780  000A92  EC59  F007         	call	i2_Set_Bits	;wreg free
  5781                           
  5782                           ;display.c: 62: break;
  5783  000A96  D103               	goto	i2l2364
  5784  000A98                     i2l2330:
  5785                           
  5786                           ;display.c: 64: Set_Bits("ABDEG");
  5787  000A98  0E49               	movlw	low STR_3
  5788  000A9A  6E01               	movwf	i2Set_Bits@bits,c
  5789  000A9C  0E02               	movlw	high STR_3
  5790  000A9E  6E02               	movwf	i2Set_Bits@bits+1,c
  5791  000AA0  5001               	movf	i2Set_Bits@bits,w,c
  5792  000AA2  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5793  000AA4  A4D8               	btfss	status,2,c
  5794  000AA6  0E00               	movlw	low (__mediumconst shr (0+16))
  5795  000AA8  6E03               	movwf	i2Set_Bits@bits+2,c
  5796  000AAA  EC59  F007         	call	i2_Set_Bits	;wreg free
  5797                           
  5798                           ;display.c: 65: break;
  5799  000AAE  D0F7               	goto	i2l2364
  5800  000AB0                     i2l2332:
  5801                           
  5802                           ;display.c: 67: Set_Bits("ABCDG");
  5803  000AB0  0E43               	movlw	low STR_4
  5804  000AB2  6E01               	movwf	i2Set_Bits@bits,c
  5805  000AB4  0E02               	movlw	high STR_4
  5806  000AB6  6E02               	movwf	i2Set_Bits@bits+1,c
  5807  000AB8  5001               	movf	i2Set_Bits@bits,w,c
  5808  000ABA  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5809  000ABC  A4D8               	btfss	status,2,c
  5810  000ABE  0E00               	movlw	low (__mediumconst shr (0+16))
  5811  000AC0  6E03               	movwf	i2Set_Bits@bits+2,c
  5812  000AC2  EC59  F007         	call	i2_Set_Bits	;wreg free
  5813                           
  5814                           ;display.c: 68: break;
  5815  000AC6  D0EB               	goto	i2l2364
  5816  000AC8                     i2l2334:
  5817                           
  5818                           ;display.c: 70: Set_Bits("BCFG");
  5819  000AC8  0E61               	movlw	low STR_5
  5820  000ACA  6E01               	movwf	i2Set_Bits@bits,c
  5821  000ACC  0E02               	movlw	high STR_5
  5822  000ACE  6E02               	movwf	i2Set_Bits@bits+1,c
  5823  000AD0  5001               	movf	i2Set_Bits@bits,w,c
  5824  000AD2  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5825  000AD4  A4D8               	btfss	status,2,c
  5826  000AD6  0E00               	movlw	low (__mediumconst shr (0+16))
  5827  000AD8  6E03               	movwf	i2Set_Bits@bits+2,c
  5828  000ADA  EC59  F007         	call	i2_Set_Bits	;wreg free
  5829                           
  5830                           ;display.c: 71: break;
  5831  000ADE  D0DF               	goto	i2l2364
  5832  000AE0                     i2l2336:
  5833                           
  5834                           ;display.c: 73: Set_Bits("ACDFG");
  5835  000AE0  0E4F               	movlw	low STR_6
  5836  000AE2  6E01               	movwf	i2Set_Bits@bits,c
  5837  000AE4  0E02               	movlw	high STR_6
  5838  000AE6  6E02               	movwf	i2Set_Bits@bits+1,c
  5839  000AE8  5001               	movf	i2Set_Bits@bits,w,c
  5840  000AEA  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5841  000AEC  A4D8               	btfss	status,2,c
  5842  000AEE  0E00               	movlw	low (__mediumconst shr (0+16))
  5843  000AF0  6E03               	movwf	i2Set_Bits@bits+2,c
  5844  000AF2  EC59  F007         	call	i2_Set_Bits	;wreg free
  5845                           
  5846                           ;display.c: 74: break;
  5847  000AF6  D0D3               	goto	i2l2364
  5848  000AF8                     i2l2338:
  5849                           
  5850                           ;display.c: 76: Set_Bits("ACDEFG");
  5851  000AF8  0E3C               	movlw	low STR_7
  5852  000AFA  6E01               	movwf	i2Set_Bits@bits,c
  5853  000AFC  0E02               	movlw	high STR_7
  5854  000AFE  6E02               	movwf	i2Set_Bits@bits+1,c
  5855  000B00  5001               	movf	i2Set_Bits@bits,w,c
  5856  000B02  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5857  000B04  A4D8               	btfss	status,2,c
  5858  000B06  0E00               	movlw	low (__mediumconst shr (0+16))
  5859  000B08  6E03               	movwf	i2Set_Bits@bits+2,c
  5860  000B0A  EC59  F007         	call	i2_Set_Bits	;wreg free
  5861                           
  5862                           ;display.c: 77: break;
  5863  000B0E  D0C7               	goto	i2l2364
  5864  000B10                     i2l2340:
  5865                           
  5866                           ;display.c: 79: Set_Bits("ABC");
  5867  000B10  0E66               	movlw	low STR_8
  5868  000B12  6E01               	movwf	i2Set_Bits@bits,c
  5869  000B14  0E02               	movlw	high STR_8
  5870  000B16  6E02               	movwf	i2Set_Bits@bits+1,c
  5871  000B18  5001               	movf	i2Set_Bits@bits,w,c
  5872  000B1A  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5873  000B1C  A4D8               	btfss	status,2,c
  5874  000B1E  0E00               	movlw	low (__mediumconst shr (0+16))
  5875  000B20  6E03               	movwf	i2Set_Bits@bits+2,c
  5876  000B22  EC59  F007         	call	i2_Set_Bits	;wreg free
  5877                           
  5878                           ;display.c: 80: break;
  5879  000B26  D0BB               	goto	i2l2364
  5880  000B28                     i2l2342:
  5881                           
  5882                           ;display.c: 82: Set_Bits("ABCDEFG");
  5883  000B28  0E1F               	movlw	low STR_9
  5884  000B2A  6E01               	movwf	i2Set_Bits@bits,c
  5885  000B2C  0E02               	movlw	high STR_9
  5886  000B2E  6E02               	movwf	i2Set_Bits@bits+1,c
  5887  000B30  5001               	movf	i2Set_Bits@bits,w,c
  5888  000B32  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5889  000B34  A4D8               	btfss	status,2,c
  5890  000B36  0E00               	movlw	low (__mediumconst shr (0+16))
  5891  000B38  6E03               	movwf	i2Set_Bits@bits+2,c
  5892  000B3A  EC59  F007         	call	i2_Set_Bits	;wreg free
  5893                           
  5894                           ;display.c: 83: break;
  5895  000B3E  D0AF               	goto	i2l2364
  5896  000B40                     i2l2344:
  5897                           
  5898                           ;display.c: 85: Set_Bits("ABCDFG");
  5899  000B40  0E2E               	movlw	low STR_10
  5900  000B42  6E01               	movwf	i2Set_Bits@bits,c
  5901  000B44  0E02               	movlw	high STR_10
  5902  000B46  6E02               	movwf	i2Set_Bits@bits+1,c
  5903  000B48  5001               	movf	i2Set_Bits@bits,w,c
  5904  000B4A  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5905  000B4C  A4D8               	btfss	status,2,c
  5906  000B4E  0E00               	movlw	low (__mediumconst shr (0+16))
  5907  000B50  6E03               	movwf	i2Set_Bits@bits+2,c
  5908  000B52  EC59  F007         	call	i2_Set_Bits	;wreg free
  5909                           
  5910                           ;display.c: 86: break;
  5911  000B56  D0A3               	goto	i2l2364
  5912  000B58                     i2l2346:
  5913                           
  5914                           ;display.c: 88: Set_Bits("ABCEFG");
  5915  000B58  0E35               	movlw	low STR_11
  5916  000B5A  6E01               	movwf	i2Set_Bits@bits,c
  5917  000B5C  0E02               	movlw	high STR_11
  5918  000B5E  6E02               	movwf	i2Set_Bits@bits+1,c
  5919  000B60  5001               	movf	i2Set_Bits@bits,w,c
  5920  000B62  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5921  000B64  A4D8               	btfss	status,2,c
  5922  000B66  0E00               	movlw	low (__mediumconst shr (0+16))
  5923  000B68  6E03               	movwf	i2Set_Bits@bits+2,c
  5924  000B6A  EC59  F007         	call	i2_Set_Bits	;wreg free
  5925                           
  5926                           ;display.c: 89: break;
  5927  000B6E  D097               	goto	i2l2364
  5928  000B70                     i2l2348:
  5929                           
  5930                           ;display.c: 91: Set_Bits("ABCDEF");
  5931  000B70  0E27               	movlw	low STR_1
  5932  000B72  6E01               	movwf	i2Set_Bits@bits,c
  5933  000B74  0E02               	movlw	high STR_1
  5934  000B76  6E02               	movwf	i2Set_Bits@bits+1,c
  5935  000B78  5001               	movf	i2Set_Bits@bits,w,c
  5936  000B7A  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5937  000B7C  A4D8               	btfss	status,2,c
  5938  000B7E  0E00               	movlw	low (__mediumconst shr (0+16))
  5939  000B80  6E03               	movwf	i2Set_Bits@bits+2,c
  5940  000B82  EC59  F007         	call	i2_Set_Bits	;wreg free
  5941                           
  5942                           ;display.c: 92: break;
  5943  000B86  D08B               	goto	i2l2364
  5944  000B88                     i2l2350:
  5945                           
  5946                           ;display.c: 94: Set_Bits("ADEFG");
  5947  000B88  0E5B               	movlw	low STR_13
  5948  000B8A  6E01               	movwf	i2Set_Bits@bits,c
  5949  000B8C  0E02               	movlw	high STR_13
  5950  000B8E  6E02               	movwf	i2Set_Bits@bits+1,c
  5951  000B90  5001               	movf	i2Set_Bits@bits,w,c
  5952  000B92  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5953  000B94  A4D8               	btfss	status,2,c
  5954  000B96  0E00               	movlw	low (__mediumconst shr (0+16))
  5955  000B98  6E03               	movwf	i2Set_Bits@bits+2,c
  5956  000B9A  EC59  F007         	call	i2_Set_Bits	;wreg free
  5957                           
  5958                           ;display.c: 95: break;
  5959  000B9E  D07F               	goto	i2l2364
  5960  000BA0                     i2l2352:
  5961                           
  5962                           ;display.c: 97: Set_Bits("DEF");
  5963  000BA0  0E2A               	movlw	low (STR_1+3)
  5964  000BA2  6E01               	movwf	i2Set_Bits@bits,c
  5965  000BA4  0E02               	movlw	high (STR_1+3)
  5966  000BA6  6E02               	movwf	i2Set_Bits@bits+1,c
  5967  000BA8  5001               	movf	i2Set_Bits@bits,w,c
  5968  000BAA  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5969  000BAC  A4D8               	btfss	status,2,c
  5970  000BAE  0E00               	movlw	low (__mediumconst shr (0+16))
  5971  000BB0  6E03               	movwf	i2Set_Bits@bits+2,c
  5972  000BB2  EC59  F007         	call	i2_Set_Bits	;wreg free
  5973                           
  5974                           ;display.c: 98: break;
  5975  000BB6  D073               	goto	i2l2364
  5976  000BB8                     i2l2354:
  5977                           
  5978                           ;display.c: 100: Set_Bits("ABCDEF");
  5979  000BB8  0E27               	movlw	low STR_1
  5980  000BBA  6E01               	movwf	i2Set_Bits@bits,c
  5981  000BBC  0E02               	movlw	high STR_1
  5982  000BBE  6E02               	movwf	i2Set_Bits@bits+1,c
  5983  000BC0  5001               	movf	i2Set_Bits@bits,w,c
  5984  000BC2  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5985  000BC4  A4D8               	btfss	status,2,c
  5986  000BC6  0E00               	movlw	low (__mediumconst shr (0+16))
  5987  000BC8  6E03               	movwf	i2Set_Bits@bits+2,c
  5988  000BCA  EC59  F007         	call	i2_Set_Bits	;wreg free
  5989                           
  5990                           ;display.c: 101: break;
  5991  000BCE  D067               	goto	i2l2364
  5992  000BD0                     i2l2356:
  5993                           
  5994                           ;display.c: 103: Set_Bits("ABEFG");
  5995  000BD0  0E55               	movlw	low STR_16
  5996  000BD2  6E01               	movwf	i2Set_Bits@bits,c
  5997  000BD4  0E02               	movlw	high STR_16
  5998  000BD6  6E02               	movwf	i2Set_Bits@bits+1,c
  5999  000BD8  5001               	movf	i2Set_Bits@bits,w,c
  6000  000BDA  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6001  000BDC  A4D8               	btfss	status,2,c
  6002  000BDE  0E00               	movlw	low (__mediumconst shr (0+16))
  6003  000BE0  6E03               	movwf	i2Set_Bits@bits+2,c
  6004  000BE2  EC59  F007         	call	i2_Set_Bits	;wreg free
  6005                           
  6006                           ;display.c: 104: break;
  6007  000BE6  D05B               	goto	i2l2364
  6008  000BE8                     i2l2358:
  6009                           
  6010                           ;display.c: 106: Set_Bits("G");
  6011  000BE8  0E47               	movlw	low (STR_4+4)
  6012  000BEA  6E01               	movwf	i2Set_Bits@bits,c
  6013  000BEC  0E02               	movlw	high (STR_4+4)
  6014  000BEE  6E02               	movwf	i2Set_Bits@bits+1,c
  6015  000BF0  5001               	movf	i2Set_Bits@bits,w,c
  6016  000BF2  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6017  000BF4  A4D8               	btfss	status,2,c
  6018  000BF6  0E00               	movlw	low (__mediumconst shr (0+16))
  6019  000BF8  6E03               	movwf	i2Set_Bits@bits+2,c
  6020  000BFA  EC59  F007         	call	i2_Set_Bits	;wreg free
  6021                           
  6022                           ;display.c: 107: break;
  6023  000BFE  D04F               	goto	i2l2364
  6024  000C00                     i2l2360:
  6025                           
  6026                           ;display.c: 109: Set_Bits(0);
  6027  000C00  0E00               	movlw	0
  6028  000C02  6E01               	movwf	i2Set_Bits@bits,c
  6029  000C04  0E00               	movlw	0
  6030  000C06  6E02               	movwf	i2Set_Bits@bits+1,c
  6031  000C08  0E00               	movlw	0
  6032  000C0A  6E03               	movwf	i2Set_Bits@bits+2,c
  6033  000C0C  EC59  F007         	call	i2_Set_Bits	;wreg free
  6034                           
  6035                           ;display.c: 110: }
  6036  000C10  D046               	goto	i2l2364
  6037  000C12                     i2l2362:
  6038  000C12  0EFF               	movlw	255
  6039  000C14  6E0B               	movwf	??i2_Evaluate_Display& (0+255),c
  6040  000C16  0EFF               	movlw	255
  6041  000C18  6E0C               	movwf	(??i2_Evaluate_Display+1)& (0+255),c
  6042  000C1A  503D               	movf	_display_counter,w,c
  6043  000C1C  6E0D               	movwf	(??i2_Evaluate_Display+2)& (0+255),c
  6044  000C1E  6A0E               	clrf	(??i2_Evaluate_Display+3)& (0+255),c
  6045  000C20  500B               	movf	??i2_Evaluate_Display,w,c
  6046  000C22  260D               	addwf	??i2_Evaluate_Display+2,f,c
  6047  000C24  500C               	movf	??i2_Evaluate_Display+1,w,c
  6048  000C26  220E               	addwfc	??i2_Evaluate_Display+3,f,c
  6049  000C28  500D               	movf	??i2_Evaluate_Display+2,w,c
  6050  000C2A  2409               	addwf	i2Evaluate_Display@evaluate,w,c
  6051  000C2C  6ED9               	movwf	fsr2l,c
  6052  000C2E  500E               	movf	??i2_Evaluate_Display+3,w,c
  6053  000C30  200A               	addwfc	i2Evaluate_Display@evaluate+1,w,c
  6054  000C32  6EDA               	movwf	fsr2h,c
  6055  000C34  50DF               	movf	indf2,w,c
  6056                           
  6057                           ; Switch size 1, requested type "space"
  6058                           ; Number of cases is 17, Range of values is 45 to 80
  6059                           ; switch strategies available:
  6060                           ; Name         Instructions Cycles
  6061                           ; simple_byte           52    27 (average)
  6062                           ;	Chosen strategy is simple_byte
  6063  000C36  0A2D               	xorlw	45	; case 45
  6064  000C38  B4D8               	btfsc	status,2,c
  6065  000C3A  D7D6               	goto	i2l2358
  6066  000C3C  0A1D               	xorlw	29	; case 48
  6067  000C3E  B4D8               	btfsc	status,2,c
  6068  000C40  D713               	goto	i2l2326
  6069  000C42  0A01               	xorlw	1	; case 49
  6070  000C44  B4D8               	btfsc	status,2,c
  6071  000C46  D71C               	goto	i2l2328
  6072  000C48  0A03               	xorlw	3	; case 50
  6073  000C4A  B4D8               	btfsc	status,2,c
  6074  000C4C  D725               	goto	i2l2330
  6075  000C4E  0A01               	xorlw	1	; case 51
  6076  000C50  B4D8               	btfsc	status,2,c
  6077  000C52  D72E               	goto	i2l2332
  6078  000C54  0A07               	xorlw	7	; case 52
  6079  000C56  B4D8               	btfsc	status,2,c
  6080  000C58  D737               	goto	i2l2334
  6081  000C5A  0A01               	xorlw	1	; case 53
  6082  000C5C  B4D8               	btfsc	status,2,c
  6083  000C5E  D740               	goto	i2l2336
  6084  000C60  0A03               	xorlw	3	; case 54
  6085  000C62  B4D8               	btfsc	status,2,c
  6086  000C64  D749               	goto	i2l2338
  6087  000C66  0A01               	xorlw	1	; case 55
  6088  000C68  B4D8               	btfsc	status,2,c
  6089  000C6A  D752               	goto	i2l2340
  6090  000C6C  0A0F               	xorlw	15	; case 56
  6091  000C6E  B4D8               	btfsc	status,2,c
  6092  000C70  D75B               	goto	i2l2342
  6093  000C72  0A01               	xorlw	1	; case 57
  6094  000C74  B4D8               	btfsc	status,2,c
  6095  000C76  D764               	goto	i2l2344
  6096  000C78  0A78               	xorlw	120	; case 65
  6097  000C7A  B4D8               	btfsc	status,2,c
  6098  000C7C  D76D               	goto	i2l2346
  6099  000C7E  0A05               	xorlw	5	; case 68
  6100  000C80  B4D8               	btfsc	status,2,c
  6101  000C82  D776               	goto	i2l2348
  6102  000C84  0A01               	xorlw	1	; case 69
  6103  000C86  B4D8               	btfsc	status,2,c
  6104  000C88  D77F               	goto	i2l2350
  6105  000C8A  0A09               	xorlw	9	; case 76
  6106  000C8C  B4D8               	btfsc	status,2,c
  6107  000C8E  D788               	goto	i2l2352
  6108  000C90  0A03               	xorlw	3	; case 79
  6109  000C92  B4D8               	btfsc	status,2,c
  6110  000C94  D791               	goto	i2l2354
  6111  000C96  0A1F               	xorlw	31	; case 80
  6112  000C98  B4D8               	btfsc	status,2,c
  6113  000C9A  D79A               	goto	i2l2356
  6114  000C9C  D7B1               	goto	i2l2360
  6115  000C9E                     i2l2364:
  6116  000C9E  063D               	decf	_display_counter,f,c
  6117  000CA0                     i2l2366:
  6118  000CA0  503D               	movf	_display_counter,w,c
  6119  000CA2  B4D8               	btfsc	status,2,c
  6120  000CA4  0012               	return	
  6121  000CA6  D6DE               	goto	i2l428
  6122  000CA8                     __end_ofi2_Evaluate_Display:
  6123                           	opt stack 0
  6124                           pclatu	equ	0xFFB
  6125                           pclath	equ	0xFFA
  6126                           tblptru	equ	0xFF8
  6127                           tblptrh	equ	0xFF7
  6128                           tblptrl	equ	0xFF6
  6129                           tablat	equ	0xFF5
  6130                           prodh	equ	0xFF4
  6131                           prodl	equ	0xFF3
  6132                           intcon	equ	0xFF2
  6133                           postinc0	equ	0xFEE
  6134                           fsr0h	equ	0xFEA
  6135                           fsr0l	equ	0xFE9
  6136                           wreg	equ	0xFE8
  6137                           postdec1	equ	0xFE5
  6138                           fsr1h	equ	0xFE2
  6139                           fsr1l	equ	0xFE1
  6140                           indf2	equ	0xFDF
  6141                           postinc2	equ	0xFDE
  6142                           postdec2	equ	0xFDD
  6143                           plusw2	equ	0xFDB
  6144                           fsr2h	equ	0xFDA
  6145                           fsr2l	equ	0xFD9
  6146                           status	equ	0xFD8
  6147                           
  6148 ;; *************** function i2_Set_Bits *****************
  6149 ;; Defined at:
  6150 ;;		line 12 in file "display.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;  bits            3    0[COMRAM] PTR const unsigned char 
  6153 ;;		 -> ROM(8191), STR_17(2), STR_16(6), STR_15(7), 
  6154 ;;		 -> STR_14(4), STR_13(6), STR_12(7), STR_11(7), 
  6155 ;;		 -> STR_10(7), STR_9(8), STR_8(4), STR_7(7), 
  6156 ;;		 -> STR_6(6), STR_5(5), STR_4(6), STR_3(6), 
  6157 ;;		 -> STR_2(3), STR_1(7), 
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;  Set_Bits        1    7[COMRAM] unsigned char 
  6160 ;;  Set_Bits        1    6[COMRAM] unsigned char 
  6161 ;; Return value:  Size  Location     Type
  6162 ;;		None               void
  6163 ;; Registers used:
  6164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1
  6170 ;;      Params:         3       0       0
  6171 ;;      Locals:         2       0       0
  6172 ;;      Temps:          3       0       0
  6173 ;;      Totals:         8       0       0
  6174 ;;Total ram usage:        8 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		i2_Evaluate_Display
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text30
  6184  000EB2                     __ptext30:
  6185                           	opt stack 0
  6186  000EB2                     i2_Set_Bits:
  6187                           	opt stack 19
  6188                           
  6189                           ;display.c: 13: unsigned char Bitoutput = 0;
  6190                           
  6191                           ;incstack = 0
  6192  000EB2  0E00               	movlw	0
  6193  000EB4  6E08               	movwf	i2Set_Bits@Bitoutput,c
  6194                           
  6195                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  6196  000EB6  0E00               	movlw	0
  6197  000EB8  6E07               	movwf	i2Set_Bits@bitcount,c
  6198                           
  6199                           ;display.c: 15: bitcount++) {
  6200  000EBA  D037               	goto	i2l2260
  6201  000EBC                     i2l2240:
  6202                           
  6203                           ;display.c: 18: Bitoutput |= 0b00000001;
  6204  000EBC  8008               	bsf	i2Set_Bits@Bitoutput,0,c
  6205                           
  6206                           ;display.c: 19: break;
  6207  000EBE  D034               	goto	i2l2258
  6208  000EC0                     i2l2242:
  6209                           
  6210                           ;display.c: 21: Bitoutput |= 0b00000010;
  6211  000EC0  8208               	bsf	i2Set_Bits@Bitoutput,1,c
  6212                           
  6213                           ;display.c: 22: break;
  6214  000EC2  D032               	goto	i2l2258
  6215  000EC4                     i2l2244:
  6216                           
  6217                           ;display.c: 24: Bitoutput |= 0b00000100;
  6218  000EC4  8408               	bsf	i2Set_Bits@Bitoutput,2,c
  6219                           
  6220                           ;display.c: 25: break;
  6221  000EC6  D030               	goto	i2l2258
  6222  000EC8                     i2l2246:
  6223                           
  6224                           ;display.c: 27: Bitoutput |= 0b00001000;
  6225  000EC8  8608               	bsf	i2Set_Bits@Bitoutput,3,c
  6226                           
  6227                           ;display.c: 28: break;
  6228  000ECA  D02E               	goto	i2l2258
  6229  000ECC                     i2l2248:
  6230                           
  6231                           ;display.c: 30: Bitoutput |= 0b00010000;
  6232  000ECC  8808               	bsf	i2Set_Bits@Bitoutput,4,c
  6233                           
  6234                           ;display.c: 31: break;
  6235  000ECE  D02C               	goto	i2l2258
  6236  000ED0                     i2l2250:
  6237                           
  6238                           ;display.c: 33: Bitoutput |= 0b00100000;
  6239  000ED0  8A08               	bsf	i2Set_Bits@Bitoutput,5,c
  6240                           
  6241                           ;display.c: 34: break;
  6242  000ED2  D02A               	goto	i2l2258
  6243  000ED4                     i2l2252:
  6244                           
  6245                           ;display.c: 36: Bitoutput |= 0b01000000;
  6246  000ED4  8C08               	bsf	i2Set_Bits@Bitoutput,6,c
  6247                           
  6248                           ;display.c: 40: }
  6249                           
  6250                           ;display.c: 39: break;
  6251                           
  6252                           ;display.c: 38: default:
  6253                           
  6254                           ;display.c: 37: break;
  6255  000ED6  D028               	goto	i2l2258
  6256  000ED8                     i2l2256:
  6257  000ED8  5007               	movf	i2Set_Bits@bitcount,w,c
  6258  000EDA  0D01               	mullw	1
  6259  000EDC  50F3               	movf	prodl,w,c
  6260  000EDE  2401               	addwf	i2Set_Bits@bits,w,c
  6261  000EE0  6E04               	movwf	??i2_Set_Bits& (0+255),c
  6262  000EE2  50F4               	movf	prodh,w,c
  6263  000EE4  2002               	addwfc	i2Set_Bits@bits+1,w,c
  6264  000EE6  6E05               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6265  000EE8  0E00               	movlw	0
  6266  000EEA  2003               	addwfc	i2Set_Bits@bits+2,w,c
  6267  000EEC  6E06               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6268  000EEE  C004  FFF6         	movff	??i2_Set_Bits,tblptrl
  6269  000EF2  C005  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6270  000EF6  C006  FFF8         	movff	??i2_Set_Bits+2,tblptru
  6271  000EFA  0008               	tblrd		*
  6272  000EFC  50F5               	movf	tablat,w,c
  6273                           
  6274                           ; Switch size 1, requested type "space"
  6275                           ; Number of cases is 7, Range of values is 65 to 71
  6276                           ; switch strategies available:
  6277                           ; Name         Instructions Cycles
  6278                           ; simple_byte           22    12 (average)
  6279                           ;	Chosen strategy is simple_byte
  6280  000EFE  0A41               	xorlw	65	; case 65
  6281  000F00  B4D8               	btfsc	status,2,c
  6282  000F02  D7DC               	goto	i2l2240
  6283  000F04  0A03               	xorlw	3	; case 66
  6284  000F06  B4D8               	btfsc	status,2,c
  6285  000F08  D7DB               	goto	i2l2242
  6286  000F0A  0A01               	xorlw	1	; case 67
  6287  000F0C  B4D8               	btfsc	status,2,c
  6288  000F0E  D7DA               	goto	i2l2244
  6289  000F10  0A07               	xorlw	7	; case 68
  6290  000F12  B4D8               	btfsc	status,2,c
  6291  000F14  D7D9               	goto	i2l2246
  6292  000F16  0A01               	xorlw	1	; case 69
  6293  000F18  B4D8               	btfsc	status,2,c
  6294  000F1A  D7D8               	goto	i2l2248
  6295  000F1C  0A03               	xorlw	3	; case 70
  6296  000F1E  B4D8               	btfsc	status,2,c
  6297  000F20  D7D7               	goto	i2l2250
  6298  000F22  0A01               	xorlw	1	; case 71
  6299  000F24  B4D8               	btfsc	status,2,c
  6300  000F26  D7D6               	goto	i2l2252
  6301  000F28                     i2l2258:
  6302  000F28  2A07               	incf	i2Set_Bits@bitcount,f,c
  6303  000F2A                     i2l2260:
  6304  000F2A  5007               	movf	i2Set_Bits@bitcount,w,c
  6305  000F2C  0D01               	mullw	1
  6306  000F2E  50F3               	movf	prodl,w,c
  6307  000F30  2401               	addwf	i2Set_Bits@bits,w,c
  6308  000F32  6E04               	movwf	??i2_Set_Bits& (0+255),c
  6309  000F34  50F4               	movf	prodh,w,c
  6310  000F36  2002               	addwfc	i2Set_Bits@bits+1,w,c
  6311  000F38  6E05               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6312  000F3A  0E00               	movlw	0
  6313  000F3C  2003               	addwfc	i2Set_Bits@bits+2,w,c
  6314  000F3E  6E06               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6315  000F40  C004  FFF6         	movff	??i2_Set_Bits,tblptrl
  6316  000F44  C005  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6317  000F48  C006  FFF8         	movff	??i2_Set_Bits+2,tblptru
  6318  000F4C  0008               	tblrd		*
  6319  000F4E  50F5               	movf	tablat,w,c
  6320  000F50  0900               	iorlw	0
  6321  000F52  A4D8               	btfss	status,2,c
  6322  000F54  D7C1               	goto	i2l2256
  6323                           
  6324                           ;display.c: 41: }
  6325                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  6326  000F56  503D               	movf	_display_counter,w,c
  6327  000F58  0D01               	mullw	1
  6328  000F5A  0E35               	movlw	low _pixels
  6329  000F5C  24F3               	addwf	prodl,w,c
  6330  000F5E  6ED9               	movwf	fsr2l,c
  6331  000F60  0E00               	movlw	high _pixels
  6332  000F62  20F4               	addwfc	prodh,w,c
  6333  000F64  6EDA               	movwf	fsr2h,c
  6334  000F66  C008  FFDF         	movff	i2Set_Bits@Bitoutput,indf2
  6335  000F6A  0012               	return		;funcret
  6336  000F6C                     __end_ofi2_Set_Bits:
  6337                           	opt stack 0
  6338                           pclatu	equ	0xFFB
  6339                           pclath	equ	0xFFA
  6340                           tblptru	equ	0xFF8
  6341                           tblptrh	equ	0xFF7
  6342                           tblptrl	equ	0xFF6
  6343                           tablat	equ	0xFF5
  6344                           prodh	equ	0xFF4
  6345                           prodl	equ	0xFF3
  6346                           intcon	equ	0xFF2
  6347                           postinc0	equ	0xFEE
  6348                           fsr0h	equ	0xFEA
  6349                           fsr0l	equ	0xFE9
  6350                           wreg	equ	0xFE8
  6351                           postdec1	equ	0xFE5
  6352                           fsr1h	equ	0xFE2
  6353                           fsr1l	equ	0xFE1
  6354                           indf2	equ	0xFDF
  6355                           postinc2	equ	0xFDE
  6356                           postdec2	equ	0xFDD
  6357                           plusw2	equ	0xFDB
  6358                           fsr2h	equ	0xFDA
  6359                           fsr2l	equ	0xFD9
  6360                           status	equ	0xFD8
  6361                           
  6362 ;; *************** function i2_Check_Detonators *****************
  6363 ;; Defined at:
  6364 ;;		line 25 in file "ignition.c"
  6365 ;; Parameters:    Size  Location     Type
  6366 ;;		None
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;		None
  6369 ;; Return value:  Size  Location     Type
  6370 ;;		None               void
  6371 ;; Registers used:
  6372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6373 ;; Tracked objects:
  6374 ;;		On entry : 0/0
  6375 ;;		On exit  : 0/0
  6376 ;;		Unchanged: 0/0
  6377 ;; Data sizes:     COMRAM   BANK0   BANK1
  6378 ;;      Params:         0       0       0
  6379 ;;      Locals:         0       0       0
  6380 ;;      Temps:          0       0       0
  6381 ;;      Totals:         0       0       0
  6382 ;;Total ram usage:        0 bytes
  6383 ;; Hardware stack levels used:    1
  6384 ;; Hardware stack levels required when called:    1
  6385 ;; This function calls:
  6386 ;;		i2_Transmit
  6387 ;; This function is called by:
  6388 ;;		_Isr
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           	psect	text31
  6393  0015A4                     __ptext31:
  6394                           	opt stack 0
  6395  0015A4                     i2_Check_Detonators:
  6396                           	opt stack 21
  6397                           
  6398                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  6399                           
  6400                           ;incstack = 0
  6401  0015A4  0E54               	movlw	84
  6402  0015A6  6E01               	movwf	i2Transmit@operation,c
  6403  0015A8  5033               	movf	_check_counter,w,c
  6404  0015AA  0D06               	mullw	6
  6405  0015AC  0E01               	movlw	1
  6406  0015AE  26F3               	addwf	prodl,f,c
  6407  0015B0  0E00               	movlw	0
  6408  0015B2  22F4               	addwfc	prodh,f,c
  6409  0015B4  0E00               	movlw	low _pin
  6410  0015B6  24F3               	addwf	prodl,w,c
  6411  0015B8  6ED9               	movwf	fsr2l,c
  6412  0015BA  0E01               	movlw	high _pin
  6413  0015BC  20F4               	addwfc	prodh,w,c
  6414  0015BE  6EDA               	movwf	fsr2h,c
  6415  0015C0  50DF               	movf	indf2,w,c
  6416  0015C2  6E02               	movwf	i2Transmit@port,c
  6417  0015C4  5033               	movf	_check_counter,w,c
  6418  0015C6  0D06               	mullw	6
  6419  0015C8  0E00               	movlw	low _pin
  6420  0015CA  24F3               	addwf	prodl,w,c
  6421  0015CC  6ED9               	movwf	fsr2l,c
  6422  0015CE  0E01               	movlw	high _pin
  6423  0015D0  20F4               	addwfc	prodh,w,c
  6424  0015D2  6EDA               	movwf	fsr2h,c
  6425  0015D4  50DF               	movf	indf2,w,c
  6426  0015D6  ECEE  F00A         	call	i2_Transmit
  6427  0015DA  0012               	return		;funcret
  6428  0015DC                     __end_ofi2_Check_Detonators:
  6429                           	opt stack 0
  6430                           pclatu	equ	0xFFB
  6431                           pclath	equ	0xFFA
  6432                           tblptru	equ	0xFF8
  6433                           tblptrh	equ	0xFF7
  6434                           tblptrl	equ	0xFF6
  6435                           tablat	equ	0xFF5
  6436                           prodh	equ	0xFF4
  6437                           prodl	equ	0xFF3
  6438                           intcon	equ	0xFF2
  6439                           postinc0	equ	0xFEE
  6440                           fsr0h	equ	0xFEA
  6441                           fsr0l	equ	0xFE9
  6442                           wreg	equ	0xFE8
  6443                           postdec1	equ	0xFE5
  6444                           fsr1h	equ	0xFE2
  6445                           fsr1l	equ	0xFE1
  6446                           indf2	equ	0xFDF
  6447                           postinc2	equ	0xFDE
  6448                           postdec2	equ	0xFDD
  6449                           plusw2	equ	0xFDB
  6450                           fsr2h	equ	0xFDA
  6451                           fsr2l	equ	0xFD9
  6452                           status	equ	0xFD8
  6453                           
  6454 ;; *************** function ___awdiv *****************
  6455 ;; Defined at:
  6456 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6457 ;; Parameters:    Size  Location     Type
  6458 ;;  dividend        2    0[COMRAM] int 
  6459 ;;  divisor         2    2[COMRAM] int 
  6460 ;; Auto vars:     Size  Location     Type
  6461 ;;  quotient        2    6[COMRAM] int 
  6462 ;;  sign            1    5[COMRAM] unsigned char 
  6463 ;;  counter         1    4[COMRAM] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  2    0[COMRAM] int 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1
  6473 ;;      Params:         4       0       0
  6474 ;;      Locals:         4       0       0
  6475 ;;      Temps:          0       0       0
  6476 ;;      Totals:         8       0       0
  6477 ;;Total ram usage:        8 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_Isr
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text32
  6487  001020                     __ptext32:
  6488                           	opt stack 0
  6489  001020                     ___awdiv:
  6490                           	opt stack 22
  6491                           
  6492                           ;incstack = 0
  6493  001020  0E00               	movlw	0
  6494  001022  6E06               	movwf	___awdiv@sign,c
  6495  001024  AE04               	btfss	___awdiv@divisor+1,7,c
  6496  001026  D006               	goto	i2l2662
  6497  001028  6C03               	negf	___awdiv@divisor,c
  6498  00102A  1E04               	comf	___awdiv@divisor+1,f,c
  6499  00102C  B0D8               	btfsc	status,0,c
  6500  00102E  2A04               	incf	___awdiv@divisor+1,f,c
  6501  001030  0E01               	movlw	1
  6502  001032  6E06               	movwf	___awdiv@sign,c
  6503  001034                     i2l2662:
  6504  001034  AE02               	btfss	___awdiv@dividend+1,7,c
  6505  001036  D006               	goto	i2l2668
  6506  001038  6C01               	negf	___awdiv@dividend,c
  6507  00103A  1E02               	comf	___awdiv@dividend+1,f,c
  6508  00103C  B0D8               	btfsc	status,0,c
  6509  00103E  2A02               	incf	___awdiv@dividend+1,f,c
  6510  001040  0E01               	movlw	1
  6511  001042  1A06               	xorwf	___awdiv@sign,f,c
  6512  001044                     i2l2668:
  6513  001044  0E00               	movlw	0
  6514  001046  6E08               	movwf	___awdiv@quotient+1,c
  6515  001048  0E00               	movlw	0
  6516  00104A  6E07               	movwf	___awdiv@quotient,c
  6517  00104C  5003               	movf	___awdiv@divisor,w,c
  6518  00104E  1004               	iorwf	___awdiv@divisor+1,w,c
  6519  001050  B4D8               	btfsc	status,2,c
  6520  001052  D01C               	goto	i2l2690
  6521  001054  0E01               	movlw	1
  6522  001056  6E05               	movwf	___awdiv@counter,c
  6523  001058  D004               	goto	i2l2676
  6524  00105A                     i2l2674:
  6525  00105A  90D8               	bcf	status,0,c
  6526  00105C  3603               	rlcf	___awdiv@divisor,f,c
  6527  00105E  3604               	rlcf	___awdiv@divisor+1,f,c
  6528  001060  2A05               	incf	___awdiv@counter,f,c
  6529  001062                     i2l2676:
  6530  001062  AE04               	btfss	___awdiv@divisor+1,7,c
  6531  001064  D7FA               	goto	i2l2674
  6532  001066                     i2l2678:
  6533  001066  90D8               	bcf	status,0,c
  6534  001068  3607               	rlcf	___awdiv@quotient,f,c
  6535  00106A  3608               	rlcf	___awdiv@quotient+1,f,c
  6536  00106C  5003               	movf	___awdiv@divisor,w,c
  6537  00106E  5C01               	subwf	___awdiv@dividend,w,c
  6538  001070  5004               	movf	___awdiv@divisor+1,w,c
  6539  001072  5802               	subwfb	___awdiv@dividend+1,w,c
  6540  001074  A0D8               	btfss	status,0,c
  6541  001076  D005               	goto	i2l2686
  6542  001078  5003               	movf	___awdiv@divisor,w,c
  6543  00107A  5E01               	subwf	___awdiv@dividend,f,c
  6544  00107C  5004               	movf	___awdiv@divisor+1,w,c
  6545  00107E  5A02               	subwfb	___awdiv@dividend+1,f,c
  6546  001080  8007               	bsf	___awdiv@quotient,0,c
  6547  001082                     i2l2686:
  6548  001082  90D8               	bcf	status,0,c
  6549  001084  3204               	rrcf	___awdiv@divisor+1,f,c
  6550  001086  3203               	rrcf	___awdiv@divisor,f,c
  6551  001088  2E05               	decfsz	___awdiv@counter,f,c
  6552  00108A  D7ED               	goto	i2l2678
  6553  00108C                     i2l2690:
  6554  00108C  5006               	movf	___awdiv@sign,w,c
  6555  00108E  B4D8               	btfsc	status,2,c
  6556  001090  D004               	goto	i2l2694
  6557  001092  6C07               	negf	___awdiv@quotient,c
  6558  001094  1E08               	comf	___awdiv@quotient+1,f,c
  6559  001096  B0D8               	btfsc	status,0,c
  6560  001098  2A08               	incf	___awdiv@quotient+1,f,c
  6561  00109A                     i2l2694:
  6562  00109A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6563  00109E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6564  0010A2  0012               	return	
  6565  0010A4                     __end_of___awdiv:
  6566                           	opt stack 0
  6567                           pclatu	equ	0xFFB
  6568                           pclath	equ	0xFFA
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           prodh	equ	0xFF4
  6574                           prodl	equ	0xFF3
  6575                           intcon	equ	0xFF2
  6576                           postinc0	equ	0xFEE
  6577                           fsr0h	equ	0xFEA
  6578                           fsr0l	equ	0xFE9
  6579                           wreg	equ	0xFE8
  6580                           postdec1	equ	0xFE5
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           indf2	equ	0xFDF
  6584                           postinc2	equ	0xFDE
  6585                           postdec2	equ	0xFDD
  6586                           plusw2	equ	0xFDB
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591 ;; *************** function _Receive_Dump *****************
  6592 ;; Defined at:
  6593 ;;		line 46 in file "communication.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;  dump            1    0[COMRAM] unsigned char 
  6598 ;; Return value:  Size  Location     Type
  6599 ;;		None               void
  6600 ;; Registers used:
  6601 ;;		None
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1
  6607 ;;      Params:         0       0       0
  6608 ;;      Locals:         1       0       0
  6609 ;;      Temps:          0       0       0
  6610 ;;      Totals:         1       0       0
  6611 ;;Total ram usage:        1 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		_Isr
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	text33
  6621  001736                     __ptext33:
  6622                           	opt stack 0
  6623  001736                     _Receive_Dump:
  6624                           	opt stack 22
  6625                           
  6626                           ;communication.c: 47: unsigned char dump;
  6627                           ;communication.c: 48: if(RCSTA1bits.OERR == 1) {
  6628                           
  6629                           ;incstack = 0
  6630  001736  A2AB               	btfss	4011,1,c	;volatile
  6631  001738  D003               	goto	i2l541
  6632                           
  6633                           ;communication.c: 49: RCSTA1bits.CREN = 0;
  6634  00173A  98AB               	bcf	4011,4,c	;volatile
  6635                           
  6636                           ;communication.c: 50: RCSTA1bits.CREN = 1;
  6637  00173C  88AB               	bsf	4011,4,c	;volatile
  6638                           
  6639                           ;communication.c: 51: overrun = 1;
  6640  00173E  843C               	bsf	_overrun/(0+8),_overrun& (0+7),c
  6641  001740                     i2l541:
  6642                           
  6643                           ;communication.c: 52: }
  6644                           ;communication.c: 53: dump = RCREG1;
  6645  001740  CFAE F001          	movff	4014,Receive_Dump@dump	;volatile
  6646  001744  0012               	return		;funcret
  6647  001746                     __end_of_Receive_Dump:
  6648                           	opt stack 0
  6649                           pclatu	equ	0xFFB
  6650                           pclath	equ	0xFFA
  6651                           tblptru	equ	0xFF8
  6652                           tblptrh	equ	0xFF7
  6653                           tblptrl	equ	0xFF6
  6654                           tablat	equ	0xFF5
  6655                           prodh	equ	0xFF4
  6656                           prodl	equ	0xFF3
  6657                           intcon	equ	0xFF2
  6658                           postinc0	equ	0xFEE
  6659                           fsr0h	equ	0xFEA
  6660                           fsr0l	equ	0xFE9
  6661                           wreg	equ	0xFE8
  6662                           postdec1	equ	0xFE5
  6663                           fsr1h	equ	0xFE2
  6664                           fsr1l	equ	0xFE1
  6665                           indf2	equ	0xFDF
  6666                           postinc2	equ	0xFDE
  6667                           postdec2	equ	0xFDD
  6668                           plusw2	equ	0xFDB
  6669                           fsr2h	equ	0xFDA
  6670                           fsr2l	equ	0xFD9
  6671                           status	equ	0xFD8
  6672                           
  6673 ;; *************** function _Receive *****************
  6674 ;; Defined at:
  6675 ;;		line 37 in file "communication.c"
  6676 ;; Parameters:    Size  Location     Type
  6677 ;;		None
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      unsigned char 
  6682 ;; Registers used:
  6683 ;;		wreg, status,2
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1
  6689 ;;      Params:         0       0       0
  6690 ;;      Locals:         0       0       0
  6691 ;;      Temps:          0       0       0
  6692 ;;      Totals:         0       0       0
  6693 ;;Total ram usage:        0 bytes
  6694 ;; Hardware stack levels used:    1
  6695 ;; This function calls:
  6696 ;;		Nothing
  6697 ;; This function is called by:
  6698 ;;		_Isr
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           	psect	text34
  6703  001746                     __ptext34:
  6704                           	opt stack 0
  6705  001746                     _Receive:
  6706                           	opt stack 22
  6707                           
  6708                           ;communication.c: 38: if(RCSTA1bits.OERR == 1) {
  6709                           
  6710                           ;incstack = 0
  6711  001746  A2AB               	btfss	4011,1,c	;volatile
  6712  001748  D003               	goto	i2l2646
  6713                           
  6714                           ;communication.c: 39: RCSTA1bits.CREN = 0;
  6715  00174A  98AB               	bcf	4011,4,c	;volatile
  6716                           
  6717                           ;communication.c: 40: RCSTA1bits.CREN = 1;
  6718  00174C  88AB               	bsf	4011,4,c	;volatile
  6719                           
  6720                           ;communication.c: 41: overrun = 1;
  6721  00174E  843C               	bsf	_overrun/(0+8),_overrun& (0+7),c
  6722  001750                     i2l2646:
  6723                           
  6724                           ;communication.c: 42: }
  6725                           ;communication.c: 43: return (RCREG1);
  6726  001750  50AE               	movf	4014,w,c	;volatile
  6727  001752  0012               	return	
  6728  001754                     __end_of_Receive:
  6729                           	opt stack 0
  6730                           pclatu	equ	0xFFB
  6731                           pclath	equ	0xFFA
  6732                           tblptru	equ	0xFF8
  6733                           tblptrh	equ	0xFF7
  6734                           tblptrl	equ	0xFF6
  6735                           tablat	equ	0xFF5
  6736                           prodh	equ	0xFF4
  6737                           prodl	equ	0xFF3
  6738                           intcon	equ	0xFF2
  6739                           postinc0	equ	0xFEE
  6740                           fsr0h	equ	0xFEA
  6741                           fsr0l	equ	0xFE9
  6742                           wreg	equ	0xFE8
  6743                           postdec1	equ	0xFE5
  6744                           fsr1h	equ	0xFE2
  6745                           fsr1l	equ	0xFE1
  6746                           indf2	equ	0xFDF
  6747                           postinc2	equ	0xFDE
  6748                           postdec2	equ	0xFDD
  6749                           plusw2	equ	0xFDB
  6750                           fsr2h	equ	0xFDA
  6751                           fsr2l	equ	0xFD9
  6752                           status	equ	0xFD8
  6753                           
  6754 ;; *************** function _Ignite_Detonators *****************
  6755 ;; Defined at:
  6756 ;;		line 29 in file "ignition.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;		None
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  counter         1    5[COMRAM] unsigned char 
  6761 ;; Return value:  Size  Location     Type
  6762 ;;		None               void
  6763 ;; Registers used:
  6764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMRAM   BANK0   BANK1
  6770 ;;      Params:         0       0       0
  6771 ;;      Locals:         1       0       0
  6772 ;;      Temps:          2       0       0
  6773 ;;      Totals:         3       0       0
  6774 ;;Total ram usage:        3 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:    1
  6777 ;; This function calls:
  6778 ;;		i2_Transmit
  6779 ;; This function is called by:
  6780 ;;		_Isr
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text35
  6785  00111C                     __ptext35:
  6786                           	opt stack 0
  6787  00111C                     _Ignite_Detonators:
  6788                           	opt stack 21
  6789                           
  6790                           ;ignition.c: 30: for(unsigned char counter = 0; counter < 30; counter++) {
  6791                           
  6792                           ;incstack = 0
  6793  00111C  0E00               	movlw	0
  6794  00111E  6E06               	movwf	Ignite_Detonators@counter,c
  6795  001120                     i2l2630:
  6796  001120  0E1D               	movlw	29
  6797  001122  6406               	cpfsgt	Ignite_Detonators@counter,c
  6798  001124  D001               	goto	i2l2634
  6799  001126  0012               	return	
  6800  001128                     i2l2634:
  6801                           
  6802                           ;ignition.c: 31: if(pin[counter].time == current_time) {
  6803  001128  5006               	movf	Ignite_Detonators@counter,w,c
  6804  00112A  0D06               	mullw	6
  6805  00112C  0E04               	movlw	4
  6806  00112E  26F3               	addwf	prodl,f,c
  6807  001130  0E00               	movlw	0
  6808  001132  22F4               	addwfc	prodh,f,c
  6809  001134  0E00               	movlw	low _pin
  6810  001136  24F3               	addwf	prodl,w,c
  6811  001138  6ED9               	movwf	fsr2l,c
  6812  00113A  0E01               	movlw	high _pin
  6813  00113C  20F4               	addwfc	prodh,w,c
  6814  00113E  6EDA               	movwf	fsr2h,c
  6815  001140  5031               	movf	_current_time,w,c
  6816  001142  18DE               	xorwf	postinc2,w,c
  6817  001144  E11F               	bnz	i2l2638
  6818  001146  5032               	movf	_current_time+1,w,c
  6819  001148  18DE               	xorwf	postinc2,w,c
  6820  00114A  A4D8               	btfss	status,2,c
  6821  00114C  D01B               	goto	i2l2638
  6822                           
  6823                           ;ignition.c: 32: Transmit(pin[counter].slave, 'I', pin[counter].output);
  6824  00114E  0E49               	movlw	73
  6825  001150  6E01               	movwf	i2Transmit@operation,c
  6826  001152  5006               	movf	Ignite_Detonators@counter,w,c
  6827  001154  0D06               	mullw	6
  6828  001156  0E01               	movlw	1
  6829  001158  26F3               	addwf	prodl,f,c
  6830  00115A  0E00               	movlw	0
  6831  00115C  22F4               	addwfc	prodh,f,c
  6832  00115E  0E00               	movlw	low _pin
  6833  001160  24F3               	addwf	prodl,w,c
  6834  001162  6ED9               	movwf	fsr2l,c
  6835  001164  0E01               	movlw	high _pin
  6836  001166  20F4               	addwfc	prodh,w,c
  6837  001168  6EDA               	movwf	fsr2h,c
  6838  00116A  50DF               	movf	indf2,w,c
  6839  00116C  6E02               	movwf	i2Transmit@port,c
  6840  00116E  5006               	movf	Ignite_Detonators@counter,w,c
  6841  001170  0D06               	mullw	6
  6842  001172  0E00               	movlw	low _pin
  6843  001174  24F3               	addwf	prodl,w,c
  6844  001176  6ED9               	movwf	fsr2l,c
  6845  001178  0E01               	movlw	high _pin
  6846  00117A  20F4               	addwfc	prodh,w,c
  6847  00117C  6EDA               	movwf	fsr2h,c
  6848  00117E  50DF               	movf	indf2,w,c
  6849  001180  ECEE  F00A         	call	i2_Transmit
  6850  001184                     i2l2638:
  6851  001184  2A06               	incf	Ignite_Detonators@counter,f,c
  6852  001186  D7CC               	goto	i2l2630
  6853  001188                     __end_of_Ignite_Detonators:
  6854                           	opt stack 0
  6855                           pclatu	equ	0xFFB
  6856                           pclath	equ	0xFFA
  6857                           tblptru	equ	0xFF8
  6858                           tblptrh	equ	0xFF7
  6859                           tblptrl	equ	0xFF6
  6860                           tablat	equ	0xFF5
  6861                           prodh	equ	0xFF4
  6862                           prodl	equ	0xFF3
  6863                           intcon	equ	0xFF2
  6864                           postinc0	equ	0xFEE
  6865                           fsr0h	equ	0xFEA
  6866                           fsr0l	equ	0xFE9
  6867                           wreg	equ	0xFE8
  6868                           postdec1	equ	0xFE5
  6869                           fsr1h	equ	0xFE2
  6870                           fsr1l	equ	0xFE1
  6871                           indf2	equ	0xFDF
  6872                           postinc2	equ	0xFDE
  6873                           postdec2	equ	0xFDD
  6874                           plusw2	equ	0xFDB
  6875                           fsr2h	equ	0xFDA
  6876                           fsr2l	equ	0xFD9
  6877                           status	equ	0xFD8
  6878                           
  6879 ;; *************** function i2_Transmit *****************
  6880 ;; Defined at:
  6881 ;;		line 15 in file "communication.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  receiver        1    wreg     unsigned char 
  6884 ;;  operation       1    0[COMRAM] unsigned char 
  6885 ;;  port            1    1[COMRAM] unsigned char 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;  receiver        1    2[COMRAM] unsigned char 
  6888 ;; Return value:  Size  Location     Type
  6889 ;;		None               void
  6890 ;; Registers used:
  6891 ;;		wreg, status,2
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1
  6897 ;;      Params:         2       0       0
  6898 ;;      Locals:         1       0       0
  6899 ;;      Temps:          0       0       0
  6900 ;;      Totals:         3       0       0
  6901 ;;Total ram usage:        3 bytes
  6902 ;; Hardware stack levels used:    1
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_Ignite_Detonators
  6907 ;;		i2_Check_Detonators
  6908 ;; This function uses a non-reentrant model
  6909 ;;
  6910                           
  6911                           	psect	text36
  6912  0015DC                     __ptext36:
  6913                           	opt stack 0
  6914  0015DC                     i2_Transmit:
  6915                           	opt stack 21
  6916                           
  6917                           ;incstack = 0
  6918                           ;i2Transmit@receiver stored from wreg
  6919  0015DC  6E03               	movwf	i2Transmit@receiver,c
  6920                           
  6921                           ;communication.c: 17: PORTBbits.RB5 = 1;
  6922  0015DE  8A81               	bsf	3969,5,c	;volatile
  6923                           
  6924                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  6925  0015E0  98AB               	bcf	4011,4,c	;volatile
  6926                           
  6927                           ;communication.c: 20: __nop();
  6928  0015E2  F000               	nop	
  6929  0015E4                     i2l519:
  6930  0015E4  A89E               	btfss	3998,4,c	;volatile
  6931  0015E6  D7FE               	goto	i2l519
  6932                           
  6933                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  6934  0015E8  80AC               	bsf	4012,0,c	;volatile
  6935                           
  6936                           ;communication.c: 23: TXREG1 = receiver;
  6937  0015EA  C003  FFAD         	movff	i2Transmit@receiver,4013	;volatile
  6938  0015EE                     i2l522:
  6939  0015EE  A89E               	btfss	3998,4,c	;volatile
  6940  0015F0  D7FE               	goto	i2l522
  6941                           
  6942                           ;communication.c: 25: TXREG1 = 0xAA;
  6943  0015F2  0EAA               	movlw	170
  6944  0015F4  6EAD               	movwf	4013,c	;volatile
  6945  0015F6                     i2l525:
  6946  0015F6  A89E               	btfss	3998,4,c	;volatile
  6947  0015F8  D7FE               	goto	i2l525
  6948                           
  6949                           ;communication.c: 27: TXREG1 = operation;
  6950  0015FA  C001  FFAD         	movff	i2Transmit@operation,4013	;volatile
  6951  0015FE                     i2l528:
  6952  0015FE  A89E               	btfss	3998,4,c	;volatile
  6953  001600  D7FE               	goto	i2l528
  6954                           
  6955                           ;communication.c: 29: TXREG1 = port;
  6956  001602  C002  FFAD         	movff	i2Transmit@port,4013	;volatile
  6957  001606                     i2l531:
  6958  001606  A2AC               	btfss	4012,1,c	;volatile
  6959  001608  D7FE               	goto	i2l531
  6960                           
  6961                           ;communication.c: 31: PORTBbits.RB5 = 0;
  6962  00160A  9A81               	bcf	3969,5,c	;volatile
  6963                           
  6964                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  6965  00160C  88AB               	bsf	4011,4,c	;volatile
  6966                           
  6967                           ;communication.c: 33: __nop();
  6968  00160E  F000               	nop	
  6969  001610  0012               	return		;funcret
  6970  001612                     __end_ofi2_Transmit:
  6971                           	opt stack 0
  6972                           pclatu	equ	0xFFB
  6973                           pclath	equ	0xFFA
  6974                           tblptru	equ	0xFF8
  6975                           tblptrh	equ	0xFF7
  6976                           tblptrl	equ	0xFF6
  6977                           tablat	equ	0xFF5
  6978                           prodh	equ	0xFF4
  6979                           prodl	equ	0xFF3
  6980                           intcon	equ	0xFF2
  6981                           postinc0	equ	0xFEE
  6982                           fsr0h	equ	0xFEA
  6983                           fsr0l	equ	0xFE9
  6984                           wreg	equ	0xFE8
  6985                           postdec1	equ	0xFE5
  6986                           fsr1h	equ	0xFE2
  6987                           fsr1l	equ	0xFE1
  6988                           indf2	equ	0xFDF
  6989                           postinc2	equ	0xFDE
  6990                           postdec2	equ	0xFDD
  6991                           plusw2	equ	0xFDB
  6992                           fsr2h	equ	0xFDA
  6993                           fsr2l	equ	0xFD9
  6994                           status	equ	0xFD8
  6995                           pclatu	equ	0xFFB
  6996                           pclath	equ	0xFFA
  6997                           tblptru	equ	0xFF8
  6998                           tblptrh	equ	0xFF7
  6999                           tblptrl	equ	0xFF6
  7000                           tablat	equ	0xFF5
  7001                           prodh	equ	0xFF4
  7002                           prodl	equ	0xFF3
  7003                           intcon	equ	0xFF2
  7004                           postinc0	equ	0xFEE
  7005                           fsr0h	equ	0xFEA
  7006                           fsr0l	equ	0xFE9
  7007                           wreg	equ	0xFE8
  7008                           postdec1	equ	0xFE5
  7009                           fsr1h	equ	0xFE2
  7010                           fsr1l	equ	0xFE1
  7011                           indf2	equ	0xFDF
  7012                           postinc2	equ	0xFDE
  7013                           postdec2	equ	0xFDD
  7014                           plusw2	equ	0xFDB
  7015                           fsr2h	equ	0xFDA
  7016                           fsr2l	equ	0xFD9
  7017                           status	equ	0xFD8
  7018                           
  7019                           	psect	rparam
  7020  0000                     pclatu	equ	0xFFB
  7021                           pclath	equ	0xFFA
  7022                           tblptru	equ	0xFF8
  7023                           tblptrh	equ	0xFF7
  7024                           tblptrl	equ	0xFF6
  7025                           tablat	equ	0xFF5
  7026                           prodh	equ	0xFF4
  7027                           prodl	equ	0xFF3
  7028                           intcon	equ	0xFF2
  7029                           postinc0	equ	0xFEE
  7030                           fsr0h	equ	0xFEA
  7031                           fsr0l	equ	0xFE9
  7032                           wreg	equ	0xFE8
  7033                           postdec1	equ	0xFE5
  7034                           fsr1h	equ	0xFE2
  7035                           fsr1l	equ	0xFE1
  7036                           indf2	equ	0xFDF
  7037                           postinc2	equ	0xFDE
  7038                           postdec2	equ	0xFDD
  7039                           plusw2	equ	0xFDB
  7040                           fsr2h	equ	0xFDA
  7041                           fsr2l	equ	0xFD9
  7042                           status	equ	0xFD8
  7043                           
  7044                           	psect	temp
  7045  00003E                     btemp:
  7046                           	opt stack 0
  7047  00003E                     	ds	1
  7048  0000                     int$flags	set	btemp
  7049                           pclatu	equ	0xFFB
  7050                           pclath	equ	0xFFA
  7051                           tblptru	equ	0xFF8
  7052                           tblptrh	equ	0xFF7
  7053                           tblptrl	equ	0xFF6
  7054                           tablat	equ	0xFF5
  7055                           prodh	equ	0xFF4
  7056                           prodl	equ	0xFF3
  7057                           intcon	equ	0xFF2
  7058                           postinc0	equ	0xFEE
  7059                           fsr0h	equ	0xFEA
  7060                           fsr0l	equ	0xFE9
  7061                           wreg	equ	0xFE8
  7062                           postdec1	equ	0xFE5
  7063                           fsr1h	equ	0xFE2
  7064                           fsr1l	equ	0xFE1
  7065                           indf2	equ	0xFDF
  7066                           postinc2	equ	0xFDE
  7067                           postdec2	equ	0xFDD
  7068                           plusw2	equ	0xFDB
  7069                           fsr2h	equ	0xFDA
  7070                           fsr2l	equ	0xFD9
  7071                           status	equ	0xFD8


Data Sizes:
    Strings     75
    Constant    0
    Data        180
    BSS         28
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      61
    BANK0           160     27      38
    BANK1           256      0     180

Pointer List with Targets:

    Write_Display_Byte@write_data	PTR unsigned char  size(2) Largest target is 7
		 -> pixels(COMRAM[7]), 

    Evaluate_Display@evaluate	PTR unsigned char  size(2) Largest target is 3
		 -> signs(BANK0[3]), string_delete(BANK0[3]), string_load(BANK0[3]), 

    Set_Bits@bits	PTR const unsigned char  size(3) Largest target is 8191
		 -> ROM(CODE[8191]), STR_17(CODE[2]), STR_16(CODE[6]), STR_15(CODE[7]), 
		 -> STR_14(CODE[4]), STR_13(CODE[6]), STR_12(CODE[7]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[7]), 
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[3]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Isr->i2_Set_Display
    i2_Set_Display->i2_Evaluate_Signs
    i2_Evaluate_Signs->i2_Evaluate_Display
    i2_Evaluate_Display->i2_Set_Bits
    i2_Check_Detonators->i2_Transmit
    _Ignite_Detonators->i2_Transmit

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _Check_Detonators->_Transmit
    _Check_Buttons->_Del_Data
    _Del_Data->_Load_Data
    _Load_Data->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   35514
                      _Check_Buttons
                   _Check_Detonators
                               _Init
                          _Load_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Detonators                                     0     0      0     331
                           _Transmit
 ---------------------------------------------------------------------------------
 (2) _Transmit                                             3     1      2     331
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0   19327
                                             25 BANK0      2     2      0
                           _Del_Data
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (2) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Del_Data                                             1     1      0   11753
                                             24 BANK0      1     1      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Load_Data
                          _Save_Data
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     592
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Load_Data                                            2     2      0    9053
                                             22 BANK0      2     2      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Read_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Set_Display                                          4     1      3    6803
                                             18 BANK0      4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
                 _Write_Display_Byte
 ---------------------------------------------------------------------------------
 (2) _Write_Display_Byte                                   7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _Evaluate_Signs                                       3     1      2    2568
                                             15 BANK0      3     1      2
                   _Evaluate_Display
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Display                                     7     5      2    1941
                                              8 BANK0      7     5      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (4) _Set_Bits                                             8     5      3    1571
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2     111
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Isr                                                 20    20      0    3016
                                             22 COMRAM    20    20      0
                  _Ignite_Detonators
                            _Receive
                       _Receive_Dump
                            ___awdiv
                 i2_Check_Detonators
                      i2_Set_Display
 ---------------------------------------------------------------------------------
 (9) i2_Set_Display                                        4     1      3    1996
                                             18 COMRAM     4     1      3
                 i2_Evaluate_Display
                   i2_Evaluate_Signs
               i2_Write_Display_Byte
 ---------------------------------------------------------------------------------
 (10) i2_Write_Display_Byte                                7     5      2     116
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) i2_Evaluate_Signs                                    3     1      2    1034
                                             15 COMRAM     3     1      2
                 i2_Evaluate_Display
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2_Evaluate_Display                                  7     5      2     684
                                              8 COMRAM     7     5      2
                         i2_Set_Bits
 ---------------------------------------------------------------------------------
 (12) i2_Set_Bits                                          8     5      3     588
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (9) i2_Check_Detonators                                   0     0      0     170
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) _Receive_Dump                                         1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Ignite_Detonators                                    3     3      0     282
                                              3 COMRAM     3     3      0
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (10) i2_Transmit                                          3     1      2     170
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Del_Data
       _Delay_Routine
       _Evaluate_Display
         _Set_Bits
       _Load_Data
         _Delay_Routine
         _Evaluate_Display
           _Set_Bits
         _Read_Data
         _Set_Display
           _Evaluate_Display
             _Set_Bits
           _Evaluate_Signs
             _Evaluate_Display
               _Set_Bits
             ___lwmod
           _Write_Display_Byte
       _Save_Data
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
       _Write_Display_Byte
     _Start_Timer
   _Check_Detonators
     _Transmit
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Load_Data
     _Delay_Routine
     _Evaluate_Display
       _Set_Bits
     _Read_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
       _Write_Display_Byte
   _Set_Display
     _Evaluate_Display
       _Set_Bits
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
       ___lwmod
     _Write_Display_Byte

 _Isr (ROOT)
   _Ignite_Detonators
     i2_Transmit
   _Receive
   _Receive_Dump
   ___awdiv
   i2_Check_Detonators
     i2_Transmit
   i2_Set_Display
     i2_Evaluate_Display
       i2_Set_Bits
     i2_Evaluate_Signs
       i2_Evaluate_Display
         i2_Set_Bits
       i2___lwmod
     i2_Write_Display_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1B      26       4       23.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2A      3D       1       64.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     117       6        0.0%
DATA                 0      0     117       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Feb 10 17:53:07 2017

        Evaluate_Display@evaluate 0068                        i2_Transmit 15DC  
                    ___awdiv@sign 0006                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                               l102 0284  
                             l112 0400                               l122 0618  
                             l106 0348                               l118 04B2  
                             l362 140A                               l522 1580  
                             l531 1598                               l428 0796  
                             l525 1588                               l454 1106  
                             l359 13DC                               l519 1576  
                             l528 1590                    ?i2_Set_Display 0013  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _Isr 0008                               _pin 0100  
                  _Evaluate_Signs 10A4                               prod 000FF3  
                             wreg 000FE8                 Set_Bits@Bitoutput 0067  
                      _TXSTA1bits 000FAC                      __CFG_LVP$OFF 000000  
                            ?_Isr 0001                              l1041 130A  
                            l3012 0CD8                              l3022 0D16  
                            l3016 0CE2                              l3200 03CC  
                            l3214 047E                              l3240 052A  
                            l3232 04D2                              l3082 1344  
                            l3250 0546                              l3314 167C  
                            l3092 1366                              l3244 0536  
                            l3252 055C                              l3236 051E  
                            l3172 02A6                              l3086 134E  
                            l3176 0314                              l2820 0DD6  
                            l2900 12FC                              l3196 036A  
                            l2830 0DF4                              l2822 0DDC  
                            l2910 10B4                              l3286 0690  
                            l3278 0638                              l2832 0DFA  
                            l2824 0DE2                              l2840 0E62  
                            l2826 0DE8                              l2850 07D6  
                            l2906 10AA                              l2828 0DEE  
                            l2836 0E00                              l2860 086C  
                            l2852 07F4                              l2838 0E5E  
                            l2870 0902                              l2862 088A  
                            l2854 0812                              l2846 079A  
                            l2944 164E                              l2880 0998  
                            l2872 0920                              l2864 08A8  
                            l2856 0830                              l2848 07B8  
                            l2952 118E                              l2874 093E  
                            l2866 08C6                              l2858 084E  
                            l2882 09B0                              l2970 11DA  
                            l2948 1662                              l2876 095C  
                            l2868 08E4                              l2884 0A52  
                            l2892 12C6                              l2964 11C0  
                            l2878 097A                              l2886 0A54  
                            l2894 12D2                              l2896 12D8  
                            l2968 11CE                              STR_1 0227  
                            STR_2 0267                              STR_3 0249  
                            STR_4 0243                              STR_5 0261  
                            STR_6 024F                              STR_7 023C  
                            STR_8 0266                              STR_9 021F  
                            u2417 1656                              _Init 16C4  
                            _main 1672                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 003E                     __CFG_BORV$190 000000  
                    Transmit@port 0061                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 021A                     __CFG_IESO$OFF 000000  
                  Save_Data@store 0060                _Write_Display_Byte 1250  
                    ___param_bank 000010                     _InitInterrupt 1754  
                     _string_load 0083                             ??_Isr 0017  
                 __end_of_Receive 1754               ?_Write_Display_Byte 0060  
                    _BAUDCON1bits 000FB8                             ?_Init 0001  
                           ?_main 0001                   __end_of___awdiv 10A4  
                           _EEADR 000FA9                             STR_10 022E  
                           STR_11 0235                             STR_12 0227  
                           STR_13 025B                             STR_14 022A  
                           STR_15 0227                             STR_16 0255  
                           STR_17 0247            __end_of_Evaluate_Signs 111C  
                 ___awdiv@divisor 0003                 _InitMiscellaneous 1760  
                 __end_of___lwmod 1314                             i2l522 15EE  
                           i2l531 1606                             i2l428 0A64  
                           i2l525 15F6                             i2l541 1740  
                           i2l454 123E                             i2l614 00A2  
                           i2l519 15E4                             i2l615 009E  
                           i2l528 15FE                             i2l628 01DE  
                 ___awdiv@counter 0005                 _Ignite_Detonators 111C  
                           _TMR1H 000FCF                             _TMR3H 000FB3  
                           _TMR1L 000FCE                             _TMR3L 000FB2  
                           _PORTA 000F80                             _PORTB 000F81  
                           _PORTC 000F82                             _PORTE 000F84  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISE 000F96  
                   __CFG_WRT0$OFF 000000          __end_of_InitTransmission 16C4  
                   __CFG_WRT1$OFF 000000                ?_InitMiscellaneous 0001  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                ?_Ignite_Detonators 0001  
               i2Set_Display@type 0016          __end_ofi2_Evaluate_Signs 1250  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                  _Evaluate_Display 078A  
                  __CFG_EBTRB$OFF 000000                             _signs 007D  
              __CFG_MCLRE$EXTMCLR 000000              ??_Write_Display_Byte 0062  
                  __pbitbssCOMRAM 01E0                    __CFG_BOREN$OFF 000000  
             ??_InitMiscellaneous 0060                             tablat 000FF5  
             ??_Ignite_Detonators 0004                             plusw2 000FDB  
                __end_of_Del_Data 136C                             status 000FD8  
                     ?i2_Set_Bits 0001                __size_ofi2___lwmod 0042  
                  ?_InitInterrupt 0001                   __initialization 1464  
                    __end_of_Init 16E2                      __end_of_main 16A0  
                     ?i2_Transmit 0001                  __end_of_InitPort 1736  
                __end_of_InitTris 1724            Set_Display@information 0072  
       __end_of_InitMiscellaneous 1766                   ??i2_Set_Display 0016  
                          ??_Init 0060         __end_of_Ignite_Detonators 1188  
                   ??_Set_Display 0075                            ??_main 007B  
                __end_of_Set_Bits 0EB2                   ?_Evaluate_Signs 006F  
                   __activetblptr 000002        __end_ofi2_Evaluate_Display 0CA8  
                   ?_Receive_Dump 0001                  __end_of_Transmit 15A4  
                          _EEDATA 000FA8                            _CCPR1H 000FBF  
                          _CCPR1L 000FBE                            _EECON2 000FA7  
                ___awdiv@dividend 0001                            _ANSELA 000F38  
                          _ANSELB 000F39                            _ANSELC 000F3A  
                          i2l1041 1526                            i2l2240 0EBC  
                          i2l2250 0ED0                            i2l2242 0EC0  
                          i2l2330 0A98                            i2l2252 0ED4  
                          i2l2244 0EC4                            i2l2260 0F2A  
                          i2l2340 0B10                            i2l2332 0AB0  
                          i2l2246 0EC8                            i2l2350 0B88  
                          i2l2342 0B28                            i2l2334 0AC8  
                          i2l2326 0A68                            i2l2422 11F0  
                          i2l2248 0ECC                            i2l2256 0ED8  
                          i2l2360 0C00                            i2l2352 0BA0  
                          i2l2344 0B40                            i2l2336 0AE0  
                          i2l2328 0A80                            i2l2258 0F28  
                          i2l2354 0BB8                            i2l2346 0B58  
                          i2l2338 0AF8                            i2l2362 0C12  
                          i2l2426 11F8                            i2l2356 0BD0  
                          i2l2348 0B70                            i2l2364 0C9E  
                          i2l2380 151C                            i2l2372 14FC  
                          i2l2630 1120                            i2l2358 0BE8  
                          i2l2366 0CA0                            i2l2374 1504  
                          i2l2702 1370                    __CFG_WDTEN$OFF 000000  
                          i2l2376 1508                            i2l2720 13B4  
                          i2l2634 1128                            i2l2714 139C  
                          i2l2802 01C0                            i2l2804 01C4  
                          i2l2638 1184                            i2l2646 1750  
                          i2l2662 1034                            i2l2718 13AA  
                          i2l2814 01D8                            i2l2752 006E  
                          i2l2674 105A                            i2l2690 108C  
                          i2l2746 005C                            i2l2676 1062  
                          i2l2668 1044                            i2l2694 109A  
                          i2l2686 1082                            i2l2678 1066  
                          i2l2794 016A                            i2l2798 01A0  
                          _RCREG1 000FAE                __size_of_Load_Data 0120  
                          _OSCCON 000FD3                __size_of_InitAnsel 0014  
                          _SPBRG1 000FAF                            _SSP1IF 007CF3  
              __size_of_Read_Data 004E                __size_of_InitTimer 0030  
                          _TXREG1 000FAD                         ??_Receive 0001  
              i2Set_Display@value 0014                    __CFG_XINST$OFF 000000  
                    _CCPTMRS0bits 000F49       __size_ofi2_Check_Detonators 0038  
              __size_of_Save_Data 0054                         ??___awdiv 0005  
                       ??___lwmod 0064                            clear_0 146A  
                          clear_1 1478                  ___awdiv@quotient 0007  
                          _pixels 0035            __size_of_Check_Buttons 051E  
i2Evaluate_Signs@evaluation_value 0010    Evaluate_Signs@evaluation_value 006F  
                  ??_Receive_Dump 0001                      __mediumconst 0000  
               __end_ofi2___lwmod 1530               __size_ofi2_Set_Bits 00BA  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                i2Transmit@receiver 0003  
             __end_of_Set_Display 11EC                   __CFG_HFOFST$OFF 000000  
             __size_ofi2_Transmit 0036              Isr@pixel_index_array 0028  
                      __accesstop 0060           __end_of__initialization 149E  
                 __CFG_PBADEN$OFF 000000                   ??_InitInterrupt 0060  
                   ___rparam_used 000001                    i2Transmit@port 0002  
              i2___lwmod@dividend 0001                    __pcstackCOMRAM 0001  
       __size_of_Check_Detonators 003C                      __pidataBANK1 0F6C  
                   ??_Start_Timer 0060        __size_of_InitMiscellaneous 0006  
      __size_of_Ignite_Detonators 006C                 __end_of_Load_Data 0DC8  
               __end_of_InitAnsel 1712                 __end_of_Read_Data 1464  
               __end_of_InitTimer 1642                     _string_delete 0080  
                       ?_Del_Data 0001      __end_ofi2_Write_Display_Byte 14EE  
               __end_of_Save_Data 1416                        __pbssBANK0 007B  
              Isr@pixel_index_bit 0029                   __CFG_PLLCFG$OFF 000000  
                   _Check_Buttons 026C                         ?_InitPort 0001  
                       ?_InitTris 0001                        __pnvCOMRAM 003D  
                       ?_Set_Bits 0060                __CFG_CCP2MX$PORTC1 000000  
        __end_of_Evaluate_Display 0A5C                __CFG_CCP3MX$PORTB5 000000  
                       ?_Transmit 0060                       _Set_Display 1188  
                      ??_Del_Data 0078            __size_of_Delay_Routine 0030  
             __end_of_Start_Timer 16FE                 ?_InitTransmission 0001  
               __CFG_PRICLKEN$OFF 000000                           _SSP1BUF 000FC9  
               ?i2_Evaluate_Signs 0010                ??_InitTransmission 0060  
              ??i2_Evaluate_Signs 0012                    ?_Check_Buttons 0001  
                      ??_InitPort 0060                        ??_InitTris 0060  
     i2Write_Display_Byte@counter 0007                      ??i2_Set_Bits 0004  
                      ??_Set_Bits 0063                   __CFG_PWRTEN$OFF 000000  
                         _Receive 1746                           __Hparam 0000  
            __end_of_Receive_Dump 1746                           __Lparam 0000  
                Load_Data@counter 0077                           ___awdiv 1020  
                ??_Evaluate_Signs 0071                      ??i2_Transmit 0003  
                Receive_Dump@dump 0001                        ??_Transmit 0062  
                         ___lwmod 12B2                      __psmallconst 021E  
                 __CFG_STVREN$OFF 000000                           __pcinit 1464  
                         __ramtop 0200                           __ptext0 1672  
                         __ptext1 16C4                           __ptext2 1712  
                         __ptext3 16A0                           __ptext4 1612  
                         __ptext5 1724                           __ptext6 1760  
                         __ptext7 1754                           __ptext8 16FE  
                         __ptext9 1530                         _T1CONbits 000FCD  
                    __size_of_Isr 0212                   Set_Display@type 0075  
                       _T3CONbits 000FB1                __end_ofi2_Set_Bits 0F6C  
                         _overrun 01E2              end_of_initialization 149E  
     __size_of_Write_Display_Byte 0062                __end_ofi2_Transmit 1612  
                   __Lmediumconst 0000                i2_Evaluate_Display 0A5C  
                   _Delay_Routine 1642              i2_Write_Display_Byte 14AC  
             ?i2_Evaluate_Display 0009                         _RCSTAbits 000FAB  
                _Check_Detonators 1530                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE            i2Evaluate_Display@size 000F  
                     _Start_Timer 16E2                         _PORTAbits 000F80  
                       _PORTBbits 000F81                         _PORTCbits 000F82  
             i2Transmit@operation 0001             __end_ofi2_Set_Display 13C2  
                       _TRISCbits 000F94              ??i2_Evaluate_Display 000B  
                 ??_Check_Buttons 0079          Ignite_Detonators@counter 0006  
                       i2___lwmod 14EE                     _check_counter 0033  
                  ?_Delay_Routine 0001                       _CCP1CONbits 000FBD  
           ?i2_Write_Display_Byte 0001        __end_ofi2_Check_Detonators 15DC  
        i2Set_Display@information 0013                      Set_Bits@bits 0060  
             start_initialization 1464                         _Load_Data 0CA8  
                       _InitAnsel 16FE                      _ignite_ready 01E0  
               __size_of_Del_Data 0058                       __end_of_Isr 021A  
                       _Read_Data 1416                         _InitTimer 1612  
                      ?i2___lwmod 0001                  Set_Bits@bitcount 0066  
           __size_of_Receive_Dump 0010                         _Save_Data 13C2  
  i2Write_Display_Byte@write_data 0001                 __size_of_InitPort 0012  
               __size_of_InitTris 0012             __end_of_InitInterrupt 1760  
               __size_of_Set_Bits 00EA                 ?_Evaluate_Display 0068  
                     __pdataBANK1 0100                ??_Evaluate_Display 006A  
                  _slave_selected 007C                 __size_of_Transmit 0038  
                    ?_Set_Display 0072            Save_Data@store_address 0062  
                     __pbssCOMRAM 002B                        ?_Load_Data 0001  
                      ?_InitAnsel 0001                     __pcstackBANK0 0060  
                    _Receive_Dump 1736                        ?_Read_Data 0060  
                      ?_InitTimer 0001                 i2___lwmod@divisor 0003  
               i2___lwmod@counter 0005                   ??_Delay_Routine 0060  
                      ?_Save_Data 0060            ??i2_Write_Display_Byte 0003  
                    _current_time 0031                  _master_addressed 01E1  
                        ?_Receive 0001         __size_of_InitTransmission 0024  
       __size_ofi2_Evaluate_Signs 0064             Read_Data@read_address 0064  
                       __pintcode 0008                          ?___awdiv 0001  
                        ?___lwmod 0060                       __smallconst 021E  
        __end_of_Check_Detonators 156C                       ??i2___lwmod 0005  
                        _PIE1bits 000F9D               i2Set_Bits@Bitoutput 0008  
                        i2u183_44 0150                          i2u183_45 014C  
                        _PIR1bits 000F9E                          i2u185_44 0182  
                        i2u185_45 017E                          _PIR2bits 000FA1  
                __CFG_WDTPS$32768 000000        i2Evaluate_Display@evaluate 0009  
                        _SSP1CON1 000FC6                          _SSP1STAT 000FC7  
                    ?_Start_Timer 0001                    i2Set_Bits@bits 0001  
                        _Del_Data 1314                       ??_Load_Data 0076  
                     ??_InitAnsel 0060                   _receive_counter 0034  
                     ??_Read_Data 0062                       ??_InitTimer 0060  
      __end_of_Write_Display_Byte 12B2                         copy_data0 1492  
                        _InitPort 1724                          _InitTris 1712  
                     ??_Save_Data 0063                 Transmit@operation 0060  
                      _EECON1bits 000FA6                   Isr@search_index 002A  
                        _Set_Bits 0DC8                      _pin_selected 007B  
                        __Hrparam 0000                  __size_of_Receive 000E  
                        __Lrparam 0000                 __CFG_P2BMX$PORTB5 000000  
                        _Transmit 156C                  __size_of___awdiv 0084  
                __size_of___lwmod 0062      i2Evaluate_Signs@valuecounter 0012  
              i2_Check_Detonators 15A4              __size_of_Set_Display 0064  
         __size_of_Evaluate_Signs 0078       __size_ofi2_Evaluate_Display 024C  
             ?i2_Check_Detonators 0001                          __ptext10 156C  
                        __ptext11 026C                          __ptext20 078A  
                        __ptext12 16E2                          __ptext21 0DC8  
                        __ptext13 1314                          __ptext30 0EB2  
                        __ptext22 1416                          __ptext14 13C2  
                        __ptext31 15A4                          __ptext23 1642  
                        __ptext15 0CA8                          __ptext32 1020  
                        __ptext16 1188                          __ptext33 1736  
                        __ptext25 136C                          __ptext17 1250  
                        __ptext34 1746                          __ptext26 14AC  
                        __ptext18 10A4                          __ptext35 111C  
                        __ptext27 11EC                          __ptext19 12B2  
                        __ptext36 15DC                          __ptext28 14EE  
                        __ptext29 0A5C             __end_of_Check_Buttons 078A  
                Set_Display@value 0073                     __size_of_Init 001E  
                   __size_of_main 002E                          _received 002B  
          __size_ofi2_Set_Display 0056                  _InitTransmission 16A0  
      Delay_Routine@delay_counter 0062                  i2_Evaluate_Signs 11EC  
            ??i2_Check_Detonators 0004                          _testflag 01E3  
                        int$flags 003E              Evaluate_Display@size 006E  
                Transmit@receiver 0062      Write_Display_Byte@write_data 0060  
      Evaluate_Signs@valuecounter 0071                        _INTCONbits 000FF2  
       __size_of_Evaluate_Display 02D2                Read_Data@data_read 0062  
                        intlevel2 0000                  ___lwmod@dividend 0060  
       Write_Display_Byte@counter 0066                        _RCSTA1bits 000FAB  
                 _display_counter 003D                i2Set_Bits@bitcount 0007  
                 Del_Data@counter 0078              __size_of_Start_Timer 001C  
                   i2_Set_Display 136C                   ___lwmod@divisor 0062  
   Delay_Routine@delay_multiplyer 0061                   ___lwmod@counter 0064  
               __CFG_T3CMX$PORTC0 000000            __size_of_InitInterrupt 000C  
               ?_Check_Detonators 0001                ??_Check_Detonators 0063  
           __end_of_Delay_Routine 1672                 __CFG_FOSC$INTIO67 000000  
                      i2_Set_Bits 0EB2     __size_ofi2_Write_Display_Byte 0042  
