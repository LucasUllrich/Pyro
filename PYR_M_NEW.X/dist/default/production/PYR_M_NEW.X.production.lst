

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Dec 22 21:04:43 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataBANK1
    41  00095A                     __pidataBANK1:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _pin
    45  00095A  00                 	db	0
    46  00095B  00                 	db	0
    47  00095C  00                 	db	0
    48  00095D  1F                 	db	31
    49  00095E  00                 	db	0
    50  00095F  00                 	db	0
    51  000960  00                 	db	0
    52  000961  01                 	db	1
    53  000962  01                 	db	1
    54  000963  1E                 	db	30
    55  000964  00                 	db	0
    56  000965  00                 	db	0
    57  000966  00                 	db	0
    58  000967  02                 	db	2
    59  000968  02                 	db	2
    60  000969  1D                 	db	29
    61  00096A  00                 	db	0
    62  00096B  00                 	db	0
    63  00096C  00                 	db	0
    64  00096D  03                 	db	3
    65  00096E  03                 	db	3
    66  00096F  1C                 	db	28
    67  000970  00                 	db	0
    68  000971  00                 	db	0
    69  000972  00                 	db	0
    70  000973  04                 	db	4
    71  000974  04                 	db	4
    72  000975  1B                 	db	27
    73  000976  00                 	db	0
    74  000977  00                 	db	0
    75  000978  00                 	db	0
    76  000979  05                 	db	5
    77  00097A  05                 	db	5
    78  00097B  1A                 	db	26
    79  00097C  00                 	db	0
    80  00097D  00                 	db	0
    81  00097E  00                 	db	0
    82  00097F  06                 	db	6
    83  000980  06                 	db	6
    84  000981  19                 	db	25
    85  000982  00                 	db	0
    86  000983  00                 	db	0
    87  000984  00                 	db	0
    88  000985  07                 	db	7
    89  000986  07                 	db	7
    90  000987  18                 	db	24
    91  000988  00                 	db	0
    92  000989  00                 	db	0
    93  00098A  00                 	db	0
    94  00098B  08                 	db	8
    95  00098C  08                 	db	8
    96  00098D  27                 	db	39
    97  00098E  00                 	db	0
    98  00098F  00                 	db	0
    99  000990  00                 	db	0
   100  000991  09                 	db	9
   101  000992  09                 	db	9
   102  000993  26                 	db	38
   103  000994  00                 	db	0
   104  000995  00                 	db	0
   105  000996  01                 	db	1
   106  000997  00                 	db	0
   107  000998  0A                 	db	10
   108  000999  25                 	db	37
   109  00099A  00                 	db	0
   110  00099B  00                 	db	0
   111  00099C  01                 	db	1
   112  00099D  01                 	db	1
   113  00099E  0B                 	db	11
   114  00099F  24                 	db	36
   115  0009A0  00                 	db	0
   116  0009A1  00                 	db	0
   117  0009A2  01                 	db	1
   118  0009A3  02                 	db	2
   119  0009A4  0C                 	db	12
   120  0009A5  23                 	db	35
   121  0009A6  00                 	db	0
   122  0009A7  00                 	db	0
   123  0009A8  01                 	db	1
   124  0009A9  03                 	db	3
   125  0009AA  0D                 	db	13
   126  0009AB  22                 	db	34
   127  0009AC  00                 	db	0
   128  0009AD  00                 	db	0
   129  0009AE  01                 	db	1
   130  0009AF  04                 	db	4
   131  0009B0  0E                 	db	14
   132  0009B1  21                 	db	33
   133  0009B2  00                 	db	0
   134  0009B3  00                 	db	0
   135  0009B4  01                 	db	1
   136  0009B5  05                 	db	5
   137  0009B6  0F                 	db	15
   138  0009B7  20                 	db	32
   139  0009B8  00                 	db	0
   140  0009B9  00                 	db	0
   141  0009BA  01                 	db	1
   142  0009BB  06                 	db	6
   143  0009BC  10                 	db	16
   144  0009BD  2F                 	db	47
   145  0009BE  00                 	db	0
   146  0009BF  00                 	db	0
   147  0009C0  01                 	db	1
   148  0009C1  07                 	db	7
   149  0009C2  11                 	db	17
   150  0009C3  2E                 	db	46
   151  0009C4  00                 	db	0
   152  0009C5  00                 	db	0
   153  0009C6  01                 	db	1
   154  0009C7  08                 	db	8
   155  0009C8  12                 	db	18
   156  0009C9  2D                 	db	45
   157  0009CA  00                 	db	0
   158  0009CB  00                 	db	0
   159  0009CC  01                 	db	1
   160  0009CD  09                 	db	9
   161  0009CE  13                 	db	19
   162  0009CF  2C                 	db	44
   163  0009D0  00                 	db	0
   164  0009D1  00                 	db	0
   165  0009D2  02                 	db	2
   166  0009D3  00                 	db	0
   167  0009D4  14                 	db	20
   168  0009D5  2B                 	db	43
   169  0009D6  00                 	db	0
   170  0009D7  00                 	db	0
   171  0009D8  02                 	db	2
   172  0009D9  01                 	db	1
   173  0009DA  15                 	db	21
   174  0009DB  2A                 	db	42
   175  0009DC  00                 	db	0
   176  0009DD  00                 	db	0
   177  0009DE  02                 	db	2
   178  0009DF  02                 	db	2
   179  0009E0  16                 	db	22
   180  0009E1  29                 	db	41
   181  0009E2  00                 	db	0
   182  0009E3  00                 	db	0
   183  0009E4  02                 	db	2
   184  0009E5  03                 	db	3
   185  0009E6  17                 	db	23
   186  0009E7  28                 	db	40
   187  0009E8  00                 	db	0
   188  0009E9  00                 	db	0
   189  0009EA  02                 	db	2
   190  0009EB  04                 	db	4
   191  0009EC  18                 	db	24
   192  0009ED  35                 	db	53
   193  0009EE  00                 	db	0
   194  0009EF  00                 	db	0
   195  0009F0  02                 	db	2
   196  0009F1  05                 	db	5
   197  0009F2  19                 	db	25
   198  0009F3  34                 	db	52
   199  0009F4  00                 	db	0
   200  0009F5  00                 	db	0
   201  0009F6  02                 	db	2
   202  0009F7  06                 	db	6
   203  0009F8  1A                 	db	26
   204  0009F9  33                 	db	51
   205  0009FA  00                 	db	0
   206  0009FB  00                 	db	0
   207  0009FC  02                 	db	2
   208  0009FD  07                 	db	7
   209  0009FE  1B                 	db	27
   210  0009FF  32                 	db	50
   211  000A00  00                 	db	0
   212  000A01  00                 	db	0
   213  000A02  02                 	db	2
   214  000A03  08                 	db	8
   215  000A04  1C                 	db	28
   216  000A05  31                 	db	49
   217  000A06  00                 	db	0
   218  000A07  00                 	db	0
   219  000A08  02                 	db	2
   220  000A09  09                 	db	9
   221  000A0A  1D                 	db	29
   222  000A0B  30                 	db	48
   223  000A0C  00                 	db	0
   224  000A0D  00                 	db	0
   225  0000                     _ANSELA	set	3896
   226  0000                     _ANSELB	set	3897
   227  0000                     _ANSELC	set	3898
   228  0000                     _CCPTMRS0bits	set	3913
   229  0000                     _BAUDCON1bits	set	4024
   230  0000                     _CCP1CONbits	set	4029
   231  0000                     _CCPR1H	set	4031
   232  0000                     _CCPR1L	set	4030
   233  0000                     _EEADR	set	4009
   234  0000                     _EECON1bits	set	4006
   235  0000                     _EECON2	set	4007
   236  0000                     _EEDATA	set	4008
   237  0000                     _INTCONbits	set	4082
   238  0000                     _OSCCON	set	4051
   239  0000                     _PIE1bits	set	3997
   240  0000                     _PIR1bits	set	3998
   241  0000                     _PIR2bits	set	4001
   242  0000                     _PORTA	set	3968
   243  0000                     _PORTB	set	3969
   244  0000                     _PORTBbits	set	3969
   245  0000                     _PORTC	set	3970
   246  0000                     _PORTCbits	set	3970
   247  0000                     _PORTE	set	3972
   248  0000                     _RCREG1	set	4014
   249  0000                     _RCSTA1bits	set	4011
   250  0000                     _RCSTAbits	set	4011
   251  0000                     _SPBRG1	set	4015
   252  0000                     _SSP1BUF	set	4041
   253  0000                     _SSP1CON1	set	4038
   254  0000                     _SSP1STAT	set	4039
   255  0000                     _T1CONbits	set	4045
   256  0000                     _T3CONbits	set	4017
   257  0000                     _TMR1H	set	4047
   258  0000                     _TMR1L	set	4046
   259  0000                     _TRISA	set	3986
   260  0000                     _TRISB	set	3987
   261  0000                     _TRISC	set	3988
   262  0000                     _TRISCbits	set	3988
   263  0000                     _TRISE	set	3990
   264  0000                     _TXREG1	set	4013
   265  0000                     _TXSTA1bits	set	4012
   266  0000                     _SSP1IF	set	31987
   267                           
   268                           	psect	smallconst
   269  000200                     __psmallconst:
   270                           	opt stack 0
   271  000200  00                 	db	0
   272  000201                     STR_9:
   273  000201  41                 	db	65	;'A'
   274  000202  42                 	db	66	;'B'
   275  000203  43                 	db	67	;'C'
   276  000204  44                 	db	68	;'D'
   277  000205  45                 	db	69	;'E'
   278  000206  46                 	db	70	;'F'
   279  000207  47                 	db	71	;'G'
   280  000208  00                 	db	0
   281  000209                     STR_1:
   282  000209  41                 	db	65	;'A'
   283  00020A  42                 	db	66	;'B'
   284  00020B  43                 	db	67	;'C'
   285  00020C  44                 	db	68	;'D'
   286  00020D  45                 	db	69	;'E'
   287  00020E  46                 	db	70	;'F'
   288  00020F  00                 	db	0
   289  000210                     STR_10:
   290  000210  41                 	db	65	;'A'
   291  000211  42                 	db	66	;'B'
   292  000212  43                 	db	67	;'C'
   293  000213  44                 	db	68	;'D'
   294  000214  46                 	db	70	;'F'
   295  000215  47                 	db	71	;'G'
   296  000216  00                 	db	0
   297  000217                     STR_12:
   298  000217  41                 	db	65	;'A'
   299  000218  42                 	db	66	;'B'
   300  000219  43                 	db	67	;'C'
   301  00021A  45                 	db	69	;'E'
   302  00021B  46                 	db	70	;'F'
   303  00021C  47                 	db	71	;'G'
   304  00021D  00                 	db	0
   305  00021E                     STR_7:
   306  00021E  41                 	db	65	;'A'
   307  00021F  43                 	db	67	;'C'
   308  000220  44                 	db	68	;'D'
   309  000221  45                 	db	69	;'E'
   310  000222  46                 	db	70	;'F'
   311  000223  47                 	db	71	;'G'
   312  000224  00                 	db	0
   313  000225                     STR_4:
   314  000225  41                 	db	65	;'A'
   315  000226  42                 	db	66	;'B'
   316  000227  43                 	db	67	;'C'
   317  000228  44                 	db	68	;'D'
   318  000229  47                 	db	71	;'G'
   319  00022A  00                 	db	0
   320  00022B                     STR_3:
   321  00022B  41                 	db	65	;'A'
   322  00022C  42                 	db	66	;'B'
   323  00022D  44                 	db	68	;'D'
   324  00022E  45                 	db	69	;'E'
   325  00022F  47                 	db	71	;'G'
   326  000230  00                 	db	0
   327  000231                     STR_6:
   328  000231  41                 	db	65	;'A'
   329  000232  43                 	db	67	;'C'
   330  000233  44                 	db	68	;'D'
   331  000234  46                 	db	70	;'F'
   332  000235  47                 	db	71	;'G'
   333  000236  00                 	db	0
   334  000237                     STR_11:
   335  000237  41                 	db	65	;'A'
   336  000238  44                 	db	68	;'D'
   337  000239  45                 	db	69	;'E'
   338  00023A  46                 	db	70	;'F'
   339  00023B  47                 	db	71	;'G'
   340  00023C  00                 	db	0
   341  00023D                     STR_5:
   342  00023D  42                 	db	66	;'B'
   343  00023E  43                 	db	67	;'C'
   344  00023F  46                 	db	70	;'F'
   345  000240  47                 	db	71	;'G'
   346  000241  00                 	db	0
   347  000242                     STR_8:
   348  000242  41                 	db	65	;'A'
   349  000243  42                 	db	66	;'B'
   350  000244  43                 	db	67	;'C'
   351  000245  00                 	db	0
   352  0000                     
   353                           ; #config settings
   354  000246  00                 	db	0	; dummy byte at the end
   355  0000                     
   356                           	psect	cinit
   357  000C5C                     __pcinit:
   358                           	opt stack 0
   359  000C5C                     start_initialization:
   360                           	opt stack 0
   361  000C5C                     __initialization:
   362                           	opt stack 0
   363                           
   364                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   365  000C5C  6A42               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   366                           
   367                           ; Clear objects allocated to COMRAM (22 bytes)
   368  000C5E  EE00  F02C         	lfsr	0,__pbssCOMRAM
   369  000C62  0E16               	movlw	22
   370  000C64                     clear_0:
   371  000C64  6AEE               	clrf	postinc0,c
   372  000C66  06E8               	decf	wreg,f,c
   373  000C68  E1FD               	bnz	clear_0
   374                           
   375                           ; Initialize objects allocated to BANK1 (180 bytes)
   376                           ; load TBLPTR registers with __pidataBANK1
   377  000C6A  0E5A               	movlw	low __pidataBANK1
   378  000C6C  6EF6               	movwf	tblptrl,c
   379  000C6E  0E09               	movlw	high __pidataBANK1
   380  000C70  6EF7               	movwf	tblptrh,c
   381  000C72  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   382  000C74  6EF8               	movwf	tblptru,c
   383  000C76  EE01  F000         	lfsr	0,__pdataBANK1
   384  000C7A  EE10 F0B4          	lfsr	1,180
   385  000C7E                     copy_data0:
   386  000C7E  0009               	tblrd		*+
   387  000C80  CFF5 FFEE          	movff	tablat,postinc0
   388  000C84  50E5               	movf	postdec1,w,c
   389  000C86  50E1               	movf	fsr1l,w,c
   390  000C88  E1FA               	bnz	copy_data0
   391  000C8A                     end_of_initialization:
   392                           	opt stack 0
   393  000C8A                     __end_of__initialization:
   394                           	opt stack 0
   395  000C8A  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   396  000C8C  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   397  000C8E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   398  000C90  6EF8               	movwf	tblptru,c
   399  000C92  0100               	movlb	0
   400  000C94  EF4C  F006         	goto	_main	;jump to C main() function
   401                           tblptru	equ	0xFF8
   402                           tblptrh	equ	0xFF7
   403                           tblptrl	equ	0xFF6
   404                           tablat	equ	0xFF5
   405                           postinc0	equ	0xFEE
   406                           wreg	equ	0xFE8
   407                           postdec1	equ	0xFE5
   408                           fsr1l	equ	0xFE1
   409                           
   410                           	psect	bitbssCOMRAM
   411  000210                     __pbitbssCOMRAM:
   412                           	opt stack 0
   413  000210                     _ignite_ready:
   414                           	opt stack 0
   415  000210                     	ds	1
   416  000211                     _master_addressed:
   417                           	opt stack 0
   418  000211                     	ds	1
   419  000212                     _testflag:
   420                           	opt stack 0
   421  000212                     	ds	1
   422                           tblptru	equ	0xFF8
   423                           tblptrh	equ	0xFF7
   424                           tblptrl	equ	0xFF6
   425                           tablat	equ	0xFF5
   426                           postinc0	equ	0xFEE
   427                           wreg	equ	0xFE8
   428                           postdec1	equ	0xFE5
   429                           fsr1l	equ	0xFE1
   430                           
   431                           	psect	bssCOMRAM
   432  00002C                     __pbssCOMRAM:
   433                           	opt stack 0
   434  00002C                     _received:
   435                           	opt stack 0
   436  00002C                     	ds	5
   437  000031                     _current_time:
   438                           	opt stack 0
   439  000031                     	ds	2
   440  000033                     _display_counter:
   441                           	opt stack 0
   442  000033                     	ds	1
   443  000034                     _overrun:
   444                           	opt stack 0
   445  000034                     	ds	1
   446  000035                     _pin_selected:
   447                           	opt stack 0
   448  000035                     	ds	1
   449  000036                     _receive_counter:
   450                           	opt stack 0
   451  000036                     	ds	1
   452  000037                     _slave_selected:
   453                           	opt stack 0
   454  000037                     	ds	1
   455  000038                     _pixels:
   456                           	opt stack 0
   457  000038                     	ds	7
   458  00003F                     _signs:
   459                           	opt stack 0
   460  00003F                     	ds	3
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           postdec1	equ	0xFE5
   468                           fsr1l	equ	0xFE1
   469                           
   470                           	psect	dataBANK1
   471  000100                     __pdataBANK1:
   472                           	opt stack 0
   473  000100                     _pin:
   474                           	opt stack 0
   475  000100                     	ds	180
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           postdec1	equ	0xFE5
   483                           fsr1l	equ	0xFE1
   484                           
   485                           	psect	cstackBANK0
   486  000060                     __pcstackBANK0:
   487                           	opt stack 0
   488  000060                     Set_Display@information:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x0
   492  000060                     	ds	1
   493  000061                     Set_Display@value:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x1
   497  000061                     	ds	2
   498  000063                     ??_Check_Buttons:
   499                           
   500                           ; 0 bytes @ 0x3
   501  000063                     	ds	2
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	cstackCOMRAM
   512  000001                     __pcstackCOMRAM:
   513                           	opt stack 0
   514  000001                     ?___awdiv:
   515                           	opt stack 0
   516  000001                     ___awdiv@dividend:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x0
   520  000001                     	ds	2
   521  000003                     ___awdiv@divisor:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x2
   525  000003                     	ds	2
   526  000005                     ___awdiv@counter:
   527                           	opt stack 0
   528                           
   529                           ; 1 bytes @ 0x4
   530  000005                     	ds	1
   531  000006                     ___awdiv@sign:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x5
   535  000006                     	ds	1
   536  000007                     ___awdiv@quotient:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x6
   540  000007                     	ds	2
   541  000009                     ??_Isr:
   542                           
   543                           ; 0 bytes @ 0x8
   544  000009                     	ds	17
   545  00001A                     Isr@pixel_index_array:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x19
   549  00001A                     	ds	1
   550  00001B                     Isr@pixel_index_bit:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x1A
   554  00001B                     	ds	1
   555  00001C                     Isr@search_index:
   556                           	opt stack 0
   557                           
   558                           ; 1 bytes @ 0x1B
   559  00001C                     	ds	1
   560  00001D                     ??_Delay_Routine:
   561  00001D                     ?_Read_Data:
   562                           	opt stack 0
   563  00001D                     ?___lwmod:
   564                           	opt stack 0
   565  00001D                     Save_Data@store:
   566                           	opt stack 0
   567  00001D                     Write_Display_Byte@write_data:
   568                           	opt stack 0
   569  00001D                     ___lwmod@dividend:
   570                           	opt stack 0
   571  00001D                     Set_Bits@bits:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x1C
   575  00001D                     	ds	1
   576  00001E                     Delay_Routine@delay_multiplyer:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x1D
   580  00001E                     	ds	1
   581  00001F                     ??_Write_Display_Byte:
   582  00001F                     Delay_Routine@delay_counter:
   583                           	opt stack 0
   584  00001F                     Save_Data@store_address:
   585                           	opt stack 0
   586  00001F                     Read_Data@data_read:
   587                           	opt stack 0
   588  00001F                     ___lwmod@divisor:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x1E
   592  00001F                     	ds	1
   593  000020                     ??_Set_Bits:
   594                           
   595                           ; 0 bytes @ 0x1F
   596  000020                     	ds	1
   597  000021                     Read_Data@read_address:
   598                           	opt stack 0
   599  000021                     ___lwmod@counter:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x20
   603  000021                     	ds	2
   604  000023                     Set_Bits@bitcount:
   605                           	opt stack 0
   606  000023                     Write_Display_Byte@counter:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x22
   610  000023                     	ds	1
   611  000024                     Set_Bits@Bitoutput:
   612                           	opt stack 0
   613                           
   614                           ; 1 bytes @ 0x23
   615  000024                     	ds	1
   616  000025                     Evaluate_Display@evaluate:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x24
   620  000025                     	ds	2
   621  000027                     Evaluate_Display@size:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0x26
   625  000027                     	ds	1
   626  000028                     Evaluate_Signs@evaluation_value:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x27
   630  000028                     	ds	2
   631  00002A                     Evaluate_Signs@valuecounter:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x29
   635  00002A                     	ds	1
   636  00002B                     Set_Display@type:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x2A
   640  00002B                     	ds	1
   641  00002C                     tblptru	equ	0xFF8
   642                           tblptrh	equ	0xFF7
   643                           tblptrl	equ	0xFF6
   644                           tablat	equ	0xFF5
   645                           postinc0	equ	0xFEE
   646                           wreg	equ	0xFE8
   647                           postdec1	equ	0xFE5
   648                           fsr1l	equ	0xFE1
   649                           
   650                           ; 0 bytes @ 0x2B
   651 ;;
   652 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   653 ;;
   654 ;; *************** function _main *****************
   655 ;; Defined at:
   656 ;;		line 86 in file "main.c"
   657 ;; Parameters:    Size  Location     Type
   658 ;;		None
   659 ;; Auto vars:     Size  Location     Type
   660 ;;		None
   661 ;; Return value:  Size  Location     Type
   662 ;;		None               void
   663 ;; Registers used:
   664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1
   670 ;;      Params:         0       0       0
   671 ;;      Locals:         0       0       0
   672 ;;      Temps:          0       0       0
   673 ;;      Totals:         0       0       0
   674 ;;Total ram usage:        0 bytes
   675 ;; Hardware stack levels required when called:    7
   676 ;; This function calls:
   677 ;;		_Check_Buttons
   678 ;;		_Check_Detonators
   679 ;;		_Init
   680 ;;		_Set_Display
   681 ;; This function is called by:
   682 ;;		Startup code after reset
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text0
   687  000C98                     __ptext0:
   688                           	opt stack 0
   689  000C98                     _main:
   690                           	opt stack 24
   691                           
   692                           ;main.c: 87: Init();
   693                           
   694                           ;incstack = 0
   695  000C98  EC98  F006         	call	_Init	;wreg free
   696  000C9C                     l2232:
   697                           
   698                           ;main.c: 89: Check_Buttons();
   699  000C9C  EC24  F001         	call	_Check_Buttons	;wreg free
   700                           
   701                           ;main.c: 90: if(testflag == 1) {
   702  000CA0  A442               	btfss	_testflag/(0+8),_testflag& (0+7),c
   703  000CA2  D7FC               	goto	l2232
   704                           
   705                           ;main.c: 91: Set_Display('7', 'T',0);
   706  000CA4  0E54               	movlw	84
   707  000CA6  0100               	movlb	0	; () banked
   708  000CA8  6F60               	movwf	Set_Display@information& (0+255),b
   709  000CAA  0E00               	movlw	0
   710  000CAC  0100               	movlb	0	; () banked
   711  000CAE  6F62               	movwf	(Set_Display@value+1)& (0+255),b
   712  000CB0  0E00               	movlw	0
   713  000CB2  6F61               	movwf	Set_Display@value& (0+255),b
   714  000CB4  0E37               	movlw	55
   715  000CB6  EC7B  F005         	call	_Set_Display
   716                           
   717                           ;main.c: 92: Check_Detonators();
   718  000CBA  ECD3  F006         	call	_Check_Detonators	;wreg free
   719  000CBE  D7EE               	goto	l2232
   720  000CC0                     __end_of_main:
   721                           	opt stack 0
   722                           tblptru	equ	0xFF8
   723                           tblptrh	equ	0xFF7
   724                           tblptrl	equ	0xFF6
   725                           tablat	equ	0xFF5
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           postdec1	equ	0xFE5
   729                           fsr1l	equ	0xFE1
   730                           
   731 ;; *************** function _Init *****************
   732 ;; Defined at:
   733 ;;		line 3 in file "init.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;		None               void
   740 ;; Registers used:
   741 ;;		wreg, status,2, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1
   747 ;;      Params:         0       0       0
   748 ;;      Locals:         0       0       0
   749 ;;      Temps:          0       0       0
   750 ;;      Totals:         0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    3
   754 ;; This function calls:
   755 ;;		_InitAnsel
   756 ;;		_InitInterrupt
   757 ;;		_InitMiscellaneous
   758 ;;		_InitPort
   759 ;;		_InitTimer
   760 ;;		_InitTransmission
   761 ;;		_InitTris
   762 ;; This function is called by:
   763 ;;		_main
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           	psect	text1
   768  000D30                     __ptext1:
   769                           	opt stack 0
   770  000D30                     _Init:
   771                           	opt stack 27
   772                           
   773                           ;init.c: 4: InitPort();
   774                           
   775                           ;incstack = 0
   776  000D30  ECBA  F006         	call	_InitPort	;wreg free
   777                           
   778                           ;init.c: 5: InitTris();
   779  000D34  ECB1  F006         	call	_InitTris	;wreg free
   780                           
   781                           ;init.c: 6: InitAnsel();
   782  000D38  ECA7  F006         	call	_InitAnsel	;wreg free
   783                           
   784                           ;init.c: 7: InitMiscellaneous();
   785  000D3C  ECD0  F006         	call	_InitMiscellaneous	;wreg free
   786                           
   787                           ;init.c: 8: InitTransmission();
   788  000D40  EC74  F006         	call	_InitTransmission	;wreg free
   789                           
   790                           ;init.c: 9: InitTimer();
   791  000D44  EC60  F006         	call	_InitTimer	;wreg free
   792                           
   793                           ;init.c: 10: InitInterrupt();
   794  000D48  ECCB  F006         	call	_InitInterrupt	;wreg free
   795  000D4C  0012               	return		;funcret
   796  000D4E                     __end_of_Init:
   797                           	opt stack 0
   798                           tblptru	equ	0xFF8
   799                           tblptrh	equ	0xFF7
   800                           tblptrl	equ	0xFF6
   801                           tablat	equ	0xFF5
   802                           postinc0	equ	0xFEE
   803                           wreg	equ	0xFE8
   804                           postdec1	equ	0xFE5
   805                           fsr1l	equ	0xFE1
   806                           
   807 ;; *************** function _InitTris *****************
   808 ;; Defined at:
   809 ;;		line 20 in file "init.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;		None               void
   816 ;; Registers used:
   817 ;;		wreg, status,2
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK0   BANK1
   823 ;;      Params:         0       0       0
   824 ;;      Locals:         0       0       0
   825 ;;      Temps:          0       0       0
   826 ;;      Totals:         0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used:    1
   829 ;; Hardware stack levels required when called:    2
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_Init
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text2
   838  000D62                     __ptext2:
   839                           	opt stack 0
   840  000D62                     _InitTris:
   841                           	opt stack 27
   842                           
   843                           ;init.c: 21: TRISA = 0b00000000;
   844                           
   845                           ;incstack = 0
   846  000D62  0E00               	movlw	0
   847  000D64  6E92               	movwf	3986,c	;volatile
   848                           
   849                           ;init.c: 22: TRISB = 0b00011111;
   850  000D66  0E1F               	movlw	31
   851  000D68  6E93               	movwf	3987,c	;volatile
   852                           
   853                           ;init.c: 23: TRISC = 0b10000010;
   854  000D6A  0E82               	movlw	130
   855  000D6C  6E94               	movwf	3988,c	;volatile
   856                           
   857                           ;init.c: 24: TRISE = 0;
   858  000D6E  0E00               	movlw	0
   859  000D70  6E96               	movwf	3990,c	;volatile
   860  000D72  0012               	return		;funcret
   861  000D74                     __end_of_InitTris:
   862                           	opt stack 0
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           postinc0	equ	0xFEE
   868                           wreg	equ	0xFE8
   869                           postdec1	equ	0xFE5
   870                           fsr1l	equ	0xFE1
   871                           
   872 ;; *************** function _InitTransmission *****************
   873 ;; Defined at:
   874 ;;		line 37 in file "init.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;		None               void
   881 ;; Registers used:
   882 ;;		wreg, status,2
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1
   888 ;;      Params:         0       0       0
   889 ;;      Locals:         0       0       0
   890 ;;      Temps:          0       0       0
   891 ;;      Totals:         0       0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    2
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_Init
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text3
   903  000CE8                     __ptext3:
   904                           	opt stack 0
   905  000CE8                     _InitTransmission:
   906                           	opt stack 27
   907                           
   908                           ;init.c: 39: SSP1STAT = 0b01000000;
   909                           
   910                           ;incstack = 0
   911  000CE8  0E40               	movlw	64
   912  000CEA  6EC7               	movwf	4039,c	;volatile
   913                           
   914                           ;init.c: 40: SSP1CON1 = 0b00100010;
   915  000CEC  0E22               	movlw	34
   916  000CEE  6EC6               	movwf	4038,c	;volatile
   917                           
   918                           ;init.c: 42: TXSTA1bits.SYNC = 0;
   919  000CF0  98AC               	bcf	4012,4,c	;volatile
   920                           
   921                           ;init.c: 43: TXSTA1bits.BRGH = 1;
   922  000CF2  84AC               	bsf	4012,2,c	;volatile
   923                           
   924                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
   925  000CF4  96B8               	bcf	4024,3,c	;volatile
   926                           
   927                           ;init.c: 45: SPBRG1 = 25;
   928  000CF6  0E19               	movlw	25
   929  000CF8  6EAF               	movwf	4015,c	;volatile
   930                           
   931                           ;init.c: 46: TRISCbits.RC6 = 1;
   932  000CFA  8C94               	bsf	3988,6,c	;volatile
   933                           
   934                           ;init.c: 47: TRISCbits.RC7 = 1;
   935  000CFC  8E94               	bsf	3988,7,c	;volatile
   936                           
   937                           ;init.c: 48: RCSTA1bits.SPEN = 1;
   938  000CFE  8EAB               	bsf	4011,7,c	;volatile
   939                           
   940                           ;init.c: 49: TXSTA1bits.TX9 = 1;
   941  000D00  8CAC               	bsf	4012,6,c	;volatile
   942                           
   943                           ;init.c: 50: TXSTA1bits.TXEN = 1;
   944  000D02  8AAC               	bsf	4012,5,c	;volatile
   945                           
   946                           ;init.c: 51: RCSTA1bits.RC9 = 1;
   947  000D04  8CAB               	bsf	4011,6,c	;volatile
   948                           
   949                           ;init.c: 52: RCSTA1bits.CREN = 1;
   950  000D06  88AB               	bsf	4011,4,c	;volatile
   951                           
   952                           ;init.c: 53: TRISCbits.RC6 = 0;
   953  000D08  9C94               	bcf	3988,6,c	;volatile
   954  000D0A  0012               	return		;funcret
   955  000D0C                     __end_of_InitTransmission:
   956                           	opt stack 0
   957                           tblptru	equ	0xFF8
   958                           tblptrh	equ	0xFF7
   959                           tblptrl	equ	0xFF6
   960                           tablat	equ	0xFF5
   961                           postinc0	equ	0xFEE
   962                           wreg	equ	0xFE8
   963                           postdec1	equ	0xFE5
   964                           fsr1l	equ	0xFE1
   965                           
   966 ;; *************** function _InitTimer *****************
   967 ;; Defined at:
   968 ;;		line 56 in file "init.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;		None
   971 ;; Auto vars:     Size  Location     Type
   972 ;;		None
   973 ;; Return value:  Size  Location     Type
   974 ;;		None               void
   975 ;; Registers used:
   976 ;;		wreg, status,2
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMRAM   BANK0   BANK1
   982 ;;      Params:         0       0       0
   983 ;;      Locals:         0       0       0
   984 ;;      Temps:          0       0       0
   985 ;;      Totals:         0       0       0
   986 ;;Total ram usage:        0 bytes
   987 ;; Hardware stack levels used:    1
   988 ;; Hardware stack levels required when called:    2
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_Init
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           	psect	text4
   997  000CC0                     __ptext4:
   998                           	opt stack 0
   999  000CC0                     _InitTimer:
  1000                           	opt stack 27
  1001                           
  1002                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
  1003                           
  1004                           ;incstack = 0
  1005  000CC0  0E3F               	movlw	-193
  1006  000CC2  16CD               	andwf	4045,f,c	;volatile
  1007                           
  1008                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
  1009  000CC4  0E30               	movlw	48
  1010  000CC6  12CD               	iorwf	4045,f,c	;volatile
  1011                           
  1012                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
  1013  000CC8  94CD               	bcf	4045,2,c	;volatile
  1014                           
  1015                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
  1016  000CCA  0E3F               	movlw	-193
  1017  000CCC  16B1               	andwf	4017,f,c	;volatile
  1018                           
  1019                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
  1020  000CCE  0E30               	movlw	48
  1021  000CD0  12B1               	iorwf	4017,f,c	;volatile
  1022                           
  1023                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
  1024  000CD2  94B1               	bcf	4017,2,c	;volatile
  1025                           
  1026                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
  1027  000CD4  50BD               	movf	4029,w,c	;volatile
  1028  000CD6  0BF0               	andlw	-16
  1029  000CD8  090A               	iorlw	10
  1030  000CDA  6EBD               	movwf	4029,c	;volatile
  1031                           
  1032                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
  1033  000CDC  010F               	movlb	15	; () banked
  1034  000CDE  5149               	movf	73,w,b	;volatile
  1035  000CE0  0BFC               	andlw	-4
  1036  000CE2  0901               	iorlw	1
  1037  000CE4  6F49               	movwf	73,b	;volatile
  1038                           
  1039                           ; BSR set to: 15
  1040  000CE6  0012               	return		;funcret
  1041  000CE8                     __end_of_InitTimer:
  1042                           	opt stack 0
  1043                           tblptru	equ	0xFF8
  1044                           tblptrh	equ	0xFF7
  1045                           tblptrl	equ	0xFF6
  1046                           tablat	equ	0xFF5
  1047                           postinc0	equ	0xFEE
  1048                           wreg	equ	0xFE8
  1049                           postdec1	equ	0xFE5
  1050                           fsr1l	equ	0xFE1
  1051                           
  1052 ;; *************** function _InitPort *****************
  1053 ;; Defined at:
  1054 ;;		line 13 in file "init.c"
  1055 ;; Parameters:    Size  Location     Type
  1056 ;;		None
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;		None               void
  1061 ;; Registers used:
  1062 ;;		wreg, status,2
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1
  1068 ;;      Params:         0       0       0
  1069 ;;      Locals:         0       0       0
  1070 ;;      Temps:          0       0       0
  1071 ;;      Totals:         0       0       0
  1072 ;;Total ram usage:        0 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    2
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_Init
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text5
  1083  000D74                     __ptext5:
  1084                           	opt stack 0
  1085  000D74                     _InitPort:
  1086                           	opt stack 27
  1087                           
  1088                           ;init.c: 14: PORTA = 0b00000000;
  1089                           
  1090                           ; BSR set to: 15
  1091                           ;incstack = 0
  1092  000D74  0E00               	movlw	0
  1093  000D76  6E80               	movwf	3968,c	;volatile
  1094                           
  1095                           ;init.c: 15: PORTB = 0b00000000;
  1096  000D78  0E00               	movlw	0
  1097  000D7A  6E81               	movwf	3969,c	;volatile
  1098                           
  1099                           ;init.c: 16: PORTC = 0b00000001;
  1100  000D7C  0E01               	movlw	1
  1101  000D7E  6E82               	movwf	3970,c	;volatile
  1102                           
  1103                           ;init.c: 17: PORTE = 0;
  1104  000D80  0E00               	movlw	0
  1105  000D82  6E84               	movwf	3972,c	;volatile
  1106  000D84  0012               	return		;funcret
  1107  000D86                     __end_of_InitPort:
  1108                           	opt stack 0
  1109                           tblptru	equ	0xFF8
  1110                           tblptrh	equ	0xFF7
  1111                           tblptrl	equ	0xFF6
  1112                           tablat	equ	0xFF5
  1113                           postinc0	equ	0xFEE
  1114                           wreg	equ	0xFE8
  1115                           postdec1	equ	0xFE5
  1116                           fsr1l	equ	0xFE1
  1117                           
  1118 ;; *************** function _InitMiscellaneous *****************
  1119 ;; Defined at:
  1120 ;;		line 33 in file "init.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;		None               void
  1127 ;; Registers used:
  1128 ;;		wreg, status,2
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1
  1134 ;;      Params:         0       0       0
  1135 ;;      Locals:         0       0       0
  1136 ;;      Temps:          0       0       0
  1137 ;;      Totals:         0       0       0
  1138 ;;Total ram usage:        0 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    2
  1141 ;; This function calls:
  1142 ;;		Nothing
  1143 ;; This function is called by:
  1144 ;;		_Init
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text6
  1149  000DA0                     __ptext6:
  1150                           	opt stack 0
  1151  000DA0                     _InitMiscellaneous:
  1152                           	opt stack 27
  1153                           
  1154                           ;init.c: 34: OSCCON = 0b01010011;
  1155                           
  1156                           ;incstack = 0
  1157  000DA0  0E53               	movlw	83
  1158  000DA2  6ED3               	movwf	4051,c	;volatile
  1159  000DA4  0012               	return		;funcret
  1160  000DA6                     __end_of_InitMiscellaneous:
  1161                           	opt stack 0
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           postdec1	equ	0xFE5
  1169                           fsr1l	equ	0xFE1
  1170                           
  1171 ;; *************** function _InitInterrupt *****************
  1172 ;; Defined at:
  1173 ;;		line 70 in file "init.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;		None               void
  1180 ;; Registers used:
  1181 ;;		None
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1
  1187 ;;      Params:         0       0       0
  1188 ;;      Locals:         0       0       0
  1189 ;;      Temps:          0       0       0
  1190 ;;      Totals:         0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    2
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_Init
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text7
  1202  000D96                     __ptext7:
  1203                           	opt stack 0
  1204  000D96                     _InitInterrupt:
  1205                           	opt stack 27
  1206                           
  1207                           ;init.c: 71: INTCONbits.GIE = 1;
  1208                           
  1209                           ;incstack = 0
  1210  000D96  8EF2               	bsf	intcon,7,c	;volatile
  1211                           
  1212                           ;init.c: 72: INTCONbits.PEIE = 1;
  1213  000D98  8CF2               	bsf	intcon,6,c	;volatile
  1214                           
  1215                           ;init.c: 73: PIE1bits.RCIE = 1;
  1216  000D9A  8A9D               	bsf	3997,5,c	;volatile
  1217                           
  1218                           ;init.c: 74: PIE1bits.CCP1IE = 1;
  1219  000D9C  849D               	bsf	3997,2,c	;volatile
  1220  000D9E  0012               	return		;funcret
  1221  000DA0                     __end_of_InitInterrupt:
  1222                           	opt stack 0
  1223                           tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           intcon	equ	0xFF2
  1228                           postinc0	equ	0xFEE
  1229                           wreg	equ	0xFE8
  1230                           postdec1	equ	0xFE5
  1231                           fsr1l	equ	0xFE1
  1232                           
  1233 ;; *************** function _InitAnsel *****************
  1234 ;; Defined at:
  1235 ;;		line 27 in file "init.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;		None               void
  1242 ;; Registers used:
  1243 ;;		wreg, status,2
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMRAM   BANK0   BANK1
  1249 ;;      Params:         0       0       0
  1250 ;;      Locals:         0       0       0
  1251 ;;      Temps:          0       0       0
  1252 ;;      Totals:         0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    2
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_Init
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           	psect	text8
  1264  000D4E                     __ptext8:
  1265                           	opt stack 0
  1266  000D4E                     _InitAnsel:
  1267                           	opt stack 27
  1268                           
  1269                           ;init.c: 28: ANSELA = 0;
  1270                           
  1271                           ;incstack = 0
  1272  000D4E  0E00               	movlw	0
  1273  000D50  010F               	movlb	15	; () banked
  1274  000D52  6F38               	movwf	56,b	;volatile
  1275                           
  1276                           ;init.c: 29: ANSELB = 0;
  1277  000D54  0E00               	movlw	0
  1278  000D56  010F               	movlb	15	; () banked
  1279  000D58  6F39               	movwf	57,b	;volatile
  1280                           
  1281                           ;init.c: 30: ANSELC = 0;
  1282  000D5A  0E00               	movlw	0
  1283  000D5C  010F               	movlb	15	; () banked
  1284  000D5E  6F3A               	movwf	58,b	;volatile
  1285                           
  1286                           ; BSR set to: 15
  1287  000D60  0012               	return		;funcret
  1288  000D62                     __end_of_InitAnsel:
  1289                           	opt stack 0
  1290                           tblptru	equ	0xFF8
  1291                           tblptrh	equ	0xFF7
  1292                           tblptrl	equ	0xFF6
  1293                           tablat	equ	0xFF5
  1294                           intcon	equ	0xFF2
  1295                           postinc0	equ	0xFEE
  1296                           wreg	equ	0xFE8
  1297                           postdec1	equ	0xFE5
  1298                           fsr1l	equ	0xFE1
  1299                           
  1300 ;; *************** function _Check_Detonators *****************
  1301 ;; Defined at:
  1302 ;;		line 25 in file "ignition.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;		None
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;		None
  1307 ;; Return value:  Size  Location     Type
  1308 ;;		None               void
  1309 ;; Registers used:
  1310 ;;		None
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1
  1316 ;;      Params:         0       0       0
  1317 ;;      Locals:         0       0       0
  1318 ;;      Temps:          0       0       0
  1319 ;;      Totals:         0       0       0
  1320 ;;Total ram usage:        0 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    2
  1323 ;; This function calls:
  1324 ;;		Nothing
  1325 ;; This function is called by:
  1326 ;;		_main
  1327 ;; This function uses a non-reentrant model
  1328 ;;
  1329                           
  1330                           	psect	text9
  1331  000DA6                     __ptext9:
  1332                           	opt stack 0
  1333  000DA6                     _Check_Detonators:
  1334                           	opt stack 28
  1335                           
  1336                           ; BSR set to: 15
  1337                           ;incstack = 0
  1338  000DA6  0012               	return		;funcret
  1339  000DA8                     __end_of_Check_Detonators:
  1340                           	opt stack 0
  1341                           tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           intcon	equ	0xFF2
  1346                           postinc0	equ	0xFEE
  1347                           wreg	equ	0xFE8
  1348                           postdec1	equ	0xFE5
  1349                           fsr1l	equ	0xFE1
  1350                           
  1351 ;; *************** function _Check_Buttons *****************
  1352 ;; Defined at:
  1353 ;;		line 3 in file "buttonchanges.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;		None               void
  1360 ;; Registers used:
  1361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1
  1367 ;;      Params:         0       0       0
  1368 ;;      Locals:         0       0       0
  1369 ;;      Temps:          0       2       0
  1370 ;;      Totals:         0       2       0
  1371 ;;Total ram usage:        2 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    6
  1374 ;; This function calls:
  1375 ;;		_Delay_Routine
  1376 ;;		_Read_Data
  1377 ;;		_Save_Data
  1378 ;;		_Set_Display
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text10
  1385  000248                     __ptext10:
  1386                           	opt stack 0
  1387  000248                     _Check_Buttons:
  1388                           	opt stack 24
  1389                           
  1390                           ;buttonchanges.c: 4: if(PORTCbits.RC1 == 1) {
  1391                           
  1392                           ;incstack = 0
  1393  000248  A282               	btfss	3970,1,c	;volatile
  1394  00024A  D008               	goto	l82
  1395                           
  1396                           ;buttonchanges.c: 5: Delay_Routine(3);
  1397  00024C  0E03               	movlw	3
  1398  00024E  EC86  F006         	call	_Delay_Routine
  1399                           
  1400                           ;buttonchanges.c: 6: if(PORTCbits.RC1 == 1) {
  1401  000252  A282               	btfss	3970,1,c	;volatile
  1402  000254  0012               	return	
  1403                           
  1404                           ;buttonchanges.c: 7: ignite_ready = 1;
  1405  000256  8042               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1406                           
  1407                           ;buttonchanges.c: 8: __nop();
  1408  000258  F000               	nop	
  1409                           
  1410                           ;buttonchanges.c: 12: }
  1411                           ;buttonchanges.c: 13: } else if(PORTBbits.RB2 == 1) {
  1412                           
  1413                           ;buttonchanges.c: 9: return;
  1414  00025A  0012               	return	
  1415  00025C                     l82:
  1416  00025C  A481               	btfss	3969,2,c	;volatile
  1417  00025E  D052               	goto	l86
  1418                           
  1419                           ;buttonchanges.c: 14: Delay_Routine(3);
  1420  000260  0E03               	movlw	3
  1421  000262  EC86  F006         	call	_Delay_Routine
  1422                           
  1423                           ;buttonchanges.c: 15: if(PORTBbits.RB2 == 1) {
  1424  000266  A481               	btfss	3969,2,c	;volatile
  1425  000268  0012               	return	
  1426                           
  1427                           ;buttonchanges.c: 16: pin[pin_selected].time++;
  1428  00026A  5035               	movf	_pin_selected,w,c
  1429  00026C  0D06               	mullw	6
  1430  00026E  0E04               	movlw	4
  1431  000270  26F3               	addwf	prodl,f,c
  1432  000272  0E00               	movlw	0
  1433  000274  22F4               	addwfc	prodh,f,c
  1434  000276  0E00               	movlw	low _pin
  1435  000278  24F3               	addwf	prodl,w,c
  1436  00027A  6ED9               	movwf	fsr2l,c
  1437  00027C  0E01               	movlw	high _pin
  1438  00027E  20F4               	addwfc	prodh,w,c
  1439  000280  6EDA               	movwf	fsr2h,c
  1440  000282  2ADE               	incf	postinc2,f,c
  1441  000284  0E00               	movlw	0
  1442  000286  22DD               	addwfc	postdec2,f,c
  1443                           
  1444                           ;buttonchanges.c: 17: if(pin[pin_selected].time > 999) {
  1445  000288  5035               	movf	_pin_selected,w,c
  1446  00028A  0D06               	mullw	6
  1447  00028C  0E04               	movlw	4
  1448  00028E  26F3               	addwf	prodl,f,c
  1449  000290  0E00               	movlw	0
  1450  000292  22F4               	addwfc	prodh,f,c
  1451  000294  0E00               	movlw	low _pin
  1452  000296  24F3               	addwf	prodl,w,c
  1453  000298  6ED9               	movwf	fsr2l,c
  1454  00029A  0E01               	movlw	high _pin
  1455  00029C  20F4               	addwfc	prodh,w,c
  1456  00029E  6EDA               	movwf	fsr2h,c
  1457  0002A0  0E01               	movlw	1
  1458  0002A2  BEDB               	btfsc	plusw2,7,c
  1459  0002A4  D016               	goto	l2110
  1460  0002A6  0EE8               	movlw	232
  1461  0002A8  5CDE               	subwf	postinc2,w,c
  1462  0002AA  0E03               	movlw	3
  1463  0002AC  58DE               	subwfb	postinc2,w,c
  1464  0002AE  A0D8               	btfss	status,0,c
  1465  0002B0  D010               	goto	l2110
  1466                           
  1467                           ;buttonchanges.c: 18: pin[pin_selected].time = 0;
  1468  0002B2  5035               	movf	_pin_selected,w,c
  1469  0002B4  0D06               	mullw	6
  1470  0002B6  0E04               	movlw	4
  1471  0002B8  26F3               	addwf	prodl,f,c
  1472  0002BA  0E00               	movlw	0
  1473  0002BC  22F4               	addwfc	prodh,f,c
  1474  0002BE  0E00               	movlw	low _pin
  1475  0002C0  24F3               	addwf	prodl,w,c
  1476  0002C2  6ED9               	movwf	fsr2l,c
  1477  0002C4  0E01               	movlw	high _pin
  1478  0002C6  20F4               	addwfc	prodh,w,c
  1479  0002C8  6EDA               	movwf	fsr2h,c
  1480  0002CA  0E00               	movlw	0
  1481  0002CC  6EDE               	movwf	postinc2,c
  1482  0002CE  0E00               	movlw	0
  1483  0002D0  6EDD               	movwf	postdec2,c
  1484  0002D2                     l2110:
  1485                           
  1486                           ;buttonchanges.c: 19: }
  1487                           ;buttonchanges.c: 20: __nop();
  1488  0002D2  F000               	nop	
  1489                           
  1490                           ;buttonchanges.c: 21: Set_Display('7', '-', pin[pin_selected].time);
  1491  0002D4  0E2D               	movlw	45
  1492  0002D6  0100               	movlb	0	; () banked
  1493  0002D8  6F60               	movwf	Set_Display@information& (0+255),b
  1494  0002DA  5035               	movf	_pin_selected,w,c
  1495  0002DC  0D06               	mullw	6
  1496  0002DE  0E04               	movlw	4
  1497  0002E0  26F3               	addwf	prodl,f,c
  1498  0002E2  0E00               	movlw	0
  1499  0002E4  22F4               	addwfc	prodh,f,c
  1500  0002E6  0E00               	movlw	low _pin
  1501  0002E8  24F3               	addwf	prodl,w,c
  1502  0002EA  6ED9               	movwf	fsr2l,c
  1503  0002EC  0E01               	movlw	high _pin
  1504  0002EE  20F4               	addwfc	prodh,w,c
  1505  0002F0  6EDA               	movwf	fsr2h,c
  1506  0002F2  CFDE F061          	movff	postinc2,Set_Display@value
  1507  0002F6  CFDD F062          	movff	postdec2,Set_Display@value+1
  1508  0002FA  0E37               	movlw	55
  1509  0002FC  EC7B  F005         	call	_Set_Display
  1510                           
  1511                           ;buttonchanges.c: 22: __nop();
  1512  000300  F000               	nop	
  1513                           
  1514                           ;buttonchanges.c: 23: }
  1515                           ;buttonchanges.c: 24: } else if(PORTBbits.RB3 == 1) {
  1516  000302  0012               	return	
  1517  000304                     l86:
  1518  000304  A681               	btfss	3969,3,c	;volatile
  1519  000306  D04C               	goto	l90
  1520                           
  1521                           ;buttonchanges.c: 25: Delay_Routine(3);
  1522  000308  0E03               	movlw	3
  1523  00030A  EC86  F006         	call	_Delay_Routine
  1524                           
  1525                           ;buttonchanges.c: 26: if(PORTBbits.RB3 == 1) {
  1526  00030E  A681               	btfss	3969,3,c	;volatile
  1527  000310  0012               	return	
  1528                           
  1529                           ;buttonchanges.c: 27: pin[pin_selected].time--;
  1530  000312  5035               	movf	_pin_selected,w,c
  1531  000314  0D06               	mullw	6
  1532  000316  0E04               	movlw	4
  1533  000318  26F3               	addwf	prodl,f,c
  1534  00031A  0E00               	movlw	0
  1535  00031C  22F4               	addwfc	prodh,f,c
  1536  00031E  0E00               	movlw	low _pin
  1537  000320  24F3               	addwf	prodl,w,c
  1538  000322  6ED9               	movwf	fsr2l,c
  1539  000324  0E01               	movlw	high _pin
  1540  000326  20F4               	addwfc	prodh,w,c
  1541  000328  6EDA               	movwf	fsr2h,c
  1542  00032A  06DE               	decf	postinc2,f,c
  1543  00032C  0E00               	movlw	0
  1544  00032E  5ADD               	subwfb	postdec2,f,c
  1545                           
  1546                           ;buttonchanges.c: 28: if(pin[pin_selected].time < 0) {
  1547  000330  5035               	movf	_pin_selected,w,c
  1548  000332  0D06               	mullw	6
  1549  000334  0E04               	movlw	4
  1550  000336  26F3               	addwf	prodl,f,c
  1551  000338  0E00               	movlw	0
  1552  00033A  22F4               	addwfc	prodh,f,c
  1553  00033C  0E00               	movlw	low _pin
  1554  00033E  24F3               	addwf	prodl,w,c
  1555  000340  6ED9               	movwf	fsr2l,c
  1556  000342  0E01               	movlw	high _pin
  1557  000344  20F4               	addwfc	prodh,w,c
  1558  000346  6EDA               	movwf	fsr2h,c
  1559  000348  0E01               	movlw	1
  1560  00034A  AEDB               	btfss	plusw2,7,c
  1561  00034C  D010               	goto	l2124
  1562                           
  1563                           ;buttonchanges.c: 29: pin[pin_selected].time = 999;
  1564  00034E  5035               	movf	_pin_selected,w,c
  1565  000350  0D06               	mullw	6
  1566  000352  0E04               	movlw	4
  1567  000354  26F3               	addwf	prodl,f,c
  1568  000356  0E00               	movlw	0
  1569  000358  22F4               	addwfc	prodh,f,c
  1570  00035A  0E00               	movlw	low _pin
  1571  00035C  24F3               	addwf	prodl,w,c
  1572  00035E  6ED9               	movwf	fsr2l,c
  1573  000360  0E01               	movlw	high _pin
  1574  000362  20F4               	addwfc	prodh,w,c
  1575  000364  6EDA               	movwf	fsr2h,c
  1576  000366  0EE7               	movlw	231
  1577  000368  6EDE               	movwf	postinc2,c
  1578  00036A  0E03               	movlw	3
  1579  00036C  6EDD               	movwf	postdec2,c
  1580  00036E                     l2124:
  1581                           
  1582                           ;buttonchanges.c: 30: }
  1583                           ;buttonchanges.c: 31: __nop();
  1584  00036E  F000               	nop	
  1585                           
  1586                           ;buttonchanges.c: 32: Set_Display('7', '-', pin[pin_selected].time);
  1587  000370  0E2D               	movlw	45
  1588  000372  0100               	movlb	0	; () banked
  1589  000374  6F60               	movwf	Set_Display@information& (0+255),b
  1590  000376  5035               	movf	_pin_selected,w,c
  1591  000378  0D06               	mullw	6
  1592  00037A  0E04               	movlw	4
  1593  00037C  26F3               	addwf	prodl,f,c
  1594  00037E  0E00               	movlw	0
  1595  000380  22F4               	addwfc	prodh,f,c
  1596  000382  0E00               	movlw	low _pin
  1597  000384  24F3               	addwf	prodl,w,c
  1598  000386  6ED9               	movwf	fsr2l,c
  1599  000388  0E01               	movlw	high _pin
  1600  00038A  20F4               	addwfc	prodh,w,c
  1601  00038C  6EDA               	movwf	fsr2h,c
  1602  00038E  CFDE F061          	movff	postinc2,Set_Display@value
  1603  000392  CFDD F062          	movff	postdec2,Set_Display@value+1
  1604  000396  0E37               	movlw	55
  1605  000398  EC7B  F005         	call	_Set_Display
  1606                           
  1607                           ;buttonchanges.c: 33: __nop();
  1608  00039C  F000               	nop	
  1609                           
  1610                           ;buttonchanges.c: 34: }
  1611                           ;buttonchanges.c: 35: } else if(PORTBbits.RB4 == 1) {
  1612  00039E  0012               	return	
  1613  0003A0                     l90:
  1614  0003A0  A881               	btfss	3969,4,c	;volatile
  1615  0003A2  D053               	goto	l94
  1616                           
  1617                           ;buttonchanges.c: 36: Delay_Routine(3);
  1618  0003A4  0E03               	movlw	3
  1619  0003A6  EC86  F006         	call	_Delay_Routine
  1620                           
  1621                           ;buttonchanges.c: 37: if(PORTBbits.RB4 == 1) {
  1622  0003AA  A881               	btfss	3969,4,c	;volatile
  1623  0003AC  0012               	return	
  1624                           
  1625                           ;buttonchanges.c: 38: pin[pin_selected].time += 10;
  1626  0003AE  5035               	movf	_pin_selected,w,c
  1627  0003B0  0D06               	mullw	6
  1628  0003B2  0E04               	movlw	4
  1629  0003B4  26F3               	addwf	prodl,f,c
  1630  0003B6  0E00               	movlw	0
  1631  0003B8  22F4               	addwfc	prodh,f,c
  1632  0003BA  0E00               	movlw	low _pin
  1633  0003BC  24F3               	addwf	prodl,w,c
  1634  0003BE  6ED9               	movwf	fsr2l,c
  1635  0003C0  0E01               	movlw	high _pin
  1636  0003C2  20F4               	addwfc	prodh,w,c
  1637  0003C4  6EDA               	movwf	fsr2h,c
  1638  0003C6  0E0A               	movlw	10
  1639  0003C8  26DE               	addwf	postinc2,f,c
  1640  0003CA  0E00               	movlw	0
  1641  0003CC  22DD               	addwfc	postdec2,f,c
  1642                           
  1643                           ;buttonchanges.c: 39: if(pin[pin_selected].time > 999) {
  1644  0003CE  5035               	movf	_pin_selected,w,c
  1645  0003D0  0D06               	mullw	6
  1646  0003D2  0E04               	movlw	4
  1647  0003D4  26F3               	addwf	prodl,f,c
  1648  0003D6  0E00               	movlw	0
  1649  0003D8  22F4               	addwfc	prodh,f,c
  1650  0003DA  0E00               	movlw	low _pin
  1651  0003DC  24F3               	addwf	prodl,w,c
  1652  0003DE  6ED9               	movwf	fsr2l,c
  1653  0003E0  0E01               	movlw	high _pin
  1654  0003E2  20F4               	addwfc	prodh,w,c
  1655  0003E4  6EDA               	movwf	fsr2h,c
  1656  0003E6  0E01               	movlw	1
  1657  0003E8  BEDB               	btfsc	plusw2,7,c
  1658  0003EA  D016               	goto	l2138
  1659  0003EC  0EE8               	movlw	232
  1660  0003EE  5CDE               	subwf	postinc2,w,c
  1661  0003F0  0E03               	movlw	3
  1662  0003F2  58DE               	subwfb	postinc2,w,c
  1663  0003F4  A0D8               	btfss	status,0,c
  1664  0003F6  D010               	goto	l2138
  1665                           
  1666                           ;buttonchanges.c: 40: pin[pin_selected].time = 0;
  1667  0003F8  5035               	movf	_pin_selected,w,c
  1668  0003FA  0D06               	mullw	6
  1669  0003FC  0E04               	movlw	4
  1670  0003FE  26F3               	addwf	prodl,f,c
  1671  000400  0E00               	movlw	0
  1672  000402  22F4               	addwfc	prodh,f,c
  1673  000404  0E00               	movlw	low _pin
  1674  000406  24F3               	addwf	prodl,w,c
  1675  000408  6ED9               	movwf	fsr2l,c
  1676  00040A  0E01               	movlw	high _pin
  1677  00040C  20F4               	addwfc	prodh,w,c
  1678  00040E  6EDA               	movwf	fsr2h,c
  1679  000410  0E00               	movlw	0
  1680  000412  6EDE               	movwf	postinc2,c
  1681  000414  0E00               	movlw	0
  1682  000416  6EDD               	movwf	postdec2,c
  1683  000418                     l2138:
  1684                           
  1685                           ;buttonchanges.c: 41: }
  1686                           ;buttonchanges.c: 42: __nop();
  1687  000418  F000               	nop	
  1688                           
  1689                           ;buttonchanges.c: 43: Set_Display('7', '-', pin[pin_selected].time);
  1690  00041A  0E2D               	movlw	45
  1691  00041C  0100               	movlb	0	; () banked
  1692  00041E  6F60               	movwf	Set_Display@information& (0+255),b
  1693  000420  5035               	movf	_pin_selected,w,c
  1694  000422  0D06               	mullw	6
  1695  000424  0E04               	movlw	4
  1696  000426  26F3               	addwf	prodl,f,c
  1697  000428  0E00               	movlw	0
  1698  00042A  22F4               	addwfc	prodh,f,c
  1699  00042C  0E00               	movlw	low _pin
  1700  00042E  24F3               	addwf	prodl,w,c
  1701  000430  6ED9               	movwf	fsr2l,c
  1702  000432  0E01               	movlw	high _pin
  1703  000434  20F4               	addwfc	prodh,w,c
  1704  000436  6EDA               	movwf	fsr2h,c
  1705  000438  CFDE F061          	movff	postinc2,Set_Display@value
  1706  00043C  CFDD F062          	movff	postdec2,Set_Display@value+1
  1707  000440  0E37               	movlw	55
  1708  000442  EC7B  F005         	call	_Set_Display
  1709                           
  1710                           ;buttonchanges.c: 44: __nop();
  1711  000446  F000               	nop	
  1712                           
  1713                           ;buttonchanges.c: 45: }
  1714                           ;buttonchanges.c: 46: } else if(PORTBbits.RB1 == 1) {
  1715  000448  0012               	return	
  1716  00044A                     l94:
  1717  00044A  A281               	btfss	3969,1,c	;volatile
  1718  00044C  D0A0               	goto	l98
  1719                           
  1720                           ;buttonchanges.c: 47: Delay_Routine(3);
  1721  00044E  0E03               	movlw	3
  1722  000450  EC86  F006         	call	_Delay_Routine
  1723                           
  1724                           ;buttonchanges.c: 48: if(PORTBbits.RB1 == 1) {
  1725  000454  A281               	btfss	3969,1,c	;volatile
  1726  000456  0012               	return	
  1727                           
  1728                           ;buttonchanges.c: 49: if(PORTBbits.RB0 == 1) {
  1729  000458  A081               	btfss	3969,0,c	;volatile
  1730  00045A  D005               	goto	l2156
  1731                           
  1732                           ;buttonchanges.c: 50: Delay_Routine(3);
  1733  00045C  0E03               	movlw	3
  1734  00045E  EC86  F006         	call	_Delay_Routine
  1735                           
  1736                           ;buttonchanges.c: 51: if(PORTBbits.RB0 == 1) {
  1737  000462  B081               	btfsc	3969,0,c	;volatile
  1738                           
  1739                           ;buttonchanges.c: 52: testflag = 1;
  1740  000464  8442               	bsf	_testflag/(0+8),_testflag& (0+7),c
  1741  000466                     l2156:
  1742                           
  1743                           ;buttonchanges.c: 53: }
  1744                           ;buttonchanges.c: 54: }
  1745                           ;buttonchanges.c: 55: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  1746  000466  5035               	movf	_pin_selected,w,c
  1747  000468  0D06               	mullw	6
  1748  00046A  0E04               	movlw	4
  1749  00046C  26F3               	addwf	prodl,f,c
  1750  00046E  0E00               	movlw	0
  1751  000470  22F4               	addwfc	prodh,f,c
  1752  000472  0E00               	movlw	low _pin
  1753  000474  24F3               	addwf	prodl,w,c
  1754  000476  6ED9               	movwf	fsr2l,c
  1755  000478  0E01               	movlw	high _pin
  1756  00047A  20F4               	addwfc	prodh,w,c
  1757  00047C  6EDA               	movwf	fsr2h,c
  1758  00047E  CFDE F01D          	movff	postinc2,Save_Data@store
  1759  000482  CFDD F01E          	movff	postdec2,Save_Data@store+1
  1760  000486  5035               	movf	_pin_selected,w,c
  1761  000488  0D06               	mullw	6
  1762  00048A  0E02               	movlw	2
  1763  00048C  26F3               	addwf	prodl,f,c
  1764  00048E  0E00               	movlw	0
  1765  000490  22F4               	addwfc	prodh,f,c
  1766  000492  0E00               	movlw	low _pin
  1767  000494  24F3               	addwf	prodl,w,c
  1768  000496  6ED9               	movwf	fsr2l,c
  1769  000498  0E01               	movlw	high _pin
  1770  00049A  20F4               	addwfc	prodh,w,c
  1771  00049C  6EDA               	movwf	fsr2h,c
  1772  00049E  50DF               	movf	indf2,w,c
  1773  0004A0  6E1F               	movwf	Save_Data@store_address,c
  1774  0004A2  ECA5  F005         	call	_Save_Data	;wreg free
  1775                           
  1776                           ;buttonchanges.c: 56: pin_selected++;
  1777  0004A6  2A35               	incf	_pin_selected,f,c
  1778                           
  1779                           ;buttonchanges.c: 57: switch (slave_selected) {
  1780  0004A8  D010               	goto	l2174
  1781  0004AA                     l2160:
  1782                           
  1783                           ;buttonchanges.c: 59: if(pin_selected > 9) {
  1784  0004AA  0E09               	movlw	9
  1785  0004AC  6435               	cpfsgt	_pin_selected,c
  1786  0004AE  D017               	goto	l2176
  1787                           
  1788                           ;buttonchanges.c: 60: pin_selected = 0;
  1789  0004B0  0E00               	movlw	0
  1790  0004B2  D009               	goto	L2
  1791  0004B4                     l2164:
  1792                           
  1793                           ;buttonchanges.c: 64: if(pin_selected > 19) {
  1794  0004B4  0E13               	movlw	19
  1795  0004B6  6435               	cpfsgt	_pin_selected,c
  1796  0004B8  D012               	goto	l2176
  1797                           
  1798                           ;buttonchanges.c: 65: pin_selected = 10;
  1799  0004BA  0E0A               	movlw	10
  1800  0004BC  D004               	goto	L2
  1801  0004BE                     l2168:
  1802                           
  1803                           ;buttonchanges.c: 69: if(pin_selected > 29) {
  1804  0004BE  0E1D               	movlw	29
  1805  0004C0  6435               	cpfsgt	_pin_selected,c
  1806  0004C2  D00D               	goto	l2176
  1807                           
  1808                           ;buttonchanges.c: 70: pin_selected = 20;
  1809  0004C4  0E14               	movlw	20
  1810  0004C6                     L2:
  1811  0004C6  6E35               	movwf	_pin_selected,c
  1812                           
  1813                           ;buttonchanges.c: 73: }
  1814                           
  1815                           ;buttonchanges.c: 71: }
  1816                           ;buttonchanges.c: 72: break;
  1817  0004C8  D00A               	goto	l2176
  1818  0004CA                     l2174:
  1819  0004CA  5037               	movf	_slave_selected,w,c
  1820                           
  1821                           ; Switch size 1, requested type "space"
  1822                           ; Number of cases is 3, Range of values is 0 to 2
  1823                           ; switch strategies available:
  1824                           ; Name         Instructions Cycles
  1825                           ; simple_byte           10     6 (average)
  1826                           ;	Chosen strategy is simple_byte
  1827  0004CC  0A00               	xorlw	0	; case 0
  1828  0004CE  B4D8               	btfsc	status,2,c
  1829  0004D0  D7EC               	goto	l2160
  1830  0004D2  0A01               	xorlw	1	; case 1
  1831  0004D4  B4D8               	btfsc	status,2,c
  1832  0004D6  D7EE               	goto	l2164
  1833  0004D8  0A03               	xorlw	3	; case 2
  1834  0004DA  B4D8               	btfsc	status,2,c
  1835  0004DC  D7F0               	goto	l2168
  1836  0004DE                     l2176:
  1837                           
  1838                           ;buttonchanges.c: 74: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  1839  0004DE  5035               	movf	_pin_selected,w,c
  1840  0004E0  0D06               	mullw	6
  1841  0004E2  0E02               	movlw	2
  1842  0004E4  26F3               	addwf	prodl,f,c
  1843  0004E6  0E00               	movlw	0
  1844  0004E8  22F4               	addwfc	prodh,f,c
  1845  0004EA  0E00               	movlw	low _pin
  1846  0004EC  24F3               	addwf	prodl,w,c
  1847  0004EE  6ED9               	movwf	fsr2l,c
  1848  0004F0  0E01               	movlw	high _pin
  1849  0004F2  20F4               	addwfc	prodh,w,c
  1850  0004F4  6EDA               	movwf	fsr2h,c
  1851  0004F6  50DF               	movf	indf2,w,c
  1852  0004F8  EC0E  F006         	call	_Read_Data
  1853  0004FC  5035               	movf	_pin_selected,w,c
  1854  0004FE  0D06               	mullw	6
  1855  000500  0E04               	movlw	4
  1856  000502  26F3               	addwf	prodl,f,c
  1857  000504  0E00               	movlw	0
  1858  000506  22F4               	addwfc	prodh,f,c
  1859  000508  0E00               	movlw	low _pin
  1860  00050A  24F3               	addwf	prodl,w,c
  1861  00050C  6ED9               	movwf	fsr2l,c
  1862  00050E  0E01               	movlw	high _pin
  1863  000510  20F4               	addwfc	prodh,w,c
  1864  000512  6EDA               	movwf	fsr2h,c
  1865  000514  C01D  FFDE         	movff	?_Read_Data,postinc2
  1866  000518  C01E  FFDD         	movff	?_Read_Data+1,postdec2
  1867                           
  1868                           ;buttonchanges.c: 75: __nop();
  1869  00051C  F000               	nop	
  1870                           
  1871                           ;buttonchanges.c: 76: Set_Display('7', 'A', pin[pin_selected].output);
  1872  00051E  0E41               	movlw	65
  1873  000520  0100               	movlb	0	; () banked
  1874  000522  6F60               	movwf	Set_Display@information& (0+255),b
  1875  000524  5035               	movf	_pin_selected,w,c
  1876  000526  0D06               	mullw	6
  1877  000528  0E01               	movlw	1
  1878  00052A  26F3               	addwf	prodl,f,c
  1879  00052C  0E00               	movlw	0
  1880  00052E  22F4               	addwfc	prodh,f,c
  1881  000530  0E00               	movlw	low _pin
  1882  000532  24F3               	addwf	prodl,w,c
  1883  000534  6ED9               	movwf	fsr2l,c
  1884  000536  0E01               	movlw	high _pin
  1885  000538  20F4               	addwfc	prodh,w,c
  1886  00053A  6EDA               	movwf	fsr2h,c
  1887  00053C  50DF               	movf	indf2,w,c
  1888  00053E  0100               	movlb	0	; () banked
  1889  000540  6F63               	movwf	??_Check_Buttons& (0+255),b
  1890  000542  0100               	movlb	0	; () banked
  1891  000544  5163               	movf	??_Check_Buttons& (0+255),w,b
  1892  000546  0100               	movlb	0	; () banked
  1893  000548  6F61               	movwf	Set_Display@value& (0+255),b
  1894  00054A  6B62               	clrf	(Set_Display@value+1)& (0+255),b
  1895  00054C  0E37               	movlw	55
  1896  00054E  EC7B  F005         	call	_Set_Display
  1897                           
  1898                           ;buttonchanges.c: 77: Delay_Routine(30);
  1899  000552  0E1E               	movlw	30
  1900  000554  EC86  F006         	call	_Delay_Routine
  1901                           
  1902                           ;buttonchanges.c: 78: Set_Display('7', '-', pin[pin_selected].time);
  1903  000558  0E2D               	movlw	45
  1904  00055A  0100               	movlb	0	; () banked
  1905  00055C  6F60               	movwf	Set_Display@information& (0+255),b
  1906  00055E  5035               	movf	_pin_selected,w,c
  1907  000560  0D06               	mullw	6
  1908  000562  0E04               	movlw	4
  1909  000564  26F3               	addwf	prodl,f,c
  1910  000566  0E00               	movlw	0
  1911  000568  22F4               	addwfc	prodh,f,c
  1912  00056A  0E00               	movlw	low _pin
  1913  00056C  24F3               	addwf	prodl,w,c
  1914  00056E  6ED9               	movwf	fsr2l,c
  1915  000570  0E01               	movlw	high _pin
  1916  000572  20F4               	addwfc	prodh,w,c
  1917  000574  6EDA               	movwf	fsr2h,c
  1918  000576  CFDE F061          	movff	postinc2,Set_Display@value
  1919  00057A  CFDD F062          	movff	postdec2,Set_Display@value+1
  1920  00057E  0E37               	movlw	55
  1921  000580  EC7B  F005         	call	_Set_Display
  1922                           
  1923                           ;buttonchanges.c: 79: Delay_Routine(30);
  1924  000584  0E1E               	movlw	30
  1925  000586  EC86  F006         	call	_Delay_Routine
  1926                           
  1927                           ;buttonchanges.c: 80: __nop();
  1928  00058A  F000               	nop	
  1929                           
  1930                           ;buttonchanges.c: 81: }
  1931                           ;buttonchanges.c: 82: } else if(PORTBbits.RB0 == 1) {
  1932  00058C  0012               	return	
  1933  00058E                     l98:
  1934  00058E  A081               	btfss	3969,0,c	;volatile
  1935  000590  0012               	return	
  1936                           
  1937                           ;buttonchanges.c: 83: Delay_Routine(3);
  1938  000592  0E03               	movlw	3
  1939  000594  EC86  F006         	call	_Delay_Routine
  1940                           
  1941                           ;buttonchanges.c: 84: if(PORTBbits.RB0 == 1) {
  1942  000598  A081               	btfss	3969,0,c	;volatile
  1943  00059A  0012               	return	
  1944                           
  1945                           ;buttonchanges.c: 85: if(PORTBbits.RB1 == 1) {
  1946  00059C  A281               	btfss	3969,1,c	;volatile
  1947  00059E  D005               	goto	l2202
  1948                           
  1949                           ;buttonchanges.c: 86: Delay_Routine(3);
  1950  0005A0  0E03               	movlw	3
  1951  0005A2  EC86  F006         	call	_Delay_Routine
  1952                           
  1953                           ;buttonchanges.c: 87: if(PORTBbits.RB1 == 1) {
  1954  0005A6  B281               	btfsc	3969,1,c	;volatile
  1955                           
  1956                           ;buttonchanges.c: 88: testflag = 1;
  1957  0005A8  8442               	bsf	_testflag/(0+8),_testflag& (0+7),c
  1958  0005AA                     l2202:
  1959                           
  1960                           ;buttonchanges.c: 89: }
  1961                           ;buttonchanges.c: 90: }
  1962                           ;buttonchanges.c: 91: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  1963  0005AA  5035               	movf	_pin_selected,w,c
  1964  0005AC  0D06               	mullw	6
  1965  0005AE  0E04               	movlw	4
  1966  0005B0  26F3               	addwf	prodl,f,c
  1967  0005B2  0E00               	movlw	0
  1968  0005B4  22F4               	addwfc	prodh,f,c
  1969  0005B6  0E00               	movlw	low _pin
  1970  0005B8  24F3               	addwf	prodl,w,c
  1971  0005BA  6ED9               	movwf	fsr2l,c
  1972  0005BC  0E01               	movlw	high _pin
  1973  0005BE  20F4               	addwfc	prodh,w,c
  1974  0005C0  6EDA               	movwf	fsr2h,c
  1975  0005C2  CFDE F01D          	movff	postinc2,Save_Data@store
  1976  0005C6  CFDD F01E          	movff	postdec2,Save_Data@store+1
  1977  0005CA  5035               	movf	_pin_selected,w,c
  1978  0005CC  0D06               	mullw	6
  1979  0005CE  0E02               	movlw	2
  1980  0005D0  26F3               	addwf	prodl,f,c
  1981  0005D2  0E00               	movlw	0
  1982  0005D4  22F4               	addwfc	prodh,f,c
  1983  0005D6  0E00               	movlw	low _pin
  1984  0005D8  24F3               	addwf	prodl,w,c
  1985  0005DA  6ED9               	movwf	fsr2l,c
  1986  0005DC  0E01               	movlw	high _pin
  1987  0005DE  20F4               	addwfc	prodh,w,c
  1988  0005E0  6EDA               	movwf	fsr2h,c
  1989  0005E2  50DF               	movf	indf2,w,c
  1990  0005E4  6E1F               	movwf	Save_Data@store_address,c
  1991  0005E6  ECA5  F005         	call	_Save_Data	;wreg free
  1992                           
  1993                           ;buttonchanges.c: 92: slave_selected++;
  1994  0005EA  2A37               	incf	_slave_selected,f,c
  1995                           
  1996                           ;buttonchanges.c: 93: if(slave_selected > 2) {
  1997  0005EC  0E02               	movlw	2
  1998  0005EE  6437               	cpfsgt	_slave_selected,c
  1999  0005F0  D002               	goto	l2210
  2000                           
  2001                           ;buttonchanges.c: 94: slave_selected = 0;
  2002  0005F2  0E00               	movlw	0
  2003  0005F4  6E37               	movwf	_slave_selected,c
  2004  0005F6                     l2210:
  2005                           
  2006                           ;buttonchanges.c: 95: }
  2007                           ;buttonchanges.c: 96: pin_selected = slave_selected * 10;
  2008  0005F6  5037               	movf	_slave_selected,w,c
  2009  0005F8  0D0A               	mullw	10
  2010  0005FA  CFF3 F035          	movff	prodl,_pin_selected
  2011                           
  2012                           ;buttonchanges.c: 97: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2013  0005FE  5035               	movf	_pin_selected,w,c
  2014  000600  0D06               	mullw	6
  2015  000602  0E02               	movlw	2
  2016  000604  26F3               	addwf	prodl,f,c
  2017  000606  0E00               	movlw	0
  2018  000608  22F4               	addwfc	prodh,f,c
  2019  00060A  0E00               	movlw	low _pin
  2020  00060C  24F3               	addwf	prodl,w,c
  2021  00060E  6ED9               	movwf	fsr2l,c
  2022  000610  0E01               	movlw	high _pin
  2023  000612  20F4               	addwfc	prodh,w,c
  2024  000614  6EDA               	movwf	fsr2h,c
  2025  000616  50DF               	movf	indf2,w,c
  2026  000618  EC0E  F006         	call	_Read_Data
  2027  00061C  5035               	movf	_pin_selected,w,c
  2028  00061E  0D06               	mullw	6
  2029  000620  0E04               	movlw	4
  2030  000622  26F3               	addwf	prodl,f,c
  2031  000624  0E00               	movlw	0
  2032  000626  22F4               	addwfc	prodh,f,c
  2033  000628  0E00               	movlw	low _pin
  2034  00062A  24F3               	addwf	prodl,w,c
  2035  00062C  6ED9               	movwf	fsr2l,c
  2036  00062E  0E01               	movlw	high _pin
  2037  000630  20F4               	addwfc	prodh,w,c
  2038  000632  6EDA               	movwf	fsr2h,c
  2039  000634  C01D  FFDE         	movff	?_Read_Data,postinc2
  2040  000638  C01E  FFDD         	movff	?_Read_Data+1,postdec2
  2041                           
  2042                           ;buttonchanges.c: 98: __nop();
  2043  00063C  F000               	nop	
  2044                           
  2045                           ;buttonchanges.c: 99: Set_Display('7', 'E', pin[pin_selected].slave);
  2046  00063E  0E45               	movlw	69
  2047  000640  0100               	movlb	0	; () banked
  2048  000642  6F60               	movwf	Set_Display@information& (0+255),b
  2049  000644  5035               	movf	_pin_selected,w,c
  2050  000646  0D06               	mullw	6
  2051  000648  0E00               	movlw	low _pin
  2052  00064A  24F3               	addwf	prodl,w,c
  2053  00064C  6ED9               	movwf	fsr2l,c
  2054  00064E  0E01               	movlw	high _pin
  2055  000650  20F4               	addwfc	prodh,w,c
  2056  000652  6EDA               	movwf	fsr2h,c
  2057  000654  50DF               	movf	indf2,w,c
  2058  000656  0100               	movlb	0	; () banked
  2059  000658  6F63               	movwf	??_Check_Buttons& (0+255),b
  2060  00065A  0100               	movlb	0	; () banked
  2061  00065C  5163               	movf	??_Check_Buttons& (0+255),w,b
  2062  00065E  0100               	movlb	0	; () banked
  2063  000660  6F61               	movwf	Set_Display@value& (0+255),b
  2064  000662  6B62               	clrf	(Set_Display@value+1)& (0+255),b
  2065  000664  0E37               	movlw	55
  2066  000666  EC7B  F005         	call	_Set_Display
  2067                           
  2068                           ;buttonchanges.c: 101: Delay_Routine(30);
  2069  00066A  0E1E               	movlw	30
  2070  00066C  EC86  F006         	call	_Delay_Routine
  2071                           
  2072                           ;buttonchanges.c: 102: Set_Display('7', 'A', pin[pin_selected].output);
  2073  000670  0E41               	movlw	65
  2074  000672  0100               	movlb	0	; () banked
  2075  000674  6F60               	movwf	Set_Display@information& (0+255),b
  2076  000676  5035               	movf	_pin_selected,w,c
  2077  000678  0D06               	mullw	6
  2078  00067A  0E01               	movlw	1
  2079  00067C  26F3               	addwf	prodl,f,c
  2080  00067E  0E00               	movlw	0
  2081  000680  22F4               	addwfc	prodh,f,c
  2082  000682  0E00               	movlw	low _pin
  2083  000684  24F3               	addwf	prodl,w,c
  2084  000686  6ED9               	movwf	fsr2l,c
  2085  000688  0E01               	movlw	high _pin
  2086  00068A  20F4               	addwfc	prodh,w,c
  2087  00068C  6EDA               	movwf	fsr2h,c
  2088  00068E  50DF               	movf	indf2,w,c
  2089  000690  0100               	movlb	0	; () banked
  2090  000692  6F63               	movwf	??_Check_Buttons& (0+255),b
  2091  000694  0100               	movlb	0	; () banked
  2092  000696  5163               	movf	??_Check_Buttons& (0+255),w,b
  2093  000698  0100               	movlb	0	; () banked
  2094  00069A  6F61               	movwf	Set_Display@value& (0+255),b
  2095  00069C  6B62               	clrf	(Set_Display@value+1)& (0+255),b
  2096  00069E  0E37               	movlw	55
  2097  0006A0  EC7B  F005         	call	_Set_Display
  2098                           
  2099                           ;buttonchanges.c: 103: Delay_Routine(30);
  2100  0006A4  0E1E               	movlw	30
  2101  0006A6  EC86  F006         	call	_Delay_Routine
  2102                           
  2103                           ;buttonchanges.c: 104: Set_Display('7', '-', pin[pin_selected].time);
  2104  0006AA  0E2D               	movlw	45
  2105  0006AC  0100               	movlb	0	; () banked
  2106  0006AE  6F60               	movwf	Set_Display@information& (0+255),b
  2107  0006B0  5035               	movf	_pin_selected,w,c
  2108  0006B2  0D06               	mullw	6
  2109  0006B4  0E04               	movlw	4
  2110  0006B6  26F3               	addwf	prodl,f,c
  2111  0006B8  0E00               	movlw	0
  2112  0006BA  22F4               	addwfc	prodh,f,c
  2113  0006BC  0E00               	movlw	low _pin
  2114  0006BE  24F3               	addwf	prodl,w,c
  2115  0006C0  6ED9               	movwf	fsr2l,c
  2116  0006C2  0E01               	movlw	high _pin
  2117  0006C4  20F4               	addwfc	prodh,w,c
  2118  0006C6  6EDA               	movwf	fsr2h,c
  2119  0006C8  CFDE F061          	movff	postinc2,Set_Display@value
  2120  0006CC  CFDD F062          	movff	postdec2,Set_Display@value+1
  2121  0006D0  0E37               	movlw	55
  2122  0006D2  EC7B  F005         	call	_Set_Display
  2123                           
  2124                           ;buttonchanges.c: 105: Delay_Routine(30);
  2125  0006D6  0E1E               	movlw	30
  2126  0006D8  EC86  F006         	call	_Delay_Routine
  2127                           
  2128                           ;buttonchanges.c: 106: __nop();
  2129  0006DC  F000               	nop	
  2130  0006DE  0012               	return	
  2131  0006E0                     __end_of_Check_Buttons:
  2132                           	opt stack 0
  2133                           tblptru	equ	0xFF8
  2134                           tblptrh	equ	0xFF7
  2135                           tblptrl	equ	0xFF6
  2136                           tablat	equ	0xFF5
  2137                           prodh	equ	0xFF4
  2138                           prodl	equ	0xFF3
  2139                           intcon	equ	0xFF2
  2140                           postinc0	equ	0xFEE
  2141                           wreg	equ	0xFE8
  2142                           postdec1	equ	0xFE5
  2143                           fsr1l	equ	0xFE1
  2144                           indf2	equ	0xFDF
  2145                           postinc2	equ	0xFDE
  2146                           postdec2	equ	0xFDD
  2147                           plusw2	equ	0xFDB
  2148                           fsr2h	equ	0xFDA
  2149                           fsr2l	equ	0xFD9
  2150                           status	equ	0xFD8
  2151                           
  2152 ;; *************** function _Set_Display *****************
  2153 ;; Defined at:
  2154 ;;		line 126 in file "display.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  type            1    wreg     unsigned char 
  2157 ;;  information     1    0[BANK0 ] unsigned char 
  2158 ;;  value           2    1[BANK0 ] unsigned int 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  type            1   42[COMRAM] unsigned char 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;		None               void
  2163 ;; Registers used:
  2164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1
  2170 ;;      Params:         0       3       0
  2171 ;;      Locals:         1       0       0
  2172 ;;      Temps:          0       0       0
  2173 ;;      Totals:         1       3       0
  2174 ;;Total ram usage:        4 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    5
  2177 ;; This function calls:
  2178 ;;		_Evaluate_Display
  2179 ;;		_Evaluate_Signs
  2180 ;;		_Write_Display_Byte
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;;		_Check_Buttons
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text11
  2188  000AF6                     __ptext11:
  2189                           	opt stack 0
  2190  000AF6                     _Set_Display:
  2191                           	opt stack 25
  2192                           
  2193                           ;incstack = 0
  2194                           ;Set_Display@type stored from wreg
  2195  000AF6  6E2B               	movwf	Set_Display@type,c
  2196                           
  2197                           ;display.c: 128: switch (type) {
  2198  000AF8  D01C               	goto	l2090
  2199  000AFA                     l2074:
  2200                           
  2201                           ;display.c: 130: if(information != '-') {
  2202  000AFA  0E2D               	movlw	45
  2203  000AFC  0100               	movlb	0	; () banked
  2204  000AFE  1960               	xorwf	Set_Display@information& (0+255),w,b
  2205  000B00  B4D8               	btfsc	status,2,c
  2206  000B02  D010               	goto	l2086
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;display.c: 131: signs[0] = value;
  2210  000B04  C061  F03F         	movff	Set_Display@value,_signs
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;display.c: 132: signs[0] += 0x30;
  2214  000B08  0E30               	movlw	48
  2215  000B0A  263F               	addwf	_signs,f,c
  2216                           
  2217                           ; BSR set to: 0
  2218                           ;display.c: 133: signs[1] = '-';
  2219  000B0C  0E2D               	movlw	45
  2220  000B0E  6E40               	movwf	_signs+1,c
  2221                           
  2222                           ; BSR set to: 0
  2223                           ;display.c: 134: signs[2] = information;
  2224  000B10  C060  F041         	movff	Set_Display@information,_signs+2
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;display.c: 135: Evaluate_Display(sizeof(signs), signs);
  2228  000B14  0E3F               	movlw	low _signs
  2229  000B16  6E25               	movwf	Evaluate_Display@evaluate,c
  2230  000B18  0E00               	movlw	high _signs
  2231  000B1A  6E26               	movwf	Evaluate_Display@evaluate+1,c
  2232  000B1C  0E03               	movlw	3
  2233  000B1E  EC70  F003         	call	_Evaluate_Display
  2234                           
  2235                           ;display.c: 136: } else {
  2236  000B22  D00C               	goto	l2092
  2237  000B24                     l2086:
  2238                           
  2239                           ;display.c: 137: Evaluate_Signs(value);
  2240  000B24  C061  F028         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  2241  000B28  C062  F029         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  2242  000B2C  EC49  F005         	call	_Evaluate_Signs	;wreg free
  2243                           
  2244                           ;display.c: 143: }
  2245                           
  2246                           ;display.c: 142: break;
  2247                           
  2248                           ;display.c: 140: case 'L':
  2249                           
  2250                           ;display.c: 138: }
  2251                           ;display.c: 139: break;
  2252  000B30  D005               	goto	l2092
  2253  000B32                     l2090:
  2254  000B32  502B               	movf	Set_Display@type,w,c
  2255                           
  2256                           ; Switch size 1, requested type "space"
  2257                           ; Number of cases is 2, Range of values is 55 to 76
  2258                           ; switch strategies available:
  2259                           ; Name         Instructions Cycles
  2260                           ; simple_byte            7     4 (average)
  2261                           ;	Chosen strategy is simple_byte
  2262  000B34  0A37               	xorlw	55	; case 55
  2263  000B36  B4D8               	btfsc	status,2,c
  2264  000B38  D7E0               	goto	l2074
  2265  000B3A  0A7B               	xorlw	123	; case 76
  2266  000B3C                     l2092:
  2267                           
  2268                           ;display.c: 144: Write_Display_Byte(pixels);
  2269  000B3C  0E38               	movlw	low _pixels
  2270  000B3E  6E1D               	movwf	Write_Display_Byte@write_data,c
  2271  000B40  0E00               	movlw	high _pixels
  2272  000B42  6E1E               	movwf	Write_Display_Byte@write_data+1,c
  2273  000B44  ECEE  F005         	call	_Write_Display_Byte	;wreg free
  2274  000B48  0012               	return		;funcret
  2275  000B4A                     __end_of_Set_Display:
  2276                           	opt stack 0
  2277                           tblptru	equ	0xFF8
  2278                           tblptrh	equ	0xFF7
  2279                           tblptrl	equ	0xFF6
  2280                           tablat	equ	0xFF5
  2281                           prodh	equ	0xFF4
  2282                           prodl	equ	0xFF3
  2283                           intcon	equ	0xFF2
  2284                           postinc0	equ	0xFEE
  2285                           wreg	equ	0xFE8
  2286                           postdec1	equ	0xFE5
  2287                           fsr1l	equ	0xFE1
  2288                           indf2	equ	0xFDF
  2289                           postinc2	equ	0xFDE
  2290                           postdec2	equ	0xFDD
  2291                           plusw2	equ	0xFDB
  2292                           fsr2h	equ	0xFDA
  2293                           fsr2l	equ	0xFD9
  2294                           status	equ	0xFD8
  2295                           
  2296 ;; *************** function _Write_Display_Byte *****************
  2297 ;; Defined at:
  2298 ;;		line 40 in file "communication.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  write_data      2   28[COMRAM] PTR unsigned char 
  2301 ;;		 -> pixels(7), 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  counter         1   34[COMRAM] unsigned char 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;		None               void
  2306 ;; Registers used:
  2307 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1
  2313 ;;      Params:         2       0       0
  2314 ;;      Locals:         1       0       0
  2315 ;;      Temps:          4       0       0
  2316 ;;      Totals:         7       0       0
  2317 ;;Total ram usage:        7 bytes
  2318 ;; Hardware stack levels used:    1
  2319 ;; Hardware stack levels required when called:    2
  2320 ;; This function calls:
  2321 ;;		Nothing
  2322 ;; This function is called by:
  2323 ;;		_Set_Display
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           
  2327                           	psect	text12
  2328  000BDC                     __ptext12:
  2329                           	opt stack 0
  2330  000BDC                     _Write_Display_Byte:
  2331                           	opt stack 27
  2332                           
  2333                           ;communication.c: 41: for(unsigned char counter = sizeof(pixels); counter > 0;
  2334                           
  2335                           ;incstack = 0
  2336  000BDC  0E07               	movlw	7
  2337  000BDE  6E23               	movwf	Write_Display_Byte@counter,c
  2338  000BE0                     
  2339                           ;communication.c: 42: counter--) {
  2340  000BE0  5023               	movf	Write_Display_Byte@counter,w,c
  2341  000BE2  B4D8               	btfsc	status,2,c
  2342  000BE4  0012               	return	
  2343                           
  2344                           ;communication.c: 43: if(SSP1IF = 1) {
  2345  000BE6  869E               	bsf	3998,3,c	;volatile
  2346  000BE8  B69E               	btfsc	3998,3,c	;volatile
  2347                           
  2348                           ;communication.c: 44: SSP1IF = 0;
  2349  000BEA  969E               	bcf	3998,3,c	;volatile
  2350                           
  2351                           ;communication.c: 45: }
  2352                           ;communication.c: 46: SSP1BUF = write_data[counter - 1];
  2353  000BEC  0EFF               	movlw	255
  2354  000BEE  6E1F               	movwf	??_Write_Display_Byte& (0+255),c
  2355  000BF0  0EFF               	movlw	255
  2356  000BF2  6E20               	movwf	(??_Write_Display_Byte+1)& (0+255),c
  2357  000BF4  5023               	movf	Write_Display_Byte@counter,w,c
  2358  000BF6  6E21               	movwf	(??_Write_Display_Byte+2)& (0+255),c
  2359  000BF8  6A22               	clrf	(??_Write_Display_Byte+3)& (0+255),c
  2360  000BFA  501F               	movf	??_Write_Display_Byte,w,c
  2361  000BFC  2621               	addwf	??_Write_Display_Byte+2,f,c
  2362  000BFE  5020               	movf	??_Write_Display_Byte+1,w,c
  2363  000C00  2222               	addwfc	??_Write_Display_Byte+3,f,c
  2364  000C02  5021               	movf	??_Write_Display_Byte+2,w,c
  2365  000C04  241D               	addwf	Write_Display_Byte@write_data,w,c
  2366  000C06  6ED9               	movwf	fsr2l,c
  2367  000C08  5022               	movf	??_Write_Display_Byte+3,w,c
  2368  000C0A  201E               	addwfc	Write_Display_Byte@write_data+1,w,c
  2369  000C0C  6EDA               	movwf	fsr2h,c
  2370  000C0E  50DF               	movf	indf2,w,c
  2371  000C10  6EC9               	movwf	4041,c	;volatile
  2372  000C12                     l452:
  2373  000C12  A69E               	btfss	3998,3,c	;volatile
  2374  000C14  D7FE               	goto	l452
  2375                           
  2376                           ;communication.c: 48: SSP1IF = 0;
  2377  000C16  969E               	bcf	3998,3,c	;volatile
  2378  000C18  0623               	decf	Write_Display_Byte@counter,f,c
  2379  000C1A  D7E2               	goto	L3
  2380  000C1C                     __end_of_Write_Display_Byte:
  2381                           	opt stack 0
  2382                           tblptru	equ	0xFF8
  2383                           tblptrh	equ	0xFF7
  2384                           tblptrl	equ	0xFF6
  2385                           tablat	equ	0xFF5
  2386                           prodh	equ	0xFF4
  2387                           prodl	equ	0xFF3
  2388                           intcon	equ	0xFF2
  2389                           postinc0	equ	0xFEE
  2390                           wreg	equ	0xFE8
  2391                           postdec1	equ	0xFE5
  2392                           fsr1l	equ	0xFE1
  2393                           indf2	equ	0xFDF
  2394                           postinc2	equ	0xFDE
  2395                           postdec2	equ	0xFDD
  2396                           plusw2	equ	0xFDB
  2397                           fsr2h	equ	0xFDA
  2398                           fsr2l	equ	0xFD9
  2399                           status	equ	0xFD8
  2400                           
  2401 ;; *************** function _Evaluate_Signs *****************
  2402 ;; Defined at:
  2403 ;;		line 106 in file "display.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  evaluation_v    2   39[COMRAM] unsigned int 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  valuecounter    1   41[COMRAM] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;		None               void
  2410 ;; Registers used:
  2411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1
  2417 ;;      Params:         2       0       0
  2418 ;;      Locals:         1       0       0
  2419 ;;      Temps:          0       0       0
  2420 ;;      Totals:         3       0       0
  2421 ;;Total ram usage:        3 bytes
  2422 ;; Hardware stack levels used:    1
  2423 ;; Hardware stack levels required when called:    4
  2424 ;; This function calls:
  2425 ;;		_Evaluate_Display
  2426 ;;		___lwmod
  2427 ;; This function is called by:
  2428 ;;		_Set_Display
  2429 ;; This function uses a non-reentrant model
  2430 ;;
  2431                           
  2432                           	psect	text13
  2433  000A92                     __ptext13:
  2434                           	opt stack 0
  2435  000A92                     _Evaluate_Signs:
  2436                           	opt stack 25
  2437                           
  2438                           ;display.c: 107: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  2439                           
  2440                           ;incstack = 0
  2441  000A92  0E00               	movlw	0
  2442  000A94  6E2A               	movwf	Evaluate_Signs@valuecounter,c
  2443  000A96                     l1702:
  2444                           
  2445                           ;display.c: 108: valuecounter++) {
  2446  000A96  0E02               	movlw	2
  2447  000A98  642A               	cpfsgt	Evaluate_Signs@valuecounter,c
  2448  000A9A  D001               	goto	l1706
  2449  000A9C  D023               	goto	l376
  2450  000A9E                     l1706:
  2451                           
  2452                           ;display.c: 109: signs[valuecounter] = evaluation_value % 10;
  2453  000A9E  502A               	movf	Evaluate_Signs@valuecounter,w,c
  2454  000AA0  0D01               	mullw	1
  2455  000AA2  0E3F               	movlw	low _signs
  2456  000AA4  24F3               	addwf	prodl,w,c
  2457  000AA6  6ED9               	movwf	fsr2l,c
  2458  000AA8  0E00               	movlw	high _signs
  2459  000AAA  20F4               	addwfc	prodh,w,c
  2460  000AAC  6EDA               	movwf	fsr2h,c
  2461  000AAE  C028  F01D         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  2462  000AB2  C029  F01E         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  2463  000AB6  0E00               	movlw	0
  2464  000AB8  6E20               	movwf	___lwmod@divisor+1,c
  2465  000ABA  0E0A               	movlw	10
  2466  000ABC  6E1F               	movwf	___lwmod@divisor,c
  2467  000ABE  ECCD  F005         	call	___lwmod	;wreg free
  2468  000AC2  501D               	movf	?___lwmod,w,c
  2469  000AC4  6EDF               	movwf	indf2,c
  2470                           
  2471                           ;display.c: 110: signs[valuecounter] += 0x30;
  2472  000AC6  502A               	movf	Evaluate_Signs@valuecounter,w,c
  2473  000AC8  0D01               	mullw	1
  2474  000ACA  0E3F               	movlw	low _signs
  2475  000ACC  24F3               	addwf	prodl,w,c
  2476  000ACE  6ED9               	movwf	fsr2l,c
  2477  000AD0  0E00               	movlw	high _signs
  2478  000AD2  20F4               	addwfc	prodh,w,c
  2479  000AD4  6EDA               	movwf	fsr2h,c
  2480  000AD6  0E30               	movlw	48
  2481  000AD8  26DF               	addwf	indf2,f,c
  2482                           
  2483                           ;display.c: 111: evaluation_value >>= 1;
  2484  000ADA  90D8               	bcf	status,0,c
  2485  000ADC  3229               	rrcf	Evaluate_Signs@evaluation_value+1,f,c
  2486  000ADE  3228               	rrcf	Evaluate_Signs@evaluation_value,f,c
  2487  000AE0  2A2A               	incf	Evaluate_Signs@valuecounter,f,c
  2488  000AE2  D7D9               	goto	l1702
  2489  000AE4                     l376:
  2490                           
  2491                           ;display.c: 112: }
  2492                           ;display.c: 113: __nop();
  2493  000AE4  F000               	nop	
  2494                           
  2495                           ;display.c: 114: Evaluate_Display(sizeof(signs), signs);
  2496  000AE6  0E3F               	movlw	low _signs
  2497  000AE8  6E25               	movwf	Evaluate_Display@evaluate,c
  2498  000AEA  0E00               	movlw	high _signs
  2499  000AEC  6E26               	movwf	Evaluate_Display@evaluate+1,c
  2500  000AEE  0E03               	movlw	3
  2501  000AF0  EC70  F003         	call	_Evaluate_Display
  2502  000AF4  0012               	return		;funcret
  2503  000AF6                     __end_of_Evaluate_Signs:
  2504                           	opt stack 0
  2505                           tblptru	equ	0xFF8
  2506                           tblptrh	equ	0xFF7
  2507                           tblptrl	equ	0xFF6
  2508                           tablat	equ	0xFF5
  2509                           prodh	equ	0xFF4
  2510                           prodl	equ	0xFF3
  2511                           intcon	equ	0xFF2
  2512                           postinc0	equ	0xFEE
  2513                           wreg	equ	0xFE8
  2514                           postdec1	equ	0xFE5
  2515                           fsr1l	equ	0xFE1
  2516                           indf2	equ	0xFDF
  2517                           postinc2	equ	0xFDE
  2518                           postdec2	equ	0xFDD
  2519                           plusw2	equ	0xFDB
  2520                           fsr2h	equ	0xFDA
  2521                           fsr2l	equ	0xFD9
  2522                           status	equ	0xFD8
  2523                           
  2524 ;; *************** function ___lwmod *****************
  2525 ;; Defined at:
  2526 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  dividend        2   28[COMRAM] unsigned int 
  2529 ;;  divisor         2   30[COMRAM] unsigned int 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  counter         1   32[COMRAM] unsigned char 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  2   28[COMRAM] unsigned int 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1
  2541 ;;      Params:         4       0       0
  2542 ;;      Locals:         1       0       0
  2543 ;;      Temps:          0       0       0
  2544 ;;      Totals:         5       0       0
  2545 ;;Total ram usage:        5 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    2
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_Evaluate_Signs
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text14
  2556  000B9A                     __ptext14:
  2557                           	opt stack 0
  2558  000B9A                     ___lwmod:
  2559                           	opt stack 26
  2560                           
  2561                           ;incstack = 0
  2562  000B9A  501F               	movf	___lwmod@divisor,w,c
  2563  000B9C  1020               	iorwf	___lwmod@divisor+1,w,c
  2564  000B9E  B4D8               	btfsc	status,2,c
  2565  000BA0  D018               	goto	l917
  2566  000BA2  0E01               	movlw	1
  2567  000BA4  6E21               	movwf	___lwmod@counter,c
  2568  000BA6  D004               	goto	l1690
  2569  000BA8                     l1688:
  2570  000BA8  90D8               	bcf	status,0,c
  2571  000BAA  361F               	rlcf	___lwmod@divisor,f,c
  2572  000BAC  3620               	rlcf	___lwmod@divisor+1,f,c
  2573  000BAE  2A21               	incf	___lwmod@counter,f,c
  2574  000BB0                     l1690:
  2575  000BB0  AE20               	btfss	___lwmod@divisor+1,7,c
  2576  000BB2  D7FA               	goto	l1688
  2577  000BB4                     l1692:
  2578  000BB4  501F               	movf	___lwmod@divisor,w,c
  2579  000BB6  5C1D               	subwf	___lwmod@dividend,w,c
  2580  000BB8  5020               	movf	___lwmod@divisor+1,w,c
  2581  000BBA  581E               	subwfb	___lwmod@dividend+1,w,c
  2582  000BBC  A0D8               	btfss	status,0,c
  2583  000BBE  D004               	goto	l1696
  2584  000BC0  501F               	movf	___lwmod@divisor,w,c
  2585  000BC2  5E1D               	subwf	___lwmod@dividend,f,c
  2586  000BC4  5020               	movf	___lwmod@divisor+1,w,c
  2587  000BC6  5A1E               	subwfb	___lwmod@dividend+1,f,c
  2588  000BC8                     l1696:
  2589  000BC8  90D8               	bcf	status,0,c
  2590  000BCA  3220               	rrcf	___lwmod@divisor+1,f,c
  2591  000BCC  321F               	rrcf	___lwmod@divisor,f,c
  2592  000BCE  2E21               	decfsz	___lwmod@counter,f,c
  2593  000BD0  D7F1               	goto	l1692
  2594  000BD2                     l917:
  2595  000BD2  C01D  F01D         	movff	___lwmod@dividend,?___lwmod
  2596  000BD6  C01E  F01E         	movff	___lwmod@dividend+1,?___lwmod+1
  2597  000BDA  0012               	return		;funcret
  2598  000BDC                     __end_of___lwmod:
  2599                           	opt stack 0
  2600                           tblptru	equ	0xFF8
  2601                           tblptrh	equ	0xFF7
  2602                           tblptrl	equ	0xFF6
  2603                           tablat	equ	0xFF5
  2604                           prodh	equ	0xFF4
  2605                           prodl	equ	0xFF3
  2606                           intcon	equ	0xFF2
  2607                           postinc0	equ	0xFEE
  2608                           wreg	equ	0xFE8
  2609                           postdec1	equ	0xFE5
  2610                           fsr1l	equ	0xFE1
  2611                           indf2	equ	0xFDF
  2612                           postinc2	equ	0xFDE
  2613                           postdec2	equ	0xFDD
  2614                           plusw2	equ	0xFDB
  2615                           fsr2h	equ	0xFDA
  2616                           fsr2l	equ	0xFD9
  2617                           status	equ	0xFD8
  2618                           
  2619 ;; *************** function _Evaluate_Display *****************
  2620 ;; Defined at:
  2621 ;;		line 52 in file "display.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  size            1    wreg     unsigned char 
  2624 ;;  evaluate        2   36[COMRAM] PTR unsigned char 
  2625 ;;		 -> signs(3), 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  size            1   38[COMRAM] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;		None               void
  2630 ;; Registers used:
  2631 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMRAM   BANK0   BANK1
  2637 ;;      Params:         2       0       0
  2638 ;;      Locals:         1       0       0
  2639 ;;      Temps:          0       0       0
  2640 ;;      Totals:         3       0       0
  2641 ;;Total ram usage:        3 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    3
  2644 ;; This function calls:
  2645 ;;		_Set_Bits
  2646 ;; This function is called by:
  2647 ;;		_Evaluate_Signs
  2648 ;;		_Set_Display
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           	psect	text15
  2653  0006E0                     __ptext15:
  2654                           	opt stack 0
  2655  0006E0                     _Evaluate_Display:
  2656                           	opt stack 25
  2657                           
  2658                           ;incstack = 0
  2659                           ;Evaluate_Display@size stored from wreg
  2660  0006E0  6E27               	movwf	Evaluate_Display@size,c
  2661                           
  2662                           ;display.c: 53: for(display_counter = 0; display_counter < size;
  2663  0006E2  0E00               	movlw	0
  2664  0006E4  6E33               	movwf	_display_counter,c
  2665                           
  2666                           ;display.c: 54: display_counter++) {
  2667  0006E6  D0D7               	goto	l1682
  2668  0006E8                     l1650:
  2669                           
  2670                           ;display.c: 57: Set_Bits("ABCDEF");
  2671  0006E8  0E09               	movlw	low STR_1
  2672  0006EA  6E1D               	movwf	Set_Bits@bits,c
  2673  0006EC  0E02               	movlw	high STR_1
  2674  0006EE  6E1E               	movwf	Set_Bits@bits+1,c
  2675  0006F0  501D               	movf	Set_Bits@bits,w,c
  2676  0006F2  101E               	iorwf	Set_Bits@bits+1,w,c
  2677  0006F4  A4D8               	btfss	status,2,c
  2678  0006F6  0E00               	movlw	low (__mediumconst shr (0+16))
  2679  0006F8  6E1F               	movwf	Set_Bits@bits+2,c
  2680  0006FA  EC50  F004         	call	_Set_Bits	;wreg free
  2681                           
  2682                           ;display.c: 58: break;
  2683  0006FE  D0CA               	goto	l1680
  2684  000700                     l1652:
  2685                           
  2686                           ;display.c: 60: Set_Bits("BC");
  2687  000700  0E43               	movlw	low (STR_8+1)
  2688  000702  6E1D               	movwf	Set_Bits@bits,c
  2689  000704  0E02               	movlw	high (STR_8+1)
  2690  000706  6E1E               	movwf	Set_Bits@bits+1,c
  2691  000708  501D               	movf	Set_Bits@bits,w,c
  2692  00070A  101E               	iorwf	Set_Bits@bits+1,w,c
  2693  00070C  A4D8               	btfss	status,2,c
  2694  00070E  0E00               	movlw	low (__mediumconst shr (0+16))
  2695  000710  6E1F               	movwf	Set_Bits@bits+2,c
  2696  000712  EC50  F004         	call	_Set_Bits	;wreg free
  2697                           
  2698                           ;display.c: 61: break;
  2699  000716  D0BE               	goto	l1680
  2700  000718                     l1654:
  2701                           
  2702                           ;display.c: 63: Set_Bits("ABDEG");
  2703  000718  0E2B               	movlw	low STR_3
  2704  00071A  6E1D               	movwf	Set_Bits@bits,c
  2705  00071C  0E02               	movlw	high STR_3
  2706  00071E  6E1E               	movwf	Set_Bits@bits+1,c
  2707  000720  501D               	movf	Set_Bits@bits,w,c
  2708  000722  101E               	iorwf	Set_Bits@bits+1,w,c
  2709  000724  A4D8               	btfss	status,2,c
  2710  000726  0E00               	movlw	low (__mediumconst shr (0+16))
  2711  000728  6E1F               	movwf	Set_Bits@bits+2,c
  2712  00072A  EC50  F004         	call	_Set_Bits	;wreg free
  2713                           
  2714                           ;display.c: 64: break;
  2715  00072E  D0B2               	goto	l1680
  2716  000730                     l1656:
  2717                           
  2718                           ;display.c: 66: Set_Bits("ABCDG");
  2719  000730  0E25               	movlw	low STR_4
  2720  000732  6E1D               	movwf	Set_Bits@bits,c
  2721  000734  0E02               	movlw	high STR_4
  2722  000736  6E1E               	movwf	Set_Bits@bits+1,c
  2723  000738  501D               	movf	Set_Bits@bits,w,c
  2724  00073A  101E               	iorwf	Set_Bits@bits+1,w,c
  2725  00073C  A4D8               	btfss	status,2,c
  2726  00073E  0E00               	movlw	low (__mediumconst shr (0+16))
  2727  000740  6E1F               	movwf	Set_Bits@bits+2,c
  2728  000742  EC50  F004         	call	_Set_Bits	;wreg free
  2729                           
  2730                           ;display.c: 67: break;
  2731  000746  D0A6               	goto	l1680
  2732  000748                     l1658:
  2733                           
  2734                           ;display.c: 69: Set_Bits("BCFG");
  2735  000748  0E3D               	movlw	low STR_5
  2736  00074A  6E1D               	movwf	Set_Bits@bits,c
  2737  00074C  0E02               	movlw	high STR_5
  2738  00074E  6E1E               	movwf	Set_Bits@bits+1,c
  2739  000750  501D               	movf	Set_Bits@bits,w,c
  2740  000752  101E               	iorwf	Set_Bits@bits+1,w,c
  2741  000754  A4D8               	btfss	status,2,c
  2742  000756  0E00               	movlw	low (__mediumconst shr (0+16))
  2743  000758  6E1F               	movwf	Set_Bits@bits+2,c
  2744  00075A  EC50  F004         	call	_Set_Bits	;wreg free
  2745                           
  2746                           ;display.c: 70: break;
  2747  00075E  D09A               	goto	l1680
  2748  000760                     l1660:
  2749                           
  2750                           ;display.c: 72: Set_Bits("ACDFG");
  2751  000760  0E31               	movlw	low STR_6
  2752  000762  6E1D               	movwf	Set_Bits@bits,c
  2753  000764  0E02               	movlw	high STR_6
  2754  000766  6E1E               	movwf	Set_Bits@bits+1,c
  2755  000768  501D               	movf	Set_Bits@bits,w,c
  2756  00076A  101E               	iorwf	Set_Bits@bits+1,w,c
  2757  00076C  A4D8               	btfss	status,2,c
  2758  00076E  0E00               	movlw	low (__mediumconst shr (0+16))
  2759  000770  6E1F               	movwf	Set_Bits@bits+2,c
  2760  000772  EC50  F004         	call	_Set_Bits	;wreg free
  2761                           
  2762                           ;display.c: 73: break;
  2763  000776  D08E               	goto	l1680
  2764  000778                     l1662:
  2765                           
  2766                           ;display.c: 75: Set_Bits("ACDEFG");
  2767  000778  0E1E               	movlw	low STR_7
  2768  00077A  6E1D               	movwf	Set_Bits@bits,c
  2769  00077C  0E02               	movlw	high STR_7
  2770  00077E  6E1E               	movwf	Set_Bits@bits+1,c
  2771  000780  501D               	movf	Set_Bits@bits,w,c
  2772  000782  101E               	iorwf	Set_Bits@bits+1,w,c
  2773  000784  A4D8               	btfss	status,2,c
  2774  000786  0E00               	movlw	low (__mediumconst shr (0+16))
  2775  000788  6E1F               	movwf	Set_Bits@bits+2,c
  2776  00078A  EC50  F004         	call	_Set_Bits	;wreg free
  2777                           
  2778                           ;display.c: 76: break;
  2779  00078E  D082               	goto	l1680
  2780  000790                     l1664:
  2781                           
  2782                           ;display.c: 78: Set_Bits("ABC");
  2783  000790  0E42               	movlw	low STR_8
  2784  000792  6E1D               	movwf	Set_Bits@bits,c
  2785  000794  0E02               	movlw	high STR_8
  2786  000796  6E1E               	movwf	Set_Bits@bits+1,c
  2787  000798  501D               	movf	Set_Bits@bits,w,c
  2788  00079A  101E               	iorwf	Set_Bits@bits+1,w,c
  2789  00079C  A4D8               	btfss	status,2,c
  2790  00079E  0E00               	movlw	low (__mediumconst shr (0+16))
  2791  0007A0  6E1F               	movwf	Set_Bits@bits+2,c
  2792  0007A2  EC50  F004         	call	_Set_Bits	;wreg free
  2793                           
  2794                           ;display.c: 79: break;
  2795  0007A6  D076               	goto	l1680
  2796  0007A8                     l1666:
  2797                           
  2798                           ;display.c: 81: Set_Bits("ABCDEFG");
  2799  0007A8  0E01               	movlw	low STR_9
  2800  0007AA  6E1D               	movwf	Set_Bits@bits,c
  2801  0007AC  0E02               	movlw	high STR_9
  2802  0007AE  6E1E               	movwf	Set_Bits@bits+1,c
  2803  0007B0  501D               	movf	Set_Bits@bits,w,c
  2804  0007B2  101E               	iorwf	Set_Bits@bits+1,w,c
  2805  0007B4  A4D8               	btfss	status,2,c
  2806  0007B6  0E00               	movlw	low (__mediumconst shr (0+16))
  2807  0007B8  6E1F               	movwf	Set_Bits@bits+2,c
  2808  0007BA  EC50  F004         	call	_Set_Bits	;wreg free
  2809                           
  2810                           ;display.c: 82: break;
  2811  0007BE  D06A               	goto	l1680
  2812  0007C0                     l1668:
  2813                           
  2814                           ;display.c: 84: Set_Bits("ABCDFG");
  2815  0007C0  0E10               	movlw	low STR_10
  2816  0007C2  6E1D               	movwf	Set_Bits@bits,c
  2817  0007C4  0E02               	movlw	high STR_10
  2818  0007C6  6E1E               	movwf	Set_Bits@bits+1,c
  2819  0007C8  501D               	movf	Set_Bits@bits,w,c
  2820  0007CA  101E               	iorwf	Set_Bits@bits+1,w,c
  2821  0007CC  A4D8               	btfss	status,2,c
  2822  0007CE  0E00               	movlw	low (__mediumconst shr (0+16))
  2823  0007D0  6E1F               	movwf	Set_Bits@bits+2,c
  2824  0007D2  EC50  F004         	call	_Set_Bits	;wreg free
  2825                           
  2826                           ;display.c: 85: break;
  2827  0007D6  D05E               	goto	l1680
  2828  0007D8                     l1670:
  2829                           
  2830                           ;display.c: 87: Set_Bits("ADEFG");
  2831  0007D8  0E37               	movlw	low STR_11
  2832  0007DA  6E1D               	movwf	Set_Bits@bits,c
  2833  0007DC  0E02               	movlw	high STR_11
  2834  0007DE  6E1E               	movwf	Set_Bits@bits+1,c
  2835  0007E0  501D               	movf	Set_Bits@bits,w,c
  2836  0007E2  101E               	iorwf	Set_Bits@bits+1,w,c
  2837  0007E4  A4D8               	btfss	status,2,c
  2838  0007E6  0E00               	movlw	low (__mediumconst shr (0+16))
  2839  0007E8  6E1F               	movwf	Set_Bits@bits+2,c
  2840  0007EA  EC50  F004         	call	_Set_Bits	;wreg free
  2841                           
  2842                           ;display.c: 88: break;
  2843  0007EE  D052               	goto	l1680
  2844  0007F0                     l1672:
  2845                           
  2846                           ;display.c: 90: Set_Bits("ABCEFG");
  2847  0007F0  0E17               	movlw	low STR_12
  2848  0007F2  6E1D               	movwf	Set_Bits@bits,c
  2849  0007F4  0E02               	movlw	high STR_12
  2850  0007F6  6E1E               	movwf	Set_Bits@bits+1,c
  2851  0007F8  501D               	movf	Set_Bits@bits,w,c
  2852  0007FA  101E               	iorwf	Set_Bits@bits+1,w,c
  2853  0007FC  A4D8               	btfss	status,2,c
  2854  0007FE  0E00               	movlw	low (__mediumconst shr (0+16))
  2855  000800  6E1F               	movwf	Set_Bits@bits+2,c
  2856  000802  EC50  F004         	call	_Set_Bits	;wreg free
  2857                           
  2858                           ;display.c: 91: break;
  2859  000806  D046               	goto	l1680
  2860  000808                     l1674:
  2861                           
  2862                           ;display.c: 93: Set_Bits("G");
  2863  000808  0E29               	movlw	low (STR_4+4)
  2864  00080A  6E1D               	movwf	Set_Bits@bits,c
  2865  00080C  0E02               	movlw	high (STR_4+4)
  2866  00080E  6E1E               	movwf	Set_Bits@bits+1,c
  2867  000810  501D               	movf	Set_Bits@bits,w,c
  2868  000812  101E               	iorwf	Set_Bits@bits+1,w,c
  2869  000814  A4D8               	btfss	status,2,c
  2870  000816  0E00               	movlw	low (__mediumconst shr (0+16))
  2871  000818  6E1F               	movwf	Set_Bits@bits+2,c
  2872  00081A  EC50  F004         	call	_Set_Bits	;wreg free
  2873                           
  2874                           ;display.c: 94: break;
  2875  00081E  D03A               	goto	l1680
  2876  000820                     l1676:
  2877                           
  2878                           ;display.c: 96: Set_Bits(0);
  2879  000820  0E00               	movlw	0
  2880  000822  6E1D               	movwf	Set_Bits@bits,c
  2881  000824  0E00               	movlw	0
  2882  000826  6E1E               	movwf	Set_Bits@bits+1,c
  2883  000828  0E00               	movlw	0
  2884  00082A  6E1F               	movwf	Set_Bits@bits+2,c
  2885  00082C  EC50  F004         	call	_Set_Bits	;wreg free
  2886                           
  2887                           ;display.c: 97: }
  2888  000830  D031               	goto	l1680
  2889  000832                     l1678:
  2890  000832  5033               	movf	_display_counter,w,c
  2891  000834  0D01               	mullw	1
  2892  000836  50F3               	movf	prodl,w,c
  2893  000838  2425               	addwf	Evaluate_Display@evaluate,w,c
  2894  00083A  6ED9               	movwf	fsr2l,c
  2895  00083C  50F4               	movf	prodh,w,c
  2896  00083E  2026               	addwfc	Evaluate_Display@evaluate+1,w,c
  2897  000840  6EDA               	movwf	fsr2h,c
  2898  000842  50DF               	movf	indf2,w,c
  2899                           
  2900                           ; Switch size 1, requested type "space"
  2901                           ; Number of cases is 13, Range of values is 45 to 69
  2902                           ; switch strategies available:
  2903                           ; Name         Instructions Cycles
  2904                           ; simple_byte           40    21 (average)
  2905                           ;	Chosen strategy is simple_byte
  2906  000844  0A2D               	xorlw	45	; case 45
  2907  000846  B4D8               	btfsc	status,2,c
  2908  000848  D7DF               	goto	l1674
  2909  00084A  0A1D               	xorlw	29	; case 48
  2910  00084C  B4D8               	btfsc	status,2,c
  2911  00084E  D74C               	goto	l1650
  2912  000850  0A01               	xorlw	1	; case 49
  2913  000852  B4D8               	btfsc	status,2,c
  2914  000854  D755               	goto	l1652
  2915  000856  0A03               	xorlw	3	; case 50
  2916  000858  B4D8               	btfsc	status,2,c
  2917  00085A  D75E               	goto	l1654
  2918  00085C  0A01               	xorlw	1	; case 51
  2919  00085E  B4D8               	btfsc	status,2,c
  2920  000860  D767               	goto	l1656
  2921  000862  0A07               	xorlw	7	; case 52
  2922  000864  B4D8               	btfsc	status,2,c
  2923  000866  D770               	goto	l1658
  2924  000868  0A01               	xorlw	1	; case 53
  2925  00086A  B4D8               	btfsc	status,2,c
  2926  00086C  D779               	goto	l1660
  2927  00086E  0A03               	xorlw	3	; case 54
  2928  000870  B4D8               	btfsc	status,2,c
  2929  000872  D782               	goto	l1662
  2930  000874  0A01               	xorlw	1	; case 55
  2931  000876  B4D8               	btfsc	status,2,c
  2932  000878  D78B               	goto	l1664
  2933  00087A  0A0F               	xorlw	15	; case 56
  2934  00087C  B4D8               	btfsc	status,2,c
  2935  00087E  D794               	goto	l1666
  2936  000880  0A01               	xorlw	1	; case 57
  2937  000882  B4D8               	btfsc	status,2,c
  2938  000884  D79D               	goto	l1668
  2939  000886  0A78               	xorlw	120	; case 65
  2940  000888  B4D8               	btfsc	status,2,c
  2941  00088A  D7B2               	goto	l1672
  2942  00088C  0A04               	xorlw	4	; case 69
  2943  00088E  B4D8               	btfsc	status,2,c
  2944  000890  D7A3               	goto	l1670
  2945  000892  D7C6               	goto	l1676
  2946  000894                     l1680:
  2947  000894  2A33               	incf	_display_counter,f,c
  2948  000896                     l1682:
  2949  000896  5027               	movf	Evaluate_Display@size,w,c
  2950  000898  5C33               	subwf	_display_counter,w,c
  2951  00089A  B0D8               	btfsc	status,0,c
  2952  00089C  0012               	return	
  2953  00089E  D7C9               	goto	l1678
  2954  0008A0                     __end_of_Evaluate_Display:
  2955                           	opt stack 0
  2956                           tblptru	equ	0xFF8
  2957                           tblptrh	equ	0xFF7
  2958                           tblptrl	equ	0xFF6
  2959                           tablat	equ	0xFF5
  2960                           prodh	equ	0xFF4
  2961                           prodl	equ	0xFF3
  2962                           intcon	equ	0xFF2
  2963                           postinc0	equ	0xFEE
  2964                           wreg	equ	0xFE8
  2965                           postdec1	equ	0xFE5
  2966                           fsr1l	equ	0xFE1
  2967                           indf2	equ	0xFDF
  2968                           postinc2	equ	0xFDE
  2969                           postdec2	equ	0xFDD
  2970                           plusw2	equ	0xFDB
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function _Set_Bits *****************
  2976 ;; Defined at:
  2977 ;;		line 12 in file "display.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  bits            3   28[COMRAM] PTR const unsigned char 
  2980 ;;		 -> ROM(8191), STR_13(2), STR_12(7), STR_11(6), 
  2981 ;;		 -> STR_10(7), STR_9(8), STR_8(4), STR_7(7), 
  2982 ;;		 -> STR_6(6), STR_5(5), STR_4(6), STR_3(6), 
  2983 ;;		 -> STR_2(3), STR_1(7), 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  bitcount        1   34[COMRAM] unsigned char 
  2986 ;;  Bitoutput       1   35[COMRAM] unsigned char 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;		None               void
  2989 ;; Registers used:
  2990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1
  2996 ;;      Params:         3       0       0
  2997 ;;      Locals:         2       0       0
  2998 ;;      Temps:          3       0       0
  2999 ;;      Totals:         8       0       0
  3000 ;;Total ram usage:        8 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:    2
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_Evaluate_Display
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text16
  3011  0008A0                     __ptext16:
  3012                           	opt stack 0
  3013  0008A0                     _Set_Bits:
  3014                           	opt stack 25
  3015                           
  3016                           ;display.c: 13: unsigned char Bitoutput = 0;
  3017                           
  3018                           ;incstack = 0
  3019  0008A0  0E00               	movlw	0
  3020  0008A2  6E24               	movwf	Set_Bits@Bitoutput,c
  3021                           
  3022                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  3023  0008A4  0E00               	movlw	0
  3024  0008A6  6E23               	movwf	Set_Bits@bitcount,c
  3025                           
  3026                           ;display.c: 15: bitcount++) {
  3027  0008A8  D037               	goto	l1644
  3028  0008AA                     l1624:
  3029                           
  3030                           ;display.c: 18: Bitoutput |= 0b00000001;
  3031  0008AA  8024               	bsf	Set_Bits@Bitoutput,0,c
  3032                           
  3033                           ;display.c: 19: break;
  3034  0008AC  D034               	goto	l1642
  3035  0008AE                     l1626:
  3036                           
  3037                           ;display.c: 21: Bitoutput |= 0b00000010;
  3038  0008AE  8224               	bsf	Set_Bits@Bitoutput,1,c
  3039                           
  3040                           ;display.c: 22: break;
  3041  0008B0  D032               	goto	l1642
  3042  0008B2                     l1628:
  3043                           
  3044                           ;display.c: 24: Bitoutput |= 0b00000100;
  3045  0008B2  8424               	bsf	Set_Bits@Bitoutput,2,c
  3046                           
  3047                           ;display.c: 25: break;
  3048  0008B4  D030               	goto	l1642
  3049  0008B6                     l1630:
  3050                           
  3051                           ;display.c: 27: Bitoutput |= 0b00001000;
  3052  0008B6  8624               	bsf	Set_Bits@Bitoutput,3,c
  3053                           
  3054                           ;display.c: 28: break;
  3055  0008B8  D02E               	goto	l1642
  3056  0008BA                     l1632:
  3057                           
  3058                           ;display.c: 30: Bitoutput |= 0b00010000;
  3059  0008BA  8824               	bsf	Set_Bits@Bitoutput,4,c
  3060                           
  3061                           ;display.c: 31: break;
  3062  0008BC  D02C               	goto	l1642
  3063  0008BE                     l1634:
  3064                           
  3065                           ;display.c: 33: Bitoutput |= 0b00100000;
  3066  0008BE  8A24               	bsf	Set_Bits@Bitoutput,5,c
  3067                           
  3068                           ;display.c: 34: break;
  3069  0008C0  D02A               	goto	l1642
  3070  0008C2                     l1636:
  3071                           
  3072                           ;display.c: 36: Bitoutput |= 0b01000000;
  3073  0008C2  8C24               	bsf	Set_Bits@Bitoutput,6,c
  3074                           
  3075                           ;display.c: 40: }
  3076                           
  3077                           ;display.c: 39: break;
  3078                           
  3079                           ;display.c: 38: default:
  3080                           
  3081                           ;display.c: 37: break;
  3082  0008C4  D028               	goto	l1642
  3083  0008C6                     l1640:
  3084  0008C6  5023               	movf	Set_Bits@bitcount,w,c
  3085  0008C8  0D01               	mullw	1
  3086  0008CA  50F3               	movf	prodl,w,c
  3087  0008CC  241D               	addwf	Set_Bits@bits,w,c
  3088  0008CE  6E20               	movwf	??_Set_Bits& (0+255),c
  3089  0008D0  50F4               	movf	prodh,w,c
  3090  0008D2  201E               	addwfc	Set_Bits@bits+1,w,c
  3091  0008D4  6E21               	movwf	(??_Set_Bits+1)& (0+255),c
  3092  0008D6  0E00               	movlw	0
  3093  0008D8  201F               	addwfc	Set_Bits@bits+2,w,c
  3094  0008DA  6E22               	movwf	(??_Set_Bits+2)& (0+255),c
  3095  0008DC  C020  FFF6         	movff	??_Set_Bits,tblptrl
  3096  0008E0  C021  FFF7         	movff	??_Set_Bits+1,tblptrh
  3097  0008E4  C022  FFF8         	movff	??_Set_Bits+2,tblptru
  3098  0008E8  0008               	tblrd		*
  3099  0008EA  50F5               	movf	tablat,w,c
  3100                           
  3101                           ; Switch size 1, requested type "space"
  3102                           ; Number of cases is 7, Range of values is 65 to 71
  3103                           ; switch strategies available:
  3104                           ; Name         Instructions Cycles
  3105                           ; simple_byte           22    12 (average)
  3106                           ;	Chosen strategy is simple_byte
  3107  0008EC  0A41               	xorlw	65	; case 65
  3108  0008EE  B4D8               	btfsc	status,2,c
  3109  0008F0  D7DC               	goto	l1624
  3110  0008F2  0A03               	xorlw	3	; case 66
  3111  0008F4  B4D8               	btfsc	status,2,c
  3112  0008F6  D7DB               	goto	l1626
  3113  0008F8  0A01               	xorlw	1	; case 67
  3114  0008FA  B4D8               	btfsc	status,2,c
  3115  0008FC  D7DA               	goto	l1628
  3116  0008FE  0A07               	xorlw	7	; case 68
  3117  000900  B4D8               	btfsc	status,2,c
  3118  000902  D7D9               	goto	l1630
  3119  000904  0A01               	xorlw	1	; case 69
  3120  000906  B4D8               	btfsc	status,2,c
  3121  000908  D7D8               	goto	l1632
  3122  00090A  0A03               	xorlw	3	; case 70
  3123  00090C  B4D8               	btfsc	status,2,c
  3124  00090E  D7D7               	goto	l1634
  3125  000910  0A01               	xorlw	1	; case 71
  3126  000912  B4D8               	btfsc	status,2,c
  3127  000914  D7D6               	goto	l1636
  3128  000916                     l1642:
  3129  000916  2A23               	incf	Set_Bits@bitcount,f,c
  3130  000918                     l1644:
  3131  000918  5023               	movf	Set_Bits@bitcount,w,c
  3132  00091A  0D01               	mullw	1
  3133  00091C  50F3               	movf	prodl,w,c
  3134  00091E  241D               	addwf	Set_Bits@bits,w,c
  3135  000920  6E20               	movwf	??_Set_Bits& (0+255),c
  3136  000922  50F4               	movf	prodh,w,c
  3137  000924  201E               	addwfc	Set_Bits@bits+1,w,c
  3138  000926  6E21               	movwf	(??_Set_Bits+1)& (0+255),c
  3139  000928  0E00               	movlw	0
  3140  00092A  201F               	addwfc	Set_Bits@bits+2,w,c
  3141  00092C  6E22               	movwf	(??_Set_Bits+2)& (0+255),c
  3142  00092E  C020  FFF6         	movff	??_Set_Bits,tblptrl
  3143  000932  C021  FFF7         	movff	??_Set_Bits+1,tblptrh
  3144  000936  C022  FFF8         	movff	??_Set_Bits+2,tblptru
  3145  00093A  0008               	tblrd		*
  3146  00093C  50F5               	movf	tablat,w,c
  3147  00093E  0900               	iorlw	0
  3148  000940  A4D8               	btfss	status,2,c
  3149  000942  D7C1               	goto	l1640
  3150                           
  3151                           ;display.c: 41: }
  3152                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  3153  000944  5033               	movf	_display_counter,w,c
  3154  000946  0D01               	mullw	1
  3155  000948  0E38               	movlw	low _pixels
  3156  00094A  24F3               	addwf	prodl,w,c
  3157  00094C  6ED9               	movwf	fsr2l,c
  3158  00094E  0E00               	movlw	high _pixels
  3159  000950  20F4               	addwfc	prodh,w,c
  3160  000952  6EDA               	movwf	fsr2h,c
  3161  000954  C024  FFDF         	movff	Set_Bits@Bitoutput,indf2
  3162  000958  0012               	return		;funcret
  3163  00095A                     __end_of_Set_Bits:
  3164                           	opt stack 0
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           prodh	equ	0xFF4
  3170                           prodl	equ	0xFF3
  3171                           intcon	equ	0xFF2
  3172                           postinc0	equ	0xFEE
  3173                           wreg	equ	0xFE8
  3174                           postdec1	equ	0xFE5
  3175                           fsr1l	equ	0xFE1
  3176                           indf2	equ	0xFDF
  3177                           postinc2	equ	0xFDE
  3178                           postdec2	equ	0xFDD
  3179                           plusw2	equ	0xFDB
  3180                           fsr2h	equ	0xFDA
  3181                           fsr2l	equ	0xFD9
  3182                           status	equ	0xFD8
  3183                           
  3184 ;; *************** function _Save_Data *****************
  3185 ;; Defined at:
  3186 ;;		line 8 in file "storage.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  store           2   28[COMRAM] unsigned int 
  3189 ;;  store_addres    1   30[COMRAM] unsigned char 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;		None               void
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1
  3201 ;;      Params:         3       0       0
  3202 ;;      Locals:         0       0       0
  3203 ;;      Temps:          0       0       0
  3204 ;;      Totals:         3       0       0
  3205 ;;Total ram usage:        3 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:    2
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_Check_Buttons
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text17
  3216  000B4A                     __ptext17:
  3217                           	opt stack 0
  3218  000B4A                     _Save_Data:
  3219                           	opt stack 27
  3220                           
  3221                           ;storage.c: 10: EEADR = store_address;
  3222                           
  3223                           ;incstack = 0
  3224  000B4A  C01F  FFA9         	movff	Save_Data@store_address,4009	;volatile
  3225                           
  3226                           ;storage.c: 11: EEDATA = store;
  3227  000B4E  C01D  FFA8         	movff	Save_Data@store,4008	;volatile
  3228                           
  3229                           ;storage.c: 12: EECON1bits.EEPGD = 0;
  3230  000B52  9EA6               	bcf	4006,7,c	;volatile
  3231                           
  3232                           ;storage.c: 13: EECON1bits.CFGS = 0;
  3233  000B54  9CA6               	bcf	4006,6,c	;volatile
  3234                           
  3235                           ;storage.c: 14: INTCONbits.GIE = 0;
  3236  000B56  9EF2               	bcf	intcon,7,c	;volatile
  3237                           
  3238                           ;storage.c: 15: EECON1bits.WREN = 1;
  3239  000B58  84A6               	bsf	4006,2,c	;volatile
  3240                           
  3241                           ;storage.c: 16: EECON2 = 0x55;
  3242  000B5A  0E55               	movlw	85
  3243  000B5C  6EA7               	movwf	4007,c	;volatile
  3244                           
  3245                           ;storage.c: 17: EECON2 = 0xAA;
  3246  000B5E  0EAA               	movlw	170
  3247  000B60  6EA7               	movwf	4007,c	;volatile
  3248                           
  3249                           ;storage.c: 18: EECON1bits.WR = 1;
  3250  000B62  82A6               	bsf	4006,1,c	;volatile
  3251  000B64                     l301:
  3252  000B64  A8A1               	btfss	4001,4,c	;volatile
  3253  000B66  D7FE               	goto	l301
  3254                           
  3255                           ;storage.c: 20: PIR2bits.EEIF = 0;
  3256  000B68  98A1               	bcf	4001,4,c	;volatile
  3257                           
  3258                           ;storage.c: 21: store >>= 8;
  3259  000B6A  501E               	movf	Save_Data@store+1,w,c
  3260  000B6C  6E1D               	movwf	Save_Data@store,c
  3261  000B6E  6A1E               	clrf	Save_Data@store+1,c
  3262                           
  3263                           ;storage.c: 22: store_address += 50;
  3264  000B70  0E32               	movlw	50
  3265  000B72  261F               	addwf	Save_Data@store_address,f,c
  3266                           
  3267                           ;storage.c: 23: EEADR = store_address;
  3268  000B74  C01F  FFA9         	movff	Save_Data@store_address,4009	;volatile
  3269                           
  3270                           ;storage.c: 24: EEDATA = store;
  3271  000B78  C01D  FFA8         	movff	Save_Data@store,4008	;volatile
  3272                           
  3273                           ;storage.c: 25: EECON1bits.EEPGD = 0;
  3274  000B7C  9EA6               	bcf	4006,7,c	;volatile
  3275                           
  3276                           ;storage.c: 26: EECON1bits.CFGS = 0;
  3277  000B7E  9CA6               	bcf	4006,6,c	;volatile
  3278                           
  3279                           ;storage.c: 27: EECON1bits.WREN = 1;
  3280  000B80  84A6               	bsf	4006,2,c	;volatile
  3281                           
  3282                           ;storage.c: 28: INTCONbits.GIE = 0;
  3283  000B82  9EF2               	bcf	intcon,7,c	;volatile
  3284                           
  3285                           ;storage.c: 29: EECON2 = 0x55;
  3286  000B84  0E55               	movlw	85
  3287  000B86  6EA7               	movwf	4007,c	;volatile
  3288                           
  3289                           ;storage.c: 30: EECON2 = 0xAA;
  3290  000B88  0EAA               	movlw	170
  3291  000B8A  6EA7               	movwf	4007,c	;volatile
  3292                           
  3293                           ;storage.c: 31: EECON1bits.WR = 1;
  3294  000B8C  82A6               	bsf	4006,1,c	;volatile
  3295  000B8E                     l304:
  3296  000B8E  A8A1               	btfss	4001,4,c	;volatile
  3297  000B90  D7FE               	goto	l304
  3298                           
  3299                           ;storage.c: 33: PIR2bits.EEIF = 0;
  3300  000B92  98A1               	bcf	4001,4,c	;volatile
  3301                           
  3302                           ;storage.c: 34: EECON1bits.WREN = 0;
  3303  000B94  94A6               	bcf	4006,2,c	;volatile
  3304                           
  3305                           ;storage.c: 35: INTCONbits.GIE = 1;
  3306  000B96  8EF2               	bsf	intcon,7,c	;volatile
  3307  000B98  0012               	return		;funcret
  3308  000B9A                     __end_of_Save_Data:
  3309                           	opt stack 0
  3310                           tblptru	equ	0xFF8
  3311                           tblptrh	equ	0xFF7
  3312                           tblptrl	equ	0xFF6
  3313                           tablat	equ	0xFF5
  3314                           prodh	equ	0xFF4
  3315                           prodl	equ	0xFF3
  3316                           intcon	equ	0xFF2
  3317                           postinc0	equ	0xFEE
  3318                           wreg	equ	0xFE8
  3319                           postdec1	equ	0xFE5
  3320                           fsr1l	equ	0xFE1
  3321                           indf2	equ	0xFDF
  3322                           postinc2	equ	0xFDE
  3323                           postdec2	equ	0xFDD
  3324                           plusw2	equ	0xFDB
  3325                           fsr2h	equ	0xFDA
  3326                           fsr2l	equ	0xFD9
  3327                           status	equ	0xFD8
  3328                           
  3329 ;; *************** function _Read_Data *****************
  3330 ;; Defined at:
  3331 ;;		line 44 in file "storage.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;  read_address    1    wreg     unsigned char 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;  read_address    1   32[COMRAM] unsigned char 
  3336 ;;  data_read       2   30[COMRAM] unsigned int 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  2   28[COMRAM] unsigned int 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1
  3346 ;;      Params:         2       0       0
  3347 ;;      Locals:         3       0       0
  3348 ;;      Temps:          0       0       0
  3349 ;;      Totals:         5       0       0
  3350 ;;Total ram usage:        5 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    2
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_Check_Buttons
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           	psect	text18
  3361  000C1C                     __ptext18:
  3362                           	opt stack 0
  3363  000C1C                     _Read_Data:
  3364                           	opt stack 27
  3365                           
  3366                           ;incstack = 0
  3367                           ;Read_Data@read_address stored from wreg
  3368  000C1C  6E21               	movwf	Read_Data@read_address,c
  3369                           
  3370                           ;storage.c: 45: unsigned int data_read = 0;
  3371  000C1E  0E00               	movlw	0
  3372  000C20  6E20               	movwf	Read_Data@data_read+1,c
  3373  000C22  0E00               	movlw	0
  3374  000C24  6E1F               	movwf	Read_Data@data_read,c
  3375                           
  3376                           ;storage.c: 46: read_address += 50;
  3377  000C26  0E32               	movlw	50
  3378  000C28  2621               	addwf	Read_Data@read_address,f,c
  3379                           
  3380                           ;storage.c: 47: EEADR = read_address;
  3381  000C2A  C021  FFA9         	movff	Read_Data@read_address,4009	;volatile
  3382                           
  3383                           ;storage.c: 48: EECON1bits.EEPGD = 0;
  3384  000C2E  9EA6               	bcf	4006,7,c	;volatile
  3385                           
  3386                           ;storage.c: 49: EECON1bits.CFGS = 0;
  3387  000C30  9CA6               	bcf	4006,6,c	;volatile
  3388                           
  3389                           ;storage.c: 50: EECON1bits.RD = 1;
  3390  000C32  80A6               	bsf	4006,0,c	;volatile
  3391                           
  3392                           ;storage.c: 51: data_read = EEDATA;
  3393  000C34  CFA8 F01F          	movff	4008,Read_Data@data_read	;volatile
  3394  000C38  6A20               	clrf	Read_Data@data_read+1,c
  3395                           
  3396                           ;storage.c: 52: read_address -= 50;
  3397  000C3A  0E32               	movlw	50
  3398  000C3C  5E21               	subwf	Read_Data@read_address,f,c
  3399                           
  3400                           ;storage.c: 53: data_read <<= 8;
  3401  000C3E  501F               	movf	Read_Data@data_read,w,c
  3402  000C40  6E20               	movwf	Read_Data@data_read+1,c
  3403  000C42  6A1F               	clrf	Read_Data@data_read,c
  3404                           
  3405                           ;storage.c: 54: EEADR = read_address;
  3406  000C44  C021  FFA9         	movff	Read_Data@read_address,4009	;volatile
  3407                           
  3408                           ;storage.c: 55: EECON1bits.EEPGD = 0;
  3409  000C48  9EA6               	bcf	4006,7,c	;volatile
  3410                           
  3411                           ;storage.c: 56: EECON1bits.CFGS = 0;
  3412  000C4A  9CA6               	bcf	4006,6,c	;volatile
  3413                           
  3414                           ;storage.c: 57: EECON1bits.RD = 1;
  3415  000C4C  80A6               	bsf	4006,0,c	;volatile
  3416                           
  3417                           ;storage.c: 58: data_read |= EEDATA;
  3418  000C4E  50A8               	movf	4008,w,c	;volatile
  3419  000C50  121F               	iorwf	Read_Data@data_read,f,c
  3420                           
  3421                           ;storage.c: 59: return data_read;
  3422  000C52  C01F  F01D         	movff	Read_Data@data_read,?_Read_Data
  3423  000C56  C020  F01E         	movff	Read_Data@data_read+1,?_Read_Data+1
  3424  000C5A  0012               	return	
  3425  000C5C                     __end_of_Read_Data:
  3426                           	opt stack 0
  3427                           tblptru	equ	0xFF8
  3428                           tblptrh	equ	0xFF7
  3429                           tblptrl	equ	0xFF6
  3430                           tablat	equ	0xFF5
  3431                           prodh	equ	0xFF4
  3432                           prodl	equ	0xFF3
  3433                           intcon	equ	0xFF2
  3434                           postinc0	equ	0xFEE
  3435                           wreg	equ	0xFE8
  3436                           postdec1	equ	0xFE5
  3437                           fsr1l	equ	0xFE1
  3438                           indf2	equ	0xFDF
  3439                           postinc2	equ	0xFDE
  3440                           postdec2	equ	0xFDD
  3441                           plusw2	equ	0xFDB
  3442                           fsr2h	equ	0xFDA
  3443                           fsr2l	equ	0xFD9
  3444                           status	equ	0xFD8
  3445                           
  3446 ;; *************** function _Delay_Routine *****************
  3447 ;; Defined at:
  3448 ;;		line 78 in file "main.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  delay_multip    1    wreg     unsigned char 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  delay_multip    1   29[COMRAM] unsigned char 
  3453 ;;  delay_counte    1   30[COMRAM] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;		None               void
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0, cstack
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1
  3463 ;;      Params:         0       0       0
  3464 ;;      Locals:         2       0       0
  3465 ;;      Temps:          1       0       0
  3466 ;;      Totals:         3       0       0
  3467 ;;Total ram usage:        3 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; Hardware stack levels required when called:    2
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_Check_Buttons
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text19
  3478  000D0C                     __ptext19:
  3479                           	opt stack 0
  3480  000D0C                     _Delay_Routine:
  3481                           	opt stack 27
  3482                           
  3483                           ;incstack = 0
  3484                           ;Delay_Routine@delay_multiplyer stored from wreg
  3485  000D0C  6E1E               	movwf	Delay_Routine@delay_multiplyer,c
  3486                           
  3487                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  3488  000D0E  0E00               	movlw	0
  3489  000D10  6E1F               	movwf	Delay_Routine@delay_counter,c
  3490                           
  3491                           ;main.c: 80: delay_counter++) {
  3492  000D12  D008               	goto	l1736
  3493  000D14                     l1732:
  3494                           
  3495                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  3496  000D14  0E82               	movlw	130
  3497  000D16  6E1D               	movwf	??_Delay_Routine& (0+255),c
  3498  000D18  0EDE               	movlw	222
  3499  000D1A                     u1447:
  3500  000D1A  2EE8               	decfsz	wreg,f,c
  3501  000D1C  D7FE               	goto	u1447
  3502  000D1E  2E1D               	decfsz	??_Delay_Routine& (0+255),f,c
  3503  000D20  D7FC               	goto	u1447
  3504  000D22  2A1F               	incf	Delay_Routine@delay_counter,f,c
  3505  000D24                     l1736:
  3506  000D24  501E               	movf	Delay_Routine@delay_multiplyer,w,c
  3507  000D26  5C1F               	subwf	Delay_Routine@delay_counter,w,c
  3508  000D28  A0D8               	btfss	status,0,c
  3509  000D2A  D7F4               	goto	l1732
  3510                           
  3511                           ;main.c: 82: }
  3512                           ;main.c: 83: __nop();
  3513  000D2C  F000               	nop	
  3514  000D2E  0012               	return		;funcret
  3515  000D30                     __end_of_Delay_Routine:
  3516                           	opt stack 0
  3517                           tblptru	equ	0xFF8
  3518                           tblptrh	equ	0xFF7
  3519                           tblptrl	equ	0xFF6
  3520                           tablat	equ	0xFF5
  3521                           prodh	equ	0xFF4
  3522                           prodl	equ	0xFF3
  3523                           intcon	equ	0xFF2
  3524                           postinc0	equ	0xFEE
  3525                           wreg	equ	0xFE8
  3526                           postdec1	equ	0xFE5
  3527                           fsr1l	equ	0xFE1
  3528                           indf2	equ	0xFDF
  3529                           postinc2	equ	0xFDE
  3530                           postdec2	equ	0xFDD
  3531                           plusw2	equ	0xFDB
  3532                           fsr2h	equ	0xFDA
  3533                           fsr2l	equ	0xFD9
  3534                           status	equ	0xFD8
  3535                           
  3536 ;; *************** function _Isr *****************
  3537 ;; Defined at:
  3538 ;;		line 4 in file "interrupt.c"
  3539 ;; Parameters:    Size  Location     Type
  3540 ;;		None
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  search_index    1   27[COMRAM] unsigned char 
  3543 ;;  pixel_index_    1   26[COMRAM] unsigned char 
  3544 ;;  pixel_index_    1   25[COMRAM] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;		None               void
  3547 ;; Registers used:
  3548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1
  3554 ;;      Params:         0       0       0
  3555 ;;      Locals:         3       0       0
  3556 ;;      Temps:         17       0       0
  3557 ;;      Totals:        20       0       0
  3558 ;;Total ram usage:       20 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    1
  3561 ;; This function calls:
  3562 ;;		_Receive
  3563 ;;		___awdiv
  3564 ;; This function is called by:
  3565 ;;		Interrupt level 2
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	intcode
  3570  000008                     __pintcode:
  3571                           	opt stack 0
  3572  000008                     _Isr:
  3573                           	opt stack 24
  3574                           
  3575                           ;incstack = 0
  3576  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3577  00000A  CFFA F00C          	movff	pclath,??_Isr+3
  3578  00000E  CFFB F00D          	movff	pclatu,??_Isr+4
  3579  000012  CFE9 F00E          	movff	fsr0l,??_Isr+5
  3580  000016  CFEA F00F          	movff	fsr0h,??_Isr+6
  3581  00001A  CFE1 F010          	movff	fsr1l,??_Isr+7
  3582  00001E  CFE2 F011          	movff	fsr1h,??_Isr+8
  3583  000022  CFD9 F012          	movff	fsr2l,??_Isr+9
  3584  000026  CFDA F013          	movff	fsr2h,??_Isr+10
  3585  00002A  CFF3 F014          	movff	prodl,??_Isr+11
  3586  00002E  CFF4 F015          	movff	prodh,??_Isr+12
  3587  000032  CFF6 F016          	movff	tblptrl,??_Isr+13
  3588  000036  CFF7 F017          	movff	tblptrh,??_Isr+14
  3589  00003A  CFF8 F018          	movff	tblptru,??_Isr+15
  3590  00003E  CFF5 F019          	movff	tablat,??_Isr+16
  3591                           
  3592                           ;interrupt.c: 5: if(PIR1bits.RCIF == 1) {
  3593  000042  AA9E               	btfss	3998,5,c	;volatile
  3594  000044  D096               	goto	i2l2066
  3595                           
  3596                           ;interrupt.c: 6: PIR1bits.RCIF = 0;
  3597  000046  9A9E               	bcf	3998,5,c	;volatile
  3598                           
  3599                           ;interrupt.c: 7: if(RCSTAbits.RX9D == 1) {
  3600  000048  A0AB               	btfss	4011,0,c	;volatile
  3601  00004A  D015               	goto	i2l493
  3602                           
  3603                           ;interrupt.c: 8: receive_counter = 0;
  3604  00004C  0E00               	movlw	0
  3605  00004E  6E36               	movwf	_receive_counter,c
  3606                           
  3607                           ;interrupt.c: 9: received[receive_counter] = Receive();
  3608  000050  5036               	movf	_receive_counter,w,c
  3609  000052  0D01               	mullw	1
  3610  000054  0E2C               	movlw	low _received
  3611  000056  24F3               	addwf	prodl,w,c
  3612  000058  6ED9               	movwf	fsr2l,c
  3613  00005A  0E00               	movlw	high _received
  3614  00005C  20F4               	addwfc	prodh,w,c
  3615  00005E  6EDA               	movwf	fsr2h,c
  3616  000060  ECC3  F006         	call	_Receive	;wreg free
  3617  000064  6EDF               	movwf	indf2,c
  3618                           
  3619                           ;interrupt.c: 10: receive_counter++;
  3620  000066  2A36               	incf	_receive_counter,f,c
  3621                           
  3622                           ;interrupt.c: 11: if(received[0] == 0xFF) {
  3623  000068  282C               	incf	_received,w,c
  3624  00006A  A4D8               	btfss	status,2,c
  3625  00006C  D002               	goto	i2l494
  3626                           
  3627                           ;interrupt.c: 12: master_addressed = 1;
  3628  00006E  8242               	bsf	_master_addressed/(0+8),_master_addressed& (0+7),c
  3629                           
  3630                           ;interrupt.c: 13: } else {
  3631  000070  D07F               	goto	i2l2064
  3632  000072                     i2l494:
  3633                           
  3634                           ;interrupt.c: 14: master_addressed = 0;
  3635  000072  9242               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  3636                           
  3637                           ;interrupt.c: 15: }
  3638                           ;interrupt.c: 16: } else if(master_addressed == 1) {
  3639  000074  D07D               	goto	i2l2064
  3640  000076                     i2l493:
  3641  000076  A242               	btfss	_master_addressed/(0+8),_master_addressed& (0+7),c
  3642  000078  D07B               	goto	i2l2064
  3643                           
  3644                           ;interrupt.c: 17: received[receive_counter] = Receive();
  3645  00007A  5036               	movf	_receive_counter,w,c
  3646  00007C  0D01               	mullw	1
  3647  00007E  0E2C               	movlw	low _received
  3648  000080  24F3               	addwf	prodl,w,c
  3649  000082  6ED9               	movwf	fsr2l,c
  3650  000084  0E00               	movlw	high _received
  3651  000086  20F4               	addwfc	prodh,w,c
  3652  000088  6EDA               	movwf	fsr2h,c
  3653  00008A  ECC3  F006         	call	_Receive	;wreg free
  3654  00008E  6EDF               	movwf	indf2,c
  3655                           
  3656                           ;interrupt.c: 18: receive_counter++;
  3657  000090  2A36               	incf	_receive_counter,f,c
  3658                           
  3659                           ;interrupt.c: 19: if(receive_counter > 4) {
  3660  000092  0E04               	movlw	4
  3661  000094  6436               	cpfsgt	_receive_counter,c
  3662  000096  D06C               	goto	i2l2064
  3663                           
  3664                           ;interrupt.c: 20: receive_counter = 0;
  3665  000098  0E00               	movlw	0
  3666  00009A  6E36               	movwf	_receive_counter,c
  3667                           
  3668                           ;interrupt.c: 21: master_addressed = 0;
  3669  00009C  9242               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  3670                           
  3671                           ;interrupt.c: 22: if(received[2] == 'T') {
  3672  00009E  0E54               	movlw	84
  3673  0000A0  182E               	xorwf	_received+2,w,c
  3674  0000A2  A4D8               	btfss	status,2,c
  3675  0000A4  D065               	goto	i2l2064
  3676                           
  3677                           ;interrupt.c: 23: unsigned char search_index = 0xFF;
  3678  0000A6  681C               	setf	Isr@search_index,c
  3679                           
  3680                           ;interrupt.c: 24: unsigned char pixel_index_array = 0;
  3681  0000A8  0E00               	movlw	0
  3682  0000AA  6E1A               	movwf	Isr@pixel_index_array,c
  3683                           
  3684                           ;interrupt.c: 25: unsigned char pixel_index_bit = 0;
  3685  0000AC  0E00               	movlw	0
  3686  0000AE  6E1B               	movwf	Isr@pixel_index_bit,c
  3687                           
  3688                           ;interrupt.c: 26: search_index = (received[1] * 10);
  3689  0000B0  502D               	movf	_received+1,w,c
  3690  0000B2  0D0A               	mullw	10
  3691  0000B4  CFF3 F01C          	movff	prodl,Isr@search_index
  3692                           
  3693                           ;interrupt.c: 27: search_index += received[3];
  3694  0000B8  502F               	movf	_received+3,w,c
  3695  0000BA  261C               	addwf	Isr@search_index,f,c
  3696                           
  3697                           ;interrupt.c: 28: pixel_index_array =
  3698                           ;interrupt.c: 29: pin[search_index].led_address / 8;
  3699  0000BC  501C               	movf	Isr@search_index,w,c
  3700  0000BE  0D06               	mullw	6
  3701  0000C0  0E03               	movlw	3
  3702  0000C2  26F3               	addwf	prodl,f,c
  3703  0000C4  0E00               	movlw	0
  3704  0000C6  22F4               	addwfc	prodh,f,c
  3705  0000C8  0E00               	movlw	low _pin
  3706  0000CA  24F3               	addwf	prodl,w,c
  3707  0000CC  6ED9               	movwf	fsr2l,c
  3708  0000CE  0E01               	movlw	high _pin
  3709  0000D0  20F4               	addwfc	prodh,w,c
  3710  0000D2  6EDA               	movwf	fsr2h,c
  3711  0000D4  50DF               	movf	indf2,w,c
  3712  0000D6  6E09               	movwf	??_Isr& (0+255),c
  3713  0000D8  5009               	movf	??_Isr,w,c
  3714  0000DA  6E01               	movwf	___awdiv@dividend,c
  3715  0000DC  6A02               	clrf	___awdiv@dividend+1,c
  3716  0000DE  0E00               	movlw	0
  3717  0000E0  6E04               	movwf	___awdiv@divisor+1,c
  3718  0000E2  0E08               	movlw	8
  3719  0000E4  6E03               	movwf	___awdiv@divisor,c
  3720  0000E6  EC07  F005         	call	___awdiv	;wreg free
  3721  0000EA  5001               	movf	?___awdiv,w,c
  3722  0000EC  6E1A               	movwf	Isr@pixel_index_array,c
  3723                           
  3724                           ;interrupt.c: 30: pixel_index_bit =
  3725                           ;interrupt.c: 31: pin[search_index].led_address % 8;
  3726  0000EE  501C               	movf	Isr@search_index,w,c
  3727  0000F0  0D06               	mullw	6
  3728  0000F2  0E03               	movlw	3
  3729  0000F4  26F3               	addwf	prodl,f,c
  3730  0000F6  0E00               	movlw	0
  3731  0000F8  22F4               	addwfc	prodh,f,c
  3732  0000FA  0E00               	movlw	low _pin
  3733  0000FC  24F3               	addwf	prodl,w,c
  3734  0000FE  6ED9               	movwf	fsr2l,c
  3735  000100  0E01               	movlw	high _pin
  3736  000102  20F4               	addwfc	prodh,w,c
  3737  000104  6EDA               	movwf	fsr2h,c
  3738  000106  50DF               	movf	indf2,w,c
  3739  000108  0B07               	andlw	7
  3740  00010A  6E1B               	movwf	Isr@pixel_index_bit,c
  3741                           
  3742                           ;interrupt.c: 32: if(received[4] == 1){
  3743  00010C  0430               	decf	_received+4,w,c
  3744  00010E  A4D8               	btfss	status,2,c
  3745  000110  D015               	goto	i2l2060
  3746                           
  3747                           ;interrupt.c: 33: pixels[pixel_index_array] |=
  3748                           ;interrupt.c: 34: (1 << pixel_index_bit);
  3749  000112  C01B  F009         	movff	Isr@pixel_index_bit,??_Isr
  3750  000116  0E01               	movlw	1
  3751  000118  6E0A               	movwf	(??_Isr+1)& (0+255),c
  3752  00011A  2A09               	incf	??_Isr,f,c
  3753  00011C  D002               	goto	i2u115_44
  3754  00011E                     i2u115_45:
  3755  00011E  90D8               	bcf	status,0,c
  3756  000120  360A               	rlcf	??_Isr+1,f,c
  3757  000122                     i2u115_44:
  3758  000122  2E09               	decfsz	??_Isr,f,c
  3759  000124  D7FC               	goto	i2u115_45
  3760  000126  501A               	movf	Isr@pixel_index_array,w,c
  3761  000128  0D01               	mullw	1
  3762  00012A  0E38               	movlw	low _pixels
  3763  00012C  24F3               	addwf	prodl,w,c
  3764  00012E  6ED9               	movwf	fsr2l,c
  3765  000130  0E00               	movlw	high _pixels
  3766  000132  20F4               	addwfc	prodh,w,c
  3767  000134  6EDA               	movwf	fsr2h,c
  3768  000136  500A               	movf	??_Isr+1,w,c
  3769  000138  12DF               	iorwf	indf2,f,c
  3770                           
  3771                           ;interrupt.c: 35: }else if(received[4] == 0) {
  3772  00013A  D01A               	goto	i2l2064
  3773  00013C                     i2l2060:
  3774  00013C  5030               	movf	_received+4,w,c
  3775  00013E  A4D8               	btfss	status,2,c
  3776  000140  D017               	goto	i2l2064
  3777                           
  3778                           ;interrupt.c: 36: pixels[pixel_index_array] &=
  3779                           ;interrupt.c: 37: ~(1 << pixel_index_bit);
  3780  000142  C01B  F009         	movff	Isr@pixel_index_bit,??_Isr
  3781  000146  0E01               	movlw	1
  3782  000148  6E0A               	movwf	(??_Isr+1)& (0+255),c
  3783  00014A  2A09               	incf	??_Isr,f,c
  3784  00014C  D002               	goto	i2u117_44
  3785  00014E                     i2u117_45:
  3786  00014E  90D8               	bcf	status,0,c
  3787  000150  360A               	rlcf	??_Isr+1,f,c
  3788  000152                     i2u117_44:
  3789  000152  2E09               	decfsz	??_Isr,f,c
  3790  000154  D7FC               	goto	i2u117_45
  3791  000156  500A               	movf	??_Isr+1,w,c
  3792  000158  0AFF               	xorlw	255
  3793  00015A  6E0B               	movwf	(??_Isr+2)& (0+255),c
  3794  00015C  501A               	movf	Isr@pixel_index_array,w,c
  3795  00015E  0D01               	mullw	1
  3796  000160  0E38               	movlw	low _pixels
  3797  000162  24F3               	addwf	prodl,w,c
  3798  000164  6ED9               	movwf	fsr2l,c
  3799  000166  0E00               	movlw	high _pixels
  3800  000168  20F4               	addwfc	prodh,w,c
  3801  00016A  6EDA               	movwf	fsr2h,c
  3802  00016C  500B               	movf	??_Isr+2,w,c
  3803  00016E  16DF               	andwf	indf2,f,c
  3804  000170                     i2l2064:
  3805                           
  3806                           ;interrupt.c: 38: }
  3807                           ;interrupt.c: 39: }
  3808                           ;interrupt.c: 40: }
  3809                           ;interrupt.c: 41: }
  3810                           ;interrupt.c: 42: __nop();
  3811  000170  F000               	nop	
  3812  000172                     i2l2066:
  3813                           
  3814                           ;interrupt.c: 48: }if(PIR1bits.CCP1IF == 1) {
  3815  000172  A49E               	btfss	3998,2,c	;volatile
  3816  000174  D003               	goto	i2l504
  3817                           
  3818                           ;interrupt.c: 49: PIR1bits.CCP1IF = 0;
  3819  000176  949E               	bcf	3998,2,c	;volatile
  3820                           
  3821                           ;interrupt.c: 50: current_time++;
  3822  000178  4A31               	infsnz	_current_time,f,c
  3823  00017A  2A32               	incf	_current_time+1,f,c
  3824  00017C                     i2l504:
  3825  00017C  C019  FFF5         	movff	??_Isr+16,tablat
  3826  000180  C018  FFF8         	movff	??_Isr+15,tblptru
  3827  000184  C017  FFF7         	movff	??_Isr+14,tblptrh
  3828  000188  C016  FFF6         	movff	??_Isr+13,tblptrl
  3829  00018C  C015  FFF4         	movff	??_Isr+12,prodh
  3830  000190  C014  FFF3         	movff	??_Isr+11,prodl
  3831  000194  C013  FFDA         	movff	??_Isr+10,fsr2h
  3832  000198  C012  FFD9         	movff	??_Isr+9,fsr2l
  3833  00019C  C011  FFE2         	movff	??_Isr+8,fsr1h
  3834  0001A0  C010  FFE1         	movff	??_Isr+7,fsr1l
  3835  0001A4  C00F  FFEA         	movff	??_Isr+6,fsr0h
  3836  0001A8  C00E  FFE9         	movff	??_Isr+5,fsr0l
  3837  0001AC  C00D  FFFB         	movff	??_Isr+4,pclatu
  3838  0001B0  C00C  FFFA         	movff	??_Isr+3,pclath
  3839  0001B4  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3840  0001B6  0011               	retfie		f
  3841  0001B8                     __end_of_Isr:
  3842                           	opt stack 0
  3843                           pclatu	equ	0xFFB
  3844                           pclath	equ	0xFFA
  3845                           tblptru	equ	0xFF8
  3846                           tblptrh	equ	0xFF7
  3847                           tblptrl	equ	0xFF6
  3848                           tablat	equ	0xFF5
  3849                           prodh	equ	0xFF4
  3850                           prodl	equ	0xFF3
  3851                           intcon	equ	0xFF2
  3852                           postinc0	equ	0xFEE
  3853                           fsr0h	equ	0xFEA
  3854                           fsr0l	equ	0xFE9
  3855                           wreg	equ	0xFE8
  3856                           postdec1	equ	0xFE5
  3857                           fsr1h	equ	0xFE2
  3858                           fsr1l	equ	0xFE1
  3859                           indf2	equ	0xFDF
  3860                           postinc2	equ	0xFDE
  3861                           postdec2	equ	0xFDD
  3862                           plusw2	equ	0xFDB
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           status	equ	0xFD8
  3866                           
  3867 ;; *************** function ___awdiv *****************
  3868 ;; Defined at:
  3869 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  dividend        2    0[COMRAM] int 
  3872 ;;  divisor         2    2[COMRAM] int 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  quotient        2    6[COMRAM] int 
  3875 ;;  sign            1    5[COMRAM] unsigned char 
  3876 ;;  counter         1    4[COMRAM] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  2    0[COMRAM] int 
  3879 ;; Registers used:
  3880 ;;		wreg, status,2, status,0
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1
  3886 ;;      Params:         4       0       0
  3887 ;;      Locals:         4       0       0
  3888 ;;      Temps:          0       0       0
  3889 ;;      Totals:         8       0       0
  3890 ;;Total ram usage:        8 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; This function calls:
  3893 ;;		Nothing
  3894 ;; This function is called by:
  3895 ;;		_Isr
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text21
  3900  000A0E                     __ptext21:
  3901                           	opt stack 0
  3902  000A0E                     ___awdiv:
  3903                           	opt stack 24
  3904                           
  3905                           ;incstack = 0
  3906  000A0E  0E00               	movlw	0
  3907  000A10  6E06               	movwf	___awdiv@sign,c
  3908  000A12  AE04               	btfss	___awdiv@divisor+1,7,c
  3909  000A14  D006               	goto	i2l1972
  3910  000A16  6C03               	negf	___awdiv@divisor,c
  3911  000A18  1E04               	comf	___awdiv@divisor+1,f,c
  3912  000A1A  B0D8               	btfsc	status,0,c
  3913  000A1C  2A04               	incf	___awdiv@divisor+1,f,c
  3914  000A1E  0E01               	movlw	1
  3915  000A20  6E06               	movwf	___awdiv@sign,c
  3916  000A22                     i2l1972:
  3917  000A22  AE02               	btfss	___awdiv@dividend+1,7,c
  3918  000A24  D006               	goto	i2l1978
  3919  000A26  6C01               	negf	___awdiv@dividend,c
  3920  000A28  1E02               	comf	___awdiv@dividend+1,f,c
  3921  000A2A  B0D8               	btfsc	status,0,c
  3922  000A2C  2A02               	incf	___awdiv@dividend+1,f,c
  3923  000A2E  0E01               	movlw	1
  3924  000A30  1A06               	xorwf	___awdiv@sign,f,c
  3925  000A32                     i2l1978:
  3926  000A32  0E00               	movlw	0
  3927  000A34  6E08               	movwf	___awdiv@quotient+1,c
  3928  000A36  0E00               	movlw	0
  3929  000A38  6E07               	movwf	___awdiv@quotient,c
  3930  000A3A  5003               	movf	___awdiv@divisor,w,c
  3931  000A3C  1004               	iorwf	___awdiv@divisor+1,w,c
  3932  000A3E  B4D8               	btfsc	status,2,c
  3933  000A40  D01C               	goto	i2l2000
  3934  000A42  0E01               	movlw	1
  3935  000A44  6E05               	movwf	___awdiv@counter,c
  3936  000A46  D004               	goto	i2l1986
  3937  000A48                     i2l1984:
  3938  000A48  90D8               	bcf	status,0,c
  3939  000A4A  3603               	rlcf	___awdiv@divisor,f,c
  3940  000A4C  3604               	rlcf	___awdiv@divisor+1,f,c
  3941  000A4E  2A05               	incf	___awdiv@counter,f,c
  3942  000A50                     i2l1986:
  3943  000A50  AE04               	btfss	___awdiv@divisor+1,7,c
  3944  000A52  D7FA               	goto	i2l1984
  3945  000A54                     i2l1988:
  3946  000A54  90D8               	bcf	status,0,c
  3947  000A56  3607               	rlcf	___awdiv@quotient,f,c
  3948  000A58  3608               	rlcf	___awdiv@quotient+1,f,c
  3949  000A5A  5003               	movf	___awdiv@divisor,w,c
  3950  000A5C  5C01               	subwf	___awdiv@dividend,w,c
  3951  000A5E  5004               	movf	___awdiv@divisor+1,w,c
  3952  000A60  5802               	subwfb	___awdiv@dividend+1,w,c
  3953  000A62  A0D8               	btfss	status,0,c
  3954  000A64  D005               	goto	i2l1996
  3955  000A66  5003               	movf	___awdiv@divisor,w,c
  3956  000A68  5E01               	subwf	___awdiv@dividend,f,c
  3957  000A6A  5004               	movf	___awdiv@divisor+1,w,c
  3958  000A6C  5A02               	subwfb	___awdiv@dividend+1,f,c
  3959  000A6E  8007               	bsf	___awdiv@quotient,0,c
  3960  000A70                     i2l1996:
  3961  000A70  90D8               	bcf	status,0,c
  3962  000A72  3204               	rrcf	___awdiv@divisor+1,f,c
  3963  000A74  3203               	rrcf	___awdiv@divisor,f,c
  3964  000A76  2E05               	decfsz	___awdiv@counter,f,c
  3965  000A78  D7ED               	goto	i2l1988
  3966  000A7A                     i2l2000:
  3967  000A7A  5006               	movf	___awdiv@sign,w,c
  3968  000A7C  B4D8               	btfsc	status,2,c
  3969  000A7E  D004               	goto	i2l2004
  3970  000A80  6C07               	negf	___awdiv@quotient,c
  3971  000A82  1E08               	comf	___awdiv@quotient+1,f,c
  3972  000A84  B0D8               	btfsc	status,0,c
  3973  000A86  2A08               	incf	___awdiv@quotient+1,f,c
  3974  000A88                     i2l2004:
  3975  000A88  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3976  000A8C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3977  000A90  0012               	return	
  3978  000A92                     __end_of___awdiv:
  3979                           	opt stack 0
  3980                           pclatu	equ	0xFFB
  3981                           pclath	equ	0xFFA
  3982                           tblptru	equ	0xFF8
  3983                           tblptrh	equ	0xFF7
  3984                           tblptrl	equ	0xFF6
  3985                           tablat	equ	0xFF5
  3986                           prodh	equ	0xFF4
  3987                           prodl	equ	0xFF3
  3988                           intcon	equ	0xFF2
  3989                           postinc0	equ	0xFEE
  3990                           fsr0h	equ	0xFEA
  3991                           fsr0l	equ	0xFE9
  3992                           wreg	equ	0xFE8
  3993                           postdec1	equ	0xFE5
  3994                           fsr1h	equ	0xFE2
  3995                           fsr1l	equ	0xFE1
  3996                           indf2	equ	0xFDF
  3997                           postinc2	equ	0xFDE
  3998                           postdec2	equ	0xFDD
  3999                           plusw2	equ	0xFDB
  4000                           fsr2h	equ	0xFDA
  4001                           fsr2l	equ	0xFD9
  4002                           status	equ	0xFD8
  4003                           
  4004 ;; *************** function _Receive *****************
  4005 ;; Defined at:
  4006 ;;		line 31 in file "communication.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      unsigned char 
  4013 ;; Registers used:
  4014 ;;		wreg, status,2
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1
  4020 ;;      Params:         0       0       0
  4021 ;;      Locals:         0       0       0
  4022 ;;      Temps:          0       0       0
  4023 ;;      Totals:         0       0       0
  4024 ;;Total ram usage:        0 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_Isr
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           
  4033                           	psect	text22
  4034  000D86                     __ptext22:
  4035                           	opt stack 0
  4036  000D86                     _Receive:
  4037                           	opt stack 24
  4038                           
  4039                           ;communication.c: 32: if(RCSTA1bits.OERR == 1) {
  4040                           
  4041                           ;incstack = 0
  4042  000D86  A2AB               	btfss	4011,1,c	;volatile
  4043  000D88  D004               	goto	i2l445
  4044                           
  4045                           ;communication.c: 33: RCSTA1bits.CREN = 0;
  4046  000D8A  98AB               	bcf	4011,4,c	;volatile
  4047                           
  4048                           ;communication.c: 34: RCSTA1bits.CREN = 1;
  4049  000D8C  88AB               	bsf	4011,4,c	;volatile
  4050                           
  4051                           ;communication.c: 35: overrun = 1;
  4052  000D8E  0E01               	movlw	1
  4053  000D90  6E34               	movwf	_overrun,c
  4054  000D92                     i2l445:
  4055                           
  4056                           ;communication.c: 36: }
  4057                           ;communication.c: 37: return (RCREG1);
  4058  000D92  50AE               	movf	4014,w,c	;volatile
  4059  000D94  0012               	return	
  4060  000D96                     __end_of_Receive:
  4061                           	opt stack 0
  4062                           pclatu	equ	0xFFB
  4063                           pclath	equ	0xFFA
  4064                           tblptru	equ	0xFF8
  4065                           tblptrh	equ	0xFF7
  4066                           tblptrl	equ	0xFF6
  4067                           tablat	equ	0xFF5
  4068                           prodh	equ	0xFF4
  4069                           prodl	equ	0xFF3
  4070                           intcon	equ	0xFF2
  4071                           postinc0	equ	0xFEE
  4072                           fsr0h	equ	0xFEA
  4073                           fsr0l	equ	0xFE9
  4074                           wreg	equ	0xFE8
  4075                           postdec1	equ	0xFE5
  4076                           fsr1h	equ	0xFE2
  4077                           fsr1l	equ	0xFE1
  4078                           indf2	equ	0xFDF
  4079                           postinc2	equ	0xFDE
  4080                           postdec2	equ	0xFDD
  4081                           plusw2	equ	0xFDB
  4082                           fsr2h	equ	0xFDA
  4083                           fsr2l	equ	0xFD9
  4084                           status	equ	0xFD8
  4085                           pclatu	equ	0xFFB
  4086                           pclath	equ	0xFFA
  4087                           tblptru	equ	0xFF8
  4088                           tblptrh	equ	0xFF7
  4089                           tblptrl	equ	0xFF6
  4090                           tablat	equ	0xFF5
  4091                           prodh	equ	0xFF4
  4092                           prodl	equ	0xFF3
  4093                           intcon	equ	0xFF2
  4094                           postinc0	equ	0xFEE
  4095                           fsr0h	equ	0xFEA
  4096                           fsr0l	equ	0xFE9
  4097                           wreg	equ	0xFE8
  4098                           postdec1	equ	0xFE5
  4099                           fsr1h	equ	0xFE2
  4100                           fsr1l	equ	0xFE1
  4101                           indf2	equ	0xFDF
  4102                           postinc2	equ	0xFDE
  4103                           postdec2	equ	0xFDD
  4104                           plusw2	equ	0xFDB
  4105                           fsr2h	equ	0xFDA
  4106                           fsr2l	equ	0xFD9
  4107                           status	equ	0xFD8
  4108                           
  4109                           	psect	rparam
  4110  0000                     pclatu	equ	0xFFB
  4111                           pclath	equ	0xFFA
  4112                           tblptru	equ	0xFF8
  4113                           tblptrh	equ	0xFF7
  4114                           tblptrl	equ	0xFF6
  4115                           tablat	equ	0xFF5
  4116                           prodh	equ	0xFF4
  4117                           prodl	equ	0xFF3
  4118                           intcon	equ	0xFF2
  4119                           postinc0	equ	0xFEE
  4120                           fsr0h	equ	0xFEA
  4121                           fsr0l	equ	0xFE9
  4122                           wreg	equ	0xFE8
  4123                           postdec1	equ	0xFE5
  4124                           fsr1h	equ	0xFE2
  4125                           fsr1l	equ	0xFE1
  4126                           indf2	equ	0xFDF
  4127                           postinc2	equ	0xFDE
  4128                           postdec2	equ	0xFDD
  4129                           plusw2	equ	0xFDB
  4130                           fsr2h	equ	0xFDA
  4131                           fsr2l	equ	0xFD9
  4132                           status	equ	0xFD8
  4133                           
  4134                           	psect	temp
  4135  000043                     btemp:
  4136                           	opt stack 0
  4137  000043                     	ds	1
  4138  0000                     int$flags	set	btemp
  4139                           pclatu	equ	0xFFB
  4140                           pclath	equ	0xFFA
  4141                           tblptru	equ	0xFF8
  4142                           tblptrh	equ	0xFF7
  4143                           tblptrl	equ	0xFF6
  4144                           tablat	equ	0xFF5
  4145                           prodh	equ	0xFF4
  4146                           prodl	equ	0xFF3
  4147                           intcon	equ	0xFF2
  4148                           postinc0	equ	0xFEE
  4149                           fsr0h	equ	0xFEA
  4150                           fsr0l	equ	0xFE9
  4151                           wreg	equ	0xFE8
  4152                           postdec1	equ	0xFE5
  4153                           fsr1h	equ	0xFE2
  4154                           fsr1l	equ	0xFE1
  4155                           indf2	equ	0xFDF
  4156                           postinc2	equ	0xFDE
  4157                           postdec2	equ	0xFDD
  4158                           plusw2	equ	0xFDB
  4159                           fsr2h	equ	0xFDA
  4160                           fsr2l	equ	0xFD9
  4161                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    0
    Data        180
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      66
    BANK0           160      5       5
    BANK1           256      0     180

Pointer List with Targets:

    Write_Display_Byte@write_data	PTR unsigned char  size(2) Largest target is 7
		 -> pixels(COMRAM[7]), 

    Evaluate_Display@evaluate	PTR unsigned char  size(2) Largest target is 3
		 -> signs(COMRAM[3]), 

    Set_Bits@bits	PTR const unsigned char  size(3) Largest target is 8191
		 -> ROM(CODE[8191]), STR_13(CODE[2]), STR_12(CODE[7]), STR_11(CODE[6]), 
		 -> STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[7]), 
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[3]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_Set_Display
    _Check_Buttons->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits

Critical Paths under _Isr in COMRAM

    _Isr->___awdiv

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _Check_Buttons->_Set_Display

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9534
                      _Check_Buttons
                   _Check_Detonators
                               _Init
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Detonators                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0    4999
                                              3 BANK0      2     2      0
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Set_Display                                          4     1      3    4535
                                             42 COMRAM     1     1      0
                                              0 BANK0      3     0      3
                   _Evaluate_Display
                     _Evaluate_Signs
                 _Write_Display_Byte
 ---------------------------------------------------------------------------------
 (2) _Write_Display_Byte                                   7     5      2     154
                                             28 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _Evaluate_Signs                                       3     1      2    1652
                                             39 COMRAM     3     1      2
                   _Evaluate_Display
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     287
                                             28 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Display                                     3     1      2    1188
                                             36 COMRAM     3     1      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (4) _Set_Bits                                             8     5      3    1016
                                             28 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     346
                                             28 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2      72
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      46
                                             28 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Isr                                                 20    20      0     567
                                              8 COMRAM    20    20      0
                            _Receive
                            ___awdiv
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
       _Write_Display_Byte
   _Check_Detonators
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Set_Display
     _Evaluate_Display
       _Set_Bits
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
       ___lwmod
     _Write_Display_Byte

 _Isr (ROOT)
   _Receive
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      5       5       4        3.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2B      42       1       70.2%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB       6        0.0%
DATA                 0      0      FB       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Dec 22 21:04:43 2016

      Evaluate_Display@evaluate 0025                              l90 03A0                              l82 025C  
                            l94 044A                              l86 0304                              l98 058E  
                  ___awdiv@sign 0006                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                           l301 0B64                             l304 0B8E                             l452 0C12  
                           l376 0AE4                             l917 0BD2                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                             _Isr 0008                             _pin 0100  
                _Evaluate_Signs 0A92                             prod 000FF3                             wreg 000FE8  
             Set_Bits@Bitoutput 0024                      _TXSTA1bits 000FAC                    __CFG_LVP$OFF 000000  
                          ?_Isr 0001                            l2110 02D2                            l2210 05F6  
                          l2202 05AA                            l2124 036E                            l2160 04AA  
                          l2232 0C9C                            l2074 0AFA                            l2090 0B32  
                          l2138 0418                            l2092 0B3C                            l2164 04B4  
                          l2156 0466                            l1630 08B6                            l1702 0A96  
                          l2086 0B24                            l2174 04CA                            l1632 08BA  
                          l1624 08AA                            l1640 08C6                            l2168 04BE  
                          l2176 04DE                            l1634 08BE                            l1626 08AE  
                          l1642 0916                            l1650 06E8                            l1706 0A9E  
                          l1732 0D14                            l1636 08C2                            l1628 08B2  
                          l1644 0918                            l1660 0760                            l1652 0700  
                          l1670 07D8                            l1662 0778                            l1654 0718  
                          l1736 0D24                            l1672 07F0                            l1664 0790  
                          l1656 0730                            l1680 0894                            l1674 0808  
                          l1666 07A8                            l1658 0748                            l1682 0896  
                          l1690 0BB0                            l1676 0820                            l1668 07C0  
                          l1692 0BB4                            l1678 0832                            l1696 0BC8  
                          l1688 0BA8                            STR_1 0209                            STR_2 0243  
                          STR_3 022B                            STR_4 0225                            STR_5 023D  
                          STR_6 0231                            STR_7 021E                            STR_8 0242  
                          STR_9 0201                            u1447 0D1A                            _Init 0D30  
                          _main 0C98                            fsr0h 000FEA                            fsr1h 000FE2  
                          fsr0l 000FE9                            fsr2h 000FDA                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            btemp 0043  
                 __CFG_BORV$190 000000                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 01B8                   __CFG_IESO$OFF 000000  
                Save_Data@store 001D              _Write_Display_Byte 0BDC                    ___param_bank 000010  
                 _InitInterrupt 0D96                           ??_Isr 0009                 __end_of_Receive 0D96  
           ?_Write_Display_Byte 001D                    _BAUDCON1bits 000FB8                           ?_Init 0001  
                         ?_main 0001                 __end_of___awdiv 0A92                           _EEADR 000FA9  
                         STR_10 0210                           STR_11 0237                           STR_12 0217  
                         STR_13 0229          __end_of_Evaluate_Signs 0AF6                 ___awdiv@divisor 0003  
             _InitMiscellaneous 0DA0                 __end_of___lwmod 0BDC                           i2l504 017C  
                         i2l445 0D92                           i2l493 0076                           i2l494 0072  
               ___awdiv@counter 0005                           _TMR1H 000FCF                           _TMR1L 000FCE  
                         _PORTA 000F80                           _PORTB 000F81                           _PORTC 000F82  
                         _PORTE 000F84                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISE 000F96                   __CFG_WRT0$OFF 000000  
      __end_of_InitTransmission 0D0C                   __CFG_WRT1$OFF 000000              ?_InitMiscellaneous 0001  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
              _Evaluate_Display 06E0                  __CFG_EBTRB$OFF 000000                           _signs 003F  
            __CFG_MCLRE$EXTMCLR 000000            ??_Write_Display_Byte 001F                  __pbitbssCOMRAM 0210  
                __CFG_BOREN$OFF 000000             ??_InitMiscellaneous 001D                           tablat 000FF5  
                         plusw2 000FDB                           status 000FD8                  ?_InitInterrupt 0001  
               __initialization 0C5C                    __end_of_Init 0D4E                    __end_of_main 0CC0  
              __end_of_InitPort 0D86                __end_of_InitTris 0D74          Set_Display@information 0060  
     __end_of_InitMiscellaneous 0DA6                          ??_Init 001D                   ??_Set_Display 002B  
                        ??_main 002C                __end_of_Set_Bits 095A                 ?_Evaluate_Signs 0028  
                 __activetblptr 000002                          _EEDATA 000FA8                          _CCPR1H 000FBF  
                        _CCPR1L 000FBE                          _EECON2 000FA7                ___awdiv@dividend 0001  
                        _ANSELA 000F38                          _ANSELB 000F39                          _ANSELC 000F3A  
                        i2l2000 0A7A                          i2l2004 0A88                          i2l2060 013C  
                        i2l2064 0170                          i2l2066 0172                  __CFG_WDTEN$OFF 000000  
                        i2l1972 0A22                          i2l1984 0A48                          i2l1986 0A50  
                        i2l1978 0A32                          i2l1996 0A70                          i2l1988 0A54  
                        _RCREG1 000FAE                          _OSCCON 000FD3              __size_of_InitAnsel 0014  
                        _SPBRG1 000FAF                          _SSP1IF 007CF3              __size_of_Read_Data 0040  
            __size_of_InitTimer 0028                          _TXREG1 000FAD                       ??_Receive 0001  
                __CFG_XINST$OFF 000000                    _CCPTMRS0bits 000F49              __size_of_Save_Data 0050  
                     ??___awdiv 0005                       ??___lwmod 0021                          clear_0 0C64  
              ___awdiv@quotient 0007                          _pixels 0038          __size_of_Check_Buttons 0498  
Evaluate_Signs@evaluation_value 0028                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8             __end_of_Set_Display 0B4A  
               __CFG_HFOFST$OFF 000000            Isr@pixel_index_array 001A                      __accesstop 0060  
       __end_of__initialization 0C8A                 __CFG_PBADEN$OFF 000000                 ??_InitInterrupt 001D  
                 ___rparam_used 000001                  __pcstackCOMRAM 0001       __size_of_Check_Detonators 0002  
                  __pidataBANK1 095A      __size_of_InitMiscellaneous 0006               __end_of_InitAnsel 0D62  
             __end_of_Read_Data 0C5C               __end_of_InitTimer 0CE8               __end_of_Save_Data 0B9A  
            Isr@pixel_index_bit 001B                 __CFG_PLLCFG$OFF 000000                   _Check_Buttons 0248  
                     ?_InitPort 0001                       ?_InitTris 0001                       ?_Set_Bits 001D  
            __CFG_CCP2MX$PORTC1 000000        __end_of_Evaluate_Display 08A0              __CFG_CCP3MX$PORTB5 000000  
                   _Set_Display 0AF6          __size_of_Delay_Routine 0024               ?_InitTransmission 0001  
             __CFG_PRICLKEN$OFF 000000                         _SSP1BUF 000FC9              ??_InitTransmission 001D  
                ?_Check_Buttons 0001                      ??_InitPort 001D                      ??_InitTris 001D  
                    ??_Set_Bits 0020                 __CFG_PWRTEN$OFF 000000                         _Receive 0D86  
                       __Hparam 0000                         __Lparam 0000                         ___awdiv 0A0E  
              ??_Evaluate_Signs 002A                         ___lwmod 0B9A                    __psmallconst 0200  
               __CFG_STVREN$OFF 000000                         __pcinit 0C5C                         __ramtop 0200  
                       __ptext0 0C98                         __ptext1 0D30                         __ptext2 0D62  
                       __ptext3 0CE8                         __ptext4 0CC0                         __ptext5 0D74  
                       __ptext6 0DA0                         __ptext7 0D96                         __ptext8 0D4E  
                       __ptext9 0DA6                       _T1CONbits 000FCD                    __size_of_Isr 01B0  
               Set_Display@type 002B                       _T3CONbits 000FB1                         _overrun 0034  
          end_of_initialization 0C8A     __size_of_Write_Display_Byte 0040                   __Lmediumconst 0000  
                 _Delay_Routine 0D0C                       _RCSTAbits 000FAB                _Check_Detonators 0DA6  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE                       _PORTBbits 000F81                       _PORTCbits 000F82  
                     _TRISCbits 000F94                 ??_Check_Buttons 0063                  ?_Delay_Routine 0001  
                   _CCP1CONbits 000FBD                    Set_Bits@bits 001D             start_initialization 0C5C  
                     _InitAnsel 0D4E                    _ignite_ready 0210                     __end_of_Isr 01B8  
                     _Read_Data 0C1C                       _InitTimer 0CC0                Set_Bits@bitcount 0023  
                     _Save_Data 0B4A               __size_of_InitPort 0012               __size_of_InitTris 0012  
         __end_of_InitInterrupt 0DA0               __size_of_Set_Bits 00BA               ?_Evaluate_Display 0025  
                   __pdataBANK1 0100              ??_Evaluate_Display 0027                  _slave_selected 0037  
                  ?_Set_Display 0060          Save_Data@store_address 001F                     __pbssCOMRAM 002C  
                    ?_InitAnsel 0001                   __pcstackBANK0 0060                      ?_Read_Data 001D  
                    ?_InitTimer 0001                 ??_Delay_Routine 001D                      ?_Save_Data 001D  
                  _current_time 0031                _master_addressed 0211                        ?_Receive 0001  
     __size_of_InitTransmission 0024           Read_Data@read_address 0021                       __pintcode 0008  
                      ?___awdiv 0001                        ?___lwmod 001D                     __smallconst 0200  
      __end_of_Check_Detonators 0DA8                        _PIE1bits 000F9D                        i2u115_44 0122  
                      i2u115_45 011E                        i2u117_44 0152                        i2u117_45 014E  
                      _PIR1bits 000F9E                        _PIR2bits 000FA1                __CFG_WDTPS$32768 000000  
                      _SSP1CON1 000FC6                        _SSP1STAT 000FC7                     ??_InitAnsel 001D  
               _receive_counter 0036                     ??_Read_Data 001F                     ??_InitTimer 001D  
    __end_of_Write_Display_Byte 0C1C                       copy_data0 0C7E                        _InitPort 0D74  
                      _InitTris 0D62                     ??_Save_Data 0020                      _EECON1bits 000FA6  
               Isr@search_index 001C                        _Set_Bits 08A0                    _pin_selected 0035  
                      __Hrparam 0000                __size_of_Receive 0010                        __Lrparam 0000  
             __CFG_P2BMX$PORTB5 000000                __size_of___awdiv 0084                __size_of___lwmod 0042  
          __size_of_Set_Display 0054         __size_of_Evaluate_Signs 0064                        __ptext10 0248  
                      __ptext11 0AF6                        __ptext12 0BDC                        __ptext21 0A0E  
                      __ptext13 0A92                        __ptext22 0D86                        __ptext14 0B9A  
                      __ptext15 06E0                        __ptext16 08A0                        __ptext17 0B4A  
                      __ptext18 0C1C                        __ptext19 0D0C           __end_of_Check_Buttons 06E0  
              Set_Display@value 0061                   __size_of_Init 001E                   __size_of_main 0028  
                      _received 002C                _InitTransmission 0CE8      Delay_Routine@delay_counter 001F  
                      _testflag 0212                        int$flags 0043            Evaluate_Display@size 0027  
  Write_Display_Byte@write_data 001D      Evaluate_Signs@valuecounter 002A                      _INTCONbits 000FF2  
     __size_of_Evaluate_Display 01C0              Read_Data@data_read 001F                        intlevel2 0000  
              ___lwmod@dividend 001D       Write_Display_Byte@counter 0023                      _RCSTA1bits 000FAB  
               _display_counter 0033                 ___lwmod@divisor 001F   Delay_Routine@delay_multiplyer 001E  
               ___lwmod@counter 0021               __CFG_T3CMX$PORTC0 000000          __size_of_InitInterrupt 000A  
             ?_Check_Detonators 0001              ??_Check_Detonators 001D           __end_of_Delay_Routine 0D30  
             __CFG_FOSC$INTIO67 000000  
