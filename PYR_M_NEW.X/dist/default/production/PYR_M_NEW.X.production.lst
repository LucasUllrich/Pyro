

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Dec 31 20:20:39 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46  0000                     
    47                           	psect	idataBANK1
    48  000B0E                     __pidataBANK1:
    49                           	opt stack 0
    50                           
    51                           ;initializer for _pin
    52  000B0E  00                 	db	0
    53  000B0F  00                 	db	0
    54  000B10  00                 	db	0
    55  000B11  1F                 	db	31
    56  000B12  00                 	db	0
    57  000B13  00                 	db	0
    58  000B14  00                 	db	0
    59  000B15  01                 	db	1
    60  000B16  01                 	db	1
    61  000B17  1E                 	db	30
    62  000B18  00                 	db	0
    63  000B19  00                 	db	0
    64  000B1A  00                 	db	0
    65  000B1B  02                 	db	2
    66  000B1C  02                 	db	2
    67  000B1D  1D                 	db	29
    68  000B1E  00                 	db	0
    69  000B1F  00                 	db	0
    70  000B20  00                 	db	0
    71  000B21  03                 	db	3
    72  000B22  03                 	db	3
    73  000B23  1C                 	db	28
    74  000B24  00                 	db	0
    75  000B25  00                 	db	0
    76  000B26  00                 	db	0
    77  000B27  04                 	db	4
    78  000B28  04                 	db	4
    79  000B29  1B                 	db	27
    80  000B2A  00                 	db	0
    81  000B2B  00                 	db	0
    82  000B2C  00                 	db	0
    83  000B2D  05                 	db	5
    84  000B2E  05                 	db	5
    85  000B2F  1A                 	db	26
    86  000B30  00                 	db	0
    87  000B31  00                 	db	0
    88  000B32  00                 	db	0
    89  000B33  06                 	db	6
    90  000B34  06                 	db	6
    91  000B35  19                 	db	25
    92  000B36  00                 	db	0
    93  000B37  00                 	db	0
    94  000B38  00                 	db	0
    95  000B39  07                 	db	7
    96  000B3A  07                 	db	7
    97  000B3B  18                 	db	24
    98  000B3C  00                 	db	0
    99  000B3D  00                 	db	0
   100  000B3E  00                 	db	0
   101  000B3F  08                 	db	8
   102  000B40  08                 	db	8
   103  000B41  27                 	db	39
   104  000B42  00                 	db	0
   105  000B43  00                 	db	0
   106  000B44  00                 	db	0
   107  000B45  09                 	db	9
   108  000B46  09                 	db	9
   109  000B47  26                 	db	38
   110  000B48  00                 	db	0
   111  000B49  00                 	db	0
   112  000B4A  01                 	db	1
   113  000B4B  00                 	db	0
   114  000B4C  0A                 	db	10
   115  000B4D  25                 	db	37
   116  000B4E  00                 	db	0
   117  000B4F  00                 	db	0
   118  000B50  01                 	db	1
   119  000B51  01                 	db	1
   120  000B52  0B                 	db	11
   121  000B53  24                 	db	36
   122  000B54  00                 	db	0
   123  000B55  00                 	db	0
   124  000B56  01                 	db	1
   125  000B57  02                 	db	2
   126  000B58  0C                 	db	12
   127  000B59  23                 	db	35
   128  000B5A  00                 	db	0
   129  000B5B  00                 	db	0
   130  000B5C  01                 	db	1
   131  000B5D  03                 	db	3
   132  000B5E  0D                 	db	13
   133  000B5F  22                 	db	34
   134  000B60  00                 	db	0
   135  000B61  00                 	db	0
   136  000B62  01                 	db	1
   137  000B63  04                 	db	4
   138  000B64  0E                 	db	14
   139  000B65  21                 	db	33
   140  000B66  00                 	db	0
   141  000B67  00                 	db	0
   142  000B68  01                 	db	1
   143  000B69  05                 	db	5
   144  000B6A  0F                 	db	15
   145  000B6B  20                 	db	32
   146  000B6C  00                 	db	0
   147  000B6D  00                 	db	0
   148  000B6E  01                 	db	1
   149  000B6F  06                 	db	6
   150  000B70  10                 	db	16
   151  000B71  2F                 	db	47
   152  000B72  00                 	db	0
   153  000B73  00                 	db	0
   154  000B74  01                 	db	1
   155  000B75  07                 	db	7
   156  000B76  11                 	db	17
   157  000B77  2E                 	db	46
   158  000B78  00                 	db	0
   159  000B79  00                 	db	0
   160  000B7A  01                 	db	1
   161  000B7B  08                 	db	8
   162  000B7C  12                 	db	18
   163  000B7D  2D                 	db	45
   164  000B7E  00                 	db	0
   165  000B7F  00                 	db	0
   166  000B80  01                 	db	1
   167  000B81  09                 	db	9
   168  000B82  13                 	db	19
   169  000B83  2C                 	db	44
   170  000B84  00                 	db	0
   171  000B85  00                 	db	0
   172  000B86  02                 	db	2
   173  000B87  00                 	db	0
   174  000B88  14                 	db	20
   175  000B89  2B                 	db	43
   176  000B8A  00                 	db	0
   177  000B8B  00                 	db	0
   178  000B8C  02                 	db	2
   179  000B8D  01                 	db	1
   180  000B8E  15                 	db	21
   181  000B8F  2A                 	db	42
   182  000B90  00                 	db	0
   183  000B91  00                 	db	0
   184  000B92  02                 	db	2
   185  000B93  02                 	db	2
   186  000B94  16                 	db	22
   187  000B95  29                 	db	41
   188  000B96  00                 	db	0
   189  000B97  00                 	db	0
   190  000B98  02                 	db	2
   191  000B99  03                 	db	3
   192  000B9A  17                 	db	23
   193  000B9B  28                 	db	40
   194  000B9C  00                 	db	0
   195  000B9D  00                 	db	0
   196  000B9E  02                 	db	2
   197  000B9F  04                 	db	4
   198  000BA0  18                 	db	24
   199  000BA1  35                 	db	53
   200  000BA2  00                 	db	0
   201  000BA3  00                 	db	0
   202  000BA4  02                 	db	2
   203  000BA5  05                 	db	5
   204  000BA6  19                 	db	25
   205  000BA7  34                 	db	52
   206  000BA8  00                 	db	0
   207  000BA9  00                 	db	0
   208  000BAA  02                 	db	2
   209  000BAB  06                 	db	6
   210  000BAC  1A                 	db	26
   211  000BAD  33                 	db	51
   212  000BAE  00                 	db	0
   213  000BAF  00                 	db	0
   214  000BB0  02                 	db	2
   215  000BB1  07                 	db	7
   216  000BB2  1B                 	db	27
   217  000BB3  32                 	db	50
   218  000BB4  00                 	db	0
   219  000BB5  00                 	db	0
   220  000BB6  02                 	db	2
   221  000BB7  08                 	db	8
   222  000BB8  1C                 	db	28
   223  000BB9  31                 	db	49
   224  000BBA  00                 	db	0
   225  000BBB  00                 	db	0
   226  000BBC  02                 	db	2
   227  000BBD  09                 	db	9
   228  000BBE  1D                 	db	29
   229  000BBF  30                 	db	48
   230  000BC0  00                 	db	0
   231  000BC1  00                 	db	0
   232  0000                     _ANSELA	set	3896
   233  0000                     _ANSELB	set	3897
   234  0000                     _ANSELC	set	3898
   235  0000                     _CCPTMRS0bits	set	3913
   236  0000                     _BAUDCON1bits	set	4024
   237  0000                     _CCP1CONbits	set	4029
   238  0000                     _CCPR1H	set	4031
   239  0000                     _CCPR1L	set	4030
   240  0000                     _EEADR	set	4009
   241  0000                     _EECON1bits	set	4006
   242  0000                     _EECON2	set	4007
   243  0000                     _EEDATA	set	4008
   244  0000                     _INTCONbits	set	4082
   245  0000                     _OSCCON	set	4051
   246  0000                     _PIE1bits	set	3997
   247  0000                     _PIR1bits	set	3998
   248  0000                     _PIR2bits	set	4001
   249  0000                     _PORTA	set	3968
   250  0000                     _PORTB	set	3969
   251  0000                     _PORTBbits	set	3969
   252  0000                     _PORTC	set	3970
   253  0000                     _PORTCbits	set	3970
   254  0000                     _PORTE	set	3972
   255  0000                     _RCREG1	set	4014
   256  0000                     _RCSTA1bits	set	4011
   257  0000                     _RCSTAbits	set	4011
   258  0000                     _SPBRG1	set	4015
   259  0000                     _SSP1BUF	set	4041
   260  0000                     _SSP1CON1	set	4038
   261  0000                     _SSP1STAT	set	4039
   262  0000                     _T1CONbits	set	4045
   263  0000                     _T3CONbits	set	4017
   264  0000                     _TMR1H	set	4047
   265  0000                     _TMR1L	set	4046
   266  0000                     _TMR3H	set	4019
   267  0000                     _TMR3L	set	4018
   268  0000                     _TRISA	set	3986
   269  0000                     _TRISB	set	3987
   270  0000                     _TRISC	set	3988
   271  0000                     _TRISCbits	set	3988
   272  0000                     _TRISE	set	3990
   273  0000                     _TXREG1	set	4013
   274  0000                     _TXSTA1bits	set	4012
   275  0000                     _SSP1IF	set	31987
   276                           
   277                           	psect	smallconst
   278  000200                     __psmallconst:
   279                           	opt stack 0
   280  000200  00                 	db	0
   281  000201                     STR_11:
   282  000201  41                 	db	65	;'A'
   283  000202  42                 	db	66	;'B'
   284  000203  43                 	db	67	;'C'
   285  000204  44                 	db	68	;'D'
   286  000205  45                 	db	69	;'E'
   287  000206  46                 	db	70	;'F'
   288  000207  47                 	db	71	;'G'
   289  000208  00                 	db	0
   290  000209                     STR_3:
   291  000209  41                 	db	65	;'A'
   292  00020A  42                 	db	66	;'B'
   293  00020B  43                 	db	67	;'C'
   294  00020C  44                 	db	68	;'D'
   295  00020D  45                 	db	69	;'E'
   296  00020E  46                 	db	70	;'F'
   297  00020F  00                 	db	0
   298  000210                     STR_12:
   299  000210  41                 	db	65	;'A'
   300  000211  42                 	db	66	;'B'
   301  000212  43                 	db	67	;'C'
   302  000213  44                 	db	68	;'D'
   303  000214  46                 	db	70	;'F'
   304  000215  47                 	db	71	;'G'
   305  000216  00                 	db	0
   306  000217                     STR_14:
   307  000217  41                 	db	65	;'A'
   308  000218  42                 	db	66	;'B'
   309  000219  43                 	db	67	;'C'
   310  00021A  45                 	db	69	;'E'
   311  00021B  46                 	db	70	;'F'
   312  00021C  47                 	db	71	;'G'
   313  00021D  00                 	db	0
   314  00021E                     STR_9:
   315  00021E  41                 	db	65	;'A'
   316  00021F  43                 	db	67	;'C'
   317  000220  44                 	db	68	;'D'
   318  000221  45                 	db	69	;'E'
   319  000222  46                 	db	70	;'F'
   320  000223  47                 	db	71	;'G'
   321  000224  00                 	db	0
   322  000225                     STR_6:
   323  000225  41                 	db	65	;'A'
   324  000226  42                 	db	66	;'B'
   325  000227  43                 	db	67	;'C'
   326  000228  44                 	db	68	;'D'
   327  000229  47                 	db	71	;'G'
   328  00022A  00                 	db	0
   329  00022B                     STR_5:
   330  00022B  41                 	db	65	;'A'
   331  00022C  42                 	db	66	;'B'
   332  00022D  44                 	db	68	;'D'
   333  00022E  45                 	db	69	;'E'
   334  00022F  47                 	db	71	;'G'
   335  000230  00                 	db	0
   336  000231                     STR_8:
   337  000231  41                 	db	65	;'A'
   338  000232  43                 	db	67	;'C'
   339  000233  44                 	db	68	;'D'
   340  000234  46                 	db	70	;'F'
   341  000235  47                 	db	71	;'G'
   342  000236  00                 	db	0
   343  000237                     STR_13:
   344  000237  41                 	db	65	;'A'
   345  000238  44                 	db	68	;'D'
   346  000239  45                 	db	69	;'E'
   347  00023A  46                 	db	70	;'F'
   348  00023B  47                 	db	71	;'G'
   349  00023C  00                 	db	0
   350  00023D                     STR_7:
   351  00023D  42                 	db	66	;'B'
   352  00023E  43                 	db	67	;'C'
   353  00023F  46                 	db	70	;'F'
   354  000240  47                 	db	71	;'G'
   355  000241  00                 	db	0
   356  000242                     STR_10:
   357  000242  41                 	db	65	;'A'
   358  000243  42                 	db	66	;'B'
   359  000244  43                 	db	67	;'C'
   360  000245  00                 	db	0
   361  000246                     STR_1:
   362  000246  4C                 	db	76	;'L'
   363  000247  4F                 	db	79	;'O'
   364  000248  41                 	db	65	;'A'
   365  000249  00                 	db	0
   366  00024A                     STR_2:
   367  00024A  44                 	db	68	;'D'
   368  00024B  45                 	db	69	;'E'
   369  00024C  4C                 	db	76	;'L'
   370  00024D  00                 	db	0
   371  0000                     
   372                           ; #config settings
   373  00024E  00                 	db	0	; dummy byte at the end
   374  0000                     
   375                           	psect	cinit
   376  000EC2                     __pcinit:
   377                           	opt stack 0
   378  000EC2                     start_initialization:
   379                           	opt stack 0
   380  000EC2                     __initialization:
   381                           	opt stack 0
   382                           
   383                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   384  000EC2  6A42               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   385                           
   386                           ; Clear objects allocated to COMRAM (23 bytes)
   387  000EC4  EE00  F02B         	lfsr	0,__pbssCOMRAM
   388  000EC8  0E17               	movlw	23
   389  000ECA                     clear_0:
   390  000ECA  6AEE               	clrf	postinc0,c
   391  000ECC  06E8               	decf	wreg,f,c
   392  000ECE  E1FD               	bnz	clear_0
   393                           
   394                           ; Initialize objects allocated to BANK1 (180 bytes)
   395                           ; load TBLPTR registers with __pidataBANK1
   396  000ED0  0E0E               	movlw	low __pidataBANK1
   397  000ED2  6EF6               	movwf	tblptrl,c
   398  000ED4  0E0B               	movlw	high __pidataBANK1
   399  000ED6  6EF7               	movwf	tblptrh,c
   400  000ED8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   401  000EDA  6EF8               	movwf	tblptru,c
   402  000EDC  EE01  F000         	lfsr	0,__pdataBANK1
   403  000EE0  EE10 F0B4          	lfsr	1,180
   404  000EE4                     copy_data0:
   405  000EE4  0009               	tblrd		*+
   406  000EE6  CFF5 FFEE          	movff	tablat,postinc0
   407  000EEA  50E5               	movf	postdec1,w,c
   408  000EEC  50E1               	movf	fsr1l,w,c
   409  000EEE  E1FA               	bnz	copy_data0
   410  000EF0                     end_of_initialization:
   411                           	opt stack 0
   412  000EF0                     __end_of__initialization:
   413                           	opt stack 0
   414  000EF0  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   415  000EF2  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   416  000EF4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   417  000EF6  6EF8               	movwf	tblptru,c
   418  000EF8  0100               	movlb	0
   419  000EFA  EF05  F008         	goto	_main	;jump to C main() function
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           postdec1	equ	0xFE5
   427                           fsr1l	equ	0xFE1
   428                           
   429                           	psect	bitbssCOMRAM
   430  000210                     __pbitbssCOMRAM:
   431                           	opt stack 0
   432  000210                     _ignite_ready:
   433                           	opt stack 0
   434  000210                     	ds	1
   435  000211                     _master_addressed:
   436                           	opt stack 0
   437  000211                     	ds	1
   438  000212                     _testflag:
   439                           	opt stack 0
   440  000212                     	ds	1
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           postdec1	equ	0xFE5
   448                           fsr1l	equ	0xFE1
   449                           
   450                           	psect	bssCOMRAM
   451  00002B                     __pbssCOMRAM:
   452                           	opt stack 0
   453  00002B                     _received:
   454                           	opt stack 0
   455  00002B                     	ds	5
   456  000030                     _current_time:
   457                           	opt stack 0
   458  000030                     	ds	2
   459  000032                     _check_counter:
   460                           	opt stack 0
   461  000032                     	ds	1
   462  000033                     _display_counter:
   463                           	opt stack 0
   464  000033                     	ds	1
   465  000034                     _overrun:
   466                           	opt stack 0
   467  000034                     	ds	1
   468  000035                     _pin_selected:
   469                           	opt stack 0
   470  000035                     	ds	1
   471  000036                     _receive_counter:
   472                           	opt stack 0
   473  000036                     	ds	1
   474  000037                     _slave_selected:
   475                           	opt stack 0
   476  000037                     	ds	1
   477  000038                     _pixels:
   478                           	opt stack 0
   479  000038                     	ds	7
   480  00003F                     _signs:
   481                           	opt stack 0
   482  00003F                     	ds	3
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           postinc0	equ	0xFEE
   488                           wreg	equ	0xFE8
   489                           postdec1	equ	0xFE5
   490                           fsr1l	equ	0xFE1
   491                           
   492                           	psect	dataBANK1
   493  000100                     __pdataBANK1:
   494                           	opt stack 0
   495  000100                     _pin:
   496                           	opt stack 0
   497  000100                     	ds	180
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           postdec1	equ	0xFE5
   505                           fsr1l	equ	0xFE1
   506                           
   507                           	psect	cstackBANK0
   508  000060                     __pcstackBANK0:
   509                           	opt stack 0
   510  000060                     Evaluate_Signs@evaluation_value:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x0
   514  000060                     	ds	2
   515  000062                     Set_Display@information:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x2
   519  000062                     	ds	1
   520  000063                     Set_Display@value:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x3
   524  000063                     	ds	2
   525  000065                     Set_Display@type:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x5
   529  000065                     	ds	1
   530  000066                     ??_Load_Data:
   531                           
   532                           ; 0 bytes @ 0x6
   533  000066                     	ds	1
   534  000067                     Load_Data@counter:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x7
   538  000067                     	ds	1
   539  000068                     Del_Data@counter:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x8
   543  000068                     	ds	1
   544  000069                     ??_Check_Buttons:
   545                           
   546                           ; 0 bytes @ 0x9
   547  000069                     	ds	2
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	cstackCOMRAM
   558  000001                     __pcstackCOMRAM:
   559                           	opt stack 0
   560  000001                     ?___awdiv:
   561                           	opt stack 0
   562  000001                     i2Transmit@operation:
   563                           	opt stack 0
   564  000001                     ___awdiv@dividend:
   565                           	opt stack 0
   566                           
   567                           ; 2 bytes @ 0x0
   568  000001                     	ds	1
   569  000002                     i2Transmit@port:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x1
   573  000002                     	ds	1
   574  000003                     i2Transmit@receiver:
   575                           	opt stack 0
   576  000003                     ___awdiv@divisor:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x2
   580  000003                     	ds	1
   581  000004                     
   582                           ; 0 bytes @ 0x3
   583  000004                     	ds	1
   584  000005                     ___awdiv@counter:
   585                           	opt stack 0
   586                           
   587                           ; 1 bytes @ 0x4
   588  000005                     	ds	1
   589  000006                     Ignite_Detonators@counter:
   590                           	opt stack 0
   591  000006                     ___awdiv@sign:
   592                           	opt stack 0
   593                           
   594                           ; 1 bytes @ 0x5
   595  000006                     	ds	1
   596  000007                     ___awdiv@quotient:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x6
   600  000007                     	ds	2
   601  000009                     ??_Isr:
   602                           
   603                           ; 0 bytes @ 0x8
   604  000009                     	ds	17
   605  00001A                     Isr@pixel_index_array:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x19
   609  00001A                     	ds	1
   610  00001B                     Isr@pixel_index_bit:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x1A
   614  00001B                     	ds	1
   615  00001C                     Isr@search_index:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x1B
   619  00001C                     	ds	1
   620  00001D                     ??_Delay_Routine:
   621  00001D                     ?_Read_Data:
   622                           	opt stack 0
   623  00001D                     ?___lwmod:
   624                           	opt stack 0
   625  00001D                     Transmit@operation:
   626                           	opt stack 0
   627  00001D                     Save_Data@store:
   628                           	opt stack 0
   629  00001D                     Write_Display_Byte@write_data:
   630                           	opt stack 0
   631  00001D                     ___lwmod@dividend:
   632                           	opt stack 0
   633  00001D                     Set_Bits@bits:
   634                           	opt stack 0
   635                           
   636                           ; 3 bytes @ 0x1C
   637  00001D                     	ds	1
   638  00001E                     Delay_Routine@delay_multiplyer:
   639                           	opt stack 0
   640  00001E                     Transmit@port:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0x1D
   644  00001E                     	ds	1
   645  00001F                     ??_Write_Display_Byte:
   646  00001F                     Delay_Routine@delay_counter:
   647                           	opt stack 0
   648  00001F                     Save_Data@store_address:
   649                           	opt stack 0
   650  00001F                     Transmit@receiver:
   651                           	opt stack 0
   652  00001F                     Read_Data@data_read:
   653                           	opt stack 0
   654  00001F                     ___lwmod@divisor:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x1E
   658  00001F                     	ds	1
   659  000020                     ??_Set_Bits:
   660                           
   661                           ; 0 bytes @ 0x1F
   662  000020                     	ds	1
   663  000021                     Read_Data@read_address:
   664                           	opt stack 0
   665  000021                     ___lwmod@counter:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x20
   669  000021                     	ds	2
   670  000023                     Set_Bits@bitcount:
   671                           	opt stack 0
   672  000023                     Write_Display_Byte@counter:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x22
   676  000023                     	ds	1
   677  000024                     Set_Bits@Bitoutput:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x23
   681  000024                     	ds	1
   682  000025                     Evaluate_Display@evaluate:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x24
   686  000025                     	ds	2
   687  000027                     ??_Evaluate_Display:
   688                           
   689                           ; 0 bytes @ 0x26
   690  000027                     	ds	2
   691  000029                     Evaluate_Display@size:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x28
   695  000029                     	ds	1
   696  00002A                     Evaluate_Signs@valuecounter:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x29
   700  00002A                     	ds	1
   701  00002B                     tblptru	equ	0xFF8
   702                           tblptrh	equ	0xFF7
   703                           tblptrl	equ	0xFF6
   704                           tablat	equ	0xFF5
   705                           postinc0	equ	0xFEE
   706                           wreg	equ	0xFE8
   707                           postdec1	equ	0xFE5
   708                           fsr1l	equ	0xFE1
   709                           
   710                           ; 0 bytes @ 0x2A
   711 ;;
   712 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   713 ;;
   714 ;; *************** function _main *****************
   715 ;; Defined at:
   716 ;;		line 86 in file "main.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;		None               void
   723 ;; Registers used:
   724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1
   730 ;;      Params:         0       0       0
   731 ;;      Locals:         0       0       0
   732 ;;      Temps:          0       0       0
   733 ;;      Totals:         0       0       0
   734 ;;Total ram usage:        0 bytes
   735 ;; Hardware stack levels required when called:   10
   736 ;; This function calls:
   737 ;;		_Check_Buttons
   738 ;;		_Check_Detonators
   739 ;;		_Init
   740 ;;		_Load_Data
   741 ;;		_Set_Display
   742 ;; This function is called by:
   743 ;;		Startup code after reset
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text0
   748  00100A                     __ptext0:
   749                           	opt stack 0
   750  00100A                     _main:
   751                           	opt stack 21
   752                           
   753                           ;main.c: 87: Init();
   754                           
   755                           ;incstack = 0
   756  00100A  EC3F  F008         	call	_Init	;wreg free
   757                           
   758                           ;main.c: 88: Load_Data();
   759  00100E  ECAC  F004         	call	_Load_Data	;wreg free
   760  001012                     l2848:
   761                           
   762                           ;main.c: 90: Check_Buttons();
   763  001012  EC28  F001         	call	_Check_Buttons	;wreg free
   764                           
   765                           ;main.c: 91: if(testflag == 1) {
   766  001016  A442               	btfss	_testflag/(0+8),_testflag& (0+7),c
   767  001018  D7FC               	goto	l2848
   768                           
   769                           ;main.c: 92: Set_Display('7', 'T',0);
   770  00101A  0E54               	movlw	84
   771  00101C  0100               	movlb	0	; () banked
   772  00101E  6F62               	movwf	Set_Display@information& (0+255),b
   773  001020  0E00               	movlw	0
   774  001022  0100               	movlb	0	; () banked
   775  001024  6F64               	movwf	(Set_Display@value+1)& (0+255),b
   776  001026  0E00               	movlw	0
   777  001028  6F63               	movwf	Set_Display@value& (0+255),b
   778  00102A  0E37               	movlw	55
   779  00102C  EC8C  F006         	call	_Set_Display
   780                           
   781                           ;main.c: 93: Check_Detonators();
   782  001030  EC7F  F007         	call	_Check_Detonators	;wreg free
   783  001034  D7EE               	goto	l2848
   784  001036                     __end_of_main:
   785                           	opt stack 0
   786                           tblptru	equ	0xFF8
   787                           tblptrh	equ	0xFF7
   788                           tblptrl	equ	0xFF6
   789                           tablat	equ	0xFF5
   790                           postinc0	equ	0xFEE
   791                           wreg	equ	0xFE8
   792                           postdec1	equ	0xFE5
   793                           fsr1l	equ	0xFE1
   794                           
   795 ;; *************** function _Init *****************
   796 ;; Defined at:
   797 ;;		line 3 in file "init.c"
   798 ;; Parameters:    Size  Location     Type
   799 ;;		None
   800 ;; Auto vars:     Size  Location     Type
   801 ;;		None
   802 ;; Return value:  Size  Location     Type
   803 ;;		None               void
   804 ;; Registers used:
   805 ;;		wreg, status,2, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1
   811 ;;      Params:         0       0       0
   812 ;;      Locals:         0       0       0
   813 ;;      Temps:          0       0       0
   814 ;;      Totals:         0       0       0
   815 ;;Total ram usage:        0 bytes
   816 ;; Hardware stack levels used:    1
   817 ;; Hardware stack levels required when called:    4
   818 ;; This function calls:
   819 ;;		_InitAnsel
   820 ;;		_InitInterrupt
   821 ;;		_InitMiscellaneous
   822 ;;		_InitPort
   823 ;;		_InitTimer
   824 ;;		_InitTransmission
   825 ;;		_InitTris
   826 ;; This function is called by:
   827 ;;		_main
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text1
   832  00107E                     __ptext1:
   833                           	opt stack 0
   834  00107E                     _Init:
   835                           	opt stack 26
   836                           
   837                           ;init.c: 4: InitPort();
   838                           
   839                           ;incstack = 0
   840  00107E  EC6F  F008         	call	_InitPort	;wreg free
   841                           
   842                           ;init.c: 5: InitTris();
   843  001082  EC66  F008         	call	_InitTris	;wreg free
   844                           
   845                           ;init.c: 6: InitAnsel();
   846  001086  EC5C  F008         	call	_InitAnsel	;wreg free
   847                           
   848                           ;init.c: 7: InitMiscellaneous();
   849  00108A  EC86  F008         	call	_InitMiscellaneous	;wreg free
   850                           
   851                           ;init.c: 8: InitTransmission();
   852  00108E  EC1B  F008         	call	_InitTransmission	;wreg free
   853                           
   854                           ;init.c: 9: InitTimer();
   855  001092  ECED  F007         	call	_InitTimer	;wreg free
   856                           
   857                           ;init.c: 10: InitInterrupt();
   858  001096  EC80  F008         	call	_InitInterrupt	;wreg free
   859  00109A  0012               	return		;funcret
   860  00109C                     __end_of_Init:
   861                           	opt stack 0
   862                           tblptru	equ	0xFF8
   863                           tblptrh	equ	0xFF7
   864                           tblptrl	equ	0xFF6
   865                           tablat	equ	0xFF5
   866                           postinc0	equ	0xFEE
   867                           wreg	equ	0xFE8
   868                           postdec1	equ	0xFE5
   869                           fsr1l	equ	0xFE1
   870                           
   871 ;; *************** function _InitTris *****************
   872 ;; Defined at:
   873 ;;		line 20 in file "init.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;		None               void
   880 ;; Registers used:
   881 ;;		wreg, status,2
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1
   887 ;;      Params:         0       0       0
   888 ;;      Locals:         0       0       0
   889 ;;      Temps:          0       0       0
   890 ;;      Totals:         0       0       0
   891 ;;Total ram usage:        0 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    3
   894 ;; This function calls:
   895 ;;		Nothing
   896 ;; This function is called by:
   897 ;;		_Init
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text2
   902  0010CC                     __ptext2:
   903                           	opt stack 0
   904  0010CC                     _InitTris:
   905                           	opt stack 26
   906                           
   907                           ;init.c: 21: TRISA = 0b00000000;
   908                           
   909                           ;incstack = 0
   910  0010CC  0E00               	movlw	0
   911  0010CE  6E92               	movwf	3986,c	;volatile
   912                           
   913                           ;init.c: 22: TRISB = 0b00011111;
   914  0010D0  0E1F               	movlw	31
   915  0010D2  6E93               	movwf	3987,c	;volatile
   916                           
   917                           ;init.c: 23: TRISC = 0b10000010;
   918  0010D4  0E82               	movlw	130
   919  0010D6  6E94               	movwf	3988,c	;volatile
   920                           
   921                           ;init.c: 24: TRISE = 0;
   922  0010D8  0E00               	movlw	0
   923  0010DA  6E96               	movwf	3990,c	;volatile
   924  0010DC  0012               	return		;funcret
   925  0010DE                     __end_of_InitTris:
   926                           	opt stack 0
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           postinc0	equ	0xFEE
   932                           wreg	equ	0xFE8
   933                           postdec1	equ	0xFE5
   934                           fsr1l	equ	0xFE1
   935                           
   936 ;; *************** function _InitTransmission *****************
   937 ;; Defined at:
   938 ;;		line 37 in file "init.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;		None               void
   945 ;; Registers used:
   946 ;;		wreg, status,2
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1
   952 ;;      Params:         0       0       0
   953 ;;      Locals:         0       0       0
   954 ;;      Temps:          0       0       0
   955 ;;      Totals:         0       0       0
   956 ;;Total ram usage:        0 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    3
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_Init
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text3
   967  001036                     __ptext3:
   968                           	opt stack 0
   969  001036                     _InitTransmission:
   970                           	opt stack 26
   971                           
   972                           ;init.c: 39: SSP1STAT = 0b01000000;
   973                           
   974                           ;incstack = 0
   975  001036  0E40               	movlw	64
   976  001038  6EC7               	movwf	4039,c	;volatile
   977                           
   978                           ;init.c: 40: SSP1CON1 = 0b00100010;
   979  00103A  0E22               	movlw	34
   980  00103C  6EC6               	movwf	4038,c	;volatile
   981                           
   982                           ;init.c: 42: TXSTA1bits.SYNC = 0;
   983  00103E  98AC               	bcf	4012,4,c	;volatile
   984                           
   985                           ;init.c: 43: TXSTA1bits.BRGH = 1;
   986  001040  84AC               	bsf	4012,2,c	;volatile
   987                           
   988                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
   989  001042  96B8               	bcf	4024,3,c	;volatile
   990                           
   991                           ;init.c: 45: SPBRG1 = 25;
   992  001044  0E19               	movlw	25
   993  001046  6EAF               	movwf	4015,c	;volatile
   994                           
   995                           ;init.c: 46: TRISCbits.RC6 = 1;
   996  001048  8C94               	bsf	3988,6,c	;volatile
   997                           
   998                           ;init.c: 47: TRISCbits.RC7 = 1;
   999  00104A  8E94               	bsf	3988,7,c	;volatile
  1000                           
  1001                           ;init.c: 48: RCSTA1bits.SPEN = 1;
  1002  00104C  8EAB               	bsf	4011,7,c	;volatile
  1003                           
  1004                           ;init.c: 49: TXSTA1bits.TX9 = 1;
  1005  00104E  8CAC               	bsf	4012,6,c	;volatile
  1006                           
  1007                           ;init.c: 50: TXSTA1bits.TXEN = 1;
  1008  001050  8AAC               	bsf	4012,5,c	;volatile
  1009                           
  1010                           ;init.c: 51: RCSTA1bits.RC9 = 1;
  1011  001052  8CAB               	bsf	4011,6,c	;volatile
  1012                           
  1013                           ;init.c: 52: RCSTA1bits.CREN = 1;
  1014  001054  88AB               	bsf	4011,4,c	;volatile
  1015                           
  1016                           ;init.c: 53: TRISCbits.RC6 = 0;
  1017  001056  9C94               	bcf	3988,6,c	;volatile
  1018  001058  0012               	return		;funcret
  1019  00105A                     __end_of_InitTransmission:
  1020                           	opt stack 0
  1021                           tblptru	equ	0xFF8
  1022                           tblptrh	equ	0xFF7
  1023                           tblptrl	equ	0xFF6
  1024                           tablat	equ	0xFF5
  1025                           postinc0	equ	0xFEE
  1026                           wreg	equ	0xFE8
  1027                           postdec1	equ	0xFE5
  1028                           fsr1l	equ	0xFE1
  1029                           
  1030 ;; *************** function _InitTimer *****************
  1031 ;; Defined at:
  1032 ;;		line 56 in file "init.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;		None               void
  1039 ;; Registers used:
  1040 ;;		wreg, status,2
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1
  1046 ;;      Params:         0       0       0
  1047 ;;      Locals:         0       0       0
  1048 ;;      Temps:          0       0       0
  1049 ;;      Totals:         0       0       0
  1050 ;;Total ram usage:        0 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    3
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_Init
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text4
  1061  000FDA                     __ptext4:
  1062                           	opt stack 0
  1063  000FDA                     _InitTimer:
  1064                           	opt stack 26
  1065                           
  1066                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
  1067                           
  1068                           ;incstack = 0
  1069  000FDA  0E3F               	movlw	-193
  1070  000FDC  16CD               	andwf	4045,f,c	;volatile
  1071                           
  1072                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
  1073  000FDE  0E30               	movlw	48
  1074  000FE0  12CD               	iorwf	4045,f,c	;volatile
  1075                           
  1076                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
  1077  000FE2  94CD               	bcf	4045,2,c	;volatile
  1078                           
  1079                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
  1080  000FE4  0E3F               	movlw	-193
  1081  000FE6  16B1               	andwf	4017,f,c	;volatile
  1082                           
  1083                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
  1084  000FE8  0E30               	movlw	48
  1085  000FEA  12B1               	iorwf	4017,f,c	;volatile
  1086                           
  1087                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
  1088  000FEC  94B1               	bcf	4017,2,c	;volatile
  1089                           
  1090                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
  1091  000FEE  50BD               	movf	4029,w,c	;volatile
  1092  000FF0  0BF0               	andlw	-16
  1093  000FF2  090A               	iorlw	10
  1094  000FF4  6EBD               	movwf	4029,c	;volatile
  1095                           
  1096                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
  1097  000FF6  010F               	movlb	15	; () banked
  1098  000FF8  5149               	movf	73,w,b	;volatile
  1099  000FFA  0BFC               	andlw	-4
  1100  000FFC  0901               	iorlw	1
  1101  000FFE  6F49               	movwf	73,b	;volatile
  1102                           
  1103                           ;init.c: 68: CCPR1L = 72;
  1104  001000  0E48               	movlw	72
  1105  001002  6EBE               	movwf	4030,c	;volatile
  1106                           
  1107                           ;init.c: 69: CCPR1H = 232;
  1108  001004  0EE8               	movlw	232
  1109  001006  6EBF               	movwf	4031,c	;volatile
  1110                           
  1111                           ; BSR set to: 15
  1112  001008  0012               	return		;funcret
  1113  00100A                     __end_of_InitTimer:
  1114                           	opt stack 0
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           postinc0	equ	0xFEE
  1120                           wreg	equ	0xFE8
  1121                           postdec1	equ	0xFE5
  1122                           fsr1l	equ	0xFE1
  1123                           
  1124 ;; *************** function _InitPort *****************
  1125 ;; Defined at:
  1126 ;;		line 13 in file "init.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;		None
  1131 ;; Return value:  Size  Location     Type
  1132 ;;		None               void
  1133 ;; Registers used:
  1134 ;;		wreg, status,2
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1
  1140 ;;      Params:         0       0       0
  1141 ;;      Locals:         0       0       0
  1142 ;;      Temps:          0       0       0
  1143 ;;      Totals:         0       0       0
  1144 ;;Total ram usage:        0 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    3
  1147 ;; This function calls:
  1148 ;;		Nothing
  1149 ;; This function is called by:
  1150 ;;		_Init
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text5
  1155  0010DE                     __ptext5:
  1156                           	opt stack 0
  1157  0010DE                     _InitPort:
  1158                           	opt stack 26
  1159                           
  1160                           ;init.c: 14: PORTA = 0b00000000;
  1161                           
  1162                           ; BSR set to: 15
  1163                           ;incstack = 0
  1164  0010DE  0E00               	movlw	0
  1165  0010E0  6E80               	movwf	3968,c	;volatile
  1166                           
  1167                           ;init.c: 15: PORTB = 0b00000000;
  1168  0010E2  0E00               	movlw	0
  1169  0010E4  6E81               	movwf	3969,c	;volatile
  1170                           
  1171                           ;init.c: 16: PORTC = 0b00000001;
  1172  0010E6  0E01               	movlw	1
  1173  0010E8  6E82               	movwf	3970,c	;volatile
  1174                           
  1175                           ;init.c: 17: PORTE = 0;
  1176  0010EA  0E00               	movlw	0
  1177  0010EC  6E84               	movwf	3972,c	;volatile
  1178  0010EE  0012               	return		;funcret
  1179  0010F0                     __end_of_InitPort:
  1180                           	opt stack 0
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           postinc0	equ	0xFEE
  1186                           wreg	equ	0xFE8
  1187                           postdec1	equ	0xFE5
  1188                           fsr1l	equ	0xFE1
  1189                           
  1190 ;; *************** function _InitMiscellaneous *****************
  1191 ;; Defined at:
  1192 ;;		line 33 in file "init.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;		None               void
  1199 ;; Registers used:
  1200 ;;		wreg, status,2
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1
  1206 ;;      Params:         0       0       0
  1207 ;;      Locals:         0       0       0
  1208 ;;      Temps:          0       0       0
  1209 ;;      Totals:         0       0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    3
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_Init
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text6
  1221  00110C                     __ptext6:
  1222                           	opt stack 0
  1223  00110C                     _InitMiscellaneous:
  1224                           	opt stack 26
  1225                           
  1226                           ;init.c: 34: OSCCON = 0b01010011;
  1227                           
  1228                           ;incstack = 0
  1229  00110C  0E53               	movlw	83
  1230  00110E  6ED3               	movwf	4051,c	;volatile
  1231  001110  0012               	return		;funcret
  1232  001112                     __end_of_InitMiscellaneous:
  1233                           	opt stack 0
  1234                           tblptru	equ	0xFF8
  1235                           tblptrh	equ	0xFF7
  1236                           tblptrl	equ	0xFF6
  1237                           tablat	equ	0xFF5
  1238                           postinc0	equ	0xFEE
  1239                           wreg	equ	0xFE8
  1240                           postdec1	equ	0xFE5
  1241                           fsr1l	equ	0xFE1
  1242                           
  1243 ;; *************** function _InitInterrupt *****************
  1244 ;; Defined at:
  1245 ;;		line 72 in file "init.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;		None               void
  1252 ;; Registers used:
  1253 ;;		None
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1
  1259 ;;      Params:         0       0       0
  1260 ;;      Locals:         0       0       0
  1261 ;;      Temps:          0       0       0
  1262 ;;      Totals:         0       0       0
  1263 ;;Total ram usage:        0 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:    3
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_Init
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text7
  1274  001100                     __ptext7:
  1275                           	opt stack 0
  1276  001100                     _InitInterrupt:
  1277                           	opt stack 26
  1278                           
  1279                           ;init.c: 73: INTCONbits.GIE = 1;
  1280                           
  1281                           ;incstack = 0
  1282  001100  8EF2               	bsf	intcon,7,c	;volatile
  1283                           
  1284                           ;init.c: 74: INTCONbits.PEIE = 1;
  1285  001102  8CF2               	bsf	intcon,6,c	;volatile
  1286                           
  1287                           ;init.c: 75: PIE1bits.RCIE = 1;
  1288  001104  8A9D               	bsf	3997,5,c	;volatile
  1289                           
  1290                           ;init.c: 76: PIE1bits.CCP1IE = 1;
  1291  001106  849D               	bsf	3997,2,c	;volatile
  1292                           
  1293                           ;init.c: 77: PIE1bits.TMR1IE = 1;
  1294  001108  809D               	bsf	3997,0,c	;volatile
  1295  00110A  0012               	return		;funcret
  1296  00110C                     __end_of_InitInterrupt:
  1297                           	opt stack 0
  1298                           tblptru	equ	0xFF8
  1299                           tblptrh	equ	0xFF7
  1300                           tblptrl	equ	0xFF6
  1301                           tablat	equ	0xFF5
  1302                           intcon	equ	0xFF2
  1303                           postinc0	equ	0xFEE
  1304                           wreg	equ	0xFE8
  1305                           postdec1	equ	0xFE5
  1306                           fsr1l	equ	0xFE1
  1307                           
  1308 ;; *************** function _InitAnsel *****************
  1309 ;; Defined at:
  1310 ;;		line 27 in file "init.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;		None               void
  1317 ;; Registers used:
  1318 ;;		wreg, status,2
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1
  1324 ;;      Params:         0       0       0
  1325 ;;      Locals:         0       0       0
  1326 ;;      Temps:          0       0       0
  1327 ;;      Totals:         0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used:    1
  1330 ;; Hardware stack levels required when called:    3
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_Init
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text8
  1339  0010B8                     __ptext8:
  1340                           	opt stack 0
  1341  0010B8                     _InitAnsel:
  1342                           	opt stack 26
  1343                           
  1344                           ;init.c: 28: ANSELA = 0;
  1345                           
  1346                           ;incstack = 0
  1347  0010B8  0E00               	movlw	0
  1348  0010BA  010F               	movlb	15	; () banked
  1349  0010BC  6F38               	movwf	56,b	;volatile
  1350                           
  1351                           ;init.c: 29: ANSELB = 0;
  1352  0010BE  0E00               	movlw	0
  1353  0010C0  010F               	movlb	15	; () banked
  1354  0010C2  6F39               	movwf	57,b	;volatile
  1355                           
  1356                           ;init.c: 30: ANSELC = 0;
  1357  0010C4  0E00               	movlw	0
  1358  0010C6  010F               	movlb	15	; () banked
  1359  0010C8  6F3A               	movwf	58,b	;volatile
  1360                           
  1361                           ; BSR set to: 15
  1362  0010CA  0012               	return		;funcret
  1363  0010CC                     __end_of_InitAnsel:
  1364                           	opt stack 0
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           intcon	equ	0xFF2
  1370                           postinc0	equ	0xFEE
  1371                           wreg	equ	0xFE8
  1372                           postdec1	equ	0xFE5
  1373                           fsr1l	equ	0xFE1
  1374                           
  1375 ;; *************** function _Check_Detonators *****************
  1376 ;; Defined at:
  1377 ;;		line 25 in file "ignition.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;		None               void
  1384 ;; Registers used:
  1385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1
  1391 ;;      Params:         0       0       0
  1392 ;;      Locals:         0       0       0
  1393 ;;      Temps:          0       0       0
  1394 ;;      Totals:         0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    4
  1398 ;; This function calls:
  1399 ;;		_Transmit
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text9
  1406  000EFE                     __ptext9:
  1407                           	opt stack 0
  1408  000EFE                     _Check_Detonators:
  1409                           	opt stack 26
  1410                           
  1411                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  1412                           
  1413                           ; BSR set to: 15
  1414                           ;incstack = 0
  1415  000EFE  0E54               	movlw	84
  1416  000F00  6E1D               	movwf	Transmit@operation,c
  1417  000F02  5032               	movf	_check_counter,w,c
  1418  000F04  0D06               	mullw	6
  1419  000F06  0E01               	movlw	1
  1420  000F08  26F3               	addwf	prodl,f,c
  1421  000F0A  0E00               	movlw	0
  1422  000F0C  22F4               	addwfc	prodh,f,c
  1423  000F0E  0E00               	movlw	low _pin
  1424  000F10  24F3               	addwf	prodl,w,c
  1425  000F12  6ED9               	movwf	fsr2l,c
  1426  000F14  0E01               	movlw	high _pin
  1427  000F16  20F4               	addwfc	prodh,w,c
  1428  000F18  6EDA               	movwf	fsr2h,c
  1429  000F1A  50DF               	movf	indf2,w,c
  1430  000F1C  6E1E               	movwf	Transmit@port,c
  1431  000F1E  5032               	movf	_check_counter,w,c
  1432  000F20  0D06               	mullw	6
  1433  000F22  0E00               	movlw	low _pin
  1434  000F24  24F3               	addwf	prodl,w,c
  1435  000F26  6ED9               	movwf	fsr2l,c
  1436  000F28  0E01               	movlw	high _pin
  1437  000F2A  20F4               	addwfc	prodh,w,c
  1438  000F2C  6EDA               	movwf	fsr2h,c
  1439  000F2E  50DF               	movf	indf2,w,c
  1440  000F30  ECB7  F007         	call	_Transmit
  1441  000F34  0012               	return		;funcret
  1442  000F36                     __end_of_Check_Detonators:
  1443                           	opt stack 0
  1444                           tblptru	equ	0xFF8
  1445                           tblptrh	equ	0xFF7
  1446                           tblptrl	equ	0xFF6
  1447                           tablat	equ	0xFF5
  1448                           prodh	equ	0xFF4
  1449                           prodl	equ	0xFF3
  1450                           intcon	equ	0xFF2
  1451                           postinc0	equ	0xFEE
  1452                           wreg	equ	0xFE8
  1453                           postdec1	equ	0xFE5
  1454                           fsr1l	equ	0xFE1
  1455                           indf2	equ	0xFDF
  1456                           fsr2h	equ	0xFDA
  1457                           fsr2l	equ	0xFD9
  1458                           
  1459 ;; *************** function _Transmit *****************
  1460 ;; Defined at:
  1461 ;;		line 15 in file "communication.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  receiver        1    wreg     unsigned char 
  1464 ;;  operation       1   28[COMRAM] unsigned char 
  1465 ;;  port            1   29[COMRAM] unsigned char 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  receiver        1   30[COMRAM] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;		None               void
  1470 ;; Registers used:
  1471 ;;		wreg, status,2
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1
  1477 ;;      Params:         2       0       0
  1478 ;;      Locals:         1       0       0
  1479 ;;      Temps:          0       0       0
  1480 ;;      Totals:         3       0       0
  1481 ;;Total ram usage:        3 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    3
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_Check_Detonators
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text10
  1492  000F6E                     __ptext10:
  1493                           	opt stack 0
  1494  000F6E                     _Transmit:
  1495                           	opt stack 26
  1496                           
  1497                           ;incstack = 0
  1498                           ;Transmit@receiver stored from wreg
  1499  000F6E  6E1F               	movwf	Transmit@receiver,c
  1500                           
  1501                           ;communication.c: 17: PORTBbits.RB5 = 1;
  1502  000F70  8A81               	bsf	3969,5,c	;volatile
  1503                           
  1504                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  1505  000F72  98AB               	bcf	4011,4,c	;volatile
  1506                           
  1507                           ;communication.c: 20: __nop();
  1508  000F74  F000               	nop	
  1509  000F76                     l486:
  1510  000F76  A89E               	btfss	3998,4,c	;volatile
  1511  000F78  D7FE               	goto	l486
  1512                           
  1513                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  1514  000F7A  80AC               	bsf	4012,0,c	;volatile
  1515                           
  1516                           ;communication.c: 23: TXREG1 = receiver;
  1517  000F7C  C01F  FFAD         	movff	Transmit@receiver,4013	;volatile
  1518  000F80                     l489:
  1519  000F80  A89E               	btfss	3998,4,c	;volatile
  1520  000F82  D7FE               	goto	l489
  1521                           
  1522                           ;communication.c: 25: TXREG1 = 0xAA;
  1523  000F84  0EAA               	movlw	170
  1524  000F86  6EAD               	movwf	4013,c	;volatile
  1525  000F88                     l492:
  1526  000F88  A89E               	btfss	3998,4,c	;volatile
  1527  000F8A  D7FE               	goto	l492
  1528                           
  1529                           ;communication.c: 27: TXREG1 = operation;
  1530  000F8C  C01D  FFAD         	movff	Transmit@operation,4013	;volatile
  1531  000F90                     l495:
  1532  000F90  A89E               	btfss	3998,4,c	;volatile
  1533  000F92  D7FE               	goto	l495
  1534                           
  1535                           ;communication.c: 29: TXREG1 = port;
  1536  000F94  C01E  FFAD         	movff	Transmit@port,4013	;volatile
  1537  000F98                     l498:
  1538  000F98  A2AC               	btfss	4012,1,c	;volatile
  1539  000F9A  D7FE               	goto	l498
  1540                           
  1541                           ;communication.c: 31: PORTBbits.RB5 = 0;
  1542  000F9C  9A81               	bcf	3969,5,c	;volatile
  1543                           
  1544                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  1545  000F9E  88AB               	bsf	4011,4,c	;volatile
  1546                           
  1547                           ;communication.c: 33: __nop();
  1548  000FA0  F000               	nop	
  1549  000FA2  0012               	return		;funcret
  1550  000FA4                     __end_of_Transmit:
  1551                           	opt stack 0
  1552                           tblptru	equ	0xFF8
  1553                           tblptrh	equ	0xFF7
  1554                           tblptrl	equ	0xFF6
  1555                           tablat	equ	0xFF5
  1556                           prodh	equ	0xFF4
  1557                           prodl	equ	0xFF3
  1558                           intcon	equ	0xFF2
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           postdec1	equ	0xFE5
  1562                           fsr1l	equ	0xFE1
  1563                           indf2	equ	0xFDF
  1564                           fsr2h	equ	0xFDA
  1565                           fsr2l	equ	0xFD9
  1566                           
  1567 ;; *************** function _Check_Buttons *****************
  1568 ;; Defined at:
  1569 ;;		line 26 in file "buttonchanges.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;		None               void
  1576 ;; Registers used:
  1577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1
  1583 ;;      Params:         0       0       0
  1584 ;;      Locals:         0       0       0
  1585 ;;      Temps:          0       2       0
  1586 ;;      Totals:         0       2       0
  1587 ;;Total ram usage:        2 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    9
  1590 ;; This function calls:
  1591 ;;		_Del_Data
  1592 ;;		_Delay_Routine
  1593 ;;		_Read_Data
  1594 ;;		_Save_Data
  1595 ;;		_Set_Display
  1596 ;;		_Start_Timer
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text11
  1603  000250                     __ptext11:
  1604                           	opt stack 0
  1605  000250                     _Check_Buttons:
  1606                           	opt stack 21
  1607                           
  1608                           ;buttonchanges.c: 27: if(PORTCbits.RC1 == 1) {
  1609                           
  1610                           ;incstack = 0
  1611  000250  A282               	btfss	3970,1,c	;volatile
  1612  000252  D00A               	goto	l92
  1613                           
  1614                           ;buttonchanges.c: 28: Delay_Routine(3);
  1615  000254  0E03               	movlw	3
  1616  000256  EC2D  F008         	call	_Delay_Routine
  1617                           
  1618                           ;buttonchanges.c: 29: if(PORTCbits.RC1 == 1) {
  1619  00025A  A282               	btfss	3970,1,c	;volatile
  1620  00025C  0012               	return	
  1621                           
  1622                           ;buttonchanges.c: 30: ignite_ready = 1;
  1623  00025E  8042               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1624                           
  1625                           ;buttonchanges.c: 31: Start_Timer();
  1626  000260  EC4E  F008         	call	_Start_Timer	;wreg free
  1627                           
  1628                           ;buttonchanges.c: 32: __nop();
  1629  000264  F000               	nop	
  1630                           
  1631                           ;buttonchanges.c: 36: }
  1632                           ;buttonchanges.c: 37: } else if(PORTBbits.RB2 == 1) {
  1633                           
  1634                           ;buttonchanges.c: 33: return;
  1635  000266  0012               	return	
  1636  000268                     l92:
  1637  000268  A481               	btfss	3969,2,c	;volatile
  1638  00026A  D05C               	goto	l96
  1639                           
  1640                           ;buttonchanges.c: 38: Delay_Routine(3);
  1641  00026C  0E03               	movlw	3
  1642  00026E  EC2D  F008         	call	_Delay_Routine
  1643                           
  1644                           ;buttonchanges.c: 39: if(PORTBbits.RB2 == 1) {
  1645  000272  A481               	btfss	3969,2,c	;volatile
  1646  000274  0012               	return	
  1647                           
  1648                           ;buttonchanges.c: 40: if(PORTBbits.RB3 == 1) {
  1649  000276  A681               	btfss	3969,3,c	;volatile
  1650  000278  D008               	goto	l2710
  1651                           
  1652                           ;buttonchanges.c: 41: Delay_Routine(3);
  1653  00027A  0E03               	movlw	3
  1654  00027C  EC2D  F008         	call	_Delay_Routine
  1655                           
  1656                           ;buttonchanges.c: 42: if(PORTBbits.RB3 == 1) {
  1657  000280  A681               	btfss	3969,3,c	;volatile
  1658  000282  D003               	goto	l2710
  1659                           
  1660                           ;buttonchanges.c: 43: Del_Data();
  1661  000284  EC01  F007         	call	_Del_Data	;wreg free
  1662                           
  1663                           ;buttonchanges.c: 44: return;
  1664  000288  0012               	return	
  1665  00028A                     l2710:
  1666                           
  1667                           ;buttonchanges.c: 46: }
  1668                           ;buttonchanges.c: 47: }
  1669                           ;buttonchanges.c: 48: pin[pin_selected].time++;
  1670  00028A  5035               	movf	_pin_selected,w,c
  1671  00028C  0D06               	mullw	6
  1672  00028E  0E04               	movlw	4
  1673  000290  26F3               	addwf	prodl,f,c
  1674  000292  0E00               	movlw	0
  1675  000294  22F4               	addwfc	prodh,f,c
  1676  000296  0E00               	movlw	low _pin
  1677  000298  24F3               	addwf	prodl,w,c
  1678  00029A  6ED9               	movwf	fsr2l,c
  1679  00029C  0E01               	movlw	high _pin
  1680  00029E  20F4               	addwfc	prodh,w,c
  1681  0002A0  6EDA               	movwf	fsr2h,c
  1682  0002A2  2ADE               	incf	postinc2,f,c
  1683  0002A4  0E00               	movlw	0
  1684  0002A6  22DD               	addwfc	postdec2,f,c
  1685                           
  1686                           ;buttonchanges.c: 49: if(pin[pin_selected].time > 999) {
  1687  0002A8  5035               	movf	_pin_selected,w,c
  1688  0002AA  0D06               	mullw	6
  1689  0002AC  0E04               	movlw	4
  1690  0002AE  26F3               	addwf	prodl,f,c
  1691  0002B0  0E00               	movlw	0
  1692  0002B2  22F4               	addwfc	prodh,f,c
  1693  0002B4  0E00               	movlw	low _pin
  1694  0002B6  24F3               	addwf	prodl,w,c
  1695  0002B8  6ED9               	movwf	fsr2l,c
  1696  0002BA  0E01               	movlw	high _pin
  1697  0002BC  20F4               	addwfc	prodh,w,c
  1698  0002BE  6EDA               	movwf	fsr2h,c
  1699  0002C0  0E01               	movlw	1
  1700  0002C2  BEDB               	btfsc	plusw2,7,c
  1701  0002C4  D016               	goto	l2714
  1702  0002C6  0EE8               	movlw	232
  1703  0002C8  5CDE               	subwf	postinc2,w,c
  1704  0002CA  0E03               	movlw	3
  1705  0002CC  58DE               	subwfb	postinc2,w,c
  1706  0002CE  A0D8               	btfss	status,0,c
  1707  0002D0  D010               	goto	l2714
  1708                           
  1709                           ;buttonchanges.c: 50: pin[pin_selected].time = 0;
  1710  0002D2  5035               	movf	_pin_selected,w,c
  1711  0002D4  0D06               	mullw	6
  1712  0002D6  0E04               	movlw	4
  1713  0002D8  26F3               	addwf	prodl,f,c
  1714  0002DA  0E00               	movlw	0
  1715  0002DC  22F4               	addwfc	prodh,f,c
  1716  0002DE  0E00               	movlw	low _pin
  1717  0002E0  24F3               	addwf	prodl,w,c
  1718  0002E2  6ED9               	movwf	fsr2l,c
  1719  0002E4  0E01               	movlw	high _pin
  1720  0002E6  20F4               	addwfc	prodh,w,c
  1721  0002E8  6EDA               	movwf	fsr2h,c
  1722  0002EA  0E00               	movlw	0
  1723  0002EC  6EDE               	movwf	postinc2,c
  1724  0002EE  0E00               	movlw	0
  1725  0002F0  6EDD               	movwf	postdec2,c
  1726  0002F2                     l2714:
  1727                           
  1728                           ;buttonchanges.c: 51: }
  1729                           ;buttonchanges.c: 52: __nop();
  1730  0002F2  F000               	nop	
  1731                           
  1732                           ;buttonchanges.c: 53: Set_Display('7', '-', pin[pin_selected].time);
  1733  0002F4  0E2D               	movlw	45
  1734  0002F6  0100               	movlb	0	; () banked
  1735  0002F8  6F62               	movwf	Set_Display@information& (0+255),b
  1736  0002FA  5035               	movf	_pin_selected,w,c
  1737  0002FC  0D06               	mullw	6
  1738  0002FE  0E04               	movlw	4
  1739  000300  26F3               	addwf	prodl,f,c
  1740  000302  0E00               	movlw	0
  1741  000304  22F4               	addwfc	prodh,f,c
  1742  000306  0E00               	movlw	low _pin
  1743  000308  24F3               	addwf	prodl,w,c
  1744  00030A  6ED9               	movwf	fsr2l,c
  1745  00030C  0E01               	movlw	high _pin
  1746  00030E  20F4               	addwfc	prodh,w,c
  1747  000310  6EDA               	movwf	fsr2h,c
  1748  000312  CFDE F063          	movff	postinc2,Set_Display@value
  1749  000316  CFDD F064          	movff	postdec2,Set_Display@value+1
  1750  00031A  0E37               	movlw	55
  1751  00031C  EC8C  F006         	call	_Set_Display
  1752                           
  1753                           ;buttonchanges.c: 54: __nop();
  1754  000320  F000               	nop	
  1755                           
  1756                           ;buttonchanges.c: 55: }
  1757                           ;buttonchanges.c: 56: } else if(PORTBbits.RB3 == 1) {
  1758  000322  0012               	return	
  1759  000324                     l96:
  1760  000324  A681               	btfss	3969,3,c	;volatile
  1761  000326  D056               	goto	l102
  1762                           
  1763                           ;buttonchanges.c: 57: Delay_Routine(3);
  1764  000328  0E03               	movlw	3
  1765  00032A  EC2D  F008         	call	_Delay_Routine
  1766                           
  1767                           ;buttonchanges.c: 58: if(PORTBbits.RB3 == 1) {
  1768  00032E  A681               	btfss	3969,3,c	;volatile
  1769  000330  0012               	return	
  1770                           
  1771                           ;buttonchanges.c: 59: if(PORTBbits.RB2 == 1) {
  1772  000332  A481               	btfss	3969,2,c	;volatile
  1773  000334  D008               	goto	l2734
  1774                           
  1775                           ;buttonchanges.c: 60: Delay_Routine(3);
  1776  000336  0E03               	movlw	3
  1777  000338  EC2D  F008         	call	_Delay_Routine
  1778                           
  1779                           ;buttonchanges.c: 61: if(PORTBbits.RB2 == 1) {
  1780  00033C  A481               	btfss	3969,2,c	;volatile
  1781  00033E  D003               	goto	l2734
  1782                           
  1783                           ;buttonchanges.c: 62: Del_Data();
  1784  000340  EC01  F007         	call	_Del_Data	;wreg free
  1785                           
  1786                           ;buttonchanges.c: 63: return;
  1787  000344  0012               	return	
  1788  000346                     l2734:
  1789                           
  1790                           ;buttonchanges.c: 65: }
  1791                           ;buttonchanges.c: 66: }
  1792                           ;buttonchanges.c: 67: pin[pin_selected].time--;
  1793  000346  5035               	movf	_pin_selected,w,c
  1794  000348  0D06               	mullw	6
  1795  00034A  0E04               	movlw	4
  1796  00034C  26F3               	addwf	prodl,f,c
  1797  00034E  0E00               	movlw	0
  1798  000350  22F4               	addwfc	prodh,f,c
  1799  000352  0E00               	movlw	low _pin
  1800  000354  24F3               	addwf	prodl,w,c
  1801  000356  6ED9               	movwf	fsr2l,c
  1802  000358  0E01               	movlw	high _pin
  1803  00035A  20F4               	addwfc	prodh,w,c
  1804  00035C  6EDA               	movwf	fsr2h,c
  1805  00035E  06DE               	decf	postinc2,f,c
  1806  000360  0E00               	movlw	0
  1807  000362  5ADD               	subwfb	postdec2,f,c
  1808                           
  1809                           ;buttonchanges.c: 68: if(pin[pin_selected].time < 0) {
  1810  000364  5035               	movf	_pin_selected,w,c
  1811  000366  0D06               	mullw	6
  1812  000368  0E04               	movlw	4
  1813  00036A  26F3               	addwf	prodl,f,c
  1814  00036C  0E00               	movlw	0
  1815  00036E  22F4               	addwfc	prodh,f,c
  1816  000370  0E00               	movlw	low _pin
  1817  000372  24F3               	addwf	prodl,w,c
  1818  000374  6ED9               	movwf	fsr2l,c
  1819  000376  0E01               	movlw	high _pin
  1820  000378  20F4               	addwfc	prodh,w,c
  1821  00037A  6EDA               	movwf	fsr2h,c
  1822  00037C  0E01               	movlw	1
  1823  00037E  AEDB               	btfss	plusw2,7,c
  1824  000380  D010               	goto	l2738
  1825                           
  1826                           ;buttonchanges.c: 69: pin[pin_selected].time = 999;
  1827  000382  5035               	movf	_pin_selected,w,c
  1828  000384  0D06               	mullw	6
  1829  000386  0E04               	movlw	4
  1830  000388  26F3               	addwf	prodl,f,c
  1831  00038A  0E00               	movlw	0
  1832  00038C  22F4               	addwfc	prodh,f,c
  1833  00038E  0E00               	movlw	low _pin
  1834  000390  24F3               	addwf	prodl,w,c
  1835  000392  6ED9               	movwf	fsr2l,c
  1836  000394  0E01               	movlw	high _pin
  1837  000396  20F4               	addwfc	prodh,w,c
  1838  000398  6EDA               	movwf	fsr2h,c
  1839  00039A  0EE7               	movlw	231
  1840  00039C  6EDE               	movwf	postinc2,c
  1841  00039E  0E03               	movlw	3
  1842  0003A0  6EDD               	movwf	postdec2,c
  1843  0003A2                     l2738:
  1844                           
  1845                           ;buttonchanges.c: 70: }
  1846                           ;buttonchanges.c: 71: __nop();
  1847  0003A2  F000               	nop	
  1848                           
  1849                           ;buttonchanges.c: 72: Set_Display('7', '-', pin[pin_selected].time);
  1850  0003A4  0E2D               	movlw	45
  1851  0003A6  0100               	movlb	0	; () banked
  1852  0003A8  6F62               	movwf	Set_Display@information& (0+255),b
  1853  0003AA  5035               	movf	_pin_selected,w,c
  1854  0003AC  0D06               	mullw	6
  1855  0003AE  0E04               	movlw	4
  1856  0003B0  26F3               	addwf	prodl,f,c
  1857  0003B2  0E00               	movlw	0
  1858  0003B4  22F4               	addwfc	prodh,f,c
  1859  0003B6  0E00               	movlw	low _pin
  1860  0003B8  24F3               	addwf	prodl,w,c
  1861  0003BA  6ED9               	movwf	fsr2l,c
  1862  0003BC  0E01               	movlw	high _pin
  1863  0003BE  20F4               	addwfc	prodh,w,c
  1864  0003C0  6EDA               	movwf	fsr2h,c
  1865  0003C2  CFDE F063          	movff	postinc2,Set_Display@value
  1866  0003C6  CFDD F064          	movff	postdec2,Set_Display@value+1
  1867  0003CA  0E37               	movlw	55
  1868  0003CC  EC8C  F006         	call	_Set_Display
  1869                           
  1870                           ;buttonchanges.c: 73: __nop();
  1871  0003D0  F000               	nop	
  1872                           
  1873                           ;buttonchanges.c: 74: }
  1874                           ;buttonchanges.c: 75: } else if(PORTBbits.RB4 == 1) {
  1875  0003D2  0012               	return	
  1876  0003D4                     l102:
  1877  0003D4  A881               	btfss	3969,4,c	;volatile
  1878  0003D6  D053               	goto	l108
  1879                           
  1880                           ;buttonchanges.c: 76: Delay_Routine(3);
  1881  0003D8  0E03               	movlw	3
  1882  0003DA  EC2D  F008         	call	_Delay_Routine
  1883                           
  1884                           ;buttonchanges.c: 77: if(PORTBbits.RB4 == 1) {
  1885  0003DE  A881               	btfss	3969,4,c	;volatile
  1886  0003E0  0012               	return	
  1887                           
  1888                           ;buttonchanges.c: 78: pin[pin_selected].time += 10;
  1889  0003E2  5035               	movf	_pin_selected,w,c
  1890  0003E4  0D06               	mullw	6
  1891  0003E6  0E04               	movlw	4
  1892  0003E8  26F3               	addwf	prodl,f,c
  1893  0003EA  0E00               	movlw	0
  1894  0003EC  22F4               	addwfc	prodh,f,c
  1895  0003EE  0E00               	movlw	low _pin
  1896  0003F0  24F3               	addwf	prodl,w,c
  1897  0003F2  6ED9               	movwf	fsr2l,c
  1898  0003F4  0E01               	movlw	high _pin
  1899  0003F6  20F4               	addwfc	prodh,w,c
  1900  0003F8  6EDA               	movwf	fsr2h,c
  1901  0003FA  0E0A               	movlw	10
  1902  0003FC  26DE               	addwf	postinc2,f,c
  1903  0003FE  0E00               	movlw	0
  1904  000400  22DD               	addwfc	postdec2,f,c
  1905                           
  1906                           ;buttonchanges.c: 79: if(pin[pin_selected].time > 999) {
  1907  000402  5035               	movf	_pin_selected,w,c
  1908  000404  0D06               	mullw	6
  1909  000406  0E04               	movlw	4
  1910  000408  26F3               	addwf	prodl,f,c
  1911  00040A  0E00               	movlw	0
  1912  00040C  22F4               	addwfc	prodh,f,c
  1913  00040E  0E00               	movlw	low _pin
  1914  000410  24F3               	addwf	prodl,w,c
  1915  000412  6ED9               	movwf	fsr2l,c
  1916  000414  0E01               	movlw	high _pin
  1917  000416  20F4               	addwfc	prodh,w,c
  1918  000418  6EDA               	movwf	fsr2h,c
  1919  00041A  0E01               	movlw	1
  1920  00041C  BEDB               	btfsc	plusw2,7,c
  1921  00041E  D016               	goto	l2752
  1922  000420  0EE8               	movlw	232
  1923  000422  5CDE               	subwf	postinc2,w,c
  1924  000424  0E03               	movlw	3
  1925  000426  58DE               	subwfb	postinc2,w,c
  1926  000428  A0D8               	btfss	status,0,c
  1927  00042A  D010               	goto	l2752
  1928                           
  1929                           ;buttonchanges.c: 80: pin[pin_selected].time = 0;
  1930  00042C  5035               	movf	_pin_selected,w,c
  1931  00042E  0D06               	mullw	6
  1932  000430  0E04               	movlw	4
  1933  000432  26F3               	addwf	prodl,f,c
  1934  000434  0E00               	movlw	0
  1935  000436  22F4               	addwfc	prodh,f,c
  1936  000438  0E00               	movlw	low _pin
  1937  00043A  24F3               	addwf	prodl,w,c
  1938  00043C  6ED9               	movwf	fsr2l,c
  1939  00043E  0E01               	movlw	high _pin
  1940  000440  20F4               	addwfc	prodh,w,c
  1941  000442  6EDA               	movwf	fsr2h,c
  1942  000444  0E00               	movlw	0
  1943  000446  6EDE               	movwf	postinc2,c
  1944  000448  0E00               	movlw	0
  1945  00044A  6EDD               	movwf	postdec2,c
  1946  00044C                     l2752:
  1947                           
  1948                           ;buttonchanges.c: 81: }
  1949                           ;buttonchanges.c: 82: __nop();
  1950  00044C  F000               	nop	
  1951                           
  1952                           ;buttonchanges.c: 83: Set_Display('7', '-', pin[pin_selected].time);
  1953  00044E  0E2D               	movlw	45
  1954  000450  0100               	movlb	0	; () banked
  1955  000452  6F62               	movwf	Set_Display@information& (0+255),b
  1956  000454  5035               	movf	_pin_selected,w,c
  1957  000456  0D06               	mullw	6
  1958  000458  0E04               	movlw	4
  1959  00045A  26F3               	addwf	prodl,f,c
  1960  00045C  0E00               	movlw	0
  1961  00045E  22F4               	addwfc	prodh,f,c
  1962  000460  0E00               	movlw	low _pin
  1963  000462  24F3               	addwf	prodl,w,c
  1964  000464  6ED9               	movwf	fsr2l,c
  1965  000466  0E01               	movlw	high _pin
  1966  000468  20F4               	addwfc	prodh,w,c
  1967  00046A  6EDA               	movwf	fsr2h,c
  1968  00046C  CFDE F063          	movff	postinc2,Set_Display@value
  1969  000470  CFDD F064          	movff	postdec2,Set_Display@value+1
  1970  000474  0E37               	movlw	55
  1971  000476  EC8C  F006         	call	_Set_Display
  1972                           
  1973                           ;buttonchanges.c: 84: __nop();
  1974  00047A  F000               	nop	
  1975                           
  1976                           ;buttonchanges.c: 85: }
  1977                           ;buttonchanges.c: 86: } else if(PORTBbits.RB1 == 1) {
  1978  00047C  0012               	return	
  1979  00047E                     l108:
  1980  00047E  A281               	btfss	3969,1,c	;volatile
  1981  000480  D0A2               	goto	l112
  1982                           
  1983                           ;buttonchanges.c: 87: Delay_Routine(3);
  1984  000482  0E03               	movlw	3
  1985  000484  EC2D  F008         	call	_Delay_Routine
  1986                           
  1987                           ;buttonchanges.c: 88: if(PORTBbits.RB1 == 1) {
  1988  000488  A281               	btfss	3969,1,c	;volatile
  1989  00048A  0012               	return	
  1990                           
  1991                           ;buttonchanges.c: 89: if(PORTBbits.RB0 == 1) {
  1992  00048C  A081               	btfss	3969,0,c	;volatile
  1993  00048E  D007               	goto	l2770
  1994                           
  1995                           ;buttonchanges.c: 90: Delay_Routine(3);
  1996  000490  0E03               	movlw	3
  1997  000492  EC2D  F008         	call	_Delay_Routine
  1998                           
  1999                           ;buttonchanges.c: 91: if(PORTBbits.RB0 == 1) {
  2000  000496  A081               	btfss	3969,0,c	;volatile
  2001  000498  D002               	goto	l2770
  2002                           
  2003                           ;buttonchanges.c: 92: testflag = 1;
  2004  00049A  8442               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2005                           
  2006                           ;buttonchanges.c: 93: return;
  2007  00049C  0012               	return	
  2008  00049E                     l2770:
  2009                           
  2010                           ;buttonchanges.c: 95: }
  2011                           ;buttonchanges.c: 96: }
  2012                           ;buttonchanges.c: 97: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2013  00049E  5035               	movf	_pin_selected,w,c
  2014  0004A0  0D06               	mullw	6
  2015  0004A2  0E04               	movlw	4
  2016  0004A4  26F3               	addwf	prodl,f,c
  2017  0004A6  0E00               	movlw	0
  2018  0004A8  22F4               	addwfc	prodh,f,c
  2019  0004AA  0E00               	movlw	low _pin
  2020  0004AC  24F3               	addwf	prodl,w,c
  2021  0004AE  6ED9               	movwf	fsr2l,c
  2022  0004B0  0E01               	movlw	high _pin
  2023  0004B2  20F4               	addwfc	prodh,w,c
  2024  0004B4  6EDA               	movwf	fsr2h,c
  2025  0004B6  CFDE F01D          	movff	postinc2,Save_Data@store
  2026  0004BA  CFDD F01E          	movff	postdec2,Save_Data@store+1
  2027  0004BE  5035               	movf	_pin_selected,w,c
  2028  0004C0  0D06               	mullw	6
  2029  0004C2  0E02               	movlw	2
  2030  0004C4  26F3               	addwf	prodl,f,c
  2031  0004C6  0E00               	movlw	0
  2032  0004C8  22F4               	addwfc	prodh,f,c
  2033  0004CA  0E00               	movlw	low _pin
  2034  0004CC  24F3               	addwf	prodl,w,c
  2035  0004CE  6ED9               	movwf	fsr2l,c
  2036  0004D0  0E01               	movlw	high _pin
  2037  0004D2  20F4               	addwfc	prodh,w,c
  2038  0004D4  6EDA               	movwf	fsr2h,c
  2039  0004D6  50DF               	movf	indf2,w,c
  2040  0004D8  6E1F               	movwf	Save_Data@store_address,c
  2041  0004DA  ECB8  F006         	call	_Save_Data	;wreg free
  2042                           
  2043                           ;buttonchanges.c: 98: pin_selected++;
  2044  0004DE  2A35               	incf	_pin_selected,f,c
  2045                           
  2046                           ;buttonchanges.c: 99: switch (slave_selected) {
  2047  0004E0  D010               	goto	l2788
  2048  0004E2                     l2774:
  2049                           
  2050                           ;buttonchanges.c: 101: if(pin_selected > 9) {
  2051  0004E2  0E09               	movlw	9
  2052  0004E4  6435               	cpfsgt	_pin_selected,c
  2053  0004E6  D017               	goto	l2790
  2054                           
  2055                           ;buttonchanges.c: 102: pin_selected = 0;
  2056  0004E8  0E00               	movlw	0
  2057  0004EA  D009               	goto	L2
  2058  0004EC                     l2778:
  2059                           
  2060                           ;buttonchanges.c: 106: if(pin_selected > 19) {
  2061  0004EC  0E13               	movlw	19
  2062  0004EE  6435               	cpfsgt	_pin_selected,c
  2063  0004F0  D012               	goto	l2790
  2064                           
  2065                           ;buttonchanges.c: 107: pin_selected = 10;
  2066  0004F2  0E0A               	movlw	10
  2067  0004F4  D004               	goto	L2
  2068  0004F6                     l2782:
  2069                           
  2070                           ;buttonchanges.c: 111: if(pin_selected > 29) {
  2071  0004F6  0E1D               	movlw	29
  2072  0004F8  6435               	cpfsgt	_pin_selected,c
  2073  0004FA  D00D               	goto	l2790
  2074                           
  2075                           ;buttonchanges.c: 112: pin_selected = 20;
  2076  0004FC  0E14               	movlw	20
  2077  0004FE                     L2:
  2078  0004FE  6E35               	movwf	_pin_selected,c
  2079                           
  2080                           ;buttonchanges.c: 115: }
  2081                           
  2082                           ;buttonchanges.c: 113: }
  2083                           ;buttonchanges.c: 114: break;
  2084  000500  D00A               	goto	l2790
  2085  000502                     l2788:
  2086  000502  5037               	movf	_slave_selected,w,c
  2087                           
  2088                           ; Switch size 1, requested type "space"
  2089                           ; Number of cases is 3, Range of values is 0 to 2
  2090                           ; switch strategies available:
  2091                           ; Name         Instructions Cycles
  2092                           ; simple_byte           10     6 (average)
  2093                           ;	Chosen strategy is simple_byte
  2094  000504  0A00               	xorlw	0	; case 0
  2095  000506  B4D8               	btfsc	status,2,c
  2096  000508  D7EC               	goto	l2774
  2097  00050A  0A01               	xorlw	1	; case 1
  2098  00050C  B4D8               	btfsc	status,2,c
  2099  00050E  D7EE               	goto	l2778
  2100  000510  0A03               	xorlw	3	; case 2
  2101  000512  B4D8               	btfsc	status,2,c
  2102  000514  D7F0               	goto	l2782
  2103  000516                     l2790:
  2104                           
  2105                           ;buttonchanges.c: 116: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2106  000516  5035               	movf	_pin_selected,w,c
  2107  000518  0D06               	mullw	6
  2108  00051A  0E02               	movlw	2
  2109  00051C  26F3               	addwf	prodl,f,c
  2110  00051E  0E00               	movlw	0
  2111  000520  22F4               	addwfc	prodh,f,c
  2112  000522  0E00               	movlw	low _pin
  2113  000524  24F3               	addwf	prodl,w,c
  2114  000526  6ED9               	movwf	fsr2l,c
  2115  000528  0E01               	movlw	high _pin
  2116  00052A  20F4               	addwfc	prodh,w,c
  2117  00052C  6EDA               	movwf	fsr2h,c
  2118  00052E  50DF               	movf	indf2,w,c
  2119  000530  EC41  F007         	call	_Read_Data
  2120  000534  5035               	movf	_pin_selected,w,c
  2121  000536  0D06               	mullw	6
  2122  000538  0E04               	movlw	4
  2123  00053A  26F3               	addwf	prodl,f,c
  2124  00053C  0E00               	movlw	0
  2125  00053E  22F4               	addwfc	prodh,f,c
  2126  000540  0E00               	movlw	low _pin
  2127  000542  24F3               	addwf	prodl,w,c
  2128  000544  6ED9               	movwf	fsr2l,c
  2129  000546  0E01               	movlw	high _pin
  2130  000548  20F4               	addwfc	prodh,w,c
  2131  00054A  6EDA               	movwf	fsr2h,c
  2132  00054C  C01D  FFDE         	movff	?_Read_Data,postinc2
  2133  000550  C01E  FFDD         	movff	?_Read_Data+1,postdec2
  2134                           
  2135                           ;buttonchanges.c: 117: __nop();
  2136  000554  F000               	nop	
  2137                           
  2138                           ;buttonchanges.c: 118: Set_Display('7', 'A', pin[pin_selected].output);
  2139  000556  0E41               	movlw	65
  2140  000558  0100               	movlb	0	; () banked
  2141  00055A  6F62               	movwf	Set_Display@information& (0+255),b
  2142  00055C  5035               	movf	_pin_selected,w,c
  2143  00055E  0D06               	mullw	6
  2144  000560  0E01               	movlw	1
  2145  000562  26F3               	addwf	prodl,f,c
  2146  000564  0E00               	movlw	0
  2147  000566  22F4               	addwfc	prodh,f,c
  2148  000568  0E00               	movlw	low _pin
  2149  00056A  24F3               	addwf	prodl,w,c
  2150  00056C  6ED9               	movwf	fsr2l,c
  2151  00056E  0E01               	movlw	high _pin
  2152  000570  20F4               	addwfc	prodh,w,c
  2153  000572  6EDA               	movwf	fsr2h,c
  2154  000574  50DF               	movf	indf2,w,c
  2155  000576  0100               	movlb	0	; () banked
  2156  000578  6F69               	movwf	??_Check_Buttons& (0+255),b
  2157  00057A  0100               	movlb	0	; () banked
  2158  00057C  5169               	movf	??_Check_Buttons& (0+255),w,b
  2159  00057E  0100               	movlb	0	; () banked
  2160  000580  6F63               	movwf	Set_Display@value& (0+255),b
  2161  000582  6B64               	clrf	(Set_Display@value+1)& (0+255),b
  2162  000584  0E37               	movlw	55
  2163  000586  EC8C  F006         	call	_Set_Display
  2164                           
  2165                           ;buttonchanges.c: 119: Delay_Routine(30);
  2166  00058A  0E1E               	movlw	30
  2167  00058C  EC2D  F008         	call	_Delay_Routine
  2168                           
  2169                           ;buttonchanges.c: 120: Set_Display('7', '-', pin[pin_selected].time);
  2170  000590  0E2D               	movlw	45
  2171  000592  0100               	movlb	0	; () banked
  2172  000594  6F62               	movwf	Set_Display@information& (0+255),b
  2173  000596  5035               	movf	_pin_selected,w,c
  2174  000598  0D06               	mullw	6
  2175  00059A  0E04               	movlw	4
  2176  00059C  26F3               	addwf	prodl,f,c
  2177  00059E  0E00               	movlw	0
  2178  0005A0  22F4               	addwfc	prodh,f,c
  2179  0005A2  0E00               	movlw	low _pin
  2180  0005A4  24F3               	addwf	prodl,w,c
  2181  0005A6  6ED9               	movwf	fsr2l,c
  2182  0005A8  0E01               	movlw	high _pin
  2183  0005AA  20F4               	addwfc	prodh,w,c
  2184  0005AC  6EDA               	movwf	fsr2h,c
  2185  0005AE  CFDE F063          	movff	postinc2,Set_Display@value
  2186  0005B2  CFDD F064          	movff	postdec2,Set_Display@value+1
  2187  0005B6  0E37               	movlw	55
  2188  0005B8  EC8C  F006         	call	_Set_Display
  2189                           
  2190                           ;buttonchanges.c: 121: Delay_Routine(30);
  2191  0005BC  0E1E               	movlw	30
  2192  0005BE  EC2D  F008         	call	_Delay_Routine
  2193                           
  2194                           ;buttonchanges.c: 122: __nop();
  2195  0005C2  F000               	nop	
  2196                           
  2197                           ;buttonchanges.c: 123: }
  2198                           ;buttonchanges.c: 124: } else if(PORTBbits.RB0 == 1) {
  2199  0005C4  0012               	return	
  2200  0005C6                     l112:
  2201  0005C6  A081               	btfss	3969,0,c	;volatile
  2202  0005C8  0012               	return	
  2203                           
  2204                           ;buttonchanges.c: 125: Delay_Routine(3);
  2205  0005CA  0E03               	movlw	3
  2206  0005CC  EC2D  F008         	call	_Delay_Routine
  2207                           
  2208                           ;buttonchanges.c: 126: if(PORTBbits.RB0 == 1) {
  2209  0005D0  A081               	btfss	3969,0,c	;volatile
  2210  0005D2  0012               	return	
  2211                           
  2212                           ;buttonchanges.c: 127: if(PORTBbits.RB1 == 1) {
  2213  0005D4  A281               	btfss	3969,1,c	;volatile
  2214  0005D6  D007               	goto	l2816
  2215                           
  2216                           ;buttonchanges.c: 128: Delay_Routine(3);
  2217  0005D8  0E03               	movlw	3
  2218  0005DA  EC2D  F008         	call	_Delay_Routine
  2219                           
  2220                           ;buttonchanges.c: 129: if(PORTBbits.RB1 == 1) {
  2221  0005DE  A281               	btfss	3969,1,c	;volatile
  2222  0005E0  D002               	goto	l2816
  2223                           
  2224                           ;buttonchanges.c: 130: testflag = 1;
  2225  0005E2  8442               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2226                           
  2227                           ;buttonchanges.c: 131: return;
  2228  0005E4  0012               	return	
  2229  0005E6                     l2816:
  2230                           
  2231                           ;buttonchanges.c: 133: }
  2232                           ;buttonchanges.c: 134: }
  2233                           ;buttonchanges.c: 135: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2234  0005E6  5035               	movf	_pin_selected,w,c
  2235  0005E8  0D06               	mullw	6
  2236  0005EA  0E04               	movlw	4
  2237  0005EC  26F3               	addwf	prodl,f,c
  2238  0005EE  0E00               	movlw	0
  2239  0005F0  22F4               	addwfc	prodh,f,c
  2240  0005F2  0E00               	movlw	low _pin
  2241  0005F4  24F3               	addwf	prodl,w,c
  2242  0005F6  6ED9               	movwf	fsr2l,c
  2243  0005F8  0E01               	movlw	high _pin
  2244  0005FA  20F4               	addwfc	prodh,w,c
  2245  0005FC  6EDA               	movwf	fsr2h,c
  2246  0005FE  CFDE F01D          	movff	postinc2,Save_Data@store
  2247  000602  CFDD F01E          	movff	postdec2,Save_Data@store+1
  2248  000606  5035               	movf	_pin_selected,w,c
  2249  000608  0D06               	mullw	6
  2250  00060A  0E02               	movlw	2
  2251  00060C  26F3               	addwf	prodl,f,c
  2252  00060E  0E00               	movlw	0
  2253  000610  22F4               	addwfc	prodh,f,c
  2254  000612  0E00               	movlw	low _pin
  2255  000614  24F3               	addwf	prodl,w,c
  2256  000616  6ED9               	movwf	fsr2l,c
  2257  000618  0E01               	movlw	high _pin
  2258  00061A  20F4               	addwfc	prodh,w,c
  2259  00061C  6EDA               	movwf	fsr2h,c
  2260  00061E  50DF               	movf	indf2,w,c
  2261  000620  6E1F               	movwf	Save_Data@store_address,c
  2262  000622  ECB8  F006         	call	_Save_Data	;wreg free
  2263                           
  2264                           ;buttonchanges.c: 136: slave_selected++;
  2265  000626  2A37               	incf	_slave_selected,f,c
  2266                           
  2267                           ;buttonchanges.c: 137: if(slave_selected > 2) {
  2268  000628  0E02               	movlw	2
  2269  00062A  6437               	cpfsgt	_slave_selected,c
  2270  00062C  D002               	goto	l2824
  2271                           
  2272                           ;buttonchanges.c: 138: slave_selected = 0;
  2273  00062E  0E00               	movlw	0
  2274  000630  6E37               	movwf	_slave_selected,c
  2275  000632                     l2824:
  2276                           
  2277                           ;buttonchanges.c: 139: }
  2278                           ;buttonchanges.c: 140: pin_selected = slave_selected * 10;
  2279  000632  5037               	movf	_slave_selected,w,c
  2280  000634  0D0A               	mullw	10
  2281  000636  CFF3 F035          	movff	prodl,_pin_selected
  2282                           
  2283                           ;buttonchanges.c: 141: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2284  00063A  5035               	movf	_pin_selected,w,c
  2285  00063C  0D06               	mullw	6
  2286  00063E  0E02               	movlw	2
  2287  000640  26F3               	addwf	prodl,f,c
  2288  000642  0E00               	movlw	0
  2289  000644  22F4               	addwfc	prodh,f,c
  2290  000646  0E00               	movlw	low _pin
  2291  000648  24F3               	addwf	prodl,w,c
  2292  00064A  6ED9               	movwf	fsr2l,c
  2293  00064C  0E01               	movlw	high _pin
  2294  00064E  20F4               	addwfc	prodh,w,c
  2295  000650  6EDA               	movwf	fsr2h,c
  2296  000652  50DF               	movf	indf2,w,c
  2297  000654  EC41  F007         	call	_Read_Data
  2298  000658  5035               	movf	_pin_selected,w,c
  2299  00065A  0D06               	mullw	6
  2300  00065C  0E04               	movlw	4
  2301  00065E  26F3               	addwf	prodl,f,c
  2302  000660  0E00               	movlw	0
  2303  000662  22F4               	addwfc	prodh,f,c
  2304  000664  0E00               	movlw	low _pin
  2305  000666  24F3               	addwf	prodl,w,c
  2306  000668  6ED9               	movwf	fsr2l,c
  2307  00066A  0E01               	movlw	high _pin
  2308  00066C  20F4               	addwfc	prodh,w,c
  2309  00066E  6EDA               	movwf	fsr2h,c
  2310  000670  C01D  FFDE         	movff	?_Read_Data,postinc2
  2311  000674  C01E  FFDD         	movff	?_Read_Data+1,postdec2
  2312                           
  2313                           ;buttonchanges.c: 142: __nop();
  2314  000678  F000               	nop	
  2315                           
  2316                           ;buttonchanges.c: 143: Set_Display('7', 'E', pin[pin_selected].slave);
  2317  00067A  0E45               	movlw	69
  2318  00067C  0100               	movlb	0	; () banked
  2319  00067E  6F62               	movwf	Set_Display@information& (0+255),b
  2320  000680  5035               	movf	_pin_selected,w,c
  2321  000682  0D06               	mullw	6
  2322  000684  0E00               	movlw	low _pin
  2323  000686  24F3               	addwf	prodl,w,c
  2324  000688  6ED9               	movwf	fsr2l,c
  2325  00068A  0E01               	movlw	high _pin
  2326  00068C  20F4               	addwfc	prodh,w,c
  2327  00068E  6EDA               	movwf	fsr2h,c
  2328  000690  50DF               	movf	indf2,w,c
  2329  000692  0100               	movlb	0	; () banked
  2330  000694  6F69               	movwf	??_Check_Buttons& (0+255),b
  2331  000696  0100               	movlb	0	; () banked
  2332  000698  5169               	movf	??_Check_Buttons& (0+255),w,b
  2333  00069A  0100               	movlb	0	; () banked
  2334  00069C  6F63               	movwf	Set_Display@value& (0+255),b
  2335  00069E  6B64               	clrf	(Set_Display@value+1)& (0+255),b
  2336  0006A0  0E37               	movlw	55
  2337  0006A2  EC8C  F006         	call	_Set_Display
  2338                           
  2339                           ;buttonchanges.c: 145: Delay_Routine(30);
  2340  0006A6  0E1E               	movlw	30
  2341  0006A8  EC2D  F008         	call	_Delay_Routine
  2342                           
  2343                           ;buttonchanges.c: 146: Set_Display('7', 'A', pin[pin_selected].output);
  2344  0006AC  0E41               	movlw	65
  2345  0006AE  0100               	movlb	0	; () banked
  2346  0006B0  6F62               	movwf	Set_Display@information& (0+255),b
  2347  0006B2  5035               	movf	_pin_selected,w,c
  2348  0006B4  0D06               	mullw	6
  2349  0006B6  0E01               	movlw	1
  2350  0006B8  26F3               	addwf	prodl,f,c
  2351  0006BA  0E00               	movlw	0
  2352  0006BC  22F4               	addwfc	prodh,f,c
  2353  0006BE  0E00               	movlw	low _pin
  2354  0006C0  24F3               	addwf	prodl,w,c
  2355  0006C2  6ED9               	movwf	fsr2l,c
  2356  0006C4  0E01               	movlw	high _pin
  2357  0006C6  20F4               	addwfc	prodh,w,c
  2358  0006C8  6EDA               	movwf	fsr2h,c
  2359  0006CA  50DF               	movf	indf2,w,c
  2360  0006CC  0100               	movlb	0	; () banked
  2361  0006CE  6F69               	movwf	??_Check_Buttons& (0+255),b
  2362  0006D0  0100               	movlb	0	; () banked
  2363  0006D2  5169               	movf	??_Check_Buttons& (0+255),w,b
  2364  0006D4  0100               	movlb	0	; () banked
  2365  0006D6  6F63               	movwf	Set_Display@value& (0+255),b
  2366  0006D8  6B64               	clrf	(Set_Display@value+1)& (0+255),b
  2367  0006DA  0E37               	movlw	55
  2368  0006DC  EC8C  F006         	call	_Set_Display
  2369                           
  2370                           ;buttonchanges.c: 147: Delay_Routine(30);
  2371  0006E0  0E1E               	movlw	30
  2372  0006E2  EC2D  F008         	call	_Delay_Routine
  2373                           
  2374                           ;buttonchanges.c: 148: Set_Display('7', '-', pin[pin_selected].time);
  2375  0006E6  0E2D               	movlw	45
  2376  0006E8  0100               	movlb	0	; () banked
  2377  0006EA  6F62               	movwf	Set_Display@information& (0+255),b
  2378  0006EC  5035               	movf	_pin_selected,w,c
  2379  0006EE  0D06               	mullw	6
  2380  0006F0  0E04               	movlw	4
  2381  0006F2  26F3               	addwf	prodl,f,c
  2382  0006F4  0E00               	movlw	0
  2383  0006F6  22F4               	addwfc	prodh,f,c
  2384  0006F8  0E00               	movlw	low _pin
  2385  0006FA  24F3               	addwf	prodl,w,c
  2386  0006FC  6ED9               	movwf	fsr2l,c
  2387  0006FE  0E01               	movlw	high _pin
  2388  000700  20F4               	addwfc	prodh,w,c
  2389  000702  6EDA               	movwf	fsr2h,c
  2390  000704  CFDE F063          	movff	postinc2,Set_Display@value
  2391  000708  CFDD F064          	movff	postdec2,Set_Display@value+1
  2392  00070C  0E37               	movlw	55
  2393  00070E  EC8C  F006         	call	_Set_Display
  2394                           
  2395                           ;buttonchanges.c: 149: Delay_Routine(30);
  2396  000712  0E1E               	movlw	30
  2397  000714  EC2D  F008         	call	_Delay_Routine
  2398                           
  2399                           ;buttonchanges.c: 150: __nop();
  2400  000718  F000               	nop	
  2401  00071A  0012               	return	
  2402  00071C                     __end_of_Check_Buttons:
  2403                           	opt stack 0
  2404                           tblptru	equ	0xFF8
  2405                           tblptrh	equ	0xFF7
  2406                           tblptrl	equ	0xFF6
  2407                           tablat	equ	0xFF5
  2408                           prodh	equ	0xFF4
  2409                           prodl	equ	0xFF3
  2410                           intcon	equ	0xFF2
  2411                           postinc0	equ	0xFEE
  2412                           wreg	equ	0xFE8
  2413                           postdec1	equ	0xFE5
  2414                           fsr1l	equ	0xFE1
  2415                           indf2	equ	0xFDF
  2416                           postinc2	equ	0xFDE
  2417                           postdec2	equ	0xFDD
  2418                           plusw2	equ	0xFDB
  2419                           fsr2h	equ	0xFDA
  2420                           fsr2l	equ	0xFD9
  2421                           status	equ	0xFD8
  2422                           
  2423 ;; *************** function _Start_Timer *****************
  2424 ;; Defined at:
  2425 ;;		line 12 in file "ignition.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;		None
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;		None               void
  2432 ;; Registers used:
  2433 ;;		wreg, status,2
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1
  2439 ;;      Params:         0       0       0
  2440 ;;      Locals:         0       0       0
  2441 ;;      Temps:          0       0       0
  2442 ;;      Totals:         0       0       0
  2443 ;;Total ram usage:        0 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    3
  2446 ;; This function calls:
  2447 ;;		Nothing
  2448 ;; This function is called by:
  2449 ;;		_Check_Buttons
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text12
  2454  00109C                     __ptext12:
  2455                           	opt stack 0
  2456  00109C                     _Start_Timer:
  2457                           	opt stack 26
  2458                           
  2459                           ;ignition.c: 13: if(ignite_ready == 1) {
  2460                           
  2461                           ;incstack = 0
  2462  00109C  A042               	btfss	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  2463  00109E  0012               	return	
  2464                           
  2465                           ;ignition.c: 14: TMR1L = 0;
  2466  0010A0  0E00               	movlw	0
  2467  0010A2  6ECE               	movwf	4046,c	;volatile
  2468                           
  2469                           ;ignition.c: 15: TMR1H = 0;
  2470  0010A4  0E00               	movlw	0
  2471  0010A6  6ECF               	movwf	4047,c	;volatile
  2472                           
  2473                           ;ignition.c: 16: TMR3L = 0;
  2474  0010A8  0E00               	movlw	0
  2475  0010AA  6EB2               	movwf	4018,c	;volatile
  2476                           
  2477                           ;ignition.c: 17: TMR3H = 0;
  2478  0010AC  0E00               	movlw	0
  2479  0010AE  6EB3               	movwf	4019,c	;volatile
  2480                           
  2481                           ;ignition.c: 18: PIR1bits.TMR1IF = 0;
  2482  0010B0  909E               	bcf	3998,0,c	;volatile
  2483                           
  2484                           ;ignition.c: 19: PIR2bits.TMR3IF = 0;
  2485  0010B2  92A1               	bcf	4001,1,c	;volatile
  2486                           
  2487                           ;ignition.c: 20: T1CONbits.TMR1ON = 1;
  2488  0010B4  80CD               	bsf	4045,0,c	;volatile
  2489  0010B6  0012               	return	
  2490  0010B8                     __end_of_Start_Timer:
  2491                           	opt stack 0
  2492                           tblptru	equ	0xFF8
  2493                           tblptrh	equ	0xFF7
  2494                           tblptrl	equ	0xFF6
  2495                           tablat	equ	0xFF5
  2496                           prodh	equ	0xFF4
  2497                           prodl	equ	0xFF3
  2498                           intcon	equ	0xFF2
  2499                           postinc0	equ	0xFEE
  2500                           wreg	equ	0xFE8
  2501                           postdec1	equ	0xFE5
  2502                           fsr1l	equ	0xFE1
  2503                           indf2	equ	0xFDF
  2504                           postinc2	equ	0xFDE
  2505                           postdec2	equ	0xFDD
  2506                           plusw2	equ	0xFDB
  2507                           fsr2h	equ	0xFDA
  2508                           fsr2l	equ	0xFD9
  2509                           status	equ	0xFD8
  2510                           
  2511 ;; *************** function _Del_Data *****************
  2512 ;; Defined at:
  2513 ;;		line 85 in file "storage.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;		None
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  counter         1    8[BANK0 ] unsigned char 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;		None               void
  2520 ;; Registers used:
  2521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1
  2527 ;;      Params:         0       0       0
  2528 ;;      Locals:         0       1       0
  2529 ;;      Temps:          0       0       0
  2530 ;;      Totals:         0       1       0
  2531 ;;Total ram usage:        1 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    8
  2534 ;; This function calls:
  2535 ;;		_Delay_Routine
  2536 ;;		_Evaluate_Display
  2537 ;;		_Load_Data
  2538 ;;		_Save_Data
  2539 ;; This function is called by:
  2540 ;;		_Check_Buttons
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text13
  2545  000E02                     __ptext13:
  2546                           	opt stack 0
  2547  000E02                     _Del_Data:
  2548                           	opt stack 21
  2549                           
  2550                           ;storage.c: 86: Evaluate_Display(3, "DEL");
  2551                           
  2552                           ;incstack = 0
  2553  000E02  0E4A               	movlw	low STR_2
  2554  000E04  6E25               	movwf	Evaluate_Display@evaluate,c
  2555  000E06  0E02               	movlw	high STR_2
  2556  000E08  6E26               	movwf	Evaluate_Display@evaluate+1,c
  2557  000E0A  0E03               	movlw	3
  2558  000E0C  EC8E  F003         	call	_Evaluate_Display
  2559                           
  2560                           ;storage.c: 87: Delay_Routine(3);
  2561  000E10  0E03               	movlw	3
  2562  000E12  EC2D  F008         	call	_Delay_Routine
  2563                           
  2564                           ;storage.c: 88: for(unsigned char counter = 0; counter < 30; counter++) {
  2565  000E16  0E00               	movlw	0
  2566  000E18  0100               	movlb	0	; () banked
  2567  000E1A  6F68               	movwf	Del_Data@counter& (0+255),b
  2568  000E1C                     l2670:
  2569                           
  2570                           ; BSR set to: 0
  2571  000E1C  0E1D               	movlw	29
  2572  000E1E  0100               	movlb	0	; () banked
  2573  000E20  6568               	cpfsgt	Del_Data@counter& (0+255),b
  2574  000E22  D001               	goto	l2674
  2575  000E24  D00B               	goto	l2680
  2576  000E26                     l2674:
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;storage.c: 89: Save_Data(0, counter);
  2580  000E26  0E00               	movlw	0
  2581  000E28  6E1E               	movwf	Save_Data@store+1,c
  2582  000E2A  0E00               	movlw	0
  2583  000E2C  6E1D               	movwf	Save_Data@store,c
  2584  000E2E  C068  F01F         	movff	Del_Data@counter,Save_Data@store_address
  2585  000E32  ECB8  F006         	call	_Save_Data	;wreg free
  2586  000E36  0100               	movlb	0	; () banked
  2587  000E38  2B68               	incf	Del_Data@counter& (0+255),f,b
  2588  000E3A  D7F0               	goto	l2670
  2589  000E3C                     l2680:
  2590                           
  2591                           ; BSR set to: 0
  2592                           ;storage.c: 90: }
  2593                           ;storage.c: 91: Load_Data();
  2594  000E3C  ECAC  F004         	call	_Load_Data	;wreg free
  2595  000E40  0012               	return		;funcret
  2596  000E42                     __end_of_Del_Data:
  2597                           	opt stack 0
  2598                           tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           prodh	equ	0xFF4
  2603                           prodl	equ	0xFF3
  2604                           intcon	equ	0xFF2
  2605                           postinc0	equ	0xFEE
  2606                           wreg	equ	0xFE8
  2607                           postdec1	equ	0xFE5
  2608                           fsr1l	equ	0xFE1
  2609                           indf2	equ	0xFDF
  2610                           postinc2	equ	0xFDE
  2611                           postdec2	equ	0xFDD
  2612                           plusw2	equ	0xFDB
  2613                           fsr2h	equ	0xFDA
  2614                           fsr2l	equ	0xFD9
  2615                           status	equ	0xFD8
  2616                           
  2617 ;; *************** function _Save_Data *****************
  2618 ;; Defined at:
  2619 ;;		line 8 in file "storage.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  store           2   28[COMRAM] unsigned int 
  2622 ;;  store_addres    1   30[COMRAM] unsigned char 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;		None               void
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1
  2634 ;;      Params:         3       0       0
  2635 ;;      Locals:         0       0       0
  2636 ;;      Temps:          0       0       0
  2637 ;;      Totals:         3       0       0
  2638 ;;Total ram usage:        3 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    3
  2641 ;; This function calls:
  2642 ;;		Nothing
  2643 ;; This function is called by:
  2644 ;;		_Check_Buttons
  2645 ;;		_Del_Data
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text14
  2650  000D70                     __ptext14:
  2651                           	opt stack 0
  2652  000D70                     _Save_Data:
  2653                           	opt stack 26
  2654                           
  2655                           ;storage.c: 10: EEADR = store_address;
  2656                           
  2657                           ;incstack = 0
  2658  000D70  C01F  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2659                           
  2660                           ;storage.c: 11: EEDATA = store;
  2661  000D74  C01D  FFA8         	movff	Save_Data@store,4008	;volatile
  2662                           
  2663                           ;storage.c: 12: EECON1bits.EEPGD = 0;
  2664  000D78  9EA6               	bcf	4006,7,c	;volatile
  2665                           
  2666                           ;storage.c: 13: EECON1bits.CFGS = 0;
  2667  000D7A  9CA6               	bcf	4006,6,c	;volatile
  2668                           
  2669                           ;storage.c: 14: INTCONbits.GIE = 0;
  2670  000D7C  9EF2               	bcf	intcon,7,c	;volatile
  2671                           
  2672                           ;storage.c: 15: EECON1bits.WREN = 1;
  2673  000D7E  84A6               	bsf	4006,2,c	;volatile
  2674                           
  2675                           ;storage.c: 16: EECON2 = 0x55;
  2676  000D80  0E55               	movlw	85
  2677  000D82  6EA7               	movwf	4007,c	;volatile
  2678                           
  2679                           ;storage.c: 17: EECON2 = 0xAA;
  2680  000D84  0EAA               	movlw	170
  2681  000D86  6EA7               	movwf	4007,c	;volatile
  2682                           
  2683                           ;storage.c: 18: EECON1bits.WR = 1;
  2684  000D88  82A6               	bsf	4006,1,c	;volatile
  2685  000D8A                     l337:
  2686  000D8A  A8A1               	btfss	4001,4,c	;volatile
  2687  000D8C  D7FE               	goto	l337
  2688                           
  2689                           ;storage.c: 20: PIR2bits.EEIF = 0;
  2690  000D8E  98A1               	bcf	4001,4,c	;volatile
  2691                           
  2692                           ;storage.c: 21: store >>= 8;
  2693  000D90  501E               	movf	Save_Data@store+1,w,c
  2694  000D92  6E1D               	movwf	Save_Data@store,c
  2695  000D94  6A1E               	clrf	Save_Data@store+1,c
  2696                           
  2697                           ;storage.c: 22: store_address += 50;
  2698  000D96  0E32               	movlw	50
  2699  000D98  261F               	addwf	Save_Data@store_address,f,c
  2700                           
  2701                           ;storage.c: 23: EEADR = store_address;
  2702  000D9A  C01F  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2703                           
  2704                           ;storage.c: 24: EEDATA = store;
  2705  000D9E  C01D  FFA8         	movff	Save_Data@store,4008	;volatile
  2706                           
  2707                           ;storage.c: 25: EECON1bits.EEPGD = 0;
  2708  000DA2  9EA6               	bcf	4006,7,c	;volatile
  2709                           
  2710                           ;storage.c: 26: EECON1bits.CFGS = 0;
  2711  000DA4  9CA6               	bcf	4006,6,c	;volatile
  2712                           
  2713                           ;storage.c: 27: EECON1bits.WREN = 1;
  2714  000DA6  84A6               	bsf	4006,2,c	;volatile
  2715                           
  2716                           ;storage.c: 28: INTCONbits.GIE = 0;
  2717  000DA8  9EF2               	bcf	intcon,7,c	;volatile
  2718                           
  2719                           ;storage.c: 29: EECON2 = 0x55;
  2720  000DAA  0E55               	movlw	85
  2721  000DAC  6EA7               	movwf	4007,c	;volatile
  2722                           
  2723                           ;storage.c: 30: EECON2 = 0xAA;
  2724  000DAE  0EAA               	movlw	170
  2725  000DB0  6EA7               	movwf	4007,c	;volatile
  2726                           
  2727                           ;storage.c: 31: EECON1bits.WR = 1;
  2728  000DB2  82A6               	bsf	4006,1,c	;volatile
  2729  000DB4                     l340:
  2730  000DB4  A8A1               	btfss	4001,4,c	;volatile
  2731  000DB6  D7FE               	goto	l340
  2732                           
  2733                           ;storage.c: 33: PIR2bits.EEIF = 0;
  2734  000DB8  98A1               	bcf	4001,4,c	;volatile
  2735                           
  2736                           ;storage.c: 34: EECON1bits.WREN = 0;
  2737  000DBA  94A6               	bcf	4006,2,c	;volatile
  2738                           
  2739                           ;storage.c: 35: INTCONbits.GIE = 1;
  2740  000DBC  8EF2               	bsf	intcon,7,c	;volatile
  2741  000DBE  0012               	return		;funcret
  2742  000DC0                     __end_of_Save_Data:
  2743                           	opt stack 0
  2744                           tblptru	equ	0xFF8
  2745                           tblptrh	equ	0xFF7
  2746                           tblptrl	equ	0xFF6
  2747                           tablat	equ	0xFF5
  2748                           prodh	equ	0xFF4
  2749                           prodl	equ	0xFF3
  2750                           intcon	equ	0xFF2
  2751                           postinc0	equ	0xFEE
  2752                           wreg	equ	0xFE8
  2753                           postdec1	equ	0xFE5
  2754                           fsr1l	equ	0xFE1
  2755                           indf2	equ	0xFDF
  2756                           postinc2	equ	0xFDE
  2757                           postdec2	equ	0xFDD
  2758                           plusw2	equ	0xFDB
  2759                           fsr2h	equ	0xFDA
  2760                           fsr2l	equ	0xFD9
  2761                           status	equ	0xFD8
  2762                           
  2763 ;; *************** function _Load_Data *****************
  2764 ;; Defined at:
  2765 ;;		line 65 in file "storage.c"
  2766 ;; Parameters:    Size  Location     Type
  2767 ;;		None
  2768 ;; Auto vars:     Size  Location     Type
  2769 ;;  counter         1    7[BANK0 ] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;		None               void
  2772 ;; Registers used:
  2773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1
  2779 ;;      Params:         0       0       0
  2780 ;;      Locals:         0       1       0
  2781 ;;      Temps:          0       1       0
  2782 ;;      Totals:         0       2       0
  2783 ;;Total ram usage:        2 bytes
  2784 ;; Hardware stack levels used:    1
  2785 ;; Hardware stack levels required when called:    7
  2786 ;; This function calls:
  2787 ;;		_Delay_Routine
  2788 ;;		_Evaluate_Display
  2789 ;;		_Read_Data
  2790 ;;		_Set_Display
  2791 ;; This function is called by:
  2792 ;;		_main
  2793 ;;		_Del_Data
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text15
  2798  000958                     __ptext15:
  2799                           	opt stack 0
  2800  000958                     _Load_Data:
  2801                           	opt stack 23
  2802                           
  2803                           ;storage.c: 66: Evaluate_Display(3, "LOA");
  2804                           
  2805                           ;incstack = 0
  2806  000958  0E46               	movlw	low STR_1
  2807  00095A  6E25               	movwf	Evaluate_Display@evaluate,c
  2808  00095C  0E02               	movlw	high STR_1
  2809  00095E  6E26               	movwf	Evaluate_Display@evaluate+1,c
  2810  000960  0E03               	movlw	3
  2811  000962  EC8E  F003         	call	_Evaluate_Display
  2812                           
  2813                           ;storage.c: 67: Delay_Routine(3);
  2814  000966  0E03               	movlw	3
  2815  000968  EC2D  F008         	call	_Delay_Routine
  2816                           
  2817                           ;storage.c: 68: for(unsigned char counter = 0; counter < 30; counter++) {
  2818  00096C  0E00               	movlw	0
  2819  00096E  0100               	movlb	0	; () banked
  2820  000970  6F67               	movwf	Load_Data@counter& (0+255),b
  2821  000972                     l2612:
  2822                           
  2823                           ; BSR set to: 0
  2824  000972  0E1D               	movlw	29
  2825  000974  0100               	movlb	0	; () banked
  2826  000976  6567               	cpfsgt	Load_Data@counter& (0+255),b
  2827  000978  D001               	goto	l2616
  2828  00097A  D018               	goto	l2622
  2829  00097C                     l2616:
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;storage.c: 69: pin[counter].time = Read_Data(counter);
  2833  00097C  0100               	movlb	0	; () banked
  2834  00097E  5167               	movf	Load_Data@counter& (0+255),w,b
  2835  000980  EC41  F007         	call	_Read_Data
  2836  000984  0100               	movlb	0	; () banked
  2837  000986  5167               	movf	Load_Data@counter& (0+255),w,b
  2838  000988  0D06               	mullw	6
  2839  00098A  0E04               	movlw	4
  2840  00098C  26F3               	addwf	prodl,f,c
  2841  00098E  0E00               	movlw	0
  2842  000990  22F4               	addwfc	prodh,f,c
  2843  000992  0E00               	movlw	low _pin
  2844  000994  24F3               	addwf	prodl,w,c
  2845  000996  6ED9               	movwf	fsr2l,c
  2846  000998  0E01               	movlw	high _pin
  2847  00099A  20F4               	addwfc	prodh,w,c
  2848  00099C  6EDA               	movwf	fsr2h,c
  2849  00099E  C01D  FFDE         	movff	?_Read_Data,postinc2
  2850  0009A2  C01E  FFDD         	movff	?_Read_Data+1,postdec2
  2851                           
  2852                           ; BSR set to: 0
  2853  0009A6  0100               	movlb	0	; () banked
  2854  0009A8  2B67               	incf	Load_Data@counter& (0+255),f,b
  2855  0009AA  D7E3               	goto	l2612
  2856  0009AC                     l2622:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;storage.c: 70: }
  2860                           ;storage.c: 71: slave_selected = 0;
  2861  0009AC  0E00               	movlw	0
  2862  0009AE  6E37               	movwf	_slave_selected,c
  2863                           
  2864                           ;storage.c: 72: pin_selected = 0;
  2865  0009B0  0E00               	movlw	0
  2866  0009B2  6E35               	movwf	_pin_selected,c
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;storage.c: 73: Set_Display('7', 'E', pin[pin_selected].slave);
  2870  0009B4  0E45               	movlw	69
  2871  0009B6  0100               	movlb	0	; () banked
  2872  0009B8  6F62               	movwf	Set_Display@information& (0+255),b
  2873  0009BA  5035               	movf	_pin_selected,w,c
  2874  0009BC  0D06               	mullw	6
  2875  0009BE  0E00               	movlw	low _pin
  2876  0009C0  24F3               	addwf	prodl,w,c
  2877  0009C2  6ED9               	movwf	fsr2l,c
  2878  0009C4  0E01               	movlw	high _pin
  2879  0009C6  20F4               	addwfc	prodh,w,c
  2880  0009C8  6EDA               	movwf	fsr2h,c
  2881  0009CA  50DF               	movf	indf2,w,c
  2882  0009CC  0100               	movlb	0	; () banked
  2883  0009CE  6F66               	movwf	??_Load_Data& (0+255),b
  2884  0009D0  0100               	movlb	0	; () banked
  2885  0009D2  5166               	movf	??_Load_Data& (0+255),w,b
  2886  0009D4  0100               	movlb	0	; () banked
  2887  0009D6  6F63               	movwf	Set_Display@value& (0+255),b
  2888  0009D8  6B64               	clrf	(Set_Display@value+1)& (0+255),b
  2889  0009DA  0E37               	movlw	55
  2890  0009DC  EC8C  F006         	call	_Set_Display
  2891                           
  2892                           ;storage.c: 75: Delay_Routine(20);
  2893  0009E0  0E14               	movlw	20
  2894  0009E2  EC2D  F008         	call	_Delay_Routine
  2895                           
  2896                           ;storage.c: 76: Set_Display('7', 'A', pin[pin_selected].output);
  2897  0009E6  0E41               	movlw	65
  2898  0009E8  0100               	movlb	0	; () banked
  2899  0009EA  6F62               	movwf	Set_Display@information& (0+255),b
  2900  0009EC  5035               	movf	_pin_selected,w,c
  2901  0009EE  0D06               	mullw	6
  2902  0009F0  0E01               	movlw	1
  2903  0009F2  26F3               	addwf	prodl,f,c
  2904  0009F4  0E00               	movlw	0
  2905  0009F6  22F4               	addwfc	prodh,f,c
  2906  0009F8  0E00               	movlw	low _pin
  2907  0009FA  24F3               	addwf	prodl,w,c
  2908  0009FC  6ED9               	movwf	fsr2l,c
  2909  0009FE  0E01               	movlw	high _pin
  2910  000A00  20F4               	addwfc	prodh,w,c
  2911  000A02  6EDA               	movwf	fsr2h,c
  2912  000A04  50DF               	movf	indf2,w,c
  2913  000A06  0100               	movlb	0	; () banked
  2914  000A08  6F66               	movwf	??_Load_Data& (0+255),b
  2915  000A0A  0100               	movlb	0	; () banked
  2916  000A0C  5166               	movf	??_Load_Data& (0+255),w,b
  2917  000A0E  0100               	movlb	0	; () banked
  2918  000A10  6F63               	movwf	Set_Display@value& (0+255),b
  2919  000A12  6B64               	clrf	(Set_Display@value+1)& (0+255),b
  2920  000A14  0E37               	movlw	55
  2921  000A16  EC8C  F006         	call	_Set_Display
  2922                           
  2923                           ;storage.c: 77: Delay_Routine(20);
  2924  000A1A  0E14               	movlw	20
  2925  000A1C  EC2D  F008         	call	_Delay_Routine
  2926                           
  2927                           ;storage.c: 78: Set_Display('7', '-', pin[pin_selected].time);
  2928  000A20  0E2D               	movlw	45
  2929  000A22  0100               	movlb	0	; () banked
  2930  000A24  6F62               	movwf	Set_Display@information& (0+255),b
  2931  000A26  5035               	movf	_pin_selected,w,c
  2932  000A28  0D06               	mullw	6
  2933  000A2A  0E04               	movlw	4
  2934  000A2C  26F3               	addwf	prodl,f,c
  2935  000A2E  0E00               	movlw	0
  2936  000A30  22F4               	addwfc	prodh,f,c
  2937  000A32  0E00               	movlw	low _pin
  2938  000A34  24F3               	addwf	prodl,w,c
  2939  000A36  6ED9               	movwf	fsr2l,c
  2940  000A38  0E01               	movlw	high _pin
  2941  000A3A  20F4               	addwfc	prodh,w,c
  2942  000A3C  6EDA               	movwf	fsr2h,c
  2943  000A3E  CFDE F063          	movff	postinc2,Set_Display@value
  2944  000A42  CFDD F064          	movff	postdec2,Set_Display@value+1
  2945  000A46  0E37               	movlw	55
  2946  000A48  EC8C  F006         	call	_Set_Display
  2947                           
  2948                           ;storage.c: 79: Delay_Routine(20);
  2949  000A4C  0E14               	movlw	20
  2950  000A4E  EC2D  F008         	call	_Delay_Routine
  2951  000A52  0012               	return		;funcret
  2952  000A54                     __end_of_Load_Data:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           tblptrh	equ	0xFF7
  2956                           tblptrl	equ	0xFF6
  2957                           tablat	equ	0xFF5
  2958                           prodh	equ	0xFF4
  2959                           prodl	equ	0xFF3
  2960                           intcon	equ	0xFF2
  2961                           postinc0	equ	0xFEE
  2962                           wreg	equ	0xFE8
  2963                           postdec1	equ	0xFE5
  2964                           fsr1l	equ	0xFE1
  2965                           indf2	equ	0xFDF
  2966                           postinc2	equ	0xFDE
  2967                           postdec2	equ	0xFDD
  2968                           plusw2	equ	0xFDB
  2969                           fsr2h	equ	0xFDA
  2970                           fsr2l	equ	0xFD9
  2971                           status	equ	0xFD8
  2972                           
  2973 ;; *************** function _Set_Display *****************
  2974 ;; Defined at:
  2975 ;;		line 135 in file "display.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  type            1    wreg     unsigned char 
  2978 ;;  information     1    2[BANK0 ] unsigned char 
  2979 ;;  value           2    3[BANK0 ] unsigned int 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  type            1    5[BANK0 ] unsigned char 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;		None               void
  2984 ;; Registers used:
  2985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1
  2991 ;;      Params:         0       3       0
  2992 ;;      Locals:         0       1       0
  2993 ;;      Temps:          0       0       0
  2994 ;;      Totals:         0       4       0
  2995 ;;Total ram usage:        4 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    6
  2998 ;; This function calls:
  2999 ;;		_Evaluate_Display
  3000 ;;		_Evaluate_Signs
  3001 ;;		_Write_Display_Byte
  3002 ;; This function is called by:
  3003 ;;		_main
  3004 ;;		_Check_Buttons
  3005 ;;		_Load_Data
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text16
  3010  000D18                     __ptext16:
  3011                           	opt stack 0
  3012  000D18                     _Set_Display:
  3013                           	opt stack 24
  3014                           
  3015                           ;incstack = 0
  3016                           ;Set_Display@type stored from wreg
  3017  000D18  0100               	movlb	0	; () banked
  3018  000D1A  6F65               	movwf	Set_Display@type& (0+255),b
  3019                           
  3020                           ;display.c: 137: switch (type) {
  3021  000D1C  D01C               	goto	l2570
  3022  000D1E                     l2554:
  3023                           
  3024                           ;display.c: 139: if(information != '-') {
  3025  000D1E  0E2D               	movlw	45
  3026  000D20  0100               	movlb	0	; () banked
  3027  000D22  1962               	xorwf	Set_Display@information& (0+255),w,b
  3028  000D24  B4D8               	btfsc	status,2,c
  3029  000D26  D010               	goto	l2566
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;display.c: 140: signs[0] = value;
  3033  000D28  C063  F03F         	movff	Set_Display@value,_signs
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;display.c: 141: signs[0] += 0x30;
  3037  000D2C  0E30               	movlw	48
  3038  000D2E  263F               	addwf	_signs,f,c
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;display.c: 142: signs[1] = '-';
  3042  000D30  0E2D               	movlw	45
  3043  000D32  6E40               	movwf	_signs+1,c
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;display.c: 143: signs[2] = information;
  3047  000D34  C062  F041         	movff	Set_Display@information,_signs+2
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;display.c: 144: Evaluate_Display(sizeof(signs), signs);
  3051  000D38  0E3F               	movlw	low _signs
  3052  000D3A  6E25               	movwf	Evaluate_Display@evaluate,c
  3053  000D3C  0E00               	movlw	high _signs
  3054  000D3E  6E26               	movwf	Evaluate_Display@evaluate+1,c
  3055  000D40  0E03               	movlw	3
  3056  000D42  EC8E  F003         	call	_Evaluate_Display
  3057                           
  3058                           ;display.c: 145: } else {
  3059  000D46  D00D               	goto	l2572
  3060  000D48                     l2566:
  3061                           
  3062                           ;display.c: 146: Evaluate_Signs(value);
  3063  000D48  C063  F060         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  3064  000D4C  C064  F061         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  3065  000D50  EC59  F006         	call	_Evaluate_Signs	;wreg free
  3066                           
  3067                           ;display.c: 152: }
  3068                           
  3069                           ;display.c: 151: break;
  3070                           
  3071                           ;display.c: 149: case 'L':
  3072                           
  3073                           ;display.c: 147: }
  3074                           ;display.c: 148: break;
  3075  000D54  D006               	goto	l2572
  3076  000D56                     l2570:
  3077  000D56  0100               	movlb	0	; () banked
  3078  000D58  5165               	movf	Set_Display@type& (0+255),w,b
  3079                           
  3080                           ; Switch size 1, requested type "space"
  3081                           ; Number of cases is 2, Range of values is 55 to 76
  3082                           ; switch strategies available:
  3083                           ; Name         Instructions Cycles
  3084                           ; simple_byte            7     4 (average)
  3085                           ;	Chosen strategy is simple_byte
  3086  000D5A  0A37               	xorlw	55	; case 55
  3087  000D5C  B4D8               	btfsc	status,2,c
  3088  000D5E  D7DF               	goto	l2554
  3089  000D60  0A7B               	xorlw	123	; case 76
  3090  000D62                     l2572:
  3091                           
  3092                           ;display.c: 153: Write_Display_Byte(pixels);
  3093  000D62  0E38               	movlw	low _pixels
  3094  000D64  6E1D               	movwf	Write_Display_Byte@write_data,c
  3095  000D66  0E00               	movlw	high _pixels
  3096  000D68  6E1E               	movwf	Write_Display_Byte@write_data+1,c
  3097  000D6A  EC21  F007         	call	_Write_Display_Byte	;wreg free
  3098  000D6E  0012               	return		;funcret
  3099  000D70                     __end_of_Set_Display:
  3100                           	opt stack 0
  3101                           tblptru	equ	0xFF8
  3102                           tblptrh	equ	0xFF7
  3103                           tblptrl	equ	0xFF6
  3104                           tablat	equ	0xFF5
  3105                           prodh	equ	0xFF4
  3106                           prodl	equ	0xFF3
  3107                           intcon	equ	0xFF2
  3108                           postinc0	equ	0xFEE
  3109                           wreg	equ	0xFE8
  3110                           postdec1	equ	0xFE5
  3111                           fsr1l	equ	0xFE1
  3112                           indf2	equ	0xFDF
  3113                           postinc2	equ	0xFDE
  3114                           postdec2	equ	0xFDD
  3115                           plusw2	equ	0xFDB
  3116                           fsr2h	equ	0xFDA
  3117                           fsr2l	equ	0xFD9
  3118                           status	equ	0xFD8
  3119                           
  3120 ;; *************** function _Write_Display_Byte *****************
  3121 ;; Defined at:
  3122 ;;		line 46 in file "communication.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  write_data      2   28[COMRAM] PTR unsigned char 
  3125 ;;		 -> pixels(7), 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;  counter         1   34[COMRAM] unsigned char 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;		None               void
  3130 ;; Registers used:
  3131 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1
  3137 ;;      Params:         2       0       0
  3138 ;;      Locals:         1       0       0
  3139 ;;      Temps:          4       0       0
  3140 ;;      Totals:         7       0       0
  3141 ;;Total ram usage:        7 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    3
  3144 ;; This function calls:
  3145 ;;		Nothing
  3146 ;; This function is called by:
  3147 ;;		_Set_Display
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text17
  3152  000E42                     __ptext17:
  3153                           	opt stack 0
  3154  000E42                     _Write_Display_Byte:
  3155                           	opt stack 26
  3156                           
  3157                           ;communication.c: 47: for(unsigned char counter = sizeof(pixels); counter > 0;
  3158                           
  3159                           ;incstack = 0
  3160  000E42  0E07               	movlw	7
  3161  000E44  6E23               	movwf	Write_Display_Byte@counter,c
  3162  000E46                     
  3163                           ;communication.c: 48: counter--) {
  3164  000E46  5023               	movf	Write_Display_Byte@counter,w,c
  3165  000E48  B4D8               	btfsc	status,2,c
  3166  000E4A  0012               	return	
  3167                           
  3168                           ;communication.c: 49: if(SSP1IF = 1) {
  3169  000E4C  869E               	bsf	3998,3,c	;volatile
  3170  000E4E  B69E               	btfsc	3998,3,c	;volatile
  3171                           
  3172                           ;communication.c: 50: SSP1IF = 0;
  3173  000E50  969E               	bcf	3998,3,c	;volatile
  3174                           
  3175                           ;communication.c: 51: }
  3176                           ;communication.c: 52: SSP1BUF = write_data[counter - 1];
  3177  000E52  0EFF               	movlw	255
  3178  000E54  6E1F               	movwf	??_Write_Display_Byte& (0+255),c
  3179  000E56  0EFF               	movlw	255
  3180  000E58  6E20               	movwf	(??_Write_Display_Byte+1)& (0+255),c
  3181  000E5A  5023               	movf	Write_Display_Byte@counter,w,c
  3182  000E5C  6E21               	movwf	(??_Write_Display_Byte+2)& (0+255),c
  3183  000E5E  6A22               	clrf	(??_Write_Display_Byte+3)& (0+255),c
  3184  000E60  501F               	movf	??_Write_Display_Byte,w,c
  3185  000E62  2621               	addwf	??_Write_Display_Byte+2,f,c
  3186  000E64  5020               	movf	??_Write_Display_Byte+1,w,c
  3187  000E66  2222               	addwfc	??_Write_Display_Byte+3,f,c
  3188  000E68  5021               	movf	??_Write_Display_Byte+2,w,c
  3189  000E6A  241D               	addwf	Write_Display_Byte@write_data,w,c
  3190  000E6C  6ED9               	movwf	fsr2l,c
  3191  000E6E  5022               	movf	??_Write_Display_Byte+3,w,c
  3192  000E70  201E               	addwfc	Write_Display_Byte@write_data+1,w,c
  3193  000E72  6EDA               	movwf	fsr2h,c
  3194  000E74  50DF               	movf	indf2,w,c
  3195  000E76  6EC9               	movwf	4041,c	;volatile
  3196  000E78                     l511:
  3197  000E78  A69E               	btfss	3998,3,c	;volatile
  3198  000E7A  D7FE               	goto	l511
  3199                           
  3200                           ;communication.c: 54: SSP1IF = 0;
  3201  000E7C  969E               	bcf	3998,3,c	;volatile
  3202  000E7E  0623               	decf	Write_Display_Byte@counter,f,c
  3203  000E80  D7E2               	goto	L3
  3204  000E82                     __end_of_Write_Display_Byte:
  3205                           	opt stack 0
  3206                           tblptru	equ	0xFF8
  3207                           tblptrh	equ	0xFF7
  3208                           tblptrl	equ	0xFF6
  3209                           tablat	equ	0xFF5
  3210                           prodh	equ	0xFF4
  3211                           prodl	equ	0xFF3
  3212                           intcon	equ	0xFF2
  3213                           postinc0	equ	0xFEE
  3214                           wreg	equ	0xFE8
  3215                           postdec1	equ	0xFE5
  3216                           fsr1l	equ	0xFE1
  3217                           indf2	equ	0xFDF
  3218                           postinc2	equ	0xFDE
  3219                           postdec2	equ	0xFDD
  3220                           plusw2	equ	0xFDB
  3221                           fsr2h	equ	0xFDA
  3222                           fsr2l	equ	0xFD9
  3223                           status	equ	0xFD8
  3224                           
  3225 ;; *************** function _Evaluate_Signs *****************
  3226 ;; Defined at:
  3227 ;;		line 115 in file "display.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  evaluation_v    2    0[BANK0 ] unsigned int 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  valuecounter    1   41[COMRAM] unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;		None               void
  3234 ;; Registers used:
  3235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1
  3241 ;;      Params:         0       2       0
  3242 ;;      Locals:         1       0       0
  3243 ;;      Temps:          0       0       0
  3244 ;;      Totals:         1       2       0
  3245 ;;Total ram usage:        3 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    5
  3248 ;; This function calls:
  3249 ;;		_Evaluate_Display
  3250 ;;		___lwmod
  3251 ;; This function is called by:
  3252 ;;		_Set_Display
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text18
  3257  000CB2                     __ptext18:
  3258                           	opt stack 0
  3259  000CB2                     _Evaluate_Signs:
  3260                           	opt stack 24
  3261                           
  3262                           ;display.c: 116: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  3263                           
  3264                           ;incstack = 0
  3265  000CB2  0E00               	movlw	0
  3266  000CB4  6E2A               	movwf	Evaluate_Signs@valuecounter,c
  3267  000CB6                     l2516:
  3268                           
  3269                           ;display.c: 117: valuecounter++) {
  3270  000CB6  0E02               	movlw	2
  3271  000CB8  642A               	cpfsgt	Evaluate_Signs@valuecounter,c
  3272  000CBA  D001               	goto	l2520
  3273  000CBC  D024               	goto	l427
  3274  000CBE                     l2520:
  3275                           
  3276                           ;display.c: 118: signs[valuecounter] = evaluation_value % 10;
  3277  000CBE  502A               	movf	Evaluate_Signs@valuecounter,w,c
  3278  000CC0  0D01               	mullw	1
  3279  000CC2  0E3F               	movlw	low _signs
  3280  000CC4  24F3               	addwf	prodl,w,c
  3281  000CC6  6ED9               	movwf	fsr2l,c
  3282  000CC8  0E00               	movlw	high _signs
  3283  000CCA  20F4               	addwfc	prodh,w,c
  3284  000CCC  6EDA               	movwf	fsr2h,c
  3285  000CCE  C060  F01D         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  3286  000CD2  C061  F01E         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  3287  000CD6  0E00               	movlw	0
  3288  000CD8  6E20               	movwf	___lwmod@divisor+1,c
  3289  000CDA  0E0A               	movlw	10
  3290  000CDC  6E1F               	movwf	___lwmod@divisor,c
  3291  000CDE  ECE0  F006         	call	___lwmod	;wreg free
  3292  000CE2  501D               	movf	?___lwmod,w,c
  3293  000CE4  6EDF               	movwf	indf2,c
  3294                           
  3295                           ;display.c: 119: signs[valuecounter] += 0x30;
  3296  000CE6  502A               	movf	Evaluate_Signs@valuecounter,w,c
  3297  000CE8  0D01               	mullw	1
  3298  000CEA  0E3F               	movlw	low _signs
  3299  000CEC  24F3               	addwf	prodl,w,c
  3300  000CEE  6ED9               	movwf	fsr2l,c
  3301  000CF0  0E00               	movlw	high _signs
  3302  000CF2  20F4               	addwfc	prodh,w,c
  3303  000CF4  6EDA               	movwf	fsr2h,c
  3304  000CF6  0E30               	movlw	48
  3305  000CF8  26DF               	addwf	indf2,f,c
  3306                           
  3307                           ;display.c: 120: evaluation_value >>= 1;
  3308  000CFA  0100               	movlb	0	; () banked
  3309  000CFC  90D8               	bcf	status,0,c
  3310  000CFE  3361               	rrcf	(Evaluate_Signs@evaluation_value+1)& (0+255),f,b
  3311  000D00  3360               	rrcf	Evaluate_Signs@evaluation_value& (0+255),f,b
  3312                           
  3313                           ; BSR set to: 0
  3314  000D02  2A2A               	incf	Evaluate_Signs@valuecounter,f,c
  3315  000D04  D7D8               	goto	l2516
  3316  000D06                     l427:
  3317                           
  3318                           ;display.c: 121: }
  3319                           ;display.c: 122: __nop();
  3320  000D06  F000               	nop	
  3321                           
  3322                           ;display.c: 123: Evaluate_Display(sizeof(signs), signs);
  3323  000D08  0E3F               	movlw	low _signs
  3324  000D0A  6E25               	movwf	Evaluate_Display@evaluate,c
  3325  000D0C  0E00               	movlw	high _signs
  3326  000D0E  6E26               	movwf	Evaluate_Display@evaluate+1,c
  3327  000D10  0E03               	movlw	3
  3328  000D12  EC8E  F003         	call	_Evaluate_Display
  3329  000D16  0012               	return		;funcret
  3330  000D18                     __end_of_Evaluate_Signs:
  3331                           	opt stack 0
  3332                           tblptru	equ	0xFF8
  3333                           tblptrh	equ	0xFF7
  3334                           tblptrl	equ	0xFF6
  3335                           tablat	equ	0xFF5
  3336                           prodh	equ	0xFF4
  3337                           prodl	equ	0xFF3
  3338                           intcon	equ	0xFF2
  3339                           postinc0	equ	0xFEE
  3340                           wreg	equ	0xFE8
  3341                           postdec1	equ	0xFE5
  3342                           fsr1l	equ	0xFE1
  3343                           indf2	equ	0xFDF
  3344                           postinc2	equ	0xFDE
  3345                           postdec2	equ	0xFDD
  3346                           plusw2	equ	0xFDB
  3347                           fsr2h	equ	0xFDA
  3348                           fsr2l	equ	0xFD9
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function ___lwmod *****************
  3352 ;; Defined at:
  3353 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  dividend        2   28[COMRAM] unsigned int 
  3356 ;;  divisor         2   30[COMRAM] unsigned int 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  counter         1   32[COMRAM] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  2   28[COMRAM] unsigned int 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1
  3368 ;;      Params:         4       0       0
  3369 ;;      Locals:         1       0       0
  3370 ;;      Temps:          0       0       0
  3371 ;;      Totals:         5       0       0
  3372 ;;Total ram usage:        5 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; Hardware stack levels required when called:    3
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_Evaluate_Signs
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text19
  3383  000DC0                     __ptext19:
  3384                           	opt stack 0
  3385  000DC0                     ___lwmod:
  3386                           	opt stack 25
  3387                           
  3388                           ;incstack = 0
  3389  000DC0  501F               	movf	___lwmod@divisor,w,c
  3390  000DC2  1020               	iorwf	___lwmod@divisor+1,w,c
  3391  000DC4  B4D8               	btfsc	status,2,c
  3392  000DC6  D018               	goto	l997
  3393  000DC8  0E01               	movlw	1
  3394  000DCA  6E21               	movwf	___lwmod@counter,c
  3395  000DCC  D004               	goto	l2504
  3396  000DCE                     l2502:
  3397  000DCE  90D8               	bcf	status,0,c
  3398  000DD0  361F               	rlcf	___lwmod@divisor,f,c
  3399  000DD2  3620               	rlcf	___lwmod@divisor+1,f,c
  3400  000DD4  2A21               	incf	___lwmod@counter,f,c
  3401  000DD6                     l2504:
  3402  000DD6  AE20               	btfss	___lwmod@divisor+1,7,c
  3403  000DD8  D7FA               	goto	l2502
  3404  000DDA                     l2506:
  3405  000DDA  501F               	movf	___lwmod@divisor,w,c
  3406  000DDC  5C1D               	subwf	___lwmod@dividend,w,c
  3407  000DDE  5020               	movf	___lwmod@divisor+1,w,c
  3408  000DE0  581E               	subwfb	___lwmod@dividend+1,w,c
  3409  000DE2  A0D8               	btfss	status,0,c
  3410  000DE4  D004               	goto	l2510
  3411  000DE6  501F               	movf	___lwmod@divisor,w,c
  3412  000DE8  5E1D               	subwf	___lwmod@dividend,f,c
  3413  000DEA  5020               	movf	___lwmod@divisor+1,w,c
  3414  000DEC  5A1E               	subwfb	___lwmod@dividend+1,f,c
  3415  000DEE                     l2510:
  3416  000DEE  90D8               	bcf	status,0,c
  3417  000DF0  3220               	rrcf	___lwmod@divisor+1,f,c
  3418  000DF2  321F               	rrcf	___lwmod@divisor,f,c
  3419  000DF4  2E21               	decfsz	___lwmod@counter,f,c
  3420  000DF6  D7F1               	goto	l2506
  3421  000DF8                     l997:
  3422  000DF8  C01D  F01D         	movff	___lwmod@dividend,?___lwmod
  3423  000DFC  C01E  F01E         	movff	___lwmod@dividend+1,?___lwmod+1
  3424  000E00  0012               	return		;funcret
  3425  000E02                     __end_of___lwmod:
  3426                           	opt stack 0
  3427                           tblptru	equ	0xFF8
  3428                           tblptrh	equ	0xFF7
  3429                           tblptrl	equ	0xFF6
  3430                           tablat	equ	0xFF5
  3431                           prodh	equ	0xFF4
  3432                           prodl	equ	0xFF3
  3433                           intcon	equ	0xFF2
  3434                           postinc0	equ	0xFEE
  3435                           wreg	equ	0xFE8
  3436                           postdec1	equ	0xFE5
  3437                           fsr1l	equ	0xFE1
  3438                           indf2	equ	0xFDF
  3439                           postinc2	equ	0xFDE
  3440                           postdec2	equ	0xFDD
  3441                           plusw2	equ	0xFDB
  3442                           fsr2h	equ	0xFDA
  3443                           fsr2l	equ	0xFD9
  3444                           status	equ	0xFD8
  3445                           
  3446 ;; *************** function _Evaluate_Display *****************
  3447 ;; Defined at:
  3448 ;;		line 52 in file "display.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;  size            1    wreg     unsigned char 
  3451 ;;  evaluate        2   36[COMRAM] PTR const unsigned char 
  3452 ;;		 -> signs(3), STR_2(4), STR_1(4), 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  size            1   40[COMRAM] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;		None               void
  3457 ;; Registers used:
  3458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1
  3464 ;;      Params:         2       0       0
  3465 ;;      Locals:         1       0       0
  3466 ;;      Temps:          2       0       0
  3467 ;;      Totals:         5       0       0
  3468 ;;Total ram usage:        5 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    4
  3471 ;; This function calls:
  3472 ;;		_Set_Bits
  3473 ;; This function is called by:
  3474 ;;		_Load_Data
  3475 ;;		_Del_Data
  3476 ;;		_Evaluate_Signs
  3477 ;;		_Set_Display
  3478 ;; This function uses a non-reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text20
  3482  00071C                     __ptext20:
  3483                           	opt stack 0
  3484  00071C                     _Evaluate_Display:
  3485                           	opt stack 24
  3486                           
  3487                           ;incstack = 0
  3488                           ;Evaluate_Display@size stored from wreg
  3489  00071C  6E29               	movwf	Evaluate_Display@size,c
  3490                           
  3491                           ;display.c: 53: for(display_counter = 0; display_counter < size;
  3492  00071E  0E00               	movlw	0
  3493  000720  6E33               	movwf	_display_counter,c
  3494                           
  3495                           ;display.c: 54: display_counter++) {
  3496  000722  D115               	goto	l2496
  3497  000724                     l2458:
  3498                           
  3499                           ;display.c: 57: Set_Bits("ABCDEF");
  3500  000724  0E09               	movlw	low STR_3
  3501  000726  6E1D               	movwf	Set_Bits@bits,c
  3502  000728  0E02               	movlw	high STR_3
  3503  00072A  6E1E               	movwf	Set_Bits@bits+1,c
  3504  00072C  501D               	movf	Set_Bits@bits,w,c
  3505  00072E  101E               	iorwf	Set_Bits@bits+1,w,c
  3506  000730  A4D8               	btfss	status,2,c
  3507  000732  0E00               	movlw	low (__mediumconst shr (0+16))
  3508  000734  6E1F               	movwf	Set_Bits@bits+2,c
  3509  000736  EC2A  F005         	call	_Set_Bits	;wreg free
  3510                           
  3511                           ;display.c: 58: break;
  3512  00073A  D108               	goto	l2494
  3513  00073C                     l2460:
  3514                           
  3515                           ;display.c: 60: Set_Bits("BC");
  3516  00073C  0E43               	movlw	low (STR_10+1)
  3517  00073E  6E1D               	movwf	Set_Bits@bits,c
  3518  000740  0E02               	movlw	high (STR_10+1)
  3519  000742  6E1E               	movwf	Set_Bits@bits+1,c
  3520  000744  501D               	movf	Set_Bits@bits,w,c
  3521  000746  101E               	iorwf	Set_Bits@bits+1,w,c
  3522  000748  A4D8               	btfss	status,2,c
  3523  00074A  0E00               	movlw	low (__mediumconst shr (0+16))
  3524  00074C  6E1F               	movwf	Set_Bits@bits+2,c
  3525  00074E  EC2A  F005         	call	_Set_Bits	;wreg free
  3526                           
  3527                           ;display.c: 61: break;
  3528  000752  D0FC               	goto	l2494
  3529  000754                     l2462:
  3530                           
  3531                           ;display.c: 63: Set_Bits("ABDEG");
  3532  000754  0E2B               	movlw	low STR_5
  3533  000756  6E1D               	movwf	Set_Bits@bits,c
  3534  000758  0E02               	movlw	high STR_5
  3535  00075A  6E1E               	movwf	Set_Bits@bits+1,c
  3536  00075C  501D               	movf	Set_Bits@bits,w,c
  3537  00075E  101E               	iorwf	Set_Bits@bits+1,w,c
  3538  000760  A4D8               	btfss	status,2,c
  3539  000762  0E00               	movlw	low (__mediumconst shr (0+16))
  3540  000764  6E1F               	movwf	Set_Bits@bits+2,c
  3541  000766  EC2A  F005         	call	_Set_Bits	;wreg free
  3542                           
  3543                           ;display.c: 64: break;
  3544  00076A  D0F0               	goto	l2494
  3545  00076C                     l2464:
  3546                           
  3547                           ;display.c: 66: Set_Bits("ABCDG");
  3548  00076C  0E25               	movlw	low STR_6
  3549  00076E  6E1D               	movwf	Set_Bits@bits,c
  3550  000770  0E02               	movlw	high STR_6
  3551  000772  6E1E               	movwf	Set_Bits@bits+1,c
  3552  000774  501D               	movf	Set_Bits@bits,w,c
  3553  000776  101E               	iorwf	Set_Bits@bits+1,w,c
  3554  000778  A4D8               	btfss	status,2,c
  3555  00077A  0E00               	movlw	low (__mediumconst shr (0+16))
  3556  00077C  6E1F               	movwf	Set_Bits@bits+2,c
  3557  00077E  EC2A  F005         	call	_Set_Bits	;wreg free
  3558                           
  3559                           ;display.c: 67: break;
  3560  000782  D0E4               	goto	l2494
  3561  000784                     l2466:
  3562                           
  3563                           ;display.c: 69: Set_Bits("BCFG");
  3564  000784  0E3D               	movlw	low STR_7
  3565  000786  6E1D               	movwf	Set_Bits@bits,c
  3566  000788  0E02               	movlw	high STR_7
  3567  00078A  6E1E               	movwf	Set_Bits@bits+1,c
  3568  00078C  501D               	movf	Set_Bits@bits,w,c
  3569  00078E  101E               	iorwf	Set_Bits@bits+1,w,c
  3570  000790  A4D8               	btfss	status,2,c
  3571  000792  0E00               	movlw	low (__mediumconst shr (0+16))
  3572  000794  6E1F               	movwf	Set_Bits@bits+2,c
  3573  000796  EC2A  F005         	call	_Set_Bits	;wreg free
  3574                           
  3575                           ;display.c: 70: break;
  3576  00079A  D0D8               	goto	l2494
  3577  00079C                     l2468:
  3578                           
  3579                           ;display.c: 72: Set_Bits("ACDFG");
  3580  00079C  0E31               	movlw	low STR_8
  3581  00079E  6E1D               	movwf	Set_Bits@bits,c
  3582  0007A0  0E02               	movlw	high STR_8
  3583  0007A2  6E1E               	movwf	Set_Bits@bits+1,c
  3584  0007A4  501D               	movf	Set_Bits@bits,w,c
  3585  0007A6  101E               	iorwf	Set_Bits@bits+1,w,c
  3586  0007A8  A4D8               	btfss	status,2,c
  3587  0007AA  0E00               	movlw	low (__mediumconst shr (0+16))
  3588  0007AC  6E1F               	movwf	Set_Bits@bits+2,c
  3589  0007AE  EC2A  F005         	call	_Set_Bits	;wreg free
  3590                           
  3591                           ;display.c: 73: break;
  3592  0007B2  D0CC               	goto	l2494
  3593  0007B4                     l2470:
  3594                           
  3595                           ;display.c: 75: Set_Bits("ACDEFG");
  3596  0007B4  0E1E               	movlw	low STR_9
  3597  0007B6  6E1D               	movwf	Set_Bits@bits,c
  3598  0007B8  0E02               	movlw	high STR_9
  3599  0007BA  6E1E               	movwf	Set_Bits@bits+1,c
  3600  0007BC  501D               	movf	Set_Bits@bits,w,c
  3601  0007BE  101E               	iorwf	Set_Bits@bits+1,w,c
  3602  0007C0  A4D8               	btfss	status,2,c
  3603  0007C2  0E00               	movlw	low (__mediumconst shr (0+16))
  3604  0007C4  6E1F               	movwf	Set_Bits@bits+2,c
  3605  0007C6  EC2A  F005         	call	_Set_Bits	;wreg free
  3606                           
  3607                           ;display.c: 76: break;
  3608  0007CA  D0C0               	goto	l2494
  3609  0007CC                     l2472:
  3610                           
  3611                           ;display.c: 78: Set_Bits("ABC");
  3612  0007CC  0E42               	movlw	low STR_10
  3613  0007CE  6E1D               	movwf	Set_Bits@bits,c
  3614  0007D0  0E02               	movlw	high STR_10
  3615  0007D2  6E1E               	movwf	Set_Bits@bits+1,c
  3616  0007D4  501D               	movf	Set_Bits@bits,w,c
  3617  0007D6  101E               	iorwf	Set_Bits@bits+1,w,c
  3618  0007D8  A4D8               	btfss	status,2,c
  3619  0007DA  0E00               	movlw	low (__mediumconst shr (0+16))
  3620  0007DC  6E1F               	movwf	Set_Bits@bits+2,c
  3621  0007DE  EC2A  F005         	call	_Set_Bits	;wreg free
  3622                           
  3623                           ;display.c: 79: break;
  3624  0007E2  D0B4               	goto	l2494
  3625  0007E4                     l2474:
  3626                           
  3627                           ;display.c: 81: Set_Bits("ABCDEFG");
  3628  0007E4  0E01               	movlw	low STR_11
  3629  0007E6  6E1D               	movwf	Set_Bits@bits,c
  3630  0007E8  0E02               	movlw	high STR_11
  3631  0007EA  6E1E               	movwf	Set_Bits@bits+1,c
  3632  0007EC  501D               	movf	Set_Bits@bits,w,c
  3633  0007EE  101E               	iorwf	Set_Bits@bits+1,w,c
  3634  0007F0  A4D8               	btfss	status,2,c
  3635  0007F2  0E00               	movlw	low (__mediumconst shr (0+16))
  3636  0007F4  6E1F               	movwf	Set_Bits@bits+2,c
  3637  0007F6  EC2A  F005         	call	_Set_Bits	;wreg free
  3638                           
  3639                           ;display.c: 82: break;
  3640  0007FA  D0A8               	goto	l2494
  3641  0007FC                     l2476:
  3642                           
  3643                           ;display.c: 84: Set_Bits("ABCDFG");
  3644  0007FC  0E10               	movlw	low STR_12
  3645  0007FE  6E1D               	movwf	Set_Bits@bits,c
  3646  000800  0E02               	movlw	high STR_12
  3647  000802  6E1E               	movwf	Set_Bits@bits+1,c
  3648  000804  501D               	movf	Set_Bits@bits,w,c
  3649  000806  101E               	iorwf	Set_Bits@bits+1,w,c
  3650  000808  A4D8               	btfss	status,2,c
  3651  00080A  0E00               	movlw	low (__mediumconst shr (0+16))
  3652  00080C  6E1F               	movwf	Set_Bits@bits+2,c
  3653  00080E  EC2A  F005         	call	_Set_Bits	;wreg free
  3654                           
  3655                           ;display.c: 85: break;
  3656  000812  D09C               	goto	l2494
  3657  000814                     l2478:
  3658                           
  3659                           ;display.c: 87: Set_Bits("ADEFG");
  3660  000814  0E37               	movlw	low STR_13
  3661  000816  6E1D               	movwf	Set_Bits@bits,c
  3662  000818  0E02               	movlw	high STR_13
  3663  00081A  6E1E               	movwf	Set_Bits@bits+1,c
  3664  00081C  501D               	movf	Set_Bits@bits,w,c
  3665  00081E  101E               	iorwf	Set_Bits@bits+1,w,c
  3666  000820  A4D8               	btfss	status,2,c
  3667  000822  0E00               	movlw	low (__mediumconst shr (0+16))
  3668  000824  6E1F               	movwf	Set_Bits@bits+2,c
  3669  000826  EC2A  F005         	call	_Set_Bits	;wreg free
  3670                           
  3671                           ;display.c: 88: break;
  3672  00082A  D090               	goto	l2494
  3673  00082C                     l2480:
  3674                           
  3675                           ;display.c: 90: Set_Bits("ABCEFG");
  3676  00082C  0E17               	movlw	low STR_14
  3677  00082E  6E1D               	movwf	Set_Bits@bits,c
  3678  000830  0E02               	movlw	high STR_14
  3679  000832  6E1E               	movwf	Set_Bits@bits+1,c
  3680  000834  501D               	movf	Set_Bits@bits,w,c
  3681  000836  101E               	iorwf	Set_Bits@bits+1,w,c
  3682  000838  A4D8               	btfss	status,2,c
  3683  00083A  0E00               	movlw	low (__mediumconst shr (0+16))
  3684  00083C  6E1F               	movwf	Set_Bits@bits+2,c
  3685  00083E  EC2A  F005         	call	_Set_Bits	;wreg free
  3686                           
  3687                           ;display.c: 91: break;
  3688  000842  D084               	goto	l2494
  3689  000844                     l2482:
  3690                           
  3691                           ;display.c: 93: Set_Bits("ABCDEF");
  3692  000844  0E09               	movlw	low STR_3
  3693  000846  6E1D               	movwf	Set_Bits@bits,c
  3694  000848  0E02               	movlw	high STR_3
  3695  00084A  6E1E               	movwf	Set_Bits@bits+1,c
  3696  00084C  501D               	movf	Set_Bits@bits,w,c
  3697  00084E  101E               	iorwf	Set_Bits@bits+1,w,c
  3698  000850  A4D8               	btfss	status,2,c
  3699  000852  0E00               	movlw	low (__mediumconst shr (0+16))
  3700  000854  6E1F               	movwf	Set_Bits@bits+2,c
  3701  000856  EC2A  F005         	call	_Set_Bits	;wreg free
  3702                           
  3703                           ;display.c: 94: break;
  3704  00085A  D078               	goto	l2494
  3705  00085C                     l2484:
  3706                           
  3707                           ;display.c: 96: Set_Bits("ABCDEF");
  3708  00085C  0E09               	movlw	low STR_3
  3709  00085E  6E1D               	movwf	Set_Bits@bits,c
  3710  000860  0E02               	movlw	high STR_3
  3711  000862  6E1E               	movwf	Set_Bits@bits+1,c
  3712  000864  501D               	movf	Set_Bits@bits,w,c
  3713  000866  101E               	iorwf	Set_Bits@bits+1,w,c
  3714  000868  A4D8               	btfss	status,2,c
  3715  00086A  0E00               	movlw	low (__mediumconst shr (0+16))
  3716  00086C  6E1F               	movwf	Set_Bits@bits+2,c
  3717  00086E  EC2A  F005         	call	_Set_Bits	;wreg free
  3718                           
  3719                           ;display.c: 97: break;
  3720  000872  D06C               	goto	l2494
  3721  000874                     l2486:
  3722                           
  3723                           ;display.c: 99: Set_Bits("DEF");
  3724  000874  0E0C               	movlw	low (STR_3+3)
  3725  000876  6E1D               	movwf	Set_Bits@bits,c
  3726  000878  0E02               	movlw	high (STR_3+3)
  3727  00087A  6E1E               	movwf	Set_Bits@bits+1,c
  3728  00087C  501D               	movf	Set_Bits@bits,w,c
  3729  00087E  101E               	iorwf	Set_Bits@bits+1,w,c
  3730  000880  A4D8               	btfss	status,2,c
  3731  000882  0E00               	movlw	low (__mediumconst shr (0+16))
  3732  000884  6E1F               	movwf	Set_Bits@bits+2,c
  3733  000886  EC2A  F005         	call	_Set_Bits	;wreg free
  3734                           
  3735                           ;display.c: 100: break;
  3736  00088A  D060               	goto	l2494
  3737  00088C                     l2488:
  3738                           
  3739                           ;display.c: 102: Set_Bits("G");
  3740  00088C  0E29               	movlw	low (STR_6+4)
  3741  00088E  6E1D               	movwf	Set_Bits@bits,c
  3742  000890  0E02               	movlw	high (STR_6+4)
  3743  000892  6E1E               	movwf	Set_Bits@bits+1,c
  3744  000894  501D               	movf	Set_Bits@bits,w,c
  3745  000896  101E               	iorwf	Set_Bits@bits+1,w,c
  3746  000898  A4D8               	btfss	status,2,c
  3747  00089A  0E00               	movlw	low (__mediumconst shr (0+16))
  3748  00089C  6E1F               	movwf	Set_Bits@bits+2,c
  3749  00089E  EC2A  F005         	call	_Set_Bits	;wreg free
  3750                           
  3751                           ;display.c: 103: break;
  3752  0008A2  D054               	goto	l2494
  3753  0008A4                     l2490:
  3754                           
  3755                           ;display.c: 105: Set_Bits(0);
  3756  0008A4  0E00               	movlw	0
  3757  0008A6  6E1D               	movwf	Set_Bits@bits,c
  3758  0008A8  0E00               	movlw	0
  3759  0008AA  6E1E               	movwf	Set_Bits@bits+1,c
  3760  0008AC  0E00               	movlw	0
  3761  0008AE  6E1F               	movwf	Set_Bits@bits+2,c
  3762  0008B0  EC2A  F005         	call	_Set_Bits	;wreg free
  3763                           
  3764                           ;display.c: 106: }
  3765  0008B4  D04B               	goto	l2494
  3766  0008B6                     l2492:
  3767  0008B6  5033               	movf	_display_counter,w,c
  3768  0008B8  0D01               	mullw	1
  3769  0008BA  C025  F027         	movff	Evaluate_Display@evaluate,??_Evaluate_Display
  3770  0008BE  C026  F028         	movff	Evaluate_Display@evaluate+1,??_Evaluate_Display+1
  3771  0008C2  50F3               	movf	prodl,w,c
  3772  0008C4  2627               	addwf	??_Evaluate_Display,f,c
  3773  0008C6  50F4               	movf	prodh,w,c
  3774  0008C8  2228               	addwfc	??_Evaluate_Display+1,f,c
  3775  0008CA  C027  FFF6         	movff	??_Evaluate_Display,tblptrl
  3776  0008CE  C028  FFF7         	movff	??_Evaluate_Display+1,tblptrh
  3777  0008D2  6AF8               	clrf	tblptru,c
  3778  0008D4  0E01               	movlw	(high __ramtop+-1)
  3779  0008D6  64F7               	cpfsgt	tblptrh,c
  3780  0008D8  D003               	bra	u1687
  3781  0008DA  0008               	tblrd		*
  3782  0008DC  50F5               	movf	tablat,w,c
  3783  0008DE  D005               	bra	u1680
  3784  0008E0                     u1687:
  3785  0008E0  CFF6 FFD9          	movff	tblptrl,fsr2l
  3786  0008E4  CFF7 FFDA          	movff	tblptrh,fsr2h
  3787  0008E8  50DF               	movf	indf2,w,c
  3788  0008EA                     u1680:
  3789                           
  3790                           ; Switch size 1, requested type "space"
  3791                           ; Number of cases is 16, Range of values is 45 to 79
  3792                           ; switch strategies available:
  3793                           ; Name         Instructions Cycles
  3794                           ; simple_byte           49    25 (average)
  3795                           ;	Chosen strategy is simple_byte
  3796  0008EA  0A2D               	xorlw	45	; case 45
  3797  0008EC  B4D8               	btfsc	status,2,c
  3798  0008EE  D7CE               	goto	l2488
  3799  0008F0  0A1D               	xorlw	29	; case 48
  3800  0008F2  B4D8               	btfsc	status,2,c
  3801  0008F4  D717               	goto	l2458
  3802  0008F6  0A01               	xorlw	1	; case 49
  3803  0008F8  B4D8               	btfsc	status,2,c
  3804  0008FA  D720               	goto	l2460
  3805  0008FC  0A03               	xorlw	3	; case 50
  3806  0008FE  B4D8               	btfsc	status,2,c
  3807  000900  D729               	goto	l2462
  3808  000902  0A01               	xorlw	1	; case 51
  3809  000904  B4D8               	btfsc	status,2,c
  3810  000906  D732               	goto	l2464
  3811  000908  0A07               	xorlw	7	; case 52
  3812  00090A  B4D8               	btfsc	status,2,c
  3813  00090C  D73B               	goto	l2466
  3814  00090E  0A01               	xorlw	1	; case 53
  3815  000910  B4D8               	btfsc	status,2,c
  3816  000912  D744               	goto	l2468
  3817  000914  0A03               	xorlw	3	; case 54
  3818  000916  B4D8               	btfsc	status,2,c
  3819  000918  D74D               	goto	l2470
  3820  00091A  0A01               	xorlw	1	; case 55
  3821  00091C  B4D8               	btfsc	status,2,c
  3822  00091E  D756               	goto	l2472
  3823  000920  0A0F               	xorlw	15	; case 56
  3824  000922  B4D8               	btfsc	status,2,c
  3825  000924  D75F               	goto	l2474
  3826  000926  0A01               	xorlw	1	; case 57
  3827  000928  B4D8               	btfsc	status,2,c
  3828  00092A  D768               	goto	l2476
  3829  00092C  0A78               	xorlw	120	; case 65
  3830  00092E  B4D8               	btfsc	status,2,c
  3831  000930  D77D               	goto	l2480
  3832  000932  0A05               	xorlw	5	; case 68
  3833  000934  B4D8               	btfsc	status,2,c
  3834  000936  D786               	goto	l2482
  3835  000938  0A01               	xorlw	1	; case 69
  3836  00093A  B4D8               	btfsc	status,2,c
  3837  00093C  D76B               	goto	l2478
  3838  00093E  0A09               	xorlw	9	; case 76
  3839  000940  B4D8               	btfsc	status,2,c
  3840  000942  D798               	goto	l2486
  3841  000944  0A03               	xorlw	3	; case 79
  3842  000946  B4D8               	btfsc	status,2,c
  3843  000948  D789               	goto	l2484
  3844  00094A  D7AC               	goto	l2490
  3845  00094C                     l2494:
  3846  00094C  2A33               	incf	_display_counter,f,c
  3847  00094E                     l2496:
  3848  00094E  5029               	movf	Evaluate_Display@size,w,c
  3849  000950  5C33               	subwf	_display_counter,w,c
  3850  000952  B0D8               	btfsc	status,0,c
  3851  000954  0012               	return	
  3852  000956  D7AF               	goto	l2492
  3853  000958                     __end_of_Evaluate_Display:
  3854                           	opt stack 0
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           prodh	equ	0xFF4
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           postdec1	equ	0xFE5
  3865                           fsr1l	equ	0xFE1
  3866                           indf2	equ	0xFDF
  3867                           postinc2	equ	0xFDE
  3868                           postdec2	equ	0xFDD
  3869                           plusw2	equ	0xFDB
  3870                           fsr2h	equ	0xFDA
  3871                           fsr2l	equ	0xFD9
  3872                           status	equ	0xFD8
  3873                           
  3874 ;; *************** function _Set_Bits *****************
  3875 ;; Defined at:
  3876 ;;		line 12 in file "display.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  bits            3   28[COMRAM] PTR const unsigned char 
  3879 ;;		 -> ROM(8191), STR_18(2), STR_17(4), STR_16(7), 
  3880 ;;		 -> STR_15(7), STR_14(7), STR_13(6), STR_12(7), 
  3881 ;;		 -> STR_11(8), STR_10(4), STR_9(7), STR_8(6), 
  3882 ;;		 -> STR_7(5), STR_6(6), STR_5(6), STR_4(3), 
  3883 ;;		 -> STR_3(7), 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  bitcount        1   34[COMRAM] unsigned char 
  3886 ;;  Bitoutput       1   35[COMRAM] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;		None               void
  3889 ;; Registers used:
  3890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1
  3896 ;;      Params:         3       0       0
  3897 ;;      Locals:         2       0       0
  3898 ;;      Temps:          3       0       0
  3899 ;;      Totals:         8       0       0
  3900 ;;Total ram usage:        8 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    3
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_Evaluate_Display
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text21
  3911  000A54                     __ptext21:
  3912                           	opt stack 0
  3913  000A54                     _Set_Bits:
  3914                           	opt stack 24
  3915                           
  3916                           ;display.c: 13: unsigned char Bitoutput = 0;
  3917                           
  3918                           ;incstack = 0
  3919  000A54  0E00               	movlw	0
  3920  000A56  6E24               	movwf	Set_Bits@Bitoutput,c
  3921                           
  3922                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  3923  000A58  0E00               	movlw	0
  3924  000A5A  6E23               	movwf	Set_Bits@bitcount,c
  3925                           
  3926                           ;display.c: 15: bitcount++) {
  3927  000A5C  D037               	goto	l2452
  3928  000A5E                     l2432:
  3929                           
  3930                           ;display.c: 18: Bitoutput |= 0b00000001;
  3931  000A5E  8024               	bsf	Set_Bits@Bitoutput,0,c
  3932                           
  3933                           ;display.c: 19: break;
  3934  000A60  D034               	goto	l2450
  3935  000A62                     l2434:
  3936                           
  3937                           ;display.c: 21: Bitoutput |= 0b00000010;
  3938  000A62  8224               	bsf	Set_Bits@Bitoutput,1,c
  3939                           
  3940                           ;display.c: 22: break;
  3941  000A64  D032               	goto	l2450
  3942  000A66                     l2436:
  3943                           
  3944                           ;display.c: 24: Bitoutput |= 0b00000100;
  3945  000A66  8424               	bsf	Set_Bits@Bitoutput,2,c
  3946                           
  3947                           ;display.c: 25: break;
  3948  000A68  D030               	goto	l2450
  3949  000A6A                     l2438:
  3950                           
  3951                           ;display.c: 27: Bitoutput |= 0b00001000;
  3952  000A6A  8624               	bsf	Set_Bits@Bitoutput,3,c
  3953                           
  3954                           ;display.c: 28: break;
  3955  000A6C  D02E               	goto	l2450
  3956  000A6E                     l2440:
  3957                           
  3958                           ;display.c: 30: Bitoutput |= 0b00010000;
  3959  000A6E  8824               	bsf	Set_Bits@Bitoutput,4,c
  3960                           
  3961                           ;display.c: 31: break;
  3962  000A70  D02C               	goto	l2450
  3963  000A72                     l2442:
  3964                           
  3965                           ;display.c: 33: Bitoutput |= 0b00100000;
  3966  000A72  8A24               	bsf	Set_Bits@Bitoutput,5,c
  3967                           
  3968                           ;display.c: 34: break;
  3969  000A74  D02A               	goto	l2450
  3970  000A76                     l2444:
  3971                           
  3972                           ;display.c: 36: Bitoutput |= 0b01000000;
  3973  000A76  8C24               	bsf	Set_Bits@Bitoutput,6,c
  3974                           
  3975                           ;display.c: 40: }
  3976                           
  3977                           ;display.c: 39: break;
  3978                           
  3979                           ;display.c: 38: default:
  3980                           
  3981                           ;display.c: 37: break;
  3982  000A78  D028               	goto	l2450
  3983  000A7A                     l2448:
  3984  000A7A  5023               	movf	Set_Bits@bitcount,w,c
  3985  000A7C  0D01               	mullw	1
  3986  000A7E  50F3               	movf	prodl,w,c
  3987  000A80  241D               	addwf	Set_Bits@bits,w,c
  3988  000A82  6E20               	movwf	??_Set_Bits& (0+255),c
  3989  000A84  50F4               	movf	prodh,w,c
  3990  000A86  201E               	addwfc	Set_Bits@bits+1,w,c
  3991  000A88  6E21               	movwf	(??_Set_Bits+1)& (0+255),c
  3992  000A8A  0E00               	movlw	0
  3993  000A8C  201F               	addwfc	Set_Bits@bits+2,w,c
  3994  000A8E  6E22               	movwf	(??_Set_Bits+2)& (0+255),c
  3995  000A90  C020  FFF6         	movff	??_Set_Bits,tblptrl
  3996  000A94  C021  FFF7         	movff	??_Set_Bits+1,tblptrh
  3997  000A98  C022  FFF8         	movff	??_Set_Bits+2,tblptru
  3998  000A9C  0008               	tblrd		*
  3999  000A9E  50F5               	movf	tablat,w,c
  4000                           
  4001                           ; Switch size 1, requested type "space"
  4002                           ; Number of cases is 7, Range of values is 65 to 71
  4003                           ; switch strategies available:
  4004                           ; Name         Instructions Cycles
  4005                           ; simple_byte           22    12 (average)
  4006                           ;	Chosen strategy is simple_byte
  4007  000AA0  0A41               	xorlw	65	; case 65
  4008  000AA2  B4D8               	btfsc	status,2,c
  4009  000AA4  D7DC               	goto	l2432
  4010  000AA6  0A03               	xorlw	3	; case 66
  4011  000AA8  B4D8               	btfsc	status,2,c
  4012  000AAA  D7DB               	goto	l2434
  4013  000AAC  0A01               	xorlw	1	; case 67
  4014  000AAE  B4D8               	btfsc	status,2,c
  4015  000AB0  D7DA               	goto	l2436
  4016  000AB2  0A07               	xorlw	7	; case 68
  4017  000AB4  B4D8               	btfsc	status,2,c
  4018  000AB6  D7D9               	goto	l2438
  4019  000AB8  0A01               	xorlw	1	; case 69
  4020  000ABA  B4D8               	btfsc	status,2,c
  4021  000ABC  D7D8               	goto	l2440
  4022  000ABE  0A03               	xorlw	3	; case 70
  4023  000AC0  B4D8               	btfsc	status,2,c
  4024  000AC2  D7D7               	goto	l2442
  4025  000AC4  0A01               	xorlw	1	; case 71
  4026  000AC6  B4D8               	btfsc	status,2,c
  4027  000AC8  D7D6               	goto	l2444
  4028  000ACA                     l2450:
  4029  000ACA  2A23               	incf	Set_Bits@bitcount,f,c
  4030  000ACC                     l2452:
  4031  000ACC  5023               	movf	Set_Bits@bitcount,w,c
  4032  000ACE  0D01               	mullw	1
  4033  000AD0  50F3               	movf	prodl,w,c
  4034  000AD2  241D               	addwf	Set_Bits@bits,w,c
  4035  000AD4  6E20               	movwf	??_Set_Bits& (0+255),c
  4036  000AD6  50F4               	movf	prodh,w,c
  4037  000AD8  201E               	addwfc	Set_Bits@bits+1,w,c
  4038  000ADA  6E21               	movwf	(??_Set_Bits+1)& (0+255),c
  4039  000ADC  0E00               	movlw	0
  4040  000ADE  201F               	addwfc	Set_Bits@bits+2,w,c
  4041  000AE0  6E22               	movwf	(??_Set_Bits+2)& (0+255),c
  4042  000AE2  C020  FFF6         	movff	??_Set_Bits,tblptrl
  4043  000AE6  C021  FFF7         	movff	??_Set_Bits+1,tblptrh
  4044  000AEA  C022  FFF8         	movff	??_Set_Bits+2,tblptru
  4045  000AEE  0008               	tblrd		*
  4046  000AF0  50F5               	movf	tablat,w,c
  4047  000AF2  0900               	iorlw	0
  4048  000AF4  A4D8               	btfss	status,2,c
  4049  000AF6  D7C1               	goto	l2448
  4050                           
  4051                           ;display.c: 41: }
  4052                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  4053  000AF8  5033               	movf	_display_counter,w,c
  4054  000AFA  0D01               	mullw	1
  4055  000AFC  0E38               	movlw	low _pixels
  4056  000AFE  24F3               	addwf	prodl,w,c
  4057  000B00  6ED9               	movwf	fsr2l,c
  4058  000B02  0E00               	movlw	high _pixels
  4059  000B04  20F4               	addwfc	prodh,w,c
  4060  000B06  6EDA               	movwf	fsr2h,c
  4061  000B08  C024  FFDF         	movff	Set_Bits@Bitoutput,indf2
  4062  000B0C  0012               	return		;funcret
  4063  000B0E                     __end_of_Set_Bits:
  4064                           	opt stack 0
  4065                           tblptru	equ	0xFF8
  4066                           tblptrh	equ	0xFF7
  4067                           tblptrl	equ	0xFF6
  4068                           tablat	equ	0xFF5
  4069                           prodh	equ	0xFF4
  4070                           prodl	equ	0xFF3
  4071                           intcon	equ	0xFF2
  4072                           postinc0	equ	0xFEE
  4073                           wreg	equ	0xFE8
  4074                           postdec1	equ	0xFE5
  4075                           fsr1l	equ	0xFE1
  4076                           indf2	equ	0xFDF
  4077                           postinc2	equ	0xFDE
  4078                           postdec2	equ	0xFDD
  4079                           plusw2	equ	0xFDB
  4080                           fsr2h	equ	0xFDA
  4081                           fsr2l	equ	0xFD9
  4082                           status	equ	0xFD8
  4083                           
  4084 ;; *************** function _Read_Data *****************
  4085 ;; Defined at:
  4086 ;;		line 44 in file "storage.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  read_address    1    wreg     unsigned char 
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;  read_address    1   32[COMRAM] unsigned char 
  4091 ;;  data_read       2   30[COMRAM] unsigned int 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  2   28[COMRAM] unsigned int 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMRAM   BANK0   BANK1
  4101 ;;      Params:         2       0       0
  4102 ;;      Locals:         3       0       0
  4103 ;;      Temps:          0       0       0
  4104 ;;      Totals:         5       0       0
  4105 ;;Total ram usage:        5 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    3
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_Check_Buttons
  4112 ;;		_Load_Data
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text22
  4117  000E82                     __ptext22:
  4118                           	opt stack 0
  4119  000E82                     _Read_Data:
  4120                           	opt stack 26
  4121                           
  4122                           ;incstack = 0
  4123                           ;Read_Data@read_address stored from wreg
  4124  000E82  6E21               	movwf	Read_Data@read_address,c
  4125                           
  4126                           ;storage.c: 45: unsigned int data_read = 0;
  4127  000E84  0E00               	movlw	0
  4128  000E86  6E20               	movwf	Read_Data@data_read+1,c
  4129  000E88  0E00               	movlw	0
  4130  000E8A  6E1F               	movwf	Read_Data@data_read,c
  4131                           
  4132                           ;storage.c: 46: read_address += 50;
  4133  000E8C  0E32               	movlw	50
  4134  000E8E  2621               	addwf	Read_Data@read_address,f,c
  4135                           
  4136                           ;storage.c: 47: EEADR = read_address;
  4137  000E90  C021  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4138                           
  4139                           ;storage.c: 48: EECON1bits.EEPGD = 0;
  4140  000E94  9EA6               	bcf	4006,7,c	;volatile
  4141                           
  4142                           ;storage.c: 49: EECON1bits.CFGS = 0;
  4143  000E96  9CA6               	bcf	4006,6,c	;volatile
  4144                           
  4145                           ;storage.c: 50: EECON1bits.RD = 1;
  4146  000E98  80A6               	bsf	4006,0,c	;volatile
  4147                           
  4148                           ;storage.c: 51: data_read = EEDATA;
  4149  000E9A  CFA8 F01F          	movff	4008,Read_Data@data_read	;volatile
  4150  000E9E  6A20               	clrf	Read_Data@data_read+1,c
  4151                           
  4152                           ;storage.c: 52: read_address -= 50;
  4153  000EA0  0E32               	movlw	50
  4154  000EA2  5E21               	subwf	Read_Data@read_address,f,c
  4155                           
  4156                           ;storage.c: 53: data_read <<= 8;
  4157  000EA4  501F               	movf	Read_Data@data_read,w,c
  4158  000EA6  6E20               	movwf	Read_Data@data_read+1,c
  4159  000EA8  6A1F               	clrf	Read_Data@data_read,c
  4160                           
  4161                           ;storage.c: 54: EEADR = read_address;
  4162  000EAA  C021  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4163                           
  4164                           ;storage.c: 55: EECON1bits.EEPGD = 0;
  4165  000EAE  9EA6               	bcf	4006,7,c	;volatile
  4166                           
  4167                           ;storage.c: 56: EECON1bits.CFGS = 0;
  4168  000EB0  9CA6               	bcf	4006,6,c	;volatile
  4169                           
  4170                           ;storage.c: 57: EECON1bits.RD = 1;
  4171  000EB2  80A6               	bsf	4006,0,c	;volatile
  4172                           
  4173                           ;storage.c: 58: data_read |= EEDATA;
  4174  000EB4  50A8               	movf	4008,w,c	;volatile
  4175  000EB6  121F               	iorwf	Read_Data@data_read,f,c
  4176                           
  4177                           ;storage.c: 59: return data_read;
  4178  000EB8  C01F  F01D         	movff	Read_Data@data_read,?_Read_Data
  4179  000EBC  C020  F01E         	movff	Read_Data@data_read+1,?_Read_Data+1
  4180  000EC0  0012               	return	
  4181  000EC2                     __end_of_Read_Data:
  4182                           	opt stack 0
  4183                           tblptru	equ	0xFF8
  4184                           tblptrh	equ	0xFF7
  4185                           tblptrl	equ	0xFF6
  4186                           tablat	equ	0xFF5
  4187                           prodh	equ	0xFF4
  4188                           prodl	equ	0xFF3
  4189                           intcon	equ	0xFF2
  4190                           postinc0	equ	0xFEE
  4191                           wreg	equ	0xFE8
  4192                           postdec1	equ	0xFE5
  4193                           fsr1l	equ	0xFE1
  4194                           indf2	equ	0xFDF
  4195                           postinc2	equ	0xFDE
  4196                           postdec2	equ	0xFDD
  4197                           plusw2	equ	0xFDB
  4198                           fsr2h	equ	0xFDA
  4199                           fsr2l	equ	0xFD9
  4200                           status	equ	0xFD8
  4201                           
  4202 ;; *************** function _Delay_Routine *****************
  4203 ;; Defined at:
  4204 ;;		line 78 in file "main.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  delay_multip    1    wreg     unsigned char 
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;  delay_multip    1   29[COMRAM] unsigned char 
  4209 ;;  delay_counte    1   30[COMRAM] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;		None               void
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0, cstack
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1
  4219 ;;      Params:         0       0       0
  4220 ;;      Locals:         2       0       0
  4221 ;;      Temps:          1       0       0
  4222 ;;      Totals:         3       0       0
  4223 ;;Total ram usage:        3 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:    3
  4226 ;; This function calls:
  4227 ;;		Nothing
  4228 ;; This function is called by:
  4229 ;;		_Check_Buttons
  4230 ;;		_Load_Data
  4231 ;;		_Del_Data
  4232 ;; This function uses a non-reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text23
  4236  00105A                     __ptext23:
  4237                           	opt stack 0
  4238  00105A                     _Delay_Routine:
  4239                           	opt stack 26
  4240                           
  4241                           ;incstack = 0
  4242                           ;Delay_Routine@delay_multiplyer stored from wreg
  4243  00105A  6E1E               	movwf	Delay_Routine@delay_multiplyer,c
  4244                           
  4245                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  4246  00105C  0E00               	movlw	0
  4247  00105E  6E1F               	movwf	Delay_Routine@delay_counter,c
  4248                           
  4249                           ;main.c: 80: delay_counter++) {
  4250  001060  D008               	goto	l2550
  4251  001062                     l2546:
  4252                           
  4253                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  4254  001062  0E82               	movlw	130
  4255  001064  6E1D               	movwf	??_Delay_Routine& (0+255),c
  4256  001066  0EDE               	movlw	222
  4257  001068                     u2157:
  4258  001068  2EE8               	decfsz	wreg,f,c
  4259  00106A  D7FE               	goto	u2157
  4260  00106C  2E1D               	decfsz	??_Delay_Routine& (0+255),f,c
  4261  00106E  D7FC               	goto	u2157
  4262  001070  2A1F               	incf	Delay_Routine@delay_counter,f,c
  4263  001072                     l2550:
  4264  001072  501E               	movf	Delay_Routine@delay_multiplyer,w,c
  4265  001074  5C1F               	subwf	Delay_Routine@delay_counter,w,c
  4266  001076  A0D8               	btfss	status,0,c
  4267  001078  D7F4               	goto	l2546
  4268                           
  4269                           ;main.c: 82: }
  4270                           ;main.c: 83: __nop();
  4271  00107A  F000               	nop	
  4272  00107C  0012               	return		;funcret
  4273  00107E                     __end_of_Delay_Routine:
  4274                           	opt stack 0
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           prodh	equ	0xFF4
  4280                           prodl	equ	0xFF3
  4281                           intcon	equ	0xFF2
  4282                           postinc0	equ	0xFEE
  4283                           wreg	equ	0xFE8
  4284                           postdec1	equ	0xFE5
  4285                           fsr1l	equ	0xFE1
  4286                           indf2	equ	0xFDF
  4287                           postinc2	equ	0xFDE
  4288                           postdec2	equ	0xFDD
  4289                           plusw2	equ	0xFDB
  4290                           fsr2h	equ	0xFDA
  4291                           fsr2l	equ	0xFD9
  4292                           status	equ	0xFD8
  4293                           
  4294 ;; *************** function _Isr *****************
  4295 ;; Defined at:
  4296 ;;		line 4 in file "interrupt.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  search_index    1   27[COMRAM] unsigned char 
  4301 ;;  pixel_index_    1   26[COMRAM] unsigned char 
  4302 ;;  pixel_index_    1   25[COMRAM] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;		None               void
  4305 ;; Registers used:
  4306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1
  4312 ;;      Params:         0       0       0
  4313 ;;      Locals:         3       0       0
  4314 ;;      Temps:         17       0       0
  4315 ;;      Totals:        20       0       0
  4316 ;;Total ram usage:       20 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; Hardware stack levels required when called:    2
  4319 ;; This function calls:
  4320 ;;		_Ignite_Detonators
  4321 ;;		_Receive
  4322 ;;		___awdiv
  4323 ;;		i2_Check_Detonators
  4324 ;; This function is called by:
  4325 ;;		Interrupt level 2
  4326 ;; This function uses a non-reentrant model
  4327 ;;
  4328                           
  4329                           	psect	intcode
  4330  000008                     __pintcode:
  4331                           	opt stack 0
  4332  000008                     _Isr:
  4333                           	opt stack 21
  4334                           
  4335                           ;incstack = 0
  4336  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4337  00000A  CFFA F00C          	movff	pclath,??_Isr+3
  4338  00000E  CFFB F00D          	movff	pclatu,??_Isr+4
  4339  000012  CFE9 F00E          	movff	fsr0l,??_Isr+5
  4340  000016  CFEA F00F          	movff	fsr0h,??_Isr+6
  4341  00001A  CFE1 F010          	movff	fsr1l,??_Isr+7
  4342  00001E  CFE2 F011          	movff	fsr1h,??_Isr+8
  4343  000022  CFD9 F012          	movff	fsr2l,??_Isr+9
  4344  000026  CFDA F013          	movff	fsr2h,??_Isr+10
  4345  00002A  CFF3 F014          	movff	prodl,??_Isr+11
  4346  00002E  CFF4 F015          	movff	prodh,??_Isr+12
  4347  000032  CFF6 F016          	movff	tblptrl,??_Isr+13
  4348  000036  CFF7 F017          	movff	tblptrh,??_Isr+14
  4349  00003A  CFF8 F018          	movff	tblptru,??_Isr+15
  4350  00003E  CFF5 F019          	movff	tablat,??_Isr+16
  4351                           
  4352                           ;interrupt.c: 5: if(PIR1bits.CCP1IF == 1) {
  4353  000042  A49E               	btfss	3998,2,c	;volatile
  4354  000044  D00B               	goto	i2l2364
  4355                           
  4356                           ;interrupt.c: 7: PIR1bits.CCP1IF = 0;
  4357  000046  949E               	bcf	3998,2,c	;volatile
  4358                           
  4359                           ;interrupt.c: 8: T1CONbits.TMR1ON = 1;
  4360  000048  80CD               	bsf	4045,0,c	;volatile
  4361                           
  4362                           ;interrupt.c: 9: T3CONbits.TMR3ON = 0;
  4363  00004A  90B1               	bcf	4017,0,c	;volatile
  4364                           
  4365                           ;interrupt.c: 10: TMR3L = 0;
  4366  00004C  0E00               	movlw	0
  4367  00004E  6EB2               	movwf	4018,c	;volatile
  4368                           
  4369                           ;interrupt.c: 11: TMR3H = 0;
  4370  000050  0E00               	movlw	0
  4371  000052  6EB3               	movwf	4019,c	;volatile
  4372                           
  4373                           ;interrupt.c: 12: current_time++;
  4374  000054  4A30               	infsnz	_current_time,f,c
  4375  000056  2A31               	incf	_current_time+1,f,c
  4376                           
  4377                           ;interrupt.c: 13: Ignite_Detonators();
  4378  000058  EC23  F006         	call	_Ignite_Detonators	;wreg free
  4379  00005C                     i2l2364:
  4380                           
  4381                           ;interrupt.c: 14: }if(PIR1bits.TMR1IF == 1) {
  4382  00005C  A09E               	btfss	3998,0,c	;volatile
  4383  00005E  D007               	goto	i2l2370
  4384                           
  4385                           ;interrupt.c: 15: PIR1bits.TMR1IF = 0;
  4386  000060  909E               	bcf	3998,0,c	;volatile
  4387                           
  4388                           ;interrupt.c: 16: T3CONbits.TMR3ON = 1;
  4389  000062  80B1               	bsf	4017,0,c	;volatile
  4390                           
  4391                           ;interrupt.c: 17: T1CONbits.TMR1ON = 0;
  4392  000064  90CD               	bcf	4045,0,c	;volatile
  4393                           
  4394                           ;interrupt.c: 18: TMR1L = 0;
  4395  000066  0E00               	movlw	0
  4396  000068  6ECE               	movwf	4046,c	;volatile
  4397                           
  4398                           ;interrupt.c: 19: TMR1H = 0;
  4399  00006A  0E00               	movlw	0
  4400  00006C  6ECF               	movwf	4047,c	;volatile
  4401  00006E                     i2l2370:
  4402                           
  4403                           ;interrupt.c: 20: }
  4404                           ;interrupt.c: 21: if(PIR1bits.RCIF == 1) {
  4405  00006E  AA9E               	btfss	3998,5,c	;volatile
  4406  000070  D0A3               	goto	i2l584
  4407                           
  4408                           ;interrupt.c: 22: PIR1bits.RCIF = 0;
  4409  000072  9A9E               	bcf	3998,5,c	;volatile
  4410                           
  4411                           ;interrupt.c: 23: if(RCSTAbits.RX9D == 1) {
  4412  000074  A0AB               	btfss	4011,0,c	;volatile
  4413  000076  D016               	goto	i2l572
  4414                           
  4415                           ;interrupt.c: 24: receive_counter = 0;
  4416  000078  0E00               	movlw	0
  4417  00007A  6E36               	movwf	_receive_counter,c
  4418                           
  4419                           ;interrupt.c: 25: received[receive_counter] = Receive();
  4420  00007C  5036               	movf	_receive_counter,w,c
  4421  00007E  0D01               	mullw	1
  4422  000080  0E2B               	movlw	low _received
  4423  000082  24F3               	addwf	prodl,w,c
  4424  000084  6ED9               	movwf	fsr2l,c
  4425  000086  0E00               	movlw	high _received
  4426  000088  20F4               	addwfc	prodh,w,c
  4427  00008A  6EDA               	movwf	fsr2h,c
  4428  00008C  EC78  F008         	call	_Receive	;wreg free
  4429  000090  6EDF               	movwf	indf2,c
  4430                           
  4431                           ;interrupt.c: 26: receive_counter++;
  4432  000092  2A36               	incf	_receive_counter,f,c
  4433                           
  4434                           ;interrupt.c: 27: if(received[0] == 0xAA) {
  4435  000094  0EAA               	movlw	170
  4436  000096  182B               	xorwf	_received,w,c
  4437  000098  A4D8               	btfss	status,2,c
  4438  00009A  D002               	goto	i2l573
  4439                           
  4440                           ;interrupt.c: 28: master_addressed = 1;
  4441  00009C  8242               	bsf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4442                           
  4443                           ;interrupt.c: 29: } else {
  4444  00009E  D07F               	goto	i2l2416
  4445  0000A0                     i2l573:
  4446                           
  4447                           ;interrupt.c: 30: master_addressed = 0;
  4448  0000A0  9242               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4449                           
  4450                           ;interrupt.c: 31: }
  4451                           ;interrupt.c: 32: } else if(master_addressed == 1) {
  4452  0000A2  D07D               	goto	i2l2416
  4453  0000A4                     i2l572:
  4454  0000A4  A242               	btfss	_master_addressed/(0+8),_master_addressed& (0+7),c
  4455  0000A6  D07B               	goto	i2l2416
  4456                           
  4457                           ;interrupt.c: 33: received[receive_counter] = Receive();
  4458  0000A8  5036               	movf	_receive_counter,w,c
  4459  0000AA  0D01               	mullw	1
  4460  0000AC  0E2B               	movlw	low _received
  4461  0000AE  24F3               	addwf	prodl,w,c
  4462  0000B0  6ED9               	movwf	fsr2l,c
  4463  0000B2  0E00               	movlw	high _received
  4464  0000B4  20F4               	addwfc	prodh,w,c
  4465  0000B6  6EDA               	movwf	fsr2h,c
  4466  0000B8  EC78  F008         	call	_Receive	;wreg free
  4467  0000BC  6EDF               	movwf	indf2,c
  4468                           
  4469                           ;interrupt.c: 34: receive_counter++;
  4470  0000BE  2A36               	incf	_receive_counter,f,c
  4471                           
  4472                           ;interrupt.c: 35: if(receive_counter > 4) {
  4473  0000C0  0E04               	movlw	4
  4474  0000C2  6436               	cpfsgt	_receive_counter,c
  4475  0000C4  D06C               	goto	i2l2416
  4476                           
  4477                           ;interrupt.c: 36: receive_counter = 0;
  4478  0000C6  0E00               	movlw	0
  4479  0000C8  6E36               	movwf	_receive_counter,c
  4480                           
  4481                           ;interrupt.c: 37: master_addressed = 0;
  4482  0000CA  9242               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4483                           
  4484                           ;interrupt.c: 38: if(received[2] == 'T') {
  4485  0000CC  0E54               	movlw	84
  4486  0000CE  182D               	xorwf	_received+2,w,c
  4487  0000D0  A4D8               	btfss	status,2,c
  4488  0000D2  D065               	goto	i2l2416
  4489                           
  4490                           ;interrupt.c: 39: unsigned char search_index = 0xFF;
  4491  0000D4  681C               	setf	Isr@search_index,c
  4492                           
  4493                           ;interrupt.c: 40: unsigned char pixel_index_array = 0;
  4494  0000D6  0E00               	movlw	0
  4495  0000D8  6E1A               	movwf	Isr@pixel_index_array,c
  4496                           
  4497                           ;interrupt.c: 41: unsigned char pixel_index_bit = 0;
  4498  0000DA  0E00               	movlw	0
  4499  0000DC  6E1B               	movwf	Isr@pixel_index_bit,c
  4500                           
  4501                           ;interrupt.c: 42: search_index = (received[1] * 10);
  4502  0000DE  502C               	movf	_received+1,w,c
  4503  0000E0  0D0A               	mullw	10
  4504  0000E2  CFF3 F01C          	movff	prodl,Isr@search_index
  4505                           
  4506                           ;interrupt.c: 44: search_index += received[3];
  4507  0000E6  502E               	movf	_received+3,w,c
  4508  0000E8  261C               	addwf	Isr@search_index,f,c
  4509                           
  4510                           ;interrupt.c: 46: pixel_index_array =
  4511                           ;interrupt.c: 47: pin[search_index].led_address / 8;
  4512  0000EA  501C               	movf	Isr@search_index,w,c
  4513  0000EC  0D06               	mullw	6
  4514  0000EE  0E03               	movlw	3
  4515  0000F0  26F3               	addwf	prodl,f,c
  4516  0000F2  0E00               	movlw	0
  4517  0000F4  22F4               	addwfc	prodh,f,c
  4518  0000F6  0E00               	movlw	low _pin
  4519  0000F8  24F3               	addwf	prodl,w,c
  4520  0000FA  6ED9               	movwf	fsr2l,c
  4521  0000FC  0E01               	movlw	high _pin
  4522  0000FE  20F4               	addwfc	prodh,w,c
  4523  000100  6EDA               	movwf	fsr2h,c
  4524  000102  50DF               	movf	indf2,w,c
  4525  000104  6E09               	movwf	??_Isr& (0+255),c
  4526  000106  5009               	movf	??_Isr,w,c
  4527  000108  6E01               	movwf	___awdiv@dividend,c
  4528  00010A  6A02               	clrf	___awdiv@dividend+1,c
  4529  00010C  0E00               	movlw	0
  4530  00010E  6E04               	movwf	___awdiv@divisor+1,c
  4531  000110  0E08               	movlw	8
  4532  000112  6E03               	movwf	___awdiv@divisor,c
  4533  000114  ECE1  F005         	call	___awdiv	;wreg free
  4534  000118  5001               	movf	?___awdiv,w,c
  4535  00011A  6E1A               	movwf	Isr@pixel_index_array,c
  4536                           
  4537                           ;interrupt.c: 48: pixel_index_bit =
  4538                           ;interrupt.c: 49: pin[search_index].led_address % 8;
  4539  00011C  501C               	movf	Isr@search_index,w,c
  4540  00011E  0D06               	mullw	6
  4541  000120  0E03               	movlw	3
  4542  000122  26F3               	addwf	prodl,f,c
  4543  000124  0E00               	movlw	0
  4544  000126  22F4               	addwfc	prodh,f,c
  4545  000128  0E00               	movlw	low _pin
  4546  00012A  24F3               	addwf	prodl,w,c
  4547  00012C  6ED9               	movwf	fsr2l,c
  4548  00012E  0E01               	movlw	high _pin
  4549  000130  20F4               	addwfc	prodh,w,c
  4550  000132  6EDA               	movwf	fsr2h,c
  4551  000134  50DF               	movf	indf2,w,c
  4552  000136  0B07               	andlw	7
  4553  000138  6E1B               	movwf	Isr@pixel_index_bit,c
  4554                           
  4555                           ;interrupt.c: 50: if(received[4] == 1){
  4556  00013A  042F               	decf	_received+4,w,c
  4557  00013C  A4D8               	btfss	status,2,c
  4558  00013E  D015               	goto	i2l2412
  4559                           
  4560                           ;interrupt.c: 51: pixels[pixel_index_array] |=
  4561                           ;interrupt.c: 52: (1 << pixel_index_bit);
  4562  000140  C01B  F009         	movff	Isr@pixel_index_bit,??_Isr
  4563  000144  0E01               	movlw	1
  4564  000146  6E0A               	movwf	(??_Isr+1)& (0+255),c
  4565  000148  2A09               	incf	??_Isr,f,c
  4566  00014A  D002               	goto	i2u162_44
  4567  00014C                     i2u162_45:
  4568  00014C  90D8               	bcf	status,0,c
  4569  00014E  360A               	rlcf	??_Isr+1,f,c
  4570  000150                     i2u162_44:
  4571  000150  2E09               	decfsz	??_Isr,f,c
  4572  000152  D7FC               	goto	i2u162_45
  4573  000154  501A               	movf	Isr@pixel_index_array,w,c
  4574  000156  0D01               	mullw	1
  4575  000158  0E38               	movlw	low _pixels
  4576  00015A  24F3               	addwf	prodl,w,c
  4577  00015C  6ED9               	movwf	fsr2l,c
  4578  00015E  0E00               	movlw	high _pixels
  4579  000160  20F4               	addwfc	prodh,w,c
  4580  000162  6EDA               	movwf	fsr2h,c
  4581  000164  500A               	movf	??_Isr+1,w,c
  4582  000166  12DF               	iorwf	indf2,f,c
  4583                           
  4584                           ;interrupt.c: 53: }else if(received[4] == 0) {
  4585  000168  D01A               	goto	i2l2416
  4586  00016A                     i2l2412:
  4587  00016A  502F               	movf	_received+4,w,c
  4588  00016C  A4D8               	btfss	status,2,c
  4589  00016E  D017               	goto	i2l2416
  4590                           
  4591                           ;interrupt.c: 54: pixels[pixel_index_array] &=
  4592                           ;interrupt.c: 55: ~(1 << pixel_index_bit);
  4593  000170  C01B  F009         	movff	Isr@pixel_index_bit,??_Isr
  4594  000174  0E01               	movlw	1
  4595  000176  6E0A               	movwf	(??_Isr+1)& (0+255),c
  4596  000178  2A09               	incf	??_Isr,f,c
  4597  00017A  D002               	goto	i2u164_44
  4598  00017C                     i2u164_45:
  4599  00017C  90D8               	bcf	status,0,c
  4600  00017E  360A               	rlcf	??_Isr+1,f,c
  4601  000180                     i2u164_44:
  4602  000180  2E09               	decfsz	??_Isr,f,c
  4603  000182  D7FC               	goto	i2u164_45
  4604  000184  500A               	movf	??_Isr+1,w,c
  4605  000186  0AFF               	xorlw	255
  4606  000188  6E0B               	movwf	(??_Isr+2)& (0+255),c
  4607  00018A  501A               	movf	Isr@pixel_index_array,w,c
  4608  00018C  0D01               	mullw	1
  4609  00018E  0E38               	movlw	low _pixels
  4610  000190  24F3               	addwf	prodl,w,c
  4611  000192  6ED9               	movwf	fsr2l,c
  4612  000194  0E00               	movlw	high _pixels
  4613  000196  20F4               	addwfc	prodh,w,c
  4614  000198  6EDA               	movwf	fsr2h,c
  4615  00019A  500B               	movf	??_Isr+2,w,c
  4616  00019C  16DF               	andwf	indf2,f,c
  4617  00019E                     i2l2416:
  4618                           
  4619                           ;interrupt.c: 56: }
  4620                           ;interrupt.c: 57: }
  4621                           ;interrupt.c: 58: }
  4622                           ;interrupt.c: 59: }
  4623                           ;interrupt.c: 60: __nop();
  4624  00019E  F000               	nop	
  4625                           
  4626                           ;interrupt.c: 61: if(check_counter < 30 && testflag == 1) {
  4627  0001A0  0E1E               	movlw	30
  4628  0001A2  6032               	cpfslt	_check_counter,c
  4629  0001A4  D006               	goto	i2l2426
  4630  0001A6  A442               	btfss	_testflag/(0+8),_testflag& (0+7),c
  4631  0001A8  D004               	goto	i2l2426
  4632                           
  4633                           ;interrupt.c: 62: check_counter++;
  4634  0001AA  2A32               	incf	_check_counter,f,c
  4635                           
  4636                           ;interrupt.c: 63: Check_Detonators();
  4637  0001AC  EC9B  F007         	call	i2_Check_Detonators	;wreg free
  4638                           
  4639                           ;interrupt.c: 64: }else {
  4640  0001B0  D003               	goto	i2l584
  4641  0001B2                     i2l2426:
  4642                           
  4643                           ;interrupt.c: 65: check_counter = 0;
  4644  0001B2  0E00               	movlw	0
  4645  0001B4  6E32               	movwf	_check_counter,c
  4646                           
  4647                           ;interrupt.c: 66: testflag = 0;
  4648  0001B6  9442               	bcf	_testflag/(0+8),_testflag& (0+7),c
  4649  0001B8                     i2l584:
  4650  0001B8  C019  FFF5         	movff	??_Isr+16,tablat
  4651  0001BC  C018  FFF8         	movff	??_Isr+15,tblptru
  4652  0001C0  C017  FFF7         	movff	??_Isr+14,tblptrh
  4653  0001C4  C016  FFF6         	movff	??_Isr+13,tblptrl
  4654  0001C8  C015  FFF4         	movff	??_Isr+12,prodh
  4655  0001CC  C014  FFF3         	movff	??_Isr+11,prodl
  4656  0001D0  C013  FFDA         	movff	??_Isr+10,fsr2h
  4657  0001D4  C012  FFD9         	movff	??_Isr+9,fsr2l
  4658  0001D8  C011  FFE2         	movff	??_Isr+8,fsr1h
  4659  0001DC  C010  FFE1         	movff	??_Isr+7,fsr1l
  4660  0001E0  C00F  FFEA         	movff	??_Isr+6,fsr0h
  4661  0001E4  C00E  FFE9         	movff	??_Isr+5,fsr0l
  4662  0001E8  C00D  FFFB         	movff	??_Isr+4,pclatu
  4663  0001EC  C00C  FFFA         	movff	??_Isr+3,pclath
  4664  0001F0  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4665  0001F2  0011               	retfie		f
  4666  0001F4                     __end_of_Isr:
  4667                           	opt stack 0
  4668                           pclatu	equ	0xFFB
  4669                           pclath	equ	0xFFA
  4670                           tblptru	equ	0xFF8
  4671                           tblptrh	equ	0xFF7
  4672                           tblptrl	equ	0xFF6
  4673                           tablat	equ	0xFF5
  4674                           prodh	equ	0xFF4
  4675                           prodl	equ	0xFF3
  4676                           intcon	equ	0xFF2
  4677                           postinc0	equ	0xFEE
  4678                           fsr0h	equ	0xFEA
  4679                           fsr0l	equ	0xFE9
  4680                           wreg	equ	0xFE8
  4681                           postdec1	equ	0xFE5
  4682                           fsr1h	equ	0xFE2
  4683                           fsr1l	equ	0xFE1
  4684                           indf2	equ	0xFDF
  4685                           postinc2	equ	0xFDE
  4686                           postdec2	equ	0xFDD
  4687                           plusw2	equ	0xFDB
  4688                           fsr2h	equ	0xFDA
  4689                           fsr2l	equ	0xFD9
  4690                           status	equ	0xFD8
  4691                           
  4692 ;; *************** function i2_Check_Detonators *****************
  4693 ;; Defined at:
  4694 ;;		line 25 in file "ignition.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;		None               void
  4701 ;; Registers used:
  4702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1
  4708 ;;      Params:         0       0       0
  4709 ;;      Locals:         0       0       0
  4710 ;;      Temps:          0       0       0
  4711 ;;      Totals:         0       0       0
  4712 ;;Total ram usage:        0 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    1
  4715 ;; This function calls:
  4716 ;;		i2_Transmit
  4717 ;; This function is called by:
  4718 ;;		_Isr
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text25
  4723  000F36                     __ptext25:
  4724                           	opt stack 0
  4725  000F36                     i2_Check_Detonators:
  4726                           	opt stack 21
  4727                           
  4728                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  4729                           
  4730                           ;incstack = 0
  4731  000F36  0E54               	movlw	84
  4732  000F38  6E01               	movwf	i2Transmit@operation,c
  4733  000F3A  5032               	movf	_check_counter,w,c
  4734  000F3C  0D06               	mullw	6
  4735  000F3E  0E01               	movlw	1
  4736  000F40  26F3               	addwf	prodl,f,c
  4737  000F42  0E00               	movlw	0
  4738  000F44  22F4               	addwfc	prodh,f,c
  4739  000F46  0E00               	movlw	low _pin
  4740  000F48  24F3               	addwf	prodl,w,c
  4741  000F4A  6ED9               	movwf	fsr2l,c
  4742  000F4C  0E01               	movlw	high _pin
  4743  000F4E  20F4               	addwfc	prodh,w,c
  4744  000F50  6EDA               	movwf	fsr2h,c
  4745  000F52  50DF               	movf	indf2,w,c
  4746  000F54  6E02               	movwf	i2Transmit@port,c
  4747  000F56  5032               	movf	_check_counter,w,c
  4748  000F58  0D06               	mullw	6
  4749  000F5A  0E00               	movlw	low _pin
  4750  000F5C  24F3               	addwf	prodl,w,c
  4751  000F5E  6ED9               	movwf	fsr2l,c
  4752  000F60  0E01               	movlw	high _pin
  4753  000F62  20F4               	addwfc	prodh,w,c
  4754  000F64  6EDA               	movwf	fsr2h,c
  4755  000F66  50DF               	movf	indf2,w,c
  4756  000F68  ECD2  F007         	call	i2_Transmit
  4757  000F6C  0012               	return		;funcret
  4758  000F6E                     __end_ofi2_Check_Detonators:
  4759                           	opt stack 0
  4760                           pclatu	equ	0xFFB
  4761                           pclath	equ	0xFFA
  4762                           tblptru	equ	0xFF8
  4763                           tblptrh	equ	0xFF7
  4764                           tblptrl	equ	0xFF6
  4765                           tablat	equ	0xFF5
  4766                           prodh	equ	0xFF4
  4767                           prodl	equ	0xFF3
  4768                           intcon	equ	0xFF2
  4769                           postinc0	equ	0xFEE
  4770                           fsr0h	equ	0xFEA
  4771                           fsr0l	equ	0xFE9
  4772                           wreg	equ	0xFE8
  4773                           postdec1	equ	0xFE5
  4774                           fsr1h	equ	0xFE2
  4775                           fsr1l	equ	0xFE1
  4776                           indf2	equ	0xFDF
  4777                           postinc2	equ	0xFDE
  4778                           postdec2	equ	0xFDD
  4779                           plusw2	equ	0xFDB
  4780                           fsr2h	equ	0xFDA
  4781                           fsr2l	equ	0xFD9
  4782                           status	equ	0xFD8
  4783                           
  4784 ;; *************** function ___awdiv *****************
  4785 ;; Defined at:
  4786 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  dividend        2    0[COMRAM] int 
  4789 ;;  divisor         2    2[COMRAM] int 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  quotient        2    6[COMRAM] int 
  4792 ;;  sign            1    5[COMRAM] unsigned char 
  4793 ;;  counter         1    4[COMRAM] unsigned char 
  4794 ;; Return value:  Size  Location     Type
  4795 ;;                  2    0[COMRAM] int 
  4796 ;; Registers used:
  4797 ;;		wreg, status,2, status,0
  4798 ;; Tracked objects:
  4799 ;;		On entry : 0/0
  4800 ;;		On exit  : 0/0
  4801 ;;		Unchanged: 0/0
  4802 ;; Data sizes:     COMRAM   BANK0   BANK1
  4803 ;;      Params:         4       0       0
  4804 ;;      Locals:         4       0       0
  4805 ;;      Temps:          0       0       0
  4806 ;;      Totals:         8       0       0
  4807 ;;Total ram usage:        8 bytes
  4808 ;; Hardware stack levels used:    1
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_Isr
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           	psect	text26
  4817  000BC2                     __ptext26:
  4818                           	opt stack 0
  4819  000BC2                     ___awdiv:
  4820                           	opt stack 22
  4821                           
  4822                           ;incstack = 0
  4823  000BC2  0E00               	movlw	0
  4824  000BC4  6E06               	movwf	___awdiv@sign,c
  4825  000BC6  AE04               	btfss	___awdiv@divisor+1,7,c
  4826  000BC8  D006               	goto	i2l2304
  4827  000BCA  6C03               	negf	___awdiv@divisor,c
  4828  000BCC  1E04               	comf	___awdiv@divisor+1,f,c
  4829  000BCE  B0D8               	btfsc	status,0,c
  4830  000BD0  2A04               	incf	___awdiv@divisor+1,f,c
  4831  000BD2  0E01               	movlw	1
  4832  000BD4  6E06               	movwf	___awdiv@sign,c
  4833  000BD6                     i2l2304:
  4834  000BD6  AE02               	btfss	___awdiv@dividend+1,7,c
  4835  000BD8  D006               	goto	i2l2310
  4836  000BDA  6C01               	negf	___awdiv@dividend,c
  4837  000BDC  1E02               	comf	___awdiv@dividend+1,f,c
  4838  000BDE  B0D8               	btfsc	status,0,c
  4839  000BE0  2A02               	incf	___awdiv@dividend+1,f,c
  4840  000BE2  0E01               	movlw	1
  4841  000BE4  1A06               	xorwf	___awdiv@sign,f,c
  4842  000BE6                     i2l2310:
  4843  000BE6  0E00               	movlw	0
  4844  000BE8  6E08               	movwf	___awdiv@quotient+1,c
  4845  000BEA  0E00               	movlw	0
  4846  000BEC  6E07               	movwf	___awdiv@quotient,c
  4847  000BEE  5003               	movf	___awdiv@divisor,w,c
  4848  000BF0  1004               	iorwf	___awdiv@divisor+1,w,c
  4849  000BF2  B4D8               	btfsc	status,2,c
  4850  000BF4  D01C               	goto	i2l2332
  4851  000BF6  0E01               	movlw	1
  4852  000BF8  6E05               	movwf	___awdiv@counter,c
  4853  000BFA  D004               	goto	i2l2318
  4854  000BFC                     i2l2316:
  4855  000BFC  90D8               	bcf	status,0,c
  4856  000BFE  3603               	rlcf	___awdiv@divisor,f,c
  4857  000C00  3604               	rlcf	___awdiv@divisor+1,f,c
  4858  000C02  2A05               	incf	___awdiv@counter,f,c
  4859  000C04                     i2l2318:
  4860  000C04  AE04               	btfss	___awdiv@divisor+1,7,c
  4861  000C06  D7FA               	goto	i2l2316
  4862  000C08                     i2l2320:
  4863  000C08  90D8               	bcf	status,0,c
  4864  000C0A  3607               	rlcf	___awdiv@quotient,f,c
  4865  000C0C  3608               	rlcf	___awdiv@quotient+1,f,c
  4866  000C0E  5003               	movf	___awdiv@divisor,w,c
  4867  000C10  5C01               	subwf	___awdiv@dividend,w,c
  4868  000C12  5004               	movf	___awdiv@divisor+1,w,c
  4869  000C14  5802               	subwfb	___awdiv@dividend+1,w,c
  4870  000C16  A0D8               	btfss	status,0,c
  4871  000C18  D005               	goto	i2l2328
  4872  000C1A  5003               	movf	___awdiv@divisor,w,c
  4873  000C1C  5E01               	subwf	___awdiv@dividend,f,c
  4874  000C1E  5004               	movf	___awdiv@divisor+1,w,c
  4875  000C20  5A02               	subwfb	___awdiv@dividend+1,f,c
  4876  000C22  8007               	bsf	___awdiv@quotient,0,c
  4877  000C24                     i2l2328:
  4878  000C24  90D8               	bcf	status,0,c
  4879  000C26  3204               	rrcf	___awdiv@divisor+1,f,c
  4880  000C28  3203               	rrcf	___awdiv@divisor,f,c
  4881  000C2A  2E05               	decfsz	___awdiv@counter,f,c
  4882  000C2C  D7ED               	goto	i2l2320
  4883  000C2E                     i2l2332:
  4884  000C2E  5006               	movf	___awdiv@sign,w,c
  4885  000C30  B4D8               	btfsc	status,2,c
  4886  000C32  D004               	goto	i2l2336
  4887  000C34  6C07               	negf	___awdiv@quotient,c
  4888  000C36  1E08               	comf	___awdiv@quotient+1,f,c
  4889  000C38  B0D8               	btfsc	status,0,c
  4890  000C3A  2A08               	incf	___awdiv@quotient+1,f,c
  4891  000C3C                     i2l2336:
  4892  000C3C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4893  000C40  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4894  000C44  0012               	return	
  4895  000C46                     __end_of___awdiv:
  4896                           	opt stack 0
  4897                           pclatu	equ	0xFFB
  4898                           pclath	equ	0xFFA
  4899                           tblptru	equ	0xFF8
  4900                           tblptrh	equ	0xFF7
  4901                           tblptrl	equ	0xFF6
  4902                           tablat	equ	0xFF5
  4903                           prodh	equ	0xFF4
  4904                           prodl	equ	0xFF3
  4905                           intcon	equ	0xFF2
  4906                           postinc0	equ	0xFEE
  4907                           fsr0h	equ	0xFEA
  4908                           fsr0l	equ	0xFE9
  4909                           wreg	equ	0xFE8
  4910                           postdec1	equ	0xFE5
  4911                           fsr1h	equ	0xFE2
  4912                           fsr1l	equ	0xFE1
  4913                           indf2	equ	0xFDF
  4914                           postinc2	equ	0xFDE
  4915                           postdec2	equ	0xFDD
  4916                           plusw2	equ	0xFDB
  4917                           fsr2h	equ	0xFDA
  4918                           fsr2l	equ	0xFD9
  4919                           status	equ	0xFD8
  4920                           
  4921 ;; *************** function _Receive *****************
  4922 ;; Defined at:
  4923 ;;		line 37 in file "communication.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;		None
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;		None
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      unsigned char 
  4930 ;; Registers used:
  4931 ;;		wreg, status,2
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMRAM   BANK0   BANK1
  4937 ;;      Params:         0       0       0
  4938 ;;      Locals:         0       0       0
  4939 ;;      Temps:          0       0       0
  4940 ;;      Totals:         0       0       0
  4941 ;;Total ram usage:        0 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; This function calls:
  4944 ;;		Nothing
  4945 ;; This function is called by:
  4946 ;;		_Isr
  4947 ;; This function uses a non-reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text27
  4951  0010F0                     __ptext27:
  4952                           	opt stack 0
  4953  0010F0                     _Receive:
  4954                           	opt stack 22
  4955                           
  4956                           ;communication.c: 38: if(RCSTA1bits.OERR == 1) {
  4957                           
  4958                           ;incstack = 0
  4959  0010F0  A2AB               	btfss	4011,1,c	;volatile
  4960  0010F2  D004               	goto	i2l504
  4961                           
  4962                           ;communication.c: 39: RCSTA1bits.CREN = 0;
  4963  0010F4  98AB               	bcf	4011,4,c	;volatile
  4964                           
  4965                           ;communication.c: 40: RCSTA1bits.CREN = 1;
  4966  0010F6  88AB               	bsf	4011,4,c	;volatile
  4967                           
  4968                           ;communication.c: 41: overrun = 1;
  4969  0010F8  0E01               	movlw	1
  4970  0010FA  6E34               	movwf	_overrun,c
  4971  0010FC                     i2l504:
  4972                           
  4973                           ;communication.c: 42: }
  4974                           ;communication.c: 43: return (RCREG1);
  4975  0010FC  50AE               	movf	4014,w,c	;volatile
  4976  0010FE  0012               	return	
  4977  001100                     __end_of_Receive:
  4978                           	opt stack 0
  4979                           pclatu	equ	0xFFB
  4980                           pclath	equ	0xFFA
  4981                           tblptru	equ	0xFF8
  4982                           tblptrh	equ	0xFF7
  4983                           tblptrl	equ	0xFF6
  4984                           tablat	equ	0xFF5
  4985                           prodh	equ	0xFF4
  4986                           prodl	equ	0xFF3
  4987                           intcon	equ	0xFF2
  4988                           postinc0	equ	0xFEE
  4989                           fsr0h	equ	0xFEA
  4990                           fsr0l	equ	0xFE9
  4991                           wreg	equ	0xFE8
  4992                           postdec1	equ	0xFE5
  4993                           fsr1h	equ	0xFE2
  4994                           fsr1l	equ	0xFE1
  4995                           indf2	equ	0xFDF
  4996                           postinc2	equ	0xFDE
  4997                           postdec2	equ	0xFDD
  4998                           plusw2	equ	0xFDB
  4999                           fsr2h	equ	0xFDA
  5000                           fsr2l	equ	0xFD9
  5001                           status	equ	0xFD8
  5002                           
  5003 ;; *************** function _Ignite_Detonators *****************
  5004 ;; Defined at:
  5005 ;;		line 29 in file "ignition.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;		None
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  counter         1    5[COMRAM] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;		None               void
  5012 ;; Registers used:
  5013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1
  5019 ;;      Params:         0       0       0
  5020 ;;      Locals:         1       0       0
  5021 ;;      Temps:          2       0       0
  5022 ;;      Totals:         3       0       0
  5023 ;;Total ram usage:        3 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    1
  5026 ;; This function calls:
  5027 ;;		i2_Transmit
  5028 ;; This function is called by:
  5029 ;;		_Isr
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text28
  5034  000C46                     __ptext28:
  5035                           	opt stack 0
  5036  000C46                     _Ignite_Detonators:
  5037                           	opt stack 21
  5038                           
  5039                           ;ignition.c: 30: for(unsigned char counter = 0; counter < 30; counter++) {
  5040                           
  5041                           ;incstack = 0
  5042  000C46  0E00               	movlw	0
  5043  000C48  6E06               	movwf	Ignite_Detonators@counter,c
  5044  000C4A                     i2l2276:
  5045  000C4A  0E1D               	movlw	29
  5046  000C4C  6406               	cpfsgt	Ignite_Detonators@counter,c
  5047  000C4E  D001               	goto	i2l2280
  5048  000C50  0012               	return	
  5049  000C52                     i2l2280:
  5050                           
  5051                           ;ignition.c: 31: if(pin[counter].time == current_time) {
  5052  000C52  5006               	movf	Ignite_Detonators@counter,w,c
  5053  000C54  0D06               	mullw	6
  5054  000C56  0E04               	movlw	4
  5055  000C58  26F3               	addwf	prodl,f,c
  5056  000C5A  0E00               	movlw	0
  5057  000C5C  22F4               	addwfc	prodh,f,c
  5058  000C5E  0E00               	movlw	low _pin
  5059  000C60  24F3               	addwf	prodl,w,c
  5060  000C62  6ED9               	movwf	fsr2l,c
  5061  000C64  0E01               	movlw	high _pin
  5062  000C66  20F4               	addwfc	prodh,w,c
  5063  000C68  6EDA               	movwf	fsr2h,c
  5064  000C6A  5030               	movf	_current_time,w,c
  5065  000C6C  18DE               	xorwf	postinc2,w,c
  5066  000C6E  E11F               	bnz	i2l2284
  5067  000C70  5031               	movf	_current_time+1,w,c
  5068  000C72  18DE               	xorwf	postinc2,w,c
  5069  000C74  A4D8               	btfss	status,2,c
  5070  000C76  D01B               	goto	i2l2284
  5071                           
  5072                           ;ignition.c: 32: Transmit(pin[counter].slave, 'I', pin[counter].output);
  5073  000C78  0E49               	movlw	73
  5074  000C7A  6E01               	movwf	i2Transmit@operation,c
  5075  000C7C  5006               	movf	Ignite_Detonators@counter,w,c
  5076  000C7E  0D06               	mullw	6
  5077  000C80  0E01               	movlw	1
  5078  000C82  26F3               	addwf	prodl,f,c
  5079  000C84  0E00               	movlw	0
  5080  000C86  22F4               	addwfc	prodh,f,c
  5081  000C88  0E00               	movlw	low _pin
  5082  000C8A  24F3               	addwf	prodl,w,c
  5083  000C8C  6ED9               	movwf	fsr2l,c
  5084  000C8E  0E01               	movlw	high _pin
  5085  000C90  20F4               	addwfc	prodh,w,c
  5086  000C92  6EDA               	movwf	fsr2h,c
  5087  000C94  50DF               	movf	indf2,w,c
  5088  000C96  6E02               	movwf	i2Transmit@port,c
  5089  000C98  5006               	movf	Ignite_Detonators@counter,w,c
  5090  000C9A  0D06               	mullw	6
  5091  000C9C  0E00               	movlw	low _pin
  5092  000C9E  24F3               	addwf	prodl,w,c
  5093  000CA0  6ED9               	movwf	fsr2l,c
  5094  000CA2  0E01               	movlw	high _pin
  5095  000CA4  20F4               	addwfc	prodh,w,c
  5096  000CA6  6EDA               	movwf	fsr2h,c
  5097  000CA8  50DF               	movf	indf2,w,c
  5098  000CAA  ECD2  F007         	call	i2_Transmit
  5099  000CAE                     i2l2284:
  5100  000CAE  2A06               	incf	Ignite_Detonators@counter,f,c
  5101  000CB0  D7CC               	goto	i2l2276
  5102  000CB2                     __end_of_Ignite_Detonators:
  5103                           	opt stack 0
  5104                           pclatu	equ	0xFFB
  5105                           pclath	equ	0xFFA
  5106                           tblptru	equ	0xFF8
  5107                           tblptrh	equ	0xFF7
  5108                           tblptrl	equ	0xFF6
  5109                           tablat	equ	0xFF5
  5110                           prodh	equ	0xFF4
  5111                           prodl	equ	0xFF3
  5112                           intcon	equ	0xFF2
  5113                           postinc0	equ	0xFEE
  5114                           fsr0h	equ	0xFEA
  5115                           fsr0l	equ	0xFE9
  5116                           wreg	equ	0xFE8
  5117                           postdec1	equ	0xFE5
  5118                           fsr1h	equ	0xFE2
  5119                           fsr1l	equ	0xFE1
  5120                           indf2	equ	0xFDF
  5121                           postinc2	equ	0xFDE
  5122                           postdec2	equ	0xFDD
  5123                           plusw2	equ	0xFDB
  5124                           fsr2h	equ	0xFDA
  5125                           fsr2l	equ	0xFD9
  5126                           status	equ	0xFD8
  5127                           
  5128 ;; *************** function i2_Transmit *****************
  5129 ;; Defined at:
  5130 ;;		line 15 in file "communication.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  receiver        1    wreg     unsigned char 
  5133 ;;  operation       1    0[COMRAM] unsigned char 
  5134 ;;  port            1    1[COMRAM] unsigned char 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  receiver        1    2[COMRAM] unsigned char 
  5137 ;; Return value:  Size  Location     Type
  5138 ;;		None               void
  5139 ;; Registers used:
  5140 ;;		wreg, status,2
  5141 ;; Tracked objects:
  5142 ;;		On entry : 0/0
  5143 ;;		On exit  : 0/0
  5144 ;;		Unchanged: 0/0
  5145 ;; Data sizes:     COMRAM   BANK0   BANK1
  5146 ;;      Params:         2       0       0
  5147 ;;      Locals:         1       0       0
  5148 ;;      Temps:          0       0       0
  5149 ;;      Totals:         3       0       0
  5150 ;;Total ram usage:        3 bytes
  5151 ;; Hardware stack levels used:    1
  5152 ;; This function calls:
  5153 ;;		Nothing
  5154 ;; This function is called by:
  5155 ;;		_Ignite_Detonators
  5156 ;;		i2_Check_Detonators
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text29
  5161  000FA4                     __ptext29:
  5162                           	opt stack 0
  5163  000FA4                     i2_Transmit:
  5164                           	opt stack 21
  5165                           
  5166                           ;incstack = 0
  5167                           ;i2Transmit@receiver stored from wreg
  5168  000FA4  6E03               	movwf	i2Transmit@receiver,c
  5169                           
  5170                           ;communication.c: 17: PORTBbits.RB5 = 1;
  5171  000FA6  8A81               	bsf	3969,5,c	;volatile
  5172                           
  5173                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  5174  000FA8  98AB               	bcf	4011,4,c	;volatile
  5175                           
  5176                           ;communication.c: 20: __nop();
  5177  000FAA  F000               	nop	
  5178  000FAC                     i2l486:
  5179  000FAC  A89E               	btfss	3998,4,c	;volatile
  5180  000FAE  D7FE               	goto	i2l486
  5181                           
  5182                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  5183  000FB0  80AC               	bsf	4012,0,c	;volatile
  5184                           
  5185                           ;communication.c: 23: TXREG1 = receiver;
  5186  000FB2  C003  FFAD         	movff	i2Transmit@receiver,4013	;volatile
  5187  000FB6                     i2l489:
  5188  000FB6  A89E               	btfss	3998,4,c	;volatile
  5189  000FB8  D7FE               	goto	i2l489
  5190                           
  5191                           ;communication.c: 25: TXREG1 = 0xAA;
  5192  000FBA  0EAA               	movlw	170
  5193  000FBC  6EAD               	movwf	4013,c	;volatile
  5194  000FBE                     i2l492:
  5195  000FBE  A89E               	btfss	3998,4,c	;volatile
  5196  000FC0  D7FE               	goto	i2l492
  5197                           
  5198                           ;communication.c: 27: TXREG1 = operation;
  5199  000FC2  C001  FFAD         	movff	i2Transmit@operation,4013	;volatile
  5200  000FC6                     i2l495:
  5201  000FC6  A89E               	btfss	3998,4,c	;volatile
  5202  000FC8  D7FE               	goto	i2l495
  5203                           
  5204                           ;communication.c: 29: TXREG1 = port;
  5205  000FCA  C002  FFAD         	movff	i2Transmit@port,4013	;volatile
  5206  000FCE                     i2l498:
  5207  000FCE  A2AC               	btfss	4012,1,c	;volatile
  5208  000FD0  D7FE               	goto	i2l498
  5209                           
  5210                           ;communication.c: 31: PORTBbits.RB5 = 0;
  5211  000FD2  9A81               	bcf	3969,5,c	;volatile
  5212                           
  5213                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  5214  000FD4  88AB               	bsf	4011,4,c	;volatile
  5215                           
  5216                           ;communication.c: 33: __nop();
  5217  000FD6  F000               	nop	
  5218  000FD8  0012               	return		;funcret
  5219  000FDA                     __end_ofi2_Transmit:
  5220                           	opt stack 0
  5221                           pclatu	equ	0xFFB
  5222                           pclath	equ	0xFFA
  5223                           tblptru	equ	0xFF8
  5224                           tblptrh	equ	0xFF7
  5225                           tblptrl	equ	0xFF6
  5226                           tablat	equ	0xFF5
  5227                           prodh	equ	0xFF4
  5228                           prodl	equ	0xFF3
  5229                           intcon	equ	0xFF2
  5230                           postinc0	equ	0xFEE
  5231                           fsr0h	equ	0xFEA
  5232                           fsr0l	equ	0xFE9
  5233                           wreg	equ	0xFE8
  5234                           postdec1	equ	0xFE5
  5235                           fsr1h	equ	0xFE2
  5236                           fsr1l	equ	0xFE1
  5237                           indf2	equ	0xFDF
  5238                           postinc2	equ	0xFDE
  5239                           postdec2	equ	0xFDD
  5240                           plusw2	equ	0xFDB
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8
  5244                           pclatu	equ	0xFFB
  5245                           pclath	equ	0xFFA
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           prodh	equ	0xFF4
  5251                           prodl	equ	0xFF3
  5252                           intcon	equ	0xFF2
  5253                           postinc0	equ	0xFEE
  5254                           fsr0h	equ	0xFEA
  5255                           fsr0l	equ	0xFE9
  5256                           wreg	equ	0xFE8
  5257                           postdec1	equ	0xFE5
  5258                           fsr1h	equ	0xFE2
  5259                           fsr1l	equ	0xFE1
  5260                           indf2	equ	0xFDF
  5261                           postinc2	equ	0xFDE
  5262                           postdec2	equ	0xFDD
  5263                           plusw2	equ	0xFDB
  5264                           fsr2h	equ	0xFDA
  5265                           fsr2l	equ	0xFD9
  5266                           status	equ	0xFD8
  5267                           
  5268                           	psect	rparam
  5269  0000                     pclatu	equ	0xFFB
  5270                           pclath	equ	0xFFA
  5271                           tblptru	equ	0xFF8
  5272                           tblptrh	equ	0xFF7
  5273                           tblptrl	equ	0xFF6
  5274                           tablat	equ	0xFF5
  5275                           prodh	equ	0xFF4
  5276                           prodl	equ	0xFF3
  5277                           intcon	equ	0xFF2
  5278                           postinc0	equ	0xFEE
  5279                           fsr0h	equ	0xFEA
  5280                           fsr0l	equ	0xFE9
  5281                           wreg	equ	0xFE8
  5282                           postdec1	equ	0xFE5
  5283                           fsr1h	equ	0xFE2
  5284                           fsr1l	equ	0xFE1
  5285                           indf2	equ	0xFDF
  5286                           postinc2	equ	0xFDE
  5287                           postdec2	equ	0xFDD
  5288                           plusw2	equ	0xFDB
  5289                           fsr2h	equ	0xFDA
  5290                           fsr2l	equ	0xFD9
  5291                           status	equ	0xFD8
  5292                           
  5293                           	psect	temp
  5294  000043                     btemp:
  5295                           	opt stack 0
  5296  000043                     	ds	1
  5297  0000                     int$flags	set	btemp
  5298                           pclatu	equ	0xFFB
  5299                           pclath	equ	0xFFA
  5300                           tblptru	equ	0xFF8
  5301                           tblptrh	equ	0xFF7
  5302                           tblptrl	equ	0xFF6
  5303                           tablat	equ	0xFF5
  5304                           prodh	equ	0xFF4
  5305                           prodl	equ	0xFF3
  5306                           intcon	equ	0xFF2
  5307                           postinc0	equ	0xFEE
  5308                           fsr0h	equ	0xFEA
  5309                           fsr0l	equ	0xFE9
  5310                           wreg	equ	0xFE8
  5311                           postdec1	equ	0xFE5
  5312                           fsr1h	equ	0xFE2
  5313                           fsr1l	equ	0xFE1
  5314                           indf2	equ	0xFDF
  5315                           postinc2	equ	0xFDE
  5316                           postdec2	equ	0xFDD
  5317                           plusw2	equ	0xFDB
  5318                           fsr2h	equ	0xFDA
  5319                           fsr2l	equ	0xFD9
  5320                           status	equ	0xFD8


Data Sizes:
    Strings     77
    Constant    0
    Data        180
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      66
    BANK0           160     11      11
    BANK1           256      0     180

Pointer List with Targets:

    Write_Display_Byte@write_data	PTR unsigned char  size(2) Largest target is 7
		 -> pixels(COMRAM[7]), 

    Evaluate_Display@evaluate	PTR const unsigned char  size(2) Largest target is 4
		 -> signs(COMRAM[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    Set_Bits@bits	PTR const unsigned char  size(3) Largest target is 8191
		 -> ROM(CODE[8191]), STR_18(CODE[2]), STR_17(CODE[4]), STR_16(CODE[7]), 
		 -> STR_15(CODE[7]), STR_14(CODE[7]), STR_13(CODE[6]), STR_12(CODE[7]), 
		 -> STR_11(CODE[8]), STR_10(CODE[4]), STR_9(CODE[7]), STR_8(CODE[6]), 
		 -> STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[3]), 
		 -> STR_3(CODE[7]), 


Critical Paths under _main in COMRAM

    _Check_Detonators->_Transmit
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits

Critical Paths under _Isr in COMRAM

    _Isr->___awdiv
    i2_Check_Detonators->i2_Transmit
    _Ignite_Detonators->i2_Transmit

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _Check_Buttons->_Del_Data
    _Del_Data->_Load_Data
    _Load_Data->_Set_Display
    _Set_Display->_Evaluate_Signs

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   34270
                      _Check_Buttons
                   _Check_Detonators
                               _Init
                          _Load_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Detonators                                     0     0      0     270
                           _Transmit
 ---------------------------------------------------------------------------------
 (2) _Transmit                                             3     1      2     270
                                             28 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0   18697
                                              9 BANK0      2     2      0
                           _Del_Data
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (2) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Del_Data                                             1     1      0   11361
                                              8 BANK0      1     1      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Load_Data
                          _Save_Data
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     592
                                             28 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Load_Data                                            2     2      0    8738
                                              6 BANK0      2     2      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Read_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Set_Display                                          4     1      3    6565
                                              2 BANK0      4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
                 _Write_Display_Byte
 ---------------------------------------------------------------------------------
 (2) _Write_Display_Byte                                   7     5      2     207
                                             28 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _Evaluate_Signs                                       3     1      2    2491
                                             41 COMRAM     1     1      0
                                              0 BANK0      2     0      2
                   _Evaluate_Display
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                             28 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Display                                     5     3      2    1864
                                             36 COMRAM     5     3      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (4) _Set_Bits                                             8     5      3    1494
                                             28 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2     111
                                             28 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      68
                                             28 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Isr                                                 20    20      0    1019
                                              8 COMRAM    20    20      0
                  _Ignite_Detonators
                            _Receive
                            ___awdiv
                 i2_Check_Detonators
 ---------------------------------------------------------------------------------
 (9) i2_Check_Detonators                                   0     0      0     170
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Ignite_Detonators                                    3     3      0     282
                                              3 COMRAM     3     3      0
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (10) i2_Transmit                                          3     1      2     170
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Del_Data
       _Delay_Routine
       _Evaluate_Display
         _Set_Bits
       _Load_Data
         _Delay_Routine
         _Evaluate_Display
           _Set_Bits
         _Read_Data
         _Set_Display
           _Evaluate_Display
             _Set_Bits
           _Evaluate_Signs
             _Evaluate_Display
               _Set_Bits
             ___lwmod
           _Write_Display_Byte
       _Save_Data
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
       _Write_Display_Byte
     _Start_Timer
   _Check_Detonators
     _Transmit
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Load_Data
     _Delay_Routine
     _Evaluate_Display
       _Set_Bits
     _Read_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
       _Write_Display_Byte
   _Set_Display
     _Evaluate_Display
       _Set_Bits
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
       ___lwmod
     _Write_Display_Byte

 _Isr (ROOT)
   _Ignite_Detonators
     i2_Transmit
   _Receive
   ___awdiv
   i2_Check_Detonators
     i2_Transmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      B       B       4        6.9%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2A      42       1       70.2%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     101       6        0.0%
DATA                 0      0     101       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Dec 31 20:20:39 2016

      Evaluate_Display@evaluate 0025                      i2_Transmit 0FA4                              l92 0268  
                            l96 0324                    ___awdiv@sign 0006                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                             l102 03D4                             l112 05C6  
                           l108 047E                             l340 0DB4                             l511 0E78  
                           l337 0D8A                             l427 0D06                             l492 0F88  
                           l486 0F76                             l495 0F90                             l489 0F80  
                           l498 0F98                             l997 0DF8                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                             _Isr 0008                             _pin 0100  
                _Evaluate_Signs 0CB2                             prod 000FF3                             wreg 000FE8  
             Set_Bits@Bitoutput 0024                      _TXSTA1bits 000FAC                    __CFG_LVP$OFF 000000  
                          ?_Isr 0001                            l2510 0DEE                            l2502 0DCE  
                          l2440 0A6E                            l2432 0A5E                            l2504 0DD6  
                          l2520 0CBE                            l2442 0A72                            l2434 0A62  
                          l2450 0ACA                            l2506 0DDA                            l2444 0A76  
                          l2436 0A66                            l2452 0ACC                            l2460 073C  
                          l2516 0CB6                            l2612 0972                            l2550 1072  
                          l2438 0A6A                            l2470 07B4                            l2462 0754  
                          l2622 09AC                            l2710 028A                            l2448 0A7A  
                          l2480 082C                            l2472 07CC                            l2464 076C  
                          l2616 097C                            l2546 1062                            l2490 08A4  
                          l2482 0844                            l2474 07E4                            l2466 0784  
                          l2458 0724                            l2554 0D1E                            l2570 0D56  
                          l2714 02F2                            l2484 085C                            l2476 07FC  
                          l2468 079C                            l2492 08B6                            l2572 0D62  
                          l2486 0874                            l2478 0814                            l2494 094C  
                          l2566 0D48                            l2670 0E1C                            l2734 0346  
                          l2488 088C                            l2496 094E                            l2680 0E3C  
                          l2824 0632                            l2816 05E6                            l2752 044C  
                          l2674 0E26                            l2770 049E                            l2738 03A2  
                          l2782 04F6                            l2790 0516                            l2774 04E2  
                          l2848 1012                            l2778 04EC                            l2788 0502  
                          STR_1 0246                            STR_2 024A                            STR_3 0209  
                          STR_4 0243                            STR_5 022B                            STR_6 0225  
                          STR_7 023D                            STR_8 0231                            STR_9 021E  
                          u2157 1068                            u1680 08EA                            u1687 08E0  
                          _Init 107E                            _main 100A                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 0043                   __CFG_BORV$190 000000                    Transmit@port 001E  
                          pclat 000FFA                            prodh 000FF4                            prodl 000FF3  
                          start 01F4                   __CFG_IESO$OFF 000000                  Save_Data@store 001D  
            _Write_Display_Byte 0E42                    ___param_bank 000010                   _InitInterrupt 1100  
                         ??_Isr 0009                 __end_of_Receive 1100             ?_Write_Display_Byte 001D  
                  _BAUDCON1bits 000FB8                           ?_Init 0001                           ?_main 0001  
               __end_of___awdiv 0C46                           _EEADR 000FA9                           STR_10 0242  
                         STR_11 0201                           STR_12 0210                           STR_13 0237  
                         STR_14 0217                           STR_15 0209                           STR_16 0209  
                         STR_17 020C                           STR_18 0229          __end_of_Evaluate_Signs 0D18  
               ___awdiv@divisor 0003               _InitMiscellaneous 110C                 __end_of___lwmod 0E02  
                         i2l504 10FC                           i2l492 0FBE                           i2l572 00A4  
                         i2l573 00A0                           i2l486 0FAC                           i2l495 0FC6  
                         i2l584 01B8                           i2l489 0FB6                           i2l498 0FCE  
               ___awdiv@counter 0005               _Ignite_Detonators 0C46                           _TMR1H 000FCF  
                         _TMR3H 000FB3                           _TMR1L 000FCE                           _TMR3L 000FB2  
                         _PORTA 000F80                           _PORTB 000F81                           _PORTC 000F82  
                         _PORTE 000F84                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISE 000F96                   __CFG_WRT0$OFF 000000  
      __end_of_InitTransmission 105A                   __CFG_WRT1$OFF 000000              ?_InitMiscellaneous 0001  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
            ?_Ignite_Detonators 0001                   __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000  
                 __CFG_WRTD$OFF 000000                _Evaluate_Display 071C                  __CFG_EBTRB$OFF 000000  
                         _signs 003F              __CFG_MCLRE$EXTMCLR 000000            ??_Write_Display_Byte 001F  
                __pbitbssCOMRAM 0210                  __CFG_BOREN$OFF 000000             ??_InitMiscellaneous 001D  
                         tablat 000FF5             ??_Ignite_Detonators 0004                           plusw2 000FDB  
              __end_of_Del_Data 0E42                           status 000FD8                  ?_InitInterrupt 0001  
               __initialization 0EC2                    __end_of_Init 109C                    __end_of_main 1036  
                   ?i2_Transmit 0001                __end_of_InitPort 10F0                __end_of_InitTris 10DE  
        Set_Display@information 0062       __end_of_InitMiscellaneous 1112                          ??_Init 001D  
     __end_of_Ignite_Detonators 0CB2                   ??_Set_Display 002B                          ??_main 002B  
              __end_of_Set_Bits 0B0E                 ?_Evaluate_Signs 0060                   __activetblptr 000002  
              __end_of_Transmit 0FA4                          _EEDATA 000FA8                          _CCPR1H 000FBF  
                        _CCPR1L 000FBE                          _EECON2 000FA7                ___awdiv@dividend 0001  
                        _ANSELA 000F38                          _ANSELB 000F39                          _ANSELC 000F3A  
                        i2l2310 0BE6                          i2l2320 0C08                          i2l2304 0BD6  
                        i2l2316 0BFC                          i2l2332 0C2E                          i2l2412 016A  
                        i2l2318 0C04                          i2l2280 0C52                          i2l2336 0C3C  
                        i2l2328 0C24                          i2l2416 019E                          i2l2426 01B2  
                        i2l2370 006E                          i2l2284 0CAE                          i2l2276 0C4A  
                        i2l2364 005C                  __CFG_WDTEN$OFF 000000                          _RCREG1 000FAE  
            __size_of_Load_Data 00FC                          _OSCCON 000FD3              __size_of_InitAnsel 0014  
                        _SPBRG1 000FAF                          _SSP1IF 007CF3              __size_of_Read_Data 0040  
            __size_of_InitTimer 0030                          _TXREG1 000FAD                       ??_Receive 0001  
                __CFG_XINST$OFF 000000                    _CCPTMRS0bits 000F49     __size_ofi2_Check_Detonators 0038  
            __size_of_Save_Data 0050                       ??___awdiv 0005                       ??___lwmod 0021  
                        clear_0 0ECA                ___awdiv@quotient 0007                          _pixels 0038  
        __size_of_Check_Buttons 04CC  Evaluate_Signs@evaluation_value 0060                    __mediumconst 0000  
                        tblptrh 000FF7                          tblptrl 000FF6                          tblptru 000FF8  
            i2Transmit@receiver 0003             __end_of_Set_Display 0D70                 __CFG_HFOFST$OFF 000000  
           __size_ofi2_Transmit 0036            Isr@pixel_index_array 001A                      __accesstop 0060  
       __end_of__initialization 0EF0                 __CFG_PBADEN$OFF 000000                 ??_InitInterrupt 001D  
                 ___rparam_used 000001                  i2Transmit@port 0002                  __pcstackCOMRAM 0001  
     __size_of_Check_Detonators 0038                    __pidataBANK1 0B0E                   ??_Start_Timer 001D  
    __size_of_InitMiscellaneous 0006      __size_of_Ignite_Detonators 006C               __end_of_Load_Data 0A54  
             __end_of_InitAnsel 10CC               __end_of_Read_Data 0EC2               __end_of_InitTimer 100A  
                     ?_Del_Data 0001               __end_of_Save_Data 0DC0              Isr@pixel_index_bit 001B  
               __CFG_PLLCFG$OFF 000000                   _Check_Buttons 0250                       ?_InitPort 0001  
                     ?_InitTris 0001                       ?_Set_Bits 001D              __CFG_CCP2MX$PORTC1 000000  
      __end_of_Evaluate_Display 0958              __CFG_CCP3MX$PORTB5 000000                       ?_Transmit 001D  
                   _Set_Display 0D18                      ??_Del_Data 002B          __size_of_Delay_Routine 0024  
           __end_of_Start_Timer 10B8               ?_InitTransmission 0001               __CFG_PRICLKEN$OFF 000000  
                       _SSP1BUF 000FC9              ??_InitTransmission 001D                  ?_Check_Buttons 0001  
                    ??_InitPort 001D                      ??_InitTris 001D                      ??_Set_Bits 0020  
               __CFG_PWRTEN$OFF 000000                         _Receive 10F0                         __Hparam 0000  
                       __Lparam 0000                Load_Data@counter 0067                         ___awdiv 0BC2  
              ??_Evaluate_Signs 002A                    ??i2_Transmit 0003                      ??_Transmit 001F  
                       ___lwmod 0DC0                    __psmallconst 0200                 __CFG_STVREN$OFF 000000  
                       __pcinit 0EC2                         __ramtop 0200                         __ptext0 100A  
                       __ptext1 107E                         __ptext2 10CC                         __ptext3 1036  
                       __ptext4 0FDA                         __ptext5 10DE                         __ptext6 110C  
                       __ptext7 1100                         __ptext8 10B8                         __ptext9 0EFE  
                     _T1CONbits 000FCD                    __size_of_Isr 01EC                 Set_Display@type 0065  
                     _T3CONbits 000FB1                         _overrun 0034            end_of_initialization 0EF0  
   __size_of_Write_Display_Byte 0040              __end_ofi2_Transmit 0FDA                   __Lmediumconst 0000  
                 _Delay_Routine 105A                       _RCSTAbits 000FAB                _Check_Detonators 0EFE  
                       postdec1 000FE5                         postdec2 000FDD                         postinc0 000FEE  
                       postinc2 000FDE                     _Start_Timer 109C                       _PORTBbits 000F81  
                     _PORTCbits 000F82             i2Transmit@operation 0001                       _TRISCbits 000F94  
               ??_Check_Buttons 0069        Ignite_Detonators@counter 0006                   _check_counter 0032  
                ?_Delay_Routine 0001                     _CCP1CONbits 000FBD      __end_ofi2_Check_Detonators 0F6E  
                  Set_Bits@bits 001D             start_initialization 0EC2                       _Load_Data 0958  
                     _InitAnsel 10B8                    _ignite_ready 0210               __size_of_Del_Data 0040  
                   __end_of_Isr 01F4                       _Read_Data 0E82                       _InitTimer 0FDA  
              Set_Bits@bitcount 0023                       _Save_Data 0D70               __size_of_InitPort 0012  
             __size_of_InitTris 0012           __end_of_InitInterrupt 110C               __size_of_Set_Bits 00BA  
             ?_Evaluate_Display 0025                     __pdataBANK1 0100              ??_Evaluate_Display 0027  
                _slave_selected 0037               __size_of_Transmit 0036                    ?_Set_Display 0062  
        Save_Data@store_address 001F                     __pbssCOMRAM 002B                      ?_Load_Data 0001  
                    ?_InitAnsel 0001                   __pcstackBANK0 0060                      ?_Read_Data 001D  
                    ?_InitTimer 0001                 ??_Delay_Routine 001D                      ?_Save_Data 001D  
                  _current_time 0030                _master_addressed 0211                        ?_Receive 0001  
     __size_of_InitTransmission 0024           Read_Data@read_address 0021                       __pintcode 0008  
                      ?___awdiv 0001                        ?___lwmod 001D                     __smallconst 0200  
      __end_of_Check_Detonators 0F36                        _PIE1bits 000F9D                        i2u162_44 0150  
                      i2u162_45 014C                        i2u164_44 0180                        i2u164_45 017C  
                      _PIR1bits 000F9E                        _PIR2bits 000FA1                __CFG_WDTPS$32768 000000  
                      _SSP1CON1 000FC6                        _SSP1STAT 000FC7                    ?_Start_Timer 0001  
                      _Del_Data 0E02                     ??_Load_Data 0066                     ??_InitAnsel 001D  
               _receive_counter 0036                     ??_Read_Data 001F                     ??_InitTimer 001D  
    __end_of_Write_Display_Byte 0E82                       copy_data0 0EE4                        _InitPort 10DE  
                      _InitTris 10CC                     ??_Save_Data 0020               Transmit@operation 001D  
                    _EECON1bits 000FA6                 Isr@search_index 001C                        _Set_Bits 0A54  
                  _pin_selected 0035                        __Hrparam 0000                __size_of_Receive 0010  
                      __Lrparam 0000               __CFG_P2BMX$PORTB5 000000                        _Transmit 0F6E  
              __size_of___awdiv 0084                __size_of___lwmod 0042              i2_Check_Detonators 0F36  
          __size_of_Set_Display 0058         __size_of_Evaluate_Signs 0066             ?i2_Check_Detonators 0001  
                      __ptext10 0F6E                        __ptext11 0250                        __ptext20 071C  
                      __ptext12 109C                        __ptext21 0A54                        __ptext13 0E02  
                      __ptext22 0E82                        __ptext14 0D70                        __ptext23 105A  
                      __ptext15 0958                        __ptext16 0D18                        __ptext25 0F36  
                      __ptext17 0E42                        __ptext26 0BC2                        __ptext18 0CB2  
                      __ptext27 10F0                        __ptext19 0DC0                        __ptext28 0C46  
                      __ptext29 0FA4           __end_of_Check_Buttons 071C                Set_Display@value 0063  
                 __size_of_Init 001E                   __size_of_main 002C                        _received 002B  
              _InitTransmission 1036      Delay_Routine@delay_counter 001F            ??i2_Check_Detonators 0004  
                      _testflag 0212                        int$flags 0043            Evaluate_Display@size 0029  
              Transmit@receiver 001F    Write_Display_Byte@write_data 001D      Evaluate_Signs@valuecounter 002A  
                    _INTCONbits 000FF2       __size_of_Evaluate_Display 023C              Read_Data@data_read 001F  
                      intlevel2 0000                ___lwmod@dividend 001D       Write_Display_Byte@counter 0023  
                    _RCSTA1bits 000FAB                 _display_counter 0033                 Del_Data@counter 0068  
          __size_of_Start_Timer 001C                 ___lwmod@divisor 001F   Delay_Routine@delay_multiplyer 001E  
               ___lwmod@counter 0021               __CFG_T3CMX$PORTC0 000000          __size_of_InitInterrupt 000C  
             ?_Check_Detonators 0001              ??_Check_Detonators 0020           __end_of_Delay_Routine 107E  
             __CFG_FOSC$INTIO67 000000  
