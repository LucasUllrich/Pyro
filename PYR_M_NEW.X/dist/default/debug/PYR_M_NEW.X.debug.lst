

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jul 14 20:02:53 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	text7,global,reloc=2,class=CODE,delta=1
    15                           	psect	text8,global,reloc=2,class=CODE,delta=1
    16                           	psect	text9,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	text11,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     _ANSELA	set	3896
    23  0000                     _ANSELB	set	3897
    24  0000                     _ANSELC	set	3898
    25  0000                     _BAUDCON1bits	set	4024
    26  0000                     _INTCONbits	set	4082
    27  0000                     _OSCCON	set	4051
    28  0000                     _PIE1bits	set	3997
    29  0000                     _PIR1bits	set	3998
    30  0000                     _PORTA	set	3968
    31  0000                     _PORTAbits	set	3968
    32  0000                     _PORTB	set	3969
    33  0000                     _PORTBbits	set	3969
    34  0000                     _PORTC	set	3970
    35  0000                     _PORTE	set	3972
    36  0000                     _RCSTA1bits	set	4011
    37  0000                     _SPBRG1	set	4015
    38  0000                     _SSP1CON1	set	4038
    39  0000                     _SSP1STAT	set	4039
    40  0000                     _TRISA	set	3986
    41  0000                     _TRISB	set	3987
    42  0000                     _TRISC	set	3988
    43  0000                     _TRISCbits	set	3988
    44  0000                     _TRISE	set	3990
    45  0000                     _TXREG1	set	4013
    46  0000                     _TXSTA1bits	set	4012
    47                           
    48                           ; #config settings
    49  0000                     
    50                           	psect	cinit
    51  000152                     __pcinit:
    52                           	opt stack 0
    53  000152                     start_initialization:
    54                           	opt stack 0
    55  000152                     __initialization:
    56                           	opt stack 0
    57  000152                     end_of_initialization:
    58                           	opt stack 0
    59  000152                     __end_of__initialization:
    60                           	opt stack 0
    61  000152  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    62  000154  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    63  000156  0100               	movlb	0
    64  000158  EF62  F000         	goto	_main	;jump to C main() function
    65                           
    66                           	psect	cstackCOMRAM
    67  000001                     __pcstackCOMRAM:
    68                           	opt stack 0
    69  000001                     Receive@received:
    70                           	opt stack 0
    71                           
    72                           ; 1 bytes @ 0x0
    73  000001                     	ds	1
    74  000002                     ??_Isr:
    75                           
    76                           ; 0 bytes @ 0x1
    77  000002                     	ds	14
    78  000010                     Isr@received:
    79                           	opt stack 0
    80                           
    81                           ; 1 bytes @ 0xF
    82  000010                     	ds	1
    83  000011                     Transmit@trans_data:
    84                           	opt stack 0
    85                           
    86                           ; 1 bytes @ 0x10
    87  000011                     	ds	1
    88  000012                     Transmit@slave:
    89                           	opt stack 0
    90                           
    91                           ; 1 bytes @ 0x11
    92  000012                     	ds	1
    93  000013                     ??_main:
    94                           
    95                           ; 0 bytes @ 0x12
    96  000013                     	ds	1
    97                           
    98 ;;
    99 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   100 ;;
   101 ;; *************** function _main *****************
   102 ;; Defined at:
   103 ;;		line 80 in file "main.c"
   104 ;; Parameters:    Size  Location     Type
   105 ;;		None
   106 ;; Auto vars:     Size  Location     Type
   107 ;;		None
   108 ;; Return value:  Size  Location     Type
   109 ;;		None               void
   110 ;; Registers used:
   111 ;;		wreg, status,2, cstack
   112 ;; Tracked objects:
   113 ;;		On entry : 0/0
   114 ;;		On exit  : 0/0
   115 ;;		Unchanged: 0/0
   116 ;; Data sizes:     COMRAM   BANK0   BANK1
   117 ;;      Params:         0       0       0
   118 ;;      Locals:         0       0       0
   119 ;;      Temps:          1       0       0
   120 ;;      Totals:         1       0       0
   121 ;;Total ram usage:        1 bytes
   122 ;; Hardware stack levels required when called:    4
   123 ;; This function calls:
   124 ;;		_Init
   125 ;;		_Transmit
   126 ;; This function is called by:
   127 ;;		Startup code after reset
   128 ;; This function uses a non-reentrant model
   129 ;;
   130                           
   131                           	psect	text0
   132  0000C4                     __ptext0:
   133                           	opt stack 0
   134  0000C4                     _main:
   135                           	opt stack 27
   136                           
   137                           ;main.c: 81: Init();
   138                           
   139                           ;incstack = 0
   140  0000C4  EC73  F000         	call	_Init	;wreg free
   141  0000C8                     l812:
   142                           
   143                           ;main.c: 83: if(PORTBbits.RB1 == 1) {
   144  0000C8  A281               	btfss	3969,1,c	;volatile
   145  0000CA  D7FE               	goto	l812
   146                           
   147                           ;main.c: 84: _delay((unsigned long)((10)*(4000000/4000.0)));
   148  0000CC  0E0D               	movlw	13
   149  0000CE  6E13               	movwf	??_main& (0+255),c
   150  0000D0  0EFC               	movlw	252
   151  0000D2                     u117:
   152  0000D2  2EE8               	decfsz	wreg,f,c
   153  0000D4  D7FE               	goto	u117
   154  0000D6  2E13               	decfsz	??_main& (0+255),f,c
   155  0000D8  D7FC               	goto	u117
   156                           
   157                           ;main.c: 85: Transmit(1, 'L');
   158  0000DA  0E4C               	movlw	76
   159  0000DC  6E11               	movwf	Transmit@trans_data,c
   160  0000DE  0E01               	movlw	1
   161  0000E0  EC82  F000         	call	_Transmit
   162  0000E4  D7F1               	goto	l812
   163  0000E6                     __end_of_main:
   164                           	opt stack 0
   165                           wreg	equ	0xFE8
   166                           
   167 ;; *************** function _Transmit *****************
   168 ;; Defined at:
   169 ;;		line 3 in file "communication.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;  slave           1    wreg     unsigned char 
   172 ;;  trans_data      1   16[COMRAM] unsigned char 
   173 ;; Auto vars:     Size  Location     Type
   174 ;;  slave           1   17[COMRAM] unsigned char 
   175 ;; Return value:  Size  Location     Type
   176 ;;		None               void
   177 ;; Registers used:
   178 ;;		wreg
   179 ;; Tracked objects:
   180 ;;		On entry : 0/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:     COMRAM   BANK0   BANK1
   184 ;;      Params:         1       0       0
   185 ;;      Locals:         1       0       0
   186 ;;      Temps:          0       0       0
   187 ;;      Totals:         2       0       0
   188 ;;Total ram usage:        2 bytes
   189 ;; Hardware stack levels used:    1
   190 ;; Hardware stack levels required when called:    2
   191 ;; This function calls:
   192 ;;		Nothing
   193 ;; This function is called by:
   194 ;;		_main
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           	psect	text1
   199  000104                     __ptext1:
   200                           	opt stack 0
   201  000104                     _Transmit:
   202                           	opt stack 28
   203                           
   204                           ;incstack = 0
   205                           ;Transmit@slave stored from wreg
   206  000104  6E12               	movwf	Transmit@slave,c
   207  000106                     l110:
   208  000106  A89E               	btfss	3998,4,c	;volatile
   209  000108  D7FE               	goto	l110
   210                           
   211                           ;communication.c: 5: TXSTA1bits.TX9D = 1;
   212  00010A  80AC               	bsf	4012,0,c	;volatile
   213                           
   214                           ;communication.c: 6: TXREG1 = slave;
   215  00010C  C012  FFAD         	movff	Transmit@slave,4013	;volatile
   216  000110                     l113:
   217  000110  A89E               	btfss	3998,4,c	;volatile
   218  000112  D7FE               	goto	l113
   219                           
   220                           ;communication.c: 8: TXREG1 = trans_data;
   221  000114  C011  FFAD         	movff	Transmit@trans_data,4013	;volatile
   222  000118  0012               	return		;funcret
   223  00011A                     __end_of_Transmit:
   224                           	opt stack 0
   225                           wreg	equ	0xFE8
   226                           
   227 ;; *************** function _Init *****************
   228 ;; Defined at:
   229 ;;		line 3 in file "init.c"
   230 ;; Parameters:    Size  Location     Type
   231 ;;		None
   232 ;; Auto vars:     Size  Location     Type
   233 ;;		None
   234 ;; Return value:  Size  Location     Type
   235 ;;		None               void
   236 ;; Registers used:
   237 ;;		wreg, status,2, cstack
   238 ;; Tracked objects:
   239 ;;		On entry : 0/0
   240 ;;		On exit  : 0/0
   241 ;;		Unchanged: 0/0
   242 ;; Data sizes:     COMRAM   BANK0   BANK1
   243 ;;      Params:         0       0       0
   244 ;;      Locals:         0       0       0
   245 ;;      Temps:          0       0       0
   246 ;;      Totals:         0       0       0
   247 ;;Total ram usage:        0 bytes
   248 ;; Hardware stack levels used:    1
   249 ;; Hardware stack levels required when called:    3
   250 ;; This function calls:
   251 ;;		_InitAnsel
   252 ;;		_InitInterrupt
   253 ;;		_InitMiscellaneous
   254 ;;		_InitPort
   255 ;;		_InitTimer
   256 ;;		_InitTransmission
   257 ;;		_InitTris
   258 ;; This function is called by:
   259 ;;		_main
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263                           	psect	text2
   264  0000E6                     __ptext2:
   265                           	opt stack 0
   266  0000E6                     _Init:
   267                           	opt stack 27
   268                           
   269                           ;init.c: 4: InitPort();
   270                           
   271                           ;incstack = 0
   272  0000E6  ECA0  F000         	call	_InitPort	;wreg free
   273                           
   274                           ;init.c: 5: InitTris();
   275  0000EA  EC97  F000         	call	_InitTris	;wreg free
   276                           
   277                           ;init.c: 6: InitAnsel();
   278  0000EE  EC8D  F000         	call	_InitAnsel	;wreg free
   279                           
   280                           ;init.c: 7: InitMiscellaneous();
   281  0000F2  ECB6  F000         	call	_InitMiscellaneous	;wreg free
   282                           
   283                           ;init.c: 8: InitTransmission();
   284  0000F6  EC50  F000         	call	_InitTransmission	;wreg free
   285                           
   286                           ;init.c: 9: InitTimer();
   287  0000FA  ECB9  F000         	call	_InitTimer	;wreg free
   288                           
   289                           ;init.c: 10: InitInterrupt();
   290  0000FE  ECAE  F000         	call	_InitInterrupt	;wreg free
   291  000102  0012               	return		;funcret
   292  000104                     __end_of_Init:
   293                           	opt stack 0
   294                           wreg	equ	0xFE8
   295                           
   296 ;; *************** function _InitTris *****************
   297 ;; Defined at:
   298 ;;		line 20 in file "init.c"
   299 ;; Parameters:    Size  Location     Type
   300 ;;		None
   301 ;; Auto vars:     Size  Location     Type
   302 ;;		None
   303 ;; Return value:  Size  Location     Type
   304 ;;		None               void
   305 ;; Registers used:
   306 ;;		wreg, status,2
   307 ;; Tracked objects:
   308 ;;		On entry : 0/0
   309 ;;		On exit  : 0/0
   310 ;;		Unchanged: 0/0
   311 ;; Data sizes:     COMRAM   BANK0   BANK1
   312 ;;      Params:         0       0       0
   313 ;;      Locals:         0       0       0
   314 ;;      Temps:          0       0       0
   315 ;;      Totals:         0       0       0
   316 ;;Total ram usage:        0 bytes
   317 ;; Hardware stack levels used:    1
   318 ;; Hardware stack levels required when called:    2
   319 ;; This function calls:
   320 ;;		Nothing
   321 ;; This function is called by:
   322 ;;		_Init
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text3
   327  00012E                     __ptext3:
   328                           	opt stack 0
   329  00012E                     _InitTris:
   330                           	opt stack 27
   331                           
   332                           ;init.c: 21: TRISA = 0b00000000;
   333                           
   334                           ;incstack = 0
   335  00012E  0E00               	movlw	0
   336  000130  6E92               	movwf	3986,c	;volatile
   337                           
   338                           ;init.c: 22: TRISB = 0b00011111;
   339  000132  0E1F               	movlw	31
   340  000134  6E93               	movwf	3987,c	;volatile
   341                           
   342                           ;init.c: 23: TRISC = 0b10000010;
   343  000136  0E82               	movlw	130
   344  000138  6E94               	movwf	3988,c	;volatile
   345                           
   346                           ;init.c: 24: TRISE = 0;
   347  00013A  0E00               	movlw	0
   348  00013C  6E96               	movwf	3990,c	;volatile
   349  00013E  0012               	return		;funcret
   350  000140                     __end_of_InitTris:
   351                           	opt stack 0
   352                           wreg	equ	0xFE8
   353                           
   354 ;; *************** function _InitTransmission *****************
   355 ;; Defined at:
   356 ;;		line 37 in file "init.c"
   357 ;; Parameters:    Size  Location     Type
   358 ;;		None
   359 ;; Auto vars:     Size  Location     Type
   360 ;;		None
   361 ;; Return value:  Size  Location     Type
   362 ;;		None               void
   363 ;; Registers used:
   364 ;;		wreg, status,2
   365 ;; Tracked objects:
   366 ;;		On entry : 0/0
   367 ;;		On exit  : 0/0
   368 ;;		Unchanged: 0/0
   369 ;; Data sizes:     COMRAM   BANK0   BANK1
   370 ;;      Params:         0       0       0
   371 ;;      Locals:         0       0       0
   372 ;;      Temps:          0       0       0
   373 ;;      Totals:         0       0       0
   374 ;;Total ram usage:        0 bytes
   375 ;; Hardware stack levels used:    1
   376 ;; Hardware stack levels required when called:    2
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_Init
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text4
   385  0000A0                     __ptext4:
   386                           	opt stack 0
   387  0000A0                     _InitTransmission:
   388                           	opt stack 27
   389                           
   390                           ;init.c: 39: SSP1STAT = 0b01000000;
   391                           
   392                           ;incstack = 0
   393  0000A0  0E40               	movlw	64
   394  0000A2  6EC7               	movwf	4039,c	;volatile
   395                           
   396                           ;init.c: 40: SSP1CON1 = 0b00100010;
   397  0000A4  0E22               	movlw	34
   398  0000A6  6EC6               	movwf	4038,c	;volatile
   399                           
   400                           ;init.c: 42: TXSTA1bits.SYNC = 0;
   401  0000A8  98AC               	bcf	4012,4,c	;volatile
   402                           
   403                           ;init.c: 43: TXSTA1bits.BRGH = 1;
   404  0000AA  84AC               	bsf	4012,2,c	;volatile
   405                           
   406                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
   407  0000AC  96B8               	bcf	4024,3,c	;volatile
   408                           
   409                           ;init.c: 45: SPBRG1 = 25;
   410  0000AE  0E19               	movlw	25
   411  0000B0  6EAF               	movwf	4015,c	;volatile
   412                           
   413                           ;init.c: 46: TRISCbits.RC6 = 1;
   414  0000B2  8C94               	bsf	3988,6,c	;volatile
   415                           
   416                           ;init.c: 47: TRISCbits.RC7 = 1;
   417  0000B4  8E94               	bsf	3988,7,c	;volatile
   418                           
   419                           ;init.c: 48: RCSTA1bits.SPEN = 1;
   420  0000B6  8EAB               	bsf	4011,7,c	;volatile
   421                           
   422                           ;init.c: 49: TXSTA1bits.TX9 = 1;
   423  0000B8  8CAC               	bsf	4012,6,c	;volatile
   424                           
   425                           ;init.c: 50: TXSTA1bits.TXEN = 1;
   426  0000BA  8AAC               	bsf	4012,5,c	;volatile
   427                           
   428                           ;init.c: 51: RCSTA1bits.RC9 = 1;
   429  0000BC  8CAB               	bsf	4011,6,c	;volatile
   430                           
   431                           ;init.c: 52: RCSTA1bits.CREN = 1;
   432  0000BE  88AB               	bsf	4011,4,c	;volatile
   433                           
   434                           ;init.c: 53: TRISCbits.RC6 = 0;
   435  0000C0  9C94               	bcf	3988,6,c	;volatile
   436  0000C2  0012               	return		;funcret
   437  0000C4                     __end_of_InitTransmission:
   438                           	opt stack 0
   439                           wreg	equ	0xFE8
   440                           
   441 ;; *************** function _InitTimer *****************
   442 ;; Defined at:
   443 ;;		line 56 in file "init.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;		None               void
   450 ;; Registers used:
   451 ;;		None
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMRAM   BANK0   BANK1
   457 ;;      Params:         0       0       0
   458 ;;      Locals:         0       0       0
   459 ;;      Temps:          0       0       0
   460 ;;      Totals:         0       0       0
   461 ;;Total ram usage:        0 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; Hardware stack levels required when called:    2
   464 ;; This function calls:
   465 ;;		Nothing
   466 ;; This function is called by:
   467 ;;		_Init
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           	psect	text5
   472  000172                     __ptext5:
   473                           	opt stack 0
   474  000172                     _InitTimer:
   475                           	opt stack 27
   476                           
   477                           ;incstack = 0
   478  000172  0012               	return		;funcret
   479  000174                     __end_of_InitTimer:
   480                           	opt stack 0
   481                           wreg	equ	0xFE8
   482                           
   483 ;; *************** function _InitPort *****************
   484 ;; Defined at:
   485 ;;		line 13 in file "init.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;		None
   490 ;; Return value:  Size  Location     Type
   491 ;;		None               void
   492 ;; Registers used:
   493 ;;		wreg, status,2
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1
   499 ;;      Params:         0       0       0
   500 ;;      Locals:         0       0       0
   501 ;;      Temps:          0       0       0
   502 ;;      Totals:         0       0       0
   503 ;;Total ram usage:        0 bytes
   504 ;; Hardware stack levels used:    1
   505 ;; Hardware stack levels required when called:    2
   506 ;; This function calls:
   507 ;;		Nothing
   508 ;; This function is called by:
   509 ;;		_Init
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           
   513                           	psect	text6
   514  000140                     __ptext6:
   515                           	opt stack 0
   516  000140                     _InitPort:
   517                           	opt stack 27
   518                           
   519                           ;init.c: 14: PORTA = 0b00000000;
   520                           
   521                           ;incstack = 0
   522  000140  0E00               	movlw	0
   523  000142  6E80               	movwf	3968,c	;volatile
   524                           
   525                           ;init.c: 15: PORTB = 0b00000000;
   526  000144  0E00               	movlw	0
   527  000146  6E81               	movwf	3969,c	;volatile
   528                           
   529                           ;init.c: 16: PORTC = 0b00000001;
   530  000148  0E01               	movlw	1
   531  00014A  6E82               	movwf	3970,c	;volatile
   532                           
   533                           ;init.c: 17: PORTE = 0;
   534  00014C  0E00               	movlw	0
   535  00014E  6E84               	movwf	3972,c	;volatile
   536  000150  0012               	return		;funcret
   537  000152                     __end_of_InitPort:
   538                           	opt stack 0
   539                           wreg	equ	0xFE8
   540                           
   541 ;; *************** function _InitMiscellaneous *****************
   542 ;; Defined at:
   543 ;;		line 33 in file "init.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;		None               void
   550 ;; Registers used:
   551 ;;		wreg, status,2
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1
   557 ;;      Params:         0       0       0
   558 ;;      Locals:         0       0       0
   559 ;;      Temps:          0       0       0
   560 ;;      Totals:         0       0       0
   561 ;;Total ram usage:        0 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:    2
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_Init
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text7
   572  00016C                     __ptext7:
   573                           	opt stack 0
   574  00016C                     _InitMiscellaneous:
   575                           	opt stack 27
   576                           
   577                           ;init.c: 34: OSCCON = 0b01010011;
   578                           
   579                           ;incstack = 0
   580  00016C  0E53               	movlw	83
   581  00016E  6ED3               	movwf	4051,c	;volatile
   582  000170  0012               	return		;funcret
   583  000172                     __end_of_InitMiscellaneous:
   584                           	opt stack 0
   585                           wreg	equ	0xFE8
   586                           
   587 ;; *************** function _InitInterrupt *****************
   588 ;; Defined at:
   589 ;;		line 60 in file "init.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;		None               void
   596 ;; Registers used:
   597 ;;		None
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1
   603 ;;      Params:         0       0       0
   604 ;;      Locals:         0       0       0
   605 ;;      Temps:          0       0       0
   606 ;;      Totals:         0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; Hardware stack levels required when called:    2
   610 ;; This function calls:
   611 ;;		Nothing
   612 ;; This function is called by:
   613 ;;		_Init
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text8
   618  00015C                     __ptext8:
   619                           	opt stack 0
   620  00015C                     _InitInterrupt:
   621                           	opt stack 27
   622                           
   623                           ;init.c: 61: INTCONbits.GIE = 1;
   624                           
   625                           ;incstack = 0
   626  00015C  8EF2               	bsf	intcon,7,c	;volatile
   627                           
   628                           ;init.c: 62: INTCONbits.PEIE = 1;
   629  00015E  8CF2               	bsf	intcon,6,c	;volatile
   630                           
   631                           ;init.c: 63: PIE1bits.RCIE = 1;
   632  000160  8A9D               	bsf	3997,5,c	;volatile
   633  000162  0012               	return		;funcret
   634  000164                     __end_of_InitInterrupt:
   635                           	opt stack 0
   636                           intcon	equ	0xFF2
   637                           wreg	equ	0xFE8
   638                           
   639 ;; *************** function _InitAnsel *****************
   640 ;; Defined at:
   641 ;;		line 27 in file "init.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;		None               void
   648 ;; Registers used:
   649 ;;		wreg, status,2
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1
   655 ;;      Params:         0       0       0
   656 ;;      Locals:         0       0       0
   657 ;;      Temps:          0       0       0
   658 ;;      Totals:         0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    2
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		_Init
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text9
   670  00011A                     __ptext9:
   671                           	opt stack 0
   672  00011A                     _InitAnsel:
   673                           	opt stack 27
   674                           
   675                           ;init.c: 28: ANSELA = 0;
   676                           
   677                           ;incstack = 0
   678  00011A  0E00               	movlw	0
   679  00011C  010F               	movlb	15	; () banked
   680  00011E  6F38               	movwf	56,b	;volatile
   681                           
   682                           ;init.c: 29: ANSELB = 0;
   683  000120  0E00               	movlw	0
   684  000122  010F               	movlb	15	; () banked
   685  000124  6F39               	movwf	57,b	;volatile
   686                           
   687                           ;init.c: 30: ANSELC = 0;
   688  000126  0E00               	movlw	0
   689  000128  010F               	movlb	15	; () banked
   690  00012A  6F3A               	movwf	58,b	;volatile
   691                           
   692                           ; BSR set to: 15
   693  00012C  0012               	return		;funcret
   694  00012E                     __end_of_InitAnsel:
   695                           	opt stack 0
   696                           intcon	equ	0xFF2
   697                           wreg	equ	0xFE8
   698                           
   699 ;; *************** function _Isr *****************
   700 ;; Defined at:
   701 ;;		line 3 in file "interrupt.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;		None
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  received        1   15[COMRAM] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;		None               void
   708 ;; Registers used:
   709 ;;		wreg, status,2, status,0, cstack
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK0   BANK1
   715 ;;      Params:         0       0       0
   716 ;;      Locals:         1       0       0
   717 ;;      Temps:         14       0       0
   718 ;;      Totals:        15       0       0
   719 ;;Total ram usage:       15 bytes
   720 ;; Hardware stack levels used:    1
   721 ;; Hardware stack levels required when called:    1
   722 ;; This function calls:
   723 ;;		_Receive
   724 ;; This function is called by:
   725 ;;		Interrupt level 2
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	intcode
   730  000008                     __pintcode:
   731                           	opt stack 0
   732  000008                     _Isr:
   733                           	opt stack 27
   734                           
   735                           ; BSR set to: 15
   736                           ;incstack = 0
   737  000008  8214               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   738  00000A  CFFA F002          	movff	pclath,??_Isr
   739  00000E  CFFB F003          	movff	pclatu,??_Isr+1
   740  000012  CFE9 F004          	movff	fsr0l,??_Isr+2
   741  000016  CFEA F005          	movff	fsr0h,??_Isr+3
   742  00001A  CFE1 F006          	movff	fsr1l,??_Isr+4
   743  00001E  CFE2 F007          	movff	fsr1h,??_Isr+5
   744  000022  CFD9 F008          	movff	fsr2l,??_Isr+6
   745  000026  CFDA F009          	movff	fsr2h,??_Isr+7
   746  00002A  CFF3 F00A          	movff	prodl,??_Isr+8
   747  00002E  CFF4 F00B          	movff	prodh,??_Isr+9
   748  000032  CFF6 F00C          	movff	tblptrl,??_Isr+10
   749  000036  CFF7 F00D          	movff	tblptrh,??_Isr+11
   750  00003A  CFF8 F00E          	movff	tblptru,??_Isr+12
   751  00003E  CFF5 F00F          	movff	tablat,??_Isr+13
   752                           
   753                           ;interrupt.c: 4: if(PIR1bits.RCIF == 1) {
   754  000042  AA9E               	btfss	3998,5,c	;volatile
   755  000044  D00D               	goto	i2l132
   756                           
   757                           ;interrupt.c: 5: PIR1bits.RCIF = 0;
   758  000046  9A9E               	bcf	3998,5,c	;volatile
   759                           
   760                           ;interrupt.c: 6: unsigned char received = 0;
   761  000048  0E00               	movlw	0
   762  00004A  6E10               	movwf	Isr@received,c
   763                           
   764                           ;interrupt.c: 7: received = Receive();
   765  00004C  ECB2  F000         	call	_Receive	;wreg free
   766  000050  6E10               	movwf	Isr@received,c
   767                           
   768                           ;interrupt.c: 8: if(received == 1 || received == 'L') {
   769  000052  0410               	decf	Isr@received,w,c
   770  000054  B4D8               	btfsc	status,2,c
   771  000056  D003               	goto	i2l131
   772  000058  0E4C               	movlw	76
   773  00005A  1810               	xorwf	Isr@received,w,c
   774  00005C  B4D8               	btfsc	status,2,c
   775  00005E                     i2l131:
   776                           
   777                           ;interrupt.c: 9: PORTAbits.RA0 = 1;
   778  00005E  8080               	bsf	3968,0,c	;volatile
   779  000060                     i2l132:
   780  000060  C00F  FFF5         	movff	??_Isr+13,tablat
   781  000064  C00E  FFF8         	movff	??_Isr+12,tblptru
   782  000068  C00D  FFF7         	movff	??_Isr+11,tblptrh
   783  00006C  C00C  FFF6         	movff	??_Isr+10,tblptrl
   784  000070  C00B  FFF4         	movff	??_Isr+9,prodh
   785  000074  C00A  FFF3         	movff	??_Isr+8,prodl
   786  000078  C009  FFDA         	movff	??_Isr+7,fsr2h
   787  00007C  C008  FFD9         	movff	??_Isr+6,fsr2l
   788  000080  C007  FFE2         	movff	??_Isr+5,fsr1h
   789  000084  C006  FFE1         	movff	??_Isr+4,fsr1l
   790  000088  C005  FFEA         	movff	??_Isr+3,fsr0h
   791  00008C  C004  FFE9         	movff	??_Isr+2,fsr0l
   792  000090  C003  FFFB         	movff	??_Isr+1,pclatu
   793  000094  C002  FFFA         	movff	??_Isr,pclath
   794  000098  9214               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   795  00009A  0011               	retfie		f
   796  00009C                     __end_of_Isr:
   797                           	opt stack 0
   798                           pclatu	equ	0xFFB
   799                           pclath	equ	0xFFA
   800                           tblptru	equ	0xFF8
   801                           tblptrh	equ	0xFF7
   802                           tblptrl	equ	0xFF6
   803                           tablat	equ	0xFF5
   804                           prodh	equ	0xFF4
   805                           prodl	equ	0xFF3
   806                           intcon	equ	0xFF2
   807                           fsr0h	equ	0xFEA
   808                           fsr0l	equ	0xFE9
   809                           wreg	equ	0xFE8
   810                           fsr1h	equ	0xFE2
   811                           fsr1l	equ	0xFE1
   812                           fsr2h	equ	0xFDA
   813                           fsr2l	equ	0xFD9
   814                           status	equ	0xFD8
   815                           
   816 ;; *************** function _Receive *****************
   817 ;; Defined at:
   818 ;;		line 12 in file "communication.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  received        1    0[COMRAM] unsigned char 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      unsigned char 
   825 ;; Registers used:
   826 ;;		wreg, status,2
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1
   832 ;;      Params:         0       0       0
   833 ;;      Locals:         1       0       0
   834 ;;      Temps:          0       0       0
   835 ;;      Totals:         1       0       0
   836 ;;Total ram usage:        1 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_Isr
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text11
   846  000164                     __ptext11:
   847                           	opt stack 0
   848  000164                     _Receive:
   849                           	opt stack 27
   850                           
   851                           ;communication.c: 13: unsigned char received = 0;
   852                           
   853                           ;incstack = 0
   854  000164  0E00               	movlw	0
   855  000166  6E01               	movwf	Receive@received,c
   856                           
   857                           ;communication.c: 14: return (received);
   858  000168  5001               	movf	Receive@received,w,c
   859  00016A  0012               	return	
   860  00016C                     __end_of_Receive:
   861                           	opt stack 0
   862  0000                     pclatu	equ	0xFFB
   863                           pclath	equ	0xFFA
   864                           tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           tblptrl	equ	0xFF6
   867                           tablat	equ	0xFF5
   868                           prodh	equ	0xFF4
   869                           prodl	equ	0xFF3
   870                           intcon	equ	0xFF2
   871                           fsr0h	equ	0xFEA
   872                           fsr0l	equ	0xFE9
   873                           wreg	equ	0xFE8
   874                           fsr1h	equ	0xFE2
   875                           fsr1l	equ	0xFE1
   876                           fsr2h	equ	0xFDA
   877                           fsr2l	equ	0xFD9
   878                           status	equ	0xFD8
   879                           pclatu	equ	0xFFB
   880                           pclath	equ	0xFFA
   881                           tblptru	equ	0xFF8
   882                           tblptrh	equ	0xFF7
   883                           tblptrl	equ	0xFF6
   884                           tablat	equ	0xFF5
   885                           prodh	equ	0xFF4
   886                           prodl	equ	0xFF3
   887                           intcon	equ	0xFF2
   888                           fsr0h	equ	0xFEA
   889                           fsr0l	equ	0xFE9
   890                           wreg	equ	0xFE8
   891                           fsr1h	equ	0xFE2
   892                           fsr1l	equ	0xFE1
   893                           fsr2h	equ	0xFDA
   894                           fsr2l	equ	0xFD9
   895                           status	equ	0xFD8
   896                           
   897                           	psect	rparam
   898  0000                     pclatu	equ	0xFFB
   899                           pclath	equ	0xFFA
   900                           tblptru	equ	0xFF8
   901                           tblptrh	equ	0xFF7
   902                           tblptrl	equ	0xFF6
   903                           tablat	equ	0xFF5
   904                           prodh	equ	0xFF4
   905                           prodl	equ	0xFF3
   906                           intcon	equ	0xFF2
   907                           fsr0h	equ	0xFEA
   908                           fsr0l	equ	0xFE9
   909                           wreg	equ	0xFE8
   910                           fsr1h	equ	0xFE2
   911                           fsr1l	equ	0xFE1
   912                           fsr2h	equ	0xFDA
   913                           fsr2l	equ	0xFD9
   914                           status	equ	0xFD8
   915                           
   916                           	psect	temp
   917  000014                     btemp:
   918                           	opt stack 0
   919  000014                     	ds	1
   920  0000                     int$flags	set	btemp
   921                           pclatu	equ	0xFFB
   922                           pclath	equ	0xFFA
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           prodh	equ	0xFF4
   928                           prodl	equ	0xFF3
   929                           intcon	equ	0xFF2
   930                           fsr0h	equ	0xFEA
   931                           fsr0l	equ	0xFE9
   932                           wreg	equ	0xFE8
   933                           fsr1h	equ	0xFE2
   934                           fsr1l	equ	0xFE1
   935                           fsr2h	equ	0xFDA
   936                           fsr2l	equ	0xFD9
   937                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      19
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Transmit

Critical Paths under _Isr in COMRAM

    _Isr->_Receive

Critical Paths under _main in BANK0

    None.

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      87
                                             18 COMRAM     1     1      0
                               _Init
                           _Transmit
 ---------------------------------------------------------------------------------
 (1) _Transmit                                             2     1      1      87
                                             16 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 15    15      0      45
                                              1 COMRAM    15    15      0
                            _Receive
 ---------------------------------------------------------------------------------
 (4) _Receive                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Transmit

 _Isr (ROOT)
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     13      13       1       20.2%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BANK1              100      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BIGRAM             1FF      0       0       8        0.0%
DATA                 0      0       0       9        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jul 14 20:02:53 2016

              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                         l110 0106  
                       l113 0110                         l812 00C8                __CFG_CPB$OFF 000000  
                       u117 00D2                __CFG_CPD$OFF 000000                         _Isr 0008  
                       wreg 000FE8                  _TXSTA1bits 000FAC                __CFG_LVP$OFF 000000  
                      ?_Isr 0001                        _Init 00E6                        _main 00C4  
                      fsr0h 000FEA                        fsr1h 000FE2                        fsr0l 000FE9  
                      fsr2h 000FDA                        fsr1l 000FE1                        fsr2l 000FD9  
                      btemp 0014               __CFG_BORV$190 000000                        pclat 000FFA  
                      prodh 000FF4                        prodl 000FF3                        start 009C  
             __CFG_IESO$OFF 000000                ___param_bank 000010               _InitInterrupt 015C  
                     ??_Isr 0002             __end_of_Receive 016C                _BAUDCON1bits 000FB8  
                     ?_Init 0001                       ?_main 0001           _InitMiscellaneous 016C  
                     i2l131 005E                       i2l132 0060                       _PORTA 000F80  
                     _PORTB 000F81                       _PORTC 000F82                       _PORTE 000F84  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISC 000F94  
                     _TRISE 000F96               __CFG_WRT0$OFF 000000    __end_of_InitTransmission 00C4  
             __CFG_WRT1$OFF 000000          ?_InitMiscellaneous 0001              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000               __CFG_WRTB$OFF 000000  
             __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000  
        __CFG_MCLRE$EXTMCLR 000000                 Isr@received 0010               Transmit@slave 0012  
            __CFG_BOREN$OFF 000000         ??_InitMiscellaneous 0011                       tablat 000FF5  
                     status 000FD8              ?_InitInterrupt 0001             __initialization 0152  
              __end_of_Init 0104                __end_of_main 00E6            __end_of_InitPort 0152  
          __end_of_InitTris 0140   __end_of_InitMiscellaneous 0172                      ??_Init 0011  
           Receive@received 0001                      ??_main 0013               __activetblptr 000000  
          __end_of_Transmit 011A                      _ANSELA 000F38                      _ANSELB 000F39  
                    _ANSELC 000F3A              __CFG_WDTEN$OFF 000000                      _OSCCON 000FD3  
        __size_of_InitAnsel 0014                      _SPBRG1 000FAF          __size_of_InitTimer 0002  
                    _TXREG1 000FAD                   ??_Receive 0001              __CFG_XINST$OFF 000000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
           __CFG_HFOFST$OFF 000000                  __accesstop 0060     __end_of__initialization 0152  
           __CFG_PBADEN$OFF 000000             ??_InitInterrupt 0011               ___rparam_used 000001  
            __pcstackCOMRAM 0001  __size_of_InitMiscellaneous 0006           __end_of_InitAnsel 012E  
         __end_of_InitTimer 0174             __CFG_PLLCFG$OFF 000000                   ?_InitPort 0001  
                 ?_InitTris 0001          __CFG_CCP2MX$PORTC1 000000          __CFG_CCP3MX$PORTB5 000000  
                 ?_Transmit 0011           ?_InitTransmission 0001           __CFG_PRICLKEN$OFF 000000  
        ??_InitTransmission 0011                  ??_InitPort 0011                  ??_InitTris 0011  
           __CFG_PWRTEN$OFF 000000                     _Receive 0164                     __Hparam 0000  
                   __Lparam 0000                  ??_Transmit 0012             __CFG_STVREN$OFF 000000  
                   __pcinit 0152                     __ramtop 0200                     __ptext0 00C4  
                   __ptext1 0104                     __ptext2 00E6                     __ptext3 012E  
                   __ptext4 00A0                     __ptext5 0172                     __ptext6 0140  
                   __ptext7 016C                     __ptext8 015C                     __ptext9 011A  
              __size_of_Isr 0094        end_of_initialization 0152                   _PORTAbits 000F80  
                 _PORTBbits 000F81                   _TRISCbits 000F94         start_initialization 0152  
                 _InitAnsel 011A                 __end_of_Isr 009C                   _InitTimer 0172  
         __size_of_InitPort 0012           __size_of_InitTris 0012       __end_of_InitInterrupt 0164  
        Transmit@trans_data 0011           __size_of_Transmit 0016                  ?_InitAnsel 0001  
                ?_InitTimer 0001                    ?_Receive 0001   __size_of_InitTransmission 0024  
                 __pintcode 0008                    _PIE1bits 000F9D                    _PIR1bits 000F9E  
          __CFG_WDTPS$32768 000000                    _SSP1CON1 000FC6                    _SSP1STAT 000FC7  
               ??_InitAnsel 0011                 ??_InitTimer 0011                    _InitPort 0140  
                  _InitTris 012E                    __Hrparam 0000            __size_of_Receive 0008  
                  __Lrparam 0000           __CFG_P2BMX$PORTB5 000000                    _Transmit 0104  
                  __ptext11 0164               __size_of_Init 001E               __size_of_main 0022  
          _InitTransmission 00A0                    int$flags 0014                  _INTCONbits 000FF2  
                  intlevel2 0000                  _RCSTA1bits 000FAB           __CFG_T3CMX$PORTC0 000000  
    __size_of_InitInterrupt 0008           __CFG_FOSC$INTIO67 000000  
