

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Feb 10 21:34:58 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           	psect	idataBANK1
    59  00109C                     __pidataBANK1:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _pin
    63  00109C  00                 	db	0
    64  00109D  00                 	db	0
    65  00109E  00                 	db	0
    66  00109F  1F                 	db	31
    67  0010A0  00                 	db	0
    68  0010A1  00                 	db	0
    69  0010A2  00                 	db	0
    70  0010A3  01                 	db	1
    71  0010A4  01                 	db	1
    72  0010A5  1E                 	db	30
    73  0010A6  00                 	db	0
    74  0010A7  00                 	db	0
    75  0010A8  00                 	db	0
    76  0010A9  02                 	db	2
    77  0010AA  02                 	db	2
    78  0010AB  1D                 	db	29
    79  0010AC  00                 	db	0
    80  0010AD  00                 	db	0
    81  0010AE  00                 	db	0
    82  0010AF  03                 	db	3
    83  0010B0  03                 	db	3
    84  0010B1  1C                 	db	28
    85  0010B2  00                 	db	0
    86  0010B3  00                 	db	0
    87  0010B4  00                 	db	0
    88  0010B5  04                 	db	4
    89  0010B6  04                 	db	4
    90  0010B7  1B                 	db	27
    91  0010B8  00                 	db	0
    92  0010B9  00                 	db	0
    93  0010BA  00                 	db	0
    94  0010BB  05                 	db	5
    95  0010BC  05                 	db	5
    96  0010BD  1A                 	db	26
    97  0010BE  00                 	db	0
    98  0010BF  00                 	db	0
    99  0010C0  00                 	db	0
   100  0010C1  06                 	db	6
   101  0010C2  06                 	db	6
   102  0010C3  19                 	db	25
   103  0010C4  00                 	db	0
   104  0010C5  00                 	db	0
   105  0010C6  00                 	db	0
   106  0010C7  07                 	db	7
   107  0010C8  07                 	db	7
   108  0010C9  18                 	db	24
   109  0010CA  00                 	db	0
   110  0010CB  00                 	db	0
   111  0010CC  00                 	db	0
   112  0010CD  08                 	db	8
   113  0010CE  08                 	db	8
   114  0010CF  27                 	db	39
   115  0010D0  00                 	db	0
   116  0010D1  00                 	db	0
   117  0010D2  00                 	db	0
   118  0010D3  09                 	db	9
   119  0010D4  09                 	db	9
   120  0010D5  26                 	db	38
   121  0010D6  00                 	db	0
   122  0010D7  00                 	db	0
   123  0010D8  01                 	db	1
   124  0010D9  00                 	db	0
   125  0010DA  0A                 	db	10
   126  0010DB  25                 	db	37
   127  0010DC  00                 	db	0
   128  0010DD  00                 	db	0
   129  0010DE  01                 	db	1
   130  0010DF  01                 	db	1
   131  0010E0  0B                 	db	11
   132  0010E1  24                 	db	36
   133  0010E2  00                 	db	0
   134  0010E3  00                 	db	0
   135  0010E4  01                 	db	1
   136  0010E5  02                 	db	2
   137  0010E6  0C                 	db	12
   138  0010E7  23                 	db	35
   139  0010E8  00                 	db	0
   140  0010E9  00                 	db	0
   141  0010EA  01                 	db	1
   142  0010EB  03                 	db	3
   143  0010EC  0D                 	db	13
   144  0010ED  22                 	db	34
   145  0010EE  00                 	db	0
   146  0010EF  00                 	db	0
   147  0010F0  01                 	db	1
   148  0010F1  04                 	db	4
   149  0010F2  0E                 	db	14
   150  0010F3  21                 	db	33
   151  0010F4  00                 	db	0
   152  0010F5  00                 	db	0
   153  0010F6  01                 	db	1
   154  0010F7  05                 	db	5
   155  0010F8  0F                 	db	15
   156  0010F9  20                 	db	32
   157  0010FA  00                 	db	0
   158  0010FB  00                 	db	0
   159  0010FC  01                 	db	1
   160  0010FD  06                 	db	6
   161  0010FE  10                 	db	16
   162  0010FF  2F                 	db	47
   163  001100  00                 	db	0
   164  001101  00                 	db	0
   165  001102  01                 	db	1
   166  001103  07                 	db	7
   167  001104  11                 	db	17
   168  001105  2E                 	db	46
   169  001106  00                 	db	0
   170  001107  00                 	db	0
   171  001108  01                 	db	1
   172  001109  08                 	db	8
   173  00110A  12                 	db	18
   174  00110B  2D                 	db	45
   175  00110C  00                 	db	0
   176  00110D  00                 	db	0
   177  00110E  01                 	db	1
   178  00110F  09                 	db	9
   179  001110  13                 	db	19
   180  001111  2C                 	db	44
   181  001112  00                 	db	0
   182  001113  00                 	db	0
   183  001114  02                 	db	2
   184  001115  00                 	db	0
   185  001116  14                 	db	20
   186  001117  2B                 	db	43
   187  001118  00                 	db	0
   188  001119  00                 	db	0
   189  00111A  02                 	db	2
   190  00111B  01                 	db	1
   191  00111C  15                 	db	21
   192  00111D  2A                 	db	42
   193  00111E  00                 	db	0
   194  00111F  00                 	db	0
   195  001120  02                 	db	2
   196  001121  02                 	db	2
   197  001122  16                 	db	22
   198  001123  29                 	db	41
   199  001124  00                 	db	0
   200  001125  00                 	db	0
   201  001126  02                 	db	2
   202  001127  03                 	db	3
   203  001128  17                 	db	23
   204  001129  28                 	db	40
   205  00112A  00                 	db	0
   206  00112B  00                 	db	0
   207  00112C  02                 	db	2
   208  00112D  04                 	db	4
   209  00112E  18                 	db	24
   210  00112F  35                 	db	53
   211  001130  00                 	db	0
   212  001131  00                 	db	0
   213  001132  02                 	db	2
   214  001133  05                 	db	5
   215  001134  19                 	db	25
   216  001135  34                 	db	52
   217  001136  00                 	db	0
   218  001137  00                 	db	0
   219  001138  02                 	db	2
   220  001139  06                 	db	6
   221  00113A  1A                 	db	26
   222  00113B  33                 	db	51
   223  00113C  00                 	db	0
   224  00113D  00                 	db	0
   225  00113E  02                 	db	2
   226  00113F  07                 	db	7
   227  001140  1B                 	db	27
   228  001141  32                 	db	50
   229  001142  00                 	db	0
   230  001143  00                 	db	0
   231  001144  02                 	db	2
   232  001145  08                 	db	8
   233  001146  1C                 	db	28
   234  001147  31                 	db	49
   235  001148  00                 	db	0
   236  001149  00                 	db	0
   237  00114A  02                 	db	2
   238  00114B  09                 	db	9
   239  00114C  1D                 	db	29
   240  00114D  30                 	db	48
   241  00114E  00                 	db	0
   242  00114F  00                 	db	0
   243                           
   244                           	psect	nvBANK0
   245  000094                     __pnvBANK0:
   246                           	opt stack 0
   247  000094                     _display_counter:
   248                           	opt stack 0
   249  000094                     	ds	1
   250  0000                     _ANSELA	set	3896
   251  0000                     _ANSELB	set	3897
   252  0000                     _ANSELC	set	3898
   253  0000                     _CCPTMRS0bits	set	3913
   254  0000                     _BAUDCON1bits	set	4024
   255  0000                     _CCP1CONbits	set	4029
   256  0000                     _CCPR1H	set	4031
   257  0000                     _CCPR1L	set	4030
   258  0000                     _EEADR	set	4009
   259  0000                     _EECON1bits	set	4006
   260  0000                     _EECON2	set	4007
   261  0000                     _EEDATA	set	4008
   262  0000                     _INTCONbits	set	4082
   263  0000                     _OSCCON	set	4051
   264  0000                     _PIE1bits	set	3997
   265  0000                     _PIR1bits	set	3998
   266  0000                     _PIR2bits	set	4001
   267  0000                     _PORTA	set	3968
   268  0000                     _PORTAbits	set	3968
   269  0000                     _PORTB	set	3969
   270  0000                     _PORTBbits	set	3969
   271  0000                     _PORTC	set	3970
   272  0000                     _PORTCbits	set	3970
   273  0000                     _PORTE	set	3972
   274  0000                     _RCREG1	set	4014
   275  0000                     _RCSTA1bits	set	4011
   276  0000                     _RCSTAbits	set	4011
   277  0000                     _SPBRG1	set	4015
   278  0000                     _SSP1BUF	set	4041
   279  0000                     _SSP1CON1	set	4038
   280  0000                     _SSP1STAT	set	4039
   281  0000                     _T1CONbits	set	4045
   282  0000                     _T3CONbits	set	4017
   283  0000                     _TMR1H	set	4047
   284  0000                     _TMR1L	set	4046
   285  0000                     _TMR3H	set	4019
   286  0000                     _TMR3L	set	4018
   287  0000                     _TRISA	set	3986
   288  0000                     _TRISB	set	3987
   289  0000                     _TRISC	set	3988
   290  0000                     _TRISCbits	set	3988
   291  0000                     _TRISE	set	3990
   292  0000                     _TXREG1	set	4013
   293  0000                     _TXSTA1bits	set	4012
   294  0000                     _SSP1IF	set	31987
   295                           
   296                           	psect	smallconst
   297  000224                     __psmallconst:
   298                           	opt stack 0
   299  000224  00                 	db	0
   300  000225                     STR_9:
   301  000225  41                 	db	65	;'A'
   302  000226  42                 	db	66	;'B'
   303  000227  43                 	db	67	;'C'
   304  000228  44                 	db	68	;'D'
   305  000229  45                 	db	69	;'E'
   306  00022A  46                 	db	70	;'F'
   307  00022B  47                 	db	71	;'G'
   308  00022C  00                 	db	0
   309  00022D                     STR_1:
   310  00022D  41                 	db	65	;'A'
   311  00022E  42                 	db	66	;'B'
   312  00022F  43                 	db	67	;'C'
   313  000230  44                 	db	68	;'D'
   314  000231  45                 	db	69	;'E'
   315  000232  46                 	db	70	;'F'
   316  000233  00                 	db	0
   317  000234                     STR_10:
   318  000234  41                 	db	65	;'A'
   319  000235  42                 	db	66	;'B'
   320  000236  43                 	db	67	;'C'
   321  000237  44                 	db	68	;'D'
   322  000238  46                 	db	70	;'F'
   323  000239  47                 	db	71	;'G'
   324  00023A  00                 	db	0
   325  00023B                     STR_11:
   326  00023B  41                 	db	65	;'A'
   327  00023C  42                 	db	66	;'B'
   328  00023D  43                 	db	67	;'C'
   329  00023E  45                 	db	69	;'E'
   330  00023F  46                 	db	70	;'F'
   331  000240  47                 	db	71	;'G'
   332  000241  00                 	db	0
   333  000242                     STR_7:
   334  000242  41                 	db	65	;'A'
   335  000243  43                 	db	67	;'C'
   336  000244  44                 	db	68	;'D'
   337  000245  45                 	db	69	;'E'
   338  000246  46                 	db	70	;'F'
   339  000247  47                 	db	71	;'G'
   340  000248  00                 	db	0
   341  000249                     STR_4:
   342  000249  41                 	db	65	;'A'
   343  00024A  42                 	db	66	;'B'
   344  00024B  43                 	db	67	;'C'
   345  00024C  44                 	db	68	;'D'
   346  00024D  47                 	db	71	;'G'
   347  00024E  00                 	db	0
   348  00024F                     STR_3:
   349  00024F  41                 	db	65	;'A'
   350  000250  42                 	db	66	;'B'
   351  000251  44                 	db	68	;'D'
   352  000252  45                 	db	69	;'E'
   353  000253  47                 	db	71	;'G'
   354  000254  00                 	db	0
   355  000255                     STR_6:
   356  000255  41                 	db	65	;'A'
   357  000256  43                 	db	67	;'C'
   358  000257  44                 	db	68	;'D'
   359  000258  46                 	db	70	;'F'
   360  000259  47                 	db	71	;'G'
   361  00025A  00                 	db	0
   362  00025B                     STR_16:
   363  00025B  41                 	db	65	;'A'
   364  00025C  42                 	db	66	;'B'
   365  00025D  45                 	db	69	;'E'
   366  00025E  46                 	db	70	;'F'
   367  00025F  47                 	db	71	;'G'
   368  000260  00                 	db	0
   369  000261                     STR_13:
   370  000261  41                 	db	65	;'A'
   371  000262  44                 	db	68	;'D'
   372  000263  45                 	db	69	;'E'
   373  000264  46                 	db	70	;'F'
   374  000265  47                 	db	71	;'G'
   375  000266  00                 	db	0
   376  000267                     STR_5:
   377  000267  42                 	db	66	;'B'
   378  000268  43                 	db	67	;'C'
   379  000269  46                 	db	70	;'F'
   380  00026A  47                 	db	71	;'G'
   381  00026B  00                 	db	0
   382  00026C                     STR_8:
   383  00026C  41                 	db	65	;'A'
   384  00026D  42                 	db	66	;'B'
   385  00026E  43                 	db	67	;'C'
   386  00026F  00                 	db	0
   387  0000                     
   388                           ; #config settings
   389  000270  00                 	db	0	; dummy byte at the end
   390  0000                     
   391                           	psect	cinit
   392  001622                     __pcinit:
   393                           	opt stack 0
   394  001622                     start_initialization:
   395                           	opt stack 0
   396  001622                     __initialization:
   397                           	opt stack 0
   398                           
   399                           ; Clear objects allocated to BANK0 (20 bytes)
   400  001622  EE00  F080         	lfsr	0,__pbssBANK0
   401  001626  0E14               	movlw	20
   402  001628                     clear_0:
   403  001628  6AEE               	clrf	postinc0,c
   404  00162A  06E8               	decf	wreg,f,c
   405  00162C  E1FD               	bnz	clear_0
   406                           
   407                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   408  00162E  6A39               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   409                           
   410                           ; Clear objects allocated to COMRAM (9 bytes)
   411  001630  EE00  F030         	lfsr	0,__pbssCOMRAM
   412  001634  0E09               	movlw	9
   413  001636                     clear_1:
   414  001636  6AEE               	clrf	postinc0,c
   415  001638  06E8               	decf	wreg,f,c
   416  00163A  E1FD               	bnz	clear_1
   417                           
   418                           ; Initialize objects allocated to BANK1 (180 bytes)
   419                           ; load TBLPTR registers with __pidataBANK1
   420  00163C  0E9C               	movlw	low __pidataBANK1
   421  00163E  6EF6               	movwf	tblptrl,c
   422  001640  0E10               	movlw	high __pidataBANK1
   423  001642  6EF7               	movwf	tblptrh,c
   424  001644  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   425  001646  6EF8               	movwf	tblptru,c
   426  001648  EE01  F000         	lfsr	0,__pdataBANK1
   427  00164C  EE10 F0B4          	lfsr	1,180
   428  001650                     copy_data0:
   429  001650  0009               	tblrd		*+
   430  001652  CFF5 FFEE          	movff	tablat,postinc0
   431  001656  50E5               	movf	postdec1,w,c
   432  001658  50E1               	movf	fsr1l,w,c
   433  00165A  E1FA               	bnz	copy_data0
   434  00165C                     end_of_initialization:
   435                           	opt stack 0
   436  00165C                     __end_of__initialization:
   437                           	opt stack 0
   438  00165C  903A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   439  00165E  923A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   440  001660  0E00               	movlw	low (__Lmediumconst shr (0+16))
   441  001662  6EF8               	movwf	tblptru,c
   442  001664  0100               	movlb	0
   443  001666  EF1C  F00C         	goto	_main	;jump to C main() function
   444                           tblptru	equ	0xFF8
   445                           tblptrh	equ	0xFF7
   446                           tblptrl	equ	0xFF6
   447                           tablat	equ	0xFF5
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           postdec1	equ	0xFE5
   451                           fsr1l	equ	0xFE1
   452                           
   453                           	psect	bitbssCOMRAM
   454  0001C8                     __pbitbssCOMRAM:
   455                           	opt stack 0
   456  0001C8                     _ignite_ready:
   457                           	opt stack 0
   458  0001C8                     	ds	1
   459  0001C9                     _master_addressed:
   460                           	opt stack 0
   461  0001C9                     	ds	1
   462  0001CA                     _overrun:
   463                           	opt stack 0
   464  0001CA                     	ds	1
   465  0001CB                     _testflag:
   466                           	opt stack 0
   467  0001CB                     	ds	1
   468                           tblptru	equ	0xFF8
   469                           tblptrh	equ	0xFF7
   470                           tblptrl	equ	0xFF6
   471                           tablat	equ	0xFF5
   472                           postinc0	equ	0xFEE
   473                           wreg	equ	0xFE8
   474                           postdec1	equ	0xFE5
   475                           fsr1l	equ	0xFE1
   476                           
   477                           	psect	bssCOMRAM
   478  000030                     __pbssCOMRAM:
   479                           	opt stack 0
   480  000030                     _received:
   481                           	opt stack 0
   482  000030                     	ds	6
   483  000036                     _current_time:
   484                           	opt stack 0
   485  000036                     	ds	2
   486  000038                     _receive_counter:
   487                           	opt stack 0
   488  000038                     	ds	1
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           
   498                           	psect	bssBANK0
   499  000080                     __pbssBANK0:
   500                           	opt stack 0
   501  000080                     _check_counter:
   502                           	opt stack 0
   503  000080                     	ds	1
   504  000081                     _pin_selected:
   505                           	opt stack 0
   506  000081                     	ds	1
   507  000082                     _slave_selected:
   508                           	opt stack 0
   509  000082                     	ds	1
   510  000083                     _pixels:
   511                           	opt stack 0
   512  000083                     	ds	8
   513  00008B                     _signs:
   514                           	opt stack 0
   515  00008B                     	ds	3
   516  00008E                     _string_delete:
   517                           	opt stack 0
   518  00008E                     	ds	3
   519  000091                     _string_load:
   520                           	opt stack 0
   521  000091                     	ds	3
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           postdec1	equ	0xFE5
   529                           fsr1l	equ	0xFE1
   530                           
   531                           	psect	dataBANK1
   532  000100                     __pdataBANK1:
   533                           	opt stack 0
   534  000100                     _pin:
   535                           	opt stack 0
   536  000100                     	ds	180
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           postdec1	equ	0xFE5
   544                           fsr1l	equ	0xFE1
   545                           
   546                           	psect	cstackBANK0
   547  000060                     __pcstackBANK0:
   548                           	opt stack 0
   549  000060                     ??_Delay_Routine:
   550  000060                     ?_Read_Data:
   551                           	opt stack 0
   552  000060                     ?___lwdiv:
   553                           	opt stack 0
   554  000060                     ?___lwmod:
   555                           	opt stack 0
   556  000060                     Transmit@operation:
   557                           	opt stack 0
   558  000060                     Save_Data@store:
   559                           	opt stack 0
   560  000060                     Write_Display_Byte@write_data:
   561                           	opt stack 0
   562  000060                     ___lwdiv@dividend:
   563                           	opt stack 0
   564  000060                     ___lwmod@dividend:
   565                           	opt stack 0
   566  000060                     Set_Bits@bits:
   567                           	opt stack 0
   568                           
   569                           ; 3 bytes @ 0x0
   570  000060                     	ds	1
   571  000061                     Delay_Routine@delay_multiplyer:
   572                           	opt stack 0
   573  000061                     Transmit@port:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x1
   577  000061                     	ds	1
   578  000062                     ??_Write_Display_Byte:
   579  000062                     Delay_Routine@delay_counter:
   580                           	opt stack 0
   581  000062                     Save_Data@store_address:
   582                           	opt stack 0
   583  000062                     Transmit@receiver:
   584                           	opt stack 0
   585  000062                     Read_Data@data_read:
   586                           	opt stack 0
   587  000062                     ___lwdiv@divisor:
   588                           	opt stack 0
   589  000062                     ___lwmod@divisor:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x2
   593  000062                     	ds	1
   594  000063                     ??_Set_Bits:
   595                           
   596                           ; 0 bytes @ 0x3
   597  000063                     	ds	1
   598  000064                     Read_Data@read_address:
   599                           	opt stack 0
   600  000064                     ___lwdiv@counter:
   601                           	opt stack 0
   602  000064                     ___lwmod@counter:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x4
   606  000064                     	ds	1
   607  000065                     ___lwdiv@quotient:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x5
   611  000065                     	ds	1
   612  000066                     Write_Display_Byte@counter:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0x6
   616  000066                     	ds	1
   617  000067                     Set_Bits@bitcount:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x7
   621  000067                     	ds	1
   622  000068                     Set_Bits@Bitoutput:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x8
   626  000068                     	ds	1
   627  000069                     Evaluate_Display@evaluate:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x9
   631  000069                     	ds	2
   632  00006B                     ??_Evaluate_Display:
   633                           
   634                           ; 0 bytes @ 0xB
   635  00006B                     	ds	4
   636  00006F                     Evaluate_Display@size:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0xF
   640  00006F                     	ds	1
   641  000070                     Evaluate_Signs@evaluation_value:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x10
   645  000070                     	ds	2
   646  000072                     ??_Evaluate_Signs:
   647                           
   648                           ; 0 bytes @ 0x12
   649  000072                     	ds	4
   650  000076                     Evaluate_Signs@valuecounter:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x16
   654  000076                     	ds	1
   655  000077                     Set_Display@information:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x17
   659  000077                     	ds	1
   660  000078                     Set_Display@value:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x18
   664  000078                     	ds	2
   665  00007A                     Set_Display@type:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x1A
   669  00007A                     	ds	1
   670  00007B                     ??_Load_Data:
   671                           
   672                           ; 0 bytes @ 0x1B
   673  00007B                     	ds	1
   674  00007C                     Load_Data@counter:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x1C
   678  00007C                     	ds	1
   679  00007D                     Del_Data@counter:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x1D
   683  00007D                     	ds	1
   684  00007E                     ??_Check_Buttons:
   685                           
   686                           ; 0 bytes @ 0x1E
   687  00007E                     	ds	2
   688  000080                     tblptru	equ	0xFF8
   689                           tblptrh	equ	0xFF7
   690                           tblptrl	equ	0xFF6
   691                           tablat	equ	0xFF5
   692                           postinc0	equ	0xFEE
   693                           wreg	equ	0xFE8
   694                           postdec1	equ	0xFE5
   695                           fsr1l	equ	0xFE1
   696                           
   697                           ; 0 bytes @ 0x20
   698                           
   699                           	psect	cstackCOMRAM
   700  000001                     __pcstackCOMRAM:
   701                           	opt stack 0
   702  000001                     ?___awdiv:
   703                           	opt stack 0
   704  000001                     ?i2___lwdiv:
   705                           	opt stack 0
   706  000001                     ?i2___lwmod:
   707                           	opt stack 0
   708  000001                     Receive_Dump@dump:
   709                           	opt stack 0
   710  000001                     i2Transmit@operation:
   711                           	opt stack 0
   712  000001                     ___awdiv@dividend:
   713                           	opt stack 0
   714  000001                     i2Write_Display_Byte@write_data:
   715                           	opt stack 0
   716  000001                     i2___lwdiv@dividend:
   717                           	opt stack 0
   718  000001                     i2___lwmod@dividend:
   719                           	opt stack 0
   720  000001                     i2Set_Bits@bits:
   721                           	opt stack 0
   722                           
   723                           ; 3 bytes @ 0x0
   724  000001                     	ds	1
   725  000002                     i2Transmit@port:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x1
   729  000002                     	ds	1
   730  000003                     ??i2_Write_Display_Byte:
   731  000003                     i2Transmit@receiver:
   732                           	opt stack 0
   733  000003                     ___awdiv@divisor:
   734                           	opt stack 0
   735  000003                     i2___lwdiv@divisor:
   736                           	opt stack 0
   737  000003                     i2___lwmod@divisor:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x2
   741  000003                     	ds	1
   742  000004                     ??i2_Set_Bits:
   743                           
   744                           ; 0 bytes @ 0x3
   745  000004                     	ds	1
   746  000005                     ___awdiv@counter:
   747                           	opt stack 0
   748  000005                     i2___lwmod@counter:
   749                           	opt stack 0
   750  000005                     i2___lwdiv@quotient:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x4
   754  000005                     	ds	1
   755  000006                     Ignite_Detonators@counter:
   756                           	opt stack 0
   757  000006                     ___awdiv@sign:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x5
   761  000006                     	ds	1
   762  000007                     i2Write_Display_Byte@counter:
   763                           	opt stack 0
   764  000007                     i2___lwdiv@counter:
   765                           	opt stack 0
   766  000007                     ___awdiv@quotient:
   767                           	opt stack 0
   768                           
   769                           ; 2 bytes @ 0x6
   770  000007                     	ds	1
   771  000008                     i2Set_Bits@bitcount:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x7
   775  000008                     	ds	1
   776  000009                     i2Set_Bits@Bitoutput:
   777                           	opt stack 0
   778                           
   779                           ; 1 bytes @ 0x8
   780  000009                     	ds	1
   781  00000A                     i2Evaluate_Display@evaluate:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x9
   785  00000A                     	ds	2
   786  00000C                     ??i2_Evaluate_Display:
   787                           
   788                           ; 0 bytes @ 0xB
   789  00000C                     	ds	4
   790  000010                     i2Evaluate_Display@size:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0xF
   794  000010                     	ds	1
   795  000011                     i2Evaluate_Signs@evaluation_value:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x10
   799  000011                     	ds	2
   800  000013                     ??i2_Evaluate_Signs:
   801                           
   802                           ; 0 bytes @ 0x12
   803  000013                     	ds	4
   804  000017                     i2Evaluate_Signs@valuecounter:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x16
   808  000017                     	ds	1
   809  000018                     i2Set_Display@information:
   810                           	opt stack 0
   811                           
   812                           ; 1 bytes @ 0x17
   813  000018                     	ds	1
   814  000019                     i2Set_Display@value:
   815                           	opt stack 0
   816                           
   817                           ; 2 bytes @ 0x18
   818  000019                     	ds	2
   819  00001B                     i2Set_Display@type:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x1A
   823  00001B                     	ds	1
   824  00001C                     ??_Isr:
   825                           
   826                           ; 0 bytes @ 0x1B
   827  00001C                     	ds	17
   828  00002D                     Isr@pixel_index_array:
   829                           	opt stack 0
   830                           
   831                           ; 1 bytes @ 0x2C
   832  00002D                     	ds	1
   833  00002E                     Isr@pixel_index_bit:
   834                           	opt stack 0
   835                           
   836                           ; 1 bytes @ 0x2D
   837  00002E                     	ds	1
   838  00002F                     Isr@search_index:
   839                           	opt stack 0
   840                           
   841                           ; 1 bytes @ 0x2E
   842  00002F                     	ds	1
   843                           tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           tblptrl	equ	0xFF6
   846                           tablat	equ	0xFF5
   847                           postinc0	equ	0xFEE
   848                           wreg	equ	0xFE8
   849                           postdec1	equ	0xFE5
   850                           fsr1l	equ	0xFE1
   851                           
   852 ;;
   853 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   854 ;;
   855 ;; *************** function _main *****************
   856 ;; Defined at:
   857 ;;		line 86 in file "main.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;		None               void
   864 ;; Registers used:
   865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK0   BANK1
   871 ;;      Params:         0       0       0
   872 ;;      Locals:         0       0       0
   873 ;;      Temps:          0       0       0
   874 ;;      Totals:         0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels required when called:   12
   877 ;; This function calls:
   878 ;;		_Check_Buttons
   879 ;;		_Check_Detonators
   880 ;;		_Init
   881 ;;		_Load_Data
   882 ;;		_Set_Display
   883 ;; This function is called by:
   884 ;;		Startup code after reset
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text0
   889  001838                     __ptext0:
   890                           	opt stack 0
   891  001838                     _main:
   892                           	opt stack 19
   893                           
   894                           ;main.c: 87: Init();
   895                           
   896                           ;incstack = 0
   897  001838  EC45  F00C         	call	_Init	;wreg free
   898                           
   899                           ;main.c: 88: Load_Data();
   900  00183C  EC64  F006         	call	_Load_Data	;wreg free
   901                           
   902                           ;main.c: 89: PORTAbits.RA0 = 1;
   903  001840  8080               	bsf	3968,0,c	;volatile
   904  001842                     l3331:
   905                           
   906                           ;main.c: 91: Check_Buttons();
   907  001842  EC39  F001         	call	_Check_Buttons	;wreg free
   908                           
   909                           ;main.c: 92: if(testflag == 1) {
   910  001846  A639               	btfss	_testflag/(0+8),_testflag& (0+7),c
   911  001848  D7FC               	goto	l3331
   912                           
   913                           ;main.c: 93: Set_Display('7', 'T',0);
   914  00184A  0E54               	movlw	84
   915  00184C  0100               	movlb	0	; () banked
   916  00184E  6F77               	movwf	Set_Display@information& (0+255),b
   917  001850  0E00               	movlw	0
   918  001852  0100               	movlb	0	; () banked
   919  001854  6F79               	movwf	(Set_Display@value+1)& (0+255),b
   920  001856  0E00               	movlw	0
   921  001858  6F78               	movwf	Set_Display@value& (0+255),b
   922  00185A  0E37               	movlw	55
   923  00185C  ECAA  F009         	call	_Set_Display
   924                           
   925                           ;main.c: 94: Check_Detonators();
   926  001860  EC77  F00B         	call	_Check_Detonators	;wreg free
   927  001864  D7EE               	goto	l3331
   928  001866                     __end_of_main:
   929                           	opt stack 0
   930                           tblptru	equ	0xFF8
   931                           tblptrh	equ	0xFF7
   932                           tblptrl	equ	0xFF6
   933                           tablat	equ	0xFF5
   934                           postinc0	equ	0xFEE
   935                           wreg	equ	0xFE8
   936                           postdec1	equ	0xFE5
   937                           fsr1l	equ	0xFE1
   938                           
   939 ;; *************** function _Init *****************
   940 ;; Defined at:
   941 ;;		line 3 in file "init.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;		None               void
   948 ;; Registers used:
   949 ;;		wreg, status,2, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1
   955 ;;      Params:         0       0       0
   956 ;;      Locals:         0       0       0
   957 ;;      Temps:          0       0       0
   958 ;;      Totals:         0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    6
   962 ;; This function calls:
   963 ;;		_InitAnsel
   964 ;;		_InitInterrupt
   965 ;;		_InitMiscellaneous
   966 ;;		_InitPort
   967 ;;		_InitTimer
   968 ;;		_InitTransmission
   969 ;;		_InitTris
   970 ;; This function is called by:
   971 ;;		_main
   972 ;; This function uses a non-reentrant model
   973 ;;
   974                           
   975                           	psect	text1
   976  00188A                     __ptext1:
   977                           	opt stack 0
   978  00188A                     _Init:
   979                           	opt stack 24
   980                           
   981                           ;init.c: 4: InitPort();
   982                           
   983                           ;incstack = 0
   984  00188A  EC75  F00C         	call	_InitPort	;wreg free
   985                           
   986                           ;init.c: 5: InitTris();
   987  00188E  EC6C  F00C         	call	_InitTris	;wreg free
   988                           
   989                           ;init.c: 6: InitAnsel();
   990  001892  EC62  F00C         	call	_InitAnsel	;wreg free
   991                           
   992                           ;init.c: 7: InitMiscellaneous();
   993  001896  EC93  F00C         	call	_InitMiscellaneous	;wreg free
   994                           
   995                           ;init.c: 8: InitTransmission();
   996  00189A  EC33  F00C         	call	_InitTransmission	;wreg free
   997                           
   998                           ;init.c: 9: InitTimer();
   999  00189E  ECEC  F00B         	call	_InitTimer	;wreg free
  1000                           
  1001                           ;init.c: 10: InitInterrupt();
  1002  0018A2  EC8D  F00C         	call	_InitInterrupt	;wreg free
  1003  0018A6  0012               	return		;funcret
  1004  0018A8                     __end_of_Init:
  1005                           	opt stack 0
  1006                           tblptru	equ	0xFF8
  1007                           tblptrh	equ	0xFF7
  1008                           tblptrl	equ	0xFF6
  1009                           tablat	equ	0xFF5
  1010                           postinc0	equ	0xFEE
  1011                           wreg	equ	0xFE8
  1012                           postdec1	equ	0xFE5
  1013                           fsr1l	equ	0xFE1
  1014                           
  1015 ;; *************** function _InitTris *****************
  1016 ;; Defined at:
  1017 ;;		line 20 in file "init.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;		None               void
  1024 ;; Registers used:
  1025 ;;		wreg, status,2
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1
  1031 ;;      Params:         0       0       0
  1032 ;;      Locals:         0       0       0
  1033 ;;      Temps:          0       0       0
  1034 ;;      Totals:         0       0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    5
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_Init
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text2
  1046  0018D8                     __ptext2:
  1047                           	opt stack 0
  1048  0018D8                     _InitTris:
  1049                           	opt stack 24
  1050                           
  1051                           ;init.c: 21: TRISA = 0b00000000;
  1052                           
  1053                           ;incstack = 0
  1054  0018D8  0E00               	movlw	0
  1055  0018DA  6E92               	movwf	3986,c	;volatile
  1056                           
  1057                           ;init.c: 22: TRISB = 0b00011111;
  1058  0018DC  0E1F               	movlw	31
  1059  0018DE  6E93               	movwf	3987,c	;volatile
  1060                           
  1061                           ;init.c: 23: TRISC = 0b10000010;
  1062  0018E0  0E82               	movlw	130
  1063  0018E2  6E94               	movwf	3988,c	;volatile
  1064                           
  1065                           ;init.c: 24: TRISE = 0;
  1066  0018E4  0E00               	movlw	0
  1067  0018E6  6E96               	movwf	3990,c	;volatile
  1068  0018E8  0012               	return		;funcret
  1069  0018EA                     __end_of_InitTris:
  1070                           	opt stack 0
  1071                           tblptru	equ	0xFF8
  1072                           tblptrh	equ	0xFF7
  1073                           tblptrl	equ	0xFF6
  1074                           tablat	equ	0xFF5
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1l	equ	0xFE1
  1079                           
  1080 ;; *************** function _InitTransmission *****************
  1081 ;; Defined at:
  1082 ;;		line 37 in file "init.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;		None               void
  1089 ;; Registers used:
  1090 ;;		wreg, status,2
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1
  1096 ;;      Params:         0       0       0
  1097 ;;      Locals:         0       0       0
  1098 ;;      Temps:          0       0       0
  1099 ;;      Totals:         0       0       0
  1100 ;;Total ram usage:        0 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    5
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_Init
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text3
  1111  001866                     __ptext3:
  1112                           	opt stack 0
  1113  001866                     _InitTransmission:
  1114                           	opt stack 24
  1115                           
  1116                           ;init.c: 39: SSP1STAT = 0b01000000;
  1117                           
  1118                           ;incstack = 0
  1119  001866  0E40               	movlw	64
  1120  001868  6EC7               	movwf	4039,c	;volatile
  1121                           
  1122                           ;init.c: 40: SSP1CON1 = 0b00100010;
  1123  00186A  0E22               	movlw	34
  1124  00186C  6EC6               	movwf	4038,c	;volatile
  1125                           
  1126                           ;init.c: 42: TXSTA1bits.SYNC = 0;
  1127  00186E  98AC               	bcf	4012,4,c	;volatile
  1128                           
  1129                           ;init.c: 43: TXSTA1bits.BRGH = 1;
  1130  001870  84AC               	bsf	4012,2,c	;volatile
  1131                           
  1132                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
  1133  001872  96B8               	bcf	4024,3,c	;volatile
  1134                           
  1135                           ;init.c: 45: SPBRG1 = 25;
  1136  001874  0E19               	movlw	25
  1137  001876  6EAF               	movwf	4015,c	;volatile
  1138                           
  1139                           ;init.c: 46: TRISCbits.RC6 = 1;
  1140  001878  8C94               	bsf	3988,6,c	;volatile
  1141                           
  1142                           ;init.c: 47: TRISCbits.RC7 = 1;
  1143  00187A  8E94               	bsf	3988,7,c	;volatile
  1144                           
  1145                           ;init.c: 48: RCSTA1bits.SPEN = 1;
  1146  00187C  8EAB               	bsf	4011,7,c	;volatile
  1147                           
  1148                           ;init.c: 49: TXSTA1bits.TX9 = 1;
  1149  00187E  8CAC               	bsf	4012,6,c	;volatile
  1150                           
  1151                           ;init.c: 50: TXSTA1bits.TXEN = 1;
  1152  001880  8AAC               	bsf	4012,5,c	;volatile
  1153                           
  1154                           ;init.c: 51: RCSTA1bits.RC9 = 1;
  1155  001882  8CAB               	bsf	4011,6,c	;volatile
  1156                           
  1157                           ;init.c: 52: RCSTA1bits.CREN = 1;
  1158  001884  88AB               	bsf	4011,4,c	;volatile
  1159                           
  1160                           ;init.c: 53: TRISCbits.RC6 = 0;
  1161  001886  9C94               	bcf	3988,6,c	;volatile
  1162  001888  0012               	return		;funcret
  1163  00188A                     __end_of_InitTransmission:
  1164                           	opt stack 0
  1165                           tblptru	equ	0xFF8
  1166                           tblptrh	equ	0xFF7
  1167                           tblptrl	equ	0xFF6
  1168                           tablat	equ	0xFF5
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           postdec1	equ	0xFE5
  1172                           fsr1l	equ	0xFE1
  1173                           
  1174 ;; *************** function _InitTimer *****************
  1175 ;; Defined at:
  1176 ;;		line 56 in file "init.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;		None
  1179 ;; Auto vars:     Size  Location     Type
  1180 ;;		None
  1181 ;; Return value:  Size  Location     Type
  1182 ;;		None               void
  1183 ;; Registers used:
  1184 ;;		wreg, status,2
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1
  1190 ;;      Params:         0       0       0
  1191 ;;      Locals:         0       0       0
  1192 ;;      Temps:          0       0       0
  1193 ;;      Totals:         0       0       0
  1194 ;;Total ram usage:        0 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    5
  1197 ;; This function calls:
  1198 ;;		Nothing
  1199 ;; This function is called by:
  1200 ;;		_Init
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text4
  1205  0017D8                     __ptext4:
  1206                           	opt stack 0
  1207  0017D8                     _InitTimer:
  1208                           	opt stack 24
  1209                           
  1210                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
  1211                           
  1212                           ;incstack = 0
  1213  0017D8  0E3F               	movlw	-193
  1214  0017DA  16CD               	andwf	4045,f,c	;volatile
  1215                           
  1216                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
  1217  0017DC  0E30               	movlw	48
  1218  0017DE  12CD               	iorwf	4045,f,c	;volatile
  1219                           
  1220                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
  1221  0017E0  94CD               	bcf	4045,2,c	;volatile
  1222                           
  1223                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
  1224  0017E2  0E3F               	movlw	-193
  1225  0017E4  16B1               	andwf	4017,f,c	;volatile
  1226                           
  1227                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
  1228  0017E6  0E30               	movlw	48
  1229  0017E8  12B1               	iorwf	4017,f,c	;volatile
  1230                           
  1231                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
  1232  0017EA  94B1               	bcf	4017,2,c	;volatile
  1233                           
  1234                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
  1235  0017EC  50BD               	movf	4029,w,c	;volatile
  1236  0017EE  0BF0               	andlw	-16
  1237  0017F0  090A               	iorlw	10
  1238  0017F2  6EBD               	movwf	4029,c	;volatile
  1239                           
  1240                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
  1241  0017F4  010F               	movlb	15	; () banked
  1242  0017F6  5149               	movf	73,w,b	;volatile
  1243  0017F8  0BFC               	andlw	-4
  1244  0017FA  0901               	iorlw	1
  1245  0017FC  6F49               	movwf	73,b	;volatile
  1246                           
  1247                           ;init.c: 68: CCPR1L = 72;
  1248  0017FE  0E48               	movlw	72
  1249  001800  6EBE               	movwf	4030,c	;volatile
  1250                           
  1251                           ;init.c: 69: CCPR1H = 232;
  1252  001802  0EE8               	movlw	232
  1253  001804  6EBF               	movwf	4031,c	;volatile
  1254                           
  1255                           ; BSR set to: 15
  1256  001806  0012               	return		;funcret
  1257  001808                     __end_of_InitTimer:
  1258                           	opt stack 0
  1259                           tblptru	equ	0xFF8
  1260                           tblptrh	equ	0xFF7
  1261                           tblptrl	equ	0xFF6
  1262                           tablat	equ	0xFF5
  1263                           postinc0	equ	0xFEE
  1264                           wreg	equ	0xFE8
  1265                           postdec1	equ	0xFE5
  1266                           fsr1l	equ	0xFE1
  1267                           
  1268 ;; *************** function _InitPort *****************
  1269 ;; Defined at:
  1270 ;;		line 13 in file "init.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;		None               void
  1277 ;; Registers used:
  1278 ;;		wreg, status,2
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1
  1284 ;;      Params:         0       0       0
  1285 ;;      Locals:         0       0       0
  1286 ;;      Temps:          0       0       0
  1287 ;;      Totals:         0       0       0
  1288 ;;Total ram usage:        0 bytes
  1289 ;; Hardware stack levels used:    1
  1290 ;; Hardware stack levels required when called:    5
  1291 ;; This function calls:
  1292 ;;		Nothing
  1293 ;; This function is called by:
  1294 ;;		_Init
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text5
  1299  0018EA                     __ptext5:
  1300                           	opt stack 0
  1301  0018EA                     _InitPort:
  1302                           	opt stack 24
  1303                           
  1304                           ;init.c: 14: PORTA = 0b00000000;
  1305                           
  1306                           ; BSR set to: 15
  1307                           ;incstack = 0
  1308  0018EA  0E00               	movlw	0
  1309  0018EC  6E80               	movwf	3968,c	;volatile
  1310                           
  1311                           ;init.c: 15: PORTB = 0b00000000;
  1312  0018EE  0E00               	movlw	0
  1313  0018F0  6E81               	movwf	3969,c	;volatile
  1314                           
  1315                           ;init.c: 16: PORTC = 0b00000100;
  1316  0018F2  0E04               	movlw	4
  1317  0018F4  6E82               	movwf	3970,c	;volatile
  1318                           
  1319                           ;init.c: 17: PORTE = 0;
  1320  0018F6  0E00               	movlw	0
  1321  0018F8  6E84               	movwf	3972,c	;volatile
  1322  0018FA  0012               	return		;funcret
  1323  0018FC                     __end_of_InitPort:
  1324                           	opt stack 0
  1325                           tblptru	equ	0xFF8
  1326                           tblptrh	equ	0xFF7
  1327                           tblptrl	equ	0xFF6
  1328                           tablat	equ	0xFF5
  1329                           postinc0	equ	0xFEE
  1330                           wreg	equ	0xFE8
  1331                           postdec1	equ	0xFE5
  1332                           fsr1l	equ	0xFE1
  1333                           
  1334 ;; *************** function _InitMiscellaneous *****************
  1335 ;; Defined at:
  1336 ;;		line 33 in file "init.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;		None               void
  1343 ;; Registers used:
  1344 ;;		wreg, status,2
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1
  1350 ;;      Params:         0       0       0
  1351 ;;      Locals:         0       0       0
  1352 ;;      Temps:          0       0       0
  1353 ;;      Totals:         0       0       0
  1354 ;;Total ram usage:        0 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    5
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_Init
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text6
  1365  001926                     __ptext6:
  1366                           	opt stack 0
  1367  001926                     _InitMiscellaneous:
  1368                           	opt stack 24
  1369                           
  1370                           ;init.c: 34: OSCCON = 0b01010011;
  1371                           
  1372                           ;incstack = 0
  1373  001926  0E53               	movlw	83
  1374  001928  6ED3               	movwf	4051,c	;volatile
  1375  00192A  0012               	return		;funcret
  1376  00192C                     __end_of_InitMiscellaneous:
  1377                           	opt stack 0
  1378                           tblptru	equ	0xFF8
  1379                           tblptrh	equ	0xFF7
  1380                           tblptrl	equ	0xFF6
  1381                           tablat	equ	0xFF5
  1382                           postinc0	equ	0xFEE
  1383                           wreg	equ	0xFE8
  1384                           postdec1	equ	0xFE5
  1385                           fsr1l	equ	0xFE1
  1386                           
  1387 ;; *************** function _InitInterrupt *****************
  1388 ;; Defined at:
  1389 ;;		line 72 in file "init.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;		None
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;		None               void
  1396 ;; Registers used:
  1397 ;;		None
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1
  1403 ;;      Params:         0       0       0
  1404 ;;      Locals:         0       0       0
  1405 ;;      Temps:          0       0       0
  1406 ;;      Totals:         0       0       0
  1407 ;;Total ram usage:        0 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    5
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_Init
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text7
  1418  00191A                     __ptext7:
  1419                           	opt stack 0
  1420  00191A                     _InitInterrupt:
  1421                           	opt stack 24
  1422                           
  1423                           ;init.c: 73: INTCONbits.GIE = 1;
  1424                           
  1425                           ;incstack = 0
  1426  00191A  8EF2               	bsf	intcon,7,c	;volatile
  1427                           
  1428                           ;init.c: 74: INTCONbits.PEIE = 1;
  1429  00191C  8CF2               	bsf	intcon,6,c	;volatile
  1430                           
  1431                           ;init.c: 75: PIE1bits.RCIE = 1;
  1432  00191E  8A9D               	bsf	3997,5,c	;volatile
  1433                           
  1434                           ;init.c: 76: PIE1bits.CCP1IE = 1;
  1435  001920  849D               	bsf	3997,2,c	;volatile
  1436                           
  1437                           ;init.c: 77: PIE1bits.TMR1IE = 1;
  1438  001922  809D               	bsf	3997,0,c	;volatile
  1439  001924  0012               	return		;funcret
  1440  001926                     __end_of_InitInterrupt:
  1441                           	opt stack 0
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           intcon	equ	0xFF2
  1447                           postinc0	equ	0xFEE
  1448                           wreg	equ	0xFE8
  1449                           postdec1	equ	0xFE5
  1450                           fsr1l	equ	0xFE1
  1451                           
  1452 ;; *************** function _InitAnsel *****************
  1453 ;; Defined at:
  1454 ;;		line 27 in file "init.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;		None               void
  1461 ;; Registers used:
  1462 ;;		wreg, status,2
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1
  1468 ;;      Params:         0       0       0
  1469 ;;      Locals:         0       0       0
  1470 ;;      Temps:          0       0       0
  1471 ;;      Totals:         0       0       0
  1472 ;;Total ram usage:        0 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    5
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_Init
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text8
  1483  0018C4                     __ptext8:
  1484                           	opt stack 0
  1485  0018C4                     _InitAnsel:
  1486                           	opt stack 24
  1487                           
  1488                           ;init.c: 28: ANSELA = 0;
  1489                           
  1490                           ;incstack = 0
  1491  0018C4  0E00               	movlw	0
  1492  0018C6  010F               	movlb	15	; () banked
  1493  0018C8  6F38               	movwf	56,b	;volatile
  1494                           
  1495                           ;init.c: 29: ANSELB = 0;
  1496  0018CA  0E00               	movlw	0
  1497  0018CC  010F               	movlb	15	; () banked
  1498  0018CE  6F39               	movwf	57,b	;volatile
  1499                           
  1500                           ;init.c: 30: ANSELC = 0;
  1501  0018D0  0E00               	movlw	0
  1502  0018D2  010F               	movlb	15	; () banked
  1503  0018D4  6F3A               	movwf	58,b	;volatile
  1504                           
  1505                           ; BSR set to: 15
  1506  0018D6  0012               	return		;funcret
  1507  0018D8                     __end_of_InitAnsel:
  1508                           	opt stack 0
  1509                           tblptru	equ	0xFF8
  1510                           tblptrh	equ	0xFF7
  1511                           tblptrl	equ	0xFF6
  1512                           tablat	equ	0xFF5
  1513                           intcon	equ	0xFF2
  1514                           postinc0	equ	0xFEE
  1515                           wreg	equ	0xFE8
  1516                           postdec1	equ	0xFE5
  1517                           fsr1l	equ	0xFE1
  1518                           
  1519 ;; *************** function _Check_Detonators *****************
  1520 ;; Defined at:
  1521 ;;		line 25 in file "ignition.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;		None               void
  1528 ;; Registers used:
  1529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1
  1535 ;;      Params:         0       0       0
  1536 ;;      Locals:         0       0       0
  1537 ;;      Temps:          0       0       0
  1538 ;;      Totals:         0       0       0
  1539 ;;Total ram usage:        0 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    6
  1542 ;; This function calls:
  1543 ;;		_Transmit
  1544 ;; This function is called by:
  1545 ;;		_main
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text9
  1550  0016EE                     __ptext9:
  1551                           	opt stack 0
  1552  0016EE                     _Check_Detonators:
  1553                           	opt stack 24
  1554                           
  1555                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  1556                           
  1557                           ; BSR set to: 15
  1558                           ;incstack = 0
  1559  0016EE  0E54               	movlw	84
  1560  0016F0  0100               	movlb	0	; () banked
  1561  0016F2  6F60               	movwf	Transmit@operation& (0+255),b
  1562  0016F4  0100               	movlb	0	; () banked
  1563  0016F6  5180               	movf	_check_counter& (0+255),w,b
  1564  0016F8  0D06               	mullw	6
  1565  0016FA  0E01               	movlw	1
  1566  0016FC  26F3               	addwf	prodl,f,c
  1567  0016FE  0E00               	movlw	0
  1568  001700  22F4               	addwfc	prodh,f,c
  1569  001702  0E00               	movlw	low _pin
  1570  001704  24F3               	addwf	prodl,w,c
  1571  001706  6ED9               	movwf	fsr2l,c
  1572  001708  0E01               	movlw	high _pin
  1573  00170A  20F4               	addwfc	prodh,w,c
  1574  00170C  6EDA               	movwf	fsr2h,c
  1575  00170E  50DF               	movf	indf2,w,c
  1576  001710  0100               	movlb	0	; () banked
  1577  001712  6F61               	movwf	Transmit@port& (0+255),b
  1578  001714  0100               	movlb	0	; () banked
  1579  001716  5180               	movf	_check_counter& (0+255),w,b
  1580  001718  0D06               	mullw	6
  1581  00171A  0E00               	movlw	low _pin
  1582  00171C  24F3               	addwf	prodl,w,c
  1583  00171E  6ED9               	movwf	fsr2l,c
  1584  001720  0E01               	movlw	high _pin
  1585  001722  20F4               	addwfc	prodh,w,c
  1586  001724  6EDA               	movwf	fsr2h,c
  1587  001726  50DF               	movf	indf2,w,c
  1588  001728  ECB5  F00B         	call	_Transmit
  1589  00172C  0012               	return		;funcret
  1590  00172E                     __end_of_Check_Detonators:
  1591                           	opt stack 0
  1592                           tblptru	equ	0xFF8
  1593                           tblptrh	equ	0xFF7
  1594                           tblptrl	equ	0xFF6
  1595                           tablat	equ	0xFF5
  1596                           prodh	equ	0xFF4
  1597                           prodl	equ	0xFF3
  1598                           intcon	equ	0xFF2
  1599                           postinc0	equ	0xFEE
  1600                           wreg	equ	0xFE8
  1601                           postdec1	equ	0xFE5
  1602                           fsr1l	equ	0xFE1
  1603                           indf2	equ	0xFDF
  1604                           fsr2h	equ	0xFDA
  1605                           fsr2l	equ	0xFD9
  1606                           
  1607 ;; *************** function _Transmit *****************
  1608 ;; Defined at:
  1609 ;;		line 15 in file "communication.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;  receiver        1    wreg     unsigned char 
  1612 ;;  operation       1    0[BANK0 ] unsigned char 
  1613 ;;  port            1    1[BANK0 ] unsigned char 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  receiver        1    2[BANK0 ] unsigned char 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;		None               void
  1618 ;; Registers used:
  1619 ;;		wreg, status,2
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1
  1625 ;;      Params:         0       2       0
  1626 ;;      Locals:         0       1       0
  1627 ;;      Temps:          0       0       0
  1628 ;;      Totals:         0       3       0
  1629 ;;Total ram usage:        3 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    5
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_Check_Detonators
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text10
  1640  00176A                     __ptext10:
  1641                           	opt stack 0
  1642  00176A                     _Transmit:
  1643                           	opt stack 24
  1644                           
  1645                           ;incstack = 0
  1646                           ;Transmit@receiver stored from wreg
  1647  00176A  0100               	movlb	0	; () banked
  1648  00176C  6F62               	movwf	Transmit@receiver& (0+255),b
  1649                           
  1650                           ;communication.c: 17: PORTBbits.RB5 = 1;
  1651  00176E  8A81               	bsf	3969,5,c	;volatile
  1652                           
  1653                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  1654  001770  98AB               	bcf	4011,4,c	;volatile
  1655                           
  1656                           ;communication.c: 20: __nop();
  1657  001772  F000               	nop	
  1658  001774                     l522:
  1659  001774  A89E               	btfss	3998,4,c	;volatile
  1660  001776  D7FE               	goto	l522
  1661                           
  1662                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  1663  001778  80AC               	bsf	4012,0,c	;volatile
  1664                           
  1665                           ;communication.c: 23: TXREG1 = receiver;
  1666  00177A  C062  FFAD         	movff	Transmit@receiver,4013	;volatile
  1667  00177E                     l525:
  1668  00177E  A89E               	btfss	3998,4,c	;volatile
  1669  001780  D7FE               	goto	l525
  1670                           
  1671                           ;communication.c: 25: TXREG1 = 0xAA;
  1672  001782  0EAA               	movlw	170
  1673  001784  6EAD               	movwf	4013,c	;volatile
  1674  001786                     l528:
  1675  001786  A89E               	btfss	3998,4,c	;volatile
  1676  001788  D7FE               	goto	l528
  1677                           
  1678                           ;communication.c: 27: TXREG1 = operation;
  1679  00178A  C060  FFAD         	movff	Transmit@operation,4013	;volatile
  1680  00178E                     l531:
  1681  00178E  A89E               	btfss	3998,4,c	;volatile
  1682  001790  D7FE               	goto	l531
  1683                           
  1684                           ;communication.c: 29: TXREG1 = port;
  1685  001792  C061  FFAD         	movff	Transmit@port,4013	;volatile
  1686  001796                     l534:
  1687  001796  A2AC               	btfss	4012,1,c	;volatile
  1688  001798  D7FE               	goto	l534
  1689                           
  1690                           ;communication.c: 31: PORTBbits.RB5 = 0;
  1691  00179A  9A81               	bcf	3969,5,c	;volatile
  1692                           
  1693                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  1694  00179C  88AB               	bsf	4011,4,c	;volatile
  1695                           
  1696                           ;communication.c: 33: __nop();
  1697  00179E  F000               	nop	
  1698  0017A0  0012               	return		;funcret
  1699  0017A2                     __end_of_Transmit:
  1700                           	opt stack 0
  1701                           tblptru	equ	0xFF8
  1702                           tblptrh	equ	0xFF7
  1703                           tblptrl	equ	0xFF6
  1704                           tablat	equ	0xFF5
  1705                           prodh	equ	0xFF4
  1706                           prodl	equ	0xFF3
  1707                           intcon	equ	0xFF2
  1708                           postinc0	equ	0xFEE
  1709                           wreg	equ	0xFE8
  1710                           postdec1	equ	0xFE5
  1711                           fsr1l	equ	0xFE1
  1712                           indf2	equ	0xFDF
  1713                           fsr2h	equ	0xFDA
  1714                           fsr2l	equ	0xFD9
  1715                           
  1716 ;; *************** function _Check_Buttons *****************
  1717 ;; Defined at:
  1718 ;;		line 26 in file "buttonchanges.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;		None               void
  1725 ;; Registers used:
  1726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1
  1732 ;;      Params:         0       0       0
  1733 ;;      Locals:         0       0       0
  1734 ;;      Temps:          0       2       0
  1735 ;;      Totals:         0       2       0
  1736 ;;Total ram usage:        2 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:   11
  1739 ;; This function calls:
  1740 ;;		_Del_Data
  1741 ;;		_Delay_Routine
  1742 ;;		_Read_Data
  1743 ;;		_Save_Data
  1744 ;;		_Set_Display
  1745 ;;		_Start_Timer
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text11
  1752  000272                     __ptext11:
  1753                           	opt stack 0
  1754  000272                     _Check_Buttons:
  1755                           	opt stack 19
  1756                           
  1757                           ;buttonchanges.c: 27: if(PORTCbits.RC1 == 1) {
  1758                           
  1759                           ;incstack = 0
  1760  000272  A282               	btfss	3970,1,c	;volatile
  1761  000274  D00B               	goto	l102
  1762                           
  1763                           ;buttonchanges.c: 28: Delay_Routine(3);
  1764  000276  0E03               	movlw	3
  1765  000278  EC04  F00C         	call	_Delay_Routine
  1766                           
  1767                           ;buttonchanges.c: 29: if(PORTCbits.RC1 == 1) {
  1768  00027C  A282               	btfss	3970,1,c	;volatile
  1769  00027E  0012               	return	
  1770                           
  1771                           ;buttonchanges.c: 30: __nop();
  1772  000280  F000               	nop	
  1773                           
  1774                           ;buttonchanges.c: 31: ignite_ready = 1;
  1775  000282  8039               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1776                           
  1777                           ;buttonchanges.c: 32: Start_Timer();
  1778  000284  EC54  F00C         	call	_Start_Timer	;wreg free
  1779                           
  1780                           ;buttonchanges.c: 33: __nop();
  1781  000288  F000               	nop	
  1782                           
  1783                           ;buttonchanges.c: 37: }
  1784                           ;buttonchanges.c: 38: } else if(PORTBbits.RB2 == 1) {
  1785                           
  1786                           ;buttonchanges.c: 34: return;
  1787  00028A  0012               	return	
  1788  00028C                     l102:
  1789  00028C  A481               	btfss	3969,2,c	;volatile
  1790  00028E  D061               	goto	l106
  1791                           
  1792                           ;buttonchanges.c: 39: Delay_Routine(3);
  1793  000290  0E03               	movlw	3
  1794  000292  EC04  F00C         	call	_Delay_Routine
  1795                           
  1796                           ;buttonchanges.c: 40: if(PORTBbits.RB2 == 1) {
  1797  000296  A481               	btfss	3969,2,c	;volatile
  1798  000298  0012               	return	
  1799                           
  1800                           ;buttonchanges.c: 41: __nop();
  1801  00029A  F000               	nop	
  1802                           
  1803                           ;buttonchanges.c: 42: if(PORTBbits.RB3 == 1) {
  1804  00029C  A681               	btfss	3969,3,c	;volatile
  1805  00029E  D008               	goto	l3187
  1806                           
  1807                           ;buttonchanges.c: 43: Delay_Routine(3);
  1808  0002A0  0E03               	movlw	3
  1809  0002A2  EC04  F00C         	call	_Delay_Routine
  1810                           
  1811                           ;buttonchanges.c: 44: if(PORTBbits.RB3 == 1) {
  1812  0002A6  A681               	btfss	3969,3,c	;volatile
  1813  0002A8  D003               	goto	l3187
  1814                           
  1815                           ;buttonchanges.c: 45: Del_Data();
  1816  0002AA  EC3E  F00A         	call	_Del_Data	;wreg free
  1817                           
  1818                           ;buttonchanges.c: 46: return;
  1819  0002AE  0012               	return	
  1820  0002B0                     l3187:
  1821                           
  1822                           ;buttonchanges.c: 48: }
  1823                           ;buttonchanges.c: 49: }
  1824                           ;buttonchanges.c: 50: pin[pin_selected].time++;
  1825  0002B0  0100               	movlb	0	; () banked
  1826  0002B2  5181               	movf	_pin_selected& (0+255),w,b
  1827  0002B4  0D06               	mullw	6
  1828  0002B6  0E04               	movlw	4
  1829  0002B8  26F3               	addwf	prodl,f,c
  1830  0002BA  0E00               	movlw	0
  1831  0002BC  22F4               	addwfc	prodh,f,c
  1832  0002BE  0E00               	movlw	low _pin
  1833  0002C0  24F3               	addwf	prodl,w,c
  1834  0002C2  6ED9               	movwf	fsr2l,c
  1835  0002C4  0E01               	movlw	high _pin
  1836  0002C6  20F4               	addwfc	prodh,w,c
  1837  0002C8  6EDA               	movwf	fsr2h,c
  1838  0002CA  2ADE               	incf	postinc2,f,c
  1839  0002CC  0E00               	movlw	0
  1840  0002CE  22DD               	addwfc	postdec2,f,c
  1841                           
  1842                           ;buttonchanges.c: 51: if(pin[pin_selected].time > 999) {
  1843  0002D0  0100               	movlb	0	; () banked
  1844  0002D2  5181               	movf	_pin_selected& (0+255),w,b
  1845  0002D4  0D06               	mullw	6
  1846  0002D6  0E04               	movlw	4
  1847  0002D8  26F3               	addwf	prodl,f,c
  1848  0002DA  0E00               	movlw	0
  1849  0002DC  22F4               	addwfc	prodh,f,c
  1850  0002DE  0E00               	movlw	low _pin
  1851  0002E0  24F3               	addwf	prodl,w,c
  1852  0002E2  6ED9               	movwf	fsr2l,c
  1853  0002E4  0E01               	movlw	high _pin
  1854  0002E6  20F4               	addwfc	prodh,w,c
  1855  0002E8  6EDA               	movwf	fsr2h,c
  1856  0002EA  0E01               	movlw	1
  1857  0002EC  BEDB               	btfsc	plusw2,7,c
  1858  0002EE  D017               	goto	l3191
  1859  0002F0  0EE8               	movlw	232
  1860  0002F2  5CDE               	subwf	postinc2,w,c
  1861  0002F4  0E03               	movlw	3
  1862  0002F6  58DE               	subwfb	postinc2,w,c
  1863  0002F8  A0D8               	btfss	status,0,c
  1864  0002FA  D011               	goto	l3191
  1865                           
  1866                           ; BSR set to: 0
  1867                           ;buttonchanges.c: 52: pin[pin_selected].time = 0;
  1868  0002FC  0100               	movlb	0	; () banked
  1869  0002FE  5181               	movf	_pin_selected& (0+255),w,b
  1870  000300  0D06               	mullw	6
  1871  000302  0E04               	movlw	4
  1872  000304  26F3               	addwf	prodl,f,c
  1873  000306  0E00               	movlw	0
  1874  000308  22F4               	addwfc	prodh,f,c
  1875  00030A  0E00               	movlw	low _pin
  1876  00030C  24F3               	addwf	prodl,w,c
  1877  00030E  6ED9               	movwf	fsr2l,c
  1878  000310  0E01               	movlw	high _pin
  1879  000312  20F4               	addwfc	prodh,w,c
  1880  000314  6EDA               	movwf	fsr2h,c
  1881  000316  0E00               	movlw	0
  1882  000318  6EDE               	movwf	postinc2,c
  1883  00031A  0E00               	movlw	0
  1884  00031C  6EDD               	movwf	postdec2,c
  1885  00031E                     l3191:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;buttonchanges.c: 53: }
  1889                           ;buttonchanges.c: 54: __nop();
  1890  00031E  F000               	nop	
  1891                           
  1892                           ;buttonchanges.c: 55: Set_Display('7', '-', pin[pin_selected].time);
  1893  000320  0E2D               	movlw	45
  1894  000322  0100               	movlb	0	; () banked
  1895  000324  6F77               	movwf	Set_Display@information& (0+255),b
  1896  000326  0100               	movlb	0	; () banked
  1897  000328  5181               	movf	_pin_selected& (0+255),w,b
  1898  00032A  0D06               	mullw	6
  1899  00032C  0E04               	movlw	4
  1900  00032E  26F3               	addwf	prodl,f,c
  1901  000330  0E00               	movlw	0
  1902  000332  22F4               	addwfc	prodh,f,c
  1903  000334  0E00               	movlw	low _pin
  1904  000336  24F3               	addwf	prodl,w,c
  1905  000338  6ED9               	movwf	fsr2l,c
  1906  00033A  0E01               	movlw	high _pin
  1907  00033C  20F4               	addwfc	prodh,w,c
  1908  00033E  6EDA               	movwf	fsr2h,c
  1909  000340  CFDE F078          	movff	postinc2,Set_Display@value
  1910  000344  CFDD F079          	movff	postdec2,Set_Display@value+1
  1911  000348  0E37               	movlw	55
  1912  00034A  ECAA  F009         	call	_Set_Display
  1913                           
  1914                           ;buttonchanges.c: 56: __nop();
  1915  00034E  F000               	nop	
  1916                           
  1917                           ;buttonchanges.c: 57: }
  1918                           ;buttonchanges.c: 58: } else if(PORTBbits.RB3 == 1) {
  1919  000350  0012               	return	
  1920  000352                     l106:
  1921  000352  A681               	btfss	3969,3,c	;volatile
  1922  000354  D05B               	goto	l112
  1923                           
  1924                           ;buttonchanges.c: 59: Delay_Routine(3);
  1925  000356  0E03               	movlw	3
  1926  000358  EC04  F00C         	call	_Delay_Routine
  1927                           
  1928                           ;buttonchanges.c: 60: if(PORTBbits.RB3 == 1) {
  1929  00035C  A681               	btfss	3969,3,c	;volatile
  1930  00035E  0012               	return	
  1931                           
  1932                           ;buttonchanges.c: 61: __nop();
  1933  000360  F000               	nop	
  1934                           
  1935                           ;buttonchanges.c: 62: if(PORTBbits.RB2 == 1) {
  1936  000362  A481               	btfss	3969,2,c	;volatile
  1937  000364  D008               	goto	l3211
  1938                           
  1939                           ;buttonchanges.c: 63: Delay_Routine(3);
  1940  000366  0E03               	movlw	3
  1941  000368  EC04  F00C         	call	_Delay_Routine
  1942                           
  1943                           ;buttonchanges.c: 64: if(PORTBbits.RB2 == 1) {
  1944  00036C  A481               	btfss	3969,2,c	;volatile
  1945  00036E  D003               	goto	l3211
  1946                           
  1947                           ;buttonchanges.c: 65: Del_Data();
  1948  000370  EC3E  F00A         	call	_Del_Data	;wreg free
  1949                           
  1950                           ;buttonchanges.c: 66: return;
  1951  000374  0012               	return	
  1952  000376                     l3211:
  1953                           
  1954                           ;buttonchanges.c: 68: }
  1955                           ;buttonchanges.c: 69: }
  1956                           ;buttonchanges.c: 70: pin[pin_selected].time--;
  1957  000376  0100               	movlb	0	; () banked
  1958  000378  5181               	movf	_pin_selected& (0+255),w,b
  1959  00037A  0D06               	mullw	6
  1960  00037C  0E04               	movlw	4
  1961  00037E  26F3               	addwf	prodl,f,c
  1962  000380  0E00               	movlw	0
  1963  000382  22F4               	addwfc	prodh,f,c
  1964  000384  0E00               	movlw	low _pin
  1965  000386  24F3               	addwf	prodl,w,c
  1966  000388  6ED9               	movwf	fsr2l,c
  1967  00038A  0E01               	movlw	high _pin
  1968  00038C  20F4               	addwfc	prodh,w,c
  1969  00038E  6EDA               	movwf	fsr2h,c
  1970  000390  06DE               	decf	postinc2,f,c
  1971  000392  0E00               	movlw	0
  1972  000394  5ADD               	subwfb	postdec2,f,c
  1973                           
  1974                           ;buttonchanges.c: 71: if(pin[pin_selected].time < 0) {
  1975  000396  0100               	movlb	0	; () banked
  1976  000398  5181               	movf	_pin_selected& (0+255),w,b
  1977  00039A  0D06               	mullw	6
  1978  00039C  0E04               	movlw	4
  1979  00039E  26F3               	addwf	prodl,f,c
  1980  0003A0  0E00               	movlw	0
  1981  0003A2  22F4               	addwfc	prodh,f,c
  1982  0003A4  0E00               	movlw	low _pin
  1983  0003A6  24F3               	addwf	prodl,w,c
  1984  0003A8  6ED9               	movwf	fsr2l,c
  1985  0003AA  0E01               	movlw	high _pin
  1986  0003AC  20F4               	addwfc	prodh,w,c
  1987  0003AE  6EDA               	movwf	fsr2h,c
  1988  0003B0  0E01               	movlw	1
  1989  0003B2  AEDB               	btfss	plusw2,7,c
  1990  0003B4  D011               	goto	l3215
  1991                           
  1992                           ; BSR set to: 0
  1993                           ;buttonchanges.c: 72: pin[pin_selected].time = 999;
  1994  0003B6  0100               	movlb	0	; () banked
  1995  0003B8  5181               	movf	_pin_selected& (0+255),w,b
  1996  0003BA  0D06               	mullw	6
  1997  0003BC  0E04               	movlw	4
  1998  0003BE  26F3               	addwf	prodl,f,c
  1999  0003C0  0E00               	movlw	0
  2000  0003C2  22F4               	addwfc	prodh,f,c
  2001  0003C4  0E00               	movlw	low _pin
  2002  0003C6  24F3               	addwf	prodl,w,c
  2003  0003C8  6ED9               	movwf	fsr2l,c
  2004  0003CA  0E01               	movlw	high _pin
  2005  0003CC  20F4               	addwfc	prodh,w,c
  2006  0003CE  6EDA               	movwf	fsr2h,c
  2007  0003D0  0EE7               	movlw	231
  2008  0003D2  6EDE               	movwf	postinc2,c
  2009  0003D4  0E03               	movlw	3
  2010  0003D6  6EDD               	movwf	postdec2,c
  2011  0003D8                     l3215:
  2012                           
  2013                           ; BSR set to: 0
  2014                           ;buttonchanges.c: 73: }
  2015                           ;buttonchanges.c: 74: __nop();
  2016  0003D8  F000               	nop	
  2017                           
  2018                           ;buttonchanges.c: 75: Set_Display('7', '-', pin[pin_selected].time);
  2019  0003DA  0E2D               	movlw	45
  2020  0003DC  0100               	movlb	0	; () banked
  2021  0003DE  6F77               	movwf	Set_Display@information& (0+255),b
  2022  0003E0  0100               	movlb	0	; () banked
  2023  0003E2  5181               	movf	_pin_selected& (0+255),w,b
  2024  0003E4  0D06               	mullw	6
  2025  0003E6  0E04               	movlw	4
  2026  0003E8  26F3               	addwf	prodl,f,c
  2027  0003EA  0E00               	movlw	0
  2028  0003EC  22F4               	addwfc	prodh,f,c
  2029  0003EE  0E00               	movlw	low _pin
  2030  0003F0  24F3               	addwf	prodl,w,c
  2031  0003F2  6ED9               	movwf	fsr2l,c
  2032  0003F4  0E01               	movlw	high _pin
  2033  0003F6  20F4               	addwfc	prodh,w,c
  2034  0003F8  6EDA               	movwf	fsr2h,c
  2035  0003FA  CFDE F078          	movff	postinc2,Set_Display@value
  2036  0003FE  CFDD F079          	movff	postdec2,Set_Display@value+1
  2037  000402  0E37               	movlw	55
  2038  000404  ECAA  F009         	call	_Set_Display
  2039                           
  2040                           ;buttonchanges.c: 76: __nop();
  2041  000408  F000               	nop	
  2042                           
  2043                           ;buttonchanges.c: 77: }
  2044                           ;buttonchanges.c: 78: } else if(PORTBbits.RB4 == 1) {
  2045  00040A  0012               	return	
  2046  00040C                     l112:
  2047  00040C  A881               	btfss	3969,4,c	;volatile
  2048  00040E  D058               	goto	l118
  2049                           
  2050                           ;buttonchanges.c: 79: Delay_Routine(3);
  2051  000410  0E03               	movlw	3
  2052  000412  EC04  F00C         	call	_Delay_Routine
  2053                           
  2054                           ;buttonchanges.c: 80: if(PORTBbits.RB4 == 1) {
  2055  000416  A881               	btfss	3969,4,c	;volatile
  2056  000418  0012               	return	
  2057                           
  2058                           ;buttonchanges.c: 81: __nop();
  2059  00041A  F000               	nop	
  2060                           
  2061                           ;buttonchanges.c: 82: pin[pin_selected].time += 10;
  2062  00041C  0100               	movlb	0	; () banked
  2063  00041E  5181               	movf	_pin_selected& (0+255),w,b
  2064  000420  0D06               	mullw	6
  2065  000422  0E04               	movlw	4
  2066  000424  26F3               	addwf	prodl,f,c
  2067  000426  0E00               	movlw	0
  2068  000428  22F4               	addwfc	prodh,f,c
  2069  00042A  0E00               	movlw	low _pin
  2070  00042C  24F3               	addwf	prodl,w,c
  2071  00042E  6ED9               	movwf	fsr2l,c
  2072  000430  0E01               	movlw	high _pin
  2073  000432  20F4               	addwfc	prodh,w,c
  2074  000434  6EDA               	movwf	fsr2h,c
  2075  000436  0E0A               	movlw	10
  2076  000438  26DE               	addwf	postinc2,f,c
  2077  00043A  0E00               	movlw	0
  2078  00043C  22DD               	addwfc	postdec2,f,c
  2079                           
  2080                           ;buttonchanges.c: 83: if(pin[pin_selected].time > 999) {
  2081  00043E  0100               	movlb	0	; () banked
  2082  000440  5181               	movf	_pin_selected& (0+255),w,b
  2083  000442  0D06               	mullw	6
  2084  000444  0E04               	movlw	4
  2085  000446  26F3               	addwf	prodl,f,c
  2086  000448  0E00               	movlw	0
  2087  00044A  22F4               	addwfc	prodh,f,c
  2088  00044C  0E00               	movlw	low _pin
  2089  00044E  24F3               	addwf	prodl,w,c
  2090  000450  6ED9               	movwf	fsr2l,c
  2091  000452  0E01               	movlw	high _pin
  2092  000454  20F4               	addwfc	prodh,w,c
  2093  000456  6EDA               	movwf	fsr2h,c
  2094  000458  0E01               	movlw	1
  2095  00045A  BEDB               	btfsc	plusw2,7,c
  2096  00045C  D017               	goto	l3231
  2097  00045E  0EE8               	movlw	232
  2098  000460  5CDE               	subwf	postinc2,w,c
  2099  000462  0E03               	movlw	3
  2100  000464  58DE               	subwfb	postinc2,w,c
  2101  000466  A0D8               	btfss	status,0,c
  2102  000468  D011               	goto	l3231
  2103                           
  2104                           ; BSR set to: 0
  2105                           ;buttonchanges.c: 84: pin[pin_selected].time = 0;
  2106  00046A  0100               	movlb	0	; () banked
  2107  00046C  5181               	movf	_pin_selected& (0+255),w,b
  2108  00046E  0D06               	mullw	6
  2109  000470  0E04               	movlw	4
  2110  000472  26F3               	addwf	prodl,f,c
  2111  000474  0E00               	movlw	0
  2112  000476  22F4               	addwfc	prodh,f,c
  2113  000478  0E00               	movlw	low _pin
  2114  00047A  24F3               	addwf	prodl,w,c
  2115  00047C  6ED9               	movwf	fsr2l,c
  2116  00047E  0E01               	movlw	high _pin
  2117  000480  20F4               	addwfc	prodh,w,c
  2118  000482  6EDA               	movwf	fsr2h,c
  2119  000484  0E00               	movlw	0
  2120  000486  6EDE               	movwf	postinc2,c
  2121  000488  0E00               	movlw	0
  2122  00048A  6EDD               	movwf	postdec2,c
  2123  00048C                     l3231:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;buttonchanges.c: 85: }
  2127                           ;buttonchanges.c: 86: __nop();
  2128  00048C  F000               	nop	
  2129                           
  2130                           ;buttonchanges.c: 87: Set_Display('7', '-', pin[pin_selected].time);
  2131  00048E  0E2D               	movlw	45
  2132  000490  0100               	movlb	0	; () banked
  2133  000492  6F77               	movwf	Set_Display@information& (0+255),b
  2134  000494  0100               	movlb	0	; () banked
  2135  000496  5181               	movf	_pin_selected& (0+255),w,b
  2136  000498  0D06               	mullw	6
  2137  00049A  0E04               	movlw	4
  2138  00049C  26F3               	addwf	prodl,f,c
  2139  00049E  0E00               	movlw	0
  2140  0004A0  22F4               	addwfc	prodh,f,c
  2141  0004A2  0E00               	movlw	low _pin
  2142  0004A4  24F3               	addwf	prodl,w,c
  2143  0004A6  6ED9               	movwf	fsr2l,c
  2144  0004A8  0E01               	movlw	high _pin
  2145  0004AA  20F4               	addwfc	prodh,w,c
  2146  0004AC  6EDA               	movwf	fsr2h,c
  2147  0004AE  CFDE F078          	movff	postinc2,Set_Display@value
  2148  0004B2  CFDD F079          	movff	postdec2,Set_Display@value+1
  2149  0004B6  0E37               	movlw	55
  2150  0004B8  ECAA  F009         	call	_Set_Display
  2151                           
  2152                           ;buttonchanges.c: 88: __nop();
  2153  0004BC  F000               	nop	
  2154                           
  2155                           ;buttonchanges.c: 89: }
  2156                           ;buttonchanges.c: 90: } else if(PORTBbits.RB1 == 1) {
  2157  0004BE  0012               	return	
  2158  0004C0                     l118:
  2159  0004C0  A281               	btfss	3969,1,c	;volatile
  2160  0004C2  D0B2               	goto	l122
  2161                           
  2162                           ;buttonchanges.c: 91: Delay_Routine(3);
  2163  0004C4  0E03               	movlw	3
  2164  0004C6  EC04  F00C         	call	_Delay_Routine
  2165                           
  2166                           ;buttonchanges.c: 92: if(PORTBbits.RB1 == 1) {
  2167  0004CA  A281               	btfss	3969,1,c	;volatile
  2168  0004CC  0012               	return	
  2169                           
  2170                           ;buttonchanges.c: 93: __nop();
  2171  0004CE  F000               	nop	
  2172                           
  2173                           ;buttonchanges.c: 94: if(PORTBbits.RB0 == 1) {
  2174  0004D0  A081               	btfss	3969,0,c	;volatile
  2175  0004D2  D007               	goto	l3249
  2176                           
  2177                           ;buttonchanges.c: 95: Delay_Routine(3);
  2178  0004D4  0E03               	movlw	3
  2179  0004D6  EC04  F00C         	call	_Delay_Routine
  2180                           
  2181                           ;buttonchanges.c: 96: if(PORTBbits.RB0 == 1) {
  2182  0004DA  A081               	btfss	3969,0,c	;volatile
  2183  0004DC  D002               	goto	l3249
  2184                           
  2185                           ;buttonchanges.c: 97: testflag = 1;
  2186  0004DE  8639               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2187                           
  2188                           ;buttonchanges.c: 98: return;
  2189  0004E0  0012               	return	
  2190  0004E2                     l3249:
  2191                           
  2192                           ;buttonchanges.c: 100: }
  2193                           ;buttonchanges.c: 101: }
  2194                           ;buttonchanges.c: 102: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2195  0004E2  0100               	movlb	0	; () banked
  2196  0004E4  5181               	movf	_pin_selected& (0+255),w,b
  2197  0004E6  0D06               	mullw	6
  2198  0004E8  0E04               	movlw	4
  2199  0004EA  26F3               	addwf	prodl,f,c
  2200  0004EC  0E00               	movlw	0
  2201  0004EE  22F4               	addwfc	prodh,f,c
  2202  0004F0  0E00               	movlw	low _pin
  2203  0004F2  24F3               	addwf	prodl,w,c
  2204  0004F4  6ED9               	movwf	fsr2l,c
  2205  0004F6  0E01               	movlw	high _pin
  2206  0004F8  20F4               	addwfc	prodh,w,c
  2207  0004FA  6EDA               	movwf	fsr2h,c
  2208  0004FC  CFDE F060          	movff	postinc2,Save_Data@store
  2209  000500  CFDD F061          	movff	postdec2,Save_Data@store+1
  2210  000504  0100               	movlb	0	; () banked
  2211  000506  5181               	movf	_pin_selected& (0+255),w,b
  2212  000508  0D06               	mullw	6
  2213  00050A  0E02               	movlw	2
  2214  00050C  26F3               	addwf	prodl,f,c
  2215  00050E  0E00               	movlw	0
  2216  000510  22F4               	addwfc	prodh,f,c
  2217  000512  0E00               	movlw	low _pin
  2218  000514  24F3               	addwf	prodl,w,c
  2219  000516  6ED9               	movwf	fsr2l,c
  2220  000518  0E01               	movlw	high _pin
  2221  00051A  20F4               	addwfc	prodh,w,c
  2222  00051C  6EDA               	movwf	fsr2h,c
  2223  00051E  50DF               	movf	indf2,w,c
  2224  000520  0100               	movlb	0	; () banked
  2225  000522  6F62               	movwf	Save_Data@store_address& (0+255),b
  2226  000524  EC6B  F00A         	call	_Save_Data	;wreg free
  2227                           
  2228                           ;buttonchanges.c: 103: pin_selected++;
  2229  000528  0100               	movlb	0	; () banked
  2230  00052A  2B81               	incf	_pin_selected& (0+255),f,b
  2231                           
  2232                           ;buttonchanges.c: 104: switch (slave_selected) {
  2233  00052C  D014               	goto	l3267
  2234  00052E                     l3253:
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;buttonchanges.c: 106: if(pin_selected > 9) {
  2238  00052E  0E09               	movlw	9
  2239  000530  0100               	movlb	0	; () banked
  2240  000532  6581               	cpfsgt	_pin_selected& (0+255),b
  2241  000534  D01B               	goto	l3269
  2242                           
  2243                           ; BSR set to: 0
  2244                           ;buttonchanges.c: 107: pin_selected = 0;
  2245  000536  0E00               	movlw	0
  2246  000538  D00B               	goto	L2
  2247  00053A                     l3257:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;buttonchanges.c: 111: if(pin_selected > 19) {
  2251  00053A  0E13               	movlw	19
  2252  00053C  0100               	movlb	0	; () banked
  2253  00053E  6581               	cpfsgt	_pin_selected& (0+255),b
  2254  000540  D015               	goto	l3269
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;buttonchanges.c: 112: pin_selected = 10;
  2258  000542  0E0A               	movlw	10
  2259  000544  D005               	goto	L2
  2260  000546                     l3261:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;buttonchanges.c: 116: if(pin_selected > 29) {
  2264  000546  0E1D               	movlw	29
  2265  000548  0100               	movlb	0	; () banked
  2266  00054A  6581               	cpfsgt	_pin_selected& (0+255),b
  2267  00054C  D00F               	goto	l3269
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;buttonchanges.c: 117: pin_selected = 20;
  2271  00054E  0E14               	movlw	20
  2272  000550                     L2:
  2273  000550  0100               	movlb	0	; () banked
  2274  000552  6F81               	movwf	_pin_selected& (0+255),b
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;buttonchanges.c: 120: }
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;buttonchanges.c: 118: }
  2281                           ;buttonchanges.c: 119: break;
  2282  000554  D00B               	goto	l3269
  2283  000556                     l3267:
  2284                           
  2285                           ; BSR set to: 0
  2286  000556  0100               	movlb	0	; () banked
  2287  000558  5182               	movf	_slave_selected& (0+255),w,b
  2288                           
  2289                           ; Switch size 1, requested type "space"
  2290                           ; Number of cases is 3, Range of values is 0 to 2
  2291                           ; switch strategies available:
  2292                           ; Name         Instructions Cycles
  2293                           ; simple_byte           10     6 (average)
  2294                           ;	Chosen strategy is simple_byte
  2295  00055A  0A00               	xorlw	0	; case 0
  2296  00055C  B4D8               	btfsc	status,2,c
  2297  00055E  D7E7               	goto	l3253
  2298  000560  0A01               	xorlw	1	; case 1
  2299  000562  B4D8               	btfsc	status,2,c
  2300  000564  D7EA               	goto	l3257
  2301  000566  0A03               	xorlw	3	; case 2
  2302  000568  B4D8               	btfsc	status,2,c
  2303  00056A  D7ED               	goto	l3261
  2304  00056C                     l3269:
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;buttonchanges.c: 121: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2308  00056C  0100               	movlb	0	; () banked
  2309  00056E  5181               	movf	_pin_selected& (0+255),w,b
  2310  000570  0D06               	mullw	6
  2311  000572  0E02               	movlw	2
  2312  000574  26F3               	addwf	prodl,f,c
  2313  000576  0E00               	movlw	0
  2314  000578  22F4               	addwfc	prodh,f,c
  2315  00057A  0E00               	movlw	low _pin
  2316  00057C  24F3               	addwf	prodl,w,c
  2317  00057E  6ED9               	movwf	fsr2l,c
  2318  000580  0E01               	movlw	high _pin
  2319  000582  20F4               	addwfc	prodh,w,c
  2320  000584  6EDA               	movwf	fsr2h,c
  2321  000586  50DF               	movf	indf2,w,c
  2322  000588  ECEA  F00A         	call	_Read_Data
  2323  00058C  0100               	movlb	0	; () banked
  2324  00058E  5181               	movf	_pin_selected& (0+255),w,b
  2325  000590  0D06               	mullw	6
  2326  000592  0E04               	movlw	4
  2327  000594  26F3               	addwf	prodl,f,c
  2328  000596  0E00               	movlw	0
  2329  000598  22F4               	addwfc	prodh,f,c
  2330  00059A  0E00               	movlw	low _pin
  2331  00059C  24F3               	addwf	prodl,w,c
  2332  00059E  6ED9               	movwf	fsr2l,c
  2333  0005A0  0E01               	movlw	high _pin
  2334  0005A2  20F4               	addwfc	prodh,w,c
  2335  0005A4  6EDA               	movwf	fsr2h,c
  2336  0005A6  0100               	movlb	0	; () banked
  2337  0005A8  C060  FFDE         	movff	?_Read_Data,postinc2
  2338  0005AC  0100               	movlb	0	; () banked
  2339  0005AE  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;buttonchanges.c: 122: __nop();
  2343  0005B2  F000               	nop	
  2344                           
  2345                           ;buttonchanges.c: 123: Set_Display('7', 'A', pin[pin_selected].output);
  2346  0005B4  0E41               	movlw	65
  2347  0005B6  0100               	movlb	0	; () banked
  2348  0005B8  6F77               	movwf	Set_Display@information& (0+255),b
  2349  0005BA  0100               	movlb	0	; () banked
  2350  0005BC  5181               	movf	_pin_selected& (0+255),w,b
  2351  0005BE  0D06               	mullw	6
  2352  0005C0  0E01               	movlw	1
  2353  0005C2  26F3               	addwf	prodl,f,c
  2354  0005C4  0E00               	movlw	0
  2355  0005C6  22F4               	addwfc	prodh,f,c
  2356  0005C8  0E00               	movlw	low _pin
  2357  0005CA  24F3               	addwf	prodl,w,c
  2358  0005CC  6ED9               	movwf	fsr2l,c
  2359  0005CE  0E01               	movlw	high _pin
  2360  0005D0  20F4               	addwfc	prodh,w,c
  2361  0005D2  6EDA               	movwf	fsr2h,c
  2362  0005D4  50DF               	movf	indf2,w,c
  2363  0005D6  0100               	movlb	0	; () banked
  2364  0005D8  6F7E               	movwf	??_Check_Buttons& (0+255),b
  2365  0005DA  0100               	movlb	0	; () banked
  2366  0005DC  517E               	movf	??_Check_Buttons& (0+255),w,b
  2367  0005DE  0100               	movlb	0	; () banked
  2368  0005E0  6F78               	movwf	Set_Display@value& (0+255),b
  2369  0005E2  6B79               	clrf	(Set_Display@value+1)& (0+255),b
  2370  0005E4  0E37               	movlw	55
  2371  0005E6  ECAA  F009         	call	_Set_Display
  2372                           
  2373                           ;buttonchanges.c: 124: Delay_Routine(30);
  2374  0005EA  0E1E               	movlw	30
  2375  0005EC  EC04  F00C         	call	_Delay_Routine
  2376                           
  2377                           ;buttonchanges.c: 125: Set_Display('7', '-', pin[pin_selected].time);
  2378  0005F0  0E2D               	movlw	45
  2379  0005F2  0100               	movlb	0	; () banked
  2380  0005F4  6F77               	movwf	Set_Display@information& (0+255),b
  2381  0005F6  0100               	movlb	0	; () banked
  2382  0005F8  5181               	movf	_pin_selected& (0+255),w,b
  2383  0005FA  0D06               	mullw	6
  2384  0005FC  0E04               	movlw	4
  2385  0005FE  26F3               	addwf	prodl,f,c
  2386  000600  0E00               	movlw	0
  2387  000602  22F4               	addwfc	prodh,f,c
  2388  000604  0E00               	movlw	low _pin
  2389  000606  24F3               	addwf	prodl,w,c
  2390  000608  6ED9               	movwf	fsr2l,c
  2391  00060A  0E01               	movlw	high _pin
  2392  00060C  20F4               	addwfc	prodh,w,c
  2393  00060E  6EDA               	movwf	fsr2h,c
  2394  000610  CFDE F078          	movff	postinc2,Set_Display@value
  2395  000614  CFDD F079          	movff	postdec2,Set_Display@value+1
  2396  000618  0E37               	movlw	55
  2397  00061A  ECAA  F009         	call	_Set_Display
  2398                           
  2399                           ;buttonchanges.c: 126: Delay_Routine(30);
  2400  00061E  0E1E               	movlw	30
  2401  000620  EC04  F00C         	call	_Delay_Routine
  2402                           
  2403                           ;buttonchanges.c: 127: __nop();
  2404  000624  F000               	nop	
  2405                           
  2406                           ;buttonchanges.c: 128: }
  2407                           ;buttonchanges.c: 129: } else if(PORTBbits.RB0 == 1) {
  2408  000626  0012               	return	
  2409  000628                     l122:
  2410  000628  A081               	btfss	3969,0,c	;volatile
  2411  00062A  D0B8               	goto	l135
  2412                           
  2413                           ;buttonchanges.c: 130: Delay_Routine(3);
  2414  00062C  0E03               	movlw	3
  2415  00062E  EC04  F00C         	call	_Delay_Routine
  2416                           
  2417                           ;buttonchanges.c: 131: if(PORTBbits.RB0 == 1) {
  2418  000632  A081               	btfss	3969,0,c	;volatile
  2419  000634  0012               	return	
  2420                           
  2421                           ;buttonchanges.c: 132: __nop();
  2422  000636  F000               	nop	
  2423                           
  2424                           ;buttonchanges.c: 133: if(PORTBbits.RB1 == 1) {
  2425  000638  A281               	btfss	3969,1,c	;volatile
  2426  00063A  D007               	goto	l3295
  2427                           
  2428                           ;buttonchanges.c: 134: Delay_Routine(3);
  2429  00063C  0E03               	movlw	3
  2430  00063E  EC04  F00C         	call	_Delay_Routine
  2431                           
  2432                           ;buttonchanges.c: 135: if(PORTBbits.RB1 == 1) {
  2433  000642  A281               	btfss	3969,1,c	;volatile
  2434  000644  D002               	goto	l3295
  2435                           
  2436                           ;buttonchanges.c: 136: testflag = 1;
  2437  000646  8639               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2438                           
  2439                           ;buttonchanges.c: 137: return;
  2440  000648  0012               	return	
  2441  00064A                     l3295:
  2442                           
  2443                           ;buttonchanges.c: 139: }
  2444                           ;buttonchanges.c: 140: }
  2445                           ;buttonchanges.c: 141: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2446  00064A  0100               	movlb	0	; () banked
  2447  00064C  5181               	movf	_pin_selected& (0+255),w,b
  2448  00064E  0D06               	mullw	6
  2449  000650  0E04               	movlw	4
  2450  000652  26F3               	addwf	prodl,f,c
  2451  000654  0E00               	movlw	0
  2452  000656  22F4               	addwfc	prodh,f,c
  2453  000658  0E00               	movlw	low _pin
  2454  00065A  24F3               	addwf	prodl,w,c
  2455  00065C  6ED9               	movwf	fsr2l,c
  2456  00065E  0E01               	movlw	high _pin
  2457  000660  20F4               	addwfc	prodh,w,c
  2458  000662  6EDA               	movwf	fsr2h,c
  2459  000664  CFDE F060          	movff	postinc2,Save_Data@store
  2460  000668  CFDD F061          	movff	postdec2,Save_Data@store+1
  2461  00066C  0100               	movlb	0	; () banked
  2462  00066E  5181               	movf	_pin_selected& (0+255),w,b
  2463  000670  0D06               	mullw	6
  2464  000672  0E02               	movlw	2
  2465  000674  26F3               	addwf	prodl,f,c
  2466  000676  0E00               	movlw	0
  2467  000678  22F4               	addwfc	prodh,f,c
  2468  00067A  0E00               	movlw	low _pin
  2469  00067C  24F3               	addwf	prodl,w,c
  2470  00067E  6ED9               	movwf	fsr2l,c
  2471  000680  0E01               	movlw	high _pin
  2472  000682  20F4               	addwfc	prodh,w,c
  2473  000684  6EDA               	movwf	fsr2h,c
  2474  000686  50DF               	movf	indf2,w,c
  2475  000688  0100               	movlb	0	; () banked
  2476  00068A  6F62               	movwf	Save_Data@store_address& (0+255),b
  2477  00068C  EC6B  F00A         	call	_Save_Data	;wreg free
  2478                           
  2479                           ;buttonchanges.c: 142: slave_selected++;
  2480  000690  0100               	movlb	0	; () banked
  2481  000692  2B82               	incf	_slave_selected& (0+255),f,b
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;buttonchanges.c: 143: if(slave_selected > 2) {
  2485  000694  0E02               	movlw	2
  2486  000696  0100               	movlb	0	; () banked
  2487  000698  6582               	cpfsgt	_slave_selected& (0+255),b
  2488  00069A  D003               	goto	l3303
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;buttonchanges.c: 144: slave_selected = 0;
  2492  00069C  0E00               	movlw	0
  2493  00069E  0100               	movlb	0	; () banked
  2494  0006A0  6F82               	movwf	_slave_selected& (0+255),b
  2495  0006A2                     l3303:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;buttonchanges.c: 145: }
  2499                           ;buttonchanges.c: 146: pin_selected = slave_selected * 10;
  2500  0006A2  0100               	movlb	0	; () banked
  2501  0006A4  5182               	movf	_slave_selected& (0+255),w,b
  2502  0006A6  0D0A               	mullw	10
  2503  0006A8  CFF3 F081          	movff	prodl,_pin_selected
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;buttonchanges.c: 147: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2507  0006AC  0100               	movlb	0	; () banked
  2508  0006AE  5181               	movf	_pin_selected& (0+255),w,b
  2509  0006B0  0D06               	mullw	6
  2510  0006B2  0E02               	movlw	2
  2511  0006B4  26F3               	addwf	prodl,f,c
  2512  0006B6  0E00               	movlw	0
  2513  0006B8  22F4               	addwfc	prodh,f,c
  2514  0006BA  0E00               	movlw	low _pin
  2515  0006BC  24F3               	addwf	prodl,w,c
  2516  0006BE  6ED9               	movwf	fsr2l,c
  2517  0006C0  0E01               	movlw	high _pin
  2518  0006C2  20F4               	addwfc	prodh,w,c
  2519  0006C4  6EDA               	movwf	fsr2h,c
  2520  0006C6  50DF               	movf	indf2,w,c
  2521  0006C8  ECEA  F00A         	call	_Read_Data
  2522  0006CC  0100               	movlb	0	; () banked
  2523  0006CE  5181               	movf	_pin_selected& (0+255),w,b
  2524  0006D0  0D06               	mullw	6
  2525  0006D2  0E04               	movlw	4
  2526  0006D4  26F3               	addwf	prodl,f,c
  2527  0006D6  0E00               	movlw	0
  2528  0006D8  22F4               	addwfc	prodh,f,c
  2529  0006DA  0E00               	movlw	low _pin
  2530  0006DC  24F3               	addwf	prodl,w,c
  2531  0006DE  6ED9               	movwf	fsr2l,c
  2532  0006E0  0E01               	movlw	high _pin
  2533  0006E2  20F4               	addwfc	prodh,w,c
  2534  0006E4  6EDA               	movwf	fsr2h,c
  2535  0006E6  0100               	movlb	0	; () banked
  2536  0006E8  C060  FFDE         	movff	?_Read_Data,postinc2
  2537  0006EC  0100               	movlb	0	; () banked
  2538  0006EE  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;buttonchanges.c: 148: __nop();
  2542  0006F2  F000               	nop	
  2543                           
  2544                           ;buttonchanges.c: 149: Set_Display('7', 'E', pin[pin_selected].slave);
  2545  0006F4  0E45               	movlw	69
  2546  0006F6  0100               	movlb	0	; () banked
  2547  0006F8  6F77               	movwf	Set_Display@information& (0+255),b
  2548  0006FA  0100               	movlb	0	; () banked
  2549  0006FC  5181               	movf	_pin_selected& (0+255),w,b
  2550  0006FE  0D06               	mullw	6
  2551  000700  0E00               	movlw	low _pin
  2552  000702  24F3               	addwf	prodl,w,c
  2553  000704  6ED9               	movwf	fsr2l,c
  2554  000706  0E01               	movlw	high _pin
  2555  000708  20F4               	addwfc	prodh,w,c
  2556  00070A  6EDA               	movwf	fsr2h,c
  2557  00070C  50DF               	movf	indf2,w,c
  2558  00070E  0100               	movlb	0	; () banked
  2559  000710  6F7E               	movwf	??_Check_Buttons& (0+255),b
  2560  000712  0100               	movlb	0	; () banked
  2561  000714  517E               	movf	??_Check_Buttons& (0+255),w,b
  2562  000716  0100               	movlb	0	; () banked
  2563  000718  6F78               	movwf	Set_Display@value& (0+255),b
  2564  00071A  6B79               	clrf	(Set_Display@value+1)& (0+255),b
  2565  00071C  0E37               	movlw	55
  2566  00071E  ECAA  F009         	call	_Set_Display
  2567                           
  2568                           ;buttonchanges.c: 151: Delay_Routine(30);
  2569  000722  0E1E               	movlw	30
  2570  000724  EC04  F00C         	call	_Delay_Routine
  2571                           
  2572                           ;buttonchanges.c: 152: Set_Display('7', 'A', pin[pin_selected].output);
  2573  000728  0E41               	movlw	65
  2574  00072A  0100               	movlb	0	; () banked
  2575  00072C  6F77               	movwf	Set_Display@information& (0+255),b
  2576  00072E  0100               	movlb	0	; () banked
  2577  000730  5181               	movf	_pin_selected& (0+255),w,b
  2578  000732  0D06               	mullw	6
  2579  000734  0E01               	movlw	1
  2580  000736  26F3               	addwf	prodl,f,c
  2581  000738  0E00               	movlw	0
  2582  00073A  22F4               	addwfc	prodh,f,c
  2583  00073C  0E00               	movlw	low _pin
  2584  00073E  24F3               	addwf	prodl,w,c
  2585  000740  6ED9               	movwf	fsr2l,c
  2586  000742  0E01               	movlw	high _pin
  2587  000744  20F4               	addwfc	prodh,w,c
  2588  000746  6EDA               	movwf	fsr2h,c
  2589  000748  50DF               	movf	indf2,w,c
  2590  00074A  0100               	movlb	0	; () banked
  2591  00074C  6F7E               	movwf	??_Check_Buttons& (0+255),b
  2592  00074E  0100               	movlb	0	; () banked
  2593  000750  517E               	movf	??_Check_Buttons& (0+255),w,b
  2594  000752  0100               	movlb	0	; () banked
  2595  000754  6F78               	movwf	Set_Display@value& (0+255),b
  2596  000756  6B79               	clrf	(Set_Display@value+1)& (0+255),b
  2597  000758  0E37               	movlw	55
  2598  00075A  ECAA  F009         	call	_Set_Display
  2599                           
  2600                           ;buttonchanges.c: 153: Delay_Routine(30);
  2601  00075E  0E1E               	movlw	30
  2602  000760  EC04  F00C         	call	_Delay_Routine
  2603                           
  2604                           ;buttonchanges.c: 154: Set_Display('7', '-', pin[pin_selected].time);
  2605  000764  0E2D               	movlw	45
  2606  000766  0100               	movlb	0	; () banked
  2607  000768  6F77               	movwf	Set_Display@information& (0+255),b
  2608  00076A  0100               	movlb	0	; () banked
  2609  00076C  5181               	movf	_pin_selected& (0+255),w,b
  2610  00076E  0D06               	mullw	6
  2611  000770  0E04               	movlw	4
  2612  000772  26F3               	addwf	prodl,f,c
  2613  000774  0E00               	movlw	0
  2614  000776  22F4               	addwfc	prodh,f,c
  2615  000778  0E00               	movlw	low _pin
  2616  00077A  24F3               	addwf	prodl,w,c
  2617  00077C  6ED9               	movwf	fsr2l,c
  2618  00077E  0E01               	movlw	high _pin
  2619  000780  20F4               	addwfc	prodh,w,c
  2620  000782  6EDA               	movwf	fsr2h,c
  2621  000784  CFDE F078          	movff	postinc2,Set_Display@value
  2622  000788  CFDD F079          	movff	postdec2,Set_Display@value+1
  2623  00078C  0E37               	movlw	55
  2624  00078E  ECAA  F009         	call	_Set_Display
  2625                           
  2626                           ;buttonchanges.c: 155: Delay_Routine(30);
  2627  000792  0E1E               	movlw	30
  2628  000794  EC04  F00C         	call	_Delay_Routine
  2629                           
  2630                           ;buttonchanges.c: 156: __nop();
  2631  000798  F000               	nop	
  2632                           
  2633                           ;buttonchanges.c: 157: }
  2634                           ;buttonchanges.c: 158: } else {
  2635  00079A  0012               	return	
  2636  00079C                     l135:
  2637                           
  2638                           ;buttonchanges.c: 159: __nop();
  2639  00079C  F000               	nop	
  2640  00079E  0012               	return	
  2641  0007A0                     __end_of_Check_Buttons:
  2642                           	opt stack 0
  2643                           tblptru	equ	0xFF8
  2644                           tblptrh	equ	0xFF7
  2645                           tblptrl	equ	0xFF6
  2646                           tablat	equ	0xFF5
  2647                           prodh	equ	0xFF4
  2648                           prodl	equ	0xFF3
  2649                           intcon	equ	0xFF2
  2650                           postinc0	equ	0xFEE
  2651                           wreg	equ	0xFE8
  2652                           postdec1	equ	0xFE5
  2653                           fsr1l	equ	0xFE1
  2654                           indf2	equ	0xFDF
  2655                           postinc2	equ	0xFDE
  2656                           postdec2	equ	0xFDD
  2657                           plusw2	equ	0xFDB
  2658                           fsr2h	equ	0xFDA
  2659                           fsr2l	equ	0xFD9
  2660                           status	equ	0xFD8
  2661                           
  2662 ;; *************** function _Start_Timer *****************
  2663 ;; Defined at:
  2664 ;;		line 12 in file "ignition.c"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;		None
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;		None
  2669 ;; Return value:  Size  Location     Type
  2670 ;;		None               void
  2671 ;; Registers used:
  2672 ;;		wreg, status,2
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1
  2678 ;;      Params:         0       0       0
  2679 ;;      Locals:         0       0       0
  2680 ;;      Temps:          0       0       0
  2681 ;;      Totals:         0       0       0
  2682 ;;Total ram usage:        0 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    5
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_Check_Buttons
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text12
  2693  0018A8                     __ptext12:
  2694                           	opt stack 0
  2695  0018A8                     _Start_Timer:
  2696                           	opt stack 24
  2697                           
  2698                           ;ignition.c: 13: if(ignite_ready == 1) {
  2699                           
  2700                           ;incstack = 0
  2701  0018A8  A039               	btfss	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  2702  0018AA  0012               	return	
  2703                           
  2704                           ;ignition.c: 14: TMR1L = 0;
  2705  0018AC  0E00               	movlw	0
  2706  0018AE  6ECE               	movwf	4046,c	;volatile
  2707                           
  2708                           ;ignition.c: 15: TMR1H = 0;
  2709  0018B0  0E00               	movlw	0
  2710  0018B2  6ECF               	movwf	4047,c	;volatile
  2711                           
  2712                           ;ignition.c: 16: TMR3L = 0;
  2713  0018B4  0E00               	movlw	0
  2714  0018B6  6EB2               	movwf	4018,c	;volatile
  2715                           
  2716                           ;ignition.c: 17: TMR3H = 0;
  2717  0018B8  0E00               	movlw	0
  2718  0018BA  6EB3               	movwf	4019,c	;volatile
  2719                           
  2720                           ;ignition.c: 18: PIR1bits.TMR1IF = 0;
  2721  0018BC  909E               	bcf	3998,0,c	;volatile
  2722                           
  2723                           ;ignition.c: 19: PIR2bits.TMR3IF = 0;
  2724  0018BE  92A1               	bcf	4001,1,c	;volatile
  2725                           
  2726                           ;ignition.c: 20: T1CONbits.TMR1ON = 1;
  2727  0018C0  80CD               	bsf	4045,0,c	;volatile
  2728  0018C2  0012               	return	
  2729  0018C4                     __end_of_Start_Timer:
  2730                           	opt stack 0
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           prodh	equ	0xFF4
  2736                           prodl	equ	0xFF3
  2737                           intcon	equ	0xFF2
  2738                           postinc0	equ	0xFEE
  2739                           wreg	equ	0xFE8
  2740                           postdec1	equ	0xFE5
  2741                           fsr1l	equ	0xFE1
  2742                           indf2	equ	0xFDF
  2743                           postinc2	equ	0xFDE
  2744                           postdec2	equ	0xFDD
  2745                           plusw2	equ	0xFDB
  2746                           fsr2h	equ	0xFDA
  2747                           fsr2l	equ	0xFD9
  2748                           status	equ	0xFD8
  2749                           
  2750 ;; *************** function _Del_Data *****************
  2751 ;; Defined at:
  2752 ;;		line 90 in file "storage.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  counter         1   29[BANK0 ] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;		None               void
  2759 ;; Registers used:
  2760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1
  2766 ;;      Params:         0       0       0
  2767 ;;      Locals:         0       1       0
  2768 ;;      Temps:          0       0       0
  2769 ;;      Totals:         0       1       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:   10
  2773 ;; This function calls:
  2774 ;;		_Delay_Routine
  2775 ;;		_Evaluate_Display
  2776 ;;		_Load_Data
  2777 ;;		_Save_Data
  2778 ;; This function is called by:
  2779 ;;		_Check_Buttons
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text13
  2784  00147C                     __ptext13:
  2785                           	opt stack 0
  2786  00147C                     _Del_Data:
  2787                           	opt stack 19
  2788                           
  2789                           ;storage.c: 91: string_delete[0] = 'D';
  2790                           
  2791                           ;incstack = 0
  2792  00147C  0E44               	movlw	68
  2793  00147E  0100               	movlb	0	; () banked
  2794  001480  6F8E               	movwf	_string_delete& (0+255),b
  2795                           
  2796                           ;storage.c: 92: string_delete[1] = 'E';
  2797  001482  0E45               	movlw	69
  2798  001484  0100               	movlb	0	; () banked
  2799  001486  6F8F               	movwf	(_string_delete+1)& (0+255),b
  2800                           
  2801                           ;storage.c: 93: string_delete[2] = 'L';
  2802  001488  0E4C               	movlw	76
  2803  00148A  0100               	movlb	0	; () banked
  2804  00148C  6F90               	movwf	(_string_delete+2)& (0+255),b
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;storage.c: 95: Evaluate_Display(3, string_delete);
  2808  00148E  0E8E               	movlw	low _string_delete
  2809  001490  0100               	movlb	0	; () banked
  2810  001492  6F69               	movwf	Evaluate_Display@evaluate& (0+255),b
  2811  001494  0E00               	movlw	high _string_delete
  2812  001496  0100               	movlb	0	; () banked
  2813  001498  6F6A               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  2814  00149A  0E03               	movlw	3
  2815  00149C  ECD0  F003         	call	_Evaluate_Display
  2816                           
  2817                           ;storage.c: 96: Delay_Routine(3);
  2818  0014A0  0E03               	movlw	3
  2819  0014A2  EC04  F00C         	call	_Delay_Routine
  2820                           
  2821                           ;storage.c: 97: for(unsigned char counter = 0; counter < 30; counter++) {
  2822  0014A6  0E00               	movlw	0
  2823  0014A8  0100               	movlb	0	; () banked
  2824  0014AA  6F7D               	movwf	Del_Data@counter& (0+255),b
  2825  0014AC                     l3095:
  2826                           
  2827                           ; BSR set to: 0
  2828  0014AC  0E1D               	movlw	29
  2829  0014AE  0100               	movlb	0	; () banked
  2830  0014B0  657D               	cpfsgt	Del_Data@counter& (0+255),b
  2831  0014B2  D001               	goto	l3099
  2832  0014B4  D00C               	goto	l3105
  2833  0014B6                     l3099:
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;storage.c: 98: Save_Data(0, counter);
  2837  0014B6  0E00               	movlw	0
  2838  0014B8  0100               	movlb	0	; () banked
  2839  0014BA  6F61               	movwf	(Save_Data@store+1)& (0+255),b
  2840  0014BC  0E00               	movlw	0
  2841  0014BE  6F60               	movwf	Save_Data@store& (0+255),b
  2842  0014C0  C07D  F062         	movff	Del_Data@counter,Save_Data@store_address
  2843  0014C4  EC6B  F00A         	call	_Save_Data	;wreg free
  2844  0014C8  0100               	movlb	0	; () banked
  2845  0014CA  2B7D               	incf	Del_Data@counter& (0+255),f,b
  2846  0014CC  D7EF               	goto	l3095
  2847  0014CE                     l3105:
  2848                           
  2849                           ; BSR set to: 0
  2850                           ;storage.c: 99: }
  2851                           ;storage.c: 100: Load_Data();
  2852  0014CE  EC64  F006         	call	_Load_Data	;wreg free
  2853                           
  2854                           ;storage.c: 101: __nop();
  2855  0014D2  F000               	nop	
  2856  0014D4  0012               	return		;funcret
  2857  0014D6                     __end_of_Del_Data:
  2858                           	opt stack 0
  2859                           tblptru	equ	0xFF8
  2860                           tblptrh	equ	0xFF7
  2861                           tblptrl	equ	0xFF6
  2862                           tablat	equ	0xFF5
  2863                           prodh	equ	0xFF4
  2864                           prodl	equ	0xFF3
  2865                           intcon	equ	0xFF2
  2866                           postinc0	equ	0xFEE
  2867                           wreg	equ	0xFE8
  2868                           postdec1	equ	0xFE5
  2869                           fsr1l	equ	0xFE1
  2870                           indf2	equ	0xFDF
  2871                           postinc2	equ	0xFDE
  2872                           postdec2	equ	0xFDD
  2873                           plusw2	equ	0xFDB
  2874                           fsr2h	equ	0xFDA
  2875                           fsr2l	equ	0xFD9
  2876                           status	equ	0xFD8
  2877                           
  2878 ;; *************** function _Save_Data *****************
  2879 ;; Defined at:
  2880 ;;		line 8 in file "storage.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  store           2    0[BANK0 ] unsigned int 
  2883 ;;  store_addres    1    2[BANK0 ] unsigned char 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1
  2895 ;;      Params:         0       3       0
  2896 ;;      Locals:         0       0       0
  2897 ;;      Temps:          0       0       0
  2898 ;;      Totals:         0       3       0
  2899 ;;Total ram usage:        3 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    5
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_Check_Buttons
  2906 ;;		_Del_Data
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           	psect	text14
  2911  0014D6                     __ptext14:
  2912                           	opt stack 0
  2913  0014D6                     _Save_Data:
  2914                           	opt stack 24
  2915                           
  2916                           ;storage.c: 10: EEADR = store_address;
  2917                           
  2918                           ;incstack = 0
  2919  0014D6  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2920                           
  2921                           ;storage.c: 11: EEDATA = store;
  2922  0014DA  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2923                           
  2924                           ;storage.c: 12: EECON1bits.EEPGD = 0;
  2925  0014DE  9EA6               	bcf	4006,7,c	;volatile
  2926                           
  2927                           ;storage.c: 13: EECON1bits.CFGS = 0;
  2928  0014E0  9CA6               	bcf	4006,6,c	;volatile
  2929                           
  2930                           ;storage.c: 14: INTCONbits.GIE = 0;
  2931  0014E2  9EF2               	bcf	intcon,7,c	;volatile
  2932                           
  2933                           ;storage.c: 15: EECON1bits.WREN = 1;
  2934  0014E4  84A6               	bsf	4006,2,c	;volatile
  2935                           
  2936                           ;storage.c: 16: EECON2 = 0x55;
  2937  0014E6  0E55               	movlw	85
  2938  0014E8  6EA7               	movwf	4007,c	;volatile
  2939                           
  2940                           ;storage.c: 17: EECON2 = 0xAA;
  2941  0014EA  0EAA               	movlw	170
  2942  0014EC  6EA7               	movwf	4007,c	;volatile
  2943                           
  2944                           ;storage.c: 18: EECON1bits.WR = 1;
  2945  0014EE  82A6               	bsf	4006,1,c	;volatile
  2946  0014F0                     l362:
  2947  0014F0  A8A1               	btfss	4001,4,c	;volatile
  2948  0014F2  D7FE               	goto	l362
  2949                           
  2950                           ;storage.c: 20: PIR2bits.EEIF = 0;
  2951  0014F4  98A1               	bcf	4001,4,c	;volatile
  2952                           
  2953                           ;storage.c: 21: store >>= 8;
  2954  0014F6  0100               	movlb	0	; () banked
  2955  0014F8  5161               	movf	(Save_Data@store+1)& (0+255),w,b
  2956  0014FA  6F60               	movwf	Save_Data@store& (0+255),b
  2957  0014FC  6B61               	clrf	(Save_Data@store+1)& (0+255),b
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;storage.c: 22: store_address += 50;
  2961  0014FE  0E32               	movlw	50
  2962  001500  0100               	movlb	0	; () banked
  2963  001502  2762               	addwf	Save_Data@store_address& (0+255),f,b
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;storage.c: 23: EEADR = store_address;
  2967  001504  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2968                           
  2969                           ; BSR set to: 0
  2970                           ;storage.c: 24: EEDATA = store;
  2971  001508  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;storage.c: 25: EECON1bits.EEPGD = 0;
  2975  00150C  9EA6               	bcf	4006,7,c	;volatile
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;storage.c: 26: EECON1bits.CFGS = 0;
  2979  00150E  9CA6               	bcf	4006,6,c	;volatile
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;storage.c: 27: EECON1bits.WREN = 1;
  2983  001510  84A6               	bsf	4006,2,c	;volatile
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;storage.c: 28: INTCONbits.GIE = 0;
  2987  001512  9EF2               	bcf	intcon,7,c	;volatile
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;storage.c: 29: EECON2 = 0x55;
  2991  001514  0E55               	movlw	85
  2992  001516  6EA7               	movwf	4007,c	;volatile
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;storage.c: 30: EECON2 = 0xAA;
  2996  001518  0EAA               	movlw	170
  2997  00151A  6EA7               	movwf	4007,c	;volatile
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;storage.c: 31: EECON1bits.WR = 1;
  3001  00151C  82A6               	bsf	4006,1,c	;volatile
  3002  00151E                     l365:
  3003  00151E  A8A1               	btfss	4001,4,c	;volatile
  3004  001520  D7FE               	goto	l365
  3005                           
  3006                           ;storage.c: 33: PIR2bits.EEIF = 0;
  3007  001522  98A1               	bcf	4001,4,c	;volatile
  3008                           
  3009                           ;storage.c: 34: EECON1bits.WREN = 0;
  3010  001524  94A6               	bcf	4006,2,c	;volatile
  3011                           
  3012                           ;storage.c: 35: INTCONbits.GIE = 1;
  3013  001526  8EF2               	bsf	intcon,7,c	;volatile
  3014                           
  3015                           ;storage.c: 36: __nop();
  3016  001528  F000               	nop	
  3017  00152A  0012               	return		;funcret
  3018  00152C                     __end_of_Save_Data:
  3019                           	opt stack 0
  3020                           tblptru	equ	0xFF8
  3021                           tblptrh	equ	0xFF7
  3022                           tblptrl	equ	0xFF6
  3023                           tablat	equ	0xFF5
  3024                           prodh	equ	0xFF4
  3025                           prodl	equ	0xFF3
  3026                           intcon	equ	0xFF2
  3027                           postinc0	equ	0xFEE
  3028                           wreg	equ	0xFE8
  3029                           postdec1	equ	0xFE5
  3030                           fsr1l	equ	0xFE1
  3031                           indf2	equ	0xFDF
  3032                           postinc2	equ	0xFDE
  3033                           postdec2	equ	0xFDD
  3034                           plusw2	equ	0xFDB
  3035                           fsr2h	equ	0xFDA
  3036                           fsr2l	equ	0xFD9
  3037                           status	equ	0xFD8
  3038                           
  3039 ;; *************** function _Load_Data *****************
  3040 ;; Defined at:
  3041 ;;		line 66 in file "storage.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  counter         1   28[BANK0 ] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1
  3055 ;;      Params:         0       0       0
  3056 ;;      Locals:         0       1       0
  3057 ;;      Temps:          0       1       0
  3058 ;;      Totals:         0       2       0
  3059 ;;Total ram usage:        2 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    9
  3062 ;; This function calls:
  3063 ;;		_Delay_Routine
  3064 ;;		_Evaluate_Display
  3065 ;;		_Read_Data
  3066 ;;		_Set_Display
  3067 ;; This function is called by:
  3068 ;;		_main
  3069 ;;		_Del_Data
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text15
  3074  000CC8                     __ptext15:
  3075                           	opt stack 0
  3076  000CC8                     _Load_Data:
  3077                           	opt stack 21
  3078                           
  3079                           ;storage.c: 67: string_load[0] = 'L';
  3080                           
  3081                           ;incstack = 0
  3082  000CC8  0E4C               	movlw	76
  3083  000CCA  0100               	movlb	0	; () banked
  3084  000CCC  6F91               	movwf	_string_load& (0+255),b
  3085                           
  3086                           ;storage.c: 68: string_load[1] = 'O';
  3087  000CCE  0E4F               	movlw	79
  3088  000CD0  0100               	movlb	0	; () banked
  3089  000CD2  6F92               	movwf	(_string_load+1)& (0+255),b
  3090                           
  3091                           ;storage.c: 69: string_load[2] = 'A';
  3092  000CD4  0E41               	movlw	65
  3093  000CD6  0100               	movlb	0	; () banked
  3094  000CD8  6F93               	movwf	(_string_load+2)& (0+255),b
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;storage.c: 71: Evaluate_Display(3, string_load);
  3098  000CDA  0E91               	movlw	low _string_load
  3099  000CDC  0100               	movlb	0	; () banked
  3100  000CDE  6F69               	movwf	Evaluate_Display@evaluate& (0+255),b
  3101  000CE0  0E00               	movlw	high _string_load
  3102  000CE2  0100               	movlb	0	; () banked
  3103  000CE4  6F6A               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3104  000CE6  0E03               	movlw	3
  3105  000CE8  ECD0  F003         	call	_Evaluate_Display
  3106                           
  3107                           ;storage.c: 72: Delay_Routine(3);
  3108  000CEC  0E03               	movlw	3
  3109  000CEE  EC04  F00C         	call	_Delay_Routine
  3110                           
  3111                           ;storage.c: 73: for(unsigned char counter = 0; counter < 30; counter++) {
  3112  000CF2  0E00               	movlw	0
  3113  000CF4  0100               	movlb	0	; () banked
  3114  000CF6  6F7C               	movwf	Load_Data@counter& (0+255),b
  3115  000CF8                     l3025:
  3116                           
  3117                           ; BSR set to: 0
  3118  000CF8  0E1D               	movlw	29
  3119  000CFA  0100               	movlb	0	; () banked
  3120  000CFC  657C               	cpfsgt	Load_Data@counter& (0+255),b
  3121  000CFE  D001               	goto	l3029
  3122  000D00  D01A               	goto	l3035
  3123  000D02                     l3029:
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;storage.c: 74: pin[counter].time = Read_Data(counter);
  3127  000D02  0100               	movlb	0	; () banked
  3128  000D04  517C               	movf	Load_Data@counter& (0+255),w,b
  3129  000D06  ECEA  F00A         	call	_Read_Data
  3130  000D0A  0100               	movlb	0	; () banked
  3131  000D0C  517C               	movf	Load_Data@counter& (0+255),w,b
  3132  000D0E  0D06               	mullw	6
  3133  000D10  0E04               	movlw	4
  3134  000D12  26F3               	addwf	prodl,f,c
  3135  000D14  0E00               	movlw	0
  3136  000D16  22F4               	addwfc	prodh,f,c
  3137  000D18  0E00               	movlw	low _pin
  3138  000D1A  24F3               	addwf	prodl,w,c
  3139  000D1C  6ED9               	movwf	fsr2l,c
  3140  000D1E  0E01               	movlw	high _pin
  3141  000D20  20F4               	addwfc	prodh,w,c
  3142  000D22  6EDA               	movwf	fsr2h,c
  3143  000D24  0100               	movlb	0	; () banked
  3144  000D26  C060  FFDE         	movff	?_Read_Data,postinc2
  3145  000D2A  0100               	movlb	0	; () banked
  3146  000D2C  C061  FFDD         	movff	?_Read_Data+1,postdec2
  3147                           
  3148                           ; BSR set to: 0
  3149  000D30  0100               	movlb	0	; () banked
  3150  000D32  2B7C               	incf	Load_Data@counter& (0+255),f,b
  3151  000D34  D7E1               	goto	l3025
  3152  000D36                     l3035:
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;storage.c: 75: }
  3156                           ;storage.c: 76: slave_selected = 0;
  3157  000D36  0E00               	movlw	0
  3158  000D38  0100               	movlb	0	; () banked
  3159  000D3A  6F82               	movwf	_slave_selected& (0+255),b
  3160                           
  3161                           ;storage.c: 77: pin_selected = 0;
  3162  000D3C  0E00               	movlw	0
  3163  000D3E  0100               	movlb	0	; () banked
  3164  000D40  6F81               	movwf	_pin_selected& (0+255),b
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;storage.c: 78: Set_Display('7', 'E', pin[pin_selected].slave);
  3168  000D42  0E45               	movlw	69
  3169  000D44  0100               	movlb	0	; () banked
  3170  000D46  6F77               	movwf	Set_Display@information& (0+255),b
  3171  000D48  0100               	movlb	0	; () banked
  3172  000D4A  5181               	movf	_pin_selected& (0+255),w,b
  3173  000D4C  0D06               	mullw	6
  3174  000D4E  0E00               	movlw	low _pin
  3175  000D50  24F3               	addwf	prodl,w,c
  3176  000D52  6ED9               	movwf	fsr2l,c
  3177  000D54  0E01               	movlw	high _pin
  3178  000D56  20F4               	addwfc	prodh,w,c
  3179  000D58  6EDA               	movwf	fsr2h,c
  3180  000D5A  50DF               	movf	indf2,w,c
  3181  000D5C  0100               	movlb	0	; () banked
  3182  000D5E  6F7B               	movwf	??_Load_Data& (0+255),b
  3183  000D60  0100               	movlb	0	; () banked
  3184  000D62  517B               	movf	??_Load_Data& (0+255),w,b
  3185  000D64  0100               	movlb	0	; () banked
  3186  000D66  6F78               	movwf	Set_Display@value& (0+255),b
  3187  000D68  6B79               	clrf	(Set_Display@value+1)& (0+255),b
  3188  000D6A  0E37               	movlw	55
  3189  000D6C  ECAA  F009         	call	_Set_Display
  3190                           
  3191                           ;storage.c: 80: Delay_Routine(20);
  3192  000D70  0E14               	movlw	20
  3193  000D72  EC04  F00C         	call	_Delay_Routine
  3194                           
  3195                           ;storage.c: 81: Set_Display('7', 'A', pin[pin_selected].output);
  3196  000D76  0E41               	movlw	65
  3197  000D78  0100               	movlb	0	; () banked
  3198  000D7A  6F77               	movwf	Set_Display@information& (0+255),b
  3199  000D7C  0100               	movlb	0	; () banked
  3200  000D7E  5181               	movf	_pin_selected& (0+255),w,b
  3201  000D80  0D06               	mullw	6
  3202  000D82  0E01               	movlw	1
  3203  000D84  26F3               	addwf	prodl,f,c
  3204  000D86  0E00               	movlw	0
  3205  000D88  22F4               	addwfc	prodh,f,c
  3206  000D8A  0E00               	movlw	low _pin
  3207  000D8C  24F3               	addwf	prodl,w,c
  3208  000D8E  6ED9               	movwf	fsr2l,c
  3209  000D90  0E01               	movlw	high _pin
  3210  000D92  20F4               	addwfc	prodh,w,c
  3211  000D94  6EDA               	movwf	fsr2h,c
  3212  000D96  50DF               	movf	indf2,w,c
  3213  000D98  0100               	movlb	0	; () banked
  3214  000D9A  6F7B               	movwf	??_Load_Data& (0+255),b
  3215  000D9C  0100               	movlb	0	; () banked
  3216  000D9E  517B               	movf	??_Load_Data& (0+255),w,b
  3217  000DA0  0100               	movlb	0	; () banked
  3218  000DA2  6F78               	movwf	Set_Display@value& (0+255),b
  3219  000DA4  6B79               	clrf	(Set_Display@value+1)& (0+255),b
  3220  000DA6  0E37               	movlw	55
  3221  000DA8  ECAA  F009         	call	_Set_Display
  3222                           
  3223                           ;storage.c: 82: Delay_Routine(20);
  3224  000DAC  0E14               	movlw	20
  3225  000DAE  EC04  F00C         	call	_Delay_Routine
  3226                           
  3227                           ;storage.c: 83: Set_Display('7', '-', pin[pin_selected].time);
  3228  000DB2  0E2D               	movlw	45
  3229  000DB4  0100               	movlb	0	; () banked
  3230  000DB6  6F77               	movwf	Set_Display@information& (0+255),b
  3231  000DB8  0100               	movlb	0	; () banked
  3232  000DBA  5181               	movf	_pin_selected& (0+255),w,b
  3233  000DBC  0D06               	mullw	6
  3234  000DBE  0E04               	movlw	4
  3235  000DC0  26F3               	addwf	prodl,f,c
  3236  000DC2  0E00               	movlw	0
  3237  000DC4  22F4               	addwfc	prodh,f,c
  3238  000DC6  0E00               	movlw	low _pin
  3239  000DC8  24F3               	addwf	prodl,w,c
  3240  000DCA  6ED9               	movwf	fsr2l,c
  3241  000DCC  0E01               	movlw	high _pin
  3242  000DCE  20F4               	addwfc	prodh,w,c
  3243  000DD0  6EDA               	movwf	fsr2h,c
  3244  000DD2  CFDE F078          	movff	postinc2,Set_Display@value
  3245  000DD6  CFDD F079          	movff	postdec2,Set_Display@value+1
  3246  000DDA  0E37               	movlw	55
  3247  000DDC  ECAA  F009         	call	_Set_Display
  3248                           
  3249                           ;storage.c: 84: Delay_Routine(20);
  3250  000DE0  0E14               	movlw	20
  3251  000DE2  EC04  F00C         	call	_Delay_Routine
  3252  000DE6  0012               	return		;funcret
  3253  000DE8                     __end_of_Load_Data:
  3254                           	opt stack 0
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           prodh	equ	0xFF4
  3260                           prodl	equ	0xFF3
  3261                           intcon	equ	0xFF2
  3262                           postinc0	equ	0xFEE
  3263                           wreg	equ	0xFE8
  3264                           postdec1	equ	0xFE5
  3265                           fsr1l	equ	0xFE1
  3266                           indf2	equ	0xFDF
  3267                           postinc2	equ	0xFDE
  3268                           postdec2	equ	0xFDD
  3269                           plusw2	equ	0xFDB
  3270                           fsr2h	equ	0xFDA
  3271                           fsr2l	equ	0xFD9
  3272                           status	equ	0xFD8
  3273                           
  3274 ;; *************** function _Set_Display *****************
  3275 ;; Defined at:
  3276 ;;		line 139 in file "display.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  type            1    wreg     unsigned char 
  3279 ;;  information     1   23[BANK0 ] unsigned char 
  3280 ;;  value           2   24[BANK0 ] unsigned int 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  type            1   26[BANK0 ] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;		None               void
  3285 ;; Registers used:
  3286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1
  3292 ;;      Params:         0       3       0
  3293 ;;      Locals:         0       1       0
  3294 ;;      Temps:          0       0       0
  3295 ;;      Totals:         0       4       0
  3296 ;;Total ram usage:        4 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    8
  3299 ;; This function calls:
  3300 ;;		_Evaluate_Display
  3301 ;;		_Evaluate_Signs
  3302 ;;		_Write_Display_Byte
  3303 ;; This function is called by:
  3304 ;;		_main
  3305 ;;		_Check_Buttons
  3306 ;;		_Load_Data
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text16
  3311  001354                     __ptext16:
  3312                           	opt stack 0
  3313  001354                     _Set_Display:
  3314                           	opt stack 22
  3315                           
  3316                           ;incstack = 0
  3317                           ;Set_Display@type stored from wreg
  3318  001354  0100               	movlb	0	; () banked
  3319  001356  6F7A               	movwf	Set_Display@type& (0+255),b
  3320                           
  3321                           ;display.c: 141: switch (type) {
  3322  001358  D020               	goto	l2981
  3323  00135A                     l2965:
  3324                           
  3325                           ;display.c: 143: if(information != '-') {
  3326  00135A  0E2D               	movlw	45
  3327  00135C  0100               	movlb	0	; () banked
  3328  00135E  1977               	xorwf	Set_Display@information& (0+255),w,b
  3329  001360  B4D8               	btfsc	status,2,c
  3330  001362  D014               	goto	l2977
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;display.c: 144: signs[0] = value;
  3334  001364  C078  F08B         	movff	Set_Display@value,_signs
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;display.c: 145: signs[0] += 0x30;
  3338  001368  0E30               	movlw	48
  3339  00136A  0100               	movlb	0	; () banked
  3340  00136C  278B               	addwf	_signs& (0+255),f,b
  3341                           
  3342                           ; BSR set to: 0
  3343                           ;display.c: 146: signs[1] = '-';
  3344  00136E  0E2D               	movlw	45
  3345  001370  0100               	movlb	0	; () banked
  3346  001372  6F8C               	movwf	(_signs+1)& (0+255),b
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;display.c: 147: signs[2] = information;
  3350  001374  C077  F08D         	movff	Set_Display@information,_signs+2
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;display.c: 148: Evaluate_Display(sizeof(signs), signs);
  3354  001378  0E8B               	movlw	low _signs
  3355  00137A  0100               	movlb	0	; () banked
  3356  00137C  6F69               	movwf	Evaluate_Display@evaluate& (0+255),b
  3357  00137E  0E00               	movlw	high _signs
  3358  001380  0100               	movlb	0	; () banked
  3359  001382  6F6A               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3360  001384  0E03               	movlw	3
  3361  001386  ECD0  F003         	call	_Evaluate_Display
  3362                           
  3363                           ;display.c: 149: } else {
  3364  00138A  D00D               	goto	l2983
  3365  00138C                     l2977:
  3366                           
  3367                           ;display.c: 150: Evaluate_Signs(value);
  3368  00138C  C078  F070         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  3369  001390  C079  F071         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  3370  001394  EC7C  F007         	call	_Evaluate_Signs	;wreg free
  3371                           
  3372                           ;display.c: 156: }
  3373                           
  3374                           ;display.c: 155: break;
  3375                           
  3376                           ;display.c: 153: case 'L':
  3377                           
  3378                           ;display.c: 151: }
  3379                           ;display.c: 152: break;
  3380  001398  D006               	goto	l2983
  3381  00139A                     l2981:
  3382  00139A  0100               	movlb	0	; () banked
  3383  00139C  517A               	movf	Set_Display@type& (0+255),w,b
  3384                           
  3385                           ; Switch size 1, requested type "space"
  3386                           ; Number of cases is 2, Range of values is 55 to 76
  3387                           ; switch strategies available:
  3388                           ; Name         Instructions Cycles
  3389                           ; simple_byte            7     4 (average)
  3390                           ;	Chosen strategy is simple_byte
  3391  00139E  0A37               	xorlw	55	; case 55
  3392  0013A0  B4D8               	btfsc	status,2,c
  3393  0013A2  D7DB               	goto	l2965
  3394  0013A4  0A7B               	xorlw	123	; case 76
  3395  0013A6                     l2983:
  3396                           
  3397                           ;display.c: 157: Write_Display_Byte(pixels);
  3398  0013A6  0E83               	movlw	low _pixels
  3399  0013A8  0100               	movlb	0	; () banked
  3400  0013AA  6F60               	movwf	Write_Display_Byte@write_data& (0+255),b
  3401  0013AC  0E00               	movlw	high _pixels
  3402  0013AE  0100               	movlb	0	; () banked
  3403  0013B0  6F61               	movwf	(Write_Display_Byte@write_data+1)& (0+255),b
  3404  0013B2  ECDC  F009         	call	_Write_Display_Byte	;wreg free
  3405  0013B6  0012               	return		;funcret
  3406  0013B8                     __end_of_Set_Display:
  3407                           	opt stack 0
  3408                           tblptru	equ	0xFF8
  3409                           tblptrh	equ	0xFF7
  3410                           tblptrl	equ	0xFF6
  3411                           tablat	equ	0xFF5
  3412                           prodh	equ	0xFF4
  3413                           prodl	equ	0xFF3
  3414                           intcon	equ	0xFF2
  3415                           postinc0	equ	0xFEE
  3416                           wreg	equ	0xFE8
  3417                           postdec1	equ	0xFE5
  3418                           fsr1l	equ	0xFE1
  3419                           indf2	equ	0xFDF
  3420                           postinc2	equ	0xFDE
  3421                           postdec2	equ	0xFDD
  3422                           plusw2	equ	0xFDB
  3423                           fsr2h	equ	0xFDA
  3424                           fsr2l	equ	0xFD9
  3425                           status	equ	0xFD8
  3426                           
  3427 ;; *************** function _Write_Display_Byte *****************
  3428 ;; Defined at:
  3429 ;;		line 56 in file "communication.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;  write_data      2    0[BANK0 ] PTR unsigned char 
  3432 ;;		 -> pixels(8), 
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;  counter         1    6[BANK0 ] unsigned char 
  3435 ;; Return value:  Size  Location     Type
  3436 ;;		None               void
  3437 ;; Registers used:
  3438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMRAM   BANK0   BANK1
  3444 ;;      Params:         0       2       0
  3445 ;;      Locals:         0       1       0
  3446 ;;      Temps:          0       4       0
  3447 ;;      Totals:         0       7       0
  3448 ;;Total ram usage:        7 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    5
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_Set_Display
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text17
  3459  0013B8                     __ptext17:
  3460                           	opt stack 0
  3461  0013B8                     _Write_Display_Byte:
  3462                           	opt stack 24
  3463                           
  3464                           ;communication.c: 57: for(unsigned char counter = sizeof(pixels); counter > 0;
  3465                           
  3466                           ;incstack = 0
  3467  0013B8  0E08               	movlw	8
  3468  0013BA  0100               	movlb	0	; () banked
  3469  0013BC  6F66               	movwf	Write_Display_Byte@counter& (0+255),b
  3470  0013BE                     
  3471                           ;communication.c: 58: counter--) {
  3472  0013BE  0100               	movlb	0	; () banked
  3473  0013C0  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3474  0013C2  0100               	movlb	0	; () banked
  3475  0013C4  B4D8               	btfsc	status,2,c
  3476  0013C6  0012               	return	
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;communication.c: 59: if(SSP1IF = 1) {
  3480                           
  3481                           ; BSR set to: 0
  3482  0013C8  869E               	bsf	3998,3,c	;volatile
  3483  0013CA  B69E               	btfsc	3998,3,c	;volatile
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;communication.c: 60: SSP1IF = 0;
  3487  0013CC  969E               	bcf	3998,3,c	;volatile
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;communication.c: 61: }
  3491                           ;communication.c: 62: SSP1BUF = write_data[counter - 1];
  3492                           
  3493                           ; BSR set to: 0
  3494  0013CE  0EFF               	movlw	255
  3495  0013D0  0100               	movlb	0	; () banked
  3496  0013D2  6F62               	movwf	??_Write_Display_Byte& (0+255),b
  3497  0013D4  0EFF               	movlw	255
  3498  0013D6  0100               	movlb	0	; () banked
  3499  0013D8  6F63               	movwf	(??_Write_Display_Byte+1)& (0+255),b
  3500  0013DA  0100               	movlb	0	; () banked
  3501  0013DC  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3502  0013DE  0100               	movlb	0	; () banked
  3503  0013E0  6F64               	movwf	(??_Write_Display_Byte+2)& (0+255),b
  3504  0013E2  6B65               	clrf	(??_Write_Display_Byte+3)& (0+255),b
  3505  0013E4  0100               	movlb	0	; () banked
  3506  0013E6  5162               	movf	??_Write_Display_Byte& (0+255),w,b
  3507  0013E8  0100               	movlb	0	; () banked
  3508  0013EA  2764               	addwf	(??_Write_Display_Byte+2)& (0+255),f,b
  3509  0013EC  0100               	movlb	0	; () banked
  3510  0013EE  5163               	movf	(??_Write_Display_Byte+1)& (0+255),w,b
  3511  0013F0  0100               	movlb	0	; () banked
  3512  0013F2  2365               	addwfc	(??_Write_Display_Byte+3)& (0+255),f,b
  3513  0013F4  0100               	movlb	0	; () banked
  3514  0013F6  5164               	movf	(??_Write_Display_Byte+2)& (0+255),w,b
  3515  0013F8  0100               	movlb	0	; () banked
  3516  0013FA  2560               	addwf	Write_Display_Byte@write_data& (0+255),w,b
  3517  0013FC  6ED9               	movwf	fsr2l,c
  3518  0013FE  0100               	movlb	0	; () banked
  3519  001400  5165               	movf	(??_Write_Display_Byte+3)& (0+255),w,b
  3520  001402  0100               	movlb	0	; () banked
  3521  001404  2161               	addwfc	(Write_Display_Byte@write_data+1)& (0+255),w,b
  3522  001406  6EDA               	movwf	fsr2h,c
  3523  001408  50DF               	movf	indf2,w,c
  3524  00140A  6EC9               	movwf	4041,c	;volatile
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;communication.c: 64: SSP1IF = 0;
  3528  00140C  969E               	bcf	3998,3,c	;volatile
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;communication.c: 65: PORTCbits.RC0 = 0;
  3532  00140E  9082               	bcf	3970,0,c	;volatile
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;communication.c: 66: PORTCbits.RC0 = 1;
  3536  001410  8082               	bsf	3970,0,c	;volatile
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;communication.c: 67: PORTCbits.RC0 = 0;
  3540  001412  9082               	bcf	3970,0,c	;volatile
  3541                           
  3542                           ; BSR set to: 0
  3543  001414  0100               	movlb	0	; () banked
  3544  001416  0766               	decf	Write_Display_Byte@counter& (0+255),f,b
  3545  001418  D7D2               	goto	L3
  3546  00141A                     __end_of_Write_Display_Byte:
  3547                           	opt stack 0
  3548                           tblptru	equ	0xFF8
  3549                           tblptrh	equ	0xFF7
  3550                           tblptrl	equ	0xFF6
  3551                           tablat	equ	0xFF5
  3552                           prodh	equ	0xFF4
  3553                           prodl	equ	0xFF3
  3554                           intcon	equ	0xFF2
  3555                           postinc0	equ	0xFEE
  3556                           wreg	equ	0xFE8
  3557                           postdec1	equ	0xFE5
  3558                           fsr1l	equ	0xFE1
  3559                           indf2	equ	0xFDF
  3560                           postinc2	equ	0xFDE
  3561                           postdec2	equ	0xFDD
  3562                           plusw2	equ	0xFDB
  3563                           fsr2h	equ	0xFDA
  3564                           fsr2l	equ	0xFD9
  3565                           status	equ	0xFD8
  3566                           
  3567 ;; *************** function _Evaluate_Signs *****************
  3568 ;; Defined at:
  3569 ;;		line 119 in file "display.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  evaluation_v    2   16[BANK0 ] unsigned int 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  valuecounter    1   22[BANK0 ] unsigned char 
  3574 ;; Return value:  Size  Location     Type
  3575 ;;		None               void
  3576 ;; Registers used:
  3577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3578 ;; Tracked objects:
  3579 ;;		On entry : 0/0
  3580 ;;		On exit  : 0/0
  3581 ;;		Unchanged: 0/0
  3582 ;; Data sizes:     COMRAM   BANK0   BANK1
  3583 ;;      Params:         0       2       0
  3584 ;;      Locals:         0       1       0
  3585 ;;      Temps:          0       4       0
  3586 ;;      Totals:         0       7       0
  3587 ;;Total ram usage:        7 bytes
  3588 ;; Hardware stack levels used:    1
  3589 ;; Hardware stack levels required when called:    7
  3590 ;; This function calls:
  3591 ;;		_Evaluate_Display
  3592 ;;		___lwdiv
  3593 ;;		___lwmod
  3594 ;; This function is called by:
  3595 ;;		_Set_Display
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text18
  3600  000EF8                     __ptext18:
  3601                           	opt stack 0
  3602  000EF8                     _Evaluate_Signs:
  3603                           	opt stack 22
  3604                           
  3605                           ;display.c: 120: for(unsigned char valuecounter = sizeof(signs); valuecounter > 0;
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;incstack = 0
  3609  000EF8  0E03               	movlw	3
  3610  000EFA  0100               	movlb	0	; () banked
  3611  000EFC  6F76               	movwf	Evaluate_Signs@valuecounter& (0+255),b
  3612  000EFE                     
  3613                           ;display.c: 121: valuecounter--) {
  3614  000EFE  0100               	movlb	0	; () banked
  3615  000F00  5176               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3616  000F02  0100               	movlb	0	; () banked
  3617  000F04  B4D8               	btfsc	status,2,c
  3618  000F06  D058               	goto	l457
  3619                           
  3620                           ; BSR set to: 0
  3621                           ;display.c: 122: signs[(valuecounter - 1)] = evaluation_value % 10;
  3622                           
  3623                           ; BSR set to: 0
  3624                           
  3625                           ; BSR set to: 0
  3626  000F08  0EFF               	movlw	255
  3627  000F0A  0100               	movlb	0	; () banked
  3628  000F0C  6F72               	movwf	??_Evaluate_Signs& (0+255),b
  3629  000F0E  0EFF               	movlw	255
  3630  000F10  0100               	movlb	0	; () banked
  3631  000F12  6F73               	movwf	(??_Evaluate_Signs+1)& (0+255),b
  3632  000F14  0100               	movlb	0	; () banked
  3633  000F16  5176               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3634  000F18  0100               	movlb	0	; () banked
  3635  000F1A  6F74               	movwf	(??_Evaluate_Signs+2)& (0+255),b
  3636  000F1C  6B75               	clrf	(??_Evaluate_Signs+3)& (0+255),b
  3637  000F1E  0100               	movlb	0	; () banked
  3638  000F20  5172               	movf	??_Evaluate_Signs& (0+255),w,b
  3639  000F22  0100               	movlb	0	; () banked
  3640  000F24  2774               	addwf	(??_Evaluate_Signs+2)& (0+255),f,b
  3641  000F26  0100               	movlb	0	; () banked
  3642  000F28  5173               	movf	(??_Evaluate_Signs+1)& (0+255),w,b
  3643  000F2A  0100               	movlb	0	; () banked
  3644  000F2C  2375               	addwfc	(??_Evaluate_Signs+3)& (0+255),f,b
  3645  000F2E  0E8B               	movlw	low _signs
  3646  000F30  0100               	movlb	0	; () banked
  3647  000F32  2574               	addwf	(??_Evaluate_Signs+2)& (0+255),w,b
  3648  000F34  6ED9               	movwf	fsr2l,c
  3649  000F36  0E00               	movlw	high _signs
  3650  000F38  0100               	movlb	0	; () banked
  3651  000F3A  2175               	addwfc	(??_Evaluate_Signs+3)& (0+255),w,b
  3652  000F3C  6EDA               	movwf	fsr2h,c
  3653  000F3E  C070  F060         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  3654  000F42  C071  F061         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  3655  000F46  0E00               	movlw	0
  3656  000F48  0100               	movlb	0	; () banked
  3657  000F4A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  3658  000F4C  0E0A               	movlw	10
  3659  000F4E  6F62               	movwf	___lwmod@divisor& (0+255),b
  3660  000F50  EC0D  F00A         	call	___lwmod	;wreg free
  3661  000F54  0100               	movlb	0	; () banked
  3662  000F56  5160               	movf	?___lwmod& (0+255),w,b
  3663  000F58  6EDF               	movwf	indf2,c
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;display.c: 123: signs[(valuecounter - 1)] += 0x30;
  3667  000F5A  0EFF               	movlw	255
  3668  000F5C  0100               	movlb	0	; () banked
  3669  000F5E  6F72               	movwf	??_Evaluate_Signs& (0+255),b
  3670  000F60  0EFF               	movlw	255
  3671  000F62  0100               	movlb	0	; () banked
  3672  000F64  6F73               	movwf	(??_Evaluate_Signs+1)& (0+255),b
  3673  000F66  0100               	movlb	0	; () banked
  3674  000F68  5176               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3675  000F6A  0100               	movlb	0	; () banked
  3676  000F6C  6F74               	movwf	(??_Evaluate_Signs+2)& (0+255),b
  3677  000F6E  6B75               	clrf	(??_Evaluate_Signs+3)& (0+255),b
  3678  000F70  0100               	movlb	0	; () banked
  3679  000F72  5172               	movf	??_Evaluate_Signs& (0+255),w,b
  3680  000F74  0100               	movlb	0	; () banked
  3681  000F76  2774               	addwf	(??_Evaluate_Signs+2)& (0+255),f,b
  3682  000F78  0100               	movlb	0	; () banked
  3683  000F7A  5173               	movf	(??_Evaluate_Signs+1)& (0+255),w,b
  3684  000F7C  0100               	movlb	0	; () banked
  3685  000F7E  2375               	addwfc	(??_Evaluate_Signs+3)& (0+255),f,b
  3686  000F80  0E8B               	movlw	low _signs
  3687  000F82  0100               	movlb	0	; () banked
  3688  000F84  2574               	addwf	(??_Evaluate_Signs+2)& (0+255),w,b
  3689  000F86  6ED9               	movwf	fsr2l,c
  3690  000F88  0E00               	movlw	high _signs
  3691  000F8A  0100               	movlb	0	; () banked
  3692  000F8C  2175               	addwfc	(??_Evaluate_Signs+3)& (0+255),w,b
  3693  000F8E  6EDA               	movwf	fsr2h,c
  3694  000F90  0E30               	movlw	48
  3695  000F92  26DF               	addwf	indf2,f,c
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;display.c: 124: evaluation_value = evaluation_value / 10;
  3699  000F94  C070  F060         	movff	Evaluate_Signs@evaluation_value,___lwdiv@dividend
  3700  000F98  C071  F061         	movff	Evaluate_Signs@evaluation_value+1,___lwdiv@dividend+1
  3701  000F9C  0E00               	movlw	0
  3702  000F9E  0100               	movlb	0	; () banked
  3703  000FA0  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3704  000FA2  0E0A               	movlw	10
  3705  000FA4  6F62               	movwf	___lwdiv@divisor& (0+255),b
  3706  000FA6  EC38  F009         	call	___lwdiv	;wreg free
  3707  000FAA  C060  F070         	movff	?___lwdiv,Evaluate_Signs@evaluation_value
  3708  000FAE  C061  F071         	movff	?___lwdiv+1,Evaluate_Signs@evaluation_value+1
  3709  000FB2  0100               	movlb	0	; () banked
  3710  000FB4  0776               	decf	Evaluate_Signs@valuecounter& (0+255),f,b
  3711  000FB6  D7A3               	goto	L4
  3712  000FB8                     l457:
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;display.c: 125: }
  3716                           ;display.c: 126: __nop();
  3717  000FB8  F000               	nop	
  3718                           
  3719                           ;display.c: 127: Evaluate_Display(sizeof(signs), signs);
  3720  000FBA  0E8B               	movlw	low _signs
  3721  000FBC  0100               	movlb	0	; () banked
  3722  000FBE  6F69               	movwf	Evaluate_Display@evaluate& (0+255),b
  3723  000FC0  0E00               	movlw	high _signs
  3724  000FC2  0100               	movlb	0	; () banked
  3725  000FC4  6F6A               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3726  000FC6  0E03               	movlw	3
  3727  000FC8  ECD0  F003         	call	_Evaluate_Display
  3728  000FCC  0012               	return		;funcret
  3729  000FCE                     __end_of_Evaluate_Signs:
  3730                           	opt stack 0
  3731                           tblptru	equ	0xFF8
  3732                           tblptrh	equ	0xFF7
  3733                           tblptrl	equ	0xFF6
  3734                           tablat	equ	0xFF5
  3735                           prodh	equ	0xFF4
  3736                           prodl	equ	0xFF3
  3737                           intcon	equ	0xFF2
  3738                           postinc0	equ	0xFEE
  3739                           wreg	equ	0xFE8
  3740                           postdec1	equ	0xFE5
  3741                           fsr1l	equ	0xFE1
  3742                           indf2	equ	0xFDF
  3743                           postinc2	equ	0xFDE
  3744                           postdec2	equ	0xFDD
  3745                           plusw2	equ	0xFDB
  3746                           fsr2h	equ	0xFDA
  3747                           fsr2l	equ	0xFD9
  3748                           status	equ	0xFD8
  3749                           
  3750 ;; *************** function ___lwmod *****************
  3751 ;; Defined at:
  3752 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3753 ;; Parameters:    Size  Location     Type
  3754 ;;  dividend        2    0[BANK0 ] unsigned int 
  3755 ;;  divisor         2    2[BANK0 ] unsigned int 
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  counter         1    4[BANK0 ] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  2    0[BANK0 ] unsigned int 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1
  3767 ;;      Params:         0       4       0
  3768 ;;      Locals:         0       1       0
  3769 ;;      Temps:          0       0       0
  3770 ;;      Totals:         0       5       0
  3771 ;;Total ram usage:        5 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; Hardware stack levels required when called:    5
  3774 ;; This function calls:
  3775 ;;		Nothing
  3776 ;; This function is called by:
  3777 ;;		_Evaluate_Signs
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text19
  3782  00141A                     __ptext19:
  3783                           	opt stack 0
  3784  00141A                     ___lwmod:
  3785                           	opt stack 23
  3786                           
  3787                           ;incstack = 0
  3788  00141A  0100               	movlb	0	; () banked
  3789  00141C  5162               	movf	___lwmod@divisor& (0+255),w,b
  3790  00141E  0100               	movlb	0	; () banked
  3791  001420  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3792  001422  B4D8               	btfsc	status,2,c
  3793  001424  D026               	goto	l1044
  3794                           
  3795                           ; BSR set to: 0
  3796  001426  0E01               	movlw	1
  3797  001428  0100               	movlb	0	; () banked
  3798  00142A  6F64               	movwf	___lwmod@counter& (0+255),b
  3799  00142C  D006               	goto	l2937
  3800  00142E                     l2935:
  3801                           
  3802                           ; BSR set to: 0
  3803  00142E  0100               	movlb	0	; () banked
  3804  001430  90D8               	bcf	status,0,c
  3805  001432  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  3806  001434  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3807  001436  0100               	movlb	0	; () banked
  3808  001438  2B64               	incf	___lwmod@counter& (0+255),f,b
  3809  00143A                     l2937:
  3810                           
  3811                           ; BSR set to: 0
  3812  00143A  0100               	movlb	0	; () banked
  3813  00143C  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3814  00143E  D7F7               	goto	l2935
  3815  001440                     l2939:
  3816                           
  3817                           ; BSR set to: 0
  3818  001440  0100               	movlb	0	; () banked
  3819  001442  5162               	movf	___lwmod@divisor& (0+255),w,b
  3820  001444  0100               	movlb	0	; () banked
  3821  001446  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  3822  001448  0100               	movlb	0	; () banked
  3823  00144A  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3824  00144C  0100               	movlb	0	; () banked
  3825  00144E  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3826  001450  A0D8               	btfss	status,0,c
  3827  001452  D008               	goto	l2943
  3828                           
  3829                           ; BSR set to: 0
  3830  001454  0100               	movlb	0	; () banked
  3831  001456  5162               	movf	___lwmod@divisor& (0+255),w,b
  3832  001458  0100               	movlb	0	; () banked
  3833  00145A  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  3834  00145C  0100               	movlb	0	; () banked
  3835  00145E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3836  001460  0100               	movlb	0	; () banked
  3837  001462  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3838  001464                     l2943:
  3839                           
  3840                           ; BSR set to: 0
  3841  001464  0100               	movlb	0	; () banked
  3842  001466  90D8               	bcf	status,0,c
  3843  001468  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3844  00146A  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  3845                           
  3846                           ; BSR set to: 0
  3847  00146C  0100               	movlb	0	; () banked
  3848  00146E  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  3849  001470  D7E7               	goto	l2939
  3850  001472                     l1044:
  3851                           
  3852                           ; BSR set to: 0
  3853  001472  C060  F060         	movff	___lwmod@dividend,?___lwmod
  3854  001476  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  3855                           
  3856                           ; BSR set to: 0
  3857  00147A  0012               	return		;funcret
  3858  00147C                     __end_of___lwmod:
  3859                           	opt stack 0
  3860                           tblptru	equ	0xFF8
  3861                           tblptrh	equ	0xFF7
  3862                           tblptrl	equ	0xFF6
  3863                           tablat	equ	0xFF5
  3864                           prodh	equ	0xFF4
  3865                           prodl	equ	0xFF3
  3866                           intcon	equ	0xFF2
  3867                           postinc0	equ	0xFEE
  3868                           wreg	equ	0xFE8
  3869                           postdec1	equ	0xFE5
  3870                           fsr1l	equ	0xFE1
  3871                           indf2	equ	0xFDF
  3872                           postinc2	equ	0xFDE
  3873                           postdec2	equ	0xFDD
  3874                           plusw2	equ	0xFDB
  3875                           fsr2h	equ	0xFDA
  3876                           fsr2l	equ	0xFD9
  3877                           status	equ	0xFD8
  3878                           
  3879 ;; *************** function ___lwdiv *****************
  3880 ;; Defined at:
  3881 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  dividend        2    0[BANK0 ] unsigned int 
  3884 ;;  divisor         2    2[BANK0 ] unsigned int 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  quotient        2    5[BANK0 ] unsigned int 
  3887 ;;  counter         1    4[BANK0 ] unsigned char 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  2    0[BANK0 ] unsigned int 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1
  3897 ;;      Params:         0       4       0
  3898 ;;      Locals:         0       3       0
  3899 ;;      Temps:          0       0       0
  3900 ;;      Totals:         0       7       0
  3901 ;;Total ram usage:        7 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    5
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_Evaluate_Signs
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text20
  3912  001270                     __ptext20:
  3913                           	opt stack 0
  3914  001270                     ___lwdiv:
  3915                           	opt stack 23
  3916                           
  3917                           ; BSR set to: 0
  3918                           ;incstack = 0
  3919  001270  0E00               	movlw	0
  3920  001272  0100               	movlb	0	; () banked
  3921  001274  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3922  001276  0E00               	movlw	0
  3923  001278  6F65               	movwf	___lwdiv@quotient& (0+255),b
  3924                           
  3925                           ; BSR set to: 0
  3926  00127A  0100               	movlb	0	; () banked
  3927  00127C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3928  00127E  0100               	movlb	0	; () banked
  3929  001280  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3930  001282  B4D8               	btfsc	status,2,c
  3931  001284  D02C               	goto	l1034
  3932                           
  3933                           ; BSR set to: 0
  3934  001286  0E01               	movlw	1
  3935  001288  0100               	movlb	0	; () banked
  3936  00128A  6F64               	movwf	___lwdiv@counter& (0+255),b
  3937  00128C  D006               	goto	l2917
  3938  00128E                     l2915:
  3939                           
  3940                           ; BSR set to: 0
  3941  00128E  0100               	movlb	0	; () banked
  3942  001290  90D8               	bcf	status,0,c
  3943  001292  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  3944  001294  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3945  001296  0100               	movlb	0	; () banked
  3946  001298  2B64               	incf	___lwdiv@counter& (0+255),f,b
  3947  00129A                     l2917:
  3948                           
  3949                           ; BSR set to: 0
  3950  00129A  0100               	movlb	0	; () banked
  3951  00129C  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3952  00129E  D7F7               	goto	l2915
  3953  0012A0                     l2919:
  3954                           
  3955                           ; BSR set to: 0
  3956  0012A0  0100               	movlb	0	; () banked
  3957  0012A2  90D8               	bcf	status,0,c
  3958  0012A4  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  3959  0012A6  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3960                           
  3961                           ; BSR set to: 0
  3962  0012A8  0100               	movlb	0	; () banked
  3963  0012AA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3964  0012AC  0100               	movlb	0	; () banked
  3965  0012AE  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  3966  0012B0  0100               	movlb	0	; () banked
  3967  0012B2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3968  0012B4  0100               	movlb	0	; () banked
  3969  0012B6  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3970  0012B8  A0D8               	btfss	status,0,c
  3971  0012BA  D00A               	goto	l2927
  3972                           
  3973                           ; BSR set to: 0
  3974  0012BC  0100               	movlb	0	; () banked
  3975  0012BE  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3976  0012C0  0100               	movlb	0	; () banked
  3977  0012C2  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  3978  0012C4  0100               	movlb	0	; () banked
  3979  0012C6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3980  0012C8  0100               	movlb	0	; () banked
  3981  0012CA  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3982                           
  3983                           ; BSR set to: 0
  3984  0012CC  0100               	movlb	0	; () banked
  3985  0012CE  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  3986  0012D0                     l2927:
  3987                           
  3988                           ; BSR set to: 0
  3989  0012D0  0100               	movlb	0	; () banked
  3990  0012D2  90D8               	bcf	status,0,c
  3991  0012D4  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3992  0012D6  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  3993                           
  3994                           ; BSR set to: 0
  3995  0012D8  0100               	movlb	0	; () banked
  3996  0012DA  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  3997  0012DC  D7E1               	goto	l2919
  3998  0012DE                     l1034:
  3999                           
  4000                           ; BSR set to: 0
  4001  0012DE  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  4002  0012E2  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4003                           
  4004                           ; BSR set to: 0
  4005  0012E6  0012               	return		;funcret
  4006  0012E8                     __end_of___lwdiv:
  4007                           	opt stack 0
  4008                           tblptru	equ	0xFF8
  4009                           tblptrh	equ	0xFF7
  4010                           tblptrl	equ	0xFF6
  4011                           tablat	equ	0xFF5
  4012                           prodh	equ	0xFF4
  4013                           prodl	equ	0xFF3
  4014                           intcon	equ	0xFF2
  4015                           postinc0	equ	0xFEE
  4016                           wreg	equ	0xFE8
  4017                           postdec1	equ	0xFE5
  4018                           fsr1l	equ	0xFE1
  4019                           indf2	equ	0xFDF
  4020                           postinc2	equ	0xFDE
  4021                           postdec2	equ	0xFDD
  4022                           plusw2	equ	0xFDB
  4023                           fsr2h	equ	0xFDA
  4024                           fsr2l	equ	0xFD9
  4025                           status	equ	0xFD8
  4026                           
  4027 ;; *************** function _Evaluate_Display *****************
  4028 ;; Defined at:
  4029 ;;		line 52 in file "display.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  size            1    wreg     unsigned char 
  4032 ;;  evaluate        2    9[BANK0 ] PTR unsigned char 
  4033 ;;		 -> signs(3), string_delete(3), string_load(3), 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  size            1   15[BANK0 ] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;		None               void
  4038 ;; Registers used:
  4039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMRAM   BANK0   BANK1
  4045 ;;      Params:         0       2       0
  4046 ;;      Locals:         0       1       0
  4047 ;;      Temps:          0       4       0
  4048 ;;      Totals:         0       7       0
  4049 ;;Total ram usage:        7 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    6
  4052 ;; This function calls:
  4053 ;;		_Set_Bits
  4054 ;; This function is called by:
  4055 ;;		_Load_Data
  4056 ;;		_Del_Data
  4057 ;;		_Evaluate_Signs
  4058 ;;		_Set_Display
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           	psect	text21
  4063  0007A0                     __ptext21:
  4064                           	opt stack 0
  4065  0007A0                     _Evaluate_Display:
  4066                           	opt stack 22
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;incstack = 0
  4070                           ;Evaluate_Display@size stored from wreg
  4071  0007A0  0100               	movlb	0	; () banked
  4072  0007A2  6F6F               	movwf	Evaluate_Display@size& (0+255),b
  4073                           
  4074                           ;display.c: 53: for(display_counter = size; display_counter > 0;
  4075  0007A4  C06F  F094         	movff	Evaluate_Display@size,_display_counter
  4076                           
  4077                           ;display.c: 54: display_counter--) {
  4078  0007A8  D161               	goto	l2167
  4079  0007AA                     l431:
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;display.c: 55: __nop();
  4083  0007AA  F000               	nop	
  4084                           
  4085                           ;display.c: 56: switch (evaluate[(display_counter - 1)]) {
  4086  0007AC  D10B               	goto	l2163
  4087  0007AE                     l2127:
  4088                           
  4089                           ;display.c: 58: Set_Bits("ABCDEF");
  4090  0007AE  0E2D               	movlw	low STR_1
  4091  0007B0  0100               	movlb	0	; () banked
  4092  0007B2  6F60               	movwf	Set_Bits@bits& (0+255),b
  4093  0007B4  0E02               	movlw	high STR_1
  4094  0007B6  0100               	movlb	0	; () banked
  4095  0007B8  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4096  0007BA  0100               	movlb	0	; () banked
  4097  0007BC  5160               	movf	Set_Bits@bits& (0+255),w,b
  4098  0007BE  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4099  0007C0  A4D8               	btfss	status,2,c
  4100  0007C2  0E00               	movlw	low (__mediumconst shr (0+16))
  4101  0007C4  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4102  0007C6  ECF4  F006         	call	_Set_Bits	;wreg free
  4103                           
  4104                           ;display.c: 59: break;
  4105  0007CA  D14E               	goto	l2165
  4106  0007CC                     l2129:
  4107                           
  4108                           ;display.c: 61: Set_Bits("BC");
  4109  0007CC  0E6D               	movlw	low (STR_8+1)
  4110  0007CE  0100               	movlb	0	; () banked
  4111  0007D0  6F60               	movwf	Set_Bits@bits& (0+255),b
  4112  0007D2  0E02               	movlw	high (STR_8+1)
  4113  0007D4  0100               	movlb	0	; () banked
  4114  0007D6  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4115  0007D8  0100               	movlb	0	; () banked
  4116  0007DA  5160               	movf	Set_Bits@bits& (0+255),w,b
  4117  0007DC  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4118  0007DE  A4D8               	btfss	status,2,c
  4119  0007E0  0E00               	movlw	low (__mediumconst shr (0+16))
  4120  0007E2  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4121  0007E4  ECF4  F006         	call	_Set_Bits	;wreg free
  4122                           
  4123                           ;display.c: 62: break;
  4124  0007E8  D13F               	goto	l2165
  4125  0007EA                     l2131:
  4126                           
  4127                           ;display.c: 64: Set_Bits("ABDEG");
  4128  0007EA  0E4F               	movlw	low STR_3
  4129  0007EC  0100               	movlb	0	; () banked
  4130  0007EE  6F60               	movwf	Set_Bits@bits& (0+255),b
  4131  0007F0  0E02               	movlw	high STR_3
  4132  0007F2  0100               	movlb	0	; () banked
  4133  0007F4  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4134  0007F6  0100               	movlb	0	; () banked
  4135  0007F8  5160               	movf	Set_Bits@bits& (0+255),w,b
  4136  0007FA  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4137  0007FC  A4D8               	btfss	status,2,c
  4138  0007FE  0E00               	movlw	low (__mediumconst shr (0+16))
  4139  000800  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4140  000802  ECF4  F006         	call	_Set_Bits	;wreg free
  4141                           
  4142                           ;display.c: 65: break;
  4143  000806  D130               	goto	l2165
  4144  000808                     l2133:
  4145                           
  4146                           ;display.c: 67: Set_Bits("ABCDG");
  4147  000808  0E49               	movlw	low STR_4
  4148  00080A  0100               	movlb	0	; () banked
  4149  00080C  6F60               	movwf	Set_Bits@bits& (0+255),b
  4150  00080E  0E02               	movlw	high STR_4
  4151  000810  0100               	movlb	0	; () banked
  4152  000812  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4153  000814  0100               	movlb	0	; () banked
  4154  000816  5160               	movf	Set_Bits@bits& (0+255),w,b
  4155  000818  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4156  00081A  A4D8               	btfss	status,2,c
  4157  00081C  0E00               	movlw	low (__mediumconst shr (0+16))
  4158  00081E  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4159  000820  ECF4  F006         	call	_Set_Bits	;wreg free
  4160                           
  4161                           ;display.c: 68: break;
  4162  000824  D121               	goto	l2165
  4163  000826                     l2135:
  4164                           
  4165                           ;display.c: 70: Set_Bits("BCFG");
  4166  000826  0E67               	movlw	low STR_5
  4167  000828  0100               	movlb	0	; () banked
  4168  00082A  6F60               	movwf	Set_Bits@bits& (0+255),b
  4169  00082C  0E02               	movlw	high STR_5
  4170  00082E  0100               	movlb	0	; () banked
  4171  000830  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4172  000832  0100               	movlb	0	; () banked
  4173  000834  5160               	movf	Set_Bits@bits& (0+255),w,b
  4174  000836  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4175  000838  A4D8               	btfss	status,2,c
  4176  00083A  0E00               	movlw	low (__mediumconst shr (0+16))
  4177  00083C  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4178  00083E  ECF4  F006         	call	_Set_Bits	;wreg free
  4179                           
  4180                           ;display.c: 71: break;
  4181  000842  D112               	goto	l2165
  4182  000844                     l2137:
  4183                           
  4184                           ;display.c: 73: Set_Bits("ACDFG");
  4185  000844  0E55               	movlw	low STR_6
  4186  000846  0100               	movlb	0	; () banked
  4187  000848  6F60               	movwf	Set_Bits@bits& (0+255),b
  4188  00084A  0E02               	movlw	high STR_6
  4189  00084C  0100               	movlb	0	; () banked
  4190  00084E  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4191  000850  0100               	movlb	0	; () banked
  4192  000852  5160               	movf	Set_Bits@bits& (0+255),w,b
  4193  000854  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4194  000856  A4D8               	btfss	status,2,c
  4195  000858  0E00               	movlw	low (__mediumconst shr (0+16))
  4196  00085A  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4197  00085C  ECF4  F006         	call	_Set_Bits	;wreg free
  4198                           
  4199                           ;display.c: 74: break;
  4200  000860  D103               	goto	l2165
  4201  000862                     l2139:
  4202                           
  4203                           ;display.c: 76: Set_Bits("ACDEFG");
  4204  000862  0E42               	movlw	low STR_7
  4205  000864  0100               	movlb	0	; () banked
  4206  000866  6F60               	movwf	Set_Bits@bits& (0+255),b
  4207  000868  0E02               	movlw	high STR_7
  4208  00086A  0100               	movlb	0	; () banked
  4209  00086C  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4210  00086E  0100               	movlb	0	; () banked
  4211  000870  5160               	movf	Set_Bits@bits& (0+255),w,b
  4212  000872  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4213  000874  A4D8               	btfss	status,2,c
  4214  000876  0E00               	movlw	low (__mediumconst shr (0+16))
  4215  000878  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4216  00087A  ECF4  F006         	call	_Set_Bits	;wreg free
  4217                           
  4218                           ;display.c: 77: break;
  4219  00087E  D0F4               	goto	l2165
  4220  000880                     l2141:
  4221                           
  4222                           ;display.c: 79: Set_Bits("ABC");
  4223  000880  0E6C               	movlw	low STR_8
  4224  000882  0100               	movlb	0	; () banked
  4225  000884  6F60               	movwf	Set_Bits@bits& (0+255),b
  4226  000886  0E02               	movlw	high STR_8
  4227  000888  0100               	movlb	0	; () banked
  4228  00088A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4229  00088C  0100               	movlb	0	; () banked
  4230  00088E  5160               	movf	Set_Bits@bits& (0+255),w,b
  4231  000890  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4232  000892  A4D8               	btfss	status,2,c
  4233  000894  0E00               	movlw	low (__mediumconst shr (0+16))
  4234  000896  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4235  000898  ECF4  F006         	call	_Set_Bits	;wreg free
  4236                           
  4237                           ;display.c: 80: break;
  4238  00089C  D0E5               	goto	l2165
  4239  00089E                     l2143:
  4240                           
  4241                           ;display.c: 82: Set_Bits("ABCDEFG");
  4242  00089E  0E25               	movlw	low STR_9
  4243  0008A0  0100               	movlb	0	; () banked
  4244  0008A2  6F60               	movwf	Set_Bits@bits& (0+255),b
  4245  0008A4  0E02               	movlw	high STR_9
  4246  0008A6  0100               	movlb	0	; () banked
  4247  0008A8  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4248  0008AA  0100               	movlb	0	; () banked
  4249  0008AC  5160               	movf	Set_Bits@bits& (0+255),w,b
  4250  0008AE  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4251  0008B0  A4D8               	btfss	status,2,c
  4252  0008B2  0E00               	movlw	low (__mediumconst shr (0+16))
  4253  0008B4  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4254  0008B6  ECF4  F006         	call	_Set_Bits	;wreg free
  4255                           
  4256                           ;display.c: 83: break;
  4257  0008BA  D0D6               	goto	l2165
  4258  0008BC                     l2145:
  4259                           
  4260                           ;display.c: 85: Set_Bits("ABCDFG");
  4261  0008BC  0E34               	movlw	low STR_10
  4262  0008BE  0100               	movlb	0	; () banked
  4263  0008C0  6F60               	movwf	Set_Bits@bits& (0+255),b
  4264  0008C2  0E02               	movlw	high STR_10
  4265  0008C4  0100               	movlb	0	; () banked
  4266  0008C6  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4267  0008C8  0100               	movlb	0	; () banked
  4268  0008CA  5160               	movf	Set_Bits@bits& (0+255),w,b
  4269  0008CC  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4270  0008CE  A4D8               	btfss	status,2,c
  4271  0008D0  0E00               	movlw	low (__mediumconst shr (0+16))
  4272  0008D2  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4273  0008D4  ECF4  F006         	call	_Set_Bits	;wreg free
  4274                           
  4275                           ;display.c: 86: break;
  4276  0008D8  D0C7               	goto	l2165
  4277  0008DA                     l2147:
  4278                           
  4279                           ;display.c: 88: Set_Bits("ABCEFG");
  4280  0008DA  0E3B               	movlw	low STR_11
  4281  0008DC  0100               	movlb	0	; () banked
  4282  0008DE  6F60               	movwf	Set_Bits@bits& (0+255),b
  4283  0008E0  0E02               	movlw	high STR_11
  4284  0008E2  0100               	movlb	0	; () banked
  4285  0008E4  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4286  0008E6  0100               	movlb	0	; () banked
  4287  0008E8  5160               	movf	Set_Bits@bits& (0+255),w,b
  4288  0008EA  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4289  0008EC  A4D8               	btfss	status,2,c
  4290  0008EE  0E00               	movlw	low (__mediumconst shr (0+16))
  4291  0008F0  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4292  0008F2  ECF4  F006         	call	_Set_Bits	;wreg free
  4293                           
  4294                           ;display.c: 89: break;
  4295  0008F6  D0B8               	goto	l2165
  4296  0008F8                     l2149:
  4297                           
  4298                           ;display.c: 91: Set_Bits("ABCDEF");
  4299  0008F8  0E2D               	movlw	low STR_1
  4300  0008FA  0100               	movlb	0	; () banked
  4301  0008FC  6F60               	movwf	Set_Bits@bits& (0+255),b
  4302  0008FE  0E02               	movlw	high STR_1
  4303  000900  0100               	movlb	0	; () banked
  4304  000902  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4305  000904  0100               	movlb	0	; () banked
  4306  000906  5160               	movf	Set_Bits@bits& (0+255),w,b
  4307  000908  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4308  00090A  A4D8               	btfss	status,2,c
  4309  00090C  0E00               	movlw	low (__mediumconst shr (0+16))
  4310  00090E  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4311  000910  ECF4  F006         	call	_Set_Bits	;wreg free
  4312                           
  4313                           ;display.c: 92: break;
  4314  000914  D0A9               	goto	l2165
  4315  000916                     l2151:
  4316                           
  4317                           ;display.c: 94: Set_Bits("ADEFG");
  4318  000916  0E61               	movlw	low STR_13
  4319  000918  0100               	movlb	0	; () banked
  4320  00091A  6F60               	movwf	Set_Bits@bits& (0+255),b
  4321  00091C  0E02               	movlw	high STR_13
  4322  00091E  0100               	movlb	0	; () banked
  4323  000920  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4324  000922  0100               	movlb	0	; () banked
  4325  000924  5160               	movf	Set_Bits@bits& (0+255),w,b
  4326  000926  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4327  000928  A4D8               	btfss	status,2,c
  4328  00092A  0E00               	movlw	low (__mediumconst shr (0+16))
  4329  00092C  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4330  00092E  ECF4  F006         	call	_Set_Bits	;wreg free
  4331                           
  4332                           ;display.c: 95: break;
  4333  000932  D09A               	goto	l2165
  4334  000934                     l2153:
  4335                           
  4336                           ;display.c: 97: Set_Bits("DEF");
  4337  000934  0E30               	movlw	low (STR_1+3)
  4338  000936  0100               	movlb	0	; () banked
  4339  000938  6F60               	movwf	Set_Bits@bits& (0+255),b
  4340  00093A  0E02               	movlw	high (STR_1+3)
  4341  00093C  0100               	movlb	0	; () banked
  4342  00093E  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4343  000940  0100               	movlb	0	; () banked
  4344  000942  5160               	movf	Set_Bits@bits& (0+255),w,b
  4345  000944  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4346  000946  A4D8               	btfss	status,2,c
  4347  000948  0E00               	movlw	low (__mediumconst shr (0+16))
  4348  00094A  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4349  00094C  ECF4  F006         	call	_Set_Bits	;wreg free
  4350                           
  4351                           ;display.c: 98: break;
  4352  000950  D08B               	goto	l2165
  4353  000952                     l2155:
  4354                           
  4355                           ;display.c: 100: Set_Bits("ABCDEF");
  4356  000952  0E2D               	movlw	low STR_1
  4357  000954  0100               	movlb	0	; () banked
  4358  000956  6F60               	movwf	Set_Bits@bits& (0+255),b
  4359  000958  0E02               	movlw	high STR_1
  4360  00095A  0100               	movlb	0	; () banked
  4361  00095C  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4362  00095E  0100               	movlb	0	; () banked
  4363  000960  5160               	movf	Set_Bits@bits& (0+255),w,b
  4364  000962  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4365  000964  A4D8               	btfss	status,2,c
  4366  000966  0E00               	movlw	low (__mediumconst shr (0+16))
  4367  000968  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4368  00096A  ECF4  F006         	call	_Set_Bits	;wreg free
  4369                           
  4370                           ;display.c: 101: break;
  4371  00096E  D07C               	goto	l2165
  4372  000970                     l2157:
  4373                           
  4374                           ;display.c: 103: Set_Bits("ABEFG");
  4375  000970  0E5B               	movlw	low STR_16
  4376  000972  0100               	movlb	0	; () banked
  4377  000974  6F60               	movwf	Set_Bits@bits& (0+255),b
  4378  000976  0E02               	movlw	high STR_16
  4379  000978  0100               	movlb	0	; () banked
  4380  00097A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4381  00097C  0100               	movlb	0	; () banked
  4382  00097E  5160               	movf	Set_Bits@bits& (0+255),w,b
  4383  000980  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4384  000982  A4D8               	btfss	status,2,c
  4385  000984  0E00               	movlw	low (__mediumconst shr (0+16))
  4386  000986  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4387  000988  ECF4  F006         	call	_Set_Bits	;wreg free
  4388                           
  4389                           ;display.c: 104: break;
  4390  00098C  D06D               	goto	l2165
  4391  00098E                     l2159:
  4392                           
  4393                           ;display.c: 106: Set_Bits("G");
  4394  00098E  0E4D               	movlw	low (STR_4+4)
  4395  000990  0100               	movlb	0	; () banked
  4396  000992  6F60               	movwf	Set_Bits@bits& (0+255),b
  4397  000994  0E02               	movlw	high (STR_4+4)
  4398  000996  0100               	movlb	0	; () banked
  4399  000998  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4400  00099A  0100               	movlb	0	; () banked
  4401  00099C  5160               	movf	Set_Bits@bits& (0+255),w,b
  4402  00099E  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4403  0009A0  A4D8               	btfss	status,2,c
  4404  0009A2  0E00               	movlw	low (__mediumconst shr (0+16))
  4405  0009A4  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4406  0009A6  ECF4  F006         	call	_Set_Bits	;wreg free
  4407                           
  4408                           ;display.c: 107: break;
  4409  0009AA  D05E               	goto	l2165
  4410  0009AC                     l2161:
  4411                           
  4412                           ;display.c: 109: Set_Bits('0');
  4413  0009AC  0E30               	movlw	48
  4414  0009AE  0100               	movlb	0	; () banked
  4415  0009B0  6F60               	movwf	Set_Bits@bits& (0+255),b
  4416  0009B2  0E00               	movlw	0
  4417  0009B4  0100               	movlb	0	; () banked
  4418  0009B6  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4419  0009B8  0E00               	movlw	0
  4420  0009BA  0100               	movlb	0	; () banked
  4421  0009BC  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4422  0009BE  ECF4  F006         	call	_Set_Bits	;wreg free
  4423                           
  4424                           ;display.c: 110: }
  4425  0009C2  D052               	goto	l2165
  4426  0009C4                     l2163:
  4427  0009C4  0EFF               	movlw	255
  4428  0009C6  0100               	movlb	0	; () banked
  4429  0009C8  6F6B               	movwf	??_Evaluate_Display& (0+255),b
  4430  0009CA  0EFF               	movlw	255
  4431  0009CC  0100               	movlb	0	; () banked
  4432  0009CE  6F6C               	movwf	(??_Evaluate_Display+1)& (0+255),b
  4433  0009D0  0100               	movlb	0	; () banked
  4434  0009D2  5194               	movf	_display_counter& (0+255),w,b
  4435  0009D4  0100               	movlb	0	; () banked
  4436  0009D6  6F6D               	movwf	(??_Evaluate_Display+2)& (0+255),b
  4437  0009D8  6B6E               	clrf	(??_Evaluate_Display+3)& (0+255),b
  4438  0009DA  0100               	movlb	0	; () banked
  4439  0009DC  516B               	movf	??_Evaluate_Display& (0+255),w,b
  4440  0009DE  0100               	movlb	0	; () banked
  4441  0009E0  276D               	addwf	(??_Evaluate_Display+2)& (0+255),f,b
  4442  0009E2  0100               	movlb	0	; () banked
  4443  0009E4  516C               	movf	(??_Evaluate_Display+1)& (0+255),w,b
  4444  0009E6  0100               	movlb	0	; () banked
  4445  0009E8  236E               	addwfc	(??_Evaluate_Display+3)& (0+255),f,b
  4446  0009EA  0100               	movlb	0	; () banked
  4447  0009EC  516D               	movf	(??_Evaluate_Display+2)& (0+255),w,b
  4448  0009EE  0100               	movlb	0	; () banked
  4449  0009F0  2569               	addwf	Evaluate_Display@evaluate& (0+255),w,b
  4450  0009F2  6ED9               	movwf	fsr2l,c
  4451  0009F4  0100               	movlb	0	; () banked
  4452  0009F6  516E               	movf	(??_Evaluate_Display+3)& (0+255),w,b
  4453  0009F8  0100               	movlb	0	; () banked
  4454  0009FA  216A               	addwfc	(Evaluate_Display@evaluate+1)& (0+255),w,b
  4455  0009FC  6EDA               	movwf	fsr2h,c
  4456  0009FE  50DF               	movf	indf2,w,c
  4457                           
  4458                           ; Switch size 1, requested type "space"
  4459                           ; Number of cases is 17, Range of values is 45 to 80
  4460                           ; switch strategies available:
  4461                           ; Name         Instructions Cycles
  4462                           ; simple_byte           52    27 (average)
  4463                           ;	Chosen strategy is simple_byte
  4464  000A00  0A2D               	xorlw	45	; case 45
  4465  000A02  B4D8               	btfsc	status,2,c
  4466  000A04  D7C4               	goto	l2159
  4467  000A06  0A1D               	xorlw	29	; case 48
  4468  000A08  B4D8               	btfsc	status,2,c
  4469  000A0A  D6D1               	goto	l2127
  4470  000A0C  0A01               	xorlw	1	; case 49
  4471  000A0E  B4D8               	btfsc	status,2,c
  4472  000A10  D6DD               	goto	l2129
  4473  000A12  0A03               	xorlw	3	; case 50
  4474  000A14  B4D8               	btfsc	status,2,c
  4475  000A16  D6E9               	goto	l2131
  4476  000A18  0A01               	xorlw	1	; case 51
  4477  000A1A  B4D8               	btfsc	status,2,c
  4478  000A1C  D6F5               	goto	l2133
  4479  000A1E  0A07               	xorlw	7	; case 52
  4480  000A20  B4D8               	btfsc	status,2,c
  4481  000A22  D701               	goto	l2135
  4482  000A24  0A01               	xorlw	1	; case 53
  4483  000A26  B4D8               	btfsc	status,2,c
  4484  000A28  D70D               	goto	l2137
  4485  000A2A  0A03               	xorlw	3	; case 54
  4486  000A2C  B4D8               	btfsc	status,2,c
  4487  000A2E  D719               	goto	l2139
  4488  000A30  0A01               	xorlw	1	; case 55
  4489  000A32  B4D8               	btfsc	status,2,c
  4490  000A34  D725               	goto	l2141
  4491  000A36  0A0F               	xorlw	15	; case 56
  4492  000A38  B4D8               	btfsc	status,2,c
  4493  000A3A  D731               	goto	l2143
  4494  000A3C  0A01               	xorlw	1	; case 57
  4495  000A3E  B4D8               	btfsc	status,2,c
  4496  000A40  D73D               	goto	l2145
  4497  000A42  0A78               	xorlw	120	; case 65
  4498  000A44  B4D8               	btfsc	status,2,c
  4499  000A46  D749               	goto	l2147
  4500  000A48  0A05               	xorlw	5	; case 68
  4501  000A4A  B4D8               	btfsc	status,2,c
  4502  000A4C  D755               	goto	l2149
  4503  000A4E  0A01               	xorlw	1	; case 69
  4504  000A50  B4D8               	btfsc	status,2,c
  4505  000A52  D761               	goto	l2151
  4506  000A54  0A09               	xorlw	9	; case 76
  4507  000A56  B4D8               	btfsc	status,2,c
  4508  000A58  D76D               	goto	l2153
  4509  000A5A  0A03               	xorlw	3	; case 79
  4510  000A5C  B4D8               	btfsc	status,2,c
  4511  000A5E  D779               	goto	l2155
  4512  000A60  0A1F               	xorlw	31	; case 80
  4513  000A62  B4D8               	btfsc	status,2,c
  4514  000A64  D785               	goto	l2157
  4515  000A66  D7A2               	goto	l2161
  4516  000A68                     l2165:
  4517  000A68  0100               	movlb	0	; () banked
  4518  000A6A  0794               	decf	_display_counter& (0+255),f,b
  4519  000A6C                     l2167:
  4520  000A6C  0100               	movlb	0	; () banked
  4521  000A6E  5194               	movf	_display_counter& (0+255),w,b
  4522  000A70  B4D8               	btfsc	status,2,c
  4523  000A72  0012               	return	
  4524  000A74  D69A               	goto	l431
  4525  000A76                     __end_of_Evaluate_Display:
  4526                           	opt stack 0
  4527                           tblptru	equ	0xFF8
  4528                           tblptrh	equ	0xFF7
  4529                           tblptrl	equ	0xFF6
  4530                           tablat	equ	0xFF5
  4531                           prodh	equ	0xFF4
  4532                           prodl	equ	0xFF3
  4533                           intcon	equ	0xFF2
  4534                           postinc0	equ	0xFEE
  4535                           wreg	equ	0xFE8
  4536                           postdec1	equ	0xFE5
  4537                           fsr1l	equ	0xFE1
  4538                           indf2	equ	0xFDF
  4539                           postinc2	equ	0xFDE
  4540                           postdec2	equ	0xFDD
  4541                           plusw2	equ	0xFDB
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function _Set_Bits *****************
  4547 ;; Defined at:
  4548 ;;		line 12 in file "display.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  bits            3    0[BANK0 ] PTR const unsigned char 
  4551 ;;		 -> ROM(8191), STR_17(2), STR_16(6), STR_15(7), 
  4552 ;;		 -> STR_14(4), STR_13(6), STR_12(7), STR_11(7), 
  4553 ;;		 -> STR_10(7), STR_9(8), STR_8(4), STR_7(7), 
  4554 ;;		 -> STR_6(6), STR_5(5), STR_4(6), STR_3(6), 
  4555 ;;		 -> STR_2(3), STR_1(7), 
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  bitcount        1    7[BANK0 ] unsigned char 
  4558 ;;  Bitoutput       1    8[BANK0 ] unsigned char 
  4559 ;; Return value:  Size  Location     Type
  4560 ;;		None               void
  4561 ;; Registers used:
  4562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMRAM   BANK0   BANK1
  4568 ;;      Params:         0       3       0
  4569 ;;      Locals:         0       2       0
  4570 ;;      Temps:          0       4       0
  4571 ;;      Totals:         0       9       0
  4572 ;;Total ram usage:        9 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:    5
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_Evaluate_Display
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text22
  4583  000DE8                     __ptext22:
  4584                           	opt stack 0
  4585  000DE8                     _Set_Bits:
  4586                           	opt stack 22
  4587                           
  4588                           ;display.c: 13: unsigned char Bitoutput = 0;
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;incstack = 0
  4592  000DE8  0E00               	movlw	0
  4593  000DEA  0100               	movlb	0	; () banked
  4594  000DEC  6F68               	movwf	Set_Bits@Bitoutput& (0+255),b
  4595                           
  4596                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  4597  000DEE  0E00               	movlw	0
  4598  000DF0  0100               	movlb	0	; () banked
  4599  000DF2  6F67               	movwf	Set_Bits@bitcount& (0+255),b
  4600                           
  4601                           ;display.c: 15: bitcount++) {
  4602  000DF4  D046               	goto	l2121
  4603  000DF6                     l2101:
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;display.c: 18: Bitoutput |= 0b00000001;
  4607  000DF6  0100               	movlb	0	; () banked
  4608  000DF8  8168               	bsf	Set_Bits@Bitoutput& (0+255),0,b
  4609                           
  4610                           ;display.c: 19: break;
  4611  000DFA  D041               	goto	l2119
  4612  000DFC                     l2103:
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;display.c: 21: Bitoutput |= 0b00000010;
  4616  000DFC  0100               	movlb	0	; () banked
  4617  000DFE  8368               	bsf	Set_Bits@Bitoutput& (0+255),1,b
  4618                           
  4619                           ;display.c: 22: break;
  4620  000E00  D03E               	goto	l2119
  4621  000E02                     l2105:
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;display.c: 24: Bitoutput |= 0b00000100;
  4625  000E02  0100               	movlb	0	; () banked
  4626  000E04  8568               	bsf	Set_Bits@Bitoutput& (0+255),2,b
  4627                           
  4628                           ;display.c: 25: break;
  4629  000E06  D03B               	goto	l2119
  4630  000E08                     l2107:
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;display.c: 27: Bitoutput |= 0b00001000;
  4634  000E08  0100               	movlb	0	; () banked
  4635  000E0A  8768               	bsf	Set_Bits@Bitoutput& (0+255),3,b
  4636                           
  4637                           ;display.c: 28: break;
  4638  000E0C  D038               	goto	l2119
  4639  000E0E                     l2109:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;display.c: 30: Bitoutput |= 0b00010000;
  4643  000E0E  0100               	movlb	0	; () banked
  4644  000E10  8968               	bsf	Set_Bits@Bitoutput& (0+255),4,b
  4645                           
  4646                           ;display.c: 31: break;
  4647  000E12  D035               	goto	l2119
  4648  000E14                     l2111:
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;display.c: 33: Bitoutput |= 0b00100000;
  4652  000E14  0100               	movlb	0	; () banked
  4653  000E16  8B68               	bsf	Set_Bits@Bitoutput& (0+255),5,b
  4654                           
  4655                           ;display.c: 34: break;
  4656  000E18  D032               	goto	l2119
  4657  000E1A                     l2113:
  4658                           
  4659                           ; BSR set to: 0
  4660                           ;display.c: 36: Bitoutput |= 0b01000000;
  4661  000E1A  0100               	movlb	0	; () banked
  4662  000E1C  8D68               	bsf	Set_Bits@Bitoutput& (0+255),6,b
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;display.c: 40: }
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;display.c: 39: break;
  4669                           
  4670                           ;display.c: 38: default:
  4671                           
  4672                           ;display.c: 37: break;
  4673  000E1E  D02F               	goto	l2119
  4674  000E20                     l2117:
  4675                           
  4676                           ; BSR set to: 0
  4677  000E20  0100               	movlb	0	; () banked
  4678  000E22  5167               	movf	Set_Bits@bitcount& (0+255),w,b
  4679  000E24  0D01               	mullw	1
  4680  000E26  50F3               	movf	prodl,w,c
  4681  000E28  0100               	movlb	0	; () banked
  4682  000E2A  2560               	addwf	Set_Bits@bits& (0+255),w,b
  4683  000E2C  0100               	movlb	0	; () banked
  4684  000E2E  6F63               	movwf	??_Set_Bits& (0+255),b
  4685  000E30  50F4               	movf	prodh,w,c
  4686  000E32  0100               	movlb	0	; () banked
  4687  000E34  2161               	addwfc	(Set_Bits@bits+1)& (0+255),w,b
  4688  000E36  0100               	movlb	0	; () banked
  4689  000E38  6F64               	movwf	(??_Set_Bits+1)& (0+255),b
  4690  000E3A  0E00               	movlw	0
  4691  000E3C  0100               	movlb	0	; () banked
  4692  000E3E  2162               	addwfc	(Set_Bits@bits+2)& (0+255),w,b
  4693  000E40  0100               	movlb	0	; () banked
  4694  000E42  6F65               	movwf	(??_Set_Bits+2)& (0+255),b
  4695  000E44  C063  FFF6         	movff	??_Set_Bits,tblptrl
  4696  000E48  C064  FFF7         	movff	??_Set_Bits+1,tblptrh
  4697  000E4C  C065  FFF8         	movff	??_Set_Bits+2,tblptru
  4698  000E50  0008               	tblrd		*
  4699  000E52  50F5               	movf	tablat,w,c
  4700                           
  4701                           ; Switch size 1, requested type "space"
  4702                           ; Number of cases is 7, Range of values is 65 to 71
  4703                           ; switch strategies available:
  4704                           ; Name         Instructions Cycles
  4705                           ; simple_byte           22    12 (average)
  4706                           ;	Chosen strategy is simple_byte
  4707  000E54  0A41               	xorlw	65	; case 65
  4708  000E56  B4D8               	btfsc	status,2,c
  4709  000E58  D7CE               	goto	l2101
  4710  000E5A  0A03               	xorlw	3	; case 66
  4711  000E5C  B4D8               	btfsc	status,2,c
  4712  000E5E  D7CE               	goto	l2103
  4713  000E60  0A01               	xorlw	1	; case 67
  4714  000E62  B4D8               	btfsc	status,2,c
  4715  000E64  D7CE               	goto	l2105
  4716  000E66  0A07               	xorlw	7	; case 68
  4717  000E68  B4D8               	btfsc	status,2,c
  4718  000E6A  D7CE               	goto	l2107
  4719  000E6C  0A01               	xorlw	1	; case 69
  4720  000E6E  B4D8               	btfsc	status,2,c
  4721  000E70  D7CE               	goto	l2109
  4722  000E72  0A03               	xorlw	3	; case 70
  4723  000E74  B4D8               	btfsc	status,2,c
  4724  000E76  D7CE               	goto	l2111
  4725  000E78  0A01               	xorlw	1	; case 71
  4726  000E7A  B4D8               	btfsc	status,2,c
  4727  000E7C  D7CE               	goto	l2113
  4728  000E7E                     l2119:
  4729                           
  4730                           ; BSR set to: 0
  4731  000E7E  0100               	movlb	0	; () banked
  4732  000E80  2B67               	incf	Set_Bits@bitcount& (0+255),f,b
  4733  000E82                     l2121:
  4734                           
  4735                           ; BSR set to: 0
  4736  000E82  0100               	movlb	0	; () banked
  4737  000E84  5167               	movf	Set_Bits@bitcount& (0+255),w,b
  4738  000E86  0D01               	mullw	1
  4739  000E88  50F3               	movf	prodl,w,c
  4740  000E8A  0100               	movlb	0	; () banked
  4741  000E8C  2560               	addwf	Set_Bits@bits& (0+255),w,b
  4742  000E8E  0100               	movlb	0	; () banked
  4743  000E90  6F63               	movwf	??_Set_Bits& (0+255),b
  4744  000E92  50F4               	movf	prodh,w,c
  4745  000E94  0100               	movlb	0	; () banked
  4746  000E96  2161               	addwfc	(Set_Bits@bits+1)& (0+255),w,b
  4747  000E98  0100               	movlb	0	; () banked
  4748  000E9A  6F64               	movwf	(??_Set_Bits+1)& (0+255),b
  4749  000E9C  0E00               	movlw	0
  4750  000E9E  0100               	movlb	0	; () banked
  4751  000EA0  2162               	addwfc	(Set_Bits@bits+2)& (0+255),w,b
  4752  000EA2  0100               	movlb	0	; () banked
  4753  000EA4  6F65               	movwf	(??_Set_Bits+2)& (0+255),b
  4754  000EA6  C063  FFF6         	movff	??_Set_Bits,tblptrl
  4755  000EAA  C064  FFF7         	movff	??_Set_Bits+1,tblptrh
  4756  000EAE  C065  FFF8         	movff	??_Set_Bits+2,tblptru
  4757  000EB2  0008               	tblrd		*
  4758  000EB4  50F5               	movf	tablat,w,c
  4759  000EB6  0900               	iorlw	0
  4760  000EB8  A4D8               	btfss	status,2,c
  4761  000EBA  D7B2               	goto	l2117
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;display.c: 41: }
  4765                           ;display.c: 42: pixels[(display_counter - 1)] = Bitoutput;
  4766                           
  4767                           ; BSR set to: 0
  4768  000EBC  0EFF               	movlw	255
  4769  000EBE  0100               	movlb	0	; () banked
  4770  000EC0  6F63               	movwf	??_Set_Bits& (0+255),b
  4771  000EC2  0EFF               	movlw	255
  4772  000EC4  0100               	movlb	0	; () banked
  4773  000EC6  6F64               	movwf	(??_Set_Bits+1)& (0+255),b
  4774  000EC8  0100               	movlb	0	; () banked
  4775  000ECA  5194               	movf	_display_counter& (0+255),w,b
  4776  000ECC  0100               	movlb	0	; () banked
  4777  000ECE  6F65               	movwf	(??_Set_Bits+2)& (0+255),b
  4778  000ED0  6B66               	clrf	(??_Set_Bits+3)& (0+255),b
  4779  000ED2  0100               	movlb	0	; () banked
  4780  000ED4  5163               	movf	??_Set_Bits& (0+255),w,b
  4781  000ED6  0100               	movlb	0	; () banked
  4782  000ED8  2765               	addwf	(??_Set_Bits+2)& (0+255),f,b
  4783  000EDA  0100               	movlb	0	; () banked
  4784  000EDC  5164               	movf	(??_Set_Bits+1)& (0+255),w,b
  4785  000EDE  0100               	movlb	0	; () banked
  4786  000EE0  2366               	addwfc	(??_Set_Bits+3)& (0+255),f,b
  4787  000EE2  0E83               	movlw	low _pixels
  4788  000EE4  0100               	movlb	0	; () banked
  4789  000EE6  2565               	addwf	(??_Set_Bits+2)& (0+255),w,b
  4790  000EE8  6ED9               	movwf	fsr2l,c
  4791  000EEA  0E00               	movlw	high _pixels
  4792  000EEC  0100               	movlb	0	; () banked
  4793  000EEE  2166               	addwfc	(??_Set_Bits+3)& (0+255),w,b
  4794  000EF0  6EDA               	movwf	fsr2h,c
  4795  000EF2  C068  FFDF         	movff	Set_Bits@Bitoutput,indf2
  4796                           
  4797                           ; BSR set to: 0
  4798  000EF6  0012               	return		;funcret
  4799  000EF8                     __end_of_Set_Bits:
  4800                           	opt stack 0
  4801                           tblptru	equ	0xFF8
  4802                           tblptrh	equ	0xFF7
  4803                           tblptrl	equ	0xFF6
  4804                           tablat	equ	0xFF5
  4805                           prodh	equ	0xFF4
  4806                           prodl	equ	0xFF3
  4807                           intcon	equ	0xFF2
  4808                           postinc0	equ	0xFEE
  4809                           wreg	equ	0xFE8
  4810                           postdec1	equ	0xFE5
  4811                           fsr1l	equ	0xFE1
  4812                           indf2	equ	0xFDF
  4813                           postinc2	equ	0xFDE
  4814                           postdec2	equ	0xFDD
  4815                           plusw2	equ	0xFDB
  4816                           fsr2h	equ	0xFDA
  4817                           fsr2l	equ	0xFD9
  4818                           status	equ	0xFD8
  4819                           
  4820 ;; *************** function _Read_Data *****************
  4821 ;; Defined at:
  4822 ;;		line 45 in file "storage.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;  read_address    1    wreg     unsigned char 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  read_address    1    4[BANK0 ] unsigned char 
  4827 ;;  data_read       2    2[BANK0 ] unsigned int 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  2    0[BANK0 ] unsigned int 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1
  4837 ;;      Params:         0       2       0
  4838 ;;      Locals:         0       3       0
  4839 ;;      Temps:          0       0       0
  4840 ;;      Totals:         0       5       0
  4841 ;;Total ram usage:        5 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    5
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_Check_Buttons
  4848 ;;		_Load_Data
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text23
  4853  0015D4                     __ptext23:
  4854                           	opt stack 0
  4855  0015D4                     _Read_Data:
  4856                           	opt stack 24
  4857                           
  4858                           ; BSR set to: 0
  4859                           ;incstack = 0
  4860                           ;Read_Data@read_address stored from wreg
  4861  0015D4  0100               	movlb	0	; () banked
  4862  0015D6  6F64               	movwf	Read_Data@read_address& (0+255),b
  4863                           
  4864                           ;storage.c: 46: unsigned int data_read = 0;
  4865  0015D8  0E00               	movlw	0
  4866  0015DA  0100               	movlb	0	; () banked
  4867  0015DC  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4868  0015DE  0E00               	movlw	0
  4869  0015E0  6F62               	movwf	Read_Data@data_read& (0+255),b
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;storage.c: 47: read_address += 50;
  4873  0015E2  0E32               	movlw	50
  4874  0015E4  0100               	movlb	0	; () banked
  4875  0015E6  2764               	addwf	Read_Data@read_address& (0+255),f,b
  4876                           
  4877                           ; BSR set to: 0
  4878                           ;storage.c: 48: EEADR = read_address;
  4879  0015E8  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;storage.c: 49: EECON1bits.EEPGD = 0;
  4883  0015EC  9EA6               	bcf	4006,7,c	;volatile
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;storage.c: 50: EECON1bits.CFGS = 0;
  4887  0015EE  9CA6               	bcf	4006,6,c	;volatile
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;storage.c: 51: EECON1bits.RD = 1;
  4891  0015F0  80A6               	bsf	4006,0,c	;volatile
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;storage.c: 52: data_read = EEDATA;
  4895  0015F2  CFA8 F062          	movff	4008,Read_Data@data_read	;volatile
  4896  0015F6  0100               	movlb	0	; () banked
  4897  0015F8  6B63               	clrf	(Read_Data@data_read+1)& (0+255),b
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;storage.c: 53: read_address -= 50;
  4901  0015FA  0E32               	movlw	50
  4902  0015FC  0100               	movlb	0	; () banked
  4903  0015FE  5F64               	subwf	Read_Data@read_address& (0+255),f,b
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;storage.c: 54: data_read <<= 8;
  4907  001600  0100               	movlb	0	; () banked
  4908  001602  5162               	movf	Read_Data@data_read& (0+255),w,b
  4909  001604  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4910  001606  6B62               	clrf	Read_Data@data_read& (0+255),b
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;storage.c: 55: EEADR = read_address;
  4914  001608  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;storage.c: 56: EECON1bits.EEPGD = 0;
  4918  00160C  9EA6               	bcf	4006,7,c	;volatile
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;storage.c: 57: EECON1bits.CFGS = 0;
  4922  00160E  9CA6               	bcf	4006,6,c	;volatile
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;storage.c: 58: EECON1bits.RD = 1;
  4926  001610  80A6               	bsf	4006,0,c	;volatile
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;storage.c: 59: data_read |= EEDATA;
  4930  001612  50A8               	movf	4008,w,c	;volatile
  4931  001614  0100               	movlb	0	; () banked
  4932  001616  1362               	iorwf	Read_Data@data_read& (0+255),f,b
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;storage.c: 60: return data_read;
  4936  001618  C062  F060         	movff	Read_Data@data_read,?_Read_Data
  4937  00161C  C063  F061         	movff	Read_Data@data_read+1,?_Read_Data+1
  4938  001620  0012               	return	
  4939  001622                     __end_of_Read_Data:
  4940                           	opt stack 0
  4941                           tblptru	equ	0xFF8
  4942                           tblptrh	equ	0xFF7
  4943                           tblptrl	equ	0xFF6
  4944                           tablat	equ	0xFF5
  4945                           prodh	equ	0xFF4
  4946                           prodl	equ	0xFF3
  4947                           intcon	equ	0xFF2
  4948                           postinc0	equ	0xFEE
  4949                           wreg	equ	0xFE8
  4950                           postdec1	equ	0xFE5
  4951                           fsr1l	equ	0xFE1
  4952                           indf2	equ	0xFDF
  4953                           postinc2	equ	0xFDE
  4954                           postdec2	equ	0xFDD
  4955                           plusw2	equ	0xFDB
  4956                           fsr2h	equ	0xFDA
  4957                           fsr2l	equ	0xFD9
  4958                           status	equ	0xFD8
  4959                           
  4960 ;; *************** function _Delay_Routine *****************
  4961 ;; Defined at:
  4962 ;;		line 78 in file "main.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  delay_multip    1    wreg     unsigned char 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  delay_multip    1    1[BANK0 ] unsigned char 
  4967 ;;  delay_counte    1    2[BANK0 ] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;		None               void
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0, cstack
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMRAM   BANK0   BANK1
  4977 ;;      Params:         0       0       0
  4978 ;;      Locals:         0       2       0
  4979 ;;      Temps:          0       1       0
  4980 ;;      Totals:         0       3       0
  4981 ;;Total ram usage:        3 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    5
  4984 ;; This function calls:
  4985 ;;		Nothing
  4986 ;; This function is called by:
  4987 ;;		_Check_Buttons
  4988 ;;		_Load_Data
  4989 ;;		_Del_Data
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           	psect	text24
  4994  001808                     __ptext24:
  4995                           	opt stack 0
  4996  001808                     _Delay_Routine:
  4997                           	opt stack 24
  4998                           
  4999                           ; BSR set to: 0
  5000                           ;incstack = 0
  5001                           ;Delay_Routine@delay_multiplyer stored from wreg
  5002  001808  0100               	movlb	0	; () banked
  5003  00180A  6F61               	movwf	Delay_Routine@delay_multiplyer& (0+255),b
  5004                           
  5005                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  5006  00180C  0E00               	movlw	0
  5007  00180E  0100               	movlb	0	; () banked
  5008  001810  6F62               	movwf	Delay_Routine@delay_counter& (0+255),b
  5009                           
  5010                           ;main.c: 80: delay_counter++) {
  5011  001812  D00A               	goto	l2249
  5012  001814                     l2245:
  5013                           
  5014                           ; BSR set to: 0
  5015                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  5016  001814  0E82               	movlw	130
  5017  001816  0100               	movlb	0	; () banked
  5018  001818  6F60               	movwf	??_Delay_Routine& (0+255),b
  5019  00181A  0EDE               	movlw	222
  5020  00181C                     u2507:
  5021  00181C  2EE8               	decfsz	wreg,f,c
  5022  00181E  D7FE               	goto	u2507
  5023  001820  2F60               	decfsz	??_Delay_Routine& (0+255),f,b
  5024  001822  D7FC               	goto	u2507
  5025  001824  0100               	movlb	0	; () banked
  5026  001826  2B62               	incf	Delay_Routine@delay_counter& (0+255),f,b
  5027  001828                     l2249:
  5028                           
  5029                           ; BSR set to: 0
  5030  001828  0100               	movlb	0	; () banked
  5031  00182A  5161               	movf	Delay_Routine@delay_multiplyer& (0+255),w,b
  5032  00182C  0100               	movlb	0	; () banked
  5033  00182E  5D62               	subwf	Delay_Routine@delay_counter& (0+255),w,b
  5034  001830  A0D8               	btfss	status,0,c
  5035  001832  D7F0               	goto	l2245
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;main.c: 82: }
  5039                           ;main.c: 83: __nop();
  5040  001834  F000               	nop	
  5041  001836  0012               	return		;funcret
  5042  001838                     __end_of_Delay_Routine:
  5043                           	opt stack 0
  5044                           tblptru	equ	0xFF8
  5045                           tblptrh	equ	0xFF7
  5046                           tblptrl	equ	0xFF6
  5047                           tablat	equ	0xFF5
  5048                           prodh	equ	0xFF4
  5049                           prodl	equ	0xFF3
  5050                           intcon	equ	0xFF2
  5051                           postinc0	equ	0xFEE
  5052                           wreg	equ	0xFE8
  5053                           postdec1	equ	0xFE5
  5054                           fsr1l	equ	0xFE1
  5055                           indf2	equ	0xFDF
  5056                           postinc2	equ	0xFDE
  5057                           postdec2	equ	0xFDD
  5058                           plusw2	equ	0xFDB
  5059                           fsr2h	equ	0xFDA
  5060                           fsr2l	equ	0xFD9
  5061                           status	equ	0xFD8
  5062                           
  5063 ;; *************** function _Isr *****************
  5064 ;; Defined at:
  5065 ;;		line 4 in file "interrupt.c"
  5066 ;; Parameters:    Size  Location     Type
  5067 ;;		None
  5068 ;; Auto vars:     Size  Location     Type
  5069 ;;  search_index    1   46[COMRAM] unsigned char 
  5070 ;;  pixel_index_    1   45[COMRAM] unsigned char 
  5071 ;;  pixel_index_    1   44[COMRAM] unsigned char 
  5072 ;; Return value:  Size  Location     Type
  5073 ;;		None               void
  5074 ;; Registers used:
  5075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1
  5081 ;;      Params:         0       0       0
  5082 ;;      Locals:         3       0       0
  5083 ;;      Temps:         17       0       0
  5084 ;;      Totals:        20       0       0
  5085 ;;Total ram usage:       20 bytes
  5086 ;; Hardware stack levels used:    1
  5087 ;; Hardware stack levels required when called:    4
  5088 ;; This function calls:
  5089 ;;		_Ignite_Detonators
  5090 ;;		_Receive
  5091 ;;		_Receive_Dump
  5092 ;;		___awdiv
  5093 ;;		i2_Check_Detonators
  5094 ;;		i2_Set_Display
  5095 ;; This function is called by:
  5096 ;;		Interrupt level 2
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	intcode
  5101  000008                     __pintcode:
  5102                           	opt stack 0
  5103  000008                     _Isr:
  5104                           	opt stack 19
  5105                           
  5106                           ;incstack = 0
  5107  000008  823A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5108  00000A  CFFA F01F          	movff	pclath,??_Isr+3
  5109  00000E  CFFB F020          	movff	pclatu,??_Isr+4
  5110  000012  CFE9 F021          	movff	fsr0l,??_Isr+5
  5111  000016  CFEA F022          	movff	fsr0h,??_Isr+6
  5112  00001A  CFE1 F023          	movff	fsr1l,??_Isr+7
  5113  00001E  CFE2 F024          	movff	fsr1h,??_Isr+8
  5114  000022  CFD9 F025          	movff	fsr2l,??_Isr+9
  5115  000026  CFDA F026          	movff	fsr2h,??_Isr+10
  5116  00002A  CFF3 F027          	movff	prodl,??_Isr+11
  5117  00002E  CFF4 F028          	movff	prodh,??_Isr+12
  5118  000032  CFF6 F029          	movff	tblptrl,??_Isr+13
  5119  000036  CFF7 F02A          	movff	tblptrh,??_Isr+14
  5120  00003A  CFF8 F02B          	movff	tblptru,??_Isr+15
  5121  00003E  CFF5 F02C          	movff	tablat,??_Isr+16
  5122                           
  5123                           ;interrupt.c: 5: if(PIR1bits.CCP1IF == 1) {
  5124  000042  A49E               	btfss	3998,2,c	;volatile
  5125  000044  D00B               	goto	i2l2837
  5126                           
  5127                           ;interrupt.c: 7: PIR1bits.CCP1IF = 0;
  5128  000046  949E               	bcf	3998,2,c	;volatile
  5129                           
  5130                           ;interrupt.c: 8: T1CONbits.TMR1ON = 1;
  5131  000048  80CD               	bsf	4045,0,c	;volatile
  5132                           
  5133                           ;interrupt.c: 9: T3CONbits.TMR3ON = 0;
  5134  00004A  90B1               	bcf	4017,0,c	;volatile
  5135                           
  5136                           ;interrupt.c: 10: TMR3L = 0;
  5137  00004C  0E00               	movlw	0
  5138  00004E  6EB2               	movwf	4018,c	;volatile
  5139                           
  5140                           ;interrupt.c: 11: TMR3H = 0;
  5141  000050  0E00               	movlw	0
  5142  000052  6EB3               	movwf	4019,c	;volatile
  5143                           
  5144                           ;interrupt.c: 12: current_time++;
  5145  000054  4A36               	infsnz	_current_time,f,c
  5146  000056  2A37               	incf	_current_time+1,f,c
  5147                           
  5148                           ;interrupt.c: 13: Ignite_Detonators();
  5149  000058  EC74  F009         	call	_Ignite_Detonators	;wreg free
  5150  00005C                     i2l2837:
  5151                           
  5152                           ;interrupt.c: 14: }
  5153                           ;interrupt.c: 15: if(PIR1bits.TMR1IF == 1) {
  5154  00005C  A09E               	btfss	3998,0,c	;volatile
  5155  00005E  D007               	goto	i2l2843
  5156                           
  5157                           ;interrupt.c: 16: PIR1bits.TMR1IF = 0;
  5158  000060  909E               	bcf	3998,0,c	;volatile
  5159                           
  5160                           ;interrupt.c: 17: T3CONbits.TMR3ON = 1;
  5161  000062  80B1               	bsf	4017,0,c	;volatile
  5162                           
  5163                           ;interrupt.c: 18: T1CONbits.TMR1ON = 0;
  5164  000064  90CD               	bcf	4045,0,c	;volatile
  5165                           
  5166                           ;interrupt.c: 19: TMR1L = 0;
  5167  000066  0E00               	movlw	0
  5168  000068  6ECE               	movwf	4046,c	;volatile
  5169                           
  5170                           ;interrupt.c: 20: TMR1H = 0;
  5171  00006A  0E00               	movlw	0
  5172  00006C  6ECF               	movwf	4047,c	;volatile
  5173  00006E                     i2l2843:
  5174                           
  5175                           ;interrupt.c: 21: }
  5176                           ;interrupt.c: 22: if(PIR1bits.RCIF == 1) {
  5177  00006E  AA9E               	btfss	3998,5,c	;volatile
  5178  000070  D0B9               	goto	i2l631
  5179                           
  5180                           ;interrupt.c: 23: if(RCSTAbits.RX9D == 1) {
  5181  000072  A0AB               	btfss	4011,0,c	;volatile
  5182  000074  D016               	goto	i2l617
  5183                           
  5184                           ;interrupt.c: 24: receive_counter = 0;
  5185  000076  0E00               	movlw	0
  5186  000078  6E38               	movwf	_receive_counter,c
  5187                           
  5188                           ;interrupt.c: 26: received[receive_counter] =
  5189                           ;interrupt.c: 27: Receive();
  5190  00007A  5038               	movf	_receive_counter,w,c
  5191  00007C  0D01               	mullw	1
  5192  00007E  0E30               	movlw	low _received
  5193  000080  24F3               	addwf	prodl,w,c
  5194  000082  6ED9               	movwf	fsr2l,c
  5195  000084  0E00               	movlw	high _received
  5196  000086  20F4               	addwfc	prodh,w,c
  5197  000088  6EDA               	movwf	fsr2h,c
  5198  00008A  EC86  F00C         	call	_Receive	;wreg free
  5199  00008E  6EDF               	movwf	indf2,c
  5200                           
  5201                           ;interrupt.c: 28: receive_counter++;
  5202  000090  2A38               	incf	_receive_counter,f,c
  5203                           
  5204                           ;interrupt.c: 30: if(received[0] == 0xAA) {
  5205  000092  0EAA               	movlw	170
  5206  000094  1830               	xorwf	_received,w,c
  5207  000096  A4D8               	btfss	status,2,c
  5208  000098  D002               	goto	i2l618
  5209                           
  5210                           ;interrupt.c: 31: master_addressed = 1;
  5211  00009A  8239               	bsf	_master_addressed/(0+8),_master_addressed& (0+7),c
  5212                           
  5213                           ;interrupt.c: 32: } else {
  5214  00009C  D093               	goto	i2l2895
  5215  00009E                     i2l618:
  5216                           
  5217                           ;interrupt.c: 33: master_addressed = 0;
  5218  00009E  9239               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  5219                           
  5220                           ;interrupt.c: 34: }
  5221                           ;interrupt.c: 35: } else if(master_addressed == 1) {
  5222  0000A0  D091               	goto	i2l2895
  5223  0000A2                     i2l617:
  5224  0000A2  A239               	btfss	_master_addressed/(0+8),_master_addressed& (0+7),c
  5225  0000A4  D08D               	goto	i2l2893
  5226                           
  5227                           ;interrupt.c: 36: received[receive_counter] =
  5228                           ;interrupt.c: 37: Receive();
  5229  0000A6  5038               	movf	_receive_counter,w,c
  5230  0000A8  0D01               	mullw	1
  5231  0000AA  0E30               	movlw	low _received
  5232  0000AC  24F3               	addwf	prodl,w,c
  5233  0000AE  6ED9               	movwf	fsr2l,c
  5234  0000B0  0E00               	movlw	high _received
  5235  0000B2  20F4               	addwfc	prodh,w,c
  5236  0000B4  6EDA               	movwf	fsr2h,c
  5237  0000B6  EC86  F00C         	call	_Receive	;wreg free
  5238  0000BA  6EDF               	movwf	indf2,c
  5239                           
  5240                           ;interrupt.c: 38: receive_counter++;
  5241  0000BC  2A38               	incf	_receive_counter,f,c
  5242                           
  5243                           ;interrupt.c: 40: if(receive_counter > 5) {
  5244  0000BE  0E05               	movlw	5
  5245  0000C0  6438               	cpfsgt	_receive_counter,c
  5246  0000C2  D080               	goto	i2l2895
  5247                           
  5248                           ;interrupt.c: 41: receive_counter = 0;
  5249  0000C4  0E00               	movlw	0
  5250  0000C6  6E38               	movwf	_receive_counter,c
  5251                           
  5252                           ;interrupt.c: 42: master_addressed = 0;
  5253  0000C8  9239               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  5254                           
  5255                           ;interrupt.c: 44: if(received[2] == 'T') {
  5256  0000CA  0E54               	movlw	84
  5257  0000CC  1832               	xorwf	_received+2,w,c
  5258  0000CE  A4D8               	btfss	status,2,c
  5259  0000D0  D079               	goto	i2l2895
  5260                           
  5261                           ;interrupt.c: 45: unsigned char search_index = 0xFF;
  5262  0000D2  682F               	setf	Isr@search_index,c
  5263                           
  5264                           ;interrupt.c: 46: unsigned char pixel_index_array = 0;
  5265  0000D4  0E00               	movlw	0
  5266  0000D6  6E2D               	movwf	Isr@pixel_index_array,c
  5267                           
  5268                           ;interrupt.c: 47: unsigned char pixel_index_bit = 0;
  5269  0000D8  0E00               	movlw	0
  5270  0000DA  6E2E               	movwf	Isr@pixel_index_bit,c
  5271                           
  5272                           ;interrupt.c: 48: search_index = (received[1] * 10);
  5273  0000DC  5031               	movf	_received+1,w,c
  5274  0000DE  0D0A               	mullw	10
  5275  0000E0  CFF3 F02F          	movff	prodl,Isr@search_index
  5276                           
  5277                           ;interrupt.c: 50: search_index += received[3];
  5278  0000E4  5033               	movf	_received+3,w,c
  5279  0000E6  262F               	addwf	Isr@search_index,f,c
  5280                           
  5281                           ;interrupt.c: 52: pixel_index_array =
  5282                           ;interrupt.c: 53: pin[search_index].led_address / 8;
  5283  0000E8  502F               	movf	Isr@search_index,w,c
  5284  0000EA  0D06               	mullw	6
  5285  0000EC  0E03               	movlw	3
  5286  0000EE  26F3               	addwf	prodl,f,c
  5287  0000F0  0E00               	movlw	0
  5288  0000F2  22F4               	addwfc	prodh,f,c
  5289  0000F4  0E00               	movlw	low _pin
  5290  0000F6  24F3               	addwf	prodl,w,c
  5291  0000F8  6ED9               	movwf	fsr2l,c
  5292  0000FA  0E01               	movlw	high _pin
  5293  0000FC  20F4               	addwfc	prodh,w,c
  5294  0000FE  6EDA               	movwf	fsr2h,c
  5295  000100  50DF               	movf	indf2,w,c
  5296  000102  6E1C               	movwf	??_Isr& (0+255),c
  5297  000104  501C               	movf	??_Isr,w,c
  5298  000106  6E01               	movwf	___awdiv@dividend,c
  5299  000108  6A02               	clrf	___awdiv@dividend+1,c
  5300  00010A  0E00               	movlw	0
  5301  00010C  6E04               	movwf	___awdiv@divisor+1,c
  5302  00010E  0E08               	movlw	8
  5303  000110  6E03               	movwf	___awdiv@divisor,c
  5304  000112  ECF6  F008         	call	___awdiv	;wreg free
  5305  000116  5001               	movf	?___awdiv,w,c
  5306  000118  6E2D               	movwf	Isr@pixel_index_array,c
  5307                           
  5308                           ;interrupt.c: 54: pixel_index_bit =
  5309                           ;interrupt.c: 55: pin[search_index].led_address % 8;
  5310  00011A  502F               	movf	Isr@search_index,w,c
  5311  00011C  0D06               	mullw	6
  5312  00011E  0E03               	movlw	3
  5313  000120  26F3               	addwf	prodl,f,c
  5314  000122  0E00               	movlw	0
  5315  000124  22F4               	addwfc	prodh,f,c
  5316  000126  0E00               	movlw	low _pin
  5317  000128  24F3               	addwf	prodl,w,c
  5318  00012A  6ED9               	movwf	fsr2l,c
  5319  00012C  0E01               	movlw	high _pin
  5320  00012E  20F4               	addwfc	prodh,w,c
  5321  000130  6EDA               	movwf	fsr2h,c
  5322  000132  50DF               	movf	indf2,w,c
  5323  000134  0B07               	andlw	7
  5324  000136  6E2E               	movwf	Isr@pixel_index_bit,c
  5325                           
  5326                           ;interrupt.c: 56: if(received[4] == '1'){
  5327  000138  0E31               	movlw	49
  5328  00013A  1834               	xorwf	_received+4,w,c
  5329  00013C  A4D8               	btfss	status,2,c
  5330  00013E  D015               	goto	i2l2885
  5331                           
  5332                           ;interrupt.c: 57: pixels[pixel_index_array] |=
  5333                           ;interrupt.c: 58: (1 << pixel_index_bit);
  5334  000140  C02E  F01C         	movff	Isr@pixel_index_bit,??_Isr
  5335  000144  0E01               	movlw	1
  5336  000146  6E1D               	movwf	(??_Isr+1)& (0+255),c
  5337  000148  2A1C               	incf	??_Isr,f,c
  5338  00014A  D002               	goto	i2u195_44
  5339  00014C                     i2u195_45:
  5340  00014C  90D8               	bcf	status,0,c
  5341  00014E  361D               	rlcf	??_Isr+1,f,c
  5342  000150                     i2u195_44:
  5343  000150  2E1C               	decfsz	??_Isr,f,c
  5344  000152  D7FC               	goto	i2u195_45
  5345  000154  502D               	movf	Isr@pixel_index_array,w,c
  5346  000156  0D01               	mullw	1
  5347  000158  0E83               	movlw	low _pixels
  5348  00015A  24F3               	addwf	prodl,w,c
  5349  00015C  6ED9               	movwf	fsr2l,c
  5350  00015E  0E00               	movlw	high _pixels
  5351  000160  20F4               	addwfc	prodh,w,c
  5352  000162  6EDA               	movwf	fsr2h,c
  5353  000164  501D               	movf	??_Isr+1,w,c
  5354  000166  12DF               	iorwf	indf2,f,c
  5355                           
  5356                           ;interrupt.c: 59: }else if(received[4] == '0') {
  5357  000168  D01B               	goto	i2l2889
  5358  00016A                     i2l2885:
  5359  00016A  0E30               	movlw	48
  5360  00016C  1834               	xorwf	_received+4,w,c
  5361  00016E  A4D8               	btfss	status,2,c
  5362  000170  D017               	goto	i2l2889
  5363                           
  5364                           ;interrupt.c: 60: pixels[pixel_index_array] &=
  5365                           ;interrupt.c: 61: ~(1 << pixel_index_bit);
  5366  000172  C02E  F01C         	movff	Isr@pixel_index_bit,??_Isr
  5367  000176  0E01               	movlw	1
  5368  000178  6E1D               	movwf	(??_Isr+1)& (0+255),c
  5369  00017A  2A1C               	incf	??_Isr,f,c
  5370  00017C  D002               	goto	i2u197_44
  5371  00017E                     i2u197_45:
  5372  00017E  90D8               	bcf	status,0,c
  5373  000180  361D               	rlcf	??_Isr+1,f,c
  5374  000182                     i2u197_44:
  5375  000182  2E1C               	decfsz	??_Isr,f,c
  5376  000184  D7FC               	goto	i2u197_45
  5377  000186  501D               	movf	??_Isr+1,w,c
  5378  000188  0AFF               	xorlw	255
  5379  00018A  6E1E               	movwf	(??_Isr+2)& (0+255),c
  5380  00018C  502D               	movf	Isr@pixel_index_array,w,c
  5381  00018E  0D01               	mullw	1
  5382  000190  0E83               	movlw	low _pixels
  5383  000192  24F3               	addwf	prodl,w,c
  5384  000194  6ED9               	movwf	fsr2l,c
  5385  000196  0E00               	movlw	high _pixels
  5386  000198  20F4               	addwfc	prodh,w,c
  5387  00019A  6EDA               	movwf	fsr2h,c
  5388  00019C  501E               	movf	??_Isr+2,w,c
  5389  00019E  16DF               	andwf	indf2,f,c
  5390  0001A0                     i2l2889:
  5391                           
  5392                           ;interrupt.c: 62: }
  5393                           ;interrupt.c: 63: if(received[5] == '1') {
  5394  0001A0  0E31               	movlw	49
  5395  0001A2  1835               	xorwf	_received+5,w,c
  5396  0001A4  A4D8               	btfss	status,2,c
  5397  0001A6  D00E               	goto	i2l2895
  5398                           
  5399                           ;interrupt.c: 64: Set_Display('7', 'P', (received[1] + 1));
  5400  0001A8  0E50               	movlw	80
  5401  0001AA  6E18               	movwf	i2Set_Display@information,c
  5402  0001AC  0E01               	movlw	1
  5403  0001AE  2431               	addwf	_received+1,w,c
  5404  0001B0  6E19               	movwf	i2Set_Display@value,c
  5405  0001B2  6A1A               	clrf	i2Set_Display@value+1,c
  5406  0001B4  0E00               	movlw	0
  5407  0001B6  221A               	addwfc	i2Set_Display@value+1,f,c
  5408  0001B8  0E37               	movlw	55
  5409  0001BA  EC96  F00A         	call	i2_Set_Display
  5410                           
  5411                           ;interrupt.c: 65: }
  5412                           ;interrupt.c: 66: }
  5413                           ;interrupt.c: 67: }
  5414                           ;interrupt.c: 68: } else {
  5415  0001BE  D002               	goto	i2l2895
  5416  0001C0                     i2l2893:
  5417                           
  5418                           ;interrupt.c: 69: Receive_Dump();
  5419  0001C0  EC7E  F00C         	call	_Receive_Dump	;wreg free
  5420  0001C4                     i2l2895:
  5421                           
  5422                           ;interrupt.c: 70: }
  5423                           ;interrupt.c: 71: __nop();
  5424  0001C4  F000               	nop	
  5425                           
  5426                           ;interrupt.c: 72: if(check_counter < 30 && testflag == 1) {
  5427  0001C6  0E1E               	movlw	30
  5428  0001C8  0100               	movlb	0	; () banked
  5429  0001CA  6180               	cpfslt	_check_counter& (0+255),b
  5430  0001CC  D007               	goto	i2l2905
  5431                           
  5432                           ; BSR set to: 0
  5433  0001CE  A639               	btfss	_testflag/(0+8),_testflag& (0+7),c
  5434  0001D0  D005               	goto	i2l2905
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;interrupt.c: 73: check_counter++;
  5438  0001D2  0100               	movlb	0	; () banked
  5439  0001D4  2B80               	incf	_check_counter& (0+255),f,b
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;interrupt.c: 74: Check_Detonators();
  5443  0001D6  EC97  F00B         	call	i2_Check_Detonators	;wreg free
  5444                           
  5445                           ;interrupt.c: 75: }else {
  5446  0001DA  D004               	goto	i2l631
  5447  0001DC                     i2l2905:
  5448                           
  5449                           ;interrupt.c: 76: check_counter = 0;
  5450  0001DC  0E00               	movlw	0
  5451  0001DE  0100               	movlb	0	; () banked
  5452  0001E0  6F80               	movwf	_check_counter& (0+255),b
  5453                           
  5454                           ; BSR set to: 0
  5455                           ;interrupt.c: 77: testflag = 0;
  5456  0001E2  9639               	bcf	_testflag/(0+8),_testflag& (0+7),c
  5457  0001E4                     i2l631:
  5458  0001E4  C02C  FFF5         	movff	??_Isr+16,tablat
  5459  0001E8  C02B  FFF8         	movff	??_Isr+15,tblptru
  5460  0001EC  C02A  FFF7         	movff	??_Isr+14,tblptrh
  5461  0001F0  C029  FFF6         	movff	??_Isr+13,tblptrl
  5462  0001F4  C028  FFF4         	movff	??_Isr+12,prodh
  5463  0001F8  C027  FFF3         	movff	??_Isr+11,prodl
  5464  0001FC  C026  FFDA         	movff	??_Isr+10,fsr2h
  5465  000200  C025  FFD9         	movff	??_Isr+9,fsr2l
  5466  000204  C024  FFE2         	movff	??_Isr+8,fsr1h
  5467  000208  C023  FFE1         	movff	??_Isr+7,fsr1l
  5468  00020C  C022  FFEA         	movff	??_Isr+6,fsr0h
  5469  000210  C021  FFE9         	movff	??_Isr+5,fsr0l
  5470  000214  C020  FFFB         	movff	??_Isr+4,pclatu
  5471  000218  C01F  FFFA         	movff	??_Isr+3,pclath
  5472  00021C  923A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5473  00021E  0011               	retfie		f
  5474  000220                     __end_of_Isr:
  5475                           	opt stack 0
  5476                           pclatu	equ	0xFFB
  5477                           pclath	equ	0xFFA
  5478                           tblptru	equ	0xFF8
  5479                           tblptrh	equ	0xFF7
  5480                           tblptrl	equ	0xFF6
  5481                           tablat	equ	0xFF5
  5482                           prodh	equ	0xFF4
  5483                           prodl	equ	0xFF3
  5484                           intcon	equ	0xFF2
  5485                           postinc0	equ	0xFEE
  5486                           fsr0h	equ	0xFEA
  5487                           fsr0l	equ	0xFE9
  5488                           wreg	equ	0xFE8
  5489                           postdec1	equ	0xFE5
  5490                           fsr1h	equ	0xFE2
  5491                           fsr1l	equ	0xFE1
  5492                           indf2	equ	0xFDF
  5493                           postinc2	equ	0xFDE
  5494                           postdec2	equ	0xFDD
  5495                           plusw2	equ	0xFDB
  5496                           fsr2h	equ	0xFDA
  5497                           fsr2l	equ	0xFD9
  5498                           status	equ	0xFD8
  5499                           
  5500 ;; *************** function i2_Set_Display *****************
  5501 ;; Defined at:
  5502 ;;		line 139 in file "display.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;  type            1    wreg     unsigned char 
  5505 ;;  information     1   23[COMRAM] unsigned char 
  5506 ;;  value           2   24[COMRAM] unsigned int 
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;  type            1   26[COMRAM] unsigned char 
  5509 ;; Return value:  Size  Location     Type
  5510 ;;		None               void
  5511 ;; Registers used:
  5512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5513 ;; Tracked objects:
  5514 ;;		On entry : 0/0
  5515 ;;		On exit  : 0/0
  5516 ;;		Unchanged: 0/0
  5517 ;; Data sizes:     COMRAM   BANK0   BANK1
  5518 ;;      Params:         3       0       0
  5519 ;;      Locals:         1       0       0
  5520 ;;      Temps:          0       0       0
  5521 ;;      Totals:         4       0       0
  5522 ;;Total ram usage:        4 bytes
  5523 ;; Hardware stack levels used:    1
  5524 ;; Hardware stack levels required when called:    3
  5525 ;; This function calls:
  5526 ;;		i2_Evaluate_Display
  5527 ;;		i2_Evaluate_Signs
  5528 ;;		i2_Write_Display_Byte
  5529 ;; This function is called by:
  5530 ;;		_Isr
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           	psect	text26
  5535  00152C                     __ptext26:
  5536                           	opt stack 0
  5537  00152C                     i2_Set_Display:
  5538                           	opt stack 19
  5539                           
  5540                           ;incstack = 0
  5541                           ;i2Set_Display@type stored from wreg
  5542  00152C  6E1B               	movwf	i2Set_Display@type,c
  5543                           
  5544                           ;display.c: 141: switch (type) {
  5545  00152E  D01D               	goto	i2l2809
  5546  001530                     i2l2793:
  5547                           
  5548                           ;display.c: 143: if(information != '-') {
  5549  001530  0E2D               	movlw	45
  5550  001532  1818               	xorwf	i2Set_Display@information,w,c
  5551  001534  B4D8               	btfsc	status,2,c
  5552  001536  D012               	goto	i2l2805
  5553                           
  5554                           ;display.c: 144: signs[0] = value;
  5555  001538  C019  F08B         	movff	i2Set_Display@value,_signs
  5556                           
  5557                           ;display.c: 145: signs[0] += 0x30;
  5558  00153C  0E30               	movlw	48
  5559  00153E  0100               	movlb	0	; () banked
  5560  001540  278B               	addwf	_signs& (0+255),f,b
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;display.c: 146: signs[1] = '-';
  5564  001542  0E2D               	movlw	45
  5565  001544  0100               	movlb	0	; () banked
  5566  001546  6F8C               	movwf	(_signs+1)& (0+255),b
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;display.c: 147: signs[2] = information;
  5570  001548  C018  F08D         	movff	i2Set_Display@information,_signs+2
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;display.c: 148: Evaluate_Display(sizeof(signs), signs);
  5574  00154C  0E8B               	movlw	low _signs
  5575  00154E  6E0A               	movwf	i2Evaluate_Display@evaluate,c
  5576  001550  0E00               	movlw	high _signs
  5577  001552  6E0B               	movwf	i2Evaluate_Display@evaluate+1,c
  5578  001554  0E03               	movlw	3
  5579  001556  EC3B  F005         	call	i2_Evaluate_Display
  5580                           
  5581                           ;display.c: 149: } else {
  5582  00155A  D00C               	goto	i2l2811
  5583  00155C                     i2l2805:
  5584                           
  5585                           ;display.c: 150: Evaluate_Signs(value);
  5586  00155C  C019  F011         	movff	i2Set_Display@value,i2Evaluate_Signs@evaluation_value
  5587  001560  C01A  F012         	movff	i2Set_Display@value+1,i2Evaluate_Signs@evaluation_value+1
  5588  001564  ECA8  F008         	call	i2_Evaluate_Signs	;wreg free
  5589                           
  5590                           ;display.c: 156: }
  5591                           
  5592                           ;display.c: 155: break;
  5593                           
  5594                           ;display.c: 153: case 'L':
  5595                           
  5596                           ;display.c: 151: }
  5597                           ;display.c: 152: break;
  5598  001568  D005               	goto	i2l2811
  5599  00156A                     i2l2809:
  5600  00156A  501B               	movf	i2Set_Display@type,w,c
  5601                           
  5602                           ; Switch size 1, requested type "space"
  5603                           ; Number of cases is 2, Range of values is 55 to 76
  5604                           ; switch strategies available:
  5605                           ; Name         Instructions Cycles
  5606                           ; simple_byte            7     4 (average)
  5607                           ;	Chosen strategy is simple_byte
  5608  00156C  0A37               	xorlw	55	; case 55
  5609  00156E  B4D8               	btfsc	status,2,c
  5610  001570  D7DF               	goto	i2l2793
  5611  001572  0A7B               	xorlw	123	; case 76
  5612  001574                     i2l2811:
  5613                           
  5614                           ;display.c: 157: Write_Display_Byte(pixels);
  5615  001574  0E83               	movlw	low _pixels
  5616  001576  6E01               	movwf	i2Write_Display_Byte@write_data,c
  5617  001578  0E00               	movlw	high _pixels
  5618  00157A  6E02               	movwf	i2Write_Display_Byte@write_data+1,c
  5619  00157C  EC35  F00B         	call	i2_Write_Display_Byte	;wreg free
  5620  001580  0012               	return		;funcret
  5621  001582                     __end_ofi2_Set_Display:
  5622                           	opt stack 0
  5623                           pclatu	equ	0xFFB
  5624                           pclath	equ	0xFFA
  5625                           tblptru	equ	0xFF8
  5626                           tblptrh	equ	0xFF7
  5627                           tblptrl	equ	0xFF6
  5628                           tablat	equ	0xFF5
  5629                           prodh	equ	0xFF4
  5630                           prodl	equ	0xFF3
  5631                           intcon	equ	0xFF2
  5632                           postinc0	equ	0xFEE
  5633                           fsr0h	equ	0xFEA
  5634                           fsr0l	equ	0xFE9
  5635                           wreg	equ	0xFE8
  5636                           postdec1	equ	0xFE5
  5637                           fsr1h	equ	0xFE2
  5638                           fsr1l	equ	0xFE1
  5639                           indf2	equ	0xFDF
  5640                           postinc2	equ	0xFDE
  5641                           postdec2	equ	0xFDD
  5642                           plusw2	equ	0xFDB
  5643                           fsr2h	equ	0xFDA
  5644                           fsr2l	equ	0xFD9
  5645                           status	equ	0xFD8
  5646                           
  5647 ;; *************** function i2_Write_Display_Byte *****************
  5648 ;; Defined at:
  5649 ;;		line 56 in file "communication.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;  write_data      2    0[COMRAM] PTR unsigned char 
  5652 ;;		 -> pixels(8), 
  5653 ;; Auto vars:     Size  Location     Type
  5654 ;;  Write_Displa    1    6[COMRAM] unsigned char 
  5655 ;; Return value:  Size  Location     Type
  5656 ;;		None               void
  5657 ;; Registers used:
  5658 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5659 ;; Tracked objects:
  5660 ;;		On entry : 0/0
  5661 ;;		On exit  : 0/0
  5662 ;;		Unchanged: 0/0
  5663 ;; Data sizes:     COMRAM   BANK0   BANK1
  5664 ;;      Params:         2       0       0
  5665 ;;      Locals:         1       0       0
  5666 ;;      Temps:          4       0       0
  5667 ;;      Totals:         7       0       0
  5668 ;;Total ram usage:        7 bytes
  5669 ;; Hardware stack levels used:    1
  5670 ;; This function calls:
  5671 ;;		Nothing
  5672 ;; This function is called by:
  5673 ;;		i2_Set_Display
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text27
  5678  00166A                     __ptext27:
  5679                           	opt stack 0
  5680  00166A                     i2_Write_Display_Byte:
  5681                           	opt stack 21
  5682                           
  5683                           ;communication.c: 57: for(unsigned char counter = sizeof(pixels); counter > 0;
  5684                           
  5685                           ;incstack = 0
  5686  00166A  0E08               	movlw	8
  5687  00166C  6E07               	movwf	i2Write_Display_Byte@counter,c
  5688  00166E                     
  5689                           ;communication.c: 58: counter--) {
  5690  00166E  5007               	movf	i2Write_Display_Byte@counter,w,c
  5691  001670  B4D8               	btfsc	status,2,c
  5692  001672  0012               	return	
  5693                           
  5694                           ;communication.c: 59: if(SSP1IF = 1) {
  5695  001674  869E               	bsf	3998,3,c	;volatile
  5696  001676  B69E               	btfsc	3998,3,c	;volatile
  5697                           
  5698                           ;communication.c: 60: SSP1IF = 0;
  5699  001678  969E               	bcf	3998,3,c	;volatile
  5700                           
  5701                           ;communication.c: 61: }
  5702                           ;communication.c: 62: SSP1BUF = write_data[counter - 1];
  5703  00167A  0EFF               	movlw	255
  5704  00167C  6E03               	movwf	??i2_Write_Display_Byte& (0+255),c
  5705  00167E  0EFF               	movlw	255
  5706  001680  6E04               	movwf	(??i2_Write_Display_Byte+1)& (0+255),c
  5707  001682  5007               	movf	i2Write_Display_Byte@counter,w,c
  5708  001684  6E05               	movwf	(??i2_Write_Display_Byte+2)& (0+255),c
  5709  001686  6A06               	clrf	(??i2_Write_Display_Byte+3)& (0+255),c
  5710  001688  5003               	movf	??i2_Write_Display_Byte,w,c
  5711  00168A  2605               	addwf	??i2_Write_Display_Byte+2,f,c
  5712  00168C  5004               	movf	??i2_Write_Display_Byte+1,w,c
  5713  00168E  2206               	addwfc	??i2_Write_Display_Byte+3,f,c
  5714  001690  5005               	movf	??i2_Write_Display_Byte+2,w,c
  5715  001692  2401               	addwf	i2Write_Display_Byte@write_data,w,c
  5716  001694  6ED9               	movwf	fsr2l,c
  5717  001696  5006               	movf	??i2_Write_Display_Byte+3,w,c
  5718  001698  2002               	addwfc	i2Write_Display_Byte@write_data+1,w,c
  5719  00169A  6EDA               	movwf	fsr2h,c
  5720  00169C  50DF               	movf	indf2,w,c
  5721  00169E  6EC9               	movwf	4041,c	;volatile
  5722                           
  5723                           ;communication.c: 64: SSP1IF = 0;
  5724  0016A0  969E               	bcf	3998,3,c	;volatile
  5725                           
  5726                           ;communication.c: 65: PORTCbits.RC0 = 0;
  5727  0016A2  9082               	bcf	3970,0,c	;volatile
  5728                           
  5729                           ;communication.c: 66: PORTCbits.RC0 = 1;
  5730  0016A4  8082               	bsf	3970,0,c	;volatile
  5731                           
  5732                           ;communication.c: 67: PORTCbits.RC0 = 0;
  5733  0016A6  9082               	bcf	3970,0,c	;volatile
  5734  0016A8  0607               	decf	i2Write_Display_Byte@counter,f,c
  5735  0016AA  D7E1               	goto	L5
  5736  0016AC                     __end_ofi2_Write_Display_Byte:
  5737                           	opt stack 0
  5738                           pclatu	equ	0xFFB
  5739                           pclath	equ	0xFFA
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           prodh	equ	0xFF4
  5745                           prodl	equ	0xFF3
  5746                           intcon	equ	0xFF2
  5747                           postinc0	equ	0xFEE
  5748                           fsr0h	equ	0xFEA
  5749                           fsr0l	equ	0xFE9
  5750                           wreg	equ	0xFE8
  5751                           postdec1	equ	0xFE5
  5752                           fsr1h	equ	0xFE2
  5753                           fsr1l	equ	0xFE1
  5754                           indf2	equ	0xFDF
  5755                           postinc2	equ	0xFDE
  5756                           postdec2	equ	0xFDD
  5757                           plusw2	equ	0xFDB
  5758                           fsr2h	equ	0xFDA
  5759                           fsr2l	equ	0xFD9
  5760                           status	equ	0xFD8
  5761                           
  5762 ;; *************** function i2_Evaluate_Signs *****************
  5763 ;; Defined at:
  5764 ;;		line 119 in file "display.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  evaluation_v    2   16[COMRAM] unsigned int 
  5767 ;; Auto vars:     Size  Location     Type
  5768 ;;  Evaluate_Sig    1   22[COMRAM] unsigned char 
  5769 ;; Return value:  Size  Location     Type
  5770 ;;		None               void
  5771 ;; Registers used:
  5772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5773 ;; Tracked objects:
  5774 ;;		On entry : 0/0
  5775 ;;		On exit  : 0/0
  5776 ;;		Unchanged: 0/0
  5777 ;; Data sizes:     COMRAM   BANK0   BANK1
  5778 ;;      Params:         2       0       0
  5779 ;;      Locals:         1       0       0
  5780 ;;      Temps:          4       0       0
  5781 ;;      Totals:         7       0       0
  5782 ;;Total ram usage:        7 bytes
  5783 ;; Hardware stack levels used:    1
  5784 ;; Hardware stack levels required when called:    2
  5785 ;; This function calls:
  5786 ;;		i2_Evaluate_Display
  5787 ;;		i2___lwdiv
  5788 ;;		i2___lwmod
  5789 ;; This function is called by:
  5790 ;;		i2_Set_Display
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text28
  5795  001150                     __ptext28:
  5796                           	opt stack 0
  5797  001150                     i2_Evaluate_Signs:
  5798                           	opt stack 19
  5799                           
  5800                           ;display.c: 120: for(unsigned char valuecounter = sizeof(signs); valuecounter > 0;
  5801                           
  5802                           ;incstack = 0
  5803  001150  0E03               	movlw	3
  5804  001152  6E17               	movwf	i2Evaluate_Signs@valuecounter,c
  5805  001154                     
  5806                           ;display.c: 121: valuecounter--) {
  5807  001154  5017               	movf	i2Evaluate_Signs@valuecounter,w,c
  5808  001156  B4D8               	btfsc	status,2,c
  5809  001158  D040               	goto	i2l457
  5810                           
  5811                           ;display.c: 122: signs[(valuecounter - 1)] = evaluation_value % 10;
  5812  00115A  0EFF               	movlw	255
  5813  00115C  6E13               	movwf	??i2_Evaluate_Signs& (0+255),c
  5814  00115E  0EFF               	movlw	255
  5815  001160  6E14               	movwf	(??i2_Evaluate_Signs+1)& (0+255),c
  5816  001162  5017               	movf	i2Evaluate_Signs@valuecounter,w,c
  5817  001164  6E15               	movwf	(??i2_Evaluate_Signs+2)& (0+255),c
  5818  001166  6A16               	clrf	(??i2_Evaluate_Signs+3)& (0+255),c
  5819  001168  5013               	movf	??i2_Evaluate_Signs,w,c
  5820  00116A  2615               	addwf	??i2_Evaluate_Signs+2,f,c
  5821  00116C  5014               	movf	??i2_Evaluate_Signs+1,w,c
  5822  00116E  2216               	addwfc	??i2_Evaluate_Signs+3,f,c
  5823  001170  0E8B               	movlw	low _signs
  5824  001172  2415               	addwf	??i2_Evaluate_Signs+2,w,c
  5825  001174  6ED9               	movwf	fsr2l,c
  5826  001176  0E00               	movlw	high _signs
  5827  001178  2016               	addwfc	??i2_Evaluate_Signs+3,w,c
  5828  00117A  6EDA               	movwf	fsr2h,c
  5829  00117C  C011  F001         	movff	i2Evaluate_Signs@evaluation_value,i2___lwmod@dividend
  5830  001180  C012  F002         	movff	i2Evaluate_Signs@evaluation_value+1,i2___lwmod@dividend+1
  5831  001184  0E00               	movlw	0
  5832  001186  6E04               	movwf	i2___lwmod@divisor+1,c
  5833  001188  0E0A               	movlw	10
  5834  00118A  6E03               	movwf	i2___lwmod@divisor,c
  5835  00118C  EC56  F00B         	call	i2___lwmod	;wreg free
  5836  001190  5001               	movf	?i2___lwmod,w,c
  5837  001192  6EDF               	movwf	indf2,c
  5838                           
  5839                           ;display.c: 123: signs[(valuecounter - 1)] += 0x30;
  5840  001194  0EFF               	movlw	255
  5841  001196  6E13               	movwf	??i2_Evaluate_Signs& (0+255),c
  5842  001198  0EFF               	movlw	255
  5843  00119A  6E14               	movwf	(??i2_Evaluate_Signs+1)& (0+255),c
  5844  00119C  5017               	movf	i2Evaluate_Signs@valuecounter,w,c
  5845  00119E  6E15               	movwf	(??i2_Evaluate_Signs+2)& (0+255),c
  5846  0011A0  6A16               	clrf	(??i2_Evaluate_Signs+3)& (0+255),c
  5847  0011A2  5013               	movf	??i2_Evaluate_Signs,w,c
  5848  0011A4  2615               	addwf	??i2_Evaluate_Signs+2,f,c
  5849  0011A6  5014               	movf	??i2_Evaluate_Signs+1,w,c
  5850  0011A8  2216               	addwfc	??i2_Evaluate_Signs+3,f,c
  5851  0011AA  0E8B               	movlw	low _signs
  5852  0011AC  2415               	addwf	??i2_Evaluate_Signs+2,w,c
  5853  0011AE  6ED9               	movwf	fsr2l,c
  5854  0011B0  0E00               	movlw	high _signs
  5855  0011B2  2016               	addwfc	??i2_Evaluate_Signs+3,w,c
  5856  0011B4  6EDA               	movwf	fsr2h,c
  5857  0011B6  0E30               	movlw	48
  5858  0011B8  26DF               	addwf	indf2,f,c
  5859                           
  5860                           ;display.c: 124: evaluation_value = evaluation_value / 10;
  5861  0011BA  C011  F001         	movff	i2Evaluate_Signs@evaluation_value,i2___lwdiv@dividend
  5862  0011BE  C012  F002         	movff	i2Evaluate_Signs@evaluation_value+1,i2___lwdiv@dividend+1
  5863  0011C2  0E00               	movlw	0
  5864  0011C4  6E04               	movwf	i2___lwdiv@divisor+1,c
  5865  0011C6  0E0A               	movlw	10
  5866  0011C8  6E03               	movwf	i2___lwdiv@divisor,c
  5867  0011CA  ECC1  F00A         	call	i2___lwdiv	;wreg free
  5868  0011CE  C001  F011         	movff	?i2___lwdiv,i2Evaluate_Signs@evaluation_value
  5869  0011D2  C002  F012         	movff	?i2___lwdiv+1,i2Evaluate_Signs@evaluation_value+1
  5870  0011D6  0617               	decf	i2Evaluate_Signs@valuecounter,f,c
  5871  0011D8  D7BD               	goto	L6
  5872  0011DA                     i2l457:
  5873                           
  5874                           ;display.c: 125: }
  5875                           ;display.c: 126: __nop();
  5876  0011DA  F000               	nop	
  5877                           
  5878                           ;display.c: 127: Evaluate_Display(sizeof(signs), signs);
  5879  0011DC  0E8B               	movlw	low _signs
  5880  0011DE  6E0A               	movwf	i2Evaluate_Display@evaluate,c
  5881  0011E0  0E00               	movlw	high _signs
  5882  0011E2  6E0B               	movwf	i2Evaluate_Display@evaluate+1,c
  5883  0011E4  0E03               	movlw	3
  5884  0011E6  EC3B  F005         	call	i2_Evaluate_Display
  5885  0011EA  0012               	return		;funcret
  5886  0011EC                     __end_ofi2_Evaluate_Signs:
  5887                           	opt stack 0
  5888                           pclatu	equ	0xFFB
  5889                           pclath	equ	0xFFA
  5890                           tblptru	equ	0xFF8
  5891                           tblptrh	equ	0xFF7
  5892                           tblptrl	equ	0xFF6
  5893                           tablat	equ	0xFF5
  5894                           prodh	equ	0xFF4
  5895                           prodl	equ	0xFF3
  5896                           intcon	equ	0xFF2
  5897                           postinc0	equ	0xFEE
  5898                           fsr0h	equ	0xFEA
  5899                           fsr0l	equ	0xFE9
  5900                           wreg	equ	0xFE8
  5901                           postdec1	equ	0xFE5
  5902                           fsr1h	equ	0xFE2
  5903                           fsr1l	equ	0xFE1
  5904                           indf2	equ	0xFDF
  5905                           postinc2	equ	0xFDE
  5906                           postdec2	equ	0xFDD
  5907                           plusw2	equ	0xFDB
  5908                           fsr2h	equ	0xFDA
  5909                           fsr2l	equ	0xFD9
  5910                           status	equ	0xFD8
  5911                           
  5912 ;; *************** function i2___lwmod *****************
  5913 ;; Defined at:
  5914 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  dividend        2    0[COMRAM] unsigned int 
  5917 ;;  divisor         2    2[COMRAM] unsigned int 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  __lwmod         1    4[COMRAM] unsigned char 
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  2    0[COMRAM] unsigned int 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1
  5929 ;;      Params:         4       0       0
  5930 ;;      Locals:         1       0       0
  5931 ;;      Temps:          0       0       0
  5932 ;;      Totals:         5       0       0
  5933 ;;Total ram usage:        5 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		i2_Evaluate_Signs
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text29
  5943  0016AC                     __ptext29:
  5944                           	opt stack 0
  5945  0016AC                     i2___lwmod:
  5946                           	opt stack 20
  5947                           
  5948                           ;incstack = 0
  5949  0016AC  5003               	movf	i2___lwmod@divisor,w,c
  5950  0016AE  1004               	iorwf	i2___lwmod@divisor+1,w,c
  5951  0016B0  B4D8               	btfsc	status,2,c
  5952  0016B2  D018               	goto	i2l1044
  5953  0016B4  0E01               	movlw	1
  5954  0016B6  6E05               	movwf	i2___lwmod@counter,c
  5955  0016B8  D004               	goto	i2l2463
  5956  0016BA                     i2l2461:
  5957  0016BA  90D8               	bcf	status,0,c
  5958  0016BC  3603               	rlcf	i2___lwmod@divisor,f,c
  5959  0016BE  3604               	rlcf	i2___lwmod@divisor+1,f,c
  5960  0016C0  2A05               	incf	i2___lwmod@counter,f,c
  5961  0016C2                     i2l2463:
  5962  0016C2  AE04               	btfss	i2___lwmod@divisor+1,7,c
  5963  0016C4  D7FA               	goto	i2l2461
  5964  0016C6                     i2l2465:
  5965  0016C6  5003               	movf	i2___lwmod@divisor,w,c
  5966  0016C8  5C01               	subwf	i2___lwmod@dividend,w,c
  5967  0016CA  5004               	movf	i2___lwmod@divisor+1,w,c
  5968  0016CC  5802               	subwfb	i2___lwmod@dividend+1,w,c
  5969  0016CE  A0D8               	btfss	status,0,c
  5970  0016D0  D004               	goto	i2l2469
  5971  0016D2  5003               	movf	i2___lwmod@divisor,w,c
  5972  0016D4  5E01               	subwf	i2___lwmod@dividend,f,c
  5973  0016D6  5004               	movf	i2___lwmod@divisor+1,w,c
  5974  0016D8  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  5975  0016DA                     i2l2469:
  5976  0016DA  90D8               	bcf	status,0,c
  5977  0016DC  3204               	rrcf	i2___lwmod@divisor+1,f,c
  5978  0016DE  3203               	rrcf	i2___lwmod@divisor,f,c
  5979  0016E0  2E05               	decfsz	i2___lwmod@counter,f,c
  5980  0016E2  D7F1               	goto	i2l2465
  5981  0016E4                     i2l1044:
  5982  0016E4  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  5983  0016E8  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  5984  0016EC  0012               	return		;funcret
  5985  0016EE                     __end_ofi2___lwmod:
  5986                           	opt stack 0
  5987                           pclatu	equ	0xFFB
  5988                           pclath	equ	0xFFA
  5989                           tblptru	equ	0xFF8
  5990                           tblptrh	equ	0xFF7
  5991                           tblptrl	equ	0xFF6
  5992                           tablat	equ	0xFF5
  5993                           prodh	equ	0xFF4
  5994                           prodl	equ	0xFF3
  5995                           intcon	equ	0xFF2
  5996                           postinc0	equ	0xFEE
  5997                           fsr0h	equ	0xFEA
  5998                           fsr0l	equ	0xFE9
  5999                           wreg	equ	0xFE8
  6000                           postdec1	equ	0xFE5
  6001                           fsr1h	equ	0xFE2
  6002                           fsr1l	equ	0xFE1
  6003                           indf2	equ	0xFDF
  6004                           postinc2	equ	0xFDE
  6005                           postdec2	equ	0xFDD
  6006                           plusw2	equ	0xFDB
  6007                           fsr2h	equ	0xFDA
  6008                           fsr2l	equ	0xFD9
  6009                           status	equ	0xFD8
  6010                           
  6011 ;; *************** function i2___lwdiv *****************
  6012 ;; Defined at:
  6013 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  6014 ;; Parameters:    Size  Location     Type
  6015 ;;  dividend        2    0[COMRAM] unsigned int 
  6016 ;;  divisor         2    2[COMRAM] unsigned int 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  6019 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  6020 ;; Return value:  Size  Location     Type
  6021 ;;                  2    0[COMRAM] unsigned int 
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1
  6029 ;;      Params:         4       0       0
  6030 ;;      Locals:         3       0       0
  6031 ;;      Temps:          0       0       0
  6032 ;;      Totals:         7       0       0
  6033 ;;Total ram usage:        7 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		i2_Evaluate_Signs
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           	psect	text30
  6043  001582                     __ptext30:
  6044                           	opt stack 0
  6045  001582                     i2___lwdiv:
  6046                           	opt stack 20
  6047                           
  6048                           ;incstack = 0
  6049  001582  0E00               	movlw	0
  6050  001584  6E06               	movwf	i2___lwdiv@quotient+1,c
  6051  001586  0E00               	movlw	0
  6052  001588  6E05               	movwf	i2___lwdiv@quotient,c
  6053  00158A  5003               	movf	i2___lwdiv@divisor,w,c
  6054  00158C  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  6055  00158E  B4D8               	btfsc	status,2,c
  6056  001590  D01C               	goto	i2l1034
  6057  001592  0E01               	movlw	1
  6058  001594  6E07               	movwf	i2___lwdiv@counter,c
  6059  001596  D004               	goto	i2l2443
  6060  001598                     i2l2441:
  6061  001598  90D8               	bcf	status,0,c
  6062  00159A  3603               	rlcf	i2___lwdiv@divisor,f,c
  6063  00159C  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  6064  00159E  2A07               	incf	i2___lwdiv@counter,f,c
  6065  0015A0                     i2l2443:
  6066  0015A0  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  6067  0015A2  D7FA               	goto	i2l2441
  6068  0015A4                     i2l2445:
  6069  0015A4  90D8               	bcf	status,0,c
  6070  0015A6  3605               	rlcf	i2___lwdiv@quotient,f,c
  6071  0015A8  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  6072  0015AA  5003               	movf	i2___lwdiv@divisor,w,c
  6073  0015AC  5C01               	subwf	i2___lwdiv@dividend,w,c
  6074  0015AE  5004               	movf	i2___lwdiv@divisor+1,w,c
  6075  0015B0  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  6076  0015B2  A0D8               	btfss	status,0,c
  6077  0015B4  D005               	goto	i2l2453
  6078  0015B6  5003               	movf	i2___lwdiv@divisor,w,c
  6079  0015B8  5E01               	subwf	i2___lwdiv@dividend,f,c
  6080  0015BA  5004               	movf	i2___lwdiv@divisor+1,w,c
  6081  0015BC  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  6082  0015BE  8005               	bsf	i2___lwdiv@quotient,0,c
  6083  0015C0                     i2l2453:
  6084  0015C0  90D8               	bcf	status,0,c
  6085  0015C2  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  6086  0015C4  3203               	rrcf	i2___lwdiv@divisor,f,c
  6087  0015C6  2E07               	decfsz	i2___lwdiv@counter,f,c
  6088  0015C8  D7ED               	goto	i2l2445
  6089  0015CA                     i2l1034:
  6090  0015CA  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  6091  0015CE  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  6092  0015D2  0012               	return		;funcret
  6093  0015D4                     __end_ofi2___lwdiv:
  6094                           	opt stack 0
  6095                           pclatu	equ	0xFFB
  6096                           pclath	equ	0xFFA
  6097                           tblptru	equ	0xFF8
  6098                           tblptrh	equ	0xFF7
  6099                           tblptrl	equ	0xFF6
  6100                           tablat	equ	0xFF5
  6101                           prodh	equ	0xFF4
  6102                           prodl	equ	0xFF3
  6103                           intcon	equ	0xFF2
  6104                           postinc0	equ	0xFEE
  6105                           fsr0h	equ	0xFEA
  6106                           fsr0l	equ	0xFE9
  6107                           wreg	equ	0xFE8
  6108                           postdec1	equ	0xFE5
  6109                           fsr1h	equ	0xFE2
  6110                           fsr1l	equ	0xFE1
  6111                           indf2	equ	0xFDF
  6112                           postinc2	equ	0xFDE
  6113                           postdec2	equ	0xFDD
  6114                           plusw2	equ	0xFDB
  6115                           fsr2h	equ	0xFDA
  6116                           fsr2l	equ	0xFD9
  6117                           status	equ	0xFD8
  6118                           
  6119 ;; *************** function i2_Evaluate_Display *****************
  6120 ;; Defined at:
  6121 ;;		line 52 in file "display.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  size            1    wreg     unsigned char 
  6124 ;;  evaluate        2    9[COMRAM] PTR unsigned char 
  6125 ;;		 -> signs(3), string_delete(3), string_load(3), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  size            1   15[COMRAM] unsigned char 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;		None               void
  6130 ;; Registers used:
  6131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1
  6137 ;;      Params:         2       0       0
  6138 ;;      Locals:         1       0       0
  6139 ;;      Temps:          4       0       0
  6140 ;;      Totals:         7       0       0
  6141 ;;Total ram usage:        7 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    1
  6144 ;; This function calls:
  6145 ;;		i2_Set_Bits
  6146 ;; This function is called by:
  6147 ;;		i2_Evaluate_Signs
  6148 ;;		i2_Set_Display
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text31
  6153  000A76                     __ptext31:
  6154                           	opt stack 0
  6155  000A76                     i2_Evaluate_Display:
  6156                           	opt stack 19
  6157                           
  6158                           ;incstack = 0
  6159                           ;i2Evaluate_Display@size stored from wreg
  6160  000A76  6E10               	movwf	i2Evaluate_Display@size,c
  6161                           
  6162                           ;display.c: 53: for(display_counter = size; display_counter > 0;
  6163  000A78  C010  F094         	movff	i2Evaluate_Display@size,_display_counter
  6164                           
  6165                           ;display.c: 54: display_counter--) {
  6166  000A7C  D120               	goto	i2l2433
  6167  000A7E                     i2l431:
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;display.c: 55: __nop();
  6171  000A7E  F000               	nop	
  6172                           
  6173                           ;display.c: 56: switch (evaluate[(display_counter - 1)]) {
  6174  000A80  D0D5               	goto	i2l2429
  6175  000A82                     i2l2393:
  6176                           
  6177                           ;display.c: 58: Set_Bits("ABCDEF");
  6178  000A82  0E2D               	movlw	low STR_1
  6179  000A84  6E01               	movwf	i2Set_Bits@bits,c
  6180  000A86  0E02               	movlw	high STR_1
  6181  000A88  6E02               	movwf	i2Set_Bits@bits+1,c
  6182  000A8A  5001               	movf	i2Set_Bits@bits,w,c
  6183  000A8C  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6184  000A8E  A4D8               	btfss	status,2,c
  6185  000A90  0E00               	movlw	low (__mediumconst shr (0+16))
  6186  000A92  6E03               	movwf	i2Set_Bits@bits+2,c
  6187  000A94  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6188                           
  6189                           ;display.c: 59: break;
  6190  000A98  D110               	goto	i2l2431
  6191  000A9A                     i2l2395:
  6192                           
  6193                           ;display.c: 61: Set_Bits("BC");
  6194  000A9A  0E6D               	movlw	low (STR_8+1)
  6195  000A9C  6E01               	movwf	i2Set_Bits@bits,c
  6196  000A9E  0E02               	movlw	high (STR_8+1)
  6197  000AA0  6E02               	movwf	i2Set_Bits@bits+1,c
  6198  000AA2  5001               	movf	i2Set_Bits@bits,w,c
  6199  000AA4  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6200  000AA6  A4D8               	btfss	status,2,c
  6201  000AA8  0E00               	movlw	low (__mediumconst shr (0+16))
  6202  000AAA  6E03               	movwf	i2Set_Bits@bits+2,c
  6203  000AAC  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6204                           
  6205                           ;display.c: 62: break;
  6206  000AB0  D104               	goto	i2l2431
  6207  000AB2                     i2l2397:
  6208                           
  6209                           ;display.c: 64: Set_Bits("ABDEG");
  6210  000AB2  0E4F               	movlw	low STR_3
  6211  000AB4  6E01               	movwf	i2Set_Bits@bits,c
  6212  000AB6  0E02               	movlw	high STR_3
  6213  000AB8  6E02               	movwf	i2Set_Bits@bits+1,c
  6214  000ABA  5001               	movf	i2Set_Bits@bits,w,c
  6215  000ABC  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6216  000ABE  A4D8               	btfss	status,2,c
  6217  000AC0  0E00               	movlw	low (__mediumconst shr (0+16))
  6218  000AC2  6E03               	movwf	i2Set_Bits@bits+2,c
  6219  000AC4  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6220                           
  6221                           ;display.c: 65: break;
  6222  000AC8  D0F8               	goto	i2l2431
  6223  000ACA                     i2l2399:
  6224                           
  6225                           ;display.c: 67: Set_Bits("ABCDG");
  6226  000ACA  0E49               	movlw	low STR_4
  6227  000ACC  6E01               	movwf	i2Set_Bits@bits,c
  6228  000ACE  0E02               	movlw	high STR_4
  6229  000AD0  6E02               	movwf	i2Set_Bits@bits+1,c
  6230  000AD2  5001               	movf	i2Set_Bits@bits,w,c
  6231  000AD4  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6232  000AD6  A4D8               	btfss	status,2,c
  6233  000AD8  0E00               	movlw	low (__mediumconst shr (0+16))
  6234  000ADA  6E03               	movwf	i2Set_Bits@bits+2,c
  6235  000ADC  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6236                           
  6237                           ;display.c: 68: break;
  6238  000AE0  D0EC               	goto	i2l2431
  6239  000AE2                     i2l2401:
  6240                           
  6241                           ;display.c: 70: Set_Bits("BCFG");
  6242  000AE2  0E67               	movlw	low STR_5
  6243  000AE4  6E01               	movwf	i2Set_Bits@bits,c
  6244  000AE6  0E02               	movlw	high STR_5
  6245  000AE8  6E02               	movwf	i2Set_Bits@bits+1,c
  6246  000AEA  5001               	movf	i2Set_Bits@bits,w,c
  6247  000AEC  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6248  000AEE  A4D8               	btfss	status,2,c
  6249  000AF0  0E00               	movlw	low (__mediumconst shr (0+16))
  6250  000AF2  6E03               	movwf	i2Set_Bits@bits+2,c
  6251  000AF4  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6252                           
  6253                           ;display.c: 71: break;
  6254  000AF8  D0E0               	goto	i2l2431
  6255  000AFA                     i2l2403:
  6256                           
  6257                           ;display.c: 73: Set_Bits("ACDFG");
  6258  000AFA  0E55               	movlw	low STR_6
  6259  000AFC  6E01               	movwf	i2Set_Bits@bits,c
  6260  000AFE  0E02               	movlw	high STR_6
  6261  000B00  6E02               	movwf	i2Set_Bits@bits+1,c
  6262  000B02  5001               	movf	i2Set_Bits@bits,w,c
  6263  000B04  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6264  000B06  A4D8               	btfss	status,2,c
  6265  000B08  0E00               	movlw	low (__mediumconst shr (0+16))
  6266  000B0A  6E03               	movwf	i2Set_Bits@bits+2,c
  6267  000B0C  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6268                           
  6269                           ;display.c: 74: break;
  6270  000B10  D0D4               	goto	i2l2431
  6271  000B12                     i2l2405:
  6272                           
  6273                           ;display.c: 76: Set_Bits("ACDEFG");
  6274  000B12  0E42               	movlw	low STR_7
  6275  000B14  6E01               	movwf	i2Set_Bits@bits,c
  6276  000B16  0E02               	movlw	high STR_7
  6277  000B18  6E02               	movwf	i2Set_Bits@bits+1,c
  6278  000B1A  5001               	movf	i2Set_Bits@bits,w,c
  6279  000B1C  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6280  000B1E  A4D8               	btfss	status,2,c
  6281  000B20  0E00               	movlw	low (__mediumconst shr (0+16))
  6282  000B22  6E03               	movwf	i2Set_Bits@bits+2,c
  6283  000B24  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6284                           
  6285                           ;display.c: 77: break;
  6286  000B28  D0C8               	goto	i2l2431
  6287  000B2A                     i2l2407:
  6288                           
  6289                           ;display.c: 79: Set_Bits("ABC");
  6290  000B2A  0E6C               	movlw	low STR_8
  6291  000B2C  6E01               	movwf	i2Set_Bits@bits,c
  6292  000B2E  0E02               	movlw	high STR_8
  6293  000B30  6E02               	movwf	i2Set_Bits@bits+1,c
  6294  000B32  5001               	movf	i2Set_Bits@bits,w,c
  6295  000B34  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6296  000B36  A4D8               	btfss	status,2,c
  6297  000B38  0E00               	movlw	low (__mediumconst shr (0+16))
  6298  000B3A  6E03               	movwf	i2Set_Bits@bits+2,c
  6299  000B3C  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6300                           
  6301                           ;display.c: 80: break;
  6302  000B40  D0BC               	goto	i2l2431
  6303  000B42                     i2l2409:
  6304                           
  6305                           ;display.c: 82: Set_Bits("ABCDEFG");
  6306  000B42  0E25               	movlw	low STR_9
  6307  000B44  6E01               	movwf	i2Set_Bits@bits,c
  6308  000B46  0E02               	movlw	high STR_9
  6309  000B48  6E02               	movwf	i2Set_Bits@bits+1,c
  6310  000B4A  5001               	movf	i2Set_Bits@bits,w,c
  6311  000B4C  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6312  000B4E  A4D8               	btfss	status,2,c
  6313  000B50  0E00               	movlw	low (__mediumconst shr (0+16))
  6314  000B52  6E03               	movwf	i2Set_Bits@bits+2,c
  6315  000B54  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6316                           
  6317                           ;display.c: 83: break;
  6318  000B58  D0B0               	goto	i2l2431
  6319  000B5A                     i2l2411:
  6320                           
  6321                           ;display.c: 85: Set_Bits("ABCDFG");
  6322  000B5A  0E34               	movlw	low STR_10
  6323  000B5C  6E01               	movwf	i2Set_Bits@bits,c
  6324  000B5E  0E02               	movlw	high STR_10
  6325  000B60  6E02               	movwf	i2Set_Bits@bits+1,c
  6326  000B62  5001               	movf	i2Set_Bits@bits,w,c
  6327  000B64  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6328  000B66  A4D8               	btfss	status,2,c
  6329  000B68  0E00               	movlw	low (__mediumconst shr (0+16))
  6330  000B6A  6E03               	movwf	i2Set_Bits@bits+2,c
  6331  000B6C  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6332                           
  6333                           ;display.c: 86: break;
  6334  000B70  D0A4               	goto	i2l2431
  6335  000B72                     i2l2413:
  6336                           
  6337                           ;display.c: 88: Set_Bits("ABCEFG");
  6338  000B72  0E3B               	movlw	low STR_11
  6339  000B74  6E01               	movwf	i2Set_Bits@bits,c
  6340  000B76  0E02               	movlw	high STR_11
  6341  000B78  6E02               	movwf	i2Set_Bits@bits+1,c
  6342  000B7A  5001               	movf	i2Set_Bits@bits,w,c
  6343  000B7C  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6344  000B7E  A4D8               	btfss	status,2,c
  6345  000B80  0E00               	movlw	low (__mediumconst shr (0+16))
  6346  000B82  6E03               	movwf	i2Set_Bits@bits+2,c
  6347  000B84  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6348                           
  6349                           ;display.c: 89: break;
  6350  000B88  D098               	goto	i2l2431
  6351  000B8A                     i2l2415:
  6352                           
  6353                           ;display.c: 91: Set_Bits("ABCDEF");
  6354  000B8A  0E2D               	movlw	low STR_1
  6355  000B8C  6E01               	movwf	i2Set_Bits@bits,c
  6356  000B8E  0E02               	movlw	high STR_1
  6357  000B90  6E02               	movwf	i2Set_Bits@bits+1,c
  6358  000B92  5001               	movf	i2Set_Bits@bits,w,c
  6359  000B94  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6360  000B96  A4D8               	btfss	status,2,c
  6361  000B98  0E00               	movlw	low (__mediumconst shr (0+16))
  6362  000B9A  6E03               	movwf	i2Set_Bits@bits+2,c
  6363  000B9C  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6364                           
  6365                           ;display.c: 92: break;
  6366  000BA0  D08C               	goto	i2l2431
  6367  000BA2                     i2l2417:
  6368                           
  6369                           ;display.c: 94: Set_Bits("ADEFG");
  6370  000BA2  0E61               	movlw	low STR_13
  6371  000BA4  6E01               	movwf	i2Set_Bits@bits,c
  6372  000BA6  0E02               	movlw	high STR_13
  6373  000BA8  6E02               	movwf	i2Set_Bits@bits+1,c
  6374  000BAA  5001               	movf	i2Set_Bits@bits,w,c
  6375  000BAC  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6376  000BAE  A4D8               	btfss	status,2,c
  6377  000BB0  0E00               	movlw	low (__mediumconst shr (0+16))
  6378  000BB2  6E03               	movwf	i2Set_Bits@bits+2,c
  6379  000BB4  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6380                           
  6381                           ;display.c: 95: break;
  6382  000BB8  D080               	goto	i2l2431
  6383  000BBA                     i2l2419:
  6384                           
  6385                           ;display.c: 97: Set_Bits("DEF");
  6386  000BBA  0E30               	movlw	low (STR_1+3)
  6387  000BBC  6E01               	movwf	i2Set_Bits@bits,c
  6388  000BBE  0E02               	movlw	high (STR_1+3)
  6389  000BC0  6E02               	movwf	i2Set_Bits@bits+1,c
  6390  000BC2  5001               	movf	i2Set_Bits@bits,w,c
  6391  000BC4  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6392  000BC6  A4D8               	btfss	status,2,c
  6393  000BC8  0E00               	movlw	low (__mediumconst shr (0+16))
  6394  000BCA  6E03               	movwf	i2Set_Bits@bits+2,c
  6395  000BCC  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6396                           
  6397                           ;display.c: 98: break;
  6398  000BD0  D074               	goto	i2l2431
  6399  000BD2                     i2l2421:
  6400                           
  6401                           ;display.c: 100: Set_Bits("ABCDEF");
  6402  000BD2  0E2D               	movlw	low STR_1
  6403  000BD4  6E01               	movwf	i2Set_Bits@bits,c
  6404  000BD6  0E02               	movlw	high STR_1
  6405  000BD8  6E02               	movwf	i2Set_Bits@bits+1,c
  6406  000BDA  5001               	movf	i2Set_Bits@bits,w,c
  6407  000BDC  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6408  000BDE  A4D8               	btfss	status,2,c
  6409  000BE0  0E00               	movlw	low (__mediumconst shr (0+16))
  6410  000BE2  6E03               	movwf	i2Set_Bits@bits+2,c
  6411  000BE4  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6412                           
  6413                           ;display.c: 101: break;
  6414  000BE8  D068               	goto	i2l2431
  6415  000BEA                     i2l2423:
  6416                           
  6417                           ;display.c: 103: Set_Bits("ABEFG");
  6418  000BEA  0E5B               	movlw	low STR_16
  6419  000BEC  6E01               	movwf	i2Set_Bits@bits,c
  6420  000BEE  0E02               	movlw	high STR_16
  6421  000BF0  6E02               	movwf	i2Set_Bits@bits+1,c
  6422  000BF2  5001               	movf	i2Set_Bits@bits,w,c
  6423  000BF4  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6424  000BF6  A4D8               	btfss	status,2,c
  6425  000BF8  0E00               	movlw	low (__mediumconst shr (0+16))
  6426  000BFA  6E03               	movwf	i2Set_Bits@bits+2,c
  6427  000BFC  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6428                           
  6429                           ;display.c: 104: break;
  6430  000C00  D05C               	goto	i2l2431
  6431  000C02                     i2l2425:
  6432                           
  6433                           ;display.c: 106: Set_Bits("G");
  6434  000C02  0E4D               	movlw	low (STR_4+4)
  6435  000C04  6E01               	movwf	i2Set_Bits@bits,c
  6436  000C06  0E02               	movlw	high (STR_4+4)
  6437  000C08  6E02               	movwf	i2Set_Bits@bits+1,c
  6438  000C0A  5001               	movf	i2Set_Bits@bits,w,c
  6439  000C0C  1002               	iorwf	i2Set_Bits@bits+1,w,c
  6440  000C0E  A4D8               	btfss	status,2,c
  6441  000C10  0E00               	movlw	low (__mediumconst shr (0+16))
  6442  000C12  6E03               	movwf	i2Set_Bits@bits+2,c
  6443  000C14  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6444                           
  6445                           ;display.c: 107: break;
  6446  000C18  D050               	goto	i2l2431
  6447  000C1A                     i2l2427:
  6448                           
  6449                           ;display.c: 109: Set_Bits('0');
  6450  000C1A  0E30               	movlw	48
  6451  000C1C  6E01               	movwf	i2Set_Bits@bits,c
  6452  000C1E  0E00               	movlw	0
  6453  000C20  6E02               	movwf	i2Set_Bits@bits+1,c
  6454  000C22  0E00               	movlw	0
  6455  000C24  6E03               	movwf	i2Set_Bits@bits+2,c
  6456  000C26  ECE7  F007         	call	i2_Set_Bits	;wreg free
  6457                           
  6458                           ;display.c: 110: }
  6459  000C2A  D047               	goto	i2l2431
  6460  000C2C                     i2l2429:
  6461  000C2C  0EFF               	movlw	255
  6462  000C2E  6E0C               	movwf	??i2_Evaluate_Display& (0+255),c
  6463  000C30  0EFF               	movlw	255
  6464  000C32  6E0D               	movwf	(??i2_Evaluate_Display+1)& (0+255),c
  6465  000C34  0100               	movlb	0	; () banked
  6466  000C36  5194               	movf	_display_counter& (0+255),w,b
  6467  000C38  6E0E               	movwf	(??i2_Evaluate_Display+2)& (0+255),c
  6468  000C3A  6A0F               	clrf	(??i2_Evaluate_Display+3)& (0+255),c
  6469  000C3C  500C               	movf	??i2_Evaluate_Display,w,c
  6470  000C3E  260E               	addwf	??i2_Evaluate_Display+2,f,c
  6471  000C40  500D               	movf	??i2_Evaluate_Display+1,w,c
  6472  000C42  220F               	addwfc	??i2_Evaluate_Display+3,f,c
  6473  000C44  500E               	movf	??i2_Evaluate_Display+2,w,c
  6474  000C46  240A               	addwf	i2Evaluate_Display@evaluate,w,c
  6475  000C48  6ED9               	movwf	fsr2l,c
  6476  000C4A  500F               	movf	??i2_Evaluate_Display+3,w,c
  6477  000C4C  200B               	addwfc	i2Evaluate_Display@evaluate+1,w,c
  6478  000C4E  6EDA               	movwf	fsr2h,c
  6479  000C50  50DF               	movf	indf2,w,c
  6480                           
  6481                           ; Switch size 1, requested type "space"
  6482                           ; Number of cases is 17, Range of values is 45 to 80
  6483                           ; switch strategies available:
  6484                           ; Name         Instructions Cycles
  6485                           ; simple_byte           52    27 (average)
  6486                           ;	Chosen strategy is simple_byte
  6487  000C52  0A2D               	xorlw	45	; case 45
  6488  000C54  B4D8               	btfsc	status,2,c
  6489  000C56  D7D5               	goto	i2l2425
  6490  000C58  0A1D               	xorlw	29	; case 48
  6491  000C5A  B4D8               	btfsc	status,2,c
  6492  000C5C  D712               	goto	i2l2393
  6493  000C5E  0A01               	xorlw	1	; case 49
  6494  000C60  B4D8               	btfsc	status,2,c
  6495  000C62  D71B               	goto	i2l2395
  6496  000C64  0A03               	xorlw	3	; case 50
  6497  000C66  B4D8               	btfsc	status,2,c
  6498  000C68  D724               	goto	i2l2397
  6499  000C6A  0A01               	xorlw	1	; case 51
  6500  000C6C  B4D8               	btfsc	status,2,c
  6501  000C6E  D72D               	goto	i2l2399
  6502  000C70  0A07               	xorlw	7	; case 52
  6503  000C72  B4D8               	btfsc	status,2,c
  6504  000C74  D736               	goto	i2l2401
  6505  000C76  0A01               	xorlw	1	; case 53
  6506  000C78  B4D8               	btfsc	status,2,c
  6507  000C7A  D73F               	goto	i2l2403
  6508  000C7C  0A03               	xorlw	3	; case 54
  6509  000C7E  B4D8               	btfsc	status,2,c
  6510  000C80  D748               	goto	i2l2405
  6511  000C82  0A01               	xorlw	1	; case 55
  6512  000C84  B4D8               	btfsc	status,2,c
  6513  000C86  D751               	goto	i2l2407
  6514  000C88  0A0F               	xorlw	15	; case 56
  6515  000C8A  B4D8               	btfsc	status,2,c
  6516  000C8C  D75A               	goto	i2l2409
  6517  000C8E  0A01               	xorlw	1	; case 57
  6518  000C90  B4D8               	btfsc	status,2,c
  6519  000C92  D763               	goto	i2l2411
  6520  000C94  0A78               	xorlw	120	; case 65
  6521  000C96  B4D8               	btfsc	status,2,c
  6522  000C98  D76C               	goto	i2l2413
  6523  000C9A  0A05               	xorlw	5	; case 68
  6524  000C9C  B4D8               	btfsc	status,2,c
  6525  000C9E  D775               	goto	i2l2415
  6526  000CA0  0A01               	xorlw	1	; case 69
  6527  000CA2  B4D8               	btfsc	status,2,c
  6528  000CA4  D77E               	goto	i2l2417
  6529  000CA6  0A09               	xorlw	9	; case 76
  6530  000CA8  B4D8               	btfsc	status,2,c
  6531  000CAA  D787               	goto	i2l2419
  6532  000CAC  0A03               	xorlw	3	; case 79
  6533  000CAE  B4D8               	btfsc	status,2,c
  6534  000CB0  D790               	goto	i2l2421
  6535  000CB2  0A1F               	xorlw	31	; case 80
  6536  000CB4  B4D8               	btfsc	status,2,c
  6537  000CB6  D799               	goto	i2l2423
  6538  000CB8  D7B0               	goto	i2l2427
  6539  000CBA                     i2l2431:
  6540  000CBA  0100               	movlb	0	; () banked
  6541  000CBC  0794               	decf	_display_counter& (0+255),f,b
  6542  000CBE                     i2l2433:
  6543  000CBE  0100               	movlb	0	; () banked
  6544  000CC0  5194               	movf	_display_counter& (0+255),w,b
  6545  000CC2  B4D8               	btfsc	status,2,c
  6546  000CC4  0012               	return	
  6547  000CC6  D6DB               	goto	i2l431
  6548  000CC8                     __end_ofi2_Evaluate_Display:
  6549                           	opt stack 0
  6550                           pclatu	equ	0xFFB
  6551                           pclath	equ	0xFFA
  6552                           tblptru	equ	0xFF8
  6553                           tblptrh	equ	0xFF7
  6554                           tblptrl	equ	0xFF6
  6555                           tablat	equ	0xFF5
  6556                           prodh	equ	0xFF4
  6557                           prodl	equ	0xFF3
  6558                           intcon	equ	0xFF2
  6559                           postinc0	equ	0xFEE
  6560                           fsr0h	equ	0xFEA
  6561                           fsr0l	equ	0xFE9
  6562                           wreg	equ	0xFE8
  6563                           postdec1	equ	0xFE5
  6564                           fsr1h	equ	0xFE2
  6565                           fsr1l	equ	0xFE1
  6566                           indf2	equ	0xFDF
  6567                           postinc2	equ	0xFDE
  6568                           postdec2	equ	0xFDD
  6569                           plusw2	equ	0xFDB
  6570                           fsr2h	equ	0xFDA
  6571                           fsr2l	equ	0xFD9
  6572                           status	equ	0xFD8
  6573                           
  6574 ;; *************** function i2_Set_Bits *****************
  6575 ;; Defined at:
  6576 ;;		line 12 in file "display.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;  bits            3    0[COMRAM] PTR const unsigned char 
  6579 ;;		 -> ROM(8191), STR_17(2), STR_16(6), STR_15(7), 
  6580 ;;		 -> STR_14(4), STR_13(6), STR_12(7), STR_11(7), 
  6581 ;;		 -> STR_10(7), STR_9(8), STR_8(4), STR_7(7), 
  6582 ;;		 -> STR_6(6), STR_5(5), STR_4(6), STR_3(6), 
  6583 ;;		 -> STR_2(3), STR_1(7), 
  6584 ;; Auto vars:     Size  Location     Type
  6585 ;;  Set_Bits        1    8[COMRAM] unsigned char 
  6586 ;;  Set_Bits        1    7[COMRAM] unsigned char 
  6587 ;; Return value:  Size  Location     Type
  6588 ;;		None               void
  6589 ;; Registers used:
  6590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6591 ;; Tracked objects:
  6592 ;;		On entry : 0/0
  6593 ;;		On exit  : 0/0
  6594 ;;		Unchanged: 0/0
  6595 ;; Data sizes:     COMRAM   BANK0   BANK1
  6596 ;;      Params:         3       0       0
  6597 ;;      Locals:         2       0       0
  6598 ;;      Temps:          4       0       0
  6599 ;;      Totals:         9       0       0
  6600 ;;Total ram usage:        9 bytes
  6601 ;; Hardware stack levels used:    1
  6602 ;; This function calls:
  6603 ;;		Nothing
  6604 ;; This function is called by:
  6605 ;;		i2_Evaluate_Display
  6606 ;; This function uses a non-reentrant model
  6607 ;;
  6608                           
  6609                           	psect	text32
  6610  000FCE                     __ptext32:
  6611                           	opt stack 0
  6612  000FCE                     i2_Set_Bits:
  6613                           	opt stack 19
  6614                           
  6615                           ;display.c: 13: unsigned char Bitoutput = 0;
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;incstack = 0
  6619  000FCE  0E00               	movlw	0
  6620  000FD0  6E09               	movwf	i2Set_Bits@Bitoutput,c
  6621                           
  6622                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  6623  000FD2  0E00               	movlw	0
  6624  000FD4  6E08               	movwf	i2Set_Bits@bitcount,c
  6625                           
  6626                           ;display.c: 15: bitcount++) {
  6627  000FD6  D037               	goto	i2l2327
  6628  000FD8                     i2l2307:
  6629                           
  6630                           ;display.c: 18: Bitoutput |= 0b00000001;
  6631  000FD8  8009               	bsf	i2Set_Bits@Bitoutput,0,c
  6632                           
  6633                           ;display.c: 19: break;
  6634  000FDA  D034               	goto	i2l2325
  6635  000FDC                     i2l2309:
  6636                           
  6637                           ;display.c: 21: Bitoutput |= 0b00000010;
  6638  000FDC  8209               	bsf	i2Set_Bits@Bitoutput,1,c
  6639                           
  6640                           ;display.c: 22: break;
  6641  000FDE  D032               	goto	i2l2325
  6642  000FE0                     i2l2311:
  6643                           
  6644                           ;display.c: 24: Bitoutput |= 0b00000100;
  6645  000FE0  8409               	bsf	i2Set_Bits@Bitoutput,2,c
  6646                           
  6647                           ;display.c: 25: break;
  6648  000FE2  D030               	goto	i2l2325
  6649  000FE4                     i2l2313:
  6650                           
  6651                           ;display.c: 27: Bitoutput |= 0b00001000;
  6652  000FE4  8609               	bsf	i2Set_Bits@Bitoutput,3,c
  6653                           
  6654                           ;display.c: 28: break;
  6655  000FE6  D02E               	goto	i2l2325
  6656  000FE8                     i2l2315:
  6657                           
  6658                           ;display.c: 30: Bitoutput |= 0b00010000;
  6659  000FE8  8809               	bsf	i2Set_Bits@Bitoutput,4,c
  6660                           
  6661                           ;display.c: 31: break;
  6662  000FEA  D02C               	goto	i2l2325
  6663  000FEC                     i2l2317:
  6664                           
  6665                           ;display.c: 33: Bitoutput |= 0b00100000;
  6666  000FEC  8A09               	bsf	i2Set_Bits@Bitoutput,5,c
  6667                           
  6668                           ;display.c: 34: break;
  6669  000FEE  D02A               	goto	i2l2325
  6670  000FF0                     i2l2319:
  6671                           
  6672                           ;display.c: 36: Bitoutput |= 0b01000000;
  6673  000FF0  8C09               	bsf	i2Set_Bits@Bitoutput,6,c
  6674                           
  6675                           ;display.c: 40: }
  6676                           
  6677                           ;display.c: 39: break;
  6678                           
  6679                           ;display.c: 38: default:
  6680                           
  6681                           ;display.c: 37: break;
  6682  000FF2  D028               	goto	i2l2325
  6683  000FF4                     i2l2323:
  6684  000FF4  5008               	movf	i2Set_Bits@bitcount,w,c
  6685  000FF6  0D01               	mullw	1
  6686  000FF8  50F3               	movf	prodl,w,c
  6687  000FFA  2401               	addwf	i2Set_Bits@bits,w,c
  6688  000FFC  6E04               	movwf	??i2_Set_Bits& (0+255),c
  6689  000FFE  50F4               	movf	prodh,w,c
  6690  001000  2002               	addwfc	i2Set_Bits@bits+1,w,c
  6691  001002  6E05               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6692  001004  0E00               	movlw	0
  6693  001006  2003               	addwfc	i2Set_Bits@bits+2,w,c
  6694  001008  6E06               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6695  00100A  C004  FFF6         	movff	??i2_Set_Bits,tblptrl
  6696  00100E  C005  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6697  001012  C006  FFF8         	movff	??i2_Set_Bits+2,tblptru
  6698  001016  0008               	tblrd		*
  6699  001018  50F5               	movf	tablat,w,c
  6700                           
  6701                           ; Switch size 1, requested type "space"
  6702                           ; Number of cases is 7, Range of values is 65 to 71
  6703                           ; switch strategies available:
  6704                           ; Name         Instructions Cycles
  6705                           ; simple_byte           22    12 (average)
  6706                           ;	Chosen strategy is simple_byte
  6707  00101A  0A41               	xorlw	65	; case 65
  6708  00101C  B4D8               	btfsc	status,2,c
  6709  00101E  D7DC               	goto	i2l2307
  6710  001020  0A03               	xorlw	3	; case 66
  6711  001022  B4D8               	btfsc	status,2,c
  6712  001024  D7DB               	goto	i2l2309
  6713  001026  0A01               	xorlw	1	; case 67
  6714  001028  B4D8               	btfsc	status,2,c
  6715  00102A  D7DA               	goto	i2l2311
  6716  00102C  0A07               	xorlw	7	; case 68
  6717  00102E  B4D8               	btfsc	status,2,c
  6718  001030  D7D9               	goto	i2l2313
  6719  001032  0A01               	xorlw	1	; case 69
  6720  001034  B4D8               	btfsc	status,2,c
  6721  001036  D7D8               	goto	i2l2315
  6722  001038  0A03               	xorlw	3	; case 70
  6723  00103A  B4D8               	btfsc	status,2,c
  6724  00103C  D7D7               	goto	i2l2317
  6725  00103E  0A01               	xorlw	1	; case 71
  6726  001040  B4D8               	btfsc	status,2,c
  6727  001042  D7D6               	goto	i2l2319
  6728  001044                     i2l2325:
  6729  001044  2A08               	incf	i2Set_Bits@bitcount,f,c
  6730  001046                     i2l2327:
  6731  001046  5008               	movf	i2Set_Bits@bitcount,w,c
  6732  001048  0D01               	mullw	1
  6733  00104A  50F3               	movf	prodl,w,c
  6734  00104C  2401               	addwf	i2Set_Bits@bits,w,c
  6735  00104E  6E04               	movwf	??i2_Set_Bits& (0+255),c
  6736  001050  50F4               	movf	prodh,w,c
  6737  001052  2002               	addwfc	i2Set_Bits@bits+1,w,c
  6738  001054  6E05               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6739  001056  0E00               	movlw	0
  6740  001058  2003               	addwfc	i2Set_Bits@bits+2,w,c
  6741  00105A  6E06               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6742  00105C  C004  FFF6         	movff	??i2_Set_Bits,tblptrl
  6743  001060  C005  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6744  001064  C006  FFF8         	movff	??i2_Set_Bits+2,tblptru
  6745  001068  0008               	tblrd		*
  6746  00106A  50F5               	movf	tablat,w,c
  6747  00106C  0900               	iorlw	0
  6748  00106E  A4D8               	btfss	status,2,c
  6749  001070  D7C1               	goto	i2l2323
  6750                           
  6751                           ;display.c: 41: }
  6752                           ;display.c: 42: pixels[(display_counter - 1)] = Bitoutput;
  6753  001072  0EFF               	movlw	255
  6754  001074  6E04               	movwf	??i2_Set_Bits& (0+255),c
  6755  001076  0EFF               	movlw	255
  6756  001078  6E05               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6757  00107A  0100               	movlb	0	; () banked
  6758  00107C  5194               	movf	_display_counter& (0+255),w,b
  6759  00107E  6E06               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6760  001080  6A07               	clrf	(??i2_Set_Bits+3)& (0+255),c
  6761  001082  5004               	movf	??i2_Set_Bits,w,c
  6762  001084  2606               	addwf	??i2_Set_Bits+2,f,c
  6763  001086  5005               	movf	??i2_Set_Bits+1,w,c
  6764  001088  2207               	addwfc	??i2_Set_Bits+3,f,c
  6765  00108A  0E83               	movlw	low _pixels
  6766  00108C  2406               	addwf	??i2_Set_Bits+2,w,c
  6767  00108E  6ED9               	movwf	fsr2l,c
  6768  001090  0E00               	movlw	high _pixels
  6769  001092  2007               	addwfc	??i2_Set_Bits+3,w,c
  6770  001094  6EDA               	movwf	fsr2h,c
  6771  001096  C009  FFDF         	movff	i2Set_Bits@Bitoutput,indf2
  6772                           
  6773                           ; BSR set to: 0
  6774  00109A  0012               	return		;funcret
  6775  00109C                     __end_ofi2_Set_Bits:
  6776                           	opt stack 0
  6777                           pclatu	equ	0xFFB
  6778                           pclath	equ	0xFFA
  6779                           tblptru	equ	0xFF8
  6780                           tblptrh	equ	0xFF7
  6781                           tblptrl	equ	0xFF6
  6782                           tablat	equ	0xFF5
  6783                           prodh	equ	0xFF4
  6784                           prodl	equ	0xFF3
  6785                           intcon	equ	0xFF2
  6786                           postinc0	equ	0xFEE
  6787                           fsr0h	equ	0xFEA
  6788                           fsr0l	equ	0xFE9
  6789                           wreg	equ	0xFE8
  6790                           postdec1	equ	0xFE5
  6791                           fsr1h	equ	0xFE2
  6792                           fsr1l	equ	0xFE1
  6793                           indf2	equ	0xFDF
  6794                           postinc2	equ	0xFDE
  6795                           postdec2	equ	0xFDD
  6796                           plusw2	equ	0xFDB
  6797                           fsr2h	equ	0xFDA
  6798                           fsr2l	equ	0xFD9
  6799                           status	equ	0xFD8
  6800                           
  6801 ;; *************** function i2_Check_Detonators *****************
  6802 ;; Defined at:
  6803 ;;		line 25 in file "ignition.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;		None
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;		None
  6808 ;; Return value:  Size  Location     Type
  6809 ;;		None               void
  6810 ;; Registers used:
  6811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1
  6817 ;;      Params:         0       0       0
  6818 ;;      Locals:         0       0       0
  6819 ;;      Temps:          0       0       0
  6820 ;;      Totals:         0       0       0
  6821 ;;Total ram usage:        0 bytes
  6822 ;; Hardware stack levels used:    1
  6823 ;; Hardware stack levels required when called:    1
  6824 ;; This function calls:
  6825 ;;		i2_Transmit
  6826 ;; This function is called by:
  6827 ;;		_Isr
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text33
  6832  00172E                     __ptext33:
  6833                           	opt stack 0
  6834  00172E                     i2_Check_Detonators:
  6835                           	opt stack 21
  6836                           
  6837                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;incstack = 0
  6841  00172E  0E54               	movlw	84
  6842  001730  6E01               	movwf	i2Transmit@operation,c
  6843  001732  0100               	movlb	0	; () banked
  6844  001734  5180               	movf	_check_counter& (0+255),w,b
  6845  001736  0D06               	mullw	6
  6846  001738  0E01               	movlw	1
  6847  00173A  26F3               	addwf	prodl,f,c
  6848  00173C  0E00               	movlw	0
  6849  00173E  22F4               	addwfc	prodh,f,c
  6850  001740  0E00               	movlw	low _pin
  6851  001742  24F3               	addwf	prodl,w,c
  6852  001744  6ED9               	movwf	fsr2l,c
  6853  001746  0E01               	movlw	high _pin
  6854  001748  20F4               	addwfc	prodh,w,c
  6855  00174A  6EDA               	movwf	fsr2h,c
  6856  00174C  50DF               	movf	indf2,w,c
  6857  00174E  6E02               	movwf	i2Transmit@port,c
  6858  001750  0100               	movlb	0	; () banked
  6859  001752  5180               	movf	_check_counter& (0+255),w,b
  6860  001754  0D06               	mullw	6
  6861  001756  0E00               	movlw	low _pin
  6862  001758  24F3               	addwf	prodl,w,c
  6863  00175A  6ED9               	movwf	fsr2l,c
  6864  00175C  0E01               	movlw	high _pin
  6865  00175E  20F4               	addwfc	prodh,w,c
  6866  001760  6EDA               	movwf	fsr2h,c
  6867  001762  50DF               	movf	indf2,w,c
  6868  001764  ECD1  F00B         	call	i2_Transmit
  6869  001768  0012               	return		;funcret
  6870  00176A                     __end_ofi2_Check_Detonators:
  6871                           	opt stack 0
  6872                           pclatu	equ	0xFFB
  6873                           pclath	equ	0xFFA
  6874                           tblptru	equ	0xFF8
  6875                           tblptrh	equ	0xFF7
  6876                           tblptrl	equ	0xFF6
  6877                           tablat	equ	0xFF5
  6878                           prodh	equ	0xFF4
  6879                           prodl	equ	0xFF3
  6880                           intcon	equ	0xFF2
  6881                           postinc0	equ	0xFEE
  6882                           fsr0h	equ	0xFEA
  6883                           fsr0l	equ	0xFE9
  6884                           wreg	equ	0xFE8
  6885                           postdec1	equ	0xFE5
  6886                           fsr1h	equ	0xFE2
  6887                           fsr1l	equ	0xFE1
  6888                           indf2	equ	0xFDF
  6889                           postinc2	equ	0xFDE
  6890                           postdec2	equ	0xFDD
  6891                           plusw2	equ	0xFDB
  6892                           fsr2h	equ	0xFDA
  6893                           fsr2l	equ	0xFD9
  6894                           status	equ	0xFD8
  6895                           
  6896 ;; *************** function ___awdiv *****************
  6897 ;; Defined at:
  6898 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  dividend        2    0[COMRAM] int 
  6901 ;;  divisor         2    2[COMRAM] int 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;  quotient        2    6[COMRAM] int 
  6904 ;;  sign            1    5[COMRAM] unsigned char 
  6905 ;;  counter         1    4[COMRAM] unsigned char 
  6906 ;; Return value:  Size  Location     Type
  6907 ;;                  2    0[COMRAM] int 
  6908 ;; Registers used:
  6909 ;;		wreg, status,2, status,0
  6910 ;; Tracked objects:
  6911 ;;		On entry : 0/0
  6912 ;;		On exit  : 0/0
  6913 ;;		Unchanged: 0/0
  6914 ;; Data sizes:     COMRAM   BANK0   BANK1
  6915 ;;      Params:         4       0       0
  6916 ;;      Locals:         4       0       0
  6917 ;;      Temps:          0       0       0
  6918 ;;      Totals:         8       0       0
  6919 ;;Total ram usage:        8 bytes
  6920 ;; Hardware stack levels used:    1
  6921 ;; This function calls:
  6922 ;;		Nothing
  6923 ;; This function is called by:
  6924 ;;		_Isr
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           	psect	text34
  6929  0011EC                     __ptext34:
  6930                           	opt stack 0
  6931  0011EC                     ___awdiv:
  6932                           	opt stack 22
  6933                           
  6934                           ;incstack = 0
  6935  0011EC  0E00               	movlw	0
  6936  0011EE  6E06               	movwf	___awdiv@sign,c
  6937  0011F0  AE04               	btfss	___awdiv@divisor+1,7,c
  6938  0011F2  D006               	goto	i2l2753
  6939  0011F4  6C03               	negf	___awdiv@divisor,c
  6940  0011F6  1E04               	comf	___awdiv@divisor+1,f,c
  6941  0011F8  B0D8               	btfsc	status,0,c
  6942  0011FA  2A04               	incf	___awdiv@divisor+1,f,c
  6943  0011FC  0E01               	movlw	1
  6944  0011FE  6E06               	movwf	___awdiv@sign,c
  6945  001200                     i2l2753:
  6946  001200  AE02               	btfss	___awdiv@dividend+1,7,c
  6947  001202  D006               	goto	i2l2759
  6948  001204  6C01               	negf	___awdiv@dividend,c
  6949  001206  1E02               	comf	___awdiv@dividend+1,f,c
  6950  001208  B0D8               	btfsc	status,0,c
  6951  00120A  2A02               	incf	___awdiv@dividend+1,f,c
  6952  00120C  0E01               	movlw	1
  6953  00120E  1A06               	xorwf	___awdiv@sign,f,c
  6954  001210                     i2l2759:
  6955  001210  0E00               	movlw	0
  6956  001212  6E08               	movwf	___awdiv@quotient+1,c
  6957  001214  0E00               	movlw	0
  6958  001216  6E07               	movwf	___awdiv@quotient,c
  6959  001218  5003               	movf	___awdiv@divisor,w,c
  6960  00121A  1004               	iorwf	___awdiv@divisor+1,w,c
  6961  00121C  B4D8               	btfsc	status,2,c
  6962  00121E  D01C               	goto	i2l2781
  6963  001220  0E01               	movlw	1
  6964  001222  6E05               	movwf	___awdiv@counter,c
  6965  001224  D004               	goto	i2l2767
  6966  001226                     i2l2765:
  6967  001226  90D8               	bcf	status,0,c
  6968  001228  3603               	rlcf	___awdiv@divisor,f,c
  6969  00122A  3604               	rlcf	___awdiv@divisor+1,f,c
  6970  00122C  2A05               	incf	___awdiv@counter,f,c
  6971  00122E                     i2l2767:
  6972  00122E  AE04               	btfss	___awdiv@divisor+1,7,c
  6973  001230  D7FA               	goto	i2l2765
  6974  001232                     i2l2769:
  6975  001232  90D8               	bcf	status,0,c
  6976  001234  3607               	rlcf	___awdiv@quotient,f,c
  6977  001236  3608               	rlcf	___awdiv@quotient+1,f,c
  6978  001238  5003               	movf	___awdiv@divisor,w,c
  6979  00123A  5C01               	subwf	___awdiv@dividend,w,c
  6980  00123C  5004               	movf	___awdiv@divisor+1,w,c
  6981  00123E  5802               	subwfb	___awdiv@dividend+1,w,c
  6982  001240  A0D8               	btfss	status,0,c
  6983  001242  D005               	goto	i2l2777
  6984  001244  5003               	movf	___awdiv@divisor,w,c
  6985  001246  5E01               	subwf	___awdiv@dividend,f,c
  6986  001248  5004               	movf	___awdiv@divisor+1,w,c
  6987  00124A  5A02               	subwfb	___awdiv@dividend+1,f,c
  6988  00124C  8007               	bsf	___awdiv@quotient,0,c
  6989  00124E                     i2l2777:
  6990  00124E  90D8               	bcf	status,0,c
  6991  001250  3204               	rrcf	___awdiv@divisor+1,f,c
  6992  001252  3203               	rrcf	___awdiv@divisor,f,c
  6993  001254  2E05               	decfsz	___awdiv@counter,f,c
  6994  001256  D7ED               	goto	i2l2769
  6995  001258                     i2l2781:
  6996  001258  5006               	movf	___awdiv@sign,w,c
  6997  00125A  B4D8               	btfsc	status,2,c
  6998  00125C  D004               	goto	i2l2785
  6999  00125E  6C07               	negf	___awdiv@quotient,c
  7000  001260  1E08               	comf	___awdiv@quotient+1,f,c
  7001  001262  B0D8               	btfsc	status,0,c
  7002  001264  2A08               	incf	___awdiv@quotient+1,f,c
  7003  001266                     i2l2785:
  7004  001266  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7005  00126A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7006  00126E  0012               	return	
  7007  001270                     __end_of___awdiv:
  7008                           	opt stack 0
  7009                           pclatu	equ	0xFFB
  7010                           pclath	equ	0xFFA
  7011                           tblptru	equ	0xFF8
  7012                           tblptrh	equ	0xFF7
  7013                           tblptrl	equ	0xFF6
  7014                           tablat	equ	0xFF5
  7015                           prodh	equ	0xFF4
  7016                           prodl	equ	0xFF3
  7017                           intcon	equ	0xFF2
  7018                           postinc0	equ	0xFEE
  7019                           fsr0h	equ	0xFEA
  7020                           fsr0l	equ	0xFE9
  7021                           wreg	equ	0xFE8
  7022                           postdec1	equ	0xFE5
  7023                           fsr1h	equ	0xFE2
  7024                           fsr1l	equ	0xFE1
  7025                           indf2	equ	0xFDF
  7026                           postinc2	equ	0xFDE
  7027                           postdec2	equ	0xFDD
  7028                           plusw2	equ	0xFDB
  7029                           fsr2h	equ	0xFDA
  7030                           fsr2l	equ	0xFD9
  7031                           status	equ	0xFD8
  7032                           
  7033 ;; *************** function _Receive_Dump *****************
  7034 ;; Defined at:
  7035 ;;		line 46 in file "communication.c"
  7036 ;; Parameters:    Size  Location     Type
  7037 ;;		None
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  dump            1    0[COMRAM] unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;		None               void
  7042 ;; Registers used:
  7043 ;;		None
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1
  7049 ;;      Params:         0       0       0
  7050 ;;      Locals:         1       0       0
  7051 ;;      Temps:          0       0       0
  7052 ;;      Totals:         1       0       0
  7053 ;;Total ram usage:        1 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; This function calls:
  7056 ;;		Nothing
  7057 ;; This function is called by:
  7058 ;;		_Isr
  7059 ;; This function uses a non-reentrant model
  7060 ;;
  7061                           
  7062                           	psect	text35
  7063  0018FC                     __ptext35:
  7064                           	opt stack 0
  7065  0018FC                     _Receive_Dump:
  7066                           	opt stack 22
  7067                           
  7068                           ;communication.c: 47: unsigned char dump;
  7069                           ;communication.c: 48: if(RCSTA1bits.OERR == 1) {
  7070                           
  7071                           ;incstack = 0
  7072  0018FC  A2AB               	btfss	4011,1,c	;volatile
  7073  0018FE  D003               	goto	i2l544
  7074                           
  7075                           ;communication.c: 49: RCSTA1bits.CREN = 0;
  7076  001900  98AB               	bcf	4011,4,c	;volatile
  7077                           
  7078                           ;communication.c: 50: RCSTA1bits.CREN = 1;
  7079  001902  88AB               	bsf	4011,4,c	;volatile
  7080                           
  7081                           ;communication.c: 51: overrun = 1;
  7082  001904  8439               	bsf	_overrun/(0+8),_overrun& (0+7),c
  7083  001906                     i2l544:
  7084                           
  7085                           ;communication.c: 52: }
  7086                           ;communication.c: 53: dump = RCREG1;
  7087  001906  CFAE F001          	movff	4014,Receive_Dump@dump	;volatile
  7088  00190A  0012               	return		;funcret
  7089  00190C                     __end_of_Receive_Dump:
  7090                           	opt stack 0
  7091                           pclatu	equ	0xFFB
  7092                           pclath	equ	0xFFA
  7093                           tblptru	equ	0xFF8
  7094                           tblptrh	equ	0xFF7
  7095                           tblptrl	equ	0xFF6
  7096                           tablat	equ	0xFF5
  7097                           prodh	equ	0xFF4
  7098                           prodl	equ	0xFF3
  7099                           intcon	equ	0xFF2
  7100                           postinc0	equ	0xFEE
  7101                           fsr0h	equ	0xFEA
  7102                           fsr0l	equ	0xFE9
  7103                           wreg	equ	0xFE8
  7104                           postdec1	equ	0xFE5
  7105                           fsr1h	equ	0xFE2
  7106                           fsr1l	equ	0xFE1
  7107                           indf2	equ	0xFDF
  7108                           postinc2	equ	0xFDE
  7109                           postdec2	equ	0xFDD
  7110                           plusw2	equ	0xFDB
  7111                           fsr2h	equ	0xFDA
  7112                           fsr2l	equ	0xFD9
  7113                           status	equ	0xFD8
  7114                           
  7115 ;; *************** function _Receive *****************
  7116 ;; Defined at:
  7117 ;;		line 37 in file "communication.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;		None
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;		None
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1    wreg      unsigned char 
  7124 ;; Registers used:
  7125 ;;		wreg, status,2
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1
  7131 ;;      Params:         0       0       0
  7132 ;;      Locals:         0       0       0
  7133 ;;      Temps:          0       0       0
  7134 ;;      Totals:         0       0       0
  7135 ;;Total ram usage:        0 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		_Isr
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text36
  7145  00190C                     __ptext36:
  7146                           	opt stack 0
  7147  00190C                     _Receive:
  7148                           	opt stack 22
  7149                           
  7150                           ;communication.c: 38: if(RCSTA1bits.OERR == 1) {
  7151                           
  7152                           ;incstack = 0
  7153  00190C  A2AB               	btfss	4011,1,c	;volatile
  7154  00190E  D003               	goto	i2l2737
  7155                           
  7156                           ;communication.c: 39: RCSTA1bits.CREN = 0;
  7157  001910  98AB               	bcf	4011,4,c	;volatile
  7158                           
  7159                           ;communication.c: 40: RCSTA1bits.CREN = 1;
  7160  001912  88AB               	bsf	4011,4,c	;volatile
  7161                           
  7162                           ;communication.c: 41: overrun = 1;
  7163  001914  8439               	bsf	_overrun/(0+8),_overrun& (0+7),c
  7164  001916                     i2l2737:
  7165                           
  7166                           ;communication.c: 42: }
  7167                           ;communication.c: 43: return (RCREG1);
  7168  001916  50AE               	movf	4014,w,c	;volatile
  7169  001918  0012               	return	
  7170  00191A                     __end_of_Receive:
  7171                           	opt stack 0
  7172                           pclatu	equ	0xFFB
  7173                           pclath	equ	0xFFA
  7174                           tblptru	equ	0xFF8
  7175                           tblptrh	equ	0xFF7
  7176                           tblptrl	equ	0xFF6
  7177                           tablat	equ	0xFF5
  7178                           prodh	equ	0xFF4
  7179                           prodl	equ	0xFF3
  7180                           intcon	equ	0xFF2
  7181                           postinc0	equ	0xFEE
  7182                           fsr0h	equ	0xFEA
  7183                           fsr0l	equ	0xFE9
  7184                           wreg	equ	0xFE8
  7185                           postdec1	equ	0xFE5
  7186                           fsr1h	equ	0xFE2
  7187                           fsr1l	equ	0xFE1
  7188                           indf2	equ	0xFDF
  7189                           postinc2	equ	0xFDE
  7190                           postdec2	equ	0xFDD
  7191                           plusw2	equ	0xFDB
  7192                           fsr2h	equ	0xFDA
  7193                           fsr2l	equ	0xFD9
  7194                           status	equ	0xFD8
  7195                           
  7196 ;; *************** function _Ignite_Detonators *****************
  7197 ;; Defined at:
  7198 ;;		line 29 in file "ignition.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;		None
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;  counter         1    5[COMRAM] unsigned char 
  7203 ;; Return value:  Size  Location     Type
  7204 ;;		None               void
  7205 ;; Registers used:
  7206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1
  7212 ;;      Params:         0       0       0
  7213 ;;      Locals:         1       0       0
  7214 ;;      Temps:          2       0       0
  7215 ;;      Totals:         3       0       0
  7216 ;;Total ram usage:        3 bytes
  7217 ;; Hardware stack levels used:    1
  7218 ;; Hardware stack levels required when called:    1
  7219 ;; This function calls:
  7220 ;;		i2_Transmit
  7221 ;; This function is called by:
  7222 ;;		_Isr
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text37
  7227  0012E8                     __ptext37:
  7228                           	opt stack 0
  7229  0012E8                     _Ignite_Detonators:
  7230                           	opt stack 21
  7231                           
  7232                           ;ignition.c: 30: for(unsigned char counter = 0; counter < 30; counter++) {
  7233                           
  7234                           ;incstack = 0
  7235  0012E8  0E00               	movlw	0
  7236  0012EA  6E06               	movwf	Ignite_Detonators@counter,c
  7237  0012EC                     i2l2721:
  7238  0012EC  0E1D               	movlw	29
  7239  0012EE  6406               	cpfsgt	Ignite_Detonators@counter,c
  7240  0012F0  D001               	goto	i2l2725
  7241  0012F2  0012               	return	
  7242  0012F4                     i2l2725:
  7243                           
  7244                           ;ignition.c: 31: if(pin[counter].time == current_time) {
  7245  0012F4  5006               	movf	Ignite_Detonators@counter,w,c
  7246  0012F6  0D06               	mullw	6
  7247  0012F8  0E04               	movlw	4
  7248  0012FA  26F3               	addwf	prodl,f,c
  7249  0012FC  0E00               	movlw	0
  7250  0012FE  22F4               	addwfc	prodh,f,c
  7251  001300  0E00               	movlw	low _pin
  7252  001302  24F3               	addwf	prodl,w,c
  7253  001304  6ED9               	movwf	fsr2l,c
  7254  001306  0E01               	movlw	high _pin
  7255  001308  20F4               	addwfc	prodh,w,c
  7256  00130A  6EDA               	movwf	fsr2h,c
  7257  00130C  5036               	movf	_current_time,w,c
  7258  00130E  18DE               	xorwf	postinc2,w,c
  7259  001310  E11F               	bnz	i2l2729
  7260  001312  5037               	movf	_current_time+1,w,c
  7261  001314  18DE               	xorwf	postinc2,w,c
  7262  001316  A4D8               	btfss	status,2,c
  7263  001318  D01B               	goto	i2l2729
  7264                           
  7265                           ;ignition.c: 32: Transmit(pin[counter].slave, 'I', pin[counter].output);
  7266  00131A  0E49               	movlw	73
  7267  00131C  6E01               	movwf	i2Transmit@operation,c
  7268  00131E  5006               	movf	Ignite_Detonators@counter,w,c
  7269  001320  0D06               	mullw	6
  7270  001322  0E01               	movlw	1
  7271  001324  26F3               	addwf	prodl,f,c
  7272  001326  0E00               	movlw	0
  7273  001328  22F4               	addwfc	prodh,f,c
  7274  00132A  0E00               	movlw	low _pin
  7275  00132C  24F3               	addwf	prodl,w,c
  7276  00132E  6ED9               	movwf	fsr2l,c
  7277  001330  0E01               	movlw	high _pin
  7278  001332  20F4               	addwfc	prodh,w,c
  7279  001334  6EDA               	movwf	fsr2h,c
  7280  001336  50DF               	movf	indf2,w,c
  7281  001338  6E02               	movwf	i2Transmit@port,c
  7282  00133A  5006               	movf	Ignite_Detonators@counter,w,c
  7283  00133C  0D06               	mullw	6
  7284  00133E  0E00               	movlw	low _pin
  7285  001340  24F3               	addwf	prodl,w,c
  7286  001342  6ED9               	movwf	fsr2l,c
  7287  001344  0E01               	movlw	high _pin
  7288  001346  20F4               	addwfc	prodh,w,c
  7289  001348  6EDA               	movwf	fsr2h,c
  7290  00134A  50DF               	movf	indf2,w,c
  7291  00134C  ECD1  F00B         	call	i2_Transmit
  7292  001350                     i2l2729:
  7293  001350  2A06               	incf	Ignite_Detonators@counter,f,c
  7294  001352  D7CC               	goto	i2l2721
  7295  001354                     __end_of_Ignite_Detonators:
  7296                           	opt stack 0
  7297                           pclatu	equ	0xFFB
  7298                           pclath	equ	0xFFA
  7299                           tblptru	equ	0xFF8
  7300                           tblptrh	equ	0xFF7
  7301                           tblptrl	equ	0xFF6
  7302                           tablat	equ	0xFF5
  7303                           prodh	equ	0xFF4
  7304                           prodl	equ	0xFF3
  7305                           intcon	equ	0xFF2
  7306                           postinc0	equ	0xFEE
  7307                           fsr0h	equ	0xFEA
  7308                           fsr0l	equ	0xFE9
  7309                           wreg	equ	0xFE8
  7310                           postdec1	equ	0xFE5
  7311                           fsr1h	equ	0xFE2
  7312                           fsr1l	equ	0xFE1
  7313                           indf2	equ	0xFDF
  7314                           postinc2	equ	0xFDE
  7315                           postdec2	equ	0xFDD
  7316                           plusw2	equ	0xFDB
  7317                           fsr2h	equ	0xFDA
  7318                           fsr2l	equ	0xFD9
  7319                           status	equ	0xFD8
  7320                           
  7321 ;; *************** function i2_Transmit *****************
  7322 ;; Defined at:
  7323 ;;		line 15 in file "communication.c"
  7324 ;; Parameters:    Size  Location     Type
  7325 ;;  receiver        1    wreg     unsigned char 
  7326 ;;  operation       1    0[COMRAM] unsigned char 
  7327 ;;  port            1    1[COMRAM] unsigned char 
  7328 ;; Auto vars:     Size  Location     Type
  7329 ;;  receiver        1    2[COMRAM] unsigned char 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;		None               void
  7332 ;; Registers used:
  7333 ;;		wreg, status,2
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1
  7339 ;;      Params:         2       0       0
  7340 ;;      Locals:         1       0       0
  7341 ;;      Temps:          0       0       0
  7342 ;;      Totals:         3       0       0
  7343 ;;Total ram usage:        3 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_Ignite_Detonators
  7349 ;;		i2_Check_Detonators
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text38
  7354  0017A2                     __ptext38:
  7355                           	opt stack 0
  7356  0017A2                     i2_Transmit:
  7357                           	opt stack 21
  7358                           
  7359                           ;incstack = 0
  7360                           ;i2Transmit@receiver stored from wreg
  7361  0017A2  6E03               	movwf	i2Transmit@receiver,c
  7362                           
  7363                           ;communication.c: 17: PORTBbits.RB5 = 1;
  7364  0017A4  8A81               	bsf	3969,5,c	;volatile
  7365                           
  7366                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  7367  0017A6  98AB               	bcf	4011,4,c	;volatile
  7368                           
  7369                           ;communication.c: 20: __nop();
  7370  0017A8  F000               	nop	
  7371  0017AA                     i2l522:
  7372  0017AA  A89E               	btfss	3998,4,c	;volatile
  7373  0017AC  D7FE               	goto	i2l522
  7374                           
  7375                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  7376  0017AE  80AC               	bsf	4012,0,c	;volatile
  7377                           
  7378                           ;communication.c: 23: TXREG1 = receiver;
  7379  0017B0  C003  FFAD         	movff	i2Transmit@receiver,4013	;volatile
  7380  0017B4                     i2l525:
  7381  0017B4  A89E               	btfss	3998,4,c	;volatile
  7382  0017B6  D7FE               	goto	i2l525
  7383                           
  7384                           ;communication.c: 25: TXREG1 = 0xAA;
  7385  0017B8  0EAA               	movlw	170
  7386  0017BA  6EAD               	movwf	4013,c	;volatile
  7387  0017BC                     i2l528:
  7388  0017BC  A89E               	btfss	3998,4,c	;volatile
  7389  0017BE  D7FE               	goto	i2l528
  7390                           
  7391                           ;communication.c: 27: TXREG1 = operation;
  7392  0017C0  C001  FFAD         	movff	i2Transmit@operation,4013	;volatile
  7393  0017C4                     i2l531:
  7394  0017C4  A89E               	btfss	3998,4,c	;volatile
  7395  0017C6  D7FE               	goto	i2l531
  7396                           
  7397                           ;communication.c: 29: TXREG1 = port;
  7398  0017C8  C002  FFAD         	movff	i2Transmit@port,4013	;volatile
  7399  0017CC                     i2l534:
  7400  0017CC  A2AC               	btfss	4012,1,c	;volatile
  7401  0017CE  D7FE               	goto	i2l534
  7402                           
  7403                           ;communication.c: 31: PORTBbits.RB5 = 0;
  7404  0017D0  9A81               	bcf	3969,5,c	;volatile
  7405                           
  7406                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  7407  0017D2  88AB               	bsf	4011,4,c	;volatile
  7408                           
  7409                           ;communication.c: 33: __nop();
  7410  0017D4  F000               	nop	
  7411  0017D6  0012               	return		;funcret
  7412  0017D8                     __end_ofi2_Transmit:
  7413                           	opt stack 0
  7414                           pclatu	equ	0xFFB
  7415                           pclath	equ	0xFFA
  7416                           tblptru	equ	0xFF8
  7417                           tblptrh	equ	0xFF7
  7418                           tblptrl	equ	0xFF6
  7419                           tablat	equ	0xFF5
  7420                           prodh	equ	0xFF4
  7421                           prodl	equ	0xFF3
  7422                           intcon	equ	0xFF2
  7423                           postinc0	equ	0xFEE
  7424                           fsr0h	equ	0xFEA
  7425                           fsr0l	equ	0xFE9
  7426                           wreg	equ	0xFE8
  7427                           postdec1	equ	0xFE5
  7428                           fsr1h	equ	0xFE2
  7429                           fsr1l	equ	0xFE1
  7430                           indf2	equ	0xFDF
  7431                           postinc2	equ	0xFDE
  7432                           postdec2	equ	0xFDD
  7433                           plusw2	equ	0xFDB
  7434                           fsr2h	equ	0xFDA
  7435                           fsr2l	equ	0xFD9
  7436                           status	equ	0xFD8
  7437                           pclatu	equ	0xFFB
  7438                           pclath	equ	0xFFA
  7439                           tblptru	equ	0xFF8
  7440                           tblptrh	equ	0xFF7
  7441                           tblptrl	equ	0xFF6
  7442                           tablat	equ	0xFF5
  7443                           prodh	equ	0xFF4
  7444                           prodl	equ	0xFF3
  7445                           intcon	equ	0xFF2
  7446                           postinc0	equ	0xFEE
  7447                           fsr0h	equ	0xFEA
  7448                           fsr0l	equ	0xFE9
  7449                           wreg	equ	0xFE8
  7450                           postdec1	equ	0xFE5
  7451                           fsr1h	equ	0xFE2
  7452                           fsr1l	equ	0xFE1
  7453                           indf2	equ	0xFDF
  7454                           postinc2	equ	0xFDE
  7455                           postdec2	equ	0xFDD
  7456                           plusw2	equ	0xFDB
  7457                           fsr2h	equ	0xFDA
  7458                           fsr2l	equ	0xFD9
  7459                           status	equ	0xFD8
  7460                           
  7461                           	psect	rparam
  7462  0000                     pclatu	equ	0xFFB
  7463                           pclath	equ	0xFFA
  7464                           tblptru	equ	0xFF8
  7465                           tblptrh	equ	0xFF7
  7466                           tblptrl	equ	0xFF6
  7467                           tablat	equ	0xFF5
  7468                           prodh	equ	0xFF4
  7469                           prodl	equ	0xFF3
  7470                           intcon	equ	0xFF2
  7471                           postinc0	equ	0xFEE
  7472                           fsr0h	equ	0xFEA
  7473                           fsr0l	equ	0xFE9
  7474                           wreg	equ	0xFE8
  7475                           postdec1	equ	0xFE5
  7476                           fsr1h	equ	0xFE2
  7477                           fsr1l	equ	0xFE1
  7478                           indf2	equ	0xFDF
  7479                           postinc2	equ	0xFDE
  7480                           postdec2	equ	0xFDD
  7481                           plusw2	equ	0xFDB
  7482                           fsr2h	equ	0xFDA
  7483                           fsr2l	equ	0xFD9
  7484                           status	equ	0xFD8
  7485                           
  7486                           	psect	temp
  7487  00003A                     btemp:
  7488                           	opt stack 0
  7489  00003A                     	ds	1
  7490  0000                     int$flags	set	btemp
  7491                           pclatu	equ	0xFFB
  7492                           pclath	equ	0xFFA
  7493                           tblptru	equ	0xFF8
  7494                           tblptrh	equ	0xFF7
  7495                           tblptrl	equ	0xFF6
  7496                           tablat	equ	0xFF5
  7497                           prodh	equ	0xFF4
  7498                           prodl	equ	0xFF3
  7499                           intcon	equ	0xFF2
  7500                           postinc0	equ	0xFEE
  7501                           fsr0h	equ	0xFEA
  7502                           fsr0l	equ	0xFE9
  7503                           wreg	equ	0xFE8
  7504                           postdec1	equ	0xFE5
  7505                           fsr1h	equ	0xFE2
  7506                           fsr1l	equ	0xFE1
  7507                           indf2	equ	0xFDF
  7508                           postinc2	equ	0xFDE
  7509                           postdec2	equ	0xFDD
  7510                           plusw2	equ	0xFDB
  7511                           fsr2h	equ	0xFDA
  7512                           fsr2l	equ	0xFD9
  7513                           status	equ	0xFD8


Data Sizes:
    Strings     75
    Constant    0
    Data        180
    BSS         29
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      57
    BANK0           160     32      53
    BANK1           256      0     180

Pointer List with Targets:

    Write_Display_Byte@write_data	PTR unsigned char  size(2) Largest target is 8
		 -> pixels(BANK0[8]), 

    Evaluate_Display@evaluate	PTR unsigned char  size(2) Largest target is 3
		 -> signs(BANK0[3]), string_delete(BANK0[3]), string_load(BANK0[3]), 

    Set_Bits@bits	PTR const unsigned char  size(3) Largest target is 8191
		 -> ROM(CODE[8191]), STR_17(CODE[2]), STR_16(CODE[6]), STR_15(CODE[7]), 
		 -> STR_14(CODE[4]), STR_13(CODE[6]), STR_12(CODE[7]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[7]), 
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[3]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Isr->i2_Set_Display
    i2_Set_Display->i2_Evaluate_Signs
    i2_Evaluate_Signs->i2_Evaluate_Display
    i2_Evaluate_Display->i2_Set_Bits
    i2_Check_Detonators->i2_Transmit
    _Ignite_Detonators->i2_Transmit

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _Check_Detonators->_Transmit
    _Check_Buttons->_Del_Data
    _Del_Data->_Load_Data
    _Load_Data->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   32859
                      _Check_Buttons
                   _Check_Detonators
                               _Init
                          _Load_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Detonators                                     0     0      0     331
                           _Transmit
 ---------------------------------------------------------------------------------
 (2) _Transmit                                             3     1      2     331
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0   17793
                                             30 BANK0      2     2      0
                           _Del_Data
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (2) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Del_Data                                             1     1      0   10606
                                             29 BANK0      1     1      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Load_Data
                          _Save_Data
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     592
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Load_Data                                            2     2      0    8297
                                             27 BANK0      2     2      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Read_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Set_Display                                          4     1      3    6438
                                             23 BANK0      4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
                 _Write_Display_Byte
 ---------------------------------------------------------------------------------
 (2) _Write_Display_Byte                                   7     5      2     154
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _Evaluate_Signs                                       7     5      2    2625
                                             16 BANK0      7     5      2
                   _Evaluate_Display
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Display                                     7     5      2    1572
                                              9 BANK0      7     5      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (4) _Set_Bits                                             9     6      3    1272
                                              0 BANK0      9     6      3
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2     111
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Isr                                                 20    20      0    3252
                                             27 COMRAM    20    20      0
                  _Ignite_Detonators
                            _Receive
                       _Receive_Dump
                            ___awdiv
                 i2_Check_Detonators
                      i2_Set_Display
 ---------------------------------------------------------------------------------
 (9) i2_Set_Display                                        4     1      3    2232
                                             23 COMRAM     4     1      3
                 i2_Evaluate_Display
                   i2_Evaluate_Signs
               i2_Write_Display_Byte
 ---------------------------------------------------------------------------------
 (10) i2_Write_Display_Byte                                7     5      2     116
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) i2_Evaluate_Signs                                    7     5      2    1270
                                             16 COMRAM     7     5      2
                 i2_Evaluate_Display
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) i2_Evaluate_Display                                  7     5      2     684
                                              9 COMRAM     7     5      2
                         i2_Set_Bits
 ---------------------------------------------------------------------------------
 (12) i2_Set_Bits                                          9     6      3     588
                                              0 COMRAM     9     6      3
 ---------------------------------------------------------------------------------
 (9) i2_Check_Detonators                                   0     0      0     170
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) _Receive_Dump                                         1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Ignite_Detonators                                    3     3      0     282
                                              3 COMRAM     3     3      0
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (10) i2_Transmit                                          3     1      2     170
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Del_Data
       _Delay_Routine
       _Evaluate_Display
         _Set_Bits
       _Load_Data
         _Delay_Routine
         _Evaluate_Display
           _Set_Bits
         _Read_Data
         _Set_Display
           _Evaluate_Display
             _Set_Bits
           _Evaluate_Signs
             _Evaluate_Display
               _Set_Bits
             ___lwdiv
             ___lwmod
           _Write_Display_Byte
       _Save_Data
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwdiv
         ___lwmod
       _Write_Display_Byte
     _Start_Timer
   _Check_Detonators
     _Transmit
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Load_Data
     _Delay_Routine
     _Evaluate_Display
       _Set_Bits
     _Read_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwdiv
         ___lwmod
       _Write_Display_Byte
   _Set_Display
     _Evaluate_Display
       _Set_Bits
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
       ___lwdiv
       ___lwmod
     _Write_Display_Byte

 _Isr (ROOT)
   _Ignite_Detonators
     i2_Transmit
   _Receive
   _Receive_Dump
   ___awdiv
   i2_Check_Detonators
     i2_Transmit
   i2_Set_Display
     i2_Evaluate_Display
       i2_Set_Bits
     i2_Evaluate_Signs
       i2_Evaluate_Display
         i2_Set_Bits
       i2___lwdiv
       i2___lwmod
     i2_Write_Display_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     20      35       4       33.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2F      39       1       60.6%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     122       6        0.0%
DATA                 0      0     122       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Feb 10 21:34:58 2017

        Evaluate_Display@evaluate 0069                        i2_Transmit 17A2  
                    ___awdiv@sign 0006                i2___lwdiv@dividend 0001  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                             l102 028C                               l112 040C  
                             l122 0628                               l106 0352  
                             l118 04C0                               l135 079C  
                             l431 07AA                               l362 14F0  
                             l522 1774                               l531 178E  
                             l365 151E                               l525 177E  
                             l534 1796                               l528 1786  
                             l457 0FB8                    ?i2_Set_Display 0018  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _Isr 0008                               _pin 0100  
                  _Evaluate_Signs 0EF8                               prod 000FF3  
                             wreg 000FE8                 Set_Bits@Bitoutput 0068  
                      _TXSTA1bits 000FAC                      __CFG_LVP$OFF 000000  
                            ?_Isr 0001                              l1034 12DE  
                            l1044 1472                              l2101 0DF6  
                            l2111 0E14                              l2103 0DFC  
                            l2113 0E1A                              l2105 0E02  
                            l2121 0E82                              l2107 0E08  
                            l2131 07EA                              l2109 0E0E  
                            l2117 0E20                              l2141 0880  
                            l2133 0808                              l2119 0E7E  
                            l2151 0916                              l2143 089E  
                            l2135 0826                              l2127 07AE  
                            l2161 09AC                              l2153 0934  
                            l2145 08BC                              l2137 0844  
                            l2129 07CC                              l3025 0CF8  
                            l3105 14CE                              l2155 0952  
                            l2147 08DA                              l2139 0862  
                            l2163 09C4                              l3035 0D36  
                            l3211 0376                              l2245 1814  
                            l2157 0970                              l2149 08F8  
                            l2165 0A68                              l3029 0D02  
                            l2159 098E                              l2167 0A6C  
                            l3303 06A2                              l3231 048C  
                            l3215 03D8                              l2249 1828  
                            l3331 1842                              l3261 0546  
                            l3253 052E                              l3095 14AC  
                            l3191 031E                              l3257 053A  
                            l3249 04E2                              l3099 14B6  
                            l3267 0556                              l3187 02B0  
                            l3269 056C                              l3295 064A  
                            l2915 128E                              l2917 129A  
                            l2927 12D0                              l2919 12A0  
                            l2943 1464                              l2935 142E  
                            l2937 143A                              l2939 1440  
                            l2965 135A                              l2981 139A  
                            l2983 13A6                              l2977 138C  
                            STR_1 022D                              STR_2 026D  
                            STR_3 024F                              STR_4 0249  
                            STR_5 0267                              STR_6 0255  
                            STR_7 0242                              STR_8 026C  
                            STR_9 0225                              u2507 181C  
                            _Init 188A                              _main 1838  
                            fsr0h 000FEA                              fsr1h 000FE2  
              i2___lwdiv@quotient 0005                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 003A                     __CFG_BORV$190 000000  
                    Transmit@port 0061                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0220                     __CFG_IESO$OFF 000000  
                  Save_Data@store 0060                _Write_Display_Byte 13B8  
                    ___param_bank 000010                     _InitInterrupt 191A  
                     _string_load 0091                             ??_Isr 001C  
                 __end_of_Receive 191A               ?_Write_Display_Byte 0060  
                    _BAUDCON1bits 000FB8                             ?_Init 0001  
                           ?_main 0001                   __end_of___awdiv 1270  
                           _EEADR 000FA9                             STR_10 0234  
                           STR_11 023B                             STR_12 022D  
                           STR_13 0261                             STR_14 0230  
                           STR_15 022D                             STR_16 025B  
                           STR_17 024D            __end_of_Evaluate_Signs 0FCE  
                 ___awdiv@divisor 0003                 _InitMiscellaneous 1926  
                 __end_of___lwdiv 12E8                   __end_of___lwmod 147C  
                           i2l431 0A7E                             i2l522 17AA  
                           i2l531 17C4                             i2l525 17B4  
                           i2l534 17CC                             i2l631 01E4  
                           i2l528 17BC                             i2l544 1906  
                           i2l457 11DA                             i2l617 00A2  
                           i2l618 009E                   ___awdiv@counter 0005  
               _Ignite_Detonators 12E8                             _TMR1H 000FCF  
                           _TMR3H 000FB3                             _TMR1L 000FCE  
                           _TMR3L 000FB2                             _PORTA 000F80  
                           _PORTB 000F81                             _PORTC 000F82  
                           _PORTE 000F84                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                           _TRISE 000F96                     __CFG_WRT0$OFF 000000  
        __end_of_InitTransmission 188A                     __CFG_WRT1$OFF 000000  
              ?_InitMiscellaneous 0001                    __CFG_EBTR0$OFF 000000  
                  __CFG_FCMEN$OFF 000000                    __CFG_EBTR1$OFF 000000  
              ?_Ignite_Detonators 0001                 i2Set_Display@type 001B  
        __end_ofi2_Evaluate_Signs 11EC                     __CFG_WRTB$OFF 000000  
                   __CFG_WRTC$OFF 000000                     __CFG_WRTD$OFF 000000  
                _Evaluate_Display 07A0                    __CFG_EBTRB$OFF 000000  
                           _signs 008B                __CFG_MCLRE$EXTMCLR 000000  
            ??_Write_Display_Byte 0062                    __pbitbssCOMRAM 01C8  
                  __CFG_BOREN$OFF 000000               ??_InitMiscellaneous 0060  
                           tablat 000FF5               ??_Ignite_Detonators 0004  
                           plusw2 000FDB                  __end_of_Del_Data 14D6  
                           status 000FD8                       ?i2_Set_Bits 0001  
              __size_ofi2___lwdiv 0052                __size_ofi2___lwmod 0042  
                  ?_InitInterrupt 0001                   __initialization 1622  
                    __end_of_Init 18A8                      __end_of_main 1866  
                     ?i2_Transmit 0001                  __end_of_InitPort 18FC  
                __end_of_InitTris 18EA            Set_Display@information 0077  
       __end_of_InitMiscellaneous 192C                   ??i2_Set_Display 001B  
                          ??_Init 0060         __end_of_Ignite_Detonators 1354  
                   ??_Set_Display 007A                            ??_main 0080  
                __end_of_Set_Bits 0EF8                   ?_Evaluate_Signs 0070  
                   __activetblptr 000002        __end_ofi2_Evaluate_Display 0CC8  
                   ?_Receive_Dump 0001                  __end_of_Transmit 17A2  
                          _EEDATA 000FA8                            _CCPR1H 000FBF  
                          _CCPR1L 000FBE                            _EECON2 000FA7  
                ___awdiv@dividend 0001                            _ANSELA 000F38  
                          _ANSELB 000F39                            _ANSELC 000F3A  
                          i2l1034 15CA                            i2l1044 16E4  
                          i2l2311 0FE0                            i2l2313 0FE4  
                          i2l2401 0AE2                            i2l2315 0FE8  
                          i2l2307 0FD8                            i2l2323 0FF4  
                          i2l2411 0B5A                            i2l2403 0AFA  
                          i2l2317 0FEC                            i2l2309 0FDC  
                          i2l2325 1044                            i2l2421 0BD2  
                          i2l2413 0B72                            i2l2405 0B12  
                          i2l2319 0FF0                            i2l2327 1046  
                          i2l2423 0BEA                            i2l2415 0B8A  
                          i2l2407 0B2A                            i2l2431 0CBA  
                          i2l2425 0C02                            i2l2417 0BA2  
                          i2l2409 0B42                            i2l2433 0CBE  
                          i2l2441 1598                            i2l2427 0C1A  
                          i2l2419 0BBA                            i2l2443 15A0  
                          i2l2429 0C2C                            i2l2453 15C0  
                          i2l2445 15A4                            i2l2461 16BA  
                  __CFG_WDTEN$OFF 000000                            i2l2463 16C2  
                          i2l2721 12EC                            i2l2393 0A82  
                          i2l2465 16C6                            i2l2395 0A9A  
                          i2l2811 1574                            i2l2725 12F4  
                          i2l2397 0AB2                            i2l2469 16DA  
                          i2l2805 155C                            i2l2399 0ACA  
                          i2l2729 1350                            i2l2737 1916  
                          i2l2753 1200                            i2l2809 156A  
                          i2l2905 01DC                            i2l2843 006E  
                          i2l2765 1226                            i2l2781 1258  
                          i2l2837 005C                            i2l2767 122E  
                          i2l2759 1210                            i2l2785 1266  
                          i2l2777 124E                            i2l2769 1232  
                          i2l2793 1530                            i2l2885 016A  
                          i2l2893 01C0                            i2l2895 01C4  
                          i2l2889 01A0                            _RCREG1 000FAE  
              __size_of_Load_Data 0120                            _OSCCON 000FD3  
              __size_of_InitAnsel 0014                            _SPBRG1 000FAF  
                          _SSP1IF 007CF3                __size_of_Read_Data 004E  
              __size_of_InitTimer 0030                            _TXREG1 000FAD  
                       ??_Receive 0001                i2Set_Display@value 0019  
                  __CFG_XINST$OFF 000000                      _CCPTMRS0bits 000F49  
     __size_ofi2_Check_Detonators 003C                __size_of_Save_Data 0056  
                       ??___awdiv 0005                         ??___lwdiv 0064  
                       ??___lwmod 0064                            clear_0 1628  
                          clear_1 1636                  ___awdiv@quotient 0007  
                          _pixels 0083            __size_of_Check_Buttons 052E  
i2Evaluate_Signs@evaluation_value 0011    Evaluate_Signs@evaluation_value 0070  
                  ??_Receive_Dump 0001                 __end_ofi2___lwdiv 15D4  
                    __mediumconst 0000                 __end_ofi2___lwmod 16EE  
             __size_ofi2_Set_Bits 00CE                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
              i2Transmit@receiver 0003               __end_of_Set_Display 13B8  
                 __CFG_HFOFST$OFF 000000               __size_ofi2_Transmit 0036  
            Isr@pixel_index_array 002D                        __accesstop 0060  
         __end_of__initialization 165C                   __CFG_PBADEN$OFF 000000  
                 ??_InitInterrupt 0060                     ___rparam_used 000001  
                  i2Transmit@port 0002                i2___lwmod@dividend 0001  
                  __pcstackCOMRAM 0001         __size_of_Check_Detonators 0040  
                    __pidataBANK1 109C                     ??_Start_Timer 0060  
      __size_of_InitMiscellaneous 0006        __size_of_Ignite_Detonators 006C  
               __end_of_Load_Data 0DE8                 __end_of_InitAnsel 18D8  
               __end_of_Read_Data 1622                 __end_of_InitTimer 1808  
                   _string_delete 008E                         ?_Del_Data 0001  
    __end_ofi2_Write_Display_Byte 16AC                 __end_of_Save_Data 152C  
                      __pbssBANK0 0080                Isr@pixel_index_bit 002E  
                 __CFG_PLLCFG$OFF 000000                     _Check_Buttons 0272  
                       ?_InitPort 0001                         ?_InitTris 0001  
                       ?_Set_Bits 0060                __CFG_CCP2MX$PORTC1 000000  
        __end_of_Evaluate_Display 0A76                __CFG_CCP3MX$PORTB5 000000  
                       ?_Transmit 0060                       _Set_Display 1354  
                      ??_Del_Data 007D            __size_of_Delay_Routine 0030  
             __end_of_Start_Timer 18C4                 ?_InitTransmission 0001  
               __CFG_PRICLKEN$OFF 000000                           _SSP1BUF 000FC9  
               ?i2_Evaluate_Signs 0011                ??_InitTransmission 0060  
              ??i2_Evaluate_Signs 0013                    ?_Check_Buttons 0001  
                      ??_InitPort 0060                        ??_InitTris 0060  
     i2Write_Display_Byte@counter 0007                      ??i2_Set_Bits 0004  
                      ??_Set_Bits 0063                   __CFG_PWRTEN$OFF 000000  
                         _Receive 190C                           __Hparam 0000  
            __end_of_Receive_Dump 190C                           __Lparam 0000  
                Load_Data@counter 007C                           ___awdiv 11EC  
                ??_Evaluate_Signs 0072                      ??i2_Transmit 0003  
                Receive_Dump@dump 0001                           ___lwdiv 1270  
                      ??_Transmit 0062                           ___lwmod 141A  
                    __psmallconst 0224                   __CFG_STVREN$OFF 000000  
                         __pcinit 1622                           __ramtop 0200  
                         __ptext0 1838                           __ptext1 188A  
                         __ptext2 18D8                           __ptext3 1866  
                         __ptext4 17D8                           __ptext5 18EA  
                         __ptext6 1926                           __ptext7 191A  
                         __ptext8 18C4                           __ptext9 16EE  
                       _T1CONbits 000FCD                      __size_of_Isr 0218  
                 Set_Display@type 007A                         _T3CONbits 000FB1  
              __end_ofi2_Set_Bits 109C                           _overrun 01CA  
            end_of_initialization 165C       __size_of_Write_Display_Byte 0062  
              __end_ofi2_Transmit 17D8                     __Lmediumconst 0000  
              i2_Evaluate_Display 0A76                     _Delay_Routine 1808  
            i2_Write_Display_Byte 166A               ?i2_Evaluate_Display 000A  
                       _RCSTAbits 000FAB                  _Check_Detonators 16EE  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
          i2Evaluate_Display@size 0010                       _Start_Timer 18A8  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                       _PORTCbits 000F82               i2Transmit@operation 0001  
           __end_ofi2_Set_Display 1582                         _TRISCbits 000F94  
            ??i2_Evaluate_Display 000C                   ??_Check_Buttons 007E  
        Ignite_Detonators@counter 0006                 i2___lwdiv@divisor 0003  
                       i2___lwdiv 1582                         i2___lwmod 16AC  
               i2___lwdiv@counter 0007                     _check_counter 0080  
                  ?_Delay_Routine 0001                       _CCP1CONbits 000FBD  
           ?i2_Write_Display_Byte 0001        __end_ofi2_Check_Detonators 176A  
        i2Set_Display@information 0018                      Set_Bits@bits 0060  
             start_initialization 1622                         _Load_Data 0CC8  
                       _InitAnsel 18C4                      _ignite_ready 01C8  
               __size_of_Del_Data 005A                       __end_of_Isr 0220  
                       _Read_Data 15D4                         _InitTimer 17D8  
                      ?i2___lwdiv 0001                        ?i2___lwmod 0001  
                Set_Bits@bitcount 0067             __size_of_Receive_Dump 0010  
                       _Save_Data 14D6    i2Write_Display_Byte@write_data 0001  
               __size_of_InitPort 0012                 __size_of_InitTris 0012  
           __end_of_InitInterrupt 1926                 __size_of_Set_Bits 0110  
               ?_Evaluate_Display 0069                       __pdataBANK1 0100  
              ??_Evaluate_Display 006B                    _slave_selected 0082  
               __size_of_Transmit 0038                      ?_Set_Display 0077  
          Save_Data@store_address 0062                       __pbssCOMRAM 0030  
                      ?_Load_Data 0001                        ?_InitAnsel 0001  
                   __pcstackBANK0 0060                      _Receive_Dump 18FC  
                      ?_Read_Data 0060                        ?_InitTimer 0001  
               i2___lwmod@divisor 0003                 i2___lwmod@counter 0005  
                 ??_Delay_Routine 0060                        ?_Save_Data 0060  
          ??i2_Write_Display_Byte 0003                      _current_time 0036  
                       __pnvBANK0 0094                  _master_addressed 01C9  
                        ?_Receive 0001         __size_of_InitTransmission 0024  
                ___lwdiv@dividend 0060         __size_ofi2_Evaluate_Signs 009C  
           Read_Data@read_address 0064                         __pintcode 0008  
                        ?___awdiv 0001                          ?___lwdiv 0060  
                        ?___lwmod 0060                       __smallconst 0224  
                ___lwdiv@quotient 0065          __end_of_Check_Detonators 172E  
                     ??i2___lwdiv 0005                       ??i2___lwmod 0005  
                        _PIE1bits 000F9D               i2Set_Bits@Bitoutput 0009  
                        _PIR1bits 000F9E                          _PIR2bits 000FA1  
                        i2u195_44 0150                          i2u195_45 014C  
                        i2u197_44 0182                          i2u197_45 017E  
                __CFG_WDTPS$32768 000000        i2Evaluate_Display@evaluate 000A  
                        _SSP1CON1 000FC6                          _SSP1STAT 000FC7  
                    ?_Start_Timer 0001                    i2Set_Bits@bits 0001  
                        _Del_Data 147C                       ??_Load_Data 007B  
                     ??_InitAnsel 0060                   _receive_counter 0038  
                     ??_Read_Data 0062                       ??_InitTimer 0060  
      __end_of_Write_Display_Byte 141A                         copy_data0 1650  
                        _InitPort 18EA                          _InitTris 18D8  
                     ??_Save_Data 0063                 Transmit@operation 0060  
                      _EECON1bits 000FA6                   Isr@search_index 002F  
                        _Set_Bits 0DE8                      _pin_selected 0081  
                        __Hrparam 0000                  __size_of_Receive 000E  
                        __Lrparam 0000                 __CFG_P2BMX$PORTB5 000000  
                        _Transmit 176A                  __size_of___awdiv 0084  
                __size_of___lwdiv 0078                  __size_of___lwmod 0062  
    i2Evaluate_Signs@valuecounter 0017                i2_Check_Detonators 172E  
            __size_of_Set_Display 0064           __size_of_Evaluate_Signs 00D6  
                 ___lwdiv@divisor 0062                   ___lwdiv@counter 0064  
     __size_ofi2_Evaluate_Display 0252               ?i2_Check_Detonators 0001  
                        __ptext10 176A                          __ptext11 0272  
                        __ptext20 1270                          __ptext12 18A8  
                        __ptext21 07A0                          __ptext13 147C  
                        __ptext30 1582                          __ptext22 0DE8  
                        __ptext14 14D6                          __ptext31 0A76  
                        __ptext23 15D4                          __ptext15 0CC8  
                        __ptext32 0FCE                          __ptext24 1808  
                        __ptext16 1354                          __ptext33 172E  
                        __ptext17 13B8                          __ptext34 11EC  
                        __ptext26 152C                          __ptext18 0EF8  
                        __ptext35 18FC                          __ptext27 166A  
                        __ptext19 141A                          __ptext36 190C  
                        __ptext28 1150                          __ptext37 12E8  
                        __ptext29 16AC                          __ptext38 17A2  
           __end_of_Check_Buttons 07A0                  Set_Display@value 0078  
                   __size_of_Init 001E                     __size_of_main 002E  
                        _received 0030            __size_ofi2_Set_Display 0056  
                _InitTransmission 1866        Delay_Routine@delay_counter 0062  
                i2_Evaluate_Signs 1150              ??i2_Check_Detonators 0004  
                        _testflag 01CB                          int$flags 003A  
            Evaluate_Display@size 006F                  Transmit@receiver 0062  
    Write_Display_Byte@write_data 0060        Evaluate_Signs@valuecounter 0076  
                      _INTCONbits 000FF2         __size_of_Evaluate_Display 02D6  
              Read_Data@data_read 0062                          intlevel2 0000  
                ___lwmod@dividend 0060         Write_Display_Byte@counter 0066  
                      _RCSTA1bits 000FAB                   _display_counter 0094  
              i2Set_Bits@bitcount 0008                   Del_Data@counter 007D  
            __size_of_Start_Timer 001C                     i2_Set_Display 152C  
                 ___lwmod@divisor 0062     Delay_Routine@delay_multiplyer 0061  
                 ___lwmod@counter 0064                 __CFG_T3CMX$PORTC0 000000  
          __size_of_InitInterrupt 000C                 ?_Check_Detonators 0001  
              ??_Check_Detonators 0063             __end_of_Delay_Routine 1838  
               __CFG_FOSC$INTIO67 000000                        i2_Set_Bits 0FCE  
   __size_ofi2_Write_Display_Byte 0042  
