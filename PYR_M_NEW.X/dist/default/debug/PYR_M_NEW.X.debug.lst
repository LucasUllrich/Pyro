

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Feb 03 17:02:02 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataBANK1
    55  000F68                     __pidataBANK1:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _pin
    59  000F68  00                 	db	0
    60  000F69  00                 	db	0
    61  000F6A  00                 	db	0
    62  000F6B  1F                 	db	31
    63  000F6C  00                 	db	0
    64  000F6D  00                 	db	0
    65  000F6E  00                 	db	0
    66  000F6F  01                 	db	1
    67  000F70  01                 	db	1
    68  000F71  1E                 	db	30
    69  000F72  00                 	db	0
    70  000F73  00                 	db	0
    71  000F74  00                 	db	0
    72  000F75  02                 	db	2
    73  000F76  02                 	db	2
    74  000F77  1D                 	db	29
    75  000F78  00                 	db	0
    76  000F79  00                 	db	0
    77  000F7A  00                 	db	0
    78  000F7B  03                 	db	3
    79  000F7C  03                 	db	3
    80  000F7D  1C                 	db	28
    81  000F7E  00                 	db	0
    82  000F7F  00                 	db	0
    83  000F80  00                 	db	0
    84  000F81  04                 	db	4
    85  000F82  04                 	db	4
    86  000F83  1B                 	db	27
    87  000F84  00                 	db	0
    88  000F85  00                 	db	0
    89  000F86  00                 	db	0
    90  000F87  05                 	db	5
    91  000F88  05                 	db	5
    92  000F89  1A                 	db	26
    93  000F8A  00                 	db	0
    94  000F8B  00                 	db	0
    95  000F8C  00                 	db	0
    96  000F8D  06                 	db	6
    97  000F8E  06                 	db	6
    98  000F8F  19                 	db	25
    99  000F90  00                 	db	0
   100  000F91  00                 	db	0
   101  000F92  00                 	db	0
   102  000F93  07                 	db	7
   103  000F94  07                 	db	7
   104  000F95  18                 	db	24
   105  000F96  00                 	db	0
   106  000F97  00                 	db	0
   107  000F98  00                 	db	0
   108  000F99  08                 	db	8
   109  000F9A  08                 	db	8
   110  000F9B  27                 	db	39
   111  000F9C  00                 	db	0
   112  000F9D  00                 	db	0
   113  000F9E  00                 	db	0
   114  000F9F  09                 	db	9
   115  000FA0  09                 	db	9
   116  000FA1  26                 	db	38
   117  000FA2  00                 	db	0
   118  000FA3  00                 	db	0
   119  000FA4  01                 	db	1
   120  000FA5  00                 	db	0
   121  000FA6  0A                 	db	10
   122  000FA7  25                 	db	37
   123  000FA8  00                 	db	0
   124  000FA9  00                 	db	0
   125  000FAA  01                 	db	1
   126  000FAB  01                 	db	1
   127  000FAC  0B                 	db	11
   128  000FAD  24                 	db	36
   129  000FAE  00                 	db	0
   130  000FAF  00                 	db	0
   131  000FB0  01                 	db	1
   132  000FB1  02                 	db	2
   133  000FB2  0C                 	db	12
   134  000FB3  23                 	db	35
   135  000FB4  00                 	db	0
   136  000FB5  00                 	db	0
   137  000FB6  01                 	db	1
   138  000FB7  03                 	db	3
   139  000FB8  0D                 	db	13
   140  000FB9  22                 	db	34
   141  000FBA  00                 	db	0
   142  000FBB  00                 	db	0
   143  000FBC  01                 	db	1
   144  000FBD  04                 	db	4
   145  000FBE  0E                 	db	14
   146  000FBF  21                 	db	33
   147  000FC0  00                 	db	0
   148  000FC1  00                 	db	0
   149  000FC2  01                 	db	1
   150  000FC3  05                 	db	5
   151  000FC4  0F                 	db	15
   152  000FC5  20                 	db	32
   153  000FC6  00                 	db	0
   154  000FC7  00                 	db	0
   155  000FC8  01                 	db	1
   156  000FC9  06                 	db	6
   157  000FCA  10                 	db	16
   158  000FCB  2F                 	db	47
   159  000FCC  00                 	db	0
   160  000FCD  00                 	db	0
   161  000FCE  01                 	db	1
   162  000FCF  07                 	db	7
   163  000FD0  11                 	db	17
   164  000FD1  2E                 	db	46
   165  000FD2  00                 	db	0
   166  000FD3  00                 	db	0
   167  000FD4  01                 	db	1
   168  000FD5  08                 	db	8
   169  000FD6  12                 	db	18
   170  000FD7  2D                 	db	45
   171  000FD8  00                 	db	0
   172  000FD9  00                 	db	0
   173  000FDA  01                 	db	1
   174  000FDB  09                 	db	9
   175  000FDC  13                 	db	19
   176  000FDD  2C                 	db	44
   177  000FDE  00                 	db	0
   178  000FDF  00                 	db	0
   179  000FE0  02                 	db	2
   180  000FE1  00                 	db	0
   181  000FE2  14                 	db	20
   182  000FE3  2B                 	db	43
   183  000FE4  00                 	db	0
   184  000FE5  00                 	db	0
   185  000FE6  02                 	db	2
   186  000FE7  01                 	db	1
   187  000FE8  15                 	db	21
   188  000FE9  2A                 	db	42
   189  000FEA  00                 	db	0
   190  000FEB  00                 	db	0
   191  000FEC  02                 	db	2
   192  000FED  02                 	db	2
   193  000FEE  16                 	db	22
   194  000FEF  29                 	db	41
   195  000FF0  00                 	db	0
   196  000FF1  00                 	db	0
   197  000FF2  02                 	db	2
   198  000FF3  03                 	db	3
   199  000FF4  17                 	db	23
   200  000FF5  28                 	db	40
   201  000FF6  00                 	db	0
   202  000FF7  00                 	db	0
   203  000FF8  02                 	db	2
   204  000FF9  04                 	db	4
   205  000FFA  18                 	db	24
   206  000FFB  35                 	db	53
   207  000FFC  00                 	db	0
   208  000FFD  00                 	db	0
   209  000FFE  02                 	db	2
   210  000FFF  05                 	db	5
   211  001000  19                 	db	25
   212  001001  34                 	db	52
   213  001002  00                 	db	0
   214  001003  00                 	db	0
   215  001004  02                 	db	2
   216  001005  06                 	db	6
   217  001006  1A                 	db	26
   218  001007  33                 	db	51
   219  001008  00                 	db	0
   220  001009  00                 	db	0
   221  00100A  02                 	db	2
   222  00100B  07                 	db	7
   223  00100C  1B                 	db	27
   224  00100D  32                 	db	50
   225  00100E  00                 	db	0
   226  00100F  00                 	db	0
   227  001010  02                 	db	2
   228  001011  08                 	db	8
   229  001012  1C                 	db	28
   230  001013  31                 	db	49
   231  001014  00                 	db	0
   232  001015  00                 	db	0
   233  001016  02                 	db	2
   234  001017  09                 	db	9
   235  001018  1D                 	db	29
   236  001019  30                 	db	48
   237  00101A  00                 	db	0
   238  00101B  00                 	db	0
   239  0000                     _ANSELA	set	3896
   240  0000                     _ANSELB	set	3897
   241  0000                     _ANSELC	set	3898
   242  0000                     _CCPTMRS0bits	set	3913
   243  0000                     _BAUDCON1bits	set	4024
   244  0000                     _CCP1CONbits	set	4029
   245  0000                     _CCPR1H	set	4031
   246  0000                     _CCPR1L	set	4030
   247  0000                     _EEADR	set	4009
   248  0000                     _EECON1bits	set	4006
   249  0000                     _EECON2	set	4007
   250  0000                     _EEDATA	set	4008
   251  0000                     _INTCONbits	set	4082
   252  0000                     _OSCCON	set	4051
   253  0000                     _PIE1bits	set	3997
   254  0000                     _PIR1bits	set	3998
   255  0000                     _PIR2bits	set	4001
   256  0000                     _PORTA	set	3968
   257  0000                     _PORTB	set	3969
   258  0000                     _PORTBbits	set	3969
   259  0000                     _PORTC	set	3970
   260  0000                     _PORTCbits	set	3970
   261  0000                     _PORTE	set	3972
   262  0000                     _RCREG1	set	4014
   263  0000                     _RCSTA1bits	set	4011
   264  0000                     _RCSTAbits	set	4011
   265  0000                     _SPBRG1	set	4015
   266  0000                     _SSP1BUF	set	4041
   267  0000                     _SSP1CON1	set	4038
   268  0000                     _SSP1STAT	set	4039
   269  0000                     _T1CONbits	set	4045
   270  0000                     _T3CONbits	set	4017
   271  0000                     _TMR1H	set	4047
   272  0000                     _TMR1L	set	4046
   273  0000                     _TMR3H	set	4019
   274  0000                     _TMR3L	set	4018
   275  0000                     _TRISA	set	3986
   276  0000                     _TRISB	set	3987
   277  0000                     _TRISC	set	3988
   278  0000                     _TRISCbits	set	3988
   279  0000                     _TRISE	set	3990
   280  0000                     _TXREG1	set	4013
   281  0000                     _TXSTA1bits	set	4012
   282  0000                     _SSP1IF	set	31987
   283                           
   284                           	psect	smallconst
   285  00021A                     __psmallconst:
   286                           	opt stack 0
   287  00021A  00                 	db	0
   288  00021B                     STR_11:
   289  00021B  41                 	db	65	;'A'
   290  00021C  42                 	db	66	;'B'
   291  00021D  43                 	db	67	;'C'
   292  00021E  44                 	db	68	;'D'
   293  00021F  45                 	db	69	;'E'
   294  000220  46                 	db	70	;'F'
   295  000221  47                 	db	71	;'G'
   296  000222  00                 	db	0
   297  000223                     STR_3:
   298  000223  41                 	db	65	;'A'
   299  000224  42                 	db	66	;'B'
   300  000225  43                 	db	67	;'C'
   301  000226  44                 	db	68	;'D'
   302  000227  45                 	db	69	;'E'
   303  000228  46                 	db	70	;'F'
   304  000229  00                 	db	0
   305  00022A                     STR_12:
   306  00022A  41                 	db	65	;'A'
   307  00022B  42                 	db	66	;'B'
   308  00022C  43                 	db	67	;'C'
   309  00022D  44                 	db	68	;'D'
   310  00022E  46                 	db	70	;'F'
   311  00022F  47                 	db	71	;'G'
   312  000230  00                 	db	0
   313  000231                     STR_13:
   314  000231  41                 	db	65	;'A'
   315  000232  42                 	db	66	;'B'
   316  000233  43                 	db	67	;'C'
   317  000234  45                 	db	69	;'E'
   318  000235  46                 	db	70	;'F'
   319  000236  47                 	db	71	;'G'
   320  000237  00                 	db	0
   321  000238                     STR_9:
   322  000238  41                 	db	65	;'A'
   323  000239  43                 	db	67	;'C'
   324  00023A  44                 	db	68	;'D'
   325  00023B  45                 	db	69	;'E'
   326  00023C  46                 	db	70	;'F'
   327  00023D  47                 	db	71	;'G'
   328  00023E  00                 	db	0
   329  00023F                     STR_6:
   330  00023F  41                 	db	65	;'A'
   331  000240  42                 	db	66	;'B'
   332  000241  43                 	db	67	;'C'
   333  000242  44                 	db	68	;'D'
   334  000243  47                 	db	71	;'G'
   335  000244  00                 	db	0
   336  000245                     STR_5:
   337  000245  41                 	db	65	;'A'
   338  000246  42                 	db	66	;'B'
   339  000247  44                 	db	68	;'D'
   340  000248  45                 	db	69	;'E'
   341  000249  47                 	db	71	;'G'
   342  00024A  00                 	db	0
   343  00024B                     STR_8:
   344  00024B  41                 	db	65	;'A'
   345  00024C  43                 	db	67	;'C'
   346  00024D  44                 	db	68	;'D'
   347  00024E  46                 	db	70	;'F'
   348  00024F  47                 	db	71	;'G'
   349  000250  00                 	db	0
   350  000251                     STR_18:
   351  000251  41                 	db	65	;'A'
   352  000252  42                 	db	66	;'B'
   353  000253  45                 	db	69	;'E'
   354  000254  46                 	db	70	;'F'
   355  000255  47                 	db	71	;'G'
   356  000256  00                 	db	0
   357  000257                     STR_15:
   358  000257  41                 	db	65	;'A'
   359  000258  44                 	db	68	;'D'
   360  000259  45                 	db	69	;'E'
   361  00025A  46                 	db	70	;'F'
   362  00025B  47                 	db	71	;'G'
   363  00025C  00                 	db	0
   364  00025D                     STR_7:
   365  00025D  42                 	db	66	;'B'
   366  00025E  43                 	db	67	;'C'
   367  00025F  46                 	db	70	;'F'
   368  000260  47                 	db	71	;'G'
   369  000261  00                 	db	0
   370  000262                     STR_10:
   371  000262  41                 	db	65	;'A'
   372  000263  42                 	db	66	;'B'
   373  000264  43                 	db	67	;'C'
   374  000265  00                 	db	0
   375  000266                     STR_1:
   376  000266  4C                 	db	76	;'L'
   377  000267  4F                 	db	79	;'O'
   378  000268  41                 	db	65	;'A'
   379  000269  00                 	db	0
   380  00026A                     STR_2:
   381  00026A  44                 	db	68	;'D'
   382  00026B  45                 	db	69	;'E'
   383  00026C  4C                 	db	76	;'L'
   384  00026D  00                 	db	0
   385  0000                     
   386                           ; #config settings
   387  00026E  00                 	db	0	; dummy byte at the end
   388  0000                     
   389                           	psect	cinit
   390  001406                     __pcinit:
   391                           	opt stack 0
   392  001406                     start_initialization:
   393                           	opt stack 0
   394  001406                     __initialization:
   395                           	opt stack 0
   396                           
   397                           ; Clear objects allocated to BANK0 (5 bytes)
   398  001406  0100               	movlb	0
   399  001408  6B7D               	clrf	(__pbssBANK0+4)& (0+255),b
   400  00140A  6B7C               	clrf	(__pbssBANK0+3)& (0+255),b
   401  00140C  6B7B               	clrf	(__pbssBANK0+2)& (0+255),b
   402  00140E  6B7A               	clrf	(__pbssBANK0+1)& (0+255),b
   403  001410  6B79               	clrf	__pbssBANK0& (0+255),b
   404                           
   405                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   406  001412  6A3B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   407                           
   408                           ; Clear objects allocated to COMRAM (18 bytes)
   409  001414  EE00  F029         	lfsr	0,__pbssCOMRAM
   410  001418  0E12               	movlw	18
   411  00141A                     clear_0:
   412  00141A  6AEE               	clrf	postinc0,c
   413  00141C  06E8               	decf	wreg,f,c
   414  00141E  E1FD               	bnz	clear_0
   415                           
   416                           ; Initialize objects allocated to BANK1 (180 bytes)
   417                           ; load TBLPTR registers with __pidataBANK1
   418  001420  0E68               	movlw	low __pidataBANK1
   419  001422  6EF6               	movwf	tblptrl,c
   420  001424  0E0F               	movlw	high __pidataBANK1
   421  001426  6EF7               	movwf	tblptrh,c
   422  001428  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   423  00142A  6EF8               	movwf	tblptru,c
   424  00142C  EE01  F000         	lfsr	0,__pdataBANK1
   425  001430  EE10 F0B4          	lfsr	1,180
   426  001434                     copy_data0:
   427  001434  0009               	tblrd		*+
   428  001436  CFF5 FFEE          	movff	tablat,postinc0
   429  00143A  50E5               	movf	postdec1,w,c
   430  00143C  50E1               	movf	fsr1l,w,c
   431  00143E  E1FA               	bnz	copy_data0
   432  001440                     end_of_initialization:
   433                           	opt stack 0
   434  001440                     __end_of__initialization:
   435                           	opt stack 0
   436  001440  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   437  001442  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   438  001444  0E00               	movlw	low (__Lmediumconst shr (0+16))
   439  001446  6EF8               	movwf	tblptru,c
   440  001448  0100               	movlb	0
   441  00144A  EF2C  F00B         	goto	_main	;jump to C main() function
   442                           tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           postinc0	equ	0xFEE
   447                           wreg	equ	0xFE8
   448                           postdec1	equ	0xFE5
   449                           fsr1l	equ	0xFE1
   450                           
   451                           	psect	bitbssCOMRAM
   452  0001D8                     __pbitbssCOMRAM:
   453                           	opt stack 0
   454  0001D8                     _ignite_ready:
   455                           	opt stack 0
   456  0001D8                     	ds	1
   457  0001D9                     _master_addressed:
   458                           	opt stack 0
   459  0001D9                     	ds	1
   460  0001DA                     _overrun:
   461                           	opt stack 0
   462  0001DA                     	ds	1
   463  0001DB                     _testflag:
   464                           	opt stack 0
   465  0001DB                     	ds	1
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           postdec1	equ	0xFE5
   473                           fsr1l	equ	0xFE1
   474                           
   475                           	psect	bssCOMRAM
   476  000029                     __pbssCOMRAM:
   477                           	opt stack 0
   478  000029                     _received:
   479                           	opt stack 0
   480  000029                     	ds	6
   481  00002F                     _current_time:
   482                           	opt stack 0
   483  00002F                     	ds	2
   484  000031                     _check_counter:
   485                           	opt stack 0
   486  000031                     	ds	1
   487  000032                     _display_counter:
   488                           	opt stack 0
   489  000032                     	ds	1
   490  000033                     _receive_counter:
   491                           	opt stack 0
   492  000033                     	ds	1
   493  000034                     _pixels:
   494                           	opt stack 0
   495  000034                     	ds	7
   496                           tblptru	equ	0xFF8
   497                           tblptrh	equ	0xFF7
   498                           tblptrl	equ	0xFF6
   499                           tablat	equ	0xFF5
   500                           postinc0	equ	0xFEE
   501                           wreg	equ	0xFE8
   502                           postdec1	equ	0xFE5
   503                           fsr1l	equ	0xFE1
   504                           
   505                           	psect	bssBANK0
   506  000079                     __pbssBANK0:
   507                           	opt stack 0
   508  000079                     _pin_selected:
   509                           	opt stack 0
   510  000079                     	ds	1
   511  00007A                     _slave_selected:
   512                           	opt stack 0
   513  00007A                     	ds	1
   514  00007B                     _signs:
   515                           	opt stack 0
   516  00007B                     	ds	3
   517                           tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           tblptrl	equ	0xFF6
   520                           tablat	equ	0xFF5
   521                           postinc0	equ	0xFEE
   522                           wreg	equ	0xFE8
   523                           postdec1	equ	0xFE5
   524                           fsr1l	equ	0xFE1
   525                           
   526                           	psect	dataBANK1
   527  000100                     __pdataBANK1:
   528                           	opt stack 0
   529  000100                     _pin:
   530                           	opt stack 0
   531  000100                     	ds	180
   532                           tblptru	equ	0xFF8
   533                           tblptrh	equ	0xFF7
   534                           tblptrl	equ	0xFF6
   535                           tablat	equ	0xFF5
   536                           postinc0	equ	0xFEE
   537                           wreg	equ	0xFE8
   538                           postdec1	equ	0xFE5
   539                           fsr1l	equ	0xFE1
   540                           
   541                           	psect	cstackBANK0
   542  000060                     __pcstackBANK0:
   543                           	opt stack 0
   544  000060                     ??_Delay_Routine:
   545  000060                     ?_Read_Data:
   546                           	opt stack 0
   547  000060                     ?___lwmod:
   548                           	opt stack 0
   549  000060                     Transmit@operation:
   550                           	opt stack 0
   551  000060                     Save_Data@store:
   552                           	opt stack 0
   553  000060                     Write_Display_Byte@write_data:
   554                           	opt stack 0
   555  000060                     ___lwmod@dividend:
   556                           	opt stack 0
   557  000060                     Set_Bits@bits:
   558                           	opt stack 0
   559                           
   560                           ; 3 bytes @ 0x0
   561  000060                     	ds	1
   562  000061                     Delay_Routine@delay_multiplyer:
   563                           	opt stack 0
   564  000061                     Transmit@port:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x1
   568  000061                     	ds	1
   569  000062                     ??_Write_Display_Byte:
   570  000062                     Delay_Routine@delay_counter:
   571                           	opt stack 0
   572  000062                     Save_Data@store_address:
   573                           	opt stack 0
   574  000062                     Transmit@receiver:
   575                           	opt stack 0
   576  000062                     Read_Data@data_read:
   577                           	opt stack 0
   578  000062                     ___lwmod@divisor:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x2
   582  000062                     	ds	1
   583  000063                     ??_Set_Bits:
   584                           
   585                           ; 0 bytes @ 0x3
   586  000063                     	ds	1
   587  000064                     Read_Data@read_address:
   588                           	opt stack 0
   589  000064                     ___lwmod@counter:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x4
   593  000064                     	ds	2
   594  000066                     Set_Bits@bitcount:
   595                           	opt stack 0
   596  000066                     Write_Display_Byte@counter:
   597                           	opt stack 0
   598                           
   599                           ; 1 bytes @ 0x6
   600  000066                     	ds	1
   601  000067                     Set_Bits@Bitoutput:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x7
   605  000067                     	ds	1
   606  000068                     Evaluate_Display@evaluate:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x8
   610  000068                     	ds	2
   611  00006A                     ??_Evaluate_Display:
   612                           
   613                           ; 0 bytes @ 0xA
   614  00006A                     	ds	2
   615  00006C                     Evaluate_Display@size:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0xC
   619  00006C                     	ds	1
   620  00006D                     Evaluate_Signs@evaluation_value:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0xD
   624  00006D                     	ds	2
   625  00006F                     Evaluate_Signs@valuecounter:
   626                           	opt stack 0
   627                           
   628                           ; 1 bytes @ 0xF
   629  00006F                     	ds	1
   630  000070                     Set_Display@information:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x10
   634  000070                     	ds	1
   635  000071                     Set_Display@value:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x11
   639  000071                     	ds	2
   640  000073                     Set_Display@type:
   641                           	opt stack 0
   642                           
   643                           ; 1 bytes @ 0x13
   644  000073                     	ds	1
   645  000074                     ??_Load_Data:
   646                           
   647                           ; 0 bytes @ 0x14
   648  000074                     	ds	1
   649  000075                     Load_Data@counter:
   650                           	opt stack 0
   651                           
   652                           ; 1 bytes @ 0x15
   653  000075                     	ds	1
   654  000076                     Del_Data@counter:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x16
   658  000076                     	ds	1
   659  000077                     ??_Check_Buttons:
   660                           
   661                           ; 0 bytes @ 0x17
   662  000077                     	ds	2
   663  000079                     tblptru	equ	0xFF8
   664                           tblptrh	equ	0xFF7
   665                           tblptrl	equ	0xFF6
   666                           tablat	equ	0xFF5
   667                           postinc0	equ	0xFEE
   668                           wreg	equ	0xFE8
   669                           postdec1	equ	0xFE5
   670                           fsr1l	equ	0xFE1
   671                           
   672                           ; 0 bytes @ 0x19
   673                           
   674                           	psect	cstackCOMRAM
   675  000001                     __pcstackCOMRAM:
   676                           	opt stack 0
   677  000001                     ?___awdiv:
   678                           	opt stack 0
   679  000001                     ?i2___lwmod:
   680                           	opt stack 0
   681  000001                     i2Transmit@operation:
   682                           	opt stack 0
   683  000001                     ___awdiv@dividend:
   684                           	opt stack 0
   685  000001                     i2Write_Display_Byte@write_data:
   686                           	opt stack 0
   687  000001                     i2___lwmod@dividend:
   688                           	opt stack 0
   689  000001                     i2Set_Bits@bits:
   690                           	opt stack 0
   691                           
   692                           ; 3 bytes @ 0x0
   693  000001                     	ds	1
   694  000002                     i2Transmit@port:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x1
   698  000002                     	ds	1
   699  000003                     ??i2_Write_Display_Byte:
   700  000003                     i2Transmit@receiver:
   701                           	opt stack 0
   702  000003                     ___awdiv@divisor:
   703                           	opt stack 0
   704  000003                     i2___lwmod@divisor:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x2
   708  000003                     	ds	1
   709  000004                     ??i2_Set_Bits:
   710                           
   711                           ; 0 bytes @ 0x3
   712  000004                     	ds	1
   713  000005                     ___awdiv@counter:
   714                           	opt stack 0
   715  000005                     i2___lwmod@counter:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x4
   719  000005                     	ds	1
   720  000006                     Ignite_Detonators@counter:
   721                           	opt stack 0
   722  000006                     ___awdiv@sign:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x5
   726  000006                     	ds	1
   727  000007                     i2Set_Bits@bitcount:
   728                           	opt stack 0
   729  000007                     i2Write_Display_Byte@counter:
   730                           	opt stack 0
   731  000007                     ___awdiv@quotient:
   732                           	opt stack 0
   733                           
   734                           ; 2 bytes @ 0x6
   735  000007                     	ds	1
   736  000008                     i2Set_Bits@Bitoutput:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x7
   740  000008                     	ds	1
   741  000009                     i2Evaluate_Display@evaluate:
   742                           	opt stack 0
   743                           
   744                           ; 2 bytes @ 0x8
   745  000009                     	ds	2
   746  00000B                     ??i2_Evaluate_Display:
   747                           
   748                           ; 0 bytes @ 0xA
   749  00000B                     	ds	2
   750  00000D                     i2Evaluate_Display@size:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0xC
   754  00000D                     	ds	1
   755  00000E                     i2Evaluate_Signs@evaluation_value:
   756                           	opt stack 0
   757                           
   758                           ; 2 bytes @ 0xD
   759  00000E                     	ds	2
   760  000010                     i2Evaluate_Signs@valuecounter:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0xF
   764  000010                     	ds	1
   765  000011                     i2Set_Display@information:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x10
   769  000011                     	ds	1
   770  000012                     i2Set_Display@value:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x11
   774  000012                     	ds	2
   775  000014                     i2Set_Display@type:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x13
   779  000014                     	ds	1
   780  000015                     ??_Isr:
   781                           
   782                           ; 0 bytes @ 0x14
   783  000015                     	ds	17
   784  000026                     Isr@pixel_index_array:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x25
   788  000026                     	ds	1
   789  000027                     Isr@pixel_index_bit:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x26
   793  000027                     	ds	1
   794  000028                     Isr@search_index:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x27
   798  000028                     	ds	1
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           postinc0	equ	0xFEE
   804                           wreg	equ	0xFE8
   805                           postdec1	equ	0xFE5
   806                           fsr1l	equ	0xFE1
   807                           
   808 ;;
   809 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   810 ;;
   811 ;; *************** function _main *****************
   812 ;; Defined at:
   813 ;;		line 86 in file "main.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;		None               void
   820 ;; Registers used:
   821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1
   827 ;;      Params:         0       0       0
   828 ;;      Locals:         0       0       0
   829 ;;      Temps:          0       0       0
   830 ;;      Totals:         0       0       0
   831 ;;Total ram usage:        0 bytes
   832 ;; Hardware stack levels required when called:   12
   833 ;; This function calls:
   834 ;;		_Check_Buttons
   835 ;;		_Check_Detonators
   836 ;;		_Init
   837 ;;		_Load_Data
   838 ;;		_Set_Display
   839 ;; This function is called by:
   840 ;;		Startup code after reset
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text0
   845  001658                     __ptext0:
   846                           	opt stack 0
   847  001658                     _main:
   848                           	opt stack 19
   849                           
   850                           ;main.c: 87: Init();
   851                           
   852                           ;incstack = 0
   853  001658  EC54  F00B         	call	_Init	;wreg free
   854                           
   855                           ;main.c: 88: Load_Data();
   856  00165C  EC5B  F006         	call	_Load_Data	;wreg free
   857  001660                     l3204:
   858                           
   859                           ;main.c: 90: Check_Buttons();
   860  001660  EC38  F001         	call	_Check_Buttons	;wreg free
   861                           
   862                           ;main.c: 91: if(testflag == 1) {
   863  001664  A63B               	btfss	_testflag/(0+8),_testflag& (0+7),c
   864  001666  D7FC               	goto	l3204
   865                           
   866                           ;main.c: 92: Set_Display('7', 'T',0);
   867  001668  0E54               	movlw	84
   868  00166A  0100               	movlb	0	; () banked
   869  00166C  6F70               	movwf	Set_Display@information& (0+255),b
   870  00166E  0E00               	movlw	0
   871  001670  0100               	movlb	0	; () banked
   872  001672  6F72               	movwf	(Set_Display@value+1)& (0+255),b
   873  001674  0E00               	movlw	0
   874  001676  6F71               	movwf	Set_Display@value& (0+255),b
   875  001678  0E37               	movlw	55
   876  00167A  ECC2  F008         	call	_Set_Display
   877                           
   878                           ;main.c: 93: Check_Detonators();
   879  00167E  EC8B  F00A         	call	_Check_Detonators	;wreg free
   880  001682  D7EE               	goto	l3204
   881  001684                     __end_of_main:
   882                           	opt stack 0
   883                           tblptru	equ	0xFF8
   884                           tblptrh	equ	0xFF7
   885                           tblptrl	equ	0xFF6
   886                           tablat	equ	0xFF5
   887                           postinc0	equ	0xFEE
   888                           wreg	equ	0xFE8
   889                           postdec1	equ	0xFE5
   890                           fsr1l	equ	0xFE1
   891                           
   892 ;; *************** function _Init *****************
   893 ;; Defined at:
   894 ;;		line 3 in file "init.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;		None               void
   901 ;; Registers used:
   902 ;;		wreg, status,2, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMRAM   BANK0   BANK1
   908 ;;      Params:         0       0       0
   909 ;;      Locals:         0       0       0
   910 ;;      Temps:          0       0       0
   911 ;;      Totals:         0       0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    6
   915 ;; This function calls:
   916 ;;		_InitAnsel
   917 ;;		_InitInterrupt
   918 ;;		_InitMiscellaneous
   919 ;;		_InitPort
   920 ;;		_InitTimer
   921 ;;		_InitTransmission
   922 ;;		_InitTris
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text1
   929  0016A8                     __ptext1:
   930                           	opt stack 0
   931  0016A8                     _Init:
   932                           	opt stack 24
   933                           
   934                           ;init.c: 4: InitPort();
   935                           
   936                           ;incstack = 0
   937  0016A8  EC84  F00B         	call	_InitPort	;wreg free
   938                           
   939                           ;init.c: 5: InitTris();
   940  0016AC  EC7B  F00B         	call	_InitTris	;wreg free
   941                           
   942                           ;init.c: 6: InitAnsel();
   943  0016B0  EC71  F00B         	call	_InitAnsel	;wreg free
   944                           
   945                           ;init.c: 7: InitMiscellaneous();
   946  0016B4  EC9A  F00B         	call	_InitMiscellaneous	;wreg free
   947                           
   948                           ;init.c: 8: InitTransmission();
   949  0016B8  EC42  F00B         	call	_InitTransmission	;wreg free
   950                           
   951                           ;init.c: 9: InitTimer();
   952  0016BC  ECFC  F00A         	call	_InitTimer	;wreg free
   953                           
   954                           ;init.c: 10: InitInterrupt();
   955  0016C0  EC94  F00B         	call	_InitInterrupt	;wreg free
   956  0016C4  0012               	return		;funcret
   957  0016C6                     __end_of_Init:
   958                           	opt stack 0
   959                           tblptru	equ	0xFF8
   960                           tblptrh	equ	0xFF7
   961                           tblptrl	equ	0xFF6
   962                           tablat	equ	0xFF5
   963                           postinc0	equ	0xFEE
   964                           wreg	equ	0xFE8
   965                           postdec1	equ	0xFE5
   966                           fsr1l	equ	0xFE1
   967                           
   968 ;; *************** function _InitTris *****************
   969 ;; Defined at:
   970 ;;		line 20 in file "init.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;		None
   975 ;; Return value:  Size  Location     Type
   976 ;;		None               void
   977 ;; Registers used:
   978 ;;		wreg, status,2
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1
   984 ;;      Params:         0       0       0
   985 ;;      Locals:         0       0       0
   986 ;;      Temps:          0       0       0
   987 ;;      Totals:         0       0       0
   988 ;;Total ram usage:        0 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    5
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_Init
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text2
   999  0016F6                     __ptext2:
  1000                           	opt stack 0
  1001  0016F6                     _InitTris:
  1002                           	opt stack 24
  1003                           
  1004                           ;init.c: 21: TRISA = 0b00000000;
  1005                           
  1006                           ;incstack = 0
  1007  0016F6  0E00               	movlw	0
  1008  0016F8  6E92               	movwf	3986,c	;volatile
  1009                           
  1010                           ;init.c: 22: TRISB = 0b00011111;
  1011  0016FA  0E1F               	movlw	31
  1012  0016FC  6E93               	movwf	3987,c	;volatile
  1013                           
  1014                           ;init.c: 23: TRISC = 0b10000010;
  1015  0016FE  0E82               	movlw	130
  1016  001700  6E94               	movwf	3988,c	;volatile
  1017                           
  1018                           ;init.c: 24: TRISE = 0;
  1019  001702  0E00               	movlw	0
  1020  001704  6E96               	movwf	3990,c	;volatile
  1021  001706  0012               	return		;funcret
  1022  001708                     __end_of_InitTris:
  1023                           	opt stack 0
  1024                           tblptru	equ	0xFF8
  1025                           tblptrh	equ	0xFF7
  1026                           tblptrl	equ	0xFF6
  1027                           tablat	equ	0xFF5
  1028                           postinc0	equ	0xFEE
  1029                           wreg	equ	0xFE8
  1030                           postdec1	equ	0xFE5
  1031                           fsr1l	equ	0xFE1
  1032                           
  1033 ;; *************** function _InitTransmission *****************
  1034 ;; Defined at:
  1035 ;;		line 37 in file "init.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;		None               void
  1042 ;; Registers used:
  1043 ;;		wreg, status,2
  1044 ;; Tracked objects:
  1045 ;;		On entry : 0/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK0   BANK1
  1049 ;;      Params:         0       0       0
  1050 ;;      Locals:         0       0       0
  1051 ;;      Temps:          0       0       0
  1052 ;;      Totals:         0       0       0
  1053 ;;Total ram usage:        0 bytes
  1054 ;; Hardware stack levels used:    1
  1055 ;; Hardware stack levels required when called:    5
  1056 ;; This function calls:
  1057 ;;		Nothing
  1058 ;; This function is called by:
  1059 ;;		_Init
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text3
  1064  001684                     __ptext3:
  1065                           	opt stack 0
  1066  001684                     _InitTransmission:
  1067                           	opt stack 24
  1068                           
  1069                           ;init.c: 39: SSP1STAT = 0b01000000;
  1070                           
  1071                           ;incstack = 0
  1072  001684  0E40               	movlw	64
  1073  001686  6EC7               	movwf	4039,c	;volatile
  1074                           
  1075                           ;init.c: 40: SSP1CON1 = 0b00100010;
  1076  001688  0E22               	movlw	34
  1077  00168A  6EC6               	movwf	4038,c	;volatile
  1078                           
  1079                           ;init.c: 42: TXSTA1bits.SYNC = 0;
  1080  00168C  98AC               	bcf	4012,4,c	;volatile
  1081                           
  1082                           ;init.c: 43: TXSTA1bits.BRGH = 1;
  1083  00168E  84AC               	bsf	4012,2,c	;volatile
  1084                           
  1085                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
  1086  001690  96B8               	bcf	4024,3,c	;volatile
  1087                           
  1088                           ;init.c: 45: SPBRG1 = 25;
  1089  001692  0E19               	movlw	25
  1090  001694  6EAF               	movwf	4015,c	;volatile
  1091                           
  1092                           ;init.c: 46: TRISCbits.RC6 = 1;
  1093  001696  8C94               	bsf	3988,6,c	;volatile
  1094                           
  1095                           ;init.c: 47: TRISCbits.RC7 = 1;
  1096  001698  8E94               	bsf	3988,7,c	;volatile
  1097                           
  1098                           ;init.c: 48: RCSTA1bits.SPEN = 1;
  1099  00169A  8EAB               	bsf	4011,7,c	;volatile
  1100                           
  1101                           ;init.c: 49: TXSTA1bits.TX9 = 1;
  1102  00169C  8CAC               	bsf	4012,6,c	;volatile
  1103                           
  1104                           ;init.c: 50: TXSTA1bits.TXEN = 1;
  1105  00169E  8AAC               	bsf	4012,5,c	;volatile
  1106                           
  1107                           ;init.c: 51: RCSTA1bits.RC9 = 1;
  1108  0016A0  8CAB               	bsf	4011,6,c	;volatile
  1109                           
  1110                           ;init.c: 52: RCSTA1bits.CREN = 1;
  1111  0016A2  88AB               	bsf	4011,4,c	;volatile
  1112                           
  1113                           ;init.c: 53: TRISCbits.RC6 = 0;
  1114  0016A4  9C94               	bcf	3988,6,c	;volatile
  1115  0016A6  0012               	return		;funcret
  1116  0016A8                     __end_of_InitTransmission:
  1117                           	opt stack 0
  1118                           tblptru	equ	0xFF8
  1119                           tblptrh	equ	0xFF7
  1120                           tblptrl	equ	0xFF6
  1121                           tablat	equ	0xFF5
  1122                           postinc0	equ	0xFEE
  1123                           wreg	equ	0xFE8
  1124                           postdec1	equ	0xFE5
  1125                           fsr1l	equ	0xFE1
  1126                           
  1127 ;; *************** function _InitTimer *****************
  1128 ;; Defined at:
  1129 ;;		line 56 in file "init.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;		None               void
  1136 ;; Registers used:
  1137 ;;		wreg, status,2
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1
  1143 ;;      Params:         0       0       0
  1144 ;;      Locals:         0       0       0
  1145 ;;      Temps:          0       0       0
  1146 ;;      Totals:         0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    5
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_Init
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text4
  1158  0015F8                     __ptext4:
  1159                           	opt stack 0
  1160  0015F8                     _InitTimer:
  1161                           	opt stack 24
  1162                           
  1163                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
  1164                           
  1165                           ;incstack = 0
  1166  0015F8  0E3F               	movlw	-193
  1167  0015FA  16CD               	andwf	4045,f,c	;volatile
  1168                           
  1169                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
  1170  0015FC  0E30               	movlw	48
  1171  0015FE  12CD               	iorwf	4045,f,c	;volatile
  1172                           
  1173                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
  1174  001600  94CD               	bcf	4045,2,c	;volatile
  1175                           
  1176                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
  1177  001602  0E3F               	movlw	-193
  1178  001604  16B1               	andwf	4017,f,c	;volatile
  1179                           
  1180                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
  1181  001606  0E30               	movlw	48
  1182  001608  12B1               	iorwf	4017,f,c	;volatile
  1183                           
  1184                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
  1185  00160A  94B1               	bcf	4017,2,c	;volatile
  1186                           
  1187                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
  1188  00160C  50BD               	movf	4029,w,c	;volatile
  1189  00160E  0BF0               	andlw	-16
  1190  001610  090A               	iorlw	10
  1191  001612  6EBD               	movwf	4029,c	;volatile
  1192                           
  1193                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
  1194  001614  010F               	movlb	15	; () banked
  1195  001616  5149               	movf	73,w,b	;volatile
  1196  001618  0BFC               	andlw	-4
  1197  00161A  0901               	iorlw	1
  1198  00161C  6F49               	movwf	73,b	;volatile
  1199                           
  1200                           ;init.c: 68: CCPR1L = 72;
  1201  00161E  0E48               	movlw	72
  1202  001620  6EBE               	movwf	4030,c	;volatile
  1203                           
  1204                           ;init.c: 69: CCPR1H = 232;
  1205  001622  0EE8               	movlw	232
  1206  001624  6EBF               	movwf	4031,c	;volatile
  1207                           
  1208                           ; BSR set to: 15
  1209  001626  0012               	return		;funcret
  1210  001628                     __end_of_InitTimer:
  1211                           	opt stack 0
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           postinc0	equ	0xFEE
  1217                           wreg	equ	0xFE8
  1218                           postdec1	equ	0xFE5
  1219                           fsr1l	equ	0xFE1
  1220                           
  1221 ;; *************** function _InitPort *****************
  1222 ;; Defined at:
  1223 ;;		line 13 in file "init.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;		None
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;		None
  1228 ;; Return value:  Size  Location     Type
  1229 ;;		None               void
  1230 ;; Registers used:
  1231 ;;		wreg, status,2
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMRAM   BANK0   BANK1
  1237 ;;      Params:         0       0       0
  1238 ;;      Locals:         0       0       0
  1239 ;;      Temps:          0       0       0
  1240 ;;      Totals:         0       0       0
  1241 ;;Total ram usage:        0 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; Hardware stack levels required when called:    5
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_Init
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text5
  1252  001708                     __ptext5:
  1253                           	opt stack 0
  1254  001708                     _InitPort:
  1255                           	opt stack 24
  1256                           
  1257                           ;init.c: 14: PORTA = 0b00000000;
  1258                           
  1259                           ; BSR set to: 15
  1260                           ;incstack = 0
  1261  001708  0E00               	movlw	0
  1262  00170A  6E80               	movwf	3968,c	;volatile
  1263                           
  1264                           ;init.c: 15: PORTB = 0b00000000;
  1265  00170C  0E00               	movlw	0
  1266  00170E  6E81               	movwf	3969,c	;volatile
  1267                           
  1268                           ;init.c: 16: PORTC = 0b00000001;
  1269  001710  0E01               	movlw	1
  1270  001712  6E82               	movwf	3970,c	;volatile
  1271                           
  1272                           ;init.c: 17: PORTE = 0;
  1273  001714  0E00               	movlw	0
  1274  001716  6E84               	movwf	3972,c	;volatile
  1275  001718  0012               	return		;funcret
  1276  00171A                     __end_of_InitPort:
  1277                           	opt stack 0
  1278                           tblptru	equ	0xFF8
  1279                           tblptrh	equ	0xFF7
  1280                           tblptrl	equ	0xFF6
  1281                           tablat	equ	0xFF5
  1282                           postinc0	equ	0xFEE
  1283                           wreg	equ	0xFE8
  1284                           postdec1	equ	0xFE5
  1285                           fsr1l	equ	0xFE1
  1286                           
  1287 ;; *************** function _InitMiscellaneous *****************
  1288 ;; Defined at:
  1289 ;;		line 33 in file "init.c"
  1290 ;; Parameters:    Size  Location     Type
  1291 ;;		None
  1292 ;; Auto vars:     Size  Location     Type
  1293 ;;		None
  1294 ;; Return value:  Size  Location     Type
  1295 ;;		None               void
  1296 ;; Registers used:
  1297 ;;		wreg, status,2
  1298 ;; Tracked objects:
  1299 ;;		On entry : 0/0
  1300 ;;		On exit  : 0/0
  1301 ;;		Unchanged: 0/0
  1302 ;; Data sizes:     COMRAM   BANK0   BANK1
  1303 ;;      Params:         0       0       0
  1304 ;;      Locals:         0       0       0
  1305 ;;      Temps:          0       0       0
  1306 ;;      Totals:         0       0       0
  1307 ;;Total ram usage:        0 bytes
  1308 ;; Hardware stack levels used:    1
  1309 ;; Hardware stack levels required when called:    5
  1310 ;; This function calls:
  1311 ;;		Nothing
  1312 ;; This function is called by:
  1313 ;;		_Init
  1314 ;; This function uses a non-reentrant model
  1315 ;;
  1316                           
  1317                           	psect	text6
  1318  001734                     __ptext6:
  1319                           	opt stack 0
  1320  001734                     _InitMiscellaneous:
  1321                           	opt stack 24
  1322                           
  1323                           ;init.c: 34: OSCCON = 0b01010011;
  1324                           
  1325                           ;incstack = 0
  1326  001734  0E53               	movlw	83
  1327  001736  6ED3               	movwf	4051,c	;volatile
  1328  001738  0012               	return		;funcret
  1329  00173A                     __end_of_InitMiscellaneous:
  1330                           	opt stack 0
  1331                           tblptru	equ	0xFF8
  1332                           tblptrh	equ	0xFF7
  1333                           tblptrl	equ	0xFF6
  1334                           tablat	equ	0xFF5
  1335                           postinc0	equ	0xFEE
  1336                           wreg	equ	0xFE8
  1337                           postdec1	equ	0xFE5
  1338                           fsr1l	equ	0xFE1
  1339                           
  1340 ;; *************** function _InitInterrupt *****************
  1341 ;; Defined at:
  1342 ;;		line 72 in file "init.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;		None               void
  1349 ;; Registers used:
  1350 ;;		None
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMRAM   BANK0   BANK1
  1356 ;;      Params:         0       0       0
  1357 ;;      Locals:         0       0       0
  1358 ;;      Temps:          0       0       0
  1359 ;;      Totals:         0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    5
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_Init
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text7
  1371  001728                     __ptext7:
  1372                           	opt stack 0
  1373  001728                     _InitInterrupt:
  1374                           	opt stack 24
  1375                           
  1376                           ;init.c: 73: INTCONbits.GIE = 1;
  1377                           
  1378                           ;incstack = 0
  1379  001728  8EF2               	bsf	intcon,7,c	;volatile
  1380                           
  1381                           ;init.c: 74: INTCONbits.PEIE = 1;
  1382  00172A  8CF2               	bsf	intcon,6,c	;volatile
  1383                           
  1384                           ;init.c: 75: PIE1bits.RCIE = 1;
  1385  00172C  8A9D               	bsf	3997,5,c	;volatile
  1386                           
  1387                           ;init.c: 76: PIE1bits.CCP1IE = 1;
  1388  00172E  849D               	bsf	3997,2,c	;volatile
  1389                           
  1390                           ;init.c: 77: PIE1bits.TMR1IE = 1;
  1391  001730  809D               	bsf	3997,0,c	;volatile
  1392  001732  0012               	return		;funcret
  1393  001734                     __end_of_InitInterrupt:
  1394                           	opt stack 0
  1395                           tblptru	equ	0xFF8
  1396                           tblptrh	equ	0xFF7
  1397                           tblptrl	equ	0xFF6
  1398                           tablat	equ	0xFF5
  1399                           intcon	equ	0xFF2
  1400                           postinc0	equ	0xFEE
  1401                           wreg	equ	0xFE8
  1402                           postdec1	equ	0xFE5
  1403                           fsr1l	equ	0xFE1
  1404                           
  1405 ;; *************** function _InitAnsel *****************
  1406 ;; Defined at:
  1407 ;;		line 27 in file "init.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;		None
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;		None
  1412 ;; Return value:  Size  Location     Type
  1413 ;;		None               void
  1414 ;; Registers used:
  1415 ;;		wreg, status,2
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMRAM   BANK0   BANK1
  1421 ;;      Params:         0       0       0
  1422 ;;      Locals:         0       0       0
  1423 ;;      Temps:          0       0       0
  1424 ;;      Totals:         0       0       0
  1425 ;;Total ram usage:        0 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    5
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_Init
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text8
  1436  0016E2                     __ptext8:
  1437                           	opt stack 0
  1438  0016E2                     _InitAnsel:
  1439                           	opt stack 24
  1440                           
  1441                           ;init.c: 28: ANSELA = 0;
  1442                           
  1443                           ;incstack = 0
  1444  0016E2  0E00               	movlw	0
  1445  0016E4  010F               	movlb	15	; () banked
  1446  0016E6  6F38               	movwf	56,b	;volatile
  1447                           
  1448                           ;init.c: 29: ANSELB = 0;
  1449  0016E8  0E00               	movlw	0
  1450  0016EA  010F               	movlb	15	; () banked
  1451  0016EC  6F39               	movwf	57,b	;volatile
  1452                           
  1453                           ;init.c: 30: ANSELC = 0;
  1454  0016EE  0E00               	movlw	0
  1455  0016F0  010F               	movlb	15	; () banked
  1456  0016F2  6F3A               	movwf	58,b	;volatile
  1457                           
  1458                           ; BSR set to: 15
  1459  0016F4  0012               	return		;funcret
  1460  0016F6                     __end_of_InitAnsel:
  1461                           	opt stack 0
  1462                           tblptru	equ	0xFF8
  1463                           tblptrh	equ	0xFF7
  1464                           tblptrl	equ	0xFF6
  1465                           tablat	equ	0xFF5
  1466                           intcon	equ	0xFF2
  1467                           postinc0	equ	0xFEE
  1468                           wreg	equ	0xFE8
  1469                           postdec1	equ	0xFE5
  1470                           fsr1l	equ	0xFE1
  1471                           
  1472 ;; *************** function _Check_Detonators *****************
  1473 ;; Defined at:
  1474 ;;		line 25 in file "ignition.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;		None               void
  1481 ;; Registers used:
  1482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1
  1488 ;;      Params:         0       0       0
  1489 ;;      Locals:         0       0       0
  1490 ;;      Temps:          0       0       0
  1491 ;;      Totals:         0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    6
  1495 ;; This function calls:
  1496 ;;		_Transmit
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text9
  1503  001516                     __ptext9:
  1504                           	opt stack 0
  1505  001516                     _Check_Detonators:
  1506                           	opt stack 24
  1507                           
  1508                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  1509                           
  1510                           ; BSR set to: 15
  1511                           ;incstack = 0
  1512  001516  0E54               	movlw	84
  1513  001518  0100               	movlb	0	; () banked
  1514  00151A  6F60               	movwf	Transmit@operation& (0+255),b
  1515  00151C  5031               	movf	_check_counter,w,c
  1516  00151E  0D06               	mullw	6
  1517  001520  0E01               	movlw	1
  1518  001522  26F3               	addwf	prodl,f,c
  1519  001524  0E00               	movlw	0
  1520  001526  22F4               	addwfc	prodh,f,c
  1521  001528  0E00               	movlw	low _pin
  1522  00152A  24F3               	addwf	prodl,w,c
  1523  00152C  6ED9               	movwf	fsr2l,c
  1524  00152E  0E01               	movlw	high _pin
  1525  001530  20F4               	addwfc	prodh,w,c
  1526  001532  6EDA               	movwf	fsr2h,c
  1527  001534  50DF               	movf	indf2,w,c
  1528  001536  0100               	movlb	0	; () banked
  1529  001538  6F61               	movwf	Transmit@port& (0+255),b
  1530  00153A  5031               	movf	_check_counter,w,c
  1531  00153C  0D06               	mullw	6
  1532  00153E  0E00               	movlw	low _pin
  1533  001540  24F3               	addwf	prodl,w,c
  1534  001542  6ED9               	movwf	fsr2l,c
  1535  001544  0E01               	movlw	high _pin
  1536  001546  20F4               	addwfc	prodh,w,c
  1537  001548  6EDA               	movwf	fsr2h,c
  1538  00154A  50DF               	movf	indf2,w,c
  1539  00154C  ECA9  F00A         	call	_Transmit
  1540  001550  0012               	return		;funcret
  1541  001552                     __end_of_Check_Detonators:
  1542                           	opt stack 0
  1543                           tblptru	equ	0xFF8
  1544                           tblptrh	equ	0xFF7
  1545                           tblptrl	equ	0xFF6
  1546                           tablat	equ	0xFF5
  1547                           prodh	equ	0xFF4
  1548                           prodl	equ	0xFF3
  1549                           intcon	equ	0xFF2
  1550                           postinc0	equ	0xFEE
  1551                           wreg	equ	0xFE8
  1552                           postdec1	equ	0xFE5
  1553                           fsr1l	equ	0xFE1
  1554                           indf2	equ	0xFDF
  1555                           fsr2h	equ	0xFDA
  1556                           fsr2l	equ	0xFD9
  1557                           
  1558 ;; *************** function _Transmit *****************
  1559 ;; Defined at:
  1560 ;;		line 15 in file "communication.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  receiver        1    wreg     unsigned char 
  1563 ;;  operation       1    0[BANK0 ] unsigned char 
  1564 ;;  port            1    1[BANK0 ] unsigned char 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  receiver        1    2[BANK0 ] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;		None               void
  1569 ;; Registers used:
  1570 ;;		wreg, status,2
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1
  1576 ;;      Params:         0       2       0
  1577 ;;      Locals:         0       1       0
  1578 ;;      Temps:          0       0       0
  1579 ;;      Totals:         0       3       0
  1580 ;;Total ram usage:        3 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    5
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_Check_Detonators
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text10
  1591  001552                     __ptext10:
  1592                           	opt stack 0
  1593  001552                     _Transmit:
  1594                           	opt stack 24
  1595                           
  1596                           ;incstack = 0
  1597                           ;Transmit@receiver stored from wreg
  1598  001552  0100               	movlb	0	; () banked
  1599  001554  6F62               	movwf	Transmit@receiver& (0+255),b
  1600                           
  1601                           ;communication.c: 17: PORTBbits.RB5 = 1;
  1602  001556  8A81               	bsf	3969,5,c	;volatile
  1603                           
  1604                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  1605  001558  98AB               	bcf	4011,4,c	;volatile
  1606                           
  1607                           ;communication.c: 20: __nop();
  1608  00155A  F000               	nop	
  1609  00155C                     l487:
  1610  00155C  A89E               	btfss	3998,4,c	;volatile
  1611  00155E  D7FE               	goto	l487
  1612                           
  1613                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  1614  001560  80AC               	bsf	4012,0,c	;volatile
  1615                           
  1616                           ;communication.c: 23: TXREG1 = receiver;
  1617  001562  C062  FFAD         	movff	Transmit@receiver,4013	;volatile
  1618  001566                     l490:
  1619  001566  A89E               	btfss	3998,4,c	;volatile
  1620  001568  D7FE               	goto	l490
  1621                           
  1622                           ;communication.c: 25: TXREG1 = 0xAA;
  1623  00156A  0EAA               	movlw	170
  1624  00156C  6EAD               	movwf	4013,c	;volatile
  1625  00156E                     l493:
  1626  00156E  A89E               	btfss	3998,4,c	;volatile
  1627  001570  D7FE               	goto	l493
  1628                           
  1629                           ;communication.c: 27: TXREG1 = operation;
  1630  001572  C060  FFAD         	movff	Transmit@operation,4013	;volatile
  1631  001576                     l496:
  1632  001576  A89E               	btfss	3998,4,c	;volatile
  1633  001578  D7FE               	goto	l496
  1634                           
  1635                           ;communication.c: 29: TXREG1 = port;
  1636  00157A  C061  FFAD         	movff	Transmit@port,4013	;volatile
  1637  00157E                     l499:
  1638  00157E  A2AC               	btfss	4012,1,c	;volatile
  1639  001580  D7FE               	goto	l499
  1640                           
  1641                           ;communication.c: 31: PORTBbits.RB5 = 0;
  1642  001582  9A81               	bcf	3969,5,c	;volatile
  1643                           
  1644                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  1645  001584  88AB               	bsf	4011,4,c	;volatile
  1646                           
  1647                           ;communication.c: 33: __nop();
  1648  001586  F000               	nop	
  1649  001588  0012               	return		;funcret
  1650  00158A                     __end_of_Transmit:
  1651                           	opt stack 0
  1652                           tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           prodh	equ	0xFF4
  1657                           prodl	equ	0xFF3
  1658                           intcon	equ	0xFF2
  1659                           postinc0	equ	0xFEE
  1660                           wreg	equ	0xFE8
  1661                           postdec1	equ	0xFE5
  1662                           fsr1l	equ	0xFE1
  1663                           indf2	equ	0xFDF
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           
  1667 ;; *************** function _Check_Buttons *****************
  1668 ;; Defined at:
  1669 ;;		line 26 in file "buttonchanges.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;		None
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;		None
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMRAM   BANK0   BANK1
  1683 ;;      Params:         0       0       0
  1684 ;;      Locals:         0       0       0
  1685 ;;      Temps:          0       2       0
  1686 ;;      Totals:         0       2       0
  1687 ;;Total ram usage:        2 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:   11
  1690 ;; This function calls:
  1691 ;;		_Del_Data
  1692 ;;		_Delay_Routine
  1693 ;;		_Read_Data
  1694 ;;		_Save_Data
  1695 ;;		_Set_Display
  1696 ;;		_Start_Timer
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text11
  1703  000270                     __ptext11:
  1704                           	opt stack 0
  1705  000270                     _Check_Buttons:
  1706                           	opt stack 19
  1707                           
  1708                           ;buttonchanges.c: 27: if(PORTCbits.RC1 == 1) {
  1709                           
  1710                           ;incstack = 0
  1711  000270  A282               	btfss	3970,1,c	;volatile
  1712  000272  D00A               	goto	l92
  1713                           
  1714                           ;buttonchanges.c: 28: Delay_Routine(3);
  1715  000274  0E03               	movlw	3
  1716  000276  EC14  F00B         	call	_Delay_Routine
  1717                           
  1718                           ;buttonchanges.c: 29: if(PORTCbits.RC1 == 1) {
  1719  00027A  A282               	btfss	3970,1,c	;volatile
  1720  00027C  0012               	return	
  1721                           
  1722                           ;buttonchanges.c: 30: ignite_ready = 1;
  1723  00027E  803B               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1724                           
  1725                           ;buttonchanges.c: 31: Start_Timer();
  1726  000280  EC63  F00B         	call	_Start_Timer	;wreg free
  1727                           
  1728                           ;buttonchanges.c: 32: __nop();
  1729  000284  F000               	nop	
  1730                           
  1731                           ;buttonchanges.c: 36: }
  1732                           ;buttonchanges.c: 37: } else if(PORTBbits.RB2 == 1) {
  1733                           
  1734                           ;buttonchanges.c: 33: return;
  1735  000286  0012               	return	
  1736  000288                     l92:
  1737  000288  A481               	btfss	3969,2,c	;volatile
  1738  00028A  D060               	goto	l96
  1739                           
  1740                           ;buttonchanges.c: 38: Delay_Routine(3);
  1741  00028C  0E03               	movlw	3
  1742  00028E  EC14  F00B         	call	_Delay_Routine
  1743                           
  1744                           ;buttonchanges.c: 39: if(PORTBbits.RB2 == 1) {
  1745  000292  A481               	btfss	3969,2,c	;volatile
  1746  000294  0012               	return	
  1747                           
  1748                           ;buttonchanges.c: 40: if(PORTBbits.RB3 == 1) {
  1749  000296  A681               	btfss	3969,3,c	;volatile
  1750  000298  D008               	goto	l3064
  1751                           
  1752                           ;buttonchanges.c: 41: Delay_Routine(3);
  1753  00029A  0E03               	movlw	3
  1754  00029C  EC14  F00B         	call	_Delay_Routine
  1755                           
  1756                           ;buttonchanges.c: 42: if(PORTBbits.RB3 == 1) {
  1757  0002A0  A681               	btfss	3969,3,c	;volatile
  1758  0002A2  D003               	goto	l3064
  1759                           
  1760                           ;buttonchanges.c: 43: Del_Data();
  1761  0002A4  EC27  F00A         	call	_Del_Data	;wreg free
  1762                           
  1763                           ;buttonchanges.c: 44: return;
  1764  0002A8  0012               	return	
  1765  0002AA                     l3064:
  1766                           
  1767                           ;buttonchanges.c: 46: }
  1768                           ;buttonchanges.c: 47: }
  1769                           ;buttonchanges.c: 48: pin[pin_selected].time++;
  1770  0002AA  0100               	movlb	0	; () banked
  1771  0002AC  5179               	movf	_pin_selected& (0+255),w,b
  1772  0002AE  0D06               	mullw	6
  1773  0002B0  0E04               	movlw	4
  1774  0002B2  26F3               	addwf	prodl,f,c
  1775  0002B4  0E00               	movlw	0
  1776  0002B6  22F4               	addwfc	prodh,f,c
  1777  0002B8  0E00               	movlw	low _pin
  1778  0002BA  24F3               	addwf	prodl,w,c
  1779  0002BC  6ED9               	movwf	fsr2l,c
  1780  0002BE  0E01               	movlw	high _pin
  1781  0002C0  20F4               	addwfc	prodh,w,c
  1782  0002C2  6EDA               	movwf	fsr2h,c
  1783  0002C4  2ADE               	incf	postinc2,f,c
  1784  0002C6  0E00               	movlw	0
  1785  0002C8  22DD               	addwfc	postdec2,f,c
  1786                           
  1787                           ;buttonchanges.c: 49: if(pin[pin_selected].time > 999) {
  1788  0002CA  0100               	movlb	0	; () banked
  1789  0002CC  5179               	movf	_pin_selected& (0+255),w,b
  1790  0002CE  0D06               	mullw	6
  1791  0002D0  0E04               	movlw	4
  1792  0002D2  26F3               	addwf	prodl,f,c
  1793  0002D4  0E00               	movlw	0
  1794  0002D6  22F4               	addwfc	prodh,f,c
  1795  0002D8  0E00               	movlw	low _pin
  1796  0002DA  24F3               	addwf	prodl,w,c
  1797  0002DC  6ED9               	movwf	fsr2l,c
  1798  0002DE  0E01               	movlw	high _pin
  1799  0002E0  20F4               	addwfc	prodh,w,c
  1800  0002E2  6EDA               	movwf	fsr2h,c
  1801  0002E4  0E01               	movlw	1
  1802  0002E6  BEDB               	btfsc	plusw2,7,c
  1803  0002E8  D017               	goto	l3068
  1804  0002EA  0EE8               	movlw	232
  1805  0002EC  5CDE               	subwf	postinc2,w,c
  1806  0002EE  0E03               	movlw	3
  1807  0002F0  58DE               	subwfb	postinc2,w,c
  1808  0002F2  A0D8               	btfss	status,0,c
  1809  0002F4  D011               	goto	l3068
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;buttonchanges.c: 50: pin[pin_selected].time = 0;
  1813  0002F6  0100               	movlb	0	; () banked
  1814  0002F8  5179               	movf	_pin_selected& (0+255),w,b
  1815  0002FA  0D06               	mullw	6
  1816  0002FC  0E04               	movlw	4
  1817  0002FE  26F3               	addwf	prodl,f,c
  1818  000300  0E00               	movlw	0
  1819  000302  22F4               	addwfc	prodh,f,c
  1820  000304  0E00               	movlw	low _pin
  1821  000306  24F3               	addwf	prodl,w,c
  1822  000308  6ED9               	movwf	fsr2l,c
  1823  00030A  0E01               	movlw	high _pin
  1824  00030C  20F4               	addwfc	prodh,w,c
  1825  00030E  6EDA               	movwf	fsr2h,c
  1826  000310  0E00               	movlw	0
  1827  000312  6EDE               	movwf	postinc2,c
  1828  000314  0E00               	movlw	0
  1829  000316  6EDD               	movwf	postdec2,c
  1830  000318                     l3068:
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;buttonchanges.c: 51: }
  1834                           ;buttonchanges.c: 52: __nop();
  1835  000318  F000               	nop	
  1836                           
  1837                           ;buttonchanges.c: 53: Set_Display('7', '-', pin[pin_selected].time);
  1838  00031A  0E2D               	movlw	45
  1839  00031C  0100               	movlb	0	; () banked
  1840  00031E  6F70               	movwf	Set_Display@information& (0+255),b
  1841  000320  0100               	movlb	0	; () banked
  1842  000322  5179               	movf	_pin_selected& (0+255),w,b
  1843  000324  0D06               	mullw	6
  1844  000326  0E04               	movlw	4
  1845  000328  26F3               	addwf	prodl,f,c
  1846  00032A  0E00               	movlw	0
  1847  00032C  22F4               	addwfc	prodh,f,c
  1848  00032E  0E00               	movlw	low _pin
  1849  000330  24F3               	addwf	prodl,w,c
  1850  000332  6ED9               	movwf	fsr2l,c
  1851  000334  0E01               	movlw	high _pin
  1852  000336  20F4               	addwfc	prodh,w,c
  1853  000338  6EDA               	movwf	fsr2h,c
  1854  00033A  CFDE F071          	movff	postinc2,Set_Display@value
  1855  00033E  CFDD F072          	movff	postdec2,Set_Display@value+1
  1856  000342  0E37               	movlw	55
  1857  000344  ECC2  F008         	call	_Set_Display
  1858                           
  1859                           ;buttonchanges.c: 54: __nop();
  1860  000348  F000               	nop	
  1861                           
  1862                           ;buttonchanges.c: 55: }
  1863                           ;buttonchanges.c: 56: } else if(PORTBbits.RB3 == 1) {
  1864  00034A  0012               	return	
  1865  00034C                     l96:
  1866  00034C  A681               	btfss	3969,3,c	;volatile
  1867  00034E  D05A               	goto	l102
  1868                           
  1869                           ;buttonchanges.c: 57: Delay_Routine(3);
  1870  000350  0E03               	movlw	3
  1871  000352  EC14  F00B         	call	_Delay_Routine
  1872                           
  1873                           ;buttonchanges.c: 58: if(PORTBbits.RB3 == 1) {
  1874  000356  A681               	btfss	3969,3,c	;volatile
  1875  000358  0012               	return	
  1876                           
  1877                           ;buttonchanges.c: 59: if(PORTBbits.RB2 == 1) {
  1878  00035A  A481               	btfss	3969,2,c	;volatile
  1879  00035C  D008               	goto	l3088
  1880                           
  1881                           ;buttonchanges.c: 60: Delay_Routine(3);
  1882  00035E  0E03               	movlw	3
  1883  000360  EC14  F00B         	call	_Delay_Routine
  1884                           
  1885                           ;buttonchanges.c: 61: if(PORTBbits.RB2 == 1) {
  1886  000364  A481               	btfss	3969,2,c	;volatile
  1887  000366  D003               	goto	l3088
  1888                           
  1889                           ;buttonchanges.c: 62: Del_Data();
  1890  000368  EC27  F00A         	call	_Del_Data	;wreg free
  1891                           
  1892                           ;buttonchanges.c: 63: return;
  1893  00036C  0012               	return	
  1894  00036E                     l3088:
  1895                           
  1896                           ;buttonchanges.c: 65: }
  1897                           ;buttonchanges.c: 66: }
  1898                           ;buttonchanges.c: 67: pin[pin_selected].time--;
  1899  00036E  0100               	movlb	0	; () banked
  1900  000370  5179               	movf	_pin_selected& (0+255),w,b
  1901  000372  0D06               	mullw	6
  1902  000374  0E04               	movlw	4
  1903  000376  26F3               	addwf	prodl,f,c
  1904  000378  0E00               	movlw	0
  1905  00037A  22F4               	addwfc	prodh,f,c
  1906  00037C  0E00               	movlw	low _pin
  1907  00037E  24F3               	addwf	prodl,w,c
  1908  000380  6ED9               	movwf	fsr2l,c
  1909  000382  0E01               	movlw	high _pin
  1910  000384  20F4               	addwfc	prodh,w,c
  1911  000386  6EDA               	movwf	fsr2h,c
  1912  000388  06DE               	decf	postinc2,f,c
  1913  00038A  0E00               	movlw	0
  1914  00038C  5ADD               	subwfb	postdec2,f,c
  1915                           
  1916                           ;buttonchanges.c: 68: if(pin[pin_selected].time < 0) {
  1917  00038E  0100               	movlb	0	; () banked
  1918  000390  5179               	movf	_pin_selected& (0+255),w,b
  1919  000392  0D06               	mullw	6
  1920  000394  0E04               	movlw	4
  1921  000396  26F3               	addwf	prodl,f,c
  1922  000398  0E00               	movlw	0
  1923  00039A  22F4               	addwfc	prodh,f,c
  1924  00039C  0E00               	movlw	low _pin
  1925  00039E  24F3               	addwf	prodl,w,c
  1926  0003A0  6ED9               	movwf	fsr2l,c
  1927  0003A2  0E01               	movlw	high _pin
  1928  0003A4  20F4               	addwfc	prodh,w,c
  1929  0003A6  6EDA               	movwf	fsr2h,c
  1930  0003A8  0E01               	movlw	1
  1931  0003AA  AEDB               	btfss	plusw2,7,c
  1932  0003AC  D011               	goto	l3092
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;buttonchanges.c: 69: pin[pin_selected].time = 999;
  1936  0003AE  0100               	movlb	0	; () banked
  1937  0003B0  5179               	movf	_pin_selected& (0+255),w,b
  1938  0003B2  0D06               	mullw	6
  1939  0003B4  0E04               	movlw	4
  1940  0003B6  26F3               	addwf	prodl,f,c
  1941  0003B8  0E00               	movlw	0
  1942  0003BA  22F4               	addwfc	prodh,f,c
  1943  0003BC  0E00               	movlw	low _pin
  1944  0003BE  24F3               	addwf	prodl,w,c
  1945  0003C0  6ED9               	movwf	fsr2l,c
  1946  0003C2  0E01               	movlw	high _pin
  1947  0003C4  20F4               	addwfc	prodh,w,c
  1948  0003C6  6EDA               	movwf	fsr2h,c
  1949  0003C8  0EE7               	movlw	231
  1950  0003CA  6EDE               	movwf	postinc2,c
  1951  0003CC  0E03               	movlw	3
  1952  0003CE  6EDD               	movwf	postdec2,c
  1953  0003D0                     l3092:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;buttonchanges.c: 70: }
  1957                           ;buttonchanges.c: 71: __nop();
  1958  0003D0  F000               	nop	
  1959                           
  1960                           ;buttonchanges.c: 72: Set_Display('7', '-', pin[pin_selected].time);
  1961  0003D2  0E2D               	movlw	45
  1962  0003D4  0100               	movlb	0	; () banked
  1963  0003D6  6F70               	movwf	Set_Display@information& (0+255),b
  1964  0003D8  0100               	movlb	0	; () banked
  1965  0003DA  5179               	movf	_pin_selected& (0+255),w,b
  1966  0003DC  0D06               	mullw	6
  1967  0003DE  0E04               	movlw	4
  1968  0003E0  26F3               	addwf	prodl,f,c
  1969  0003E2  0E00               	movlw	0
  1970  0003E4  22F4               	addwfc	prodh,f,c
  1971  0003E6  0E00               	movlw	low _pin
  1972  0003E8  24F3               	addwf	prodl,w,c
  1973  0003EA  6ED9               	movwf	fsr2l,c
  1974  0003EC  0E01               	movlw	high _pin
  1975  0003EE  20F4               	addwfc	prodh,w,c
  1976  0003F0  6EDA               	movwf	fsr2h,c
  1977  0003F2  CFDE F071          	movff	postinc2,Set_Display@value
  1978  0003F6  CFDD F072          	movff	postdec2,Set_Display@value+1
  1979  0003FA  0E37               	movlw	55
  1980  0003FC  ECC2  F008         	call	_Set_Display
  1981                           
  1982                           ;buttonchanges.c: 73: __nop();
  1983  000400  F000               	nop	
  1984                           
  1985                           ;buttonchanges.c: 74: }
  1986                           ;buttonchanges.c: 75: } else if(PORTBbits.RB4 == 1) {
  1987  000402  0012               	return	
  1988  000404                     l102:
  1989  000404  A881               	btfss	3969,4,c	;volatile
  1990  000406  D057               	goto	l108
  1991                           
  1992                           ;buttonchanges.c: 76: Delay_Routine(3);
  1993  000408  0E03               	movlw	3
  1994  00040A  EC14  F00B         	call	_Delay_Routine
  1995                           
  1996                           ;buttonchanges.c: 77: if(PORTBbits.RB4 == 1) {
  1997  00040E  A881               	btfss	3969,4,c	;volatile
  1998  000410  0012               	return	
  1999                           
  2000                           ;buttonchanges.c: 78: pin[pin_selected].time += 10;
  2001  000412  0100               	movlb	0	; () banked
  2002  000414  5179               	movf	_pin_selected& (0+255),w,b
  2003  000416  0D06               	mullw	6
  2004  000418  0E04               	movlw	4
  2005  00041A  26F3               	addwf	prodl,f,c
  2006  00041C  0E00               	movlw	0
  2007  00041E  22F4               	addwfc	prodh,f,c
  2008  000420  0E00               	movlw	low _pin
  2009  000422  24F3               	addwf	prodl,w,c
  2010  000424  6ED9               	movwf	fsr2l,c
  2011  000426  0E01               	movlw	high _pin
  2012  000428  20F4               	addwfc	prodh,w,c
  2013  00042A  6EDA               	movwf	fsr2h,c
  2014  00042C  0E0A               	movlw	10
  2015  00042E  26DE               	addwf	postinc2,f,c
  2016  000430  0E00               	movlw	0
  2017  000432  22DD               	addwfc	postdec2,f,c
  2018                           
  2019                           ;buttonchanges.c: 79: if(pin[pin_selected].time > 999) {
  2020  000434  0100               	movlb	0	; () banked
  2021  000436  5179               	movf	_pin_selected& (0+255),w,b
  2022  000438  0D06               	mullw	6
  2023  00043A  0E04               	movlw	4
  2024  00043C  26F3               	addwf	prodl,f,c
  2025  00043E  0E00               	movlw	0
  2026  000440  22F4               	addwfc	prodh,f,c
  2027  000442  0E00               	movlw	low _pin
  2028  000444  24F3               	addwf	prodl,w,c
  2029  000446  6ED9               	movwf	fsr2l,c
  2030  000448  0E01               	movlw	high _pin
  2031  00044A  20F4               	addwfc	prodh,w,c
  2032  00044C  6EDA               	movwf	fsr2h,c
  2033  00044E  0E01               	movlw	1
  2034  000450  BEDB               	btfsc	plusw2,7,c
  2035  000452  D017               	goto	l3106
  2036  000454  0EE8               	movlw	232
  2037  000456  5CDE               	subwf	postinc2,w,c
  2038  000458  0E03               	movlw	3
  2039  00045A  58DE               	subwfb	postinc2,w,c
  2040  00045C  A0D8               	btfss	status,0,c
  2041  00045E  D011               	goto	l3106
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;buttonchanges.c: 80: pin[pin_selected].time = 0;
  2045  000460  0100               	movlb	0	; () banked
  2046  000462  5179               	movf	_pin_selected& (0+255),w,b
  2047  000464  0D06               	mullw	6
  2048  000466  0E04               	movlw	4
  2049  000468  26F3               	addwf	prodl,f,c
  2050  00046A  0E00               	movlw	0
  2051  00046C  22F4               	addwfc	prodh,f,c
  2052  00046E  0E00               	movlw	low _pin
  2053  000470  24F3               	addwf	prodl,w,c
  2054  000472  6ED9               	movwf	fsr2l,c
  2055  000474  0E01               	movlw	high _pin
  2056  000476  20F4               	addwfc	prodh,w,c
  2057  000478  6EDA               	movwf	fsr2h,c
  2058  00047A  0E00               	movlw	0
  2059  00047C  6EDE               	movwf	postinc2,c
  2060  00047E  0E00               	movlw	0
  2061  000480  6EDD               	movwf	postdec2,c
  2062  000482                     l3106:
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;buttonchanges.c: 81: }
  2066                           ;buttonchanges.c: 82: __nop();
  2067  000482  F000               	nop	
  2068                           
  2069                           ;buttonchanges.c: 83: Set_Display('7', '-', pin[pin_selected].time);
  2070  000484  0E2D               	movlw	45
  2071  000486  0100               	movlb	0	; () banked
  2072  000488  6F70               	movwf	Set_Display@information& (0+255),b
  2073  00048A  0100               	movlb	0	; () banked
  2074  00048C  5179               	movf	_pin_selected& (0+255),w,b
  2075  00048E  0D06               	mullw	6
  2076  000490  0E04               	movlw	4
  2077  000492  26F3               	addwf	prodl,f,c
  2078  000494  0E00               	movlw	0
  2079  000496  22F4               	addwfc	prodh,f,c
  2080  000498  0E00               	movlw	low _pin
  2081  00049A  24F3               	addwf	prodl,w,c
  2082  00049C  6ED9               	movwf	fsr2l,c
  2083  00049E  0E01               	movlw	high _pin
  2084  0004A0  20F4               	addwfc	prodh,w,c
  2085  0004A2  6EDA               	movwf	fsr2h,c
  2086  0004A4  CFDE F071          	movff	postinc2,Set_Display@value
  2087  0004A8  CFDD F072          	movff	postdec2,Set_Display@value+1
  2088  0004AC  0E37               	movlw	55
  2089  0004AE  ECC2  F008         	call	_Set_Display
  2090                           
  2091                           ;buttonchanges.c: 84: __nop();
  2092  0004B2  F000               	nop	
  2093                           
  2094                           ;buttonchanges.c: 85: }
  2095                           ;buttonchanges.c: 86: } else if(PORTBbits.RB1 == 1) {
  2096  0004B4  0012               	return	
  2097  0004B6                     l108:
  2098  0004B6  A281               	btfss	3969,1,c	;volatile
  2099  0004B8  D0B1               	goto	l112
  2100                           
  2101                           ;buttonchanges.c: 87: Delay_Routine(3);
  2102  0004BA  0E03               	movlw	3
  2103  0004BC  EC14  F00B         	call	_Delay_Routine
  2104                           
  2105                           ;buttonchanges.c: 88: if(PORTBbits.RB1 == 1) {
  2106  0004C0  A281               	btfss	3969,1,c	;volatile
  2107  0004C2  0012               	return	
  2108                           
  2109                           ;buttonchanges.c: 89: if(PORTBbits.RB0 == 1) {
  2110  0004C4  A081               	btfss	3969,0,c	;volatile
  2111  0004C6  D007               	goto	l3124
  2112                           
  2113                           ;buttonchanges.c: 90: Delay_Routine(3);
  2114  0004C8  0E03               	movlw	3
  2115  0004CA  EC14  F00B         	call	_Delay_Routine
  2116                           
  2117                           ;buttonchanges.c: 91: if(PORTBbits.RB0 == 1) {
  2118  0004CE  A081               	btfss	3969,0,c	;volatile
  2119  0004D0  D002               	goto	l3124
  2120                           
  2121                           ;buttonchanges.c: 92: testflag = 1;
  2122  0004D2  863B               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2123                           
  2124                           ;buttonchanges.c: 93: return;
  2125  0004D4  0012               	return	
  2126  0004D6                     l3124:
  2127                           
  2128                           ;buttonchanges.c: 95: }
  2129                           ;buttonchanges.c: 96: }
  2130                           ;buttonchanges.c: 97: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2131  0004D6  0100               	movlb	0	; () banked
  2132  0004D8  5179               	movf	_pin_selected& (0+255),w,b
  2133  0004DA  0D06               	mullw	6
  2134  0004DC  0E04               	movlw	4
  2135  0004DE  26F3               	addwf	prodl,f,c
  2136  0004E0  0E00               	movlw	0
  2137  0004E2  22F4               	addwfc	prodh,f,c
  2138  0004E4  0E00               	movlw	low _pin
  2139  0004E6  24F3               	addwf	prodl,w,c
  2140  0004E8  6ED9               	movwf	fsr2l,c
  2141  0004EA  0E01               	movlw	high _pin
  2142  0004EC  20F4               	addwfc	prodh,w,c
  2143  0004EE  6EDA               	movwf	fsr2h,c
  2144  0004F0  CFDE F060          	movff	postinc2,Save_Data@store
  2145  0004F4  CFDD F061          	movff	postdec2,Save_Data@store+1
  2146  0004F8  0100               	movlb	0	; () banked
  2147  0004FA  5179               	movf	_pin_selected& (0+255),w,b
  2148  0004FC  0D06               	mullw	6
  2149  0004FE  0E02               	movlw	2
  2150  000500  26F3               	addwf	prodl,f,c
  2151  000502  0E00               	movlw	0
  2152  000504  22F4               	addwfc	prodh,f,c
  2153  000506  0E00               	movlw	low _pin
  2154  000508  24F3               	addwf	prodl,w,c
  2155  00050A  6ED9               	movwf	fsr2l,c
  2156  00050C  0E01               	movlw	high _pin
  2157  00050E  20F4               	addwfc	prodh,w,c
  2158  000510  6EDA               	movwf	fsr2h,c
  2159  000512  50DF               	movf	indf2,w,c
  2160  000514  0100               	movlb	0	; () banked
  2161  000516  6F62               	movwf	Save_Data@store_address& (0+255),b
  2162  000518  ECB2  F009         	call	_Save_Data	;wreg free
  2163                           
  2164                           ;buttonchanges.c: 98: pin_selected++;
  2165  00051C  0100               	movlb	0	; () banked
  2166  00051E  2B79               	incf	_pin_selected& (0+255),f,b
  2167                           
  2168                           ;buttonchanges.c: 99: switch (slave_selected) {
  2169  000520  D014               	goto	l3142
  2170  000522                     l3128:
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;buttonchanges.c: 101: if(pin_selected > 9) {
  2174  000522  0E09               	movlw	9
  2175  000524  0100               	movlb	0	; () banked
  2176  000526  6579               	cpfsgt	_pin_selected& (0+255),b
  2177  000528  D01B               	goto	l3144
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;buttonchanges.c: 102: pin_selected = 0;
  2181  00052A  0E00               	movlw	0
  2182  00052C  D00B               	goto	L2
  2183  00052E                     l3132:
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;buttonchanges.c: 106: if(pin_selected > 19) {
  2187  00052E  0E13               	movlw	19
  2188  000530  0100               	movlb	0	; () banked
  2189  000532  6579               	cpfsgt	_pin_selected& (0+255),b
  2190  000534  D015               	goto	l3144
  2191                           
  2192                           ; BSR set to: 0
  2193                           ;buttonchanges.c: 107: pin_selected = 10;
  2194  000536  0E0A               	movlw	10
  2195  000538  D005               	goto	L2
  2196  00053A                     l3136:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;buttonchanges.c: 111: if(pin_selected > 29) {
  2200  00053A  0E1D               	movlw	29
  2201  00053C  0100               	movlb	0	; () banked
  2202  00053E  6579               	cpfsgt	_pin_selected& (0+255),b
  2203  000540  D00F               	goto	l3144
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;buttonchanges.c: 112: pin_selected = 20;
  2207  000542  0E14               	movlw	20
  2208  000544                     L2:
  2209  000544  0100               	movlb	0	; () banked
  2210  000546  6F79               	movwf	_pin_selected& (0+255),b
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;buttonchanges.c: 115: }
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;buttonchanges.c: 113: }
  2217                           ;buttonchanges.c: 114: break;
  2218  000548  D00B               	goto	l3144
  2219  00054A                     l3142:
  2220                           
  2221                           ; BSR set to: 0
  2222  00054A  0100               	movlb	0	; () banked
  2223  00054C  517A               	movf	_slave_selected& (0+255),w,b
  2224                           
  2225                           ; Switch size 1, requested type "space"
  2226                           ; Number of cases is 3, Range of values is 0 to 2
  2227                           ; switch strategies available:
  2228                           ; Name         Instructions Cycles
  2229                           ; simple_byte           10     6 (average)
  2230                           ;	Chosen strategy is simple_byte
  2231  00054E  0A00               	xorlw	0	; case 0
  2232  000550  B4D8               	btfsc	status,2,c
  2233  000552  D7E7               	goto	l3128
  2234  000554  0A01               	xorlw	1	; case 1
  2235  000556  B4D8               	btfsc	status,2,c
  2236  000558  D7EA               	goto	l3132
  2237  00055A  0A03               	xorlw	3	; case 2
  2238  00055C  B4D8               	btfsc	status,2,c
  2239  00055E  D7ED               	goto	l3136
  2240  000560                     l3144:
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;buttonchanges.c: 116: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2244  000560  0100               	movlb	0	; () banked
  2245  000562  5179               	movf	_pin_selected& (0+255),w,b
  2246  000564  0D06               	mullw	6
  2247  000566  0E02               	movlw	2
  2248  000568  26F3               	addwf	prodl,f,c
  2249  00056A  0E00               	movlw	0
  2250  00056C  22F4               	addwfc	prodh,f,c
  2251  00056E  0E00               	movlw	low _pin
  2252  000570  24F3               	addwf	prodl,w,c
  2253  000572  6ED9               	movwf	fsr2l,c
  2254  000574  0E01               	movlw	high _pin
  2255  000576  20F4               	addwfc	prodh,w,c
  2256  000578  6EDA               	movwf	fsr2h,c
  2257  00057A  50DF               	movf	indf2,w,c
  2258  00057C  ECDC  F009         	call	_Read_Data
  2259  000580  0100               	movlb	0	; () banked
  2260  000582  5179               	movf	_pin_selected& (0+255),w,b
  2261  000584  0D06               	mullw	6
  2262  000586  0E04               	movlw	4
  2263  000588  26F3               	addwf	prodl,f,c
  2264  00058A  0E00               	movlw	0
  2265  00058C  22F4               	addwfc	prodh,f,c
  2266  00058E  0E00               	movlw	low _pin
  2267  000590  24F3               	addwf	prodl,w,c
  2268  000592  6ED9               	movwf	fsr2l,c
  2269  000594  0E01               	movlw	high _pin
  2270  000596  20F4               	addwfc	prodh,w,c
  2271  000598  6EDA               	movwf	fsr2h,c
  2272  00059A  0100               	movlb	0	; () banked
  2273  00059C  C060  FFDE         	movff	?_Read_Data,postinc2
  2274  0005A0  0100               	movlb	0	; () banked
  2275  0005A2  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;buttonchanges.c: 117: __nop();
  2279  0005A6  F000               	nop	
  2280                           
  2281                           ;buttonchanges.c: 118: Set_Display('7', 'A', pin[pin_selected].output);
  2282  0005A8  0E41               	movlw	65
  2283  0005AA  0100               	movlb	0	; () banked
  2284  0005AC  6F70               	movwf	Set_Display@information& (0+255),b
  2285  0005AE  0100               	movlb	0	; () banked
  2286  0005B0  5179               	movf	_pin_selected& (0+255),w,b
  2287  0005B2  0D06               	mullw	6
  2288  0005B4  0E01               	movlw	1
  2289  0005B6  26F3               	addwf	prodl,f,c
  2290  0005B8  0E00               	movlw	0
  2291  0005BA  22F4               	addwfc	prodh,f,c
  2292  0005BC  0E00               	movlw	low _pin
  2293  0005BE  24F3               	addwf	prodl,w,c
  2294  0005C0  6ED9               	movwf	fsr2l,c
  2295  0005C2  0E01               	movlw	high _pin
  2296  0005C4  20F4               	addwfc	prodh,w,c
  2297  0005C6  6EDA               	movwf	fsr2h,c
  2298  0005C8  50DF               	movf	indf2,w,c
  2299  0005CA  0100               	movlb	0	; () banked
  2300  0005CC  6F77               	movwf	??_Check_Buttons& (0+255),b
  2301  0005CE  0100               	movlb	0	; () banked
  2302  0005D0  5177               	movf	??_Check_Buttons& (0+255),w,b
  2303  0005D2  0100               	movlb	0	; () banked
  2304  0005D4  6F71               	movwf	Set_Display@value& (0+255),b
  2305  0005D6  6B72               	clrf	(Set_Display@value+1)& (0+255),b
  2306  0005D8  0E37               	movlw	55
  2307  0005DA  ECC2  F008         	call	_Set_Display
  2308                           
  2309                           ;buttonchanges.c: 119: Delay_Routine(30);
  2310  0005DE  0E1E               	movlw	30
  2311  0005E0  EC14  F00B         	call	_Delay_Routine
  2312                           
  2313                           ;buttonchanges.c: 120: Set_Display('7', '-', pin[pin_selected].time);
  2314  0005E4  0E2D               	movlw	45
  2315  0005E6  0100               	movlb	0	; () banked
  2316  0005E8  6F70               	movwf	Set_Display@information& (0+255),b
  2317  0005EA  0100               	movlb	0	; () banked
  2318  0005EC  5179               	movf	_pin_selected& (0+255),w,b
  2319  0005EE  0D06               	mullw	6
  2320  0005F0  0E04               	movlw	4
  2321  0005F2  26F3               	addwf	prodl,f,c
  2322  0005F4  0E00               	movlw	0
  2323  0005F6  22F4               	addwfc	prodh,f,c
  2324  0005F8  0E00               	movlw	low _pin
  2325  0005FA  24F3               	addwf	prodl,w,c
  2326  0005FC  6ED9               	movwf	fsr2l,c
  2327  0005FE  0E01               	movlw	high _pin
  2328  000600  20F4               	addwfc	prodh,w,c
  2329  000602  6EDA               	movwf	fsr2h,c
  2330  000604  CFDE F071          	movff	postinc2,Set_Display@value
  2331  000608  CFDD F072          	movff	postdec2,Set_Display@value+1
  2332  00060C  0E37               	movlw	55
  2333  00060E  ECC2  F008         	call	_Set_Display
  2334                           
  2335                           ;buttonchanges.c: 121: Delay_Routine(30);
  2336  000612  0E1E               	movlw	30
  2337  000614  EC14  F00B         	call	_Delay_Routine
  2338                           
  2339                           ;buttonchanges.c: 122: __nop();
  2340  000618  F000               	nop	
  2341                           
  2342                           ;buttonchanges.c: 123: }
  2343                           ;buttonchanges.c: 124: } else if(PORTBbits.RB0 == 1) {
  2344  00061A  0012               	return	
  2345  00061C                     l112:
  2346  00061C  A081               	btfss	3969,0,c	;volatile
  2347  00061E  0012               	return	
  2348                           
  2349                           ;buttonchanges.c: 125: Delay_Routine(3);
  2350  000620  0E03               	movlw	3
  2351  000622  EC14  F00B         	call	_Delay_Routine
  2352                           
  2353                           ;buttonchanges.c: 126: if(PORTBbits.RB0 == 1) {
  2354  000626  A081               	btfss	3969,0,c	;volatile
  2355  000628  0012               	return	
  2356                           
  2357                           ;buttonchanges.c: 127: if(PORTBbits.RB1 == 1) {
  2358  00062A  A281               	btfss	3969,1,c	;volatile
  2359  00062C  D007               	goto	l3170
  2360                           
  2361                           ;buttonchanges.c: 128: Delay_Routine(3);
  2362  00062E  0E03               	movlw	3
  2363  000630  EC14  F00B         	call	_Delay_Routine
  2364                           
  2365                           ;buttonchanges.c: 129: if(PORTBbits.RB1 == 1) {
  2366  000634  A281               	btfss	3969,1,c	;volatile
  2367  000636  D002               	goto	l3170
  2368                           
  2369                           ;buttonchanges.c: 130: testflag = 1;
  2370  000638  863B               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2371                           
  2372                           ;buttonchanges.c: 131: return;
  2373  00063A  0012               	return	
  2374  00063C                     l3170:
  2375                           
  2376                           ;buttonchanges.c: 133: }
  2377                           ;buttonchanges.c: 134: }
  2378                           ;buttonchanges.c: 135: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2379  00063C  0100               	movlb	0	; () banked
  2380  00063E  5179               	movf	_pin_selected& (0+255),w,b
  2381  000640  0D06               	mullw	6
  2382  000642  0E04               	movlw	4
  2383  000644  26F3               	addwf	prodl,f,c
  2384  000646  0E00               	movlw	0
  2385  000648  22F4               	addwfc	prodh,f,c
  2386  00064A  0E00               	movlw	low _pin
  2387  00064C  24F3               	addwf	prodl,w,c
  2388  00064E  6ED9               	movwf	fsr2l,c
  2389  000650  0E01               	movlw	high _pin
  2390  000652  20F4               	addwfc	prodh,w,c
  2391  000654  6EDA               	movwf	fsr2h,c
  2392  000656  CFDE F060          	movff	postinc2,Save_Data@store
  2393  00065A  CFDD F061          	movff	postdec2,Save_Data@store+1
  2394  00065E  0100               	movlb	0	; () banked
  2395  000660  5179               	movf	_pin_selected& (0+255),w,b
  2396  000662  0D06               	mullw	6
  2397  000664  0E02               	movlw	2
  2398  000666  26F3               	addwf	prodl,f,c
  2399  000668  0E00               	movlw	0
  2400  00066A  22F4               	addwfc	prodh,f,c
  2401  00066C  0E00               	movlw	low _pin
  2402  00066E  24F3               	addwf	prodl,w,c
  2403  000670  6ED9               	movwf	fsr2l,c
  2404  000672  0E01               	movlw	high _pin
  2405  000674  20F4               	addwfc	prodh,w,c
  2406  000676  6EDA               	movwf	fsr2h,c
  2407  000678  50DF               	movf	indf2,w,c
  2408  00067A  0100               	movlb	0	; () banked
  2409  00067C  6F62               	movwf	Save_Data@store_address& (0+255),b
  2410  00067E  ECB2  F009         	call	_Save_Data	;wreg free
  2411                           
  2412                           ;buttonchanges.c: 136: slave_selected++;
  2413  000682  0100               	movlb	0	; () banked
  2414  000684  2B7A               	incf	_slave_selected& (0+255),f,b
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;buttonchanges.c: 137: if(slave_selected > 2) {
  2418  000686  0E02               	movlw	2
  2419  000688  0100               	movlb	0	; () banked
  2420  00068A  657A               	cpfsgt	_slave_selected& (0+255),b
  2421  00068C  D003               	goto	l3178
  2422                           
  2423                           ; BSR set to: 0
  2424                           ;buttonchanges.c: 138: slave_selected = 0;
  2425  00068E  0E00               	movlw	0
  2426  000690  0100               	movlb	0	; () banked
  2427  000692  6F7A               	movwf	_slave_selected& (0+255),b
  2428  000694                     l3178:
  2429                           
  2430                           ; BSR set to: 0
  2431                           ;buttonchanges.c: 139: }
  2432                           ;buttonchanges.c: 140: pin_selected = slave_selected * 10;
  2433  000694  0100               	movlb	0	; () banked
  2434  000696  517A               	movf	_slave_selected& (0+255),w,b
  2435  000698  0D0A               	mullw	10
  2436  00069A  CFF3 F079          	movff	prodl,_pin_selected
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;buttonchanges.c: 141: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2440  00069E  0100               	movlb	0	; () banked
  2441  0006A0  5179               	movf	_pin_selected& (0+255),w,b
  2442  0006A2  0D06               	mullw	6
  2443  0006A4  0E02               	movlw	2
  2444  0006A6  26F3               	addwf	prodl,f,c
  2445  0006A8  0E00               	movlw	0
  2446  0006AA  22F4               	addwfc	prodh,f,c
  2447  0006AC  0E00               	movlw	low _pin
  2448  0006AE  24F3               	addwf	prodl,w,c
  2449  0006B0  6ED9               	movwf	fsr2l,c
  2450  0006B2  0E01               	movlw	high _pin
  2451  0006B4  20F4               	addwfc	prodh,w,c
  2452  0006B6  6EDA               	movwf	fsr2h,c
  2453  0006B8  50DF               	movf	indf2,w,c
  2454  0006BA  ECDC  F009         	call	_Read_Data
  2455  0006BE  0100               	movlb	0	; () banked
  2456  0006C0  5179               	movf	_pin_selected& (0+255),w,b
  2457  0006C2  0D06               	mullw	6
  2458  0006C4  0E04               	movlw	4
  2459  0006C6  26F3               	addwf	prodl,f,c
  2460  0006C8  0E00               	movlw	0
  2461  0006CA  22F4               	addwfc	prodh,f,c
  2462  0006CC  0E00               	movlw	low _pin
  2463  0006CE  24F3               	addwf	prodl,w,c
  2464  0006D0  6ED9               	movwf	fsr2l,c
  2465  0006D2  0E01               	movlw	high _pin
  2466  0006D4  20F4               	addwfc	prodh,w,c
  2467  0006D6  6EDA               	movwf	fsr2h,c
  2468  0006D8  0100               	movlb	0	; () banked
  2469  0006DA  C060  FFDE         	movff	?_Read_Data,postinc2
  2470  0006DE  0100               	movlb	0	; () banked
  2471  0006E0  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;buttonchanges.c: 142: __nop();
  2475  0006E4  F000               	nop	
  2476                           
  2477                           ;buttonchanges.c: 143: Set_Display('7', 'E', pin[pin_selected].slave);
  2478  0006E6  0E45               	movlw	69
  2479  0006E8  0100               	movlb	0	; () banked
  2480  0006EA  6F70               	movwf	Set_Display@information& (0+255),b
  2481  0006EC  0100               	movlb	0	; () banked
  2482  0006EE  5179               	movf	_pin_selected& (0+255),w,b
  2483  0006F0  0D06               	mullw	6
  2484  0006F2  0E00               	movlw	low _pin
  2485  0006F4  24F3               	addwf	prodl,w,c
  2486  0006F6  6ED9               	movwf	fsr2l,c
  2487  0006F8  0E01               	movlw	high _pin
  2488  0006FA  20F4               	addwfc	prodh,w,c
  2489  0006FC  6EDA               	movwf	fsr2h,c
  2490  0006FE  50DF               	movf	indf2,w,c
  2491  000700  0100               	movlb	0	; () banked
  2492  000702  6F77               	movwf	??_Check_Buttons& (0+255),b
  2493  000704  0100               	movlb	0	; () banked
  2494  000706  5177               	movf	??_Check_Buttons& (0+255),w,b
  2495  000708  0100               	movlb	0	; () banked
  2496  00070A  6F71               	movwf	Set_Display@value& (0+255),b
  2497  00070C  6B72               	clrf	(Set_Display@value+1)& (0+255),b
  2498  00070E  0E37               	movlw	55
  2499  000710  ECC2  F008         	call	_Set_Display
  2500                           
  2501                           ;buttonchanges.c: 145: Delay_Routine(30);
  2502  000714  0E1E               	movlw	30
  2503  000716  EC14  F00B         	call	_Delay_Routine
  2504                           
  2505                           ;buttonchanges.c: 146: Set_Display('7', 'A', pin[pin_selected].output);
  2506  00071A  0E41               	movlw	65
  2507  00071C  0100               	movlb	0	; () banked
  2508  00071E  6F70               	movwf	Set_Display@information& (0+255),b
  2509  000720  0100               	movlb	0	; () banked
  2510  000722  5179               	movf	_pin_selected& (0+255),w,b
  2511  000724  0D06               	mullw	6
  2512  000726  0E01               	movlw	1
  2513  000728  26F3               	addwf	prodl,f,c
  2514  00072A  0E00               	movlw	0
  2515  00072C  22F4               	addwfc	prodh,f,c
  2516  00072E  0E00               	movlw	low _pin
  2517  000730  24F3               	addwf	prodl,w,c
  2518  000732  6ED9               	movwf	fsr2l,c
  2519  000734  0E01               	movlw	high _pin
  2520  000736  20F4               	addwfc	prodh,w,c
  2521  000738  6EDA               	movwf	fsr2h,c
  2522  00073A  50DF               	movf	indf2,w,c
  2523  00073C  0100               	movlb	0	; () banked
  2524  00073E  6F77               	movwf	??_Check_Buttons& (0+255),b
  2525  000740  0100               	movlb	0	; () banked
  2526  000742  5177               	movf	??_Check_Buttons& (0+255),w,b
  2527  000744  0100               	movlb	0	; () banked
  2528  000746  6F71               	movwf	Set_Display@value& (0+255),b
  2529  000748  6B72               	clrf	(Set_Display@value+1)& (0+255),b
  2530  00074A  0E37               	movlw	55
  2531  00074C  ECC2  F008         	call	_Set_Display
  2532                           
  2533                           ;buttonchanges.c: 147: Delay_Routine(30);
  2534  000750  0E1E               	movlw	30
  2535  000752  EC14  F00B         	call	_Delay_Routine
  2536                           
  2537                           ;buttonchanges.c: 148: Set_Display('7', '-', pin[pin_selected].time);
  2538  000756  0E2D               	movlw	45
  2539  000758  0100               	movlb	0	; () banked
  2540  00075A  6F70               	movwf	Set_Display@information& (0+255),b
  2541  00075C  0100               	movlb	0	; () banked
  2542  00075E  5179               	movf	_pin_selected& (0+255),w,b
  2543  000760  0D06               	mullw	6
  2544  000762  0E04               	movlw	4
  2545  000764  26F3               	addwf	prodl,f,c
  2546  000766  0E00               	movlw	0
  2547  000768  22F4               	addwfc	prodh,f,c
  2548  00076A  0E00               	movlw	low _pin
  2549  00076C  24F3               	addwf	prodl,w,c
  2550  00076E  6ED9               	movwf	fsr2l,c
  2551  000770  0E01               	movlw	high _pin
  2552  000772  20F4               	addwfc	prodh,w,c
  2553  000774  6EDA               	movwf	fsr2h,c
  2554  000776  CFDE F071          	movff	postinc2,Set_Display@value
  2555  00077A  CFDD F072          	movff	postdec2,Set_Display@value+1
  2556  00077E  0E37               	movlw	55
  2557  000780  ECC2  F008         	call	_Set_Display
  2558                           
  2559                           ;buttonchanges.c: 149: Delay_Routine(30);
  2560  000784  0E1E               	movlw	30
  2561  000786  EC14  F00B         	call	_Delay_Routine
  2562                           
  2563                           ;buttonchanges.c: 150: __nop();
  2564  00078A  F000               	nop	
  2565  00078C  0012               	return	
  2566  00078E                     __end_of_Check_Buttons:
  2567                           	opt stack 0
  2568                           tblptru	equ	0xFF8
  2569                           tblptrh	equ	0xFF7
  2570                           tblptrl	equ	0xFF6
  2571                           tablat	equ	0xFF5
  2572                           prodh	equ	0xFF4
  2573                           prodl	equ	0xFF3
  2574                           intcon	equ	0xFF2
  2575                           postinc0	equ	0xFEE
  2576                           wreg	equ	0xFE8
  2577                           postdec1	equ	0xFE5
  2578                           fsr1l	equ	0xFE1
  2579                           indf2	equ	0xFDF
  2580                           postinc2	equ	0xFDE
  2581                           postdec2	equ	0xFDD
  2582                           plusw2	equ	0xFDB
  2583                           fsr2h	equ	0xFDA
  2584                           fsr2l	equ	0xFD9
  2585                           status	equ	0xFD8
  2586                           
  2587 ;; *************** function _Start_Timer *****************
  2588 ;; Defined at:
  2589 ;;		line 12 in file "ignition.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;		None               void
  2596 ;; Registers used:
  2597 ;;		wreg, status,2
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1
  2603 ;;      Params:         0       0       0
  2604 ;;      Locals:         0       0       0
  2605 ;;      Temps:          0       0       0
  2606 ;;      Totals:         0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    5
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_Check_Buttons
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text12
  2618  0016C6                     __ptext12:
  2619                           	opt stack 0
  2620  0016C6                     _Start_Timer:
  2621                           	opt stack 24
  2622                           
  2623                           ;ignition.c: 13: if(ignite_ready == 1) {
  2624                           
  2625                           ;incstack = 0
  2626  0016C6  A03B               	btfss	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  2627  0016C8  0012               	return	
  2628                           
  2629                           ;ignition.c: 14: TMR1L = 0;
  2630  0016CA  0E00               	movlw	0
  2631  0016CC  6ECE               	movwf	4046,c	;volatile
  2632                           
  2633                           ;ignition.c: 15: TMR1H = 0;
  2634  0016CE  0E00               	movlw	0
  2635  0016D0  6ECF               	movwf	4047,c	;volatile
  2636                           
  2637                           ;ignition.c: 16: TMR3L = 0;
  2638  0016D2  0E00               	movlw	0
  2639  0016D4  6EB2               	movwf	4018,c	;volatile
  2640                           
  2641                           ;ignition.c: 17: TMR3H = 0;
  2642  0016D6  0E00               	movlw	0
  2643  0016D8  6EB3               	movwf	4019,c	;volatile
  2644                           
  2645                           ;ignition.c: 18: PIR1bits.TMR1IF = 0;
  2646  0016DA  909E               	bcf	3998,0,c	;volatile
  2647                           
  2648                           ;ignition.c: 19: PIR2bits.TMR3IF = 0;
  2649  0016DC  92A1               	bcf	4001,1,c	;volatile
  2650                           
  2651                           ;ignition.c: 20: T1CONbits.TMR1ON = 1;
  2652  0016DE  80CD               	bsf	4045,0,c	;volatile
  2653  0016E0  0012               	return	
  2654  0016E2                     __end_of_Start_Timer:
  2655                           	opt stack 0
  2656                           tblptru	equ	0xFF8
  2657                           tblptrh	equ	0xFF7
  2658                           tblptrl	equ	0xFF6
  2659                           tablat	equ	0xFF5
  2660                           prodh	equ	0xFF4
  2661                           prodl	equ	0xFF3
  2662                           intcon	equ	0xFF2
  2663                           postinc0	equ	0xFEE
  2664                           wreg	equ	0xFE8
  2665                           postdec1	equ	0xFE5
  2666                           fsr1l	equ	0xFE1
  2667                           indf2	equ	0xFDF
  2668                           postinc2	equ	0xFDE
  2669                           postdec2	equ	0xFDD
  2670                           plusw2	equ	0xFDB
  2671                           fsr2h	equ	0xFDA
  2672                           fsr2l	equ	0xFD9
  2673                           status	equ	0xFD8
  2674                           
  2675 ;; *************** function _Del_Data *****************
  2676 ;; Defined at:
  2677 ;;		line 85 in file "storage.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  counter         1   22[BANK0 ] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;		None               void
  2684 ;; Registers used:
  2685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1
  2691 ;;      Params:         0       0       0
  2692 ;;      Locals:         0       1       0
  2693 ;;      Temps:          0       0       0
  2694 ;;      Totals:         0       1       0
  2695 ;;Total ram usage:        1 bytes
  2696 ;; Hardware stack levels used:    1
  2697 ;; Hardware stack levels required when called:   10
  2698 ;; This function calls:
  2699 ;;		_Delay_Routine
  2700 ;;		_Evaluate_Display
  2701 ;;		_Load_Data
  2702 ;;		_Save_Data
  2703 ;; This function is called by:
  2704 ;;		_Check_Buttons
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text13
  2709  00144E                     __ptext13:
  2710                           	opt stack 0
  2711  00144E                     _Del_Data:
  2712                           	opt stack 19
  2713                           
  2714                           ;storage.c: 86: Evaluate_Display(3, "DEL");
  2715                           
  2716                           ;incstack = 0
  2717  00144E  0E6A               	movlw	low STR_2
  2718  001450  0100               	movlb	0	; () banked
  2719  001452  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  2720  001454  0E02               	movlw	high STR_2
  2721  001456  0100               	movlb	0	; () banked
  2722  001458  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  2723  00145A  0E03               	movlw	3
  2724  00145C  ECC7  F003         	call	_Evaluate_Display
  2725                           
  2726                           ;storage.c: 87: Delay_Routine(3);
  2727  001460  0E03               	movlw	3
  2728  001462  EC14  F00B         	call	_Delay_Routine
  2729                           
  2730                           ;storage.c: 88: for(unsigned char counter = 0; counter < 30; counter++) {
  2731  001466  0E00               	movlw	0
  2732  001468  0100               	movlb	0	; () banked
  2733  00146A  6F76               	movwf	Del_Data@counter& (0+255),b
  2734  00146C                     l2974:
  2735                           
  2736                           ; BSR set to: 0
  2737  00146C  0E1D               	movlw	29
  2738  00146E  0100               	movlb	0	; () banked
  2739  001470  6576               	cpfsgt	Del_Data@counter& (0+255),b
  2740  001472  D001               	goto	l2978
  2741  001474  D00C               	goto	l2984
  2742  001476                     l2978:
  2743                           
  2744                           ; BSR set to: 0
  2745                           ;storage.c: 89: Save_Data(0, counter);
  2746  001476  0E00               	movlw	0
  2747  001478  0100               	movlb	0	; () banked
  2748  00147A  6F61               	movwf	(Save_Data@store+1)& (0+255),b
  2749  00147C  0E00               	movlw	0
  2750  00147E  6F60               	movwf	Save_Data@store& (0+255),b
  2751  001480  C076  F062         	movff	Del_Data@counter,Save_Data@store_address
  2752  001484  ECB2  F009         	call	_Save_Data	;wreg free
  2753  001488  0100               	movlb	0	; () banked
  2754  00148A  2B76               	incf	Del_Data@counter& (0+255),f,b
  2755  00148C  D7EF               	goto	l2974
  2756  00148E                     l2984:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;storage.c: 90: }
  2760                           ;storage.c: 91: Load_Data();
  2761  00148E  EC5B  F006         	call	_Load_Data	;wreg free
  2762  001492  0012               	return		;funcret
  2763  001494                     __end_of_Del_Data:
  2764                           	opt stack 0
  2765                           tblptru	equ	0xFF8
  2766                           tblptrh	equ	0xFF7
  2767                           tblptrl	equ	0xFF6
  2768                           tablat	equ	0xFF5
  2769                           prodh	equ	0xFF4
  2770                           prodl	equ	0xFF3
  2771                           intcon	equ	0xFF2
  2772                           postinc0	equ	0xFEE
  2773                           wreg	equ	0xFE8
  2774                           postdec1	equ	0xFE5
  2775                           fsr1l	equ	0xFE1
  2776                           indf2	equ	0xFDF
  2777                           postinc2	equ	0xFDE
  2778                           postdec2	equ	0xFDD
  2779                           plusw2	equ	0xFDB
  2780                           fsr2h	equ	0xFDA
  2781                           fsr2l	equ	0xFD9
  2782                           status	equ	0xFD8
  2783                           
  2784 ;; *************** function _Save_Data *****************
  2785 ;; Defined at:
  2786 ;;		line 8 in file "storage.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;  store           2    0[BANK0 ] unsigned int 
  2789 ;;  store_addres    1    2[BANK0 ] unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;		None               void
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1
  2801 ;;      Params:         0       3       0
  2802 ;;      Locals:         0       0       0
  2803 ;;      Temps:          0       0       0
  2804 ;;      Totals:         0       3       0
  2805 ;;Total ram usage:        3 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; Hardware stack levels required when called:    5
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_Check_Buttons
  2812 ;;		_Del_Data
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text14
  2817  001364                     __ptext14:
  2818                           	opt stack 0
  2819  001364                     _Save_Data:
  2820                           	opt stack 24
  2821                           
  2822                           ;storage.c: 10: EEADR = store_address;
  2823                           
  2824                           ;incstack = 0
  2825  001364  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2826                           
  2827                           ;storage.c: 11: EEDATA = store;
  2828  001368  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2829                           
  2830                           ;storage.c: 12: EECON1bits.EEPGD = 0;
  2831  00136C  9EA6               	bcf	4006,7,c	;volatile
  2832                           
  2833                           ;storage.c: 13: EECON1bits.CFGS = 0;
  2834  00136E  9CA6               	bcf	4006,6,c	;volatile
  2835                           
  2836                           ;storage.c: 14: INTCONbits.GIE = 0;
  2837  001370  9EF2               	bcf	intcon,7,c	;volatile
  2838                           
  2839                           ;storage.c: 15: EECON1bits.WREN = 1;
  2840  001372  84A6               	bsf	4006,2,c	;volatile
  2841                           
  2842                           ;storage.c: 16: EECON2 = 0x55;
  2843  001374  0E55               	movlw	85
  2844  001376  6EA7               	movwf	4007,c	;volatile
  2845                           
  2846                           ;storage.c: 17: EECON2 = 0xAA;
  2847  001378  0EAA               	movlw	170
  2848  00137A  6EA7               	movwf	4007,c	;volatile
  2849                           
  2850                           ;storage.c: 18: EECON1bits.WR = 1;
  2851  00137C  82A6               	bsf	4006,1,c	;volatile
  2852  00137E                     l337:
  2853  00137E  A8A1               	btfss	4001,4,c	;volatile
  2854  001380  D7FE               	goto	l337
  2855                           
  2856                           ;storage.c: 20: PIR2bits.EEIF = 0;
  2857  001382  98A1               	bcf	4001,4,c	;volatile
  2858                           
  2859                           ;storage.c: 21: store >>= 8;
  2860  001384  0100               	movlb	0	; () banked
  2861  001386  5161               	movf	(Save_Data@store+1)& (0+255),w,b
  2862  001388  6F60               	movwf	Save_Data@store& (0+255),b
  2863  00138A  6B61               	clrf	(Save_Data@store+1)& (0+255),b
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;storage.c: 22: store_address += 50;
  2867  00138C  0E32               	movlw	50
  2868  00138E  0100               	movlb	0	; () banked
  2869  001390  2762               	addwf	Save_Data@store_address& (0+255),f,b
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;storage.c: 23: EEADR = store_address;
  2873  001392  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;storage.c: 24: EEDATA = store;
  2877  001396  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;storage.c: 25: EECON1bits.EEPGD = 0;
  2881  00139A  9EA6               	bcf	4006,7,c	;volatile
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;storage.c: 26: EECON1bits.CFGS = 0;
  2885  00139C  9CA6               	bcf	4006,6,c	;volatile
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;storage.c: 27: EECON1bits.WREN = 1;
  2889  00139E  84A6               	bsf	4006,2,c	;volatile
  2890                           
  2891                           ; BSR set to: 0
  2892                           ;storage.c: 28: INTCONbits.GIE = 0;
  2893  0013A0  9EF2               	bcf	intcon,7,c	;volatile
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;storage.c: 29: EECON2 = 0x55;
  2897  0013A2  0E55               	movlw	85
  2898  0013A4  6EA7               	movwf	4007,c	;volatile
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;storage.c: 30: EECON2 = 0xAA;
  2902  0013A6  0EAA               	movlw	170
  2903  0013A8  6EA7               	movwf	4007,c	;volatile
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;storage.c: 31: EECON1bits.WR = 1;
  2907  0013AA  82A6               	bsf	4006,1,c	;volatile
  2908  0013AC                     l340:
  2909  0013AC  A8A1               	btfss	4001,4,c	;volatile
  2910  0013AE  D7FE               	goto	l340
  2911                           
  2912                           ;storage.c: 33: PIR2bits.EEIF = 0;
  2913  0013B0  98A1               	bcf	4001,4,c	;volatile
  2914                           
  2915                           ;storage.c: 34: EECON1bits.WREN = 0;
  2916  0013B2  94A6               	bcf	4006,2,c	;volatile
  2917                           
  2918                           ;storage.c: 35: INTCONbits.GIE = 1;
  2919  0013B4  8EF2               	bsf	intcon,7,c	;volatile
  2920  0013B6  0012               	return		;funcret
  2921  0013B8                     __end_of_Save_Data:
  2922                           	opt stack 0
  2923                           tblptru	equ	0xFF8
  2924                           tblptrh	equ	0xFF7
  2925                           tblptrl	equ	0xFF6
  2926                           tablat	equ	0xFF5
  2927                           prodh	equ	0xFF4
  2928                           prodl	equ	0xFF3
  2929                           intcon	equ	0xFF2
  2930                           postinc0	equ	0xFEE
  2931                           wreg	equ	0xFE8
  2932                           postdec1	equ	0xFE5
  2933                           fsr1l	equ	0xFE1
  2934                           indf2	equ	0xFDF
  2935                           postinc2	equ	0xFDE
  2936                           postdec2	equ	0xFDD
  2937                           plusw2	equ	0xFDB
  2938                           fsr2h	equ	0xFDA
  2939                           fsr2l	equ	0xFD9
  2940                           status	equ	0xFD8
  2941                           
  2942 ;; *************** function _Load_Data *****************
  2943 ;; Defined at:
  2944 ;;		line 65 in file "storage.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  counter         1   21[BANK0 ] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;		None               void
  2951 ;; Registers used:
  2952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1
  2958 ;;      Params:         0       0       0
  2959 ;;      Locals:         0       1       0
  2960 ;;      Temps:          0       1       0
  2961 ;;      Totals:         0       2       0
  2962 ;;Total ram usage:        2 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    9
  2965 ;; This function calls:
  2966 ;;		_Delay_Routine
  2967 ;;		_Evaluate_Display
  2968 ;;		_Read_Data
  2969 ;;		_Set_Display
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;;		_Del_Data
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976                           	psect	text15
  2977  000CB6                     __ptext15:
  2978                           	opt stack 0
  2979  000CB6                     _Load_Data:
  2980                           	opt stack 21
  2981                           
  2982                           ;storage.c: 66: Evaluate_Display(3, "LOA");
  2983                           
  2984                           ;incstack = 0
  2985  000CB6  0E66               	movlw	low STR_1
  2986  000CB8  0100               	movlb	0	; () banked
  2987  000CBA  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  2988  000CBC  0E02               	movlw	high STR_1
  2989  000CBE  0100               	movlb	0	; () banked
  2990  000CC0  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  2991  000CC2  0E03               	movlw	3
  2992  000CC4  ECC7  F003         	call	_Evaluate_Display
  2993                           
  2994                           ;storage.c: 67: Delay_Routine(3);
  2995  000CC8  0E03               	movlw	3
  2996  000CCA  EC14  F00B         	call	_Delay_Routine
  2997                           
  2998                           ;storage.c: 68: for(unsigned char counter = 0; counter < 30; counter++) {
  2999  000CCE  0E00               	movlw	0
  3000  000CD0  0100               	movlb	0	; () banked
  3001  000CD2  6F75               	movwf	Load_Data@counter& (0+255),b
  3002  000CD4                     l2906:
  3003                           
  3004                           ; BSR set to: 0
  3005  000CD4  0E1D               	movlw	29
  3006  000CD6  0100               	movlb	0	; () banked
  3007  000CD8  6575               	cpfsgt	Load_Data@counter& (0+255),b
  3008  000CDA  D001               	goto	l2910
  3009  000CDC  D01A               	goto	l2916
  3010  000CDE                     l2910:
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;storage.c: 69: pin[counter].time = Read_Data(counter);
  3014  000CDE  0100               	movlb	0	; () banked
  3015  000CE0  5175               	movf	Load_Data@counter& (0+255),w,b
  3016  000CE2  ECDC  F009         	call	_Read_Data
  3017  000CE6  0100               	movlb	0	; () banked
  3018  000CE8  5175               	movf	Load_Data@counter& (0+255),w,b
  3019  000CEA  0D06               	mullw	6
  3020  000CEC  0E04               	movlw	4
  3021  000CEE  26F3               	addwf	prodl,f,c
  3022  000CF0  0E00               	movlw	0
  3023  000CF2  22F4               	addwfc	prodh,f,c
  3024  000CF4  0E00               	movlw	low _pin
  3025  000CF6  24F3               	addwf	prodl,w,c
  3026  000CF8  6ED9               	movwf	fsr2l,c
  3027  000CFA  0E01               	movlw	high _pin
  3028  000CFC  20F4               	addwfc	prodh,w,c
  3029  000CFE  6EDA               	movwf	fsr2h,c
  3030  000D00  0100               	movlb	0	; () banked
  3031  000D02  C060  FFDE         	movff	?_Read_Data,postinc2
  3032  000D06  0100               	movlb	0	; () banked
  3033  000D08  C061  FFDD         	movff	?_Read_Data+1,postdec2
  3034                           
  3035                           ; BSR set to: 0
  3036  000D0C  0100               	movlb	0	; () banked
  3037  000D0E  2B75               	incf	Load_Data@counter& (0+255),f,b
  3038  000D10  D7E1               	goto	l2906
  3039  000D12                     l2916:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;storage.c: 70: }
  3043                           ;storage.c: 71: slave_selected = 0;
  3044  000D12  0E00               	movlw	0
  3045  000D14  0100               	movlb	0	; () banked
  3046  000D16  6F7A               	movwf	_slave_selected& (0+255),b
  3047                           
  3048                           ;storage.c: 72: pin_selected = 0;
  3049  000D18  0E00               	movlw	0
  3050  000D1A  0100               	movlb	0	; () banked
  3051  000D1C  6F79               	movwf	_pin_selected& (0+255),b
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;storage.c: 73: Set_Display('7', 'E', pin[pin_selected].slave);
  3055  000D1E  0E45               	movlw	69
  3056  000D20  0100               	movlb	0	; () banked
  3057  000D22  6F70               	movwf	Set_Display@information& (0+255),b
  3058  000D24  0100               	movlb	0	; () banked
  3059  000D26  5179               	movf	_pin_selected& (0+255),w,b
  3060  000D28  0D06               	mullw	6
  3061  000D2A  0E00               	movlw	low _pin
  3062  000D2C  24F3               	addwf	prodl,w,c
  3063  000D2E  6ED9               	movwf	fsr2l,c
  3064  000D30  0E01               	movlw	high _pin
  3065  000D32  20F4               	addwfc	prodh,w,c
  3066  000D34  6EDA               	movwf	fsr2h,c
  3067  000D36  50DF               	movf	indf2,w,c
  3068  000D38  0100               	movlb	0	; () banked
  3069  000D3A  6F74               	movwf	??_Load_Data& (0+255),b
  3070  000D3C  0100               	movlb	0	; () banked
  3071  000D3E  5174               	movf	??_Load_Data& (0+255),w,b
  3072  000D40  0100               	movlb	0	; () banked
  3073  000D42  6F71               	movwf	Set_Display@value& (0+255),b
  3074  000D44  6B72               	clrf	(Set_Display@value+1)& (0+255),b
  3075  000D46  0E37               	movlw	55
  3076  000D48  ECC2  F008         	call	_Set_Display
  3077                           
  3078                           ;storage.c: 75: Delay_Routine(20);
  3079  000D4C  0E14               	movlw	20
  3080  000D4E  EC14  F00B         	call	_Delay_Routine
  3081                           
  3082                           ;storage.c: 76: Set_Display('7', 'A', pin[pin_selected].output);
  3083  000D52  0E41               	movlw	65
  3084  000D54  0100               	movlb	0	; () banked
  3085  000D56  6F70               	movwf	Set_Display@information& (0+255),b
  3086  000D58  0100               	movlb	0	; () banked
  3087  000D5A  5179               	movf	_pin_selected& (0+255),w,b
  3088  000D5C  0D06               	mullw	6
  3089  000D5E  0E01               	movlw	1
  3090  000D60  26F3               	addwf	prodl,f,c
  3091  000D62  0E00               	movlw	0
  3092  000D64  22F4               	addwfc	prodh,f,c
  3093  000D66  0E00               	movlw	low _pin
  3094  000D68  24F3               	addwf	prodl,w,c
  3095  000D6A  6ED9               	movwf	fsr2l,c
  3096  000D6C  0E01               	movlw	high _pin
  3097  000D6E  20F4               	addwfc	prodh,w,c
  3098  000D70  6EDA               	movwf	fsr2h,c
  3099  000D72  50DF               	movf	indf2,w,c
  3100  000D74  0100               	movlb	0	; () banked
  3101  000D76  6F74               	movwf	??_Load_Data& (0+255),b
  3102  000D78  0100               	movlb	0	; () banked
  3103  000D7A  5174               	movf	??_Load_Data& (0+255),w,b
  3104  000D7C  0100               	movlb	0	; () banked
  3105  000D7E  6F71               	movwf	Set_Display@value& (0+255),b
  3106  000D80  6B72               	clrf	(Set_Display@value+1)& (0+255),b
  3107  000D82  0E37               	movlw	55
  3108  000D84  ECC2  F008         	call	_Set_Display
  3109                           
  3110                           ;storage.c: 77: Delay_Routine(20);
  3111  000D88  0E14               	movlw	20
  3112  000D8A  EC14  F00B         	call	_Delay_Routine
  3113                           
  3114                           ;storage.c: 78: Set_Display('7', '-', pin[pin_selected].time);
  3115  000D8E  0E2D               	movlw	45
  3116  000D90  0100               	movlb	0	; () banked
  3117  000D92  6F70               	movwf	Set_Display@information& (0+255),b
  3118  000D94  0100               	movlb	0	; () banked
  3119  000D96  5179               	movf	_pin_selected& (0+255),w,b
  3120  000D98  0D06               	mullw	6
  3121  000D9A  0E04               	movlw	4
  3122  000D9C  26F3               	addwf	prodl,f,c
  3123  000D9E  0E00               	movlw	0
  3124  000DA0  22F4               	addwfc	prodh,f,c
  3125  000DA2  0E00               	movlw	low _pin
  3126  000DA4  24F3               	addwf	prodl,w,c
  3127  000DA6  6ED9               	movwf	fsr2l,c
  3128  000DA8  0E01               	movlw	high _pin
  3129  000DAA  20F4               	addwfc	prodh,w,c
  3130  000DAC  6EDA               	movwf	fsr2h,c
  3131  000DAE  CFDE F071          	movff	postinc2,Set_Display@value
  3132  000DB2  CFDD F072          	movff	postdec2,Set_Display@value+1
  3133  000DB6  0E37               	movlw	55
  3134  000DB8  ECC2  F008         	call	_Set_Display
  3135                           
  3136                           ;storage.c: 79: Delay_Routine(20);
  3137  000DBC  0E14               	movlw	20
  3138  000DBE  EC14  F00B         	call	_Delay_Routine
  3139  000DC2  0012               	return		;funcret
  3140  000DC4                     __end_of_Load_Data:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           intcon	equ	0xFF2
  3149                           postinc0	equ	0xFEE
  3150                           wreg	equ	0xFE8
  3151                           postdec1	equ	0xFE5
  3152                           fsr1l	equ	0xFE1
  3153                           indf2	equ	0xFDF
  3154                           postinc2	equ	0xFDE
  3155                           postdec2	equ	0xFDD
  3156                           plusw2	equ	0xFDB
  3157                           fsr2h	equ	0xFDA
  3158                           fsr2l	equ	0xFD9
  3159                           status	equ	0xFD8
  3160                           
  3161 ;; *************** function _Set_Display *****************
  3162 ;; Defined at:
  3163 ;;		line 138 in file "display.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;  type            1    wreg     unsigned char 
  3166 ;;  information     1   16[BANK0 ] unsigned char 
  3167 ;;  value           2   17[BANK0 ] unsigned int 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  type            1   19[BANK0 ] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;		None               void
  3172 ;; Registers used:
  3173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1
  3179 ;;      Params:         0       3       0
  3180 ;;      Locals:         0       1       0
  3181 ;;      Temps:          0       0       0
  3182 ;;      Totals:         0       4       0
  3183 ;;Total ram usage:        4 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    8
  3186 ;; This function calls:
  3187 ;;		_Evaluate_Display
  3188 ;;		_Evaluate_Signs
  3189 ;;		_Write_Display_Byte
  3190 ;; This function is called by:
  3191 ;;		_main
  3192 ;;		_Check_Buttons
  3193 ;;		_Load_Data
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text16
  3198  001184                     __ptext16:
  3199                           	opt stack 0
  3200  001184                     _Set_Display:
  3201                           	opt stack 22
  3202                           
  3203                           ;incstack = 0
  3204                           ;Set_Display@type stored from wreg
  3205  001184  0100               	movlb	0	; () banked
  3206  001186  6F73               	movwf	Set_Display@type& (0+255),b
  3207                           
  3208                           ;display.c: 140: switch (type) {
  3209  001188  D020               	goto	l2864
  3210  00118A                     l2848:
  3211                           
  3212                           ;display.c: 142: if(information != '-') {
  3213  00118A  0E2D               	movlw	45
  3214  00118C  0100               	movlb	0	; () banked
  3215  00118E  1970               	xorwf	Set_Display@information& (0+255),w,b
  3216  001190  B4D8               	btfsc	status,2,c
  3217  001192  D014               	goto	l2860
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;display.c: 143: signs[0] = value;
  3221  001194  C071  F07B         	movff	Set_Display@value,_signs
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;display.c: 144: signs[0] += 0x30;
  3225  001198  0E30               	movlw	48
  3226  00119A  0100               	movlb	0	; () banked
  3227  00119C  277B               	addwf	_signs& (0+255),f,b
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;display.c: 145: signs[1] = '-';
  3231  00119E  0E2D               	movlw	45
  3232  0011A0  0100               	movlb	0	; () banked
  3233  0011A2  6F7C               	movwf	(_signs+1)& (0+255),b
  3234                           
  3235                           ; BSR set to: 0
  3236                           ;display.c: 146: signs[2] = information;
  3237  0011A4  C070  F07D         	movff	Set_Display@information,_signs+2
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;display.c: 147: Evaluate_Display(sizeof(signs), signs);
  3241  0011A8  0E7B               	movlw	low _signs
  3242  0011AA  0100               	movlb	0	; () banked
  3243  0011AC  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3244  0011AE  0E00               	movlw	high _signs
  3245  0011B0  0100               	movlb	0	; () banked
  3246  0011B2  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3247  0011B4  0E03               	movlw	3
  3248  0011B6  ECC7  F003         	call	_Evaluate_Display
  3249                           
  3250                           ;display.c: 148: } else {
  3251  0011BA  D00D               	goto	l2866
  3252  0011BC                     l2860:
  3253                           
  3254                           ;display.c: 149: Evaluate_Signs(value);
  3255  0011BC  C071  F06D         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  3256  0011C0  C072  F06E         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  3257  0011C4  EC50  F008         	call	_Evaluate_Signs	;wreg free
  3258                           
  3259                           ;display.c: 155: }
  3260                           
  3261                           ;display.c: 154: break;
  3262                           
  3263                           ;display.c: 152: case 'L':
  3264                           
  3265                           ;display.c: 150: }
  3266                           ;display.c: 151: break;
  3267  0011C8  D006               	goto	l2866
  3268  0011CA                     l2864:
  3269  0011CA  0100               	movlb	0	; () banked
  3270  0011CC  5173               	movf	Set_Display@type& (0+255),w,b
  3271                           
  3272                           ; Switch size 1, requested type "space"
  3273                           ; Number of cases is 2, Range of values is 55 to 76
  3274                           ; switch strategies available:
  3275                           ; Name         Instructions Cycles
  3276                           ; simple_byte            7     4 (average)
  3277                           ;	Chosen strategy is simple_byte
  3278  0011CE  0A37               	xorlw	55	; case 55
  3279  0011D0  B4D8               	btfsc	status,2,c
  3280  0011D2  D7DB               	goto	l2848
  3281  0011D4  0A7B               	xorlw	123	; case 76
  3282  0011D6                     l2866:
  3283                           
  3284                           ;display.c: 156: Write_Display_Byte(pixels);
  3285  0011D6  0E34               	movlw	low _pixels
  3286  0011D8  0100               	movlb	0	; () banked
  3287  0011DA  6F60               	movwf	Write_Display_Byte@write_data& (0+255),b
  3288  0011DC  0E00               	movlw	high _pixels
  3289  0011DE  0100               	movlb	0	; () banked
  3290  0011E0  6F61               	movwf	(Write_Display_Byte@write_data+1)& (0+255),b
  3291  0011E2  EC57  F009         	call	_Write_Display_Byte	;wreg free
  3292  0011E6  0012               	return		;funcret
  3293  0011E8                     __end_of_Set_Display:
  3294                           	opt stack 0
  3295                           tblptru	equ	0xFF8
  3296                           tblptrh	equ	0xFF7
  3297                           tblptrl	equ	0xFF6
  3298                           tablat	equ	0xFF5
  3299                           prodh	equ	0xFF4
  3300                           prodl	equ	0xFF3
  3301                           intcon	equ	0xFF2
  3302                           postinc0	equ	0xFEE
  3303                           wreg	equ	0xFE8
  3304                           postdec1	equ	0xFE5
  3305                           fsr1l	equ	0xFE1
  3306                           indf2	equ	0xFDF
  3307                           postinc2	equ	0xFDE
  3308                           postdec2	equ	0xFDD
  3309                           plusw2	equ	0xFDB
  3310                           fsr2h	equ	0xFDA
  3311                           fsr2l	equ	0xFD9
  3312                           status	equ	0xFD8
  3313                           
  3314 ;; *************** function _Write_Display_Byte *****************
  3315 ;; Defined at:
  3316 ;;		line 46 in file "communication.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  write_data      2    0[BANK0 ] PTR unsigned char 
  3319 ;;		 -> pixels(7), 
  3320 ;; Auto vars:     Size  Location     Type
  3321 ;;  counter         1    6[BANK0 ] unsigned char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;		None               void
  3324 ;; Registers used:
  3325 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMRAM   BANK0   BANK1
  3331 ;;      Params:         0       2       0
  3332 ;;      Locals:         0       1       0
  3333 ;;      Temps:          0       4       0
  3334 ;;      Totals:         0       7       0
  3335 ;;Total ram usage:        7 bytes
  3336 ;; Hardware stack levels used:    1
  3337 ;; Hardware stack levels required when called:    5
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_Set_Display
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345                           	psect	text17
  3346  0012AE                     __ptext17:
  3347                           	opt stack 0
  3348  0012AE                     _Write_Display_Byte:
  3349                           	opt stack 24
  3350                           
  3351                           ;communication.c: 47: for(unsigned char counter = sizeof(pixels); counter > 0;
  3352                           
  3353                           ;incstack = 0
  3354  0012AE  0E07               	movlw	7
  3355  0012B0  0100               	movlb	0	; () banked
  3356  0012B2  6F66               	movwf	Write_Display_Byte@counter& (0+255),b
  3357  0012B4                     
  3358                           ;communication.c: 48: counter--) {
  3359  0012B4  0100               	movlb	0	; () banked
  3360  0012B6  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3361  0012B8  0100               	movlb	0	; () banked
  3362  0012BA  B4D8               	btfsc	status,2,c
  3363  0012BC  0012               	return	
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;communication.c: 49: if(SSP1IF = 1) {
  3367                           
  3368                           ; BSR set to: 0
  3369  0012BE  869E               	bsf	3998,3,c	;volatile
  3370  0012C0  B69E               	btfsc	3998,3,c	;volatile
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;communication.c: 50: SSP1IF = 0;
  3374  0012C2  969E               	bcf	3998,3,c	;volatile
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;communication.c: 51: }
  3378                           ;communication.c: 52: SSP1BUF = write_data[counter - 1];
  3379                           
  3380                           ; BSR set to: 0
  3381  0012C4  0EFF               	movlw	255
  3382  0012C6  0100               	movlb	0	; () banked
  3383  0012C8  6F62               	movwf	??_Write_Display_Byte& (0+255),b
  3384  0012CA  0EFF               	movlw	255
  3385  0012CC  0100               	movlb	0	; () banked
  3386  0012CE  6F63               	movwf	(??_Write_Display_Byte+1)& (0+255),b
  3387  0012D0  0100               	movlb	0	; () banked
  3388  0012D2  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3389  0012D4  0100               	movlb	0	; () banked
  3390  0012D6  6F64               	movwf	(??_Write_Display_Byte+2)& (0+255),b
  3391  0012D8  6B65               	clrf	(??_Write_Display_Byte+3)& (0+255),b
  3392  0012DA  0100               	movlb	0	; () banked
  3393  0012DC  5162               	movf	??_Write_Display_Byte& (0+255),w,b
  3394  0012DE  0100               	movlb	0	; () banked
  3395  0012E0  2764               	addwf	(??_Write_Display_Byte+2)& (0+255),f,b
  3396  0012E2  0100               	movlb	0	; () banked
  3397  0012E4  5163               	movf	(??_Write_Display_Byte+1)& (0+255),w,b
  3398  0012E6  0100               	movlb	0	; () banked
  3399  0012E8  2365               	addwfc	(??_Write_Display_Byte+3)& (0+255),f,b
  3400  0012EA  0100               	movlb	0	; () banked
  3401  0012EC  5164               	movf	(??_Write_Display_Byte+2)& (0+255),w,b
  3402  0012EE  0100               	movlb	0	; () banked
  3403  0012F0  2560               	addwf	Write_Display_Byte@write_data& (0+255),w,b
  3404  0012F2  6ED9               	movwf	fsr2l,c
  3405  0012F4  0100               	movlb	0	; () banked
  3406  0012F6  5165               	movf	(??_Write_Display_Byte+3)& (0+255),w,b
  3407  0012F8  0100               	movlb	0	; () banked
  3408  0012FA  2161               	addwfc	(Write_Display_Byte@write_data+1)& (0+255),w,b
  3409  0012FC  6EDA               	movwf	fsr2h,c
  3410  0012FE  50DF               	movf	indf2,w,c
  3411  001300  6EC9               	movwf	4041,c	;volatile
  3412  001302                     l512:
  3413  001302  A69E               	btfss	3998,3,c	;volatile
  3414  001304  D7FE               	goto	l512
  3415                           
  3416                           ;communication.c: 54: SSP1IF = 0;
  3417  001306  969E               	bcf	3998,3,c	;volatile
  3418  001308  0100               	movlb	0	; () banked
  3419  00130A  0766               	decf	Write_Display_Byte@counter& (0+255),f,b
  3420  00130C  D7D3               	goto	L3
  3421  00130E                     __end_of_Write_Display_Byte:
  3422                           	opt stack 0
  3423                           tblptru	equ	0xFF8
  3424                           tblptrh	equ	0xFF7
  3425                           tblptrl	equ	0xFF6
  3426                           tablat	equ	0xFF5
  3427                           prodh	equ	0xFF4
  3428                           prodl	equ	0xFF3
  3429                           intcon	equ	0xFF2
  3430                           postinc0	equ	0xFEE
  3431                           wreg	equ	0xFE8
  3432                           postdec1	equ	0xFE5
  3433                           fsr1l	equ	0xFE1
  3434                           indf2	equ	0xFDF
  3435                           postinc2	equ	0xFDE
  3436                           postdec2	equ	0xFDD
  3437                           plusw2	equ	0xFDB
  3438                           fsr2h	equ	0xFDA
  3439                           fsr2l	equ	0xFD9
  3440                           status	equ	0xFD8
  3441                           
  3442 ;; *************** function _Evaluate_Signs *****************
  3443 ;; Defined at:
  3444 ;;		line 118 in file "display.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;  evaluation_v    2   13[BANK0 ] unsigned int 
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;  valuecounter    1   15[BANK0 ] unsigned char 
  3449 ;; Return value:  Size  Location     Type
  3450 ;;		None               void
  3451 ;; Registers used:
  3452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1
  3458 ;;      Params:         0       2       0
  3459 ;;      Locals:         0       1       0
  3460 ;;      Temps:          0       0       0
  3461 ;;      Totals:         0       3       0
  3462 ;;Total ram usage:        3 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    7
  3465 ;; This function calls:
  3466 ;;		_Evaluate_Display
  3467 ;;		___lwmod
  3468 ;; This function is called by:
  3469 ;;		_Set_Display
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text18
  3474  0010A0                     __ptext18:
  3475                           	opt stack 0
  3476  0010A0                     _Evaluate_Signs:
  3477                           	opt stack 22
  3478                           
  3479                           ;display.c: 119: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;incstack = 0
  3483  0010A0  0E00               	movlw	0
  3484  0010A2  0100               	movlb	0	; () banked
  3485  0010A4  6F6F               	movwf	Evaluate_Signs@valuecounter& (0+255),b
  3486  0010A6                     l2810:
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;display.c: 120: valuecounter++) {
  3490  0010A6  0E02               	movlw	2
  3491  0010A8  0100               	movlb	0	; () banked
  3492  0010AA  656F               	cpfsgt	Evaluate_Signs@valuecounter& (0+255),b
  3493  0010AC  D001               	goto	l2814
  3494  0010AE  D029               	goto	l428
  3495  0010B0                     l2814:
  3496                           
  3497                           ; BSR set to: 0
  3498                           ;display.c: 121: signs[valuecounter] = evaluation_value % 10;
  3499  0010B0  0100               	movlb	0	; () banked
  3500  0010B2  516F               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3501  0010B4  0D01               	mullw	1
  3502  0010B6  0E7B               	movlw	low _signs
  3503  0010B8  24F3               	addwf	prodl,w,c
  3504  0010BA  6ED9               	movwf	fsr2l,c
  3505  0010BC  0E00               	movlw	high _signs
  3506  0010BE  20F4               	addwfc	prodh,w,c
  3507  0010C0  6EDA               	movwf	fsr2h,c
  3508  0010C2  C06D  F060         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  3509  0010C6  C06E  F061         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  3510  0010CA  0E00               	movlw	0
  3511  0010CC  0100               	movlb	0	; () banked
  3512  0010CE  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  3513  0010D0  0E0A               	movlw	10
  3514  0010D2  6F62               	movwf	___lwmod@divisor& (0+255),b
  3515  0010D4  EC26  F009         	call	___lwmod	;wreg free
  3516  0010D8  0100               	movlb	0	; () banked
  3517  0010DA  5160               	movf	?___lwmod& (0+255),w,b
  3518  0010DC  6EDF               	movwf	indf2,c
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;display.c: 122: signs[valuecounter] += 0x30;
  3522  0010DE  0100               	movlb	0	; () banked
  3523  0010E0  516F               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3524  0010E2  0D01               	mullw	1
  3525  0010E4  0E7B               	movlw	low _signs
  3526  0010E6  24F3               	addwf	prodl,w,c
  3527  0010E8  6ED9               	movwf	fsr2l,c
  3528  0010EA  0E00               	movlw	high _signs
  3529  0010EC  20F4               	addwfc	prodh,w,c
  3530  0010EE  6EDA               	movwf	fsr2h,c
  3531  0010F0  0E30               	movlw	48
  3532  0010F2  26DF               	addwf	indf2,f,c
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;display.c: 123: evaluation_value >>= 1;
  3536  0010F4  0100               	movlb	0	; () banked
  3537  0010F6  90D8               	bcf	status,0,c
  3538  0010F8  336E               	rrcf	(Evaluate_Signs@evaluation_value+1)& (0+255),f,b
  3539  0010FA  336D               	rrcf	Evaluate_Signs@evaluation_value& (0+255),f,b
  3540                           
  3541                           ; BSR set to: 0
  3542  0010FC  0100               	movlb	0	; () banked
  3543  0010FE  2B6F               	incf	Evaluate_Signs@valuecounter& (0+255),f,b
  3544  001100  D7D2               	goto	l2810
  3545  001102                     l428:
  3546                           
  3547                           ; BSR set to: 0
  3548                           ;display.c: 124: }
  3549                           ;display.c: 125: __nop();
  3550  001102  F000               	nop	
  3551                           
  3552                           ;display.c: 126: Evaluate_Display(sizeof(signs), signs);
  3553  001104  0E7B               	movlw	low _signs
  3554  001106  0100               	movlb	0	; () banked
  3555  001108  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3556  00110A  0E00               	movlw	high _signs
  3557  00110C  0100               	movlb	0	; () banked
  3558  00110E  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3559  001110  0E03               	movlw	3
  3560  001112  ECC7  F003         	call	_Evaluate_Display
  3561  001116  0012               	return		;funcret
  3562  001118                     __end_of_Evaluate_Signs:
  3563                           	opt stack 0
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           prodh	equ	0xFF4
  3569                           prodl	equ	0xFF3
  3570                           intcon	equ	0xFF2
  3571                           postinc0	equ	0xFEE
  3572                           wreg	equ	0xFE8
  3573                           postdec1	equ	0xFE5
  3574                           fsr1l	equ	0xFE1
  3575                           indf2	equ	0xFDF
  3576                           postinc2	equ	0xFDE
  3577                           postdec2	equ	0xFDD
  3578                           plusw2	equ	0xFDB
  3579                           fsr2h	equ	0xFDA
  3580                           fsr2l	equ	0xFD9
  3581                           status	equ	0xFD8
  3582                           
  3583 ;; *************** function ___lwmod *****************
  3584 ;; Defined at:
  3585 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  dividend        2    0[BANK0 ] unsigned int 
  3588 ;;  divisor         2    2[BANK0 ] unsigned int 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  counter         1    4[BANK0 ] unsigned char 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  2    0[BANK0 ] unsigned int 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMRAM   BANK0   BANK1
  3600 ;;      Params:         0       4       0
  3601 ;;      Locals:         0       1       0
  3602 ;;      Temps:          0       0       0
  3603 ;;      Totals:         0       5       0
  3604 ;;Total ram usage:        5 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; Hardware stack levels required when called:    5
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_Evaluate_Signs
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614                           	psect	text19
  3615  00124C                     __ptext19:
  3616                           	opt stack 0
  3617  00124C                     ___lwmod:
  3618                           	opt stack 23
  3619                           
  3620                           ;incstack = 0
  3621  00124C  0100               	movlb	0	; () banked
  3622  00124E  5162               	movf	___lwmod@divisor& (0+255),w,b
  3623  001250  0100               	movlb	0	; () banked
  3624  001252  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3625  001254  B4D8               	btfsc	status,2,c
  3626  001256  D026               	goto	l1001
  3627                           
  3628                           ; BSR set to: 0
  3629  001258  0E01               	movlw	1
  3630  00125A  0100               	movlb	0	; () banked
  3631  00125C  6F64               	movwf	___lwmod@counter& (0+255),b
  3632  00125E  D006               	goto	l2798
  3633  001260                     l2796:
  3634                           
  3635                           ; BSR set to: 0
  3636  001260  0100               	movlb	0	; () banked
  3637  001262  90D8               	bcf	status,0,c
  3638  001264  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  3639  001266  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3640  001268  0100               	movlb	0	; () banked
  3641  00126A  2B64               	incf	___lwmod@counter& (0+255),f,b
  3642  00126C                     l2798:
  3643                           
  3644                           ; BSR set to: 0
  3645  00126C  0100               	movlb	0	; () banked
  3646  00126E  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3647  001270  D7F7               	goto	l2796
  3648  001272                     l2800:
  3649                           
  3650                           ; BSR set to: 0
  3651  001272  0100               	movlb	0	; () banked
  3652  001274  5162               	movf	___lwmod@divisor& (0+255),w,b
  3653  001276  0100               	movlb	0	; () banked
  3654  001278  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  3655  00127A  0100               	movlb	0	; () banked
  3656  00127C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3657  00127E  0100               	movlb	0	; () banked
  3658  001280  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3659  001282  A0D8               	btfss	status,0,c
  3660  001284  D008               	goto	l2804
  3661                           
  3662                           ; BSR set to: 0
  3663  001286  0100               	movlb	0	; () banked
  3664  001288  5162               	movf	___lwmod@divisor& (0+255),w,b
  3665  00128A  0100               	movlb	0	; () banked
  3666  00128C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  3667  00128E  0100               	movlb	0	; () banked
  3668  001290  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3669  001292  0100               	movlb	0	; () banked
  3670  001294  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3671  001296                     l2804:
  3672                           
  3673                           ; BSR set to: 0
  3674  001296  0100               	movlb	0	; () banked
  3675  001298  90D8               	bcf	status,0,c
  3676  00129A  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3677  00129C  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  3678                           
  3679                           ; BSR set to: 0
  3680  00129E  0100               	movlb	0	; () banked
  3681  0012A0  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  3682  0012A2  D7E7               	goto	l2800
  3683  0012A4                     l1001:
  3684                           
  3685                           ; BSR set to: 0
  3686  0012A4  C060  F060         	movff	___lwmod@dividend,?___lwmod
  3687  0012A8  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  3688                           
  3689                           ; BSR set to: 0
  3690  0012AC  0012               	return		;funcret
  3691  0012AE                     __end_of___lwmod:
  3692                           	opt stack 0
  3693                           tblptru	equ	0xFF8
  3694                           tblptrh	equ	0xFF7
  3695                           tblptrl	equ	0xFF6
  3696                           tablat	equ	0xFF5
  3697                           prodh	equ	0xFF4
  3698                           prodl	equ	0xFF3
  3699                           intcon	equ	0xFF2
  3700                           postinc0	equ	0xFEE
  3701                           wreg	equ	0xFE8
  3702                           postdec1	equ	0xFE5
  3703                           fsr1l	equ	0xFE1
  3704                           indf2	equ	0xFDF
  3705                           postinc2	equ	0xFDE
  3706                           postdec2	equ	0xFDD
  3707                           plusw2	equ	0xFDB
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _Evaluate_Display *****************
  3713 ;; Defined at:
  3714 ;;		line 52 in file "display.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;  size            1    wreg     unsigned char 
  3717 ;;  evaluate        2    8[BANK0 ] PTR const unsigned char 
  3718 ;;		 -> signs(3), STR_2(4), STR_1(4), 
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  size            1   12[BANK0 ] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;		None               void
  3723 ;; Registers used:
  3724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1
  3730 ;;      Params:         0       2       0
  3731 ;;      Locals:         0       1       0
  3732 ;;      Temps:          0       2       0
  3733 ;;      Totals:         0       5       0
  3734 ;;Total ram usage:        5 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    6
  3737 ;; This function calls:
  3738 ;;		_Set_Bits
  3739 ;; This function is called by:
  3740 ;;		_Load_Data
  3741 ;;		_Del_Data
  3742 ;;		_Evaluate_Signs
  3743 ;;		_Set_Display
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text20
  3748  00078E                     __ptext20:
  3749                           	opt stack 0
  3750  00078E                     _Evaluate_Display:
  3751                           	opt stack 22
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;incstack = 0
  3755                           ;Evaluate_Display@size stored from wreg
  3756  00078E  0100               	movlb	0	; () banked
  3757  000790  6F6C               	movwf	Evaluate_Display@size& (0+255),b
  3758                           
  3759                           ;display.c: 53: for(display_counter = 0; display_counter < size;
  3760  000792  0E00               	movlw	0
  3761  000794  6E32               	movwf	_display_counter,c
  3762                           
  3763                           ;display.c: 54: display_counter++) {
  3764  000796  D15C               	goto	l2790
  3765  000798                     l2750:
  3766                           
  3767                           ;display.c: 57: Set_Bits("ABCDEF");
  3768  000798  0E23               	movlw	low STR_3
  3769  00079A  0100               	movlb	0	; () banked
  3770  00079C  6F60               	movwf	Set_Bits@bits& (0+255),b
  3771  00079E  0E02               	movlw	high STR_3
  3772  0007A0  0100               	movlb	0	; () banked
  3773  0007A2  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3774  0007A4  0100               	movlb	0	; () banked
  3775  0007A6  5160               	movf	Set_Bits@bits& (0+255),w,b
  3776  0007A8  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3777  0007AA  A4D8               	btfss	status,2,c
  3778  0007AC  0E00               	movlw	low (__mediumconst shr (0+16))
  3779  0007AE  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3780  0007B0  ECE2  F006         	call	_Set_Bits	;wreg free
  3781                           
  3782                           ;display.c: 58: break;
  3783  0007B4  D14C               	goto	l2788
  3784  0007B6                     l2752:
  3785                           
  3786                           ;display.c: 60: Set_Bits("BC");
  3787  0007B6  0E63               	movlw	low (STR_10+1)
  3788  0007B8  0100               	movlb	0	; () banked
  3789  0007BA  6F60               	movwf	Set_Bits@bits& (0+255),b
  3790  0007BC  0E02               	movlw	high (STR_10+1)
  3791  0007BE  0100               	movlb	0	; () banked
  3792  0007C0  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3793  0007C2  0100               	movlb	0	; () banked
  3794  0007C4  5160               	movf	Set_Bits@bits& (0+255),w,b
  3795  0007C6  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3796  0007C8  A4D8               	btfss	status,2,c
  3797  0007CA  0E00               	movlw	low (__mediumconst shr (0+16))
  3798  0007CC  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3799  0007CE  ECE2  F006         	call	_Set_Bits	;wreg free
  3800                           
  3801                           ;display.c: 61: break;
  3802  0007D2  D13D               	goto	l2788
  3803  0007D4                     l2754:
  3804                           
  3805                           ;display.c: 63: Set_Bits("ABDEG");
  3806  0007D4  0E45               	movlw	low STR_5
  3807  0007D6  0100               	movlb	0	; () banked
  3808  0007D8  6F60               	movwf	Set_Bits@bits& (0+255),b
  3809  0007DA  0E02               	movlw	high STR_5
  3810  0007DC  0100               	movlb	0	; () banked
  3811  0007DE  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3812  0007E0  0100               	movlb	0	; () banked
  3813  0007E2  5160               	movf	Set_Bits@bits& (0+255),w,b
  3814  0007E4  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3815  0007E6  A4D8               	btfss	status,2,c
  3816  0007E8  0E00               	movlw	low (__mediumconst shr (0+16))
  3817  0007EA  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3818  0007EC  ECE2  F006         	call	_Set_Bits	;wreg free
  3819                           
  3820                           ;display.c: 64: break;
  3821  0007F0  D12E               	goto	l2788
  3822  0007F2                     l2756:
  3823                           
  3824                           ;display.c: 66: Set_Bits("ABCDG");
  3825  0007F2  0E3F               	movlw	low STR_6
  3826  0007F4  0100               	movlb	0	; () banked
  3827  0007F6  6F60               	movwf	Set_Bits@bits& (0+255),b
  3828  0007F8  0E02               	movlw	high STR_6
  3829  0007FA  0100               	movlb	0	; () banked
  3830  0007FC  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3831  0007FE  0100               	movlb	0	; () banked
  3832  000800  5160               	movf	Set_Bits@bits& (0+255),w,b
  3833  000802  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3834  000804  A4D8               	btfss	status,2,c
  3835  000806  0E00               	movlw	low (__mediumconst shr (0+16))
  3836  000808  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3837  00080A  ECE2  F006         	call	_Set_Bits	;wreg free
  3838                           
  3839                           ;display.c: 67: break;
  3840  00080E  D11F               	goto	l2788
  3841  000810                     l2758:
  3842                           
  3843                           ;display.c: 69: Set_Bits("BCFG");
  3844  000810  0E5D               	movlw	low STR_7
  3845  000812  0100               	movlb	0	; () banked
  3846  000814  6F60               	movwf	Set_Bits@bits& (0+255),b
  3847  000816  0E02               	movlw	high STR_7
  3848  000818  0100               	movlb	0	; () banked
  3849  00081A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3850  00081C  0100               	movlb	0	; () banked
  3851  00081E  5160               	movf	Set_Bits@bits& (0+255),w,b
  3852  000820  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3853  000822  A4D8               	btfss	status,2,c
  3854  000824  0E00               	movlw	low (__mediumconst shr (0+16))
  3855  000826  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3856  000828  ECE2  F006         	call	_Set_Bits	;wreg free
  3857                           
  3858                           ;display.c: 70: break;
  3859  00082C  D110               	goto	l2788
  3860  00082E                     l2760:
  3861                           
  3862                           ;display.c: 72: Set_Bits("ACDFG");
  3863  00082E  0E4B               	movlw	low STR_8
  3864  000830  0100               	movlb	0	; () banked
  3865  000832  6F60               	movwf	Set_Bits@bits& (0+255),b
  3866  000834  0E02               	movlw	high STR_8
  3867  000836  0100               	movlb	0	; () banked
  3868  000838  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3869  00083A  0100               	movlb	0	; () banked
  3870  00083C  5160               	movf	Set_Bits@bits& (0+255),w,b
  3871  00083E  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3872  000840  A4D8               	btfss	status,2,c
  3873  000842  0E00               	movlw	low (__mediumconst shr (0+16))
  3874  000844  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3875  000846  ECE2  F006         	call	_Set_Bits	;wreg free
  3876                           
  3877                           ;display.c: 73: break;
  3878  00084A  D101               	goto	l2788
  3879  00084C                     l2762:
  3880                           
  3881                           ;display.c: 75: Set_Bits("ACDEFG");
  3882  00084C  0E38               	movlw	low STR_9
  3883  00084E  0100               	movlb	0	; () banked
  3884  000850  6F60               	movwf	Set_Bits@bits& (0+255),b
  3885  000852  0E02               	movlw	high STR_9
  3886  000854  0100               	movlb	0	; () banked
  3887  000856  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3888  000858  0100               	movlb	0	; () banked
  3889  00085A  5160               	movf	Set_Bits@bits& (0+255),w,b
  3890  00085C  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3891  00085E  A4D8               	btfss	status,2,c
  3892  000860  0E00               	movlw	low (__mediumconst shr (0+16))
  3893  000862  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3894  000864  ECE2  F006         	call	_Set_Bits	;wreg free
  3895                           
  3896                           ;display.c: 76: break;
  3897  000868  D0F2               	goto	l2788
  3898  00086A                     l2764:
  3899                           
  3900                           ;display.c: 78: Set_Bits("ABC");
  3901  00086A  0E62               	movlw	low STR_10
  3902  00086C  0100               	movlb	0	; () banked
  3903  00086E  6F60               	movwf	Set_Bits@bits& (0+255),b
  3904  000870  0E02               	movlw	high STR_10
  3905  000872  0100               	movlb	0	; () banked
  3906  000874  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3907  000876  0100               	movlb	0	; () banked
  3908  000878  5160               	movf	Set_Bits@bits& (0+255),w,b
  3909  00087A  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3910  00087C  A4D8               	btfss	status,2,c
  3911  00087E  0E00               	movlw	low (__mediumconst shr (0+16))
  3912  000880  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3913  000882  ECE2  F006         	call	_Set_Bits	;wreg free
  3914                           
  3915                           ;display.c: 79: break;
  3916  000886  D0E3               	goto	l2788
  3917  000888                     l2766:
  3918                           
  3919                           ;display.c: 81: Set_Bits("ABCDEFG");
  3920  000888  0E1B               	movlw	low STR_11
  3921  00088A  0100               	movlb	0	; () banked
  3922  00088C  6F60               	movwf	Set_Bits@bits& (0+255),b
  3923  00088E  0E02               	movlw	high STR_11
  3924  000890  0100               	movlb	0	; () banked
  3925  000892  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3926  000894  0100               	movlb	0	; () banked
  3927  000896  5160               	movf	Set_Bits@bits& (0+255),w,b
  3928  000898  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3929  00089A  A4D8               	btfss	status,2,c
  3930  00089C  0E00               	movlw	low (__mediumconst shr (0+16))
  3931  00089E  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3932  0008A0  ECE2  F006         	call	_Set_Bits	;wreg free
  3933                           
  3934                           ;display.c: 82: break;
  3935  0008A4  D0D4               	goto	l2788
  3936  0008A6                     l2768:
  3937                           
  3938                           ;display.c: 84: Set_Bits("ABCDFG");
  3939  0008A6  0E2A               	movlw	low STR_12
  3940  0008A8  0100               	movlb	0	; () banked
  3941  0008AA  6F60               	movwf	Set_Bits@bits& (0+255),b
  3942  0008AC  0E02               	movlw	high STR_12
  3943  0008AE  0100               	movlb	0	; () banked
  3944  0008B0  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3945  0008B2  0100               	movlb	0	; () banked
  3946  0008B4  5160               	movf	Set_Bits@bits& (0+255),w,b
  3947  0008B6  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3948  0008B8  A4D8               	btfss	status,2,c
  3949  0008BA  0E00               	movlw	low (__mediumconst shr (0+16))
  3950  0008BC  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3951  0008BE  ECE2  F006         	call	_Set_Bits	;wreg free
  3952                           
  3953                           ;display.c: 85: break;
  3954  0008C2  D0C5               	goto	l2788
  3955  0008C4                     l2770:
  3956                           
  3957                           ;display.c: 87: Set_Bits("ABCEFG");
  3958  0008C4  0E31               	movlw	low STR_13
  3959  0008C6  0100               	movlb	0	; () banked
  3960  0008C8  6F60               	movwf	Set_Bits@bits& (0+255),b
  3961  0008CA  0E02               	movlw	high STR_13
  3962  0008CC  0100               	movlb	0	; () banked
  3963  0008CE  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3964  0008D0  0100               	movlb	0	; () banked
  3965  0008D2  5160               	movf	Set_Bits@bits& (0+255),w,b
  3966  0008D4  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3967  0008D6  A4D8               	btfss	status,2,c
  3968  0008D8  0E00               	movlw	low (__mediumconst shr (0+16))
  3969  0008DA  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3970  0008DC  ECE2  F006         	call	_Set_Bits	;wreg free
  3971                           
  3972                           ;display.c: 88: break;
  3973  0008E0  D0B6               	goto	l2788
  3974  0008E2                     l2772:
  3975                           
  3976                           ;display.c: 90: Set_Bits("ABCDEF");
  3977  0008E2  0E23               	movlw	low STR_3
  3978  0008E4  0100               	movlb	0	; () banked
  3979  0008E6  6F60               	movwf	Set_Bits@bits& (0+255),b
  3980  0008E8  0E02               	movlw	high STR_3
  3981  0008EA  0100               	movlb	0	; () banked
  3982  0008EC  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3983  0008EE  0100               	movlb	0	; () banked
  3984  0008F0  5160               	movf	Set_Bits@bits& (0+255),w,b
  3985  0008F2  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3986  0008F4  A4D8               	btfss	status,2,c
  3987  0008F6  0E00               	movlw	low (__mediumconst shr (0+16))
  3988  0008F8  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3989  0008FA  ECE2  F006         	call	_Set_Bits	;wreg free
  3990                           
  3991                           ;display.c: 91: break;
  3992  0008FE  D0A7               	goto	l2788
  3993  000900                     l2774:
  3994                           
  3995                           ;display.c: 93: Set_Bits("ADEFG");
  3996  000900  0E57               	movlw	low STR_15
  3997  000902  0100               	movlb	0	; () banked
  3998  000904  6F60               	movwf	Set_Bits@bits& (0+255),b
  3999  000906  0E02               	movlw	high STR_15
  4000  000908  0100               	movlb	0	; () banked
  4001  00090A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4002  00090C  0100               	movlb	0	; () banked
  4003  00090E  5160               	movf	Set_Bits@bits& (0+255),w,b
  4004  000910  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4005  000912  A4D8               	btfss	status,2,c
  4006  000914  0E00               	movlw	low (__mediumconst shr (0+16))
  4007  000916  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4008  000918  ECE2  F006         	call	_Set_Bits	;wreg free
  4009                           
  4010                           ;display.c: 94: break;
  4011  00091C  D098               	goto	l2788
  4012  00091E                     l2776:
  4013                           
  4014                           ;display.c: 96: Set_Bits("DEF");
  4015  00091E  0E26               	movlw	low (STR_3+3)
  4016  000920  0100               	movlb	0	; () banked
  4017  000922  6F60               	movwf	Set_Bits@bits& (0+255),b
  4018  000924  0E02               	movlw	high (STR_3+3)
  4019  000926  0100               	movlb	0	; () banked
  4020  000928  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4021  00092A  0100               	movlb	0	; () banked
  4022  00092C  5160               	movf	Set_Bits@bits& (0+255),w,b
  4023  00092E  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4024  000930  A4D8               	btfss	status,2,c
  4025  000932  0E00               	movlw	low (__mediumconst shr (0+16))
  4026  000934  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4027  000936  ECE2  F006         	call	_Set_Bits	;wreg free
  4028                           
  4029                           ;display.c: 97: break;
  4030  00093A  D089               	goto	l2788
  4031  00093C                     l2778:
  4032                           
  4033                           ;display.c: 99: Set_Bits("ABCDEF");
  4034  00093C  0E23               	movlw	low STR_3
  4035  00093E  0100               	movlb	0	; () banked
  4036  000940  6F60               	movwf	Set_Bits@bits& (0+255),b
  4037  000942  0E02               	movlw	high STR_3
  4038  000944  0100               	movlb	0	; () banked
  4039  000946  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4040  000948  0100               	movlb	0	; () banked
  4041  00094A  5160               	movf	Set_Bits@bits& (0+255),w,b
  4042  00094C  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4043  00094E  A4D8               	btfss	status,2,c
  4044  000950  0E00               	movlw	low (__mediumconst shr (0+16))
  4045  000952  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4046  000954  ECE2  F006         	call	_Set_Bits	;wreg free
  4047                           
  4048                           ;display.c: 100: break;
  4049  000958  D07A               	goto	l2788
  4050  00095A                     l2780:
  4051                           
  4052                           ;display.c: 102: Set_Bits("ABEFG");
  4053  00095A  0E51               	movlw	low STR_18
  4054  00095C  0100               	movlb	0	; () banked
  4055  00095E  6F60               	movwf	Set_Bits@bits& (0+255),b
  4056  000960  0E02               	movlw	high STR_18
  4057  000962  0100               	movlb	0	; () banked
  4058  000964  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4059  000966  0100               	movlb	0	; () banked
  4060  000968  5160               	movf	Set_Bits@bits& (0+255),w,b
  4061  00096A  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4062  00096C  A4D8               	btfss	status,2,c
  4063  00096E  0E00               	movlw	low (__mediumconst shr (0+16))
  4064  000970  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4065  000972  ECE2  F006         	call	_Set_Bits	;wreg free
  4066                           
  4067                           ;display.c: 103: break;
  4068  000976  D06B               	goto	l2788
  4069  000978                     l2782:
  4070                           
  4071                           ;display.c: 105: Set_Bits("G");
  4072  000978  0E43               	movlw	low (STR_6+4)
  4073  00097A  0100               	movlb	0	; () banked
  4074  00097C  6F60               	movwf	Set_Bits@bits& (0+255),b
  4075  00097E  0E02               	movlw	high (STR_6+4)
  4076  000980  0100               	movlb	0	; () banked
  4077  000982  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4078  000984  0100               	movlb	0	; () banked
  4079  000986  5160               	movf	Set_Bits@bits& (0+255),w,b
  4080  000988  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4081  00098A  A4D8               	btfss	status,2,c
  4082  00098C  0E00               	movlw	low (__mediumconst shr (0+16))
  4083  00098E  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4084  000990  ECE2  F006         	call	_Set_Bits	;wreg free
  4085                           
  4086                           ;display.c: 106: break;
  4087  000994  D05C               	goto	l2788
  4088  000996                     l2784:
  4089                           
  4090                           ;display.c: 108: Set_Bits(0);
  4091  000996  0E00               	movlw	0
  4092  000998  0100               	movlb	0	; () banked
  4093  00099A  6F60               	movwf	Set_Bits@bits& (0+255),b
  4094  00099C  0E00               	movlw	0
  4095  00099E  0100               	movlb	0	; () banked
  4096  0009A0  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4097  0009A2  0E00               	movlw	0
  4098  0009A4  0100               	movlb	0	; () banked
  4099  0009A6  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4100  0009A8  ECE2  F006         	call	_Set_Bits	;wreg free
  4101                           
  4102                           ;display.c: 109: }
  4103  0009AC  D050               	goto	l2788
  4104  0009AE                     l2786:
  4105  0009AE  5032               	movf	_display_counter,w,c
  4106  0009B0  0D01               	mullw	1
  4107  0009B2  C068  F06A         	movff	Evaluate_Display@evaluate,??_Evaluate_Display
  4108  0009B6  C069  F06B         	movff	Evaluate_Display@evaluate+1,??_Evaluate_Display+1
  4109  0009BA  50F3               	movf	prodl,w,c
  4110  0009BC  0100               	movlb	0	; () banked
  4111  0009BE  276A               	addwf	??_Evaluate_Display& (0+255),f,b
  4112  0009C0  50F4               	movf	prodh,w,c
  4113  0009C2  0100               	movlb	0	; () banked
  4114  0009C4  236B               	addwfc	(??_Evaluate_Display+1)& (0+255),f,b
  4115  0009C6  C06A  FFF6         	movff	??_Evaluate_Display,tblptrl
  4116  0009CA  C06B  FFF7         	movff	??_Evaluate_Display+1,tblptrh
  4117  0009CE  6AF8               	clrf	tblptru,c
  4118  0009D0  0E01               	movlw	(high __ramtop+-1)
  4119  0009D2  64F7               	cpfsgt	tblptrh,c
  4120  0009D4  D003               	bra	u1967
  4121  0009D6  0008               	tblrd		*
  4122  0009D8  50F5               	movf	tablat,w,c
  4123  0009DA  D005               	bra	u1960
  4124  0009DC                     u1967:
  4125  0009DC  CFF6 FFD9          	movff	tblptrl,fsr2l
  4126  0009E0  CFF7 FFDA          	movff	tblptrh,fsr2h
  4127  0009E4  50DF               	movf	indf2,w,c
  4128  0009E6                     u1960:
  4129                           
  4130                           ; Switch size 1, requested type "space"
  4131                           ; Number of cases is 17, Range of values is 45 to 80
  4132                           ; switch strategies available:
  4133                           ; Name         Instructions Cycles
  4134                           ; simple_byte           52    27 (average)
  4135                           ;	Chosen strategy is simple_byte
  4136  0009E6  0A2D               	xorlw	45	; case 45
  4137  0009E8  B4D8               	btfsc	status,2,c
  4138  0009EA  D7C6               	goto	l2782
  4139  0009EC  0A1D               	xorlw	29	; case 48
  4140  0009EE  B4D8               	btfsc	status,2,c
  4141  0009F0  D6D3               	goto	l2750
  4142  0009F2  0A01               	xorlw	1	; case 49
  4143  0009F4  B4D8               	btfsc	status,2,c
  4144  0009F6  D6DF               	goto	l2752
  4145  0009F8  0A03               	xorlw	3	; case 50
  4146  0009FA  B4D8               	btfsc	status,2,c
  4147  0009FC  D6EB               	goto	l2754
  4148  0009FE  0A01               	xorlw	1	; case 51
  4149  000A00  B4D8               	btfsc	status,2,c
  4150  000A02  D6F7               	goto	l2756
  4151  000A04  0A07               	xorlw	7	; case 52
  4152  000A06  B4D8               	btfsc	status,2,c
  4153  000A08  D703               	goto	l2758
  4154  000A0A  0A01               	xorlw	1	; case 53
  4155  000A0C  B4D8               	btfsc	status,2,c
  4156  000A0E  D70F               	goto	l2760
  4157  000A10  0A03               	xorlw	3	; case 54
  4158  000A12  B4D8               	btfsc	status,2,c
  4159  000A14  D71B               	goto	l2762
  4160  000A16  0A01               	xorlw	1	; case 55
  4161  000A18  B4D8               	btfsc	status,2,c
  4162  000A1A  D727               	goto	l2764
  4163  000A1C  0A0F               	xorlw	15	; case 56
  4164  000A1E  B4D8               	btfsc	status,2,c
  4165  000A20  D733               	goto	l2766
  4166  000A22  0A01               	xorlw	1	; case 57
  4167  000A24  B4D8               	btfsc	status,2,c
  4168  000A26  D73F               	goto	l2768
  4169  000A28  0A78               	xorlw	120	; case 65
  4170  000A2A  B4D8               	btfsc	status,2,c
  4171  000A2C  D74B               	goto	l2770
  4172  000A2E  0A05               	xorlw	5	; case 68
  4173  000A30  B4D8               	btfsc	status,2,c
  4174  000A32  D757               	goto	l2772
  4175  000A34  0A01               	xorlw	1	; case 69
  4176  000A36  B4D8               	btfsc	status,2,c
  4177  000A38  D763               	goto	l2774
  4178  000A3A  0A09               	xorlw	9	; case 76
  4179  000A3C  B4D8               	btfsc	status,2,c
  4180  000A3E  D76F               	goto	l2776
  4181  000A40  0A03               	xorlw	3	; case 79
  4182  000A42  B4D8               	btfsc	status,2,c
  4183  000A44  D77B               	goto	l2778
  4184  000A46  0A1F               	xorlw	31	; case 80
  4185  000A48  B4D8               	btfsc	status,2,c
  4186  000A4A  D787               	goto	l2780
  4187  000A4C  D7A4               	goto	l2784
  4188  000A4E                     l2788:
  4189  000A4E  2A32               	incf	_display_counter,f,c
  4190  000A50                     l2790:
  4191  000A50  0100               	movlb	0	; () banked
  4192  000A52  516C               	movf	Evaluate_Display@size& (0+255),w,b
  4193  000A54  5C32               	subwf	_display_counter,w,c
  4194  000A56  B0D8               	btfsc	status,0,c
  4195  000A58  0012               	return	
  4196  000A5A  D7A9               	goto	l2786
  4197  000A5C                     __end_of_Evaluate_Display:
  4198                           	opt stack 0
  4199                           tblptru	equ	0xFF8
  4200                           tblptrh	equ	0xFF7
  4201                           tblptrl	equ	0xFF6
  4202                           tablat	equ	0xFF5
  4203                           prodh	equ	0xFF4
  4204                           prodl	equ	0xFF3
  4205                           intcon	equ	0xFF2
  4206                           postinc0	equ	0xFEE
  4207                           wreg	equ	0xFE8
  4208                           postdec1	equ	0xFE5
  4209                           fsr1l	equ	0xFE1
  4210                           indf2	equ	0xFDF
  4211                           postinc2	equ	0xFDE
  4212                           postdec2	equ	0xFDD
  4213                           plusw2	equ	0xFDB
  4214                           fsr2h	equ	0xFDA
  4215                           fsr2l	equ	0xFD9
  4216                           status	equ	0xFD8
  4217                           
  4218 ;; *************** function _Set_Bits *****************
  4219 ;; Defined at:
  4220 ;;		line 12 in file "display.c"
  4221 ;; Parameters:    Size  Location     Type
  4222 ;;  bits            3    0[BANK0 ] PTR const unsigned char 
  4223 ;;		 -> ROM(8191), STR_19(2), STR_18(6), STR_17(7), 
  4224 ;;		 -> STR_16(4), STR_15(6), STR_14(7), STR_13(7), 
  4225 ;;		 -> STR_12(7), STR_11(8), STR_10(4), STR_9(7), 
  4226 ;;		 -> STR_8(6), STR_7(5), STR_6(6), STR_5(6), 
  4227 ;;		 -> STR_4(3), STR_3(7), 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  bitcount        1    6[BANK0 ] unsigned char 
  4230 ;;  Bitoutput       1    7[BANK0 ] unsigned char 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;		None               void
  4233 ;; Registers used:
  4234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1
  4240 ;;      Params:         0       3       0
  4241 ;;      Locals:         0       2       0
  4242 ;;      Temps:          0       3       0
  4243 ;;      Totals:         0       8       0
  4244 ;;Total ram usage:        8 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; Hardware stack levels required when called:    5
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_Evaluate_Display
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text21
  4255  000DC4                     __ptext21:
  4256                           	opt stack 0
  4257  000DC4                     _Set_Bits:
  4258                           	opt stack 22
  4259                           
  4260                           ;display.c: 13: unsigned char Bitoutput = 0;
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;incstack = 0
  4264  000DC4  0E00               	movlw	0
  4265  000DC6  0100               	movlb	0	; () banked
  4266  000DC8  6F67               	movwf	Set_Bits@Bitoutput& (0+255),b
  4267                           
  4268                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  4269  000DCA  0E00               	movlw	0
  4270  000DCC  0100               	movlb	0	; () banked
  4271  000DCE  6F66               	movwf	Set_Bits@bitcount& (0+255),b
  4272                           
  4273                           ;display.c: 15: bitcount++) {
  4274  000DD0  D046               	goto	l2744
  4275  000DD2                     l2724:
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;display.c: 18: Bitoutput |= 0b00000001;
  4279  000DD2  0100               	movlb	0	; () banked
  4280  000DD4  8167               	bsf	Set_Bits@Bitoutput& (0+255),0,b
  4281                           
  4282                           ;display.c: 19: break;
  4283  000DD6  D041               	goto	l2742
  4284  000DD8                     l2726:
  4285                           
  4286                           ; BSR set to: 0
  4287                           ;display.c: 21: Bitoutput |= 0b00000010;
  4288  000DD8  0100               	movlb	0	; () banked
  4289  000DDA  8367               	bsf	Set_Bits@Bitoutput& (0+255),1,b
  4290                           
  4291                           ;display.c: 22: break;
  4292  000DDC  D03E               	goto	l2742
  4293  000DDE                     l2728:
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;display.c: 24: Bitoutput |= 0b00000100;
  4297  000DDE  0100               	movlb	0	; () banked
  4298  000DE0  8567               	bsf	Set_Bits@Bitoutput& (0+255),2,b
  4299                           
  4300                           ;display.c: 25: break;
  4301  000DE2  D03B               	goto	l2742
  4302  000DE4                     l2730:
  4303                           
  4304                           ; BSR set to: 0
  4305                           ;display.c: 27: Bitoutput |= 0b00001000;
  4306  000DE4  0100               	movlb	0	; () banked
  4307  000DE6  8767               	bsf	Set_Bits@Bitoutput& (0+255),3,b
  4308                           
  4309                           ;display.c: 28: break;
  4310  000DE8  D038               	goto	l2742
  4311  000DEA                     l2732:
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;display.c: 30: Bitoutput |= 0b00010000;
  4315  000DEA  0100               	movlb	0	; () banked
  4316  000DEC  8967               	bsf	Set_Bits@Bitoutput& (0+255),4,b
  4317                           
  4318                           ;display.c: 31: break;
  4319  000DEE  D035               	goto	l2742
  4320  000DF0                     l2734:
  4321                           
  4322                           ; BSR set to: 0
  4323                           ;display.c: 33: Bitoutput |= 0b00100000;
  4324  000DF0  0100               	movlb	0	; () banked
  4325  000DF2  8B67               	bsf	Set_Bits@Bitoutput& (0+255),5,b
  4326                           
  4327                           ;display.c: 34: break;
  4328  000DF4  D032               	goto	l2742
  4329  000DF6                     l2736:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;display.c: 36: Bitoutput |= 0b01000000;
  4333  000DF6  0100               	movlb	0	; () banked
  4334  000DF8  8D67               	bsf	Set_Bits@Bitoutput& (0+255),6,b
  4335                           
  4336                           ; BSR set to: 0
  4337                           ;display.c: 40: }
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;display.c: 39: break;
  4341                           
  4342                           ;display.c: 38: default:
  4343                           
  4344                           ;display.c: 37: break;
  4345  000DFA  D02F               	goto	l2742
  4346  000DFC                     l2740:
  4347                           
  4348                           ; BSR set to: 0
  4349  000DFC  0100               	movlb	0	; () banked
  4350  000DFE  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4351  000E00  0D01               	mullw	1
  4352  000E02  50F3               	movf	prodl,w,c
  4353  000E04  0100               	movlb	0	; () banked
  4354  000E06  2560               	addwf	Set_Bits@bits& (0+255),w,b
  4355  000E08  0100               	movlb	0	; () banked
  4356  000E0A  6F63               	movwf	??_Set_Bits& (0+255),b
  4357  000E0C  50F4               	movf	prodh,w,c
  4358  000E0E  0100               	movlb	0	; () banked
  4359  000E10  2161               	addwfc	(Set_Bits@bits+1)& (0+255),w,b
  4360  000E12  0100               	movlb	0	; () banked
  4361  000E14  6F64               	movwf	(??_Set_Bits+1)& (0+255),b
  4362  000E16  0E00               	movlw	0
  4363  000E18  0100               	movlb	0	; () banked
  4364  000E1A  2162               	addwfc	(Set_Bits@bits+2)& (0+255),w,b
  4365  000E1C  0100               	movlb	0	; () banked
  4366  000E1E  6F65               	movwf	(??_Set_Bits+2)& (0+255),b
  4367  000E20  C063  FFF6         	movff	??_Set_Bits,tblptrl
  4368  000E24  C064  FFF7         	movff	??_Set_Bits+1,tblptrh
  4369  000E28  C065  FFF8         	movff	??_Set_Bits+2,tblptru
  4370  000E2C  0008               	tblrd		*
  4371  000E2E  50F5               	movf	tablat,w,c
  4372                           
  4373                           ; Switch size 1, requested type "space"
  4374                           ; Number of cases is 7, Range of values is 65 to 71
  4375                           ; switch strategies available:
  4376                           ; Name         Instructions Cycles
  4377                           ; simple_byte           22    12 (average)
  4378                           ;	Chosen strategy is simple_byte
  4379  000E30  0A41               	xorlw	65	; case 65
  4380  000E32  B4D8               	btfsc	status,2,c
  4381  000E34  D7CE               	goto	l2724
  4382  000E36  0A03               	xorlw	3	; case 66
  4383  000E38  B4D8               	btfsc	status,2,c
  4384  000E3A  D7CE               	goto	l2726
  4385  000E3C  0A01               	xorlw	1	; case 67
  4386  000E3E  B4D8               	btfsc	status,2,c
  4387  000E40  D7CE               	goto	l2728
  4388  000E42  0A07               	xorlw	7	; case 68
  4389  000E44  B4D8               	btfsc	status,2,c
  4390  000E46  D7CE               	goto	l2730
  4391  000E48  0A01               	xorlw	1	; case 69
  4392  000E4A  B4D8               	btfsc	status,2,c
  4393  000E4C  D7CE               	goto	l2732
  4394  000E4E  0A03               	xorlw	3	; case 70
  4395  000E50  B4D8               	btfsc	status,2,c
  4396  000E52  D7CE               	goto	l2734
  4397  000E54  0A01               	xorlw	1	; case 71
  4398  000E56  B4D8               	btfsc	status,2,c
  4399  000E58  D7CE               	goto	l2736
  4400  000E5A                     l2742:
  4401                           
  4402                           ; BSR set to: 0
  4403  000E5A  0100               	movlb	0	; () banked
  4404  000E5C  2B66               	incf	Set_Bits@bitcount& (0+255),f,b
  4405  000E5E                     l2744:
  4406                           
  4407                           ; BSR set to: 0
  4408  000E5E  0100               	movlb	0	; () banked
  4409  000E60  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4410  000E62  0D01               	mullw	1
  4411  000E64  50F3               	movf	prodl,w,c
  4412  000E66  0100               	movlb	0	; () banked
  4413  000E68  2560               	addwf	Set_Bits@bits& (0+255),w,b
  4414  000E6A  0100               	movlb	0	; () banked
  4415  000E6C  6F63               	movwf	??_Set_Bits& (0+255),b
  4416  000E6E  50F4               	movf	prodh,w,c
  4417  000E70  0100               	movlb	0	; () banked
  4418  000E72  2161               	addwfc	(Set_Bits@bits+1)& (0+255),w,b
  4419  000E74  0100               	movlb	0	; () banked
  4420  000E76  6F64               	movwf	(??_Set_Bits+1)& (0+255),b
  4421  000E78  0E00               	movlw	0
  4422  000E7A  0100               	movlb	0	; () banked
  4423  000E7C  2162               	addwfc	(Set_Bits@bits+2)& (0+255),w,b
  4424  000E7E  0100               	movlb	0	; () banked
  4425  000E80  6F65               	movwf	(??_Set_Bits+2)& (0+255),b
  4426  000E82  C063  FFF6         	movff	??_Set_Bits,tblptrl
  4427  000E86  C064  FFF7         	movff	??_Set_Bits+1,tblptrh
  4428  000E8A  C065  FFF8         	movff	??_Set_Bits+2,tblptru
  4429  000E8E  0008               	tblrd		*
  4430  000E90  50F5               	movf	tablat,w,c
  4431  000E92  0900               	iorlw	0
  4432  000E94  A4D8               	btfss	status,2,c
  4433  000E96  D7B2               	goto	l2740
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;display.c: 41: }
  4437                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  4438                           
  4439                           ; BSR set to: 0
  4440  000E98  5032               	movf	_display_counter,w,c
  4441  000E9A  0D01               	mullw	1
  4442  000E9C  0E34               	movlw	low _pixels
  4443  000E9E  24F3               	addwf	prodl,w,c
  4444  000EA0  6ED9               	movwf	fsr2l,c
  4445  000EA2  0E00               	movlw	high _pixels
  4446  000EA4  20F4               	addwfc	prodh,w,c
  4447  000EA6  6EDA               	movwf	fsr2h,c
  4448  000EA8  C067  FFDF         	movff	Set_Bits@Bitoutput,indf2
  4449                           
  4450                           ; BSR set to: 0
  4451  000EAC  0012               	return		;funcret
  4452  000EAE                     __end_of_Set_Bits:
  4453                           	opt stack 0
  4454                           tblptru	equ	0xFF8
  4455                           tblptrh	equ	0xFF7
  4456                           tblptrl	equ	0xFF6
  4457                           tablat	equ	0xFF5
  4458                           prodh	equ	0xFF4
  4459                           prodl	equ	0xFF3
  4460                           intcon	equ	0xFF2
  4461                           postinc0	equ	0xFEE
  4462                           wreg	equ	0xFE8
  4463                           postdec1	equ	0xFE5
  4464                           fsr1l	equ	0xFE1
  4465                           indf2	equ	0xFDF
  4466                           postinc2	equ	0xFDE
  4467                           postdec2	equ	0xFDD
  4468                           plusw2	equ	0xFDB
  4469                           fsr2h	equ	0xFDA
  4470                           fsr2l	equ	0xFD9
  4471                           status	equ	0xFD8
  4472                           
  4473 ;; *************** function _Read_Data *****************
  4474 ;; Defined at:
  4475 ;;		line 44 in file "storage.c"
  4476 ;; Parameters:    Size  Location     Type
  4477 ;;  read_address    1    wreg     unsigned char 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  read_address    1    4[BANK0 ] unsigned char 
  4480 ;;  data_read       2    2[BANK0 ] unsigned int 
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  2    0[BANK0 ] unsigned int 
  4483 ;; Registers used:
  4484 ;;		wreg, status,2, status,0
  4485 ;; Tracked objects:
  4486 ;;		On entry : 0/0
  4487 ;;		On exit  : 0/0
  4488 ;;		Unchanged: 0/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1
  4490 ;;      Params:         0       2       0
  4491 ;;      Locals:         0       3       0
  4492 ;;      Temps:          0       0       0
  4493 ;;      Totals:         0       5       0
  4494 ;;Total ram usage:        5 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    5
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_Check_Buttons
  4501 ;;		_Load_Data
  4502 ;; This function uses a non-reentrant model
  4503 ;;
  4504                           
  4505                           	psect	text22
  4506  0013B8                     __ptext22:
  4507                           	opt stack 0
  4508  0013B8                     _Read_Data:
  4509                           	opt stack 24
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;incstack = 0
  4513                           ;Read_Data@read_address stored from wreg
  4514  0013B8  0100               	movlb	0	; () banked
  4515  0013BA  6F64               	movwf	Read_Data@read_address& (0+255),b
  4516                           
  4517                           ;storage.c: 45: unsigned int data_read = 0;
  4518  0013BC  0E00               	movlw	0
  4519  0013BE  0100               	movlb	0	; () banked
  4520  0013C0  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4521  0013C2  0E00               	movlw	0
  4522  0013C4  6F62               	movwf	Read_Data@data_read& (0+255),b
  4523                           
  4524                           ; BSR set to: 0
  4525                           ;storage.c: 46: read_address += 50;
  4526  0013C6  0E32               	movlw	50
  4527  0013C8  0100               	movlb	0	; () banked
  4528  0013CA  2764               	addwf	Read_Data@read_address& (0+255),f,b
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;storage.c: 47: EEADR = read_address;
  4532  0013CC  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;storage.c: 48: EECON1bits.EEPGD = 0;
  4536  0013D0  9EA6               	bcf	4006,7,c	;volatile
  4537                           
  4538                           ; BSR set to: 0
  4539                           ;storage.c: 49: EECON1bits.CFGS = 0;
  4540  0013D2  9CA6               	bcf	4006,6,c	;volatile
  4541                           
  4542                           ; BSR set to: 0
  4543                           ;storage.c: 50: EECON1bits.RD = 1;
  4544  0013D4  80A6               	bsf	4006,0,c	;volatile
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;storage.c: 51: data_read = EEDATA;
  4548  0013D6  CFA8 F062          	movff	4008,Read_Data@data_read	;volatile
  4549  0013DA  0100               	movlb	0	; () banked
  4550  0013DC  6B63               	clrf	(Read_Data@data_read+1)& (0+255),b
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;storage.c: 52: read_address -= 50;
  4554  0013DE  0E32               	movlw	50
  4555  0013E0  0100               	movlb	0	; () banked
  4556  0013E2  5F64               	subwf	Read_Data@read_address& (0+255),f,b
  4557                           
  4558                           ; BSR set to: 0
  4559                           ;storage.c: 53: data_read <<= 8;
  4560  0013E4  0100               	movlb	0	; () banked
  4561  0013E6  5162               	movf	Read_Data@data_read& (0+255),w,b
  4562  0013E8  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4563  0013EA  6B62               	clrf	Read_Data@data_read& (0+255),b
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;storage.c: 54: EEADR = read_address;
  4567  0013EC  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;storage.c: 55: EECON1bits.EEPGD = 0;
  4571  0013F0  9EA6               	bcf	4006,7,c	;volatile
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;storage.c: 56: EECON1bits.CFGS = 0;
  4575  0013F2  9CA6               	bcf	4006,6,c	;volatile
  4576                           
  4577                           ; BSR set to: 0
  4578                           ;storage.c: 57: EECON1bits.RD = 1;
  4579  0013F4  80A6               	bsf	4006,0,c	;volatile
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;storage.c: 58: data_read |= EEDATA;
  4583  0013F6  50A8               	movf	4008,w,c	;volatile
  4584  0013F8  0100               	movlb	0	; () banked
  4585  0013FA  1362               	iorwf	Read_Data@data_read& (0+255),f,b
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;storage.c: 59: return data_read;
  4589  0013FC  C062  F060         	movff	Read_Data@data_read,?_Read_Data
  4590  001400  C063  F061         	movff	Read_Data@data_read+1,?_Read_Data+1
  4591  001404  0012               	return	
  4592  001406                     __end_of_Read_Data:
  4593                           	opt stack 0
  4594                           tblptru	equ	0xFF8
  4595                           tblptrh	equ	0xFF7
  4596                           tblptrl	equ	0xFF6
  4597                           tablat	equ	0xFF5
  4598                           prodh	equ	0xFF4
  4599                           prodl	equ	0xFF3
  4600                           intcon	equ	0xFF2
  4601                           postinc0	equ	0xFEE
  4602                           wreg	equ	0xFE8
  4603                           postdec1	equ	0xFE5
  4604                           fsr1l	equ	0xFE1
  4605                           indf2	equ	0xFDF
  4606                           postinc2	equ	0xFDE
  4607                           postdec2	equ	0xFDD
  4608                           plusw2	equ	0xFDB
  4609                           fsr2h	equ	0xFDA
  4610                           fsr2l	equ	0xFD9
  4611                           status	equ	0xFD8
  4612                           
  4613 ;; *************** function _Delay_Routine *****************
  4614 ;; Defined at:
  4615 ;;		line 78 in file "main.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  delay_multip    1    wreg     unsigned char 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  delay_multip    1    1[BANK0 ] unsigned char 
  4620 ;;  delay_counte    1    2[BANK0 ] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;		None               void
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1
  4630 ;;      Params:         0       0       0
  4631 ;;      Locals:         0       2       0
  4632 ;;      Temps:          0       1       0
  4633 ;;      Totals:         0       3       0
  4634 ;;Total ram usage:        3 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    5
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_Check_Buttons
  4641 ;;		_Load_Data
  4642 ;;		_Del_Data
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text23
  4647  001628                     __ptext23:
  4648                           	opt stack 0
  4649  001628                     _Delay_Routine:
  4650                           	opt stack 24
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;incstack = 0
  4654                           ;Delay_Routine@delay_multiplyer stored from wreg
  4655  001628  0100               	movlb	0	; () banked
  4656  00162A  6F61               	movwf	Delay_Routine@delay_multiplyer& (0+255),b
  4657                           
  4658                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  4659  00162C  0E00               	movlw	0
  4660  00162E  0100               	movlb	0	; () banked
  4661  001630  6F62               	movwf	Delay_Routine@delay_counter& (0+255),b
  4662                           
  4663                           ;main.c: 80: delay_counter++) {
  4664  001632  D00A               	goto	l2844
  4665  001634                     l2840:
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  4669  001634  0E82               	movlw	130
  4670  001636  0100               	movlb	0	; () banked
  4671  001638  6F60               	movwf	??_Delay_Routine& (0+255),b
  4672  00163A  0EDE               	movlw	222
  4673  00163C                     u2497:
  4674  00163C  2EE8               	decfsz	wreg,f,c
  4675  00163E  D7FE               	goto	u2497
  4676  001640  2F60               	decfsz	??_Delay_Routine& (0+255),f,b
  4677  001642  D7FC               	goto	u2497
  4678  001644  0100               	movlb	0	; () banked
  4679  001646  2B62               	incf	Delay_Routine@delay_counter& (0+255),f,b
  4680  001648                     l2844:
  4681                           
  4682                           ; BSR set to: 0
  4683  001648  0100               	movlb	0	; () banked
  4684  00164A  5161               	movf	Delay_Routine@delay_multiplyer& (0+255),w,b
  4685  00164C  0100               	movlb	0	; () banked
  4686  00164E  5D62               	subwf	Delay_Routine@delay_counter& (0+255),w,b
  4687  001650  A0D8               	btfss	status,0,c
  4688  001652  D7F0               	goto	l2840
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;main.c: 82: }
  4692                           ;main.c: 83: __nop();
  4693  001654  F000               	nop	
  4694  001656  0012               	return		;funcret
  4695  001658                     __end_of_Delay_Routine:
  4696                           	opt stack 0
  4697                           tblptru	equ	0xFF8
  4698                           tblptrh	equ	0xFF7
  4699                           tblptrl	equ	0xFF6
  4700                           tablat	equ	0xFF5
  4701                           prodh	equ	0xFF4
  4702                           prodl	equ	0xFF3
  4703                           intcon	equ	0xFF2
  4704                           postinc0	equ	0xFEE
  4705                           wreg	equ	0xFE8
  4706                           postdec1	equ	0xFE5
  4707                           fsr1l	equ	0xFE1
  4708                           indf2	equ	0xFDF
  4709                           postinc2	equ	0xFDE
  4710                           postdec2	equ	0xFDD
  4711                           plusw2	equ	0xFDB
  4712                           fsr2h	equ	0xFDA
  4713                           fsr2l	equ	0xFD9
  4714                           status	equ	0xFD8
  4715                           
  4716 ;; *************** function _Isr *****************
  4717 ;; Defined at:
  4718 ;;		line 4 in file "interrupt.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;		None
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;  search_index    1   39[COMRAM] unsigned char 
  4723 ;;  pixel_index_    1   38[COMRAM] unsigned char 
  4724 ;;  pixel_index_    1   37[COMRAM] unsigned char 
  4725 ;; Return value:  Size  Location     Type
  4726 ;;		None               void
  4727 ;; Registers used:
  4728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4729 ;; Tracked objects:
  4730 ;;		On entry : 0/0
  4731 ;;		On exit  : 0/0
  4732 ;;		Unchanged: 0/0
  4733 ;; Data sizes:     COMRAM   BANK0   BANK1
  4734 ;;      Params:         0       0       0
  4735 ;;      Locals:         3       0       0
  4736 ;;      Temps:         17       0       0
  4737 ;;      Totals:        20       0       0
  4738 ;;Total ram usage:       20 bytes
  4739 ;; Hardware stack levels used:    1
  4740 ;; Hardware stack levels required when called:    4
  4741 ;; This function calls:
  4742 ;;		_Ignite_Detonators
  4743 ;;		_Receive
  4744 ;;		___awdiv
  4745 ;;		i2_Check_Detonators
  4746 ;;		i2_Set_Display
  4747 ;; This function is called by:
  4748 ;;		Interrupt level 2
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	intcode
  4753  000008                     __pintcode:
  4754                           	opt stack 0
  4755  000008                     _Isr:
  4756                           	opt stack 19
  4757                           
  4758                           ;incstack = 0
  4759  000008  823C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4760  00000A  CFFA F018          	movff	pclath,??_Isr+3
  4761  00000E  CFFB F019          	movff	pclatu,??_Isr+4
  4762  000012  CFE9 F01A          	movff	fsr0l,??_Isr+5
  4763  000016  CFEA F01B          	movff	fsr0h,??_Isr+6
  4764  00001A  CFE1 F01C          	movff	fsr1l,??_Isr+7
  4765  00001E  CFE2 F01D          	movff	fsr1h,??_Isr+8
  4766  000022  CFD9 F01E          	movff	fsr2l,??_Isr+9
  4767  000026  CFDA F01F          	movff	fsr2h,??_Isr+10
  4768  00002A  CFF3 F020          	movff	prodl,??_Isr+11
  4769  00002E  CFF4 F021          	movff	prodh,??_Isr+12
  4770  000032  CFF6 F022          	movff	tblptrl,??_Isr+13
  4771  000036  CFF7 F023          	movff	tblptrh,??_Isr+14
  4772  00003A  CFF8 F024          	movff	tblptru,??_Isr+15
  4773  00003E  CFF5 F025          	movff	tablat,??_Isr+16
  4774                           
  4775                           ;interrupt.c: 5: if(PIR1bits.CCP1IF == 1) {
  4776  000042  A49E               	btfss	3998,2,c	;volatile
  4777  000044  D00B               	goto	i2l2652
  4778                           
  4779                           ;interrupt.c: 7: PIR1bits.CCP1IF = 0;
  4780  000046  949E               	bcf	3998,2,c	;volatile
  4781                           
  4782                           ;interrupt.c: 8: T1CONbits.TMR1ON = 1;
  4783  000048  80CD               	bsf	4045,0,c	;volatile
  4784                           
  4785                           ;interrupt.c: 9: T3CONbits.TMR3ON = 0;
  4786  00004A  90B1               	bcf	4017,0,c	;volatile
  4787                           
  4788                           ;interrupt.c: 10: TMR3L = 0;
  4789  00004C  0E00               	movlw	0
  4790  00004E  6EB2               	movwf	4018,c	;volatile
  4791                           
  4792                           ;interrupt.c: 11: TMR3H = 0;
  4793  000050  0E00               	movlw	0
  4794  000052  6EB3               	movwf	4019,c	;volatile
  4795                           
  4796                           ;interrupt.c: 12: current_time++;
  4797  000054  4A2F               	infsnz	_current_time,f,c
  4798  000056  2A30               	incf	_current_time+1,f,c
  4799                           
  4800                           ;interrupt.c: 13: Ignite_Detonators();
  4801  000058  EC8C  F008         	call	_Ignite_Detonators	;wreg free
  4802  00005C                     i2l2652:
  4803                           
  4804                           ;interrupt.c: 14: }
  4805                           ;interrupt.c: 15: if(PIR1bits.TMR1IF == 1) {
  4806  00005C  A09E               	btfss	3998,0,c	;volatile
  4807  00005E  D007               	goto	i2l2658
  4808                           
  4809                           ;interrupt.c: 16: PIR1bits.TMR1IF = 0;
  4810  000060  909E               	bcf	3998,0,c	;volatile
  4811                           
  4812                           ;interrupt.c: 17: T3CONbits.TMR3ON = 1;
  4813  000062  80B1               	bsf	4017,0,c	;volatile
  4814                           
  4815                           ;interrupt.c: 18: T1CONbits.TMR1ON = 0;
  4816  000064  90CD               	bcf	4045,0,c	;volatile
  4817                           
  4818                           ;interrupt.c: 19: TMR1L = 0;
  4819  000066  0E00               	movlw	0
  4820  000068  6ECE               	movwf	4046,c	;volatile
  4821                           
  4822                           ;interrupt.c: 20: TMR1H = 0;
  4823  00006A  0E00               	movlw	0
  4824  00006C  6ECF               	movwf	4047,c	;volatile
  4825  00006E                     i2l2658:
  4826                           
  4827                           ;interrupt.c: 21: }
  4828                           ;interrupt.c: 22: if(PIR1bits.RCIF == 1) {
  4829  00006E  AA9E               	btfss	3998,5,c	;volatile
  4830  000070  D0B4               	goto	i2l588
  4831                           
  4832                           ;interrupt.c: 23: PIR1bits.RCIF = 0;
  4833  000072  9A9E               	bcf	3998,5,c	;volatile
  4834                           
  4835                           ;interrupt.c: 24: if(RCSTAbits.RX9D == 1) {
  4836  000074  A0AB               	btfss	4011,0,c	;volatile
  4837  000076  D016               	goto	i2l575
  4838                           
  4839                           ;interrupt.c: 25: receive_counter = 0;
  4840  000078  0E00               	movlw	0
  4841  00007A  6E33               	movwf	_receive_counter,c
  4842                           
  4843                           ;interrupt.c: 27: received[receive_counter] =
  4844                           ;interrupt.c: 28: Receive();
  4845  00007C  5033               	movf	_receive_counter,w,c
  4846  00007E  0D01               	mullw	1
  4847  000080  0E29               	movlw	low _received
  4848  000082  24F3               	addwf	prodl,w,c
  4849  000084  6ED9               	movwf	fsr2l,c
  4850  000086  0E00               	movlw	high _received
  4851  000088  20F4               	addwfc	prodh,w,c
  4852  00008A  6EDA               	movwf	fsr2h,c
  4853  00008C  EC8D  F00B         	call	_Receive	;wreg free
  4854  000090  6EDF               	movwf	indf2,c
  4855                           
  4856                           ;interrupt.c: 29: receive_counter++;
  4857  000092  2A33               	incf	_receive_counter,f,c
  4858                           
  4859                           ;interrupt.c: 31: if(received[0] == 0xAA) {
  4860  000094  0EAA               	movlw	170
  4861  000096  1829               	xorwf	_received,w,c
  4862  000098  A4D8               	btfss	status,2,c
  4863  00009A  D002               	goto	i2l576
  4864                           
  4865                           ;interrupt.c: 32: master_addressed = 1;
  4866  00009C  823B               	bsf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4867                           
  4868                           ;interrupt.c: 33: } else {
  4869  00009E  D090               	goto	i2l2708
  4870  0000A0                     i2l576:
  4871                           
  4872                           ;interrupt.c: 34: master_addressed = 0;
  4873  0000A0  923B               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4874                           
  4875                           ;interrupt.c: 35: }
  4876                           ;interrupt.c: 36: } else if(master_addressed == 1) {
  4877  0000A2  D08E               	goto	i2l2708
  4878  0000A4                     i2l575:
  4879  0000A4  A23B               	btfss	_master_addressed/(0+8),_master_addressed& (0+7),c
  4880  0000A6  D08C               	goto	i2l2708
  4881                           
  4882                           ;interrupt.c: 37: received[receive_counter] =
  4883                           ;interrupt.c: 38: Receive();
  4884  0000A8  5033               	movf	_receive_counter,w,c
  4885  0000AA  0D01               	mullw	1
  4886  0000AC  0E29               	movlw	low _received
  4887  0000AE  24F3               	addwf	prodl,w,c
  4888  0000B0  6ED9               	movwf	fsr2l,c
  4889  0000B2  0E00               	movlw	high _received
  4890  0000B4  20F4               	addwfc	prodh,w,c
  4891  0000B6  6EDA               	movwf	fsr2h,c
  4892  0000B8  EC8D  F00B         	call	_Receive	;wreg free
  4893  0000BC  6EDF               	movwf	indf2,c
  4894                           
  4895                           ;interrupt.c: 39: receive_counter++;
  4896  0000BE  2A33               	incf	_receive_counter,f,c
  4897                           
  4898                           ;interrupt.c: 41: if(receive_counter > 5) {
  4899  0000C0  0E05               	movlw	5
  4900  0000C2  6433               	cpfsgt	_receive_counter,c
  4901  0000C4  D07D               	goto	i2l2708
  4902                           
  4903                           ;interrupt.c: 42: receive_counter = 0;
  4904  0000C6  0E00               	movlw	0
  4905  0000C8  6E33               	movwf	_receive_counter,c
  4906                           
  4907                           ;interrupt.c: 43: master_addressed = 0;
  4908  0000CA  923B               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4909                           
  4910                           ;interrupt.c: 45: if(received[2] == 'T') {
  4911  0000CC  0E54               	movlw	84
  4912  0000CE  182B               	xorwf	_received+2,w,c
  4913  0000D0  A4D8               	btfss	status,2,c
  4914  0000D2  D076               	goto	i2l2708
  4915                           
  4916                           ;interrupt.c: 46: unsigned char search_index = 0xFF;
  4917  0000D4  6828               	setf	Isr@search_index,c
  4918                           
  4919                           ;interrupt.c: 47: unsigned char pixel_index_array = 0;
  4920  0000D6  0E00               	movlw	0
  4921  0000D8  6E26               	movwf	Isr@pixel_index_array,c
  4922                           
  4923                           ;interrupt.c: 48: unsigned char pixel_index_bit = 0;
  4924  0000DA  0E00               	movlw	0
  4925  0000DC  6E27               	movwf	Isr@pixel_index_bit,c
  4926                           
  4927                           ;interrupt.c: 49: search_index = (received[1] * 10);
  4928  0000DE  502A               	movf	_received+1,w,c
  4929  0000E0  0D0A               	mullw	10
  4930  0000E2  CFF3 F028          	movff	prodl,Isr@search_index
  4931                           
  4932                           ;interrupt.c: 51: search_index += received[3];
  4933  0000E6  502C               	movf	_received+3,w,c
  4934  0000E8  2628               	addwf	Isr@search_index,f,c
  4935                           
  4936                           ;interrupt.c: 53: pixel_index_array =
  4937                           ;interrupt.c: 54: pin[search_index].led_address / 8;
  4938  0000EA  5028               	movf	Isr@search_index,w,c
  4939  0000EC  0D06               	mullw	6
  4940  0000EE  0E03               	movlw	3
  4941  0000F0  26F3               	addwf	prodl,f,c
  4942  0000F2  0E00               	movlw	0
  4943  0000F4  22F4               	addwfc	prodh,f,c
  4944  0000F6  0E00               	movlw	low _pin
  4945  0000F8  24F3               	addwf	prodl,w,c
  4946  0000FA  6ED9               	movwf	fsr2l,c
  4947  0000FC  0E01               	movlw	high _pin
  4948  0000FE  20F4               	addwfc	prodh,w,c
  4949  000100  6EDA               	movwf	fsr2h,c
  4950  000102  50DF               	movf	indf2,w,c
  4951  000104  6E15               	movwf	??_Isr& (0+255),c
  4952  000106  5015               	movf	??_Isr,w,c
  4953  000108  6E01               	movwf	___awdiv@dividend,c
  4954  00010A  6A02               	clrf	___awdiv@dividend+1,c
  4955  00010C  0E00               	movlw	0
  4956  00010E  6E04               	movwf	___awdiv@divisor+1,c
  4957  000110  0E08               	movlw	8
  4958  000112  6E03               	movwf	___awdiv@divisor,c
  4959  000114  EC0E  F008         	call	___awdiv	;wreg free
  4960  000118  5001               	movf	?___awdiv,w,c
  4961  00011A  6E26               	movwf	Isr@pixel_index_array,c
  4962                           
  4963                           ;interrupt.c: 55: pixel_index_bit =
  4964                           ;interrupt.c: 56: pin[search_index].led_address % 8;
  4965  00011C  5028               	movf	Isr@search_index,w,c
  4966  00011E  0D06               	mullw	6
  4967  000120  0E03               	movlw	3
  4968  000122  26F3               	addwf	prodl,f,c
  4969  000124  0E00               	movlw	0
  4970  000126  22F4               	addwfc	prodh,f,c
  4971  000128  0E00               	movlw	low _pin
  4972  00012A  24F3               	addwf	prodl,w,c
  4973  00012C  6ED9               	movwf	fsr2l,c
  4974  00012E  0E01               	movlw	high _pin
  4975  000130  20F4               	addwfc	prodh,w,c
  4976  000132  6EDA               	movwf	fsr2h,c
  4977  000134  50DF               	movf	indf2,w,c
  4978  000136  0B07               	andlw	7
  4979  000138  6E27               	movwf	Isr@pixel_index_bit,c
  4980                           
  4981                           ;interrupt.c: 57: if(received[4] == '1'){
  4982  00013A  0E31               	movlw	49
  4983  00013C  182D               	xorwf	_received+4,w,c
  4984  00013E  A4D8               	btfss	status,2,c
  4985  000140  D015               	goto	i2l2700
  4986                           
  4987                           ;interrupt.c: 58: pixels[pixel_index_array] |=
  4988                           ;interrupt.c: 59: (1 << pixel_index_bit);
  4989  000142  C027  F015         	movff	Isr@pixel_index_bit,??_Isr
  4990  000146  0E01               	movlw	1
  4991  000148  6E16               	movwf	(??_Isr+1)& (0+255),c
  4992  00014A  2A15               	incf	??_Isr,f,c
  4993  00014C  D002               	goto	i2u189_44
  4994  00014E                     i2u189_45:
  4995  00014E  90D8               	bcf	status,0,c
  4996  000150  3616               	rlcf	??_Isr+1,f,c
  4997  000152                     i2u189_44:
  4998  000152  2E15               	decfsz	??_Isr,f,c
  4999  000154  D7FC               	goto	i2u189_45
  5000  000156  5026               	movf	Isr@pixel_index_array,w,c
  5001  000158  0D01               	mullw	1
  5002  00015A  0E34               	movlw	low _pixels
  5003  00015C  24F3               	addwf	prodl,w,c
  5004  00015E  6ED9               	movwf	fsr2l,c
  5005  000160  0E00               	movlw	high _pixels
  5006  000162  20F4               	addwfc	prodh,w,c
  5007  000164  6EDA               	movwf	fsr2h,c
  5008  000166  5016               	movf	??_Isr+1,w,c
  5009  000168  12DF               	iorwf	indf2,f,c
  5010                           
  5011                           ;interrupt.c: 60: }else if(received[4] == '0') {
  5012  00016A  D01B               	goto	i2l2704
  5013  00016C                     i2l2700:
  5014  00016C  0E30               	movlw	48
  5015  00016E  182D               	xorwf	_received+4,w,c
  5016  000170  A4D8               	btfss	status,2,c
  5017  000172  D017               	goto	i2l2704
  5018                           
  5019                           ;interrupt.c: 61: pixels[pixel_index_array] &=
  5020                           ;interrupt.c: 62: ~(1 << pixel_index_bit);
  5021  000174  C027  F015         	movff	Isr@pixel_index_bit,??_Isr
  5022  000178  0E01               	movlw	1
  5023  00017A  6E16               	movwf	(??_Isr+1)& (0+255),c
  5024  00017C  2A15               	incf	??_Isr,f,c
  5025  00017E  D002               	goto	i2u191_44
  5026  000180                     i2u191_45:
  5027  000180  90D8               	bcf	status,0,c
  5028  000182  3616               	rlcf	??_Isr+1,f,c
  5029  000184                     i2u191_44:
  5030  000184  2E15               	decfsz	??_Isr,f,c
  5031  000186  D7FC               	goto	i2u191_45
  5032  000188  5016               	movf	??_Isr+1,w,c
  5033  00018A  0AFF               	xorlw	255
  5034  00018C  6E17               	movwf	(??_Isr+2)& (0+255),c
  5035  00018E  5026               	movf	Isr@pixel_index_array,w,c
  5036  000190  0D01               	mullw	1
  5037  000192  0E34               	movlw	low _pixels
  5038  000194  24F3               	addwf	prodl,w,c
  5039  000196  6ED9               	movwf	fsr2l,c
  5040  000198  0E00               	movlw	high _pixels
  5041  00019A  20F4               	addwfc	prodh,w,c
  5042  00019C  6EDA               	movwf	fsr2h,c
  5043  00019E  5017               	movf	??_Isr+2,w,c
  5044  0001A0  16DF               	andwf	indf2,f,c
  5045  0001A2                     i2l2704:
  5046                           
  5047                           ;interrupt.c: 63: }
  5048                           ;interrupt.c: 64: if(received[5] == '1') {
  5049  0001A2  0E31               	movlw	49
  5050  0001A4  182E               	xorwf	_received+5,w,c
  5051  0001A6  A4D8               	btfss	status,2,c
  5052  0001A8  D00B               	goto	i2l2708
  5053                           
  5054                           ;interrupt.c: 65: Set_Display('7', 'P', (received[1] + 1));
  5055  0001AA  0E50               	movlw	80
  5056  0001AC  6E11               	movwf	i2Set_Display@information,c
  5057  0001AE  0E01               	movlw	1
  5058  0001B0  242A               	addwf	_received+1,w,c
  5059  0001B2  6E12               	movwf	i2Set_Display@value,c
  5060  0001B4  6A13               	clrf	i2Set_Display@value+1,c
  5061  0001B6  0E00               	movlw	0
  5062  0001B8  2213               	addwfc	i2Set_Display@value+1,f,c
  5063  0001BA  0E37               	movlw	55
  5064  0001BC  EC87  F009         	call	i2_Set_Display
  5065  0001C0                     i2l2708:
  5066                           
  5067                           ;interrupt.c: 66: }
  5068                           ;interrupt.c: 67: }
  5069                           ;interrupt.c: 68: }
  5070                           ;interrupt.c: 69: }
  5071                           ;interrupt.c: 70: __nop();
  5072  0001C0  F000               	nop	
  5073                           
  5074                           ;interrupt.c: 71: if(check_counter < 30 && testflag == 1) {
  5075  0001C2  0E1E               	movlw	30
  5076  0001C4  6031               	cpfslt	_check_counter,c
  5077  0001C6  D006               	goto	i2l2718
  5078  0001C8  A63B               	btfss	_testflag/(0+8),_testflag& (0+7),c
  5079  0001CA  D004               	goto	i2l2718
  5080                           
  5081                           ;interrupt.c: 72: check_counter++;
  5082  0001CC  2A31               	incf	_check_counter,f,c
  5083                           
  5084                           ;interrupt.c: 73: Check_Detonators();
  5085  0001CE  ECC5  F00A         	call	i2_Check_Detonators	;wreg free
  5086                           
  5087                           ;interrupt.c: 74: }else {
  5088  0001D2  D003               	goto	i2l588
  5089  0001D4                     i2l2718:
  5090                           
  5091                           ;interrupt.c: 75: check_counter = 0;
  5092  0001D4  0E00               	movlw	0
  5093  0001D6  6E31               	movwf	_check_counter,c
  5094                           
  5095                           ;interrupt.c: 76: testflag = 0;
  5096  0001D8  963B               	bcf	_testflag/(0+8),_testflag& (0+7),c
  5097  0001DA                     i2l588:
  5098  0001DA  C025  FFF5         	movff	??_Isr+16,tablat
  5099  0001DE  C024  FFF8         	movff	??_Isr+15,tblptru
  5100  0001E2  C023  FFF7         	movff	??_Isr+14,tblptrh
  5101  0001E6  C022  FFF6         	movff	??_Isr+13,tblptrl
  5102  0001EA  C021  FFF4         	movff	??_Isr+12,prodh
  5103  0001EE  C020  FFF3         	movff	??_Isr+11,prodl
  5104  0001F2  C01F  FFDA         	movff	??_Isr+10,fsr2h
  5105  0001F6  C01E  FFD9         	movff	??_Isr+9,fsr2l
  5106  0001FA  C01D  FFE2         	movff	??_Isr+8,fsr1h
  5107  0001FE  C01C  FFE1         	movff	??_Isr+7,fsr1l
  5108  000202  C01B  FFEA         	movff	??_Isr+6,fsr0h
  5109  000206  C01A  FFE9         	movff	??_Isr+5,fsr0l
  5110  00020A  C019  FFFB         	movff	??_Isr+4,pclatu
  5111  00020E  C018  FFFA         	movff	??_Isr+3,pclath
  5112  000212  923C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5113  000214  0011               	retfie		f
  5114  000216                     __end_of_Isr:
  5115                           	opt stack 0
  5116                           pclatu	equ	0xFFB
  5117                           pclath	equ	0xFFA
  5118                           tblptru	equ	0xFF8
  5119                           tblptrh	equ	0xFF7
  5120                           tblptrl	equ	0xFF6
  5121                           tablat	equ	0xFF5
  5122                           prodh	equ	0xFF4
  5123                           prodl	equ	0xFF3
  5124                           intcon	equ	0xFF2
  5125                           postinc0	equ	0xFEE
  5126                           fsr0h	equ	0xFEA
  5127                           fsr0l	equ	0xFE9
  5128                           wreg	equ	0xFE8
  5129                           postdec1	equ	0xFE5
  5130                           fsr1h	equ	0xFE2
  5131                           fsr1l	equ	0xFE1
  5132                           indf2	equ	0xFDF
  5133                           postinc2	equ	0xFDE
  5134                           postdec2	equ	0xFDD
  5135                           plusw2	equ	0xFDB
  5136                           fsr2h	equ	0xFDA
  5137                           fsr2l	equ	0xFD9
  5138                           status	equ	0xFD8
  5139                           
  5140 ;; *************** function i2_Set_Display *****************
  5141 ;; Defined at:
  5142 ;;		line 138 in file "display.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  type            1    wreg     unsigned char 
  5145 ;;  information     1   16[COMRAM] unsigned char 
  5146 ;;  value           2   17[COMRAM] unsigned int 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  type            1   19[COMRAM] unsigned char 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;		None               void
  5151 ;; Registers used:
  5152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1
  5158 ;;      Params:         3       0       0
  5159 ;;      Locals:         1       0       0
  5160 ;;      Temps:          0       0       0
  5161 ;;      Totals:         4       0       0
  5162 ;;Total ram usage:        4 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    3
  5165 ;; This function calls:
  5166 ;;		i2_Evaluate_Display
  5167 ;;		i2_Evaluate_Signs
  5168 ;;		i2_Write_Display_Byte
  5169 ;; This function is called by:
  5170 ;;		_Isr
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text25
  5175  00130E                     __ptext25:
  5176                           	opt stack 0
  5177  00130E                     i2_Set_Display:
  5178                           	opt stack 19
  5179                           
  5180                           ;incstack = 0
  5181                           ;i2Set_Display@type stored from wreg
  5182  00130E  6E14               	movwf	i2Set_Display@type,c
  5183                           
  5184                           ;display.c: 140: switch (type) {
  5185  001310  D01D               	goto	i2l2626
  5186  001312                     i2l2610:
  5187                           
  5188                           ;display.c: 142: if(information != '-') {
  5189  001312  0E2D               	movlw	45
  5190  001314  1811               	xorwf	i2Set_Display@information,w,c
  5191  001316  B4D8               	btfsc	status,2,c
  5192  001318  D012               	goto	i2l2622
  5193                           
  5194                           ;display.c: 143: signs[0] = value;
  5195  00131A  C012  F07B         	movff	i2Set_Display@value,_signs
  5196                           
  5197                           ;display.c: 144: signs[0] += 0x30;
  5198  00131E  0E30               	movlw	48
  5199  001320  0100               	movlb	0	; () banked
  5200  001322  277B               	addwf	_signs& (0+255),f,b
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;display.c: 145: signs[1] = '-';
  5204  001324  0E2D               	movlw	45
  5205  001326  0100               	movlb	0	; () banked
  5206  001328  6F7C               	movwf	(_signs+1)& (0+255),b
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;display.c: 146: signs[2] = information;
  5210  00132A  C011  F07D         	movff	i2Set_Display@information,_signs+2
  5211                           
  5212                           ; BSR set to: 0
  5213                           ;display.c: 147: Evaluate_Display(sizeof(signs), signs);
  5214  00132E  0E7B               	movlw	low _signs
  5215  001330  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5216  001332  0E00               	movlw	high _signs
  5217  001334  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5218  001336  0E03               	movlw	3
  5219  001338  EC2E  F005         	call	i2_Evaluate_Display
  5220                           
  5221                           ;display.c: 148: } else {
  5222  00133C  D00C               	goto	i2l2628
  5223  00133E                     i2l2622:
  5224                           
  5225                           ;display.c: 149: Evaluate_Signs(value);
  5226  00133E  C012  F00E         	movff	i2Set_Display@value,i2Evaluate_Signs@evaluation_value
  5227  001342  C013  F00F         	movff	i2Set_Display@value+1,i2Evaluate_Signs@evaluation_value+1
  5228  001346  ECF4  F008         	call	i2_Evaluate_Signs	;wreg free
  5229                           
  5230                           ;display.c: 155: }
  5231                           
  5232                           ;display.c: 154: break;
  5233                           
  5234                           ;display.c: 152: case 'L':
  5235                           
  5236                           ;display.c: 150: }
  5237                           ;display.c: 151: break;
  5238  00134A  D005               	goto	i2l2628
  5239  00134C                     i2l2626:
  5240  00134C  5014               	movf	i2Set_Display@type,w,c
  5241                           
  5242                           ; Switch size 1, requested type "space"
  5243                           ; Number of cases is 2, Range of values is 55 to 76
  5244                           ; switch strategies available:
  5245                           ; Name         Instructions Cycles
  5246                           ; simple_byte            7     4 (average)
  5247                           ;	Chosen strategy is simple_byte
  5248  00134E  0A37               	xorlw	55	; case 55
  5249  001350  B4D8               	btfsc	status,2,c
  5250  001352  D7DF               	goto	i2l2610
  5251  001354  0A7B               	xorlw	123	; case 76
  5252  001356                     i2l2628:
  5253                           
  5254                           ;display.c: 156: Write_Display_Byte(pixels);
  5255  001356  0E34               	movlw	low _pixels
  5256  001358  6E01               	movwf	i2Write_Display_Byte@write_data,c
  5257  00135A  0E00               	movlw	high _pixels
  5258  00135C  6E02               	movwf	i2Write_Display_Byte@write_data+1,c
  5259  00135E  EC6B  F00A         	call	i2_Write_Display_Byte	;wreg free
  5260  001362  0012               	return		;funcret
  5261  001364                     __end_ofi2_Set_Display:
  5262                           	opt stack 0
  5263                           pclatu	equ	0xFFB
  5264                           pclath	equ	0xFFA
  5265                           tblptru	equ	0xFF8
  5266                           tblptrh	equ	0xFF7
  5267                           tblptrl	equ	0xFF6
  5268                           tablat	equ	0xFF5
  5269                           prodh	equ	0xFF4
  5270                           prodl	equ	0xFF3
  5271                           intcon	equ	0xFF2
  5272                           postinc0	equ	0xFEE
  5273                           fsr0h	equ	0xFEA
  5274                           fsr0l	equ	0xFE9
  5275                           wreg	equ	0xFE8
  5276                           postdec1	equ	0xFE5
  5277                           fsr1h	equ	0xFE2
  5278                           fsr1l	equ	0xFE1
  5279                           indf2	equ	0xFDF
  5280                           postinc2	equ	0xFDE
  5281                           postdec2	equ	0xFDD
  5282                           plusw2	equ	0xFDB
  5283                           fsr2h	equ	0xFDA
  5284                           fsr2l	equ	0xFD9
  5285                           status	equ	0xFD8
  5286                           
  5287 ;; *************** function i2_Write_Display_Byte *****************
  5288 ;; Defined at:
  5289 ;;		line 46 in file "communication.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  write_data      2    0[COMRAM] PTR unsigned char 
  5292 ;;		 -> pixels(7), 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  Write_Displa    1    6[COMRAM] unsigned char 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;		None               void
  5297 ;; Registers used:
  5298 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1
  5304 ;;      Params:         2       0       0
  5305 ;;      Locals:         1       0       0
  5306 ;;      Temps:          4       0       0
  5307 ;;      Totals:         7       0       0
  5308 ;;Total ram usage:        7 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		i2_Set_Display
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text26
  5318  0014D6                     __ptext26:
  5319                           	opt stack 0
  5320  0014D6                     i2_Write_Display_Byte:
  5321                           	opt stack 21
  5322                           
  5323                           ;communication.c: 47: for(unsigned char counter = sizeof(pixels); counter > 0;
  5324                           
  5325                           ;incstack = 0
  5326  0014D6  0E07               	movlw	7
  5327  0014D8  6E07               	movwf	i2Write_Display_Byte@counter,c
  5328  0014DA                     
  5329                           ;communication.c: 48: counter--) {
  5330  0014DA  5007               	movf	i2Write_Display_Byte@counter,w,c
  5331  0014DC  B4D8               	btfsc	status,2,c
  5332  0014DE  0012               	return	
  5333                           
  5334                           ;communication.c: 49: if(SSP1IF = 1) {
  5335  0014E0  869E               	bsf	3998,3,c	;volatile
  5336  0014E2  B69E               	btfsc	3998,3,c	;volatile
  5337                           
  5338                           ;communication.c: 50: SSP1IF = 0;
  5339  0014E4  969E               	bcf	3998,3,c	;volatile
  5340                           
  5341                           ;communication.c: 51: }
  5342                           ;communication.c: 52: SSP1BUF = write_data[counter - 1];
  5343  0014E6  0EFF               	movlw	255
  5344  0014E8  6E03               	movwf	??i2_Write_Display_Byte& (0+255),c
  5345  0014EA  0EFF               	movlw	255
  5346  0014EC  6E04               	movwf	(??i2_Write_Display_Byte+1)& (0+255),c
  5347  0014EE  5007               	movf	i2Write_Display_Byte@counter,w,c
  5348  0014F0  6E05               	movwf	(??i2_Write_Display_Byte+2)& (0+255),c
  5349  0014F2  6A06               	clrf	(??i2_Write_Display_Byte+3)& (0+255),c
  5350  0014F4  5003               	movf	??i2_Write_Display_Byte,w,c
  5351  0014F6  2605               	addwf	??i2_Write_Display_Byte+2,f,c
  5352  0014F8  5004               	movf	??i2_Write_Display_Byte+1,w,c
  5353  0014FA  2206               	addwfc	??i2_Write_Display_Byte+3,f,c
  5354  0014FC  5005               	movf	??i2_Write_Display_Byte+2,w,c
  5355  0014FE  2401               	addwf	i2Write_Display_Byte@write_data,w,c
  5356  001500  6ED9               	movwf	fsr2l,c
  5357  001502  5006               	movf	??i2_Write_Display_Byte+3,w,c
  5358  001504  2002               	addwfc	i2Write_Display_Byte@write_data+1,w,c
  5359  001506  6EDA               	movwf	fsr2h,c
  5360  001508  50DF               	movf	indf2,w,c
  5361  00150A  6EC9               	movwf	4041,c	;volatile
  5362  00150C                     i2l512:
  5363  00150C  A69E               	btfss	3998,3,c	;volatile
  5364  00150E  D7FE               	goto	i2l512
  5365                           
  5366                           ;communication.c: 54: SSP1IF = 0;
  5367  001510  969E               	bcf	3998,3,c	;volatile
  5368  001512  0607               	decf	i2Write_Display_Byte@counter,f,c
  5369  001514  D7E2               	goto	L4
  5370  001516                     __end_ofi2_Write_Display_Byte:
  5371                           	opt stack 0
  5372                           pclatu	equ	0xFFB
  5373                           pclath	equ	0xFFA
  5374                           tblptru	equ	0xFF8
  5375                           tblptrh	equ	0xFF7
  5376                           tblptrl	equ	0xFF6
  5377                           tablat	equ	0xFF5
  5378                           prodh	equ	0xFF4
  5379                           prodl	equ	0xFF3
  5380                           intcon	equ	0xFF2
  5381                           postinc0	equ	0xFEE
  5382                           fsr0h	equ	0xFEA
  5383                           fsr0l	equ	0xFE9
  5384                           wreg	equ	0xFE8
  5385                           postdec1	equ	0xFE5
  5386                           fsr1h	equ	0xFE2
  5387                           fsr1l	equ	0xFE1
  5388                           indf2	equ	0xFDF
  5389                           postinc2	equ	0xFDE
  5390                           postdec2	equ	0xFDD
  5391                           plusw2	equ	0xFDB
  5392                           fsr2h	equ	0xFDA
  5393                           fsr2l	equ	0xFD9
  5394                           status	equ	0xFD8
  5395                           
  5396 ;; *************** function i2_Evaluate_Signs *****************
  5397 ;; Defined at:
  5398 ;;		line 118 in file "display.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  evaluation_v    2   13[COMRAM] unsigned int 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  Evaluate_Sig    1   15[COMRAM] unsigned char 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;		None               void
  5405 ;; Registers used:
  5406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1
  5412 ;;      Params:         2       0       0
  5413 ;;      Locals:         1       0       0
  5414 ;;      Temps:          0       0       0
  5415 ;;      Totals:         3       0       0
  5416 ;;Total ram usage:        3 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; Hardware stack levels required when called:    2
  5419 ;; This function calls:
  5420 ;;		i2_Evaluate_Display
  5421 ;;		i2___lwmod
  5422 ;; This function is called by:
  5423 ;;		i2_Set_Display
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           	psect	text27
  5428  0011E8                     __ptext27:
  5429                           	opt stack 0
  5430  0011E8                     i2_Evaluate_Signs:
  5431                           	opt stack 19
  5432                           
  5433                           ;display.c: 119: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  5434                           
  5435                           ;incstack = 0
  5436  0011E8  0E00               	movlw	0
  5437  0011EA  6E10               	movwf	i2Evaluate_Signs@valuecounter,c
  5438  0011EC                     i2l2342:
  5439                           
  5440                           ;display.c: 120: valuecounter++) {
  5441  0011EC  0E02               	movlw	2
  5442  0011EE  6410               	cpfsgt	i2Evaluate_Signs@valuecounter,c
  5443  0011F0  D001               	goto	i2l2346
  5444  0011F2  D023               	goto	i2l428
  5445  0011F4                     i2l2346:
  5446                           
  5447                           ;display.c: 121: signs[valuecounter] = evaluation_value % 10;
  5448  0011F4  5010               	movf	i2Evaluate_Signs@valuecounter,w,c
  5449  0011F6  0D01               	mullw	1
  5450  0011F8  0E7B               	movlw	low _signs
  5451  0011FA  24F3               	addwf	prodl,w,c
  5452  0011FC  6ED9               	movwf	fsr2l,c
  5453  0011FE  0E00               	movlw	high _signs
  5454  001200  20F4               	addwfc	prodh,w,c
  5455  001202  6EDA               	movwf	fsr2h,c
  5456  001204  C00E  F001         	movff	i2Evaluate_Signs@evaluation_value,i2___lwmod@dividend
  5457  001208  C00F  F002         	movff	i2Evaluate_Signs@evaluation_value+1,i2___lwmod@dividend+1
  5458  00120C  0E00               	movlw	0
  5459  00120E  6E04               	movwf	i2___lwmod@divisor+1,c
  5460  001210  0E0A               	movlw	10
  5461  001212  6E03               	movwf	i2___lwmod@divisor,c
  5462  001214  EC4A  F00A         	call	i2___lwmod	;wreg free
  5463  001218  5001               	movf	?i2___lwmod,w,c
  5464  00121A  6EDF               	movwf	indf2,c
  5465                           
  5466                           ;display.c: 122: signs[valuecounter] += 0x30;
  5467  00121C  5010               	movf	i2Evaluate_Signs@valuecounter,w,c
  5468  00121E  0D01               	mullw	1
  5469  001220  0E7B               	movlw	low _signs
  5470  001222  24F3               	addwf	prodl,w,c
  5471  001224  6ED9               	movwf	fsr2l,c
  5472  001226  0E00               	movlw	high _signs
  5473  001228  20F4               	addwfc	prodh,w,c
  5474  00122A  6EDA               	movwf	fsr2h,c
  5475  00122C  0E30               	movlw	48
  5476  00122E  26DF               	addwf	indf2,f,c
  5477                           
  5478                           ;display.c: 123: evaluation_value >>= 1;
  5479  001230  90D8               	bcf	status,0,c
  5480  001232  320F               	rrcf	i2Evaluate_Signs@evaluation_value+1,f,c
  5481  001234  320E               	rrcf	i2Evaluate_Signs@evaluation_value,f,c
  5482  001236  2A10               	incf	i2Evaluate_Signs@valuecounter,f,c
  5483  001238  D7D9               	goto	i2l2342
  5484  00123A                     i2l428:
  5485                           
  5486                           ;display.c: 124: }
  5487                           ;display.c: 125: __nop();
  5488  00123A  F000               	nop	
  5489                           
  5490                           ;display.c: 126: Evaluate_Display(sizeof(signs), signs);
  5491  00123C  0E7B               	movlw	low _signs
  5492  00123E  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5493  001240  0E00               	movlw	high _signs
  5494  001242  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5495  001244  0E03               	movlw	3
  5496  001246  EC2E  F005         	call	i2_Evaluate_Display
  5497  00124A  0012               	return		;funcret
  5498  00124C                     __end_ofi2_Evaluate_Signs:
  5499                           	opt stack 0
  5500                           pclatu	equ	0xFFB
  5501                           pclath	equ	0xFFA
  5502                           tblptru	equ	0xFF8
  5503                           tblptrh	equ	0xFF7
  5504                           tblptrl	equ	0xFF6
  5505                           tablat	equ	0xFF5
  5506                           prodh	equ	0xFF4
  5507                           prodl	equ	0xFF3
  5508                           intcon	equ	0xFF2
  5509                           postinc0	equ	0xFEE
  5510                           fsr0h	equ	0xFEA
  5511                           fsr0l	equ	0xFE9
  5512                           wreg	equ	0xFE8
  5513                           postdec1	equ	0xFE5
  5514                           fsr1h	equ	0xFE2
  5515                           fsr1l	equ	0xFE1
  5516                           indf2	equ	0xFDF
  5517                           postinc2	equ	0xFDE
  5518                           postdec2	equ	0xFDD
  5519                           plusw2	equ	0xFDB
  5520                           fsr2h	equ	0xFDA
  5521                           fsr2l	equ	0xFD9
  5522                           status	equ	0xFD8
  5523                           
  5524 ;; *************** function i2___lwmod *****************
  5525 ;; Defined at:
  5526 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  dividend        2    0[COMRAM] unsigned int 
  5529 ;;  divisor         2    2[COMRAM] unsigned int 
  5530 ;; Auto vars:     Size  Location     Type
  5531 ;;  __lwmod         1    4[COMRAM] unsigned char 
  5532 ;; Return value:  Size  Location     Type
  5533 ;;                  2    0[COMRAM] unsigned int 
  5534 ;; Registers used:
  5535 ;;		wreg, status,2, status,0
  5536 ;; Tracked objects:
  5537 ;;		On entry : 0/0
  5538 ;;		On exit  : 0/0
  5539 ;;		Unchanged: 0/0
  5540 ;; Data sizes:     COMRAM   BANK0   BANK1
  5541 ;;      Params:         4       0       0
  5542 ;;      Locals:         1       0       0
  5543 ;;      Temps:          0       0       0
  5544 ;;      Totals:         5       0       0
  5545 ;;Total ram usage:        5 bytes
  5546 ;; Hardware stack levels used:    1
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		i2_Evaluate_Signs
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           	psect	text28
  5555  001494                     __ptext28:
  5556                           	opt stack 0
  5557  001494                     i2___lwmod:
  5558                           	opt stack 20
  5559                           
  5560                           ;incstack = 0
  5561  001494  5003               	movf	i2___lwmod@divisor,w,c
  5562  001496  1004               	iorwf	i2___lwmod@divisor+1,w,c
  5563  001498  B4D8               	btfsc	status,2,c
  5564  00149A  D018               	goto	i2l1001
  5565  00149C  0E01               	movlw	1
  5566  00149E  6E05               	movwf	i2___lwmod@counter,c
  5567  0014A0  D004               	goto	i2l2296
  5568  0014A2                     i2l2294:
  5569  0014A2  90D8               	bcf	status,0,c
  5570  0014A4  3603               	rlcf	i2___lwmod@divisor,f,c
  5571  0014A6  3604               	rlcf	i2___lwmod@divisor+1,f,c
  5572  0014A8  2A05               	incf	i2___lwmod@counter,f,c
  5573  0014AA                     i2l2296:
  5574  0014AA  AE04               	btfss	i2___lwmod@divisor+1,7,c
  5575  0014AC  D7FA               	goto	i2l2294
  5576  0014AE                     i2l2298:
  5577  0014AE  5003               	movf	i2___lwmod@divisor,w,c
  5578  0014B0  5C01               	subwf	i2___lwmod@dividend,w,c
  5579  0014B2  5004               	movf	i2___lwmod@divisor+1,w,c
  5580  0014B4  5802               	subwfb	i2___lwmod@dividend+1,w,c
  5581  0014B6  A0D8               	btfss	status,0,c
  5582  0014B8  D004               	goto	i2l2302
  5583  0014BA  5003               	movf	i2___lwmod@divisor,w,c
  5584  0014BC  5E01               	subwf	i2___lwmod@dividend,f,c
  5585  0014BE  5004               	movf	i2___lwmod@divisor+1,w,c
  5586  0014C0  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  5587  0014C2                     i2l2302:
  5588  0014C2  90D8               	bcf	status,0,c
  5589  0014C4  3204               	rrcf	i2___lwmod@divisor+1,f,c
  5590  0014C6  3203               	rrcf	i2___lwmod@divisor,f,c
  5591  0014C8  2E05               	decfsz	i2___lwmod@counter,f,c
  5592  0014CA  D7F1               	goto	i2l2298
  5593  0014CC                     i2l1001:
  5594  0014CC  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  5595  0014D0  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  5596  0014D4  0012               	return		;funcret
  5597  0014D6                     __end_ofi2___lwmod:
  5598                           	opt stack 0
  5599                           pclatu	equ	0xFFB
  5600                           pclath	equ	0xFFA
  5601                           tblptru	equ	0xFF8
  5602                           tblptrh	equ	0xFF7
  5603                           tblptrl	equ	0xFF6
  5604                           tablat	equ	0xFF5
  5605                           prodh	equ	0xFF4
  5606                           prodl	equ	0xFF3
  5607                           intcon	equ	0xFF2
  5608                           postinc0	equ	0xFEE
  5609                           fsr0h	equ	0xFEA
  5610                           fsr0l	equ	0xFE9
  5611                           wreg	equ	0xFE8
  5612                           postdec1	equ	0xFE5
  5613                           fsr1h	equ	0xFE2
  5614                           fsr1l	equ	0xFE1
  5615                           indf2	equ	0xFDF
  5616                           postinc2	equ	0xFDE
  5617                           postdec2	equ	0xFDD
  5618                           plusw2	equ	0xFDB
  5619                           fsr2h	equ	0xFDA
  5620                           fsr2l	equ	0xFD9
  5621                           status	equ	0xFD8
  5622                           
  5623 ;; *************** function i2_Evaluate_Display *****************
  5624 ;; Defined at:
  5625 ;;		line 52 in file "display.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  size            1    wreg     unsigned char 
  5628 ;;  evaluate        2    8[COMRAM] PTR const unsigned char 
  5629 ;;		 -> signs(3), STR_2(4), STR_1(4), 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  size            1   12[COMRAM] unsigned char 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;		None               void
  5634 ;; Registers used:
  5635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1
  5641 ;;      Params:         2       0       0
  5642 ;;      Locals:         1       0       0
  5643 ;;      Temps:          2       0       0
  5644 ;;      Totals:         5       0       0
  5645 ;;Total ram usage:        5 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:    1
  5648 ;; This function calls:
  5649 ;;		i2_Set_Bits
  5650 ;; This function is called by:
  5651 ;;		i2_Evaluate_Signs
  5652 ;;		i2_Set_Display
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text29
  5657  000A5C                     __ptext29:
  5658                           	opt stack 0
  5659  000A5C                     i2_Evaluate_Display:
  5660                           	opt stack 19
  5661                           
  5662                           ;incstack = 0
  5663                           ;i2Evaluate_Display@size stored from wreg
  5664  000A5C  6E0D               	movwf	i2Evaluate_Display@size,c
  5665                           
  5666                           ;display.c: 53: for(display_counter = 0; display_counter < size;
  5667  000A5E  0E00               	movlw	0
  5668  000A60  6E32               	movwf	_display_counter,c
  5669                           
  5670                           ;display.c: 54: display_counter++) {
  5671  000A62  D124               	goto	i2l2288
  5672  000A64                     i2l2248:
  5673                           
  5674                           ;display.c: 57: Set_Bits("ABCDEF");
  5675  000A64  0E23               	movlw	low STR_3
  5676  000A66  6E01               	movwf	i2Set_Bits@bits,c
  5677  000A68  0E02               	movlw	high STR_3
  5678  000A6A  6E02               	movwf	i2Set_Bits@bits+1,c
  5679  000A6C  5001               	movf	i2Set_Bits@bits,w,c
  5680  000A6E  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5681  000A70  A4D8               	btfss	status,2,c
  5682  000A72  0E00               	movlw	low (__mediumconst shr (0+16))
  5683  000A74  6E03               	movwf	i2Set_Bits@bits+2,c
  5684  000A76  EC57  F007         	call	i2_Set_Bits	;wreg free
  5685                           
  5686                           ;display.c: 58: break;
  5687  000A7A  D117               	goto	i2l2286
  5688  000A7C                     i2l2250:
  5689                           
  5690                           ;display.c: 60: Set_Bits("BC");
  5691  000A7C  0E63               	movlw	low (STR_10+1)
  5692  000A7E  6E01               	movwf	i2Set_Bits@bits,c
  5693  000A80  0E02               	movlw	high (STR_10+1)
  5694  000A82  6E02               	movwf	i2Set_Bits@bits+1,c
  5695  000A84  5001               	movf	i2Set_Bits@bits,w,c
  5696  000A86  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5697  000A88  A4D8               	btfss	status,2,c
  5698  000A8A  0E00               	movlw	low (__mediumconst shr (0+16))
  5699  000A8C  6E03               	movwf	i2Set_Bits@bits+2,c
  5700  000A8E  EC57  F007         	call	i2_Set_Bits	;wreg free
  5701                           
  5702                           ;display.c: 61: break;
  5703  000A92  D10B               	goto	i2l2286
  5704  000A94                     i2l2252:
  5705                           
  5706                           ;display.c: 63: Set_Bits("ABDEG");
  5707  000A94  0E45               	movlw	low STR_5
  5708  000A96  6E01               	movwf	i2Set_Bits@bits,c
  5709  000A98  0E02               	movlw	high STR_5
  5710  000A9A  6E02               	movwf	i2Set_Bits@bits+1,c
  5711  000A9C  5001               	movf	i2Set_Bits@bits,w,c
  5712  000A9E  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5713  000AA0  A4D8               	btfss	status,2,c
  5714  000AA2  0E00               	movlw	low (__mediumconst shr (0+16))
  5715  000AA4  6E03               	movwf	i2Set_Bits@bits+2,c
  5716  000AA6  EC57  F007         	call	i2_Set_Bits	;wreg free
  5717                           
  5718                           ;display.c: 64: break;
  5719  000AAA  D0FF               	goto	i2l2286
  5720  000AAC                     i2l2254:
  5721                           
  5722                           ;display.c: 66: Set_Bits("ABCDG");
  5723  000AAC  0E3F               	movlw	low STR_6
  5724  000AAE  6E01               	movwf	i2Set_Bits@bits,c
  5725  000AB0  0E02               	movlw	high STR_6
  5726  000AB2  6E02               	movwf	i2Set_Bits@bits+1,c
  5727  000AB4  5001               	movf	i2Set_Bits@bits,w,c
  5728  000AB6  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5729  000AB8  A4D8               	btfss	status,2,c
  5730  000ABA  0E00               	movlw	low (__mediumconst shr (0+16))
  5731  000ABC  6E03               	movwf	i2Set_Bits@bits+2,c
  5732  000ABE  EC57  F007         	call	i2_Set_Bits	;wreg free
  5733                           
  5734                           ;display.c: 67: break;
  5735  000AC2  D0F3               	goto	i2l2286
  5736  000AC4                     i2l2256:
  5737                           
  5738                           ;display.c: 69: Set_Bits("BCFG");
  5739  000AC4  0E5D               	movlw	low STR_7
  5740  000AC6  6E01               	movwf	i2Set_Bits@bits,c
  5741  000AC8  0E02               	movlw	high STR_7
  5742  000ACA  6E02               	movwf	i2Set_Bits@bits+1,c
  5743  000ACC  5001               	movf	i2Set_Bits@bits,w,c
  5744  000ACE  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5745  000AD0  A4D8               	btfss	status,2,c
  5746  000AD2  0E00               	movlw	low (__mediumconst shr (0+16))
  5747  000AD4  6E03               	movwf	i2Set_Bits@bits+2,c
  5748  000AD6  EC57  F007         	call	i2_Set_Bits	;wreg free
  5749                           
  5750                           ;display.c: 70: break;
  5751  000ADA  D0E7               	goto	i2l2286
  5752  000ADC                     i2l2258:
  5753                           
  5754                           ;display.c: 72: Set_Bits("ACDFG");
  5755  000ADC  0E4B               	movlw	low STR_8
  5756  000ADE  6E01               	movwf	i2Set_Bits@bits,c
  5757  000AE0  0E02               	movlw	high STR_8
  5758  000AE2  6E02               	movwf	i2Set_Bits@bits+1,c
  5759  000AE4  5001               	movf	i2Set_Bits@bits,w,c
  5760  000AE6  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5761  000AE8  A4D8               	btfss	status,2,c
  5762  000AEA  0E00               	movlw	low (__mediumconst shr (0+16))
  5763  000AEC  6E03               	movwf	i2Set_Bits@bits+2,c
  5764  000AEE  EC57  F007         	call	i2_Set_Bits	;wreg free
  5765                           
  5766                           ;display.c: 73: break;
  5767  000AF2  D0DB               	goto	i2l2286
  5768  000AF4                     i2l2260:
  5769                           
  5770                           ;display.c: 75: Set_Bits("ACDEFG");
  5771  000AF4  0E38               	movlw	low STR_9
  5772  000AF6  6E01               	movwf	i2Set_Bits@bits,c
  5773  000AF8  0E02               	movlw	high STR_9
  5774  000AFA  6E02               	movwf	i2Set_Bits@bits+1,c
  5775  000AFC  5001               	movf	i2Set_Bits@bits,w,c
  5776  000AFE  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5777  000B00  A4D8               	btfss	status,2,c
  5778  000B02  0E00               	movlw	low (__mediumconst shr (0+16))
  5779  000B04  6E03               	movwf	i2Set_Bits@bits+2,c
  5780  000B06  EC57  F007         	call	i2_Set_Bits	;wreg free
  5781                           
  5782                           ;display.c: 76: break;
  5783  000B0A  D0CF               	goto	i2l2286
  5784  000B0C                     i2l2262:
  5785                           
  5786                           ;display.c: 78: Set_Bits("ABC");
  5787  000B0C  0E62               	movlw	low STR_10
  5788  000B0E  6E01               	movwf	i2Set_Bits@bits,c
  5789  000B10  0E02               	movlw	high STR_10
  5790  000B12  6E02               	movwf	i2Set_Bits@bits+1,c
  5791  000B14  5001               	movf	i2Set_Bits@bits,w,c
  5792  000B16  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5793  000B18  A4D8               	btfss	status,2,c
  5794  000B1A  0E00               	movlw	low (__mediumconst shr (0+16))
  5795  000B1C  6E03               	movwf	i2Set_Bits@bits+2,c
  5796  000B1E  EC57  F007         	call	i2_Set_Bits	;wreg free
  5797                           
  5798                           ;display.c: 79: break;
  5799  000B22  D0C3               	goto	i2l2286
  5800  000B24                     i2l2264:
  5801                           
  5802                           ;display.c: 81: Set_Bits("ABCDEFG");
  5803  000B24  0E1B               	movlw	low STR_11
  5804  000B26  6E01               	movwf	i2Set_Bits@bits,c
  5805  000B28  0E02               	movlw	high STR_11
  5806  000B2A  6E02               	movwf	i2Set_Bits@bits+1,c
  5807  000B2C  5001               	movf	i2Set_Bits@bits,w,c
  5808  000B2E  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5809  000B30  A4D8               	btfss	status,2,c
  5810  000B32  0E00               	movlw	low (__mediumconst shr (0+16))
  5811  000B34  6E03               	movwf	i2Set_Bits@bits+2,c
  5812  000B36  EC57  F007         	call	i2_Set_Bits	;wreg free
  5813                           
  5814                           ;display.c: 82: break;
  5815  000B3A  D0B7               	goto	i2l2286
  5816  000B3C                     i2l2266:
  5817                           
  5818                           ;display.c: 84: Set_Bits("ABCDFG");
  5819  000B3C  0E2A               	movlw	low STR_12
  5820  000B3E  6E01               	movwf	i2Set_Bits@bits,c
  5821  000B40  0E02               	movlw	high STR_12
  5822  000B42  6E02               	movwf	i2Set_Bits@bits+1,c
  5823  000B44  5001               	movf	i2Set_Bits@bits,w,c
  5824  000B46  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5825  000B48  A4D8               	btfss	status,2,c
  5826  000B4A  0E00               	movlw	low (__mediumconst shr (0+16))
  5827  000B4C  6E03               	movwf	i2Set_Bits@bits+2,c
  5828  000B4E  EC57  F007         	call	i2_Set_Bits	;wreg free
  5829                           
  5830                           ;display.c: 85: break;
  5831  000B52  D0AB               	goto	i2l2286
  5832  000B54                     i2l2268:
  5833                           
  5834                           ;display.c: 87: Set_Bits("ABCEFG");
  5835  000B54  0E31               	movlw	low STR_13
  5836  000B56  6E01               	movwf	i2Set_Bits@bits,c
  5837  000B58  0E02               	movlw	high STR_13
  5838  000B5A  6E02               	movwf	i2Set_Bits@bits+1,c
  5839  000B5C  5001               	movf	i2Set_Bits@bits,w,c
  5840  000B5E  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5841  000B60  A4D8               	btfss	status,2,c
  5842  000B62  0E00               	movlw	low (__mediumconst shr (0+16))
  5843  000B64  6E03               	movwf	i2Set_Bits@bits+2,c
  5844  000B66  EC57  F007         	call	i2_Set_Bits	;wreg free
  5845                           
  5846                           ;display.c: 88: break;
  5847  000B6A  D09F               	goto	i2l2286
  5848  000B6C                     i2l2270:
  5849                           
  5850                           ;display.c: 90: Set_Bits("ABCDEF");
  5851  000B6C  0E23               	movlw	low STR_3
  5852  000B6E  6E01               	movwf	i2Set_Bits@bits,c
  5853  000B70  0E02               	movlw	high STR_3
  5854  000B72  6E02               	movwf	i2Set_Bits@bits+1,c
  5855  000B74  5001               	movf	i2Set_Bits@bits,w,c
  5856  000B76  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5857  000B78  A4D8               	btfss	status,2,c
  5858  000B7A  0E00               	movlw	low (__mediumconst shr (0+16))
  5859  000B7C  6E03               	movwf	i2Set_Bits@bits+2,c
  5860  000B7E  EC57  F007         	call	i2_Set_Bits	;wreg free
  5861                           
  5862                           ;display.c: 91: break;
  5863  000B82  D093               	goto	i2l2286
  5864  000B84                     i2l2272:
  5865                           
  5866                           ;display.c: 93: Set_Bits("ADEFG");
  5867  000B84  0E57               	movlw	low STR_15
  5868  000B86  6E01               	movwf	i2Set_Bits@bits,c
  5869  000B88  0E02               	movlw	high STR_15
  5870  000B8A  6E02               	movwf	i2Set_Bits@bits+1,c
  5871  000B8C  5001               	movf	i2Set_Bits@bits,w,c
  5872  000B8E  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5873  000B90  A4D8               	btfss	status,2,c
  5874  000B92  0E00               	movlw	low (__mediumconst shr (0+16))
  5875  000B94  6E03               	movwf	i2Set_Bits@bits+2,c
  5876  000B96  EC57  F007         	call	i2_Set_Bits	;wreg free
  5877                           
  5878                           ;display.c: 94: break;
  5879  000B9A  D087               	goto	i2l2286
  5880  000B9C                     i2l2274:
  5881                           
  5882                           ;display.c: 96: Set_Bits("DEF");
  5883  000B9C  0E26               	movlw	low (STR_3+3)
  5884  000B9E  6E01               	movwf	i2Set_Bits@bits,c
  5885  000BA0  0E02               	movlw	high (STR_3+3)
  5886  000BA2  6E02               	movwf	i2Set_Bits@bits+1,c
  5887  000BA4  5001               	movf	i2Set_Bits@bits,w,c
  5888  000BA6  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5889  000BA8  A4D8               	btfss	status,2,c
  5890  000BAA  0E00               	movlw	low (__mediumconst shr (0+16))
  5891  000BAC  6E03               	movwf	i2Set_Bits@bits+2,c
  5892  000BAE  EC57  F007         	call	i2_Set_Bits	;wreg free
  5893                           
  5894                           ;display.c: 97: break;
  5895  000BB2  D07B               	goto	i2l2286
  5896  000BB4                     i2l2276:
  5897                           
  5898                           ;display.c: 99: Set_Bits("ABCDEF");
  5899  000BB4  0E23               	movlw	low STR_3
  5900  000BB6  6E01               	movwf	i2Set_Bits@bits,c
  5901  000BB8  0E02               	movlw	high STR_3
  5902  000BBA  6E02               	movwf	i2Set_Bits@bits+1,c
  5903  000BBC  5001               	movf	i2Set_Bits@bits,w,c
  5904  000BBE  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5905  000BC0  A4D8               	btfss	status,2,c
  5906  000BC2  0E00               	movlw	low (__mediumconst shr (0+16))
  5907  000BC4  6E03               	movwf	i2Set_Bits@bits+2,c
  5908  000BC6  EC57  F007         	call	i2_Set_Bits	;wreg free
  5909                           
  5910                           ;display.c: 100: break;
  5911  000BCA  D06F               	goto	i2l2286
  5912  000BCC                     i2l2278:
  5913                           
  5914                           ;display.c: 102: Set_Bits("ABEFG");
  5915  000BCC  0E51               	movlw	low STR_18
  5916  000BCE  6E01               	movwf	i2Set_Bits@bits,c
  5917  000BD0  0E02               	movlw	high STR_18
  5918  000BD2  6E02               	movwf	i2Set_Bits@bits+1,c
  5919  000BD4  5001               	movf	i2Set_Bits@bits,w,c
  5920  000BD6  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5921  000BD8  A4D8               	btfss	status,2,c
  5922  000BDA  0E00               	movlw	low (__mediumconst shr (0+16))
  5923  000BDC  6E03               	movwf	i2Set_Bits@bits+2,c
  5924  000BDE  EC57  F007         	call	i2_Set_Bits	;wreg free
  5925                           
  5926                           ;display.c: 103: break;
  5927  000BE2  D063               	goto	i2l2286
  5928  000BE4                     i2l2280:
  5929                           
  5930                           ;display.c: 105: Set_Bits("G");
  5931  000BE4  0E43               	movlw	low (STR_6+4)
  5932  000BE6  6E01               	movwf	i2Set_Bits@bits,c
  5933  000BE8  0E02               	movlw	high (STR_6+4)
  5934  000BEA  6E02               	movwf	i2Set_Bits@bits+1,c
  5935  000BEC  5001               	movf	i2Set_Bits@bits,w,c
  5936  000BEE  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5937  000BF0  A4D8               	btfss	status,2,c
  5938  000BF2  0E00               	movlw	low (__mediumconst shr (0+16))
  5939  000BF4  6E03               	movwf	i2Set_Bits@bits+2,c
  5940  000BF6  EC57  F007         	call	i2_Set_Bits	;wreg free
  5941                           
  5942                           ;display.c: 106: break;
  5943  000BFA  D057               	goto	i2l2286
  5944  000BFC                     i2l2282:
  5945                           
  5946                           ;display.c: 108: Set_Bits(0);
  5947  000BFC  0E00               	movlw	0
  5948  000BFE  6E01               	movwf	i2Set_Bits@bits,c
  5949  000C00  0E00               	movlw	0
  5950  000C02  6E02               	movwf	i2Set_Bits@bits+1,c
  5951  000C04  0E00               	movlw	0
  5952  000C06  6E03               	movwf	i2Set_Bits@bits+2,c
  5953  000C08  EC57  F007         	call	i2_Set_Bits	;wreg free
  5954                           
  5955                           ;display.c: 109: }
  5956  000C0C  D04E               	goto	i2l2286
  5957  000C0E                     i2l2284:
  5958  000C0E  5032               	movf	_display_counter,w,c
  5959  000C10  0D01               	mullw	1
  5960  000C12  C009  F00B         	movff	i2Evaluate_Display@evaluate,??i2_Evaluate_Display
  5961  000C16  C00A  F00C         	movff	i2Evaluate_Display@evaluate+1,??i2_Evaluate_Display+1
  5962  000C1A  50F3               	movf	prodl,w,c
  5963  000C1C  260B               	addwf	??i2_Evaluate_Display,f,c
  5964  000C1E  50F4               	movf	prodh,w,c
  5965  000C20  220C               	addwfc	??i2_Evaluate_Display+1,f,c
  5966  000C22  C00B  FFF6         	movff	??i2_Evaluate_Display,tblptrl
  5967  000C26  C00C  FFF7         	movff	??i2_Evaluate_Display+1,tblptrh
  5968  000C2A  6AF8               	clrf	tblptru,c
  5969  000C2C  0E01               	movlw	(high __ramtop+-1)
  5970  000C2E  64F7               	cpfsgt	tblptrh,c
  5971  000C30  D003               	bra	i2u117_47
  5972  000C32  0008               	tblrd		*
  5973  000C34  50F5               	movf	tablat,w,c
  5974  000C36  D005               	bra	i2u117_40
  5975  000C38                     i2u117_47:
  5976  000C38  CFF6 FFD9          	movff	tblptrl,fsr2l
  5977  000C3C  CFF7 FFDA          	movff	tblptrh,fsr2h
  5978  000C40  50DF               	movf	indf2,w,c
  5979  000C42                     i2u117_40:
  5980                           
  5981                           ; Switch size 1, requested type "space"
  5982                           ; Number of cases is 17, Range of values is 45 to 80
  5983                           ; switch strategies available:
  5984                           ; Name         Instructions Cycles
  5985                           ; simple_byte           52    27 (average)
  5986                           ;	Chosen strategy is simple_byte
  5987  000C42  0A2D               	xorlw	45	; case 45
  5988  000C44  B4D8               	btfsc	status,2,c
  5989  000C46  D7CE               	goto	i2l2280
  5990  000C48  0A1D               	xorlw	29	; case 48
  5991  000C4A  B4D8               	btfsc	status,2,c
  5992  000C4C  D70B               	goto	i2l2248
  5993  000C4E  0A01               	xorlw	1	; case 49
  5994  000C50  B4D8               	btfsc	status,2,c
  5995  000C52  D714               	goto	i2l2250
  5996  000C54  0A03               	xorlw	3	; case 50
  5997  000C56  B4D8               	btfsc	status,2,c
  5998  000C58  D71D               	goto	i2l2252
  5999  000C5A  0A01               	xorlw	1	; case 51
  6000  000C5C  B4D8               	btfsc	status,2,c
  6001  000C5E  D726               	goto	i2l2254
  6002  000C60  0A07               	xorlw	7	; case 52
  6003  000C62  B4D8               	btfsc	status,2,c
  6004  000C64  D72F               	goto	i2l2256
  6005  000C66  0A01               	xorlw	1	; case 53
  6006  000C68  B4D8               	btfsc	status,2,c
  6007  000C6A  D738               	goto	i2l2258
  6008  000C6C  0A03               	xorlw	3	; case 54
  6009  000C6E  B4D8               	btfsc	status,2,c
  6010  000C70  D741               	goto	i2l2260
  6011  000C72  0A01               	xorlw	1	; case 55
  6012  000C74  B4D8               	btfsc	status,2,c
  6013  000C76  D74A               	goto	i2l2262
  6014  000C78  0A0F               	xorlw	15	; case 56
  6015  000C7A  B4D8               	btfsc	status,2,c
  6016  000C7C  D753               	goto	i2l2264
  6017  000C7E  0A01               	xorlw	1	; case 57
  6018  000C80  B4D8               	btfsc	status,2,c
  6019  000C82  D75C               	goto	i2l2266
  6020  000C84  0A78               	xorlw	120	; case 65
  6021  000C86  B4D8               	btfsc	status,2,c
  6022  000C88  D765               	goto	i2l2268
  6023  000C8A  0A05               	xorlw	5	; case 68
  6024  000C8C  B4D8               	btfsc	status,2,c
  6025  000C8E  D76E               	goto	i2l2270
  6026  000C90  0A01               	xorlw	1	; case 69
  6027  000C92  B4D8               	btfsc	status,2,c
  6028  000C94  D777               	goto	i2l2272
  6029  000C96  0A09               	xorlw	9	; case 76
  6030  000C98  B4D8               	btfsc	status,2,c
  6031  000C9A  D780               	goto	i2l2274
  6032  000C9C  0A03               	xorlw	3	; case 79
  6033  000C9E  B4D8               	btfsc	status,2,c
  6034  000CA0  D789               	goto	i2l2276
  6035  000CA2  0A1F               	xorlw	31	; case 80
  6036  000CA4  B4D8               	btfsc	status,2,c
  6037  000CA6  D792               	goto	i2l2278
  6038  000CA8  D7A9               	goto	i2l2282
  6039  000CAA                     i2l2286:
  6040  000CAA  2A32               	incf	_display_counter,f,c
  6041  000CAC                     i2l2288:
  6042  000CAC  500D               	movf	i2Evaluate_Display@size,w,c
  6043  000CAE  5C32               	subwf	_display_counter,w,c
  6044  000CB0  B0D8               	btfsc	status,0,c
  6045  000CB2  0012               	return	
  6046  000CB4  D7AC               	goto	i2l2284
  6047  000CB6                     __end_ofi2_Evaluate_Display:
  6048                           	opt stack 0
  6049                           pclatu	equ	0xFFB
  6050                           pclath	equ	0xFFA
  6051                           tblptru	equ	0xFF8
  6052                           tblptrh	equ	0xFF7
  6053                           tblptrl	equ	0xFF6
  6054                           tablat	equ	0xFF5
  6055                           prodh	equ	0xFF4
  6056                           prodl	equ	0xFF3
  6057                           intcon	equ	0xFF2
  6058                           postinc0	equ	0xFEE
  6059                           fsr0h	equ	0xFEA
  6060                           fsr0l	equ	0xFE9
  6061                           wreg	equ	0xFE8
  6062                           postdec1	equ	0xFE5
  6063                           fsr1h	equ	0xFE2
  6064                           fsr1l	equ	0xFE1
  6065                           indf2	equ	0xFDF
  6066                           postinc2	equ	0xFDE
  6067                           postdec2	equ	0xFDD
  6068                           plusw2	equ	0xFDB
  6069                           fsr2h	equ	0xFDA
  6070                           fsr2l	equ	0xFD9
  6071                           status	equ	0xFD8
  6072                           
  6073 ;; *************** function i2_Set_Bits *****************
  6074 ;; Defined at:
  6075 ;;		line 12 in file "display.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;  bits            3    0[COMRAM] PTR const unsigned char 
  6078 ;;		 -> ROM(8191), STR_19(2), STR_18(6), STR_17(7), 
  6079 ;;		 -> STR_16(4), STR_15(6), STR_14(7), STR_13(7), 
  6080 ;;		 -> STR_12(7), STR_11(8), STR_10(4), STR_9(7), 
  6081 ;;		 -> STR_8(6), STR_7(5), STR_6(6), STR_5(6), 
  6082 ;;		 -> STR_4(3), STR_3(7), 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  Set_Bits        1    7[COMRAM] unsigned char 
  6085 ;;  Set_Bits        1    6[COMRAM] unsigned char 
  6086 ;; Return value:  Size  Location     Type
  6087 ;;		None               void
  6088 ;; Registers used:
  6089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6090 ;; Tracked objects:
  6091 ;;		On entry : 0/0
  6092 ;;		On exit  : 0/0
  6093 ;;		Unchanged: 0/0
  6094 ;; Data sizes:     COMRAM   BANK0   BANK1
  6095 ;;      Params:         3       0       0
  6096 ;;      Locals:         2       0       0
  6097 ;;      Temps:          3       0       0
  6098 ;;      Totals:         8       0       0
  6099 ;;Total ram usage:        8 bytes
  6100 ;; Hardware stack levels used:    1
  6101 ;; This function calls:
  6102 ;;		Nothing
  6103 ;; This function is called by:
  6104 ;;		i2_Evaluate_Display
  6105 ;; This function uses a non-reentrant model
  6106 ;;
  6107                           
  6108                           	psect	text30
  6109  000EAE                     __ptext30:
  6110                           	opt stack 0
  6111  000EAE                     i2_Set_Bits:
  6112                           	opt stack 19
  6113                           
  6114                           ;display.c: 13: unsigned char Bitoutput = 0;
  6115                           
  6116                           ;incstack = 0
  6117  000EAE  0E00               	movlw	0
  6118  000EB0  6E08               	movwf	i2Set_Bits@Bitoutput,c
  6119                           
  6120                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  6121  000EB2  0E00               	movlw	0
  6122  000EB4  6E07               	movwf	i2Set_Bits@bitcount,c
  6123                           
  6124                           ;display.c: 15: bitcount++) {
  6125  000EB6  D037               	goto	i2l2184
  6126  000EB8                     i2l2164:
  6127                           
  6128                           ;display.c: 18: Bitoutput |= 0b00000001;
  6129  000EB8  8008               	bsf	i2Set_Bits@Bitoutput,0,c
  6130                           
  6131                           ;display.c: 19: break;
  6132  000EBA  D034               	goto	i2l2182
  6133  000EBC                     i2l2166:
  6134                           
  6135                           ;display.c: 21: Bitoutput |= 0b00000010;
  6136  000EBC  8208               	bsf	i2Set_Bits@Bitoutput,1,c
  6137                           
  6138                           ;display.c: 22: break;
  6139  000EBE  D032               	goto	i2l2182
  6140  000EC0                     i2l2168:
  6141                           
  6142                           ;display.c: 24: Bitoutput |= 0b00000100;
  6143  000EC0  8408               	bsf	i2Set_Bits@Bitoutput,2,c
  6144                           
  6145                           ;display.c: 25: break;
  6146  000EC2  D030               	goto	i2l2182
  6147  000EC4                     i2l2170:
  6148                           
  6149                           ;display.c: 27: Bitoutput |= 0b00001000;
  6150  000EC4  8608               	bsf	i2Set_Bits@Bitoutput,3,c
  6151                           
  6152                           ;display.c: 28: break;
  6153  000EC6  D02E               	goto	i2l2182
  6154  000EC8                     i2l2172:
  6155                           
  6156                           ;display.c: 30: Bitoutput |= 0b00010000;
  6157  000EC8  8808               	bsf	i2Set_Bits@Bitoutput,4,c
  6158                           
  6159                           ;display.c: 31: break;
  6160  000ECA  D02C               	goto	i2l2182
  6161  000ECC                     i2l2174:
  6162                           
  6163                           ;display.c: 33: Bitoutput |= 0b00100000;
  6164  000ECC  8A08               	bsf	i2Set_Bits@Bitoutput,5,c
  6165                           
  6166                           ;display.c: 34: break;
  6167  000ECE  D02A               	goto	i2l2182
  6168  000ED0                     i2l2176:
  6169                           
  6170                           ;display.c: 36: Bitoutput |= 0b01000000;
  6171  000ED0  8C08               	bsf	i2Set_Bits@Bitoutput,6,c
  6172                           
  6173                           ;display.c: 40: }
  6174                           
  6175                           ;display.c: 39: break;
  6176                           
  6177                           ;display.c: 38: default:
  6178                           
  6179                           ;display.c: 37: break;
  6180  000ED2  D028               	goto	i2l2182
  6181  000ED4                     i2l2180:
  6182  000ED4  5007               	movf	i2Set_Bits@bitcount,w,c
  6183  000ED6  0D01               	mullw	1
  6184  000ED8  50F3               	movf	prodl,w,c
  6185  000EDA  2401               	addwf	i2Set_Bits@bits,w,c
  6186  000EDC  6E04               	movwf	??i2_Set_Bits& (0+255),c
  6187  000EDE  50F4               	movf	prodh,w,c
  6188  000EE0  2002               	addwfc	i2Set_Bits@bits+1,w,c
  6189  000EE2  6E05               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6190  000EE4  0E00               	movlw	0
  6191  000EE6  2003               	addwfc	i2Set_Bits@bits+2,w,c
  6192  000EE8  6E06               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6193  000EEA  C004  FFF6         	movff	??i2_Set_Bits,tblptrl
  6194  000EEE  C005  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6195  000EF2  C006  FFF8         	movff	??i2_Set_Bits+2,tblptru
  6196  000EF6  0008               	tblrd		*
  6197  000EF8  50F5               	movf	tablat,w,c
  6198                           
  6199                           ; Switch size 1, requested type "space"
  6200                           ; Number of cases is 7, Range of values is 65 to 71
  6201                           ; switch strategies available:
  6202                           ; Name         Instructions Cycles
  6203                           ; simple_byte           22    12 (average)
  6204                           ;	Chosen strategy is simple_byte
  6205  000EFA  0A41               	xorlw	65	; case 65
  6206  000EFC  B4D8               	btfsc	status,2,c
  6207  000EFE  D7DC               	goto	i2l2164
  6208  000F00  0A03               	xorlw	3	; case 66
  6209  000F02  B4D8               	btfsc	status,2,c
  6210  000F04  D7DB               	goto	i2l2166
  6211  000F06  0A01               	xorlw	1	; case 67
  6212  000F08  B4D8               	btfsc	status,2,c
  6213  000F0A  D7DA               	goto	i2l2168
  6214  000F0C  0A07               	xorlw	7	; case 68
  6215  000F0E  B4D8               	btfsc	status,2,c
  6216  000F10  D7D9               	goto	i2l2170
  6217  000F12  0A01               	xorlw	1	; case 69
  6218  000F14  B4D8               	btfsc	status,2,c
  6219  000F16  D7D8               	goto	i2l2172
  6220  000F18  0A03               	xorlw	3	; case 70
  6221  000F1A  B4D8               	btfsc	status,2,c
  6222  000F1C  D7D7               	goto	i2l2174
  6223  000F1E  0A01               	xorlw	1	; case 71
  6224  000F20  B4D8               	btfsc	status,2,c
  6225  000F22  D7D6               	goto	i2l2176
  6226  000F24                     i2l2182:
  6227  000F24  2A07               	incf	i2Set_Bits@bitcount,f,c
  6228  000F26                     i2l2184:
  6229  000F26  5007               	movf	i2Set_Bits@bitcount,w,c
  6230  000F28  0D01               	mullw	1
  6231  000F2A  50F3               	movf	prodl,w,c
  6232  000F2C  2401               	addwf	i2Set_Bits@bits,w,c
  6233  000F2E  6E04               	movwf	??i2_Set_Bits& (0+255),c
  6234  000F30  50F4               	movf	prodh,w,c
  6235  000F32  2002               	addwfc	i2Set_Bits@bits+1,w,c
  6236  000F34  6E05               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6237  000F36  0E00               	movlw	0
  6238  000F38  2003               	addwfc	i2Set_Bits@bits+2,w,c
  6239  000F3A  6E06               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6240  000F3C  C004  FFF6         	movff	??i2_Set_Bits,tblptrl
  6241  000F40  C005  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6242  000F44  C006  FFF8         	movff	??i2_Set_Bits+2,tblptru
  6243  000F48  0008               	tblrd		*
  6244  000F4A  50F5               	movf	tablat,w,c
  6245  000F4C  0900               	iorlw	0
  6246  000F4E  A4D8               	btfss	status,2,c
  6247  000F50  D7C1               	goto	i2l2180
  6248                           
  6249                           ;display.c: 41: }
  6250                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  6251  000F52  5032               	movf	_display_counter,w,c
  6252  000F54  0D01               	mullw	1
  6253  000F56  0E34               	movlw	low _pixels
  6254  000F58  24F3               	addwf	prodl,w,c
  6255  000F5A  6ED9               	movwf	fsr2l,c
  6256  000F5C  0E00               	movlw	high _pixels
  6257  000F5E  20F4               	addwfc	prodh,w,c
  6258  000F60  6EDA               	movwf	fsr2h,c
  6259  000F62  C008  FFDF         	movff	i2Set_Bits@Bitoutput,indf2
  6260  000F66  0012               	return		;funcret
  6261  000F68                     __end_ofi2_Set_Bits:
  6262                           	opt stack 0
  6263                           pclatu	equ	0xFFB
  6264                           pclath	equ	0xFFA
  6265                           tblptru	equ	0xFF8
  6266                           tblptrh	equ	0xFF7
  6267                           tblptrl	equ	0xFF6
  6268                           tablat	equ	0xFF5
  6269                           prodh	equ	0xFF4
  6270                           prodl	equ	0xFF3
  6271                           intcon	equ	0xFF2
  6272                           postinc0	equ	0xFEE
  6273                           fsr0h	equ	0xFEA
  6274                           fsr0l	equ	0xFE9
  6275                           wreg	equ	0xFE8
  6276                           postdec1	equ	0xFE5
  6277                           fsr1h	equ	0xFE2
  6278                           fsr1l	equ	0xFE1
  6279                           indf2	equ	0xFDF
  6280                           postinc2	equ	0xFDE
  6281                           postdec2	equ	0xFDD
  6282                           plusw2	equ	0xFDB
  6283                           fsr2h	equ	0xFDA
  6284                           fsr2l	equ	0xFD9
  6285                           status	equ	0xFD8
  6286                           
  6287 ;; *************** function i2_Check_Detonators *****************
  6288 ;; Defined at:
  6289 ;;		line 25 in file "ignition.c"
  6290 ;; Parameters:    Size  Location     Type
  6291 ;;		None
  6292 ;; Auto vars:     Size  Location     Type
  6293 ;;		None
  6294 ;; Return value:  Size  Location     Type
  6295 ;;		None               void
  6296 ;; Registers used:
  6297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMRAM   BANK0   BANK1
  6303 ;;      Params:         0       0       0
  6304 ;;      Locals:         0       0       0
  6305 ;;      Temps:          0       0       0
  6306 ;;      Totals:         0       0       0
  6307 ;;Total ram usage:        0 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    1
  6310 ;; This function calls:
  6311 ;;		i2_Transmit
  6312 ;; This function is called by:
  6313 ;;		_Isr
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text31
  6318  00158A                     __ptext31:
  6319                           	opt stack 0
  6320  00158A                     i2_Check_Detonators:
  6321                           	opt stack 21
  6322                           
  6323                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  6324                           
  6325                           ;incstack = 0
  6326  00158A  0E54               	movlw	84
  6327  00158C  6E01               	movwf	i2Transmit@operation,c
  6328  00158E  5031               	movf	_check_counter,w,c
  6329  001590  0D06               	mullw	6
  6330  001592  0E01               	movlw	1
  6331  001594  26F3               	addwf	prodl,f,c
  6332  001596  0E00               	movlw	0
  6333  001598  22F4               	addwfc	prodh,f,c
  6334  00159A  0E00               	movlw	low _pin
  6335  00159C  24F3               	addwf	prodl,w,c
  6336  00159E  6ED9               	movwf	fsr2l,c
  6337  0015A0  0E01               	movlw	high _pin
  6338  0015A2  20F4               	addwfc	prodh,w,c
  6339  0015A4  6EDA               	movwf	fsr2h,c
  6340  0015A6  50DF               	movf	indf2,w,c
  6341  0015A8  6E02               	movwf	i2Transmit@port,c
  6342  0015AA  5031               	movf	_check_counter,w,c
  6343  0015AC  0D06               	mullw	6
  6344  0015AE  0E00               	movlw	low _pin
  6345  0015B0  24F3               	addwf	prodl,w,c
  6346  0015B2  6ED9               	movwf	fsr2l,c
  6347  0015B4  0E01               	movlw	high _pin
  6348  0015B6  20F4               	addwfc	prodh,w,c
  6349  0015B8  6EDA               	movwf	fsr2h,c
  6350  0015BA  50DF               	movf	indf2,w,c
  6351  0015BC  ECE1  F00A         	call	i2_Transmit
  6352  0015C0  0012               	return		;funcret
  6353  0015C2                     __end_ofi2_Check_Detonators:
  6354                           	opt stack 0
  6355                           pclatu	equ	0xFFB
  6356                           pclath	equ	0xFFA
  6357                           tblptru	equ	0xFF8
  6358                           tblptrh	equ	0xFF7
  6359                           tblptrl	equ	0xFF6
  6360                           tablat	equ	0xFF5
  6361                           prodh	equ	0xFF4
  6362                           prodl	equ	0xFF3
  6363                           intcon	equ	0xFF2
  6364                           postinc0	equ	0xFEE
  6365                           fsr0h	equ	0xFEA
  6366                           fsr0l	equ	0xFE9
  6367                           wreg	equ	0xFE8
  6368                           postdec1	equ	0xFE5
  6369                           fsr1h	equ	0xFE2
  6370                           fsr1l	equ	0xFE1
  6371                           indf2	equ	0xFDF
  6372                           postinc2	equ	0xFDE
  6373                           postdec2	equ	0xFDD
  6374                           plusw2	equ	0xFDB
  6375                           fsr2h	equ	0xFDA
  6376                           fsr2l	equ	0xFD9
  6377                           status	equ	0xFD8
  6378                           
  6379 ;; *************** function ___awdiv *****************
  6380 ;; Defined at:
  6381 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  dividend        2    0[COMRAM] int 
  6384 ;;  divisor         2    2[COMRAM] int 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  quotient        2    6[COMRAM] int 
  6387 ;;  sign            1    5[COMRAM] unsigned char 
  6388 ;;  counter         1    4[COMRAM] unsigned char 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2    0[COMRAM] int 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1
  6398 ;;      Params:         4       0       0
  6399 ;;      Locals:         4       0       0
  6400 ;;      Temps:          0       0       0
  6401 ;;      Totals:         8       0       0
  6402 ;;Total ram usage:        8 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_Isr
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text32
  6412  00101C                     __ptext32:
  6413                           	opt stack 0
  6414  00101C                     ___awdiv:
  6415                           	opt stack 22
  6416                           
  6417                           ;incstack = 0
  6418  00101C  0E00               	movlw	0
  6419  00101E  6E06               	movwf	___awdiv@sign,c
  6420  001020  AE04               	btfss	___awdiv@divisor+1,7,c
  6421  001022  D006               	goto	i2l2570
  6422  001024  6C03               	negf	___awdiv@divisor,c
  6423  001026  1E04               	comf	___awdiv@divisor+1,f,c
  6424  001028  B0D8               	btfsc	status,0,c
  6425  00102A  2A04               	incf	___awdiv@divisor+1,f,c
  6426  00102C  0E01               	movlw	1
  6427  00102E  6E06               	movwf	___awdiv@sign,c
  6428  001030                     i2l2570:
  6429  001030  AE02               	btfss	___awdiv@dividend+1,7,c
  6430  001032  D006               	goto	i2l2576
  6431  001034  6C01               	negf	___awdiv@dividend,c
  6432  001036  1E02               	comf	___awdiv@dividend+1,f,c
  6433  001038  B0D8               	btfsc	status,0,c
  6434  00103A  2A02               	incf	___awdiv@dividend+1,f,c
  6435  00103C  0E01               	movlw	1
  6436  00103E  1A06               	xorwf	___awdiv@sign,f,c
  6437  001040                     i2l2576:
  6438  001040  0E00               	movlw	0
  6439  001042  6E08               	movwf	___awdiv@quotient+1,c
  6440  001044  0E00               	movlw	0
  6441  001046  6E07               	movwf	___awdiv@quotient,c
  6442  001048  5003               	movf	___awdiv@divisor,w,c
  6443  00104A  1004               	iorwf	___awdiv@divisor+1,w,c
  6444  00104C  B4D8               	btfsc	status,2,c
  6445  00104E  D01C               	goto	i2l2598
  6446  001050  0E01               	movlw	1
  6447  001052  6E05               	movwf	___awdiv@counter,c
  6448  001054  D004               	goto	i2l2584
  6449  001056                     i2l2582:
  6450  001056  90D8               	bcf	status,0,c
  6451  001058  3603               	rlcf	___awdiv@divisor,f,c
  6452  00105A  3604               	rlcf	___awdiv@divisor+1,f,c
  6453  00105C  2A05               	incf	___awdiv@counter,f,c
  6454  00105E                     i2l2584:
  6455  00105E  AE04               	btfss	___awdiv@divisor+1,7,c
  6456  001060  D7FA               	goto	i2l2582
  6457  001062                     i2l2586:
  6458  001062  90D8               	bcf	status,0,c
  6459  001064  3607               	rlcf	___awdiv@quotient,f,c
  6460  001066  3608               	rlcf	___awdiv@quotient+1,f,c
  6461  001068  5003               	movf	___awdiv@divisor,w,c
  6462  00106A  5C01               	subwf	___awdiv@dividend,w,c
  6463  00106C  5004               	movf	___awdiv@divisor+1,w,c
  6464  00106E  5802               	subwfb	___awdiv@dividend+1,w,c
  6465  001070  A0D8               	btfss	status,0,c
  6466  001072  D005               	goto	i2l2594
  6467  001074  5003               	movf	___awdiv@divisor,w,c
  6468  001076  5E01               	subwf	___awdiv@dividend,f,c
  6469  001078  5004               	movf	___awdiv@divisor+1,w,c
  6470  00107A  5A02               	subwfb	___awdiv@dividend+1,f,c
  6471  00107C  8007               	bsf	___awdiv@quotient,0,c
  6472  00107E                     i2l2594:
  6473  00107E  90D8               	bcf	status,0,c
  6474  001080  3204               	rrcf	___awdiv@divisor+1,f,c
  6475  001082  3203               	rrcf	___awdiv@divisor,f,c
  6476  001084  2E05               	decfsz	___awdiv@counter,f,c
  6477  001086  D7ED               	goto	i2l2586
  6478  001088                     i2l2598:
  6479  001088  5006               	movf	___awdiv@sign,w,c
  6480  00108A  B4D8               	btfsc	status,2,c
  6481  00108C  D004               	goto	i2l2602
  6482  00108E  6C07               	negf	___awdiv@quotient,c
  6483  001090  1E08               	comf	___awdiv@quotient+1,f,c
  6484  001092  B0D8               	btfsc	status,0,c
  6485  001094  2A08               	incf	___awdiv@quotient+1,f,c
  6486  001096                     i2l2602:
  6487  001096  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6488  00109A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6489  00109E  0012               	return	
  6490  0010A0                     __end_of___awdiv:
  6491                           	opt stack 0
  6492                           pclatu	equ	0xFFB
  6493                           pclath	equ	0xFFA
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           prodh	equ	0xFF4
  6499                           prodl	equ	0xFF3
  6500                           intcon	equ	0xFF2
  6501                           postinc0	equ	0xFEE
  6502                           fsr0h	equ	0xFEA
  6503                           fsr0l	equ	0xFE9
  6504                           wreg	equ	0xFE8
  6505                           postdec1	equ	0xFE5
  6506                           fsr1h	equ	0xFE2
  6507                           fsr1l	equ	0xFE1
  6508                           indf2	equ	0xFDF
  6509                           postinc2	equ	0xFDE
  6510                           postdec2	equ	0xFDD
  6511                           plusw2	equ	0xFDB
  6512                           fsr2h	equ	0xFDA
  6513                           fsr2l	equ	0xFD9
  6514                           status	equ	0xFD8
  6515                           
  6516 ;; *************** function _Receive *****************
  6517 ;; Defined at:
  6518 ;;		line 37 in file "communication.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;		None
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;		None
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  1    wreg      unsigned char 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMRAM   BANK0   BANK1
  6532 ;;      Params:         0       0       0
  6533 ;;      Locals:         0       0       0
  6534 ;;      Temps:          0       0       0
  6535 ;;      Totals:         0       0       0
  6536 ;;Total ram usage:        0 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; This function calls:
  6539 ;;		Nothing
  6540 ;; This function is called by:
  6541 ;;		_Isr
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text33
  6546  00171A                     __ptext33:
  6547                           	opt stack 0
  6548  00171A                     _Receive:
  6549                           	opt stack 22
  6550                           
  6551                           ;communication.c: 38: if(RCSTA1bits.OERR == 1) {
  6552                           
  6553                           ;incstack = 0
  6554  00171A  A2AB               	btfss	4011,1,c	;volatile
  6555  00171C  D003               	goto	i2l2558
  6556                           
  6557                           ;communication.c: 39: RCSTA1bits.CREN = 0;
  6558  00171E  98AB               	bcf	4011,4,c	;volatile
  6559                           
  6560                           ;communication.c: 40: RCSTA1bits.CREN = 1;
  6561  001720  88AB               	bsf	4011,4,c	;volatile
  6562                           
  6563                           ;communication.c: 41: overrun = 1;
  6564  001722  843B               	bsf	_overrun/(0+8),_overrun& (0+7),c
  6565  001724                     i2l2558:
  6566                           
  6567                           ;communication.c: 42: }
  6568                           ;communication.c: 43: return (RCREG1);
  6569  001724  50AE               	movf	4014,w,c	;volatile
  6570  001726  0012               	return	
  6571  001728                     __end_of_Receive:
  6572                           	opt stack 0
  6573                           pclatu	equ	0xFFB
  6574                           pclath	equ	0xFFA
  6575                           tblptru	equ	0xFF8
  6576                           tblptrh	equ	0xFF7
  6577                           tblptrl	equ	0xFF6
  6578                           tablat	equ	0xFF5
  6579                           prodh	equ	0xFF4
  6580                           prodl	equ	0xFF3
  6581                           intcon	equ	0xFF2
  6582                           postinc0	equ	0xFEE
  6583                           fsr0h	equ	0xFEA
  6584                           fsr0l	equ	0xFE9
  6585                           wreg	equ	0xFE8
  6586                           postdec1	equ	0xFE5
  6587                           fsr1h	equ	0xFE2
  6588                           fsr1l	equ	0xFE1
  6589                           indf2	equ	0xFDF
  6590                           postinc2	equ	0xFDE
  6591                           postdec2	equ	0xFDD
  6592                           plusw2	equ	0xFDB
  6593                           fsr2h	equ	0xFDA
  6594                           fsr2l	equ	0xFD9
  6595                           status	equ	0xFD8
  6596                           
  6597 ;; *************** function _Ignite_Detonators *****************
  6598 ;; Defined at:
  6599 ;;		line 29 in file "ignition.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;		None
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;  counter         1    5[COMRAM] unsigned char 
  6604 ;; Return value:  Size  Location     Type
  6605 ;;		None               void
  6606 ;; Registers used:
  6607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1
  6613 ;;      Params:         0       0       0
  6614 ;;      Locals:         1       0       0
  6615 ;;      Temps:          2       0       0
  6616 ;;      Totals:         3       0       0
  6617 ;;Total ram usage:        3 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:    1
  6620 ;; This function calls:
  6621 ;;		i2_Transmit
  6622 ;; This function is called by:
  6623 ;;		_Isr
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text34
  6628  001118                     __ptext34:
  6629                           	opt stack 0
  6630  001118                     _Ignite_Detonators:
  6631                           	opt stack 21
  6632                           
  6633                           ;ignition.c: 30: for(unsigned char counter = 0; counter < 30; counter++) {
  6634                           
  6635                           ;incstack = 0
  6636  001118  0E00               	movlw	0
  6637  00111A  6E06               	movwf	Ignite_Detonators@counter,c
  6638  00111C                     i2l2542:
  6639  00111C  0E1D               	movlw	29
  6640  00111E  6406               	cpfsgt	Ignite_Detonators@counter,c
  6641  001120  D001               	goto	i2l2546
  6642  001122  0012               	return	
  6643  001124                     i2l2546:
  6644                           
  6645                           ;ignition.c: 31: if(pin[counter].time == current_time) {
  6646  001124  5006               	movf	Ignite_Detonators@counter,w,c
  6647  001126  0D06               	mullw	6
  6648  001128  0E04               	movlw	4
  6649  00112A  26F3               	addwf	prodl,f,c
  6650  00112C  0E00               	movlw	0
  6651  00112E  22F4               	addwfc	prodh,f,c
  6652  001130  0E00               	movlw	low _pin
  6653  001132  24F3               	addwf	prodl,w,c
  6654  001134  6ED9               	movwf	fsr2l,c
  6655  001136  0E01               	movlw	high _pin
  6656  001138  20F4               	addwfc	prodh,w,c
  6657  00113A  6EDA               	movwf	fsr2h,c
  6658  00113C  502F               	movf	_current_time,w,c
  6659  00113E  18DE               	xorwf	postinc2,w,c
  6660  001140  E11F               	bnz	i2l2550
  6661  001142  5030               	movf	_current_time+1,w,c
  6662  001144  18DE               	xorwf	postinc2,w,c
  6663  001146  A4D8               	btfss	status,2,c
  6664  001148  D01B               	goto	i2l2550
  6665                           
  6666                           ;ignition.c: 32: Transmit(pin[counter].slave, 'I', pin[counter].output);
  6667  00114A  0E49               	movlw	73
  6668  00114C  6E01               	movwf	i2Transmit@operation,c
  6669  00114E  5006               	movf	Ignite_Detonators@counter,w,c
  6670  001150  0D06               	mullw	6
  6671  001152  0E01               	movlw	1
  6672  001154  26F3               	addwf	prodl,f,c
  6673  001156  0E00               	movlw	0
  6674  001158  22F4               	addwfc	prodh,f,c
  6675  00115A  0E00               	movlw	low _pin
  6676  00115C  24F3               	addwf	prodl,w,c
  6677  00115E  6ED9               	movwf	fsr2l,c
  6678  001160  0E01               	movlw	high _pin
  6679  001162  20F4               	addwfc	prodh,w,c
  6680  001164  6EDA               	movwf	fsr2h,c
  6681  001166  50DF               	movf	indf2,w,c
  6682  001168  6E02               	movwf	i2Transmit@port,c
  6683  00116A  5006               	movf	Ignite_Detonators@counter,w,c
  6684  00116C  0D06               	mullw	6
  6685  00116E  0E00               	movlw	low _pin
  6686  001170  24F3               	addwf	prodl,w,c
  6687  001172  6ED9               	movwf	fsr2l,c
  6688  001174  0E01               	movlw	high _pin
  6689  001176  20F4               	addwfc	prodh,w,c
  6690  001178  6EDA               	movwf	fsr2h,c
  6691  00117A  50DF               	movf	indf2,w,c
  6692  00117C  ECE1  F00A         	call	i2_Transmit
  6693  001180                     i2l2550:
  6694  001180  2A06               	incf	Ignite_Detonators@counter,f,c
  6695  001182  D7CC               	goto	i2l2542
  6696  001184                     __end_of_Ignite_Detonators:
  6697                           	opt stack 0
  6698                           pclatu	equ	0xFFB
  6699                           pclath	equ	0xFFA
  6700                           tblptru	equ	0xFF8
  6701                           tblptrh	equ	0xFF7
  6702                           tblptrl	equ	0xFF6
  6703                           tablat	equ	0xFF5
  6704                           prodh	equ	0xFF4
  6705                           prodl	equ	0xFF3
  6706                           intcon	equ	0xFF2
  6707                           postinc0	equ	0xFEE
  6708                           fsr0h	equ	0xFEA
  6709                           fsr0l	equ	0xFE9
  6710                           wreg	equ	0xFE8
  6711                           postdec1	equ	0xFE5
  6712                           fsr1h	equ	0xFE2
  6713                           fsr1l	equ	0xFE1
  6714                           indf2	equ	0xFDF
  6715                           postinc2	equ	0xFDE
  6716                           postdec2	equ	0xFDD
  6717                           plusw2	equ	0xFDB
  6718                           fsr2h	equ	0xFDA
  6719                           fsr2l	equ	0xFD9
  6720                           status	equ	0xFD8
  6721                           
  6722 ;; *************** function i2_Transmit *****************
  6723 ;; Defined at:
  6724 ;;		line 15 in file "communication.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  receiver        1    wreg     unsigned char 
  6727 ;;  operation       1    0[COMRAM] unsigned char 
  6728 ;;  port            1    1[COMRAM] unsigned char 
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;  receiver        1    2[COMRAM] unsigned char 
  6731 ;; Return value:  Size  Location     Type
  6732 ;;		None               void
  6733 ;; Registers used:
  6734 ;;		wreg, status,2
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1
  6740 ;;      Params:         2       0       0
  6741 ;;      Locals:         1       0       0
  6742 ;;      Temps:          0       0       0
  6743 ;;      Totals:         3       0       0
  6744 ;;Total ram usage:        3 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_Ignite_Detonators
  6750 ;;		i2_Check_Detonators
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           	psect	text35
  6755  0015C2                     __ptext35:
  6756                           	opt stack 0
  6757  0015C2                     i2_Transmit:
  6758                           	opt stack 21
  6759                           
  6760                           ;incstack = 0
  6761                           ;i2Transmit@receiver stored from wreg
  6762  0015C2  6E03               	movwf	i2Transmit@receiver,c
  6763                           
  6764                           ;communication.c: 17: PORTBbits.RB5 = 1;
  6765  0015C4  8A81               	bsf	3969,5,c	;volatile
  6766                           
  6767                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  6768  0015C6  98AB               	bcf	4011,4,c	;volatile
  6769                           
  6770                           ;communication.c: 20: __nop();
  6771  0015C8  F000               	nop	
  6772  0015CA                     i2l487:
  6773  0015CA  A89E               	btfss	3998,4,c	;volatile
  6774  0015CC  D7FE               	goto	i2l487
  6775                           
  6776                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  6777  0015CE  80AC               	bsf	4012,0,c	;volatile
  6778                           
  6779                           ;communication.c: 23: TXREG1 = receiver;
  6780  0015D0  C003  FFAD         	movff	i2Transmit@receiver,4013	;volatile
  6781  0015D4                     i2l490:
  6782  0015D4  A89E               	btfss	3998,4,c	;volatile
  6783  0015D6  D7FE               	goto	i2l490
  6784                           
  6785                           ;communication.c: 25: TXREG1 = 0xAA;
  6786  0015D8  0EAA               	movlw	170
  6787  0015DA  6EAD               	movwf	4013,c	;volatile
  6788  0015DC                     i2l493:
  6789  0015DC  A89E               	btfss	3998,4,c	;volatile
  6790  0015DE  D7FE               	goto	i2l493
  6791                           
  6792                           ;communication.c: 27: TXREG1 = operation;
  6793  0015E0  C001  FFAD         	movff	i2Transmit@operation,4013	;volatile
  6794  0015E4                     i2l496:
  6795  0015E4  A89E               	btfss	3998,4,c	;volatile
  6796  0015E6  D7FE               	goto	i2l496
  6797                           
  6798                           ;communication.c: 29: TXREG1 = port;
  6799  0015E8  C002  FFAD         	movff	i2Transmit@port,4013	;volatile
  6800  0015EC                     i2l499:
  6801  0015EC  A2AC               	btfss	4012,1,c	;volatile
  6802  0015EE  D7FE               	goto	i2l499
  6803                           
  6804                           ;communication.c: 31: PORTBbits.RB5 = 0;
  6805  0015F0  9A81               	bcf	3969,5,c	;volatile
  6806                           
  6807                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  6808  0015F2  88AB               	bsf	4011,4,c	;volatile
  6809                           
  6810                           ;communication.c: 33: __nop();
  6811  0015F4  F000               	nop	
  6812  0015F6  0012               	return		;funcret
  6813  0015F8                     __end_ofi2_Transmit:
  6814                           	opt stack 0
  6815                           pclatu	equ	0xFFB
  6816                           pclath	equ	0xFFA
  6817                           tblptru	equ	0xFF8
  6818                           tblptrh	equ	0xFF7
  6819                           tblptrl	equ	0xFF6
  6820                           tablat	equ	0xFF5
  6821                           prodh	equ	0xFF4
  6822                           prodl	equ	0xFF3
  6823                           intcon	equ	0xFF2
  6824                           postinc0	equ	0xFEE
  6825                           fsr0h	equ	0xFEA
  6826                           fsr0l	equ	0xFE9
  6827                           wreg	equ	0xFE8
  6828                           postdec1	equ	0xFE5
  6829                           fsr1h	equ	0xFE2
  6830                           fsr1l	equ	0xFE1
  6831                           indf2	equ	0xFDF
  6832                           postinc2	equ	0xFDE
  6833                           postdec2	equ	0xFDD
  6834                           plusw2	equ	0xFDB
  6835                           fsr2h	equ	0xFDA
  6836                           fsr2l	equ	0xFD9
  6837                           status	equ	0xFD8
  6838                           pclatu	equ	0xFFB
  6839                           pclath	equ	0xFFA
  6840                           tblptru	equ	0xFF8
  6841                           tblptrh	equ	0xFF7
  6842                           tblptrl	equ	0xFF6
  6843                           tablat	equ	0xFF5
  6844                           prodh	equ	0xFF4
  6845                           prodl	equ	0xFF3
  6846                           intcon	equ	0xFF2
  6847                           postinc0	equ	0xFEE
  6848                           fsr0h	equ	0xFEA
  6849                           fsr0l	equ	0xFE9
  6850                           wreg	equ	0xFE8
  6851                           postdec1	equ	0xFE5
  6852                           fsr1h	equ	0xFE2
  6853                           fsr1l	equ	0xFE1
  6854                           indf2	equ	0xFDF
  6855                           postinc2	equ	0xFDE
  6856                           postdec2	equ	0xFDD
  6857                           plusw2	equ	0xFDB
  6858                           fsr2h	equ	0xFDA
  6859                           fsr2l	equ	0xFD9
  6860                           status	equ	0xFD8
  6861                           
  6862                           	psect	rparam
  6863  0000                     pclatu	equ	0xFFB
  6864                           pclath	equ	0xFFA
  6865                           tblptru	equ	0xFF8
  6866                           tblptrh	equ	0xFF7
  6867                           tblptrl	equ	0xFF6
  6868                           tablat	equ	0xFF5
  6869                           prodh	equ	0xFF4
  6870                           prodl	equ	0xFF3
  6871                           intcon	equ	0xFF2
  6872                           postinc0	equ	0xFEE
  6873                           fsr0h	equ	0xFEA
  6874                           fsr0l	equ	0xFE9
  6875                           wreg	equ	0xFE8
  6876                           postdec1	equ	0xFE5
  6877                           fsr1h	equ	0xFE2
  6878                           fsr1l	equ	0xFE1
  6879                           indf2	equ	0xFDF
  6880                           postinc2	equ	0xFDE
  6881                           postdec2	equ	0xFDD
  6882                           plusw2	equ	0xFDB
  6883                           fsr2h	equ	0xFDA
  6884                           fsr2l	equ	0xFD9
  6885                           status	equ	0xFD8
  6886                           
  6887                           	psect	temp
  6888  00003C                     btemp:
  6889                           	opt stack 0
  6890  00003C                     	ds	1
  6891  0000                     int$flags	set	btemp
  6892                           pclatu	equ	0xFFB
  6893                           pclath	equ	0xFFA
  6894                           tblptru	equ	0xFF8
  6895                           tblptrh	equ	0xFF7
  6896                           tblptrl	equ	0xFF6
  6897                           tablat	equ	0xFF5
  6898                           prodh	equ	0xFF4
  6899                           prodl	equ	0xFF3
  6900                           intcon	equ	0xFF2
  6901                           postinc0	equ	0xFEE
  6902                           fsr0h	equ	0xFEA
  6903                           fsr0l	equ	0xFE9
  6904                           wreg	equ	0xFE8
  6905                           postdec1	equ	0xFE5
  6906                           fsr1h	equ	0xFE2
  6907                           fsr1l	equ	0xFE1
  6908                           indf2	equ	0xFDF
  6909                           postinc2	equ	0xFDE
  6910                           postdec2	equ	0xFDD
  6911                           plusw2	equ	0xFDB
  6912                           fsr2h	equ	0xFDA
  6913                           fsr2l	equ	0xFD9
  6914                           status	equ	0xFD8


Data Sizes:
    Strings     83
    Constant    0
    Data        180
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      59
    BANK0           160     25      30
    BANK1           256      0     180

Pointer List with Targets:

    Write_Display_Byte@write_data	PTR unsigned char  size(2) Largest target is 7
		 -> pixels(COMRAM[7]), 

    Evaluate_Display@evaluate	PTR const unsigned char  size(2) Largest target is 4
		 -> signs(BANK0[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    Set_Bits@bits	PTR const unsigned char  size(3) Largest target is 8191
		 -> ROM(CODE[8191]), STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[4]), STR_15(CODE[6]), STR_14(CODE[7]), STR_13(CODE[7]), 
		 -> STR_12(CODE[7]), STR_11(CODE[8]), STR_10(CODE[4]), STR_9(CODE[7]), 
		 -> STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[3]), STR_3(CODE[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Isr->i2_Set_Display
    i2_Set_Display->i2_Evaluate_Signs
    i2_Evaluate_Signs->i2_Evaluate_Display
    i2_Evaluate_Display->i2_Set_Bits
    i2_Check_Detonators->i2_Transmit
    _Ignite_Detonators->i2_Transmit

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _Check_Detonators->_Transmit
    _Check_Buttons->_Del_Data
    _Del_Data->_Load_Data
    _Load_Data->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   35514
                      _Check_Buttons
                   _Check_Detonators
                               _Init
                          _Load_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Detonators                                     0     0      0     331
                           _Transmit
 ---------------------------------------------------------------------------------
 (2) _Transmit                                             3     1      2     331
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0   19327
                                             23 BANK0      2     2      0
                           _Del_Data
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (2) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Del_Data                                             1     1      0   11753
                                             22 BANK0      1     1      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Load_Data
                          _Save_Data
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     592
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Load_Data                                            2     2      0    9053
                                             20 BANK0      2     2      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Read_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Set_Display                                          4     1      3    6803
                                             16 BANK0      4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
                 _Write_Display_Byte
 ---------------------------------------------------------------------------------
 (2) _Write_Display_Byte                                   7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _Evaluate_Signs                                       3     1      2    2568
                                             13 BANK0      3     1      2
                   _Evaluate_Display
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Display                                     5     3      2    1941
                                              8 BANK0      5     3      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (4) _Set_Bits                                             8     5      3    1571
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2     111
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Isr                                                 20    20      0    3015
                                             20 COMRAM    20    20      0
                  _Ignite_Detonators
                            _Receive
                            ___awdiv
                 i2_Check_Detonators
                      i2_Set_Display
 ---------------------------------------------------------------------------------
 (9) i2_Set_Display                                        4     1      3    1996
                                             16 COMRAM     4     1      3
                 i2_Evaluate_Display
                   i2_Evaluate_Signs
               i2_Write_Display_Byte
 ---------------------------------------------------------------------------------
 (10) i2_Write_Display_Byte                                7     5      2     116
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) i2_Evaluate_Signs                                    3     1      2    1034
                                             13 COMRAM     3     1      2
                 i2_Evaluate_Display
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2_Evaluate_Display                                  5     3      2     684
                                              8 COMRAM     5     3      2
                         i2_Set_Bits
 ---------------------------------------------------------------------------------
 (12) i2_Set_Bits                                          8     5      3     588
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (9) i2_Check_Detonators                                   0     0      0     170
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Ignite_Detonators                                    3     3      0     282
                                              3 COMRAM     3     3      0
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (10) i2_Transmit                                          3     1      2     170
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Del_Data
       _Delay_Routine
       _Evaluate_Display
         _Set_Bits
       _Load_Data
         _Delay_Routine
         _Evaluate_Display
           _Set_Bits
         _Read_Data
         _Set_Display
           _Evaluate_Display
             _Set_Bits
           _Evaluate_Signs
             _Evaluate_Display
               _Set_Bits
             ___lwmod
           _Write_Display_Byte
       _Save_Data
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
       _Write_Display_Byte
     _Start_Timer
   _Check_Detonators
     _Transmit
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Load_Data
     _Delay_Routine
     _Evaluate_Display
       _Set_Bits
     _Read_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
       _Write_Display_Byte
   _Set_Display
     _Evaluate_Display
       _Set_Bits
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
       ___lwmod
     _Write_Display_Byte

 _Isr (ROOT)
   _Ignite_Detonators
     i2_Transmit
   _Receive
   ___awdiv
   i2_Check_Detonators
     i2_Transmit
   i2_Set_Display
     i2_Evaluate_Display
       i2_Set_Bits
     i2_Evaluate_Signs
       i2_Evaluate_Display
         i2_Set_Bits
       i2___lwmod
     i2_Write_Display_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     19      1E       4       18.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     28      3B       1       62.8%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10D       6        0.0%
DATA                 0      0     10D       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Feb 03 17:02:02 2017

        Evaluate_Display@evaluate 0068                        i2_Transmit 15C2  
                              l92 0288                                l96 034C  
                    ___awdiv@sign 0006                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                               l102 0404  
                             l112 061C                               l108 04B6  
                             l340 13AC                               l512 1302  
                             l337 137E                               l428 1102  
                             l490 1566                               l493 156E  
                             l487 155C                               l496 1576  
                             l499 157E                    ?i2_Set_Display 0011  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _Isr 0008                               _pin 0100  
                  _Evaluate_Signs 10A0                               prod 000FF3  
                             wreg 000FE8                 Set_Bits@Bitoutput 0067  
                      _TXSTA1bits 000FAC                      __CFG_LVP$OFF 000000  
                            ?_Isr 0001                              l1001 12A4  
                            l3106 0482                              l3132 052E  
                            l3124 04D6                              l3204 1660  
                            l3142 054A                              l3136 053A  
                            l3144 0560                              l3128 0522  
                            l3064 02AA                              l3170 063C  
                            l3092 03D0                              l3068 0318  
                            l2800 1272                              l3088 036E  
                            l2730 0DE4                              l2810 10A6  
                            l3178 0694                              l2732 0DEA  
                            l2724 0DD2                              l2740 0DFC  
                            l2804 1296                              l2734 0DF0  
                            l2726 0DD8                              l2742 0E5A  
                            l2750 0798                              l2814 10B0  
                            l2910 0CDE                              l2840 1634  
                            l2736 0DF6                              l2728 0DDE  
                            l2744 0E5E                              l2760 082E  
                            l2752 07B6                              l2770 08C4  
                            l2762 084C                              l2754 07D4  
                            l2906 0CD4                              l2844 1648  
                            l2780 095A                              l2772 08E2  
                            l2764 086A                              l2756 07F2  
                            l2860 11BC                              l2916 0D12  
                            l2782 0978                              l2774 0900  
                            l2766 0888                              l2758 0810  
                            l2790 0A50                              l2784 0996  
                            l2776 091E                              l2768 08A6  
                            l2848 118A                              l2864 11CA  
                            l2778 093C                              l2786 09AE  
                            l2866 11D6                              l2788 0A4E  
                            l2796 1260                              l2798 126C  
                            l2974 146C                              l2984 148E  
                            l2978 1476                              STR_1 0266  
                            STR_2 026A                              STR_3 0223  
                            STR_4 0263                              STR_5 0245  
                            STR_6 023F                              STR_7 025D  
                            STR_8 024B                              STR_9 0238  
                            u1960 09E6                              u2497 163C  
                            u1967 09DC                              _Init 16A8  
                            _main 1658                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 003C                     __CFG_BORV$190 000000  
                    Transmit@port 0061                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0216                     __CFG_IESO$OFF 000000  
                  Save_Data@store 0060                _Write_Display_Byte 12AE  
                    ___param_bank 000010                     _InitInterrupt 1728  
                           ??_Isr 0015                   __end_of_Receive 1728  
             ?_Write_Display_Byte 0060                      _BAUDCON1bits 000FB8  
                           ?_Init 0001                             ?_main 0001  
                 __end_of___awdiv 10A0                             _EEADR 000FA9  
                           STR_10 0262                             STR_11 021B  
                           STR_12 022A                             STR_13 0231  
                           STR_14 0223                             STR_15 0257  
                           STR_16 0226                             STR_17 0223  
                           STR_18 0251                             STR_19 0243  
          __end_of_Evaluate_Signs 1118                   ___awdiv@divisor 0003  
               _InitMiscellaneous 1734                   __end_of___lwmod 12AE  
                           i2l512 150C                             i2l428 123A  
                           i2l490 15D4                             i2l493 15DC  
                           i2l487 15CA                             i2l575 00A4  
                           i2l496 15E4                             i2l576 00A0  
                           i2l499 15EC                             i2l588 01DA  
                 ___awdiv@counter 0005                 _Ignite_Detonators 1118  
                           _TMR1H 000FCF                             _TMR3H 000FB3  
                           _TMR1L 000FCE                             _TMR3L 000FB2  
                           _PORTA 000F80                             _PORTB 000F81  
                           _PORTC 000F82                             _PORTE 000F84  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISE 000F96  
                   __CFG_WRT0$OFF 000000          __end_of_InitTransmission 16A8  
                   __CFG_WRT1$OFF 000000                ?_InitMiscellaneous 0001  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                ?_Ignite_Detonators 0001  
               i2Set_Display@type 0014          __end_ofi2_Evaluate_Signs 124C  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                  _Evaluate_Display 078E  
                  __CFG_EBTRB$OFF 000000                             _signs 007B  
              __CFG_MCLRE$EXTMCLR 000000              ??_Write_Display_Byte 0062  
                  __pbitbssCOMRAM 01D8                    __CFG_BOREN$OFF 000000  
             ??_InitMiscellaneous 0060                             tablat 000FF5  
             ??_Ignite_Detonators 0004                             plusw2 000FDB  
                __end_of_Del_Data 1494                             status 000FD8  
                     ?i2_Set_Bits 0001                __size_ofi2___lwmod 0042  
                  ?_InitInterrupt 0001                   __initialization 1406  
                    __end_of_Init 16C6                      __end_of_main 1684  
                     ?i2_Transmit 0001                  __end_of_InitPort 171A  
                __end_of_InitTris 1708            Set_Display@information 0070  
       __end_of_InitMiscellaneous 173A                   ??i2_Set_Display 0014  
                          ??_Init 0060         __end_of_Ignite_Detonators 1184  
                   ??_Set_Display 0073                            ??_main 0079  
                __end_of_Set_Bits 0EAE                   ?_Evaluate_Signs 006D  
                   __activetblptr 000002        __end_ofi2_Evaluate_Display 0CB6  
                __end_of_Transmit 158A                            _EEDATA 000FA8  
                          _CCPR1H 000FBF                            _CCPR1L 000FBE  
                          _EECON2 000FA7                  ___awdiv@dividend 0001  
                          _ANSELA 000F38                            _ANSELB 000F39  
                          _ANSELC 000F3A                            i2l1001 14CC  
                          i2l2302 14C2                            i2l2170 0EC4  
                          i2l2250 0A7C                            i2l2172 0EC8  
                          i2l2164 0EB8                            i2l2180 0ED4  
                          i2l2260 0AF4                            i2l2252 0A94  
                          i2l2174 0ECC                            i2l2166 0EBC  
                          i2l2182 0F24                            i2l2270 0B6C  
                          i2l2262 0B0C                            i2l2254 0AAC  
                          i2l2342 11EC                            i2l2176 0ED0  
                          i2l2168 0EC0                            i2l2184 0F26  
                          i2l2280 0BE4                            i2l2272 0B84  
                          i2l2264 0B24                            i2l2256 0AC4  
                          i2l2248 0A64                            i2l2602 1096  
                          i2l2282 0BFC                            i2l2274 0B9C  
                          i2l2266 0B3C                            i2l2258 0ADC  
                          i2l2346 11F4                            i2l2610 1312  
                          i2l2276 0BB4                            i2l2268 0B54  
                          i2l2284 0C0E                            i2l2700 016C  
                          i2l2550 1180                            i2l2542 111C  
                          i2l2278 0BCC                            i2l2286 0CAA  
                          i2l2294 14A2                            i2l2622 133E  
                  __CFG_WDTEN$OFF 000000                            i2l2288 0CAC  
                          i2l2296 14AA                            i2l2704 01A2  
                          i2l2546 1124                            i2l2570 1030  
                          i2l2298 14AE                            i2l2626 134C  
                          i2l2628 1356                            i2l2708 01C0  
                          i2l2652 005C                            i2l2558 1724  
                          i2l2582 1056                            i2l2718 01D4  
                          i2l2584 105E                            i2l2576 1040  
                          i2l2594 107E                            i2l2586 1062  
                          i2l2658 006E                            i2l2598 1088  
                          _RCREG1 000FAE                __size_of_Load_Data 010E  
                          _OSCCON 000FD3                __size_of_InitAnsel 0014  
                          _SPBRG1 000FAF                            _SSP1IF 007CF3  
              __size_of_Read_Data 004E                __size_of_InitTimer 0030  
                          _TXREG1 000FAD                         ??_Receive 0001  
              i2Set_Display@value 0012                    __CFG_XINST$OFF 000000  
                    _CCPTMRS0bits 000F49       __size_ofi2_Check_Detonators 0038  
              __size_of_Save_Data 0054                         ??___awdiv 0005  
                       ??___lwmod 0064                            clear_0 141A  
                ___awdiv@quotient 0007                            _pixels 0034  
          __size_of_Check_Buttons 051E  i2Evaluate_Signs@evaluation_value 000E  
  Evaluate_Signs@evaluation_value 006D                      __mediumconst 0000  
               __end_ofi2___lwmod 14D6               __size_ofi2_Set_Bits 00BA  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                i2Transmit@receiver 0003  
             __end_of_Set_Display 11E8                   __CFG_HFOFST$OFF 000000  
             __size_ofi2_Transmit 0036              Isr@pixel_index_array 0026  
                      __accesstop 0060           __end_of__initialization 1440  
                 __CFG_PBADEN$OFF 000000                   ??_InitInterrupt 0060  
                   ___rparam_used 000001                    i2Transmit@port 0002  
              i2___lwmod@dividend 0001                    __pcstackCOMRAM 0001  
       __size_of_Check_Detonators 003C                      __pidataBANK1 0F68  
                   ??_Start_Timer 0060        __size_of_InitMiscellaneous 0006  
      __size_of_Ignite_Detonators 006C                 __end_of_Load_Data 0DC4  
               __end_of_InitAnsel 16F6                 __end_of_Read_Data 1406  
               __end_of_InitTimer 1628                         ?_Del_Data 0001  
    __end_ofi2_Write_Display_Byte 1516                 __end_of_Save_Data 13B8  
                      __pbssBANK0 0079                Isr@pixel_index_bit 0027  
                 __CFG_PLLCFG$OFF 000000                     _Check_Buttons 0270  
                       ?_InitPort 0001                         ?_InitTris 0001  
                       ?_Set_Bits 0060                __CFG_CCP2MX$PORTC1 000000  
        __end_of_Evaluate_Display 0A5C                __CFG_CCP3MX$PORTB5 000000  
                       ?_Transmit 0060                       _Set_Display 1184  
                      ??_Del_Data 0076            __size_of_Delay_Routine 0030  
             __end_of_Start_Timer 16E2                 ?_InitTransmission 0001  
               __CFG_PRICLKEN$OFF 000000                           _SSP1BUF 000FC9  
               ?i2_Evaluate_Signs 000E                ??_InitTransmission 0060  
              ??i2_Evaluate_Signs 0010                    ?_Check_Buttons 0001  
                      ??_InitPort 0060                        ??_InitTris 0060  
     i2Write_Display_Byte@counter 0007                      ??i2_Set_Bits 0004  
                      ??_Set_Bits 0063                   __CFG_PWRTEN$OFF 000000  
                         _Receive 171A                           __Hparam 0000  
                         __Lparam 0000                  Load_Data@counter 0075  
                         ___awdiv 101C                  ??_Evaluate_Signs 006F  
                    ??i2_Transmit 0003                        ??_Transmit 0062  
                         ___lwmod 124C                      __psmallconst 021A  
                 __CFG_STVREN$OFF 000000                           __pcinit 1406  
                         __ramtop 0200                           __ptext0 1658  
                         __ptext1 16A8                           __ptext2 16F6  
                         __ptext3 1684                           __ptext4 15F8  
                         __ptext5 1708                           __ptext6 1734  
                         __ptext7 1728                           __ptext8 16E2  
                         __ptext9 1516                         _T1CONbits 000FCD  
                    __size_of_Isr 020E                   Set_Display@type 0073  
                       _T3CONbits 000FB1                __end_ofi2_Set_Bits 0F68  
                         _overrun 01DA              end_of_initialization 1440  
     __size_of_Write_Display_Byte 0060                __end_ofi2_Transmit 15F8  
                   __Lmediumconst 0000                i2_Evaluate_Display 0A5C  
                   _Delay_Routine 1628              i2_Write_Display_Byte 14D6  
             ?i2_Evaluate_Display 0009                         _RCSTAbits 000FAB  
                _Check_Detonators 1516                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE            i2Evaluate_Display@size 000D  
                     _Start_Timer 16C6                         _PORTBbits 000F81  
                       _PORTCbits 000F82               i2Transmit@operation 0001  
           __end_ofi2_Set_Display 1364                         _TRISCbits 000F94  
            ??i2_Evaluate_Display 000B                   ??_Check_Buttons 0077  
        Ignite_Detonators@counter 0006                         i2___lwmod 1494  
                   _check_counter 0031                    ?_Delay_Routine 0001  
                     _CCP1CONbits 000FBD             ?i2_Write_Display_Byte 0001  
      __end_ofi2_Check_Detonators 15C2          i2Set_Display@information 0011  
                    Set_Bits@bits 0060               start_initialization 1406  
                       _Load_Data 0CB6                         _InitAnsel 16E2  
                    _ignite_ready 01D8                 __size_of_Del_Data 0046  
                     __end_of_Isr 0216                         _Read_Data 13B8  
                       _InitTimer 15F8                        ?i2___lwmod 0001  
                Set_Bits@bitcount 0066                         _Save_Data 1364  
  i2Write_Display_Byte@write_data 0001                 __size_of_InitPort 0012  
               __size_of_InitTris 0012             __end_of_InitInterrupt 1734  
               __size_of_Set_Bits 00EA                 ?_Evaluate_Display 0068  
                     __pdataBANK1 0100                ??_Evaluate_Display 006A  
                  _slave_selected 007A                 __size_of_Transmit 0038  
                    ?_Set_Display 0070            Save_Data@store_address 0062  
                     __pbssCOMRAM 0029                        ?_Load_Data 0001  
                      ?_InitAnsel 0001                     __pcstackBANK0 0060  
                      ?_Read_Data 0060                        ?_InitTimer 0001  
               i2___lwmod@divisor 0003                 i2___lwmod@counter 0005  
                 ??_Delay_Routine 0060                        ?_Save_Data 0060  
          ??i2_Write_Display_Byte 0003                      _current_time 002F  
                _master_addressed 01D9                          ?_Receive 0001  
       __size_of_InitTransmission 0024         __size_ofi2_Evaluate_Signs 0064  
           Read_Data@read_address 0064                         __pintcode 0008  
                        ?___awdiv 0001                          ?___lwmod 0060  
                     __smallconst 021A          __end_of_Check_Detonators 1552  
                     ??i2___lwmod 0005                          _PIE1bits 000F9D  
             i2Set_Bits@Bitoutput 0008                          i2u117_40 0C42  
                        i2u117_47 0C38                          i2u191_44 0184  
                        i2u191_45 0180                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          i2u189_44 0152  
                        i2u189_45 014E                  __CFG_WDTPS$32768 000000  
      i2Evaluate_Display@evaluate 0009                          _SSP1CON1 000FC6  
                        _SSP1STAT 000FC7                      ?_Start_Timer 0001  
                  i2Set_Bits@bits 0001                          _Del_Data 144E  
                     ??_Load_Data 0074                       ??_InitAnsel 0060  
                 _receive_counter 0033                       ??_Read_Data 0062  
                     ??_InitTimer 0060        __end_of_Write_Display_Byte 130E  
                       copy_data0 1434                          _InitPort 1708  
                        _InitTris 16F6                       ??_Save_Data 0063  
               Transmit@operation 0060                        _EECON1bits 000FA6  
                 Isr@search_index 0028                          _Set_Bits 0DC4  
                    _pin_selected 0079                          __Hrparam 0000  
                __size_of_Receive 000E                          __Lrparam 0000  
               __CFG_P2BMX$PORTB5 000000                          _Transmit 1552  
                __size_of___awdiv 0084                  __size_of___lwmod 0062  
    i2Evaluate_Signs@valuecounter 0010                i2_Check_Detonators 158A  
            __size_of_Set_Display 0064           __size_of_Evaluate_Signs 0078  
     __size_ofi2_Evaluate_Display 025A               ?i2_Check_Detonators 0001  
                        __ptext10 1552                          __ptext11 0270  
                        __ptext20 078E                          __ptext12 16C6  
                        __ptext21 0DC4                          __ptext13 144E  
                        __ptext30 0EAE                          __ptext22 13B8  
                        __ptext14 1364                          __ptext31 158A  
                        __ptext23 1628                          __ptext15 0CB6  
                        __ptext32 101C                          __ptext16 1184  
                        __ptext33 171A                          __ptext25 130E  
                        __ptext17 12AE                          __ptext34 1118  
                        __ptext26 14D6                          __ptext18 10A0  
                        __ptext35 15C2                          __ptext27 11E8  
                        __ptext19 124C                          __ptext28 1494  
                        __ptext29 0A5C             __end_of_Check_Buttons 078E  
                Set_Display@value 0071                     __size_of_Init 001E  
                   __size_of_main 002C                          _received 0029  
          __size_ofi2_Set_Display 0056                  _InitTransmission 1684  
      Delay_Routine@delay_counter 0062                  i2_Evaluate_Signs 11E8  
            ??i2_Check_Detonators 0004                          _testflag 01DB  
                        int$flags 003C              Evaluate_Display@size 006C  
                Transmit@receiver 0062      Write_Display_Byte@write_data 0060  
      Evaluate_Signs@valuecounter 006F                        _INTCONbits 000FF2  
       __size_of_Evaluate_Display 02CE                Read_Data@data_read 0062  
                        intlevel2 0000                  ___lwmod@dividend 0060  
       Write_Display_Byte@counter 0066                        _RCSTA1bits 000FAB  
                 _display_counter 0032                i2Set_Bits@bitcount 0007  
                 Del_Data@counter 0076              __size_of_Start_Timer 001C  
                   i2_Set_Display 130E                   ___lwmod@divisor 0062  
   Delay_Routine@delay_multiplyer 0061                   ___lwmod@counter 0064  
               __CFG_T3CMX$PORTC0 000000            __size_of_InitInterrupt 000C  
               ?_Check_Detonators 0001                ??_Check_Detonators 0063  
           __end_of_Delay_Routine 1658                 __CFG_FOSC$INTIO67 000000  
                      i2_Set_Bits 0EAE     __size_ofi2_Write_Display_Byte 0040  
