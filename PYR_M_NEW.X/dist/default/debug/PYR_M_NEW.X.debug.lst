

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Feb 03 22:00:13 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           	psect	idataBANK1
    56  000FA2                     __pidataBANK1:
    57                           	opt stack 0
    58                           
    59                           ;initializer for _pin
    60  000FA2  00                 	db	0
    61  000FA3  00                 	db	0
    62  000FA4  00                 	db	0
    63  000FA5  1F                 	db	31
    64  000FA6  00                 	db	0
    65  000FA7  00                 	db	0
    66  000FA8  00                 	db	0
    67  000FA9  01                 	db	1
    68  000FAA  01                 	db	1
    69  000FAB  1E                 	db	30
    70  000FAC  00                 	db	0
    71  000FAD  00                 	db	0
    72  000FAE  00                 	db	0
    73  000FAF  02                 	db	2
    74  000FB0  02                 	db	2
    75  000FB1  1D                 	db	29
    76  000FB2  00                 	db	0
    77  000FB3  00                 	db	0
    78  000FB4  00                 	db	0
    79  000FB5  03                 	db	3
    80  000FB6  03                 	db	3
    81  000FB7  1C                 	db	28
    82  000FB8  00                 	db	0
    83  000FB9  00                 	db	0
    84  000FBA  00                 	db	0
    85  000FBB  04                 	db	4
    86  000FBC  04                 	db	4
    87  000FBD  1B                 	db	27
    88  000FBE  00                 	db	0
    89  000FBF  00                 	db	0
    90  000FC0  00                 	db	0
    91  000FC1  05                 	db	5
    92  000FC2  05                 	db	5
    93  000FC3  1A                 	db	26
    94  000FC4  00                 	db	0
    95  000FC5  00                 	db	0
    96  000FC6  00                 	db	0
    97  000FC7  06                 	db	6
    98  000FC8  06                 	db	6
    99  000FC9  19                 	db	25
   100  000FCA  00                 	db	0
   101  000FCB  00                 	db	0
   102  000FCC  00                 	db	0
   103  000FCD  07                 	db	7
   104  000FCE  07                 	db	7
   105  000FCF  18                 	db	24
   106  000FD0  00                 	db	0
   107  000FD1  00                 	db	0
   108  000FD2  00                 	db	0
   109  000FD3  08                 	db	8
   110  000FD4  08                 	db	8
   111  000FD5  27                 	db	39
   112  000FD6  00                 	db	0
   113  000FD7  00                 	db	0
   114  000FD8  00                 	db	0
   115  000FD9  09                 	db	9
   116  000FDA  09                 	db	9
   117  000FDB  26                 	db	38
   118  000FDC  00                 	db	0
   119  000FDD  00                 	db	0
   120  000FDE  01                 	db	1
   121  000FDF  00                 	db	0
   122  000FE0  0A                 	db	10
   123  000FE1  25                 	db	37
   124  000FE2  00                 	db	0
   125  000FE3  00                 	db	0
   126  000FE4  01                 	db	1
   127  000FE5  01                 	db	1
   128  000FE6  0B                 	db	11
   129  000FE7  24                 	db	36
   130  000FE8  00                 	db	0
   131  000FE9  00                 	db	0
   132  000FEA  01                 	db	1
   133  000FEB  02                 	db	2
   134  000FEC  0C                 	db	12
   135  000FED  23                 	db	35
   136  000FEE  00                 	db	0
   137  000FEF  00                 	db	0
   138  000FF0  01                 	db	1
   139  000FF1  03                 	db	3
   140  000FF2  0D                 	db	13
   141  000FF3  22                 	db	34
   142  000FF4  00                 	db	0
   143  000FF5  00                 	db	0
   144  000FF6  01                 	db	1
   145  000FF7  04                 	db	4
   146  000FF8  0E                 	db	14
   147  000FF9  21                 	db	33
   148  000FFA  00                 	db	0
   149  000FFB  00                 	db	0
   150  000FFC  01                 	db	1
   151  000FFD  05                 	db	5
   152  000FFE  0F                 	db	15
   153  000FFF  20                 	db	32
   154  001000  00                 	db	0
   155  001001  00                 	db	0
   156  001002  01                 	db	1
   157  001003  06                 	db	6
   158  001004  10                 	db	16
   159  001005  2F                 	db	47
   160  001006  00                 	db	0
   161  001007  00                 	db	0
   162  001008  01                 	db	1
   163  001009  07                 	db	7
   164  00100A  11                 	db	17
   165  00100B  2E                 	db	46
   166  00100C  00                 	db	0
   167  00100D  00                 	db	0
   168  00100E  01                 	db	1
   169  00100F  08                 	db	8
   170  001010  12                 	db	18
   171  001011  2D                 	db	45
   172  001012  00                 	db	0
   173  001013  00                 	db	0
   174  001014  01                 	db	1
   175  001015  09                 	db	9
   176  001016  13                 	db	19
   177  001017  2C                 	db	44
   178  001018  00                 	db	0
   179  001019  00                 	db	0
   180  00101A  02                 	db	2
   181  00101B  00                 	db	0
   182  00101C  14                 	db	20
   183  00101D  2B                 	db	43
   184  00101E  00                 	db	0
   185  00101F  00                 	db	0
   186  001020  02                 	db	2
   187  001021  01                 	db	1
   188  001022  15                 	db	21
   189  001023  2A                 	db	42
   190  001024  00                 	db	0
   191  001025  00                 	db	0
   192  001026  02                 	db	2
   193  001027  02                 	db	2
   194  001028  16                 	db	22
   195  001029  29                 	db	41
   196  00102A  00                 	db	0
   197  00102B  00                 	db	0
   198  00102C  02                 	db	2
   199  00102D  03                 	db	3
   200  00102E  17                 	db	23
   201  00102F  28                 	db	40
   202  001030  00                 	db	0
   203  001031  00                 	db	0
   204  001032  02                 	db	2
   205  001033  04                 	db	4
   206  001034  18                 	db	24
   207  001035  35                 	db	53
   208  001036  00                 	db	0
   209  001037  00                 	db	0
   210  001038  02                 	db	2
   211  001039  05                 	db	5
   212  00103A  19                 	db	25
   213  00103B  34                 	db	52
   214  00103C  00                 	db	0
   215  00103D  00                 	db	0
   216  00103E  02                 	db	2
   217  00103F  06                 	db	6
   218  001040  1A                 	db	26
   219  001041  33                 	db	51
   220  001042  00                 	db	0
   221  001043  00                 	db	0
   222  001044  02                 	db	2
   223  001045  07                 	db	7
   224  001046  1B                 	db	27
   225  001047  32                 	db	50
   226  001048  00                 	db	0
   227  001049  00                 	db	0
   228  00104A  02                 	db	2
   229  00104B  08                 	db	8
   230  00104C  1C                 	db	28
   231  00104D  31                 	db	49
   232  00104E  00                 	db	0
   233  00104F  00                 	db	0
   234  001050  02                 	db	2
   235  001051  09                 	db	9
   236  001052  1D                 	db	29
   237  001053  30                 	db	48
   238  001054  00                 	db	0
   239  001055  00                 	db	0
   240                           
   241                           	psect	nvCOMRAM
   242  00003F                     __pnvCOMRAM:
   243                           	opt stack 0
   244  00003F                     _display_counter:
   245                           	opt stack 0
   246  00003F                     	ds	1
   247  0000                     _ANSELA	set	3896
   248  0000                     _ANSELB	set	3897
   249  0000                     _ANSELC	set	3898
   250  0000                     _CCPTMRS0bits	set	3913
   251  0000                     _BAUDCON1bits	set	4024
   252  0000                     _CCP1CONbits	set	4029
   253  0000                     _CCPR1H	set	4031
   254  0000                     _CCPR1L	set	4030
   255  0000                     _EEADR	set	4009
   256  0000                     _EECON1bits	set	4006
   257  0000                     _EECON2	set	4007
   258  0000                     _EEDATA	set	4008
   259  0000                     _INTCONbits	set	4082
   260  0000                     _OSCCON	set	4051
   261  0000                     _PIE1bits	set	3997
   262  0000                     _PIR1bits	set	3998
   263  0000                     _PIR2bits	set	4001
   264  0000                     _PORTA	set	3968
   265  0000                     _PORTAbits	set	3968
   266  0000                     _PORTB	set	3969
   267  0000                     _PORTBbits	set	3969
   268  0000                     _PORTC	set	3970
   269  0000                     _PORTCbits	set	3970
   270  0000                     _PORTE	set	3972
   271  0000                     _RCREG1	set	4014
   272  0000                     _RCSTA1bits	set	4011
   273  0000                     _RCSTAbits	set	4011
   274  0000                     _SPBRG1	set	4015
   275  0000                     _SSP1BUF	set	4041
   276  0000                     _SSP1CON1	set	4038
   277  0000                     _SSP1STAT	set	4039
   278  0000                     _T1CONbits	set	4045
   279  0000                     _T3CONbits	set	4017
   280  0000                     _TMR1H	set	4047
   281  0000                     _TMR1L	set	4046
   282  0000                     _TMR3H	set	4019
   283  0000                     _TMR3L	set	4018
   284  0000                     _TRISA	set	3986
   285  0000                     _TRISB	set	3987
   286  0000                     _TRISC	set	3988
   287  0000                     _TRISCbits	set	3988
   288  0000                     _TRISE	set	3990
   289  0000                     _TXREG1	set	4013
   290  0000                     _TXSTA1bits	set	4012
   291  0000                     _SSP1IF	set	31987
   292                           
   293                           	psect	smallconst
   294  00021A                     __psmallconst:
   295                           	opt stack 0
   296  00021A  00                 	db	0
   297  00021B                     STR_11:
   298  00021B  41                 	db	65	;'A'
   299  00021C  42                 	db	66	;'B'
   300  00021D  43                 	db	67	;'C'
   301  00021E  44                 	db	68	;'D'
   302  00021F  45                 	db	69	;'E'
   303  000220  46                 	db	70	;'F'
   304  000221  47                 	db	71	;'G'
   305  000222  00                 	db	0
   306  000223                     STR_3:
   307  000223  41                 	db	65	;'A'
   308  000224  42                 	db	66	;'B'
   309  000225  43                 	db	67	;'C'
   310  000226  44                 	db	68	;'D'
   311  000227  45                 	db	69	;'E'
   312  000228  46                 	db	70	;'F'
   313  000229  00                 	db	0
   314  00022A                     STR_12:
   315  00022A  41                 	db	65	;'A'
   316  00022B  42                 	db	66	;'B'
   317  00022C  43                 	db	67	;'C'
   318  00022D  44                 	db	68	;'D'
   319  00022E  46                 	db	70	;'F'
   320  00022F  47                 	db	71	;'G'
   321  000230  00                 	db	0
   322  000231                     STR_13:
   323  000231  41                 	db	65	;'A'
   324  000232  42                 	db	66	;'B'
   325  000233  43                 	db	67	;'C'
   326  000234  45                 	db	69	;'E'
   327  000235  46                 	db	70	;'F'
   328  000236  47                 	db	71	;'G'
   329  000237  00                 	db	0
   330  000238                     STR_9:
   331  000238  41                 	db	65	;'A'
   332  000239  43                 	db	67	;'C'
   333  00023A  44                 	db	68	;'D'
   334  00023B  45                 	db	69	;'E'
   335  00023C  46                 	db	70	;'F'
   336  00023D  47                 	db	71	;'G'
   337  00023E  00                 	db	0
   338  00023F                     STR_6:
   339  00023F  41                 	db	65	;'A'
   340  000240  42                 	db	66	;'B'
   341  000241  43                 	db	67	;'C'
   342  000242  44                 	db	68	;'D'
   343  000243  47                 	db	71	;'G'
   344  000244  00                 	db	0
   345  000245                     STR_5:
   346  000245  41                 	db	65	;'A'
   347  000246  42                 	db	66	;'B'
   348  000247  44                 	db	68	;'D'
   349  000248  45                 	db	69	;'E'
   350  000249  47                 	db	71	;'G'
   351  00024A  00                 	db	0
   352  00024B                     STR_8:
   353  00024B  41                 	db	65	;'A'
   354  00024C  43                 	db	67	;'C'
   355  00024D  44                 	db	68	;'D'
   356  00024E  46                 	db	70	;'F'
   357  00024F  47                 	db	71	;'G'
   358  000250  00                 	db	0
   359  000251                     STR_18:
   360  000251  41                 	db	65	;'A'
   361  000252  42                 	db	66	;'B'
   362  000253  45                 	db	69	;'E'
   363  000254  46                 	db	70	;'F'
   364  000255  47                 	db	71	;'G'
   365  000256  00                 	db	0
   366  000257                     STR_15:
   367  000257  41                 	db	65	;'A'
   368  000258  44                 	db	68	;'D'
   369  000259  45                 	db	69	;'E'
   370  00025A  46                 	db	70	;'F'
   371  00025B  47                 	db	71	;'G'
   372  00025C  00                 	db	0
   373  00025D                     STR_7:
   374  00025D  42                 	db	66	;'B'
   375  00025E  43                 	db	67	;'C'
   376  00025F  46                 	db	70	;'F'
   377  000260  47                 	db	71	;'G'
   378  000261  00                 	db	0
   379  000262                     STR_10:
   380  000262  41                 	db	65	;'A'
   381  000263  42                 	db	66	;'B'
   382  000264  43                 	db	67	;'C'
   383  000265  00                 	db	0
   384  000266                     STR_1:
   385  000266  4C                 	db	76	;'L'
   386  000267  4F                 	db	79	;'O'
   387  000268  41                 	db	65	;'A'
   388  000269  00                 	db	0
   389  00026A                     STR_2:
   390  00026A  44                 	db	68	;'D'
   391  00026B  45                 	db	69	;'E'
   392  00026C  4C                 	db	76	;'L'
   393  00026D  00                 	db	0
   394  0000                     
   395                           ; #config settings
   396  00026E  00                 	db	0	; dummy byte at the end
   397  0000                     
   398                           	psect	cinit
   399  001442                     __pcinit:
   400                           	opt stack 0
   401  001442                     start_initialization:
   402                           	opt stack 0
   403  001442                     __initialization:
   404                           	opt stack 0
   405                           
   406                           ; Clear objects allocated to BANK0 (5 bytes)
   407  001442  0100               	movlb	0
   408  001444  6B81               	clrf	(__pbssBANK0+4)& (0+255),b
   409  001446  6B80               	clrf	(__pbssBANK0+3)& (0+255),b
   410  001448  6B7F               	clrf	(__pbssBANK0+2)& (0+255),b
   411  00144A  6B7E               	clrf	(__pbssBANK0+1)& (0+255),b
   412  00144C  6B7D               	clrf	__pbssBANK0& (0+255),b
   413                           
   414                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   415  00144E  6A3E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   416                           
   417                           ; Clear objects allocated to COMRAM (17 bytes)
   418  001450  EE00  F02D         	lfsr	0,__pbssCOMRAM
   419  001454  0E11               	movlw	17
   420  001456                     clear_0:
   421  001456  6AEE               	clrf	postinc0,c
   422  001458  06E8               	decf	wreg,f,c
   423  00145A  E1FD               	bnz	clear_0
   424                           
   425                           ; Initialize objects allocated to BANK1 (180 bytes)
   426                           ; load TBLPTR registers with __pidataBANK1
   427  00145C  0EA2               	movlw	low __pidataBANK1
   428  00145E  6EF6               	movwf	tblptrl,c
   429  001460  0E0F               	movlw	high __pidataBANK1
   430  001462  6EF7               	movwf	tblptrh,c
   431  001464  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   432  001466  6EF8               	movwf	tblptru,c
   433  001468  EE01  F000         	lfsr	0,__pdataBANK1
   434  00146C  EE10 F0B4          	lfsr	1,180
   435  001470                     copy_data0:
   436  001470  0009               	tblrd		*+
   437  001472  CFF5 FFEE          	movff	tablat,postinc0
   438  001476  50E5               	movf	postdec1,w,c
   439  001478  50E1               	movf	fsr1l,w,c
   440  00147A  E1FA               	bnz	copy_data0
   441  00147C                     end_of_initialization:
   442                           	opt stack 0
   443  00147C                     __end_of__initialization:
   444                           	opt stack 0
   445  00147C  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   446  00147E  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   447  001480  0E00               	movlw	low (__Lmediumconst shr (0+16))
   448  001482  6EF8               	movwf	tblptru,c
   449  001484  0100               	movlb	0
   450  001486  EF4B  F00B         	goto	_main	;jump to C main() function
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           postinc0	equ	0xFEE
   456                           wreg	equ	0xFE8
   457                           postdec1	equ	0xFE5
   458                           fsr1l	equ	0xFE1
   459                           
   460                           	psect	bitbssCOMRAM
   461  0001F0                     __pbitbssCOMRAM:
   462                           	opt stack 0
   463  0001F0                     _ignite_ready:
   464                           	opt stack 0
   465  0001F0                     	ds	1
   466  0001F1                     _master_addressed:
   467                           	opt stack 0
   468  0001F1                     	ds	1
   469  0001F2                     _overrun:
   470                           	opt stack 0
   471  0001F2                     	ds	1
   472  0001F3                     _testflag:
   473                           	opt stack 0
   474  0001F3                     	ds	1
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           postdec1	equ	0xFE5
   482                           fsr1l	equ	0xFE1
   483                           
   484                           	psect	bssCOMRAM
   485  00002D                     __pbssCOMRAM:
   486                           	opt stack 0
   487  00002D                     _received:
   488                           	opt stack 0
   489  00002D                     	ds	6
   490  000033                     _current_time:
   491                           	opt stack 0
   492  000033                     	ds	2
   493  000035                     _check_counter:
   494                           	opt stack 0
   495  000035                     	ds	1
   496  000036                     _receive_counter:
   497                           	opt stack 0
   498  000036                     	ds	1
   499  000037                     _pixels:
   500                           	opt stack 0
   501  000037                     	ds	7
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	bssBANK0
   512  00007D                     __pbssBANK0:
   513                           	opt stack 0
   514  00007D                     _pin_selected:
   515                           	opt stack 0
   516  00007D                     	ds	1
   517  00007E                     _slave_selected:
   518                           	opt stack 0
   519  00007E                     	ds	1
   520  00007F                     _signs:
   521                           	opt stack 0
   522  00007F                     	ds	3
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	dataBANK1
   533  000100                     __pdataBANK1:
   534                           	opt stack 0
   535  000100                     _pin:
   536                           	opt stack 0
   537  000100                     	ds	180
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           postdec1	equ	0xFE5
   545                           fsr1l	equ	0xFE1
   546                           
   547                           	psect	cstackBANK0
   548  000060                     __pcstackBANK0:
   549                           	opt stack 0
   550  000060                     ??_Delay_Routine:
   551  000060                     ?_Read_Data:
   552                           	opt stack 0
   553  000060                     ?___lwmod:
   554                           	opt stack 0
   555  000060                     Transmit@operation:
   556                           	opt stack 0
   557  000060                     Save_Data@store:
   558                           	opt stack 0
   559  000060                     Write_Display_Byte@write_data:
   560                           	opt stack 0
   561  000060                     ___lwmod@dividend:
   562                           	opt stack 0
   563  000060                     Set_Bits@bits:
   564                           	opt stack 0
   565                           
   566                           ; 3 bytes @ 0x0
   567  000060                     	ds	1
   568  000061                     Delay_Routine@delay_multiplyer:
   569                           	opt stack 0
   570  000061                     Transmit@port:
   571                           	opt stack 0
   572                           
   573                           ; 1 bytes @ 0x1
   574  000061                     	ds	1
   575  000062                     ??_Write_Display_Byte:
   576  000062                     Delay_Routine@delay_counter:
   577                           	opt stack 0
   578  000062                     Save_Data@store_address:
   579                           	opt stack 0
   580  000062                     Transmit@receiver:
   581                           	opt stack 0
   582  000062                     Read_Data@data_read:
   583                           	opt stack 0
   584  000062                     ___lwmod@divisor:
   585                           	opt stack 0
   586                           
   587                           ; 2 bytes @ 0x2
   588  000062                     	ds	1
   589  000063                     ??_Set_Bits:
   590                           
   591                           ; 0 bytes @ 0x3
   592  000063                     	ds	1
   593  000064                     Read_Data@read_address:
   594                           	opt stack 0
   595  000064                     ___lwmod@counter:
   596                           	opt stack 0
   597                           
   598                           ; 1 bytes @ 0x4
   599  000064                     	ds	2
   600  000066                     Set_Bits@bitcount:
   601                           	opt stack 0
   602  000066                     Write_Display_Byte@counter:
   603                           	opt stack 0
   604                           
   605                           ; 1 bytes @ 0x6
   606  000066                     	ds	1
   607  000067                     Set_Bits@Bitoutput:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x7
   611  000067                     	ds	1
   612  000068                     Evaluate_Display@evaluate:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x8
   616  000068                     	ds	2
   617  00006A                     ??_Evaluate_Display:
   618                           
   619                           ; 0 bytes @ 0xA
   620  00006A                     	ds	6
   621  000070                     Evaluate_Display@size:
   622                           	opt stack 0
   623                           
   624                           ; 1 bytes @ 0x10
   625  000070                     	ds	1
   626  000071                     Evaluate_Signs@evaluation_value:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0x11
   630  000071                     	ds	2
   631  000073                     Evaluate_Signs@valuecounter:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x13
   635  000073                     	ds	1
   636  000074                     Set_Display@information:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x14
   640  000074                     	ds	1
   641  000075                     Set_Display@value:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x15
   645  000075                     	ds	2
   646  000077                     Set_Display@type:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x17
   650  000077                     	ds	1
   651  000078                     ??_Load_Data:
   652                           
   653                           ; 0 bytes @ 0x18
   654  000078                     	ds	1
   655  000079                     Load_Data@counter:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x19
   659  000079                     	ds	1
   660  00007A                     Del_Data@counter:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x1A
   664  00007A                     	ds	1
   665  00007B                     ??_Check_Buttons:
   666                           
   667                           ; 0 bytes @ 0x1B
   668  00007B                     	ds	2
   669  00007D                     tblptru	equ	0xFF8
   670                           tblptrh	equ	0xFF7
   671                           tblptrl	equ	0xFF6
   672                           tablat	equ	0xFF5
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           postdec1	equ	0xFE5
   676                           fsr1l	equ	0xFE1
   677                           
   678                           ; 0 bytes @ 0x1D
   679                           
   680                           	psect	cstackCOMRAM
   681  000001                     __pcstackCOMRAM:
   682                           	opt stack 0
   683  000001                     ?___awdiv:
   684                           	opt stack 0
   685  000001                     ?i2___lwmod:
   686                           	opt stack 0
   687  000001                     i2Transmit@operation:
   688                           	opt stack 0
   689  000001                     ___awdiv@dividend:
   690                           	opt stack 0
   691  000001                     i2Write_Display_Byte@write_data:
   692                           	opt stack 0
   693  000001                     i2___lwmod@dividend:
   694                           	opt stack 0
   695  000001                     i2Set_Bits@bits:
   696                           	opt stack 0
   697                           
   698                           ; 3 bytes @ 0x0
   699  000001                     	ds	1
   700  000002                     i2Transmit@port:
   701                           	opt stack 0
   702                           
   703                           ; 1 bytes @ 0x1
   704  000002                     	ds	1
   705  000003                     ??i2_Write_Display_Byte:
   706  000003                     i2Transmit@receiver:
   707                           	opt stack 0
   708  000003                     ___awdiv@divisor:
   709                           	opt stack 0
   710  000003                     i2___lwmod@divisor:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x2
   714  000003                     	ds	1
   715  000004                     ??i2_Set_Bits:
   716                           
   717                           ; 0 bytes @ 0x3
   718  000004                     	ds	1
   719  000005                     ___awdiv@counter:
   720                           	opt stack 0
   721  000005                     i2___lwmod@counter:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0x4
   725  000005                     	ds	1
   726  000006                     Ignite_Detonators@counter:
   727                           	opt stack 0
   728  000006                     ___awdiv@sign:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x5
   732  000006                     	ds	1
   733  000007                     i2Set_Bits@bitcount:
   734                           	opt stack 0
   735  000007                     i2Write_Display_Byte@counter:
   736                           	opt stack 0
   737  000007                     ___awdiv@quotient:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x6
   741  000007                     	ds	1
   742  000008                     i2Set_Bits@Bitoutput:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x7
   746  000008                     	ds	1
   747  000009                     i2Evaluate_Display@evaluate:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x8
   751  000009                     	ds	2
   752  00000B                     ??i2_Evaluate_Display:
   753                           
   754                           ; 0 bytes @ 0xA
   755  00000B                     	ds	6
   756  000011                     i2Evaluate_Display@size:
   757                           	opt stack 0
   758                           
   759                           ; 1 bytes @ 0x10
   760  000011                     	ds	1
   761  000012                     i2Evaluate_Signs@evaluation_value:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x11
   765  000012                     	ds	2
   766  000014                     i2Evaluate_Signs@valuecounter:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x13
   770  000014                     	ds	1
   771  000015                     i2Set_Display@information:
   772                           	opt stack 0
   773                           
   774                           ; 1 bytes @ 0x14
   775  000015                     	ds	1
   776  000016                     i2Set_Display@value:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x15
   780  000016                     	ds	2
   781  000018                     i2Set_Display@type:
   782                           	opt stack 0
   783                           
   784                           ; 1 bytes @ 0x17
   785  000018                     	ds	1
   786  000019                     ??_Isr:
   787                           
   788                           ; 0 bytes @ 0x18
   789  000019                     	ds	17
   790  00002A                     Isr@pixel_index_array:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x29
   794  00002A                     	ds	1
   795  00002B                     Isr@pixel_index_bit:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x2A
   799  00002B                     	ds	1
   800  00002C                     Isr@search_index:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x2B
   804  00002C                     	ds	1
   805                           tblptru	equ	0xFF8
   806                           tblptrh	equ	0xFF7
   807                           tblptrl	equ	0xFF6
   808                           tablat	equ	0xFF5
   809                           postinc0	equ	0xFEE
   810                           wreg	equ	0xFE8
   811                           postdec1	equ	0xFE5
   812                           fsr1l	equ	0xFE1
   813                           
   814 ;;
   815 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   816 ;;
   817 ;; *************** function _main *****************
   818 ;; Defined at:
   819 ;;		line 86 in file "main.c"
   820 ;; Parameters:    Size  Location     Type
   821 ;;		None
   822 ;; Auto vars:     Size  Location     Type
   823 ;;		None
   824 ;; Return value:  Size  Location     Type
   825 ;;		None               void
   826 ;; Registers used:
   827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1
   833 ;;      Params:         0       0       0
   834 ;;      Locals:         0       0       0
   835 ;;      Temps:          0       0       0
   836 ;;      Totals:         0       0       0
   837 ;;Total ram usage:        0 bytes
   838 ;; Hardware stack levels required when called:   12
   839 ;; This function calls:
   840 ;;		_Check_Buttons
   841 ;;		_Check_Detonators
   842 ;;		_Init
   843 ;;		_Load_Data
   844 ;;		_Set_Display
   845 ;; This function is called by:
   846 ;;		Startup code after reset
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text0
   851  001696                     __ptext0:
   852                           	opt stack 0
   853  001696                     _main:
   854                           	opt stack 19
   855                           
   856                           ;main.c: 87: Init();
   857                           
   858                           ;incstack = 0
   859  001696  EC74  F00B         	call	_Init	;wreg free
   860                           
   861                           ;main.c: 88: Load_Data();
   862  00169A  EC78  F006         	call	_Load_Data	;wreg free
   863                           
   864                           ;main.c: 89: PORTAbits.RA0 = 1;
   865  00169E  8080               	bsf	3968,0,c	;volatile
   866  0016A0                     l3251:
   867                           
   868                           ;main.c: 91: Check_Buttons();
   869  0016A0  EC38  F001         	call	_Check_Buttons	;wreg free
   870                           
   871                           ;main.c: 92: if(testflag == 1) {
   872  0016A4  A63E               	btfss	_testflag/(0+8),_testflag& (0+7),c
   873  0016A6  D7FC               	goto	l3251
   874                           
   875                           ;main.c: 93: Set_Display('7', 'T',0);
   876  0016A8  0E54               	movlw	84
   877  0016AA  0100               	movlb	0	; () banked
   878  0016AC  6F74               	movwf	Set_Display@information& (0+255),b
   879  0016AE  0E00               	movlw	0
   880  0016B0  0100               	movlb	0	; () banked
   881  0016B2  6F76               	movwf	(Set_Display@value+1)& (0+255),b
   882  0016B4  0E00               	movlw	0
   883  0016B6  6F75               	movwf	Set_Display@value& (0+255),b
   884  0016B8  0E37               	movlw	55
   885  0016BA  ECDF  F008         	call	_Set_Display
   886                           
   887                           ;main.c: 94: Check_Detonators();
   888  0016BE  ECAA  F00A         	call	_Check_Detonators	;wreg free
   889  0016C2  D7EE               	goto	l3251
   890  0016C4                     __end_of_main:
   891                           	opt stack 0
   892                           tblptru	equ	0xFF8
   893                           tblptrh	equ	0xFF7
   894                           tblptrl	equ	0xFF6
   895                           tablat	equ	0xFF5
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           postdec1	equ	0xFE5
   899                           fsr1l	equ	0xFE1
   900                           
   901 ;; *************** function _Init *****************
   902 ;; Defined at:
   903 ;;		line 3 in file "init.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;		None               void
   910 ;; Registers used:
   911 ;;		wreg, status,2, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1
   917 ;;      Params:         0       0       0
   918 ;;      Locals:         0       0       0
   919 ;;      Temps:          0       0       0
   920 ;;      Totals:         0       0       0
   921 ;;Total ram usage:        0 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    6
   924 ;; This function calls:
   925 ;;		_InitAnsel
   926 ;;		_InitInterrupt
   927 ;;		_InitMiscellaneous
   928 ;;		_InitPort
   929 ;;		_InitTimer
   930 ;;		_InitTransmission
   931 ;;		_InitTris
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text1
   938  0016E8                     __ptext1:
   939                           	opt stack 0
   940  0016E8                     _Init:
   941                           	opt stack 24
   942                           
   943                           ;init.c: 4: InitPort();
   944                           
   945                           ;incstack = 0
   946  0016E8  ECA4  F00B         	call	_InitPort	;wreg free
   947                           
   948                           ;init.c: 5: InitTris();
   949  0016EC  EC9B  F00B         	call	_InitTris	;wreg free
   950                           
   951                           ;init.c: 6: InitAnsel();
   952  0016F0  EC91  F00B         	call	_InitAnsel	;wreg free
   953                           
   954                           ;init.c: 7: InitMiscellaneous();
   955  0016F4  ECBA  F00B         	call	_InitMiscellaneous	;wreg free
   956                           
   957                           ;init.c: 8: InitTransmission();
   958  0016F8  EC62  F00B         	call	_InitTransmission	;wreg free
   959                           
   960                           ;init.c: 9: InitTimer();
   961  0016FC  EC1B  F00B         	call	_InitTimer	;wreg free
   962                           
   963                           ;init.c: 10: InitInterrupt();
   964  001700  ECB4  F00B         	call	_InitInterrupt	;wreg free
   965  001704  0012               	return		;funcret
   966  001706                     __end_of_Init:
   967                           	opt stack 0
   968                           tblptru	equ	0xFF8
   969                           tblptrh	equ	0xFF7
   970                           tblptrl	equ	0xFF6
   971                           tablat	equ	0xFF5
   972                           postinc0	equ	0xFEE
   973                           wreg	equ	0xFE8
   974                           postdec1	equ	0xFE5
   975                           fsr1l	equ	0xFE1
   976                           
   977 ;; *************** function _InitTris *****************
   978 ;; Defined at:
   979 ;;		line 20 in file "init.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;		None               void
   986 ;; Registers used:
   987 ;;		wreg, status,2
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK0   BANK1
   993 ;;      Params:         0       0       0
   994 ;;      Locals:         0       0       0
   995 ;;      Temps:          0       0       0
   996 ;;      Totals:         0       0       0
   997 ;;Total ram usage:        0 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; Hardware stack levels required when called:    5
  1000 ;; This function calls:
  1001 ;;		Nothing
  1002 ;; This function is called by:
  1003 ;;		_Init
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text2
  1008  001736                     __ptext2:
  1009                           	opt stack 0
  1010  001736                     _InitTris:
  1011                           	opt stack 24
  1012                           
  1013                           ;init.c: 21: TRISA = 0b00000000;
  1014                           
  1015                           ;incstack = 0
  1016  001736  0E00               	movlw	0
  1017  001738  6E92               	movwf	3986,c	;volatile
  1018                           
  1019                           ;init.c: 22: TRISB = 0b00011111;
  1020  00173A  0E1F               	movlw	31
  1021  00173C  6E93               	movwf	3987,c	;volatile
  1022                           
  1023                           ;init.c: 23: TRISC = 0b10000010;
  1024  00173E  0E82               	movlw	130
  1025  001740  6E94               	movwf	3988,c	;volatile
  1026                           
  1027                           ;init.c: 24: TRISE = 0;
  1028  001742  0E00               	movlw	0
  1029  001744  6E96               	movwf	3990,c	;volatile
  1030  001746  0012               	return		;funcret
  1031  001748                     __end_of_InitTris:
  1032                           	opt stack 0
  1033                           tblptru	equ	0xFF8
  1034                           tblptrh	equ	0xFF7
  1035                           tblptrl	equ	0xFF6
  1036                           tablat	equ	0xFF5
  1037                           postinc0	equ	0xFEE
  1038                           wreg	equ	0xFE8
  1039                           postdec1	equ	0xFE5
  1040                           fsr1l	equ	0xFE1
  1041                           
  1042 ;; *************** function _InitTransmission *****************
  1043 ;; Defined at:
  1044 ;;		line 37 in file "init.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;		None               void
  1051 ;; Registers used:
  1052 ;;		wreg, status,2
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1
  1058 ;;      Params:         0       0       0
  1059 ;;      Locals:         0       0       0
  1060 ;;      Temps:          0       0       0
  1061 ;;      Totals:         0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    5
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_Init
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text3
  1073  0016C4                     __ptext3:
  1074                           	opt stack 0
  1075  0016C4                     _InitTransmission:
  1076                           	opt stack 24
  1077                           
  1078                           ;init.c: 39: SSP1STAT = 0b01000000;
  1079                           
  1080                           ;incstack = 0
  1081  0016C4  0E40               	movlw	64
  1082  0016C6  6EC7               	movwf	4039,c	;volatile
  1083                           
  1084                           ;init.c: 40: SSP1CON1 = 0b00100010;
  1085  0016C8  0E22               	movlw	34
  1086  0016CA  6EC6               	movwf	4038,c	;volatile
  1087                           
  1088                           ;init.c: 42: TXSTA1bits.SYNC = 0;
  1089  0016CC  98AC               	bcf	4012,4,c	;volatile
  1090                           
  1091                           ;init.c: 43: TXSTA1bits.BRGH = 1;
  1092  0016CE  84AC               	bsf	4012,2,c	;volatile
  1093                           
  1094                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
  1095  0016D0  96B8               	bcf	4024,3,c	;volatile
  1096                           
  1097                           ;init.c: 45: SPBRG1 = 25;
  1098  0016D2  0E19               	movlw	25
  1099  0016D4  6EAF               	movwf	4015,c	;volatile
  1100                           
  1101                           ;init.c: 46: TRISCbits.RC6 = 1;
  1102  0016D6  8C94               	bsf	3988,6,c	;volatile
  1103                           
  1104                           ;init.c: 47: TRISCbits.RC7 = 1;
  1105  0016D8  8E94               	bsf	3988,7,c	;volatile
  1106                           
  1107                           ;init.c: 48: RCSTA1bits.SPEN = 1;
  1108  0016DA  8EAB               	bsf	4011,7,c	;volatile
  1109                           
  1110                           ;init.c: 49: TXSTA1bits.TX9 = 1;
  1111  0016DC  8CAC               	bsf	4012,6,c	;volatile
  1112                           
  1113                           ;init.c: 50: TXSTA1bits.TXEN = 1;
  1114  0016DE  8AAC               	bsf	4012,5,c	;volatile
  1115                           
  1116                           ;init.c: 51: RCSTA1bits.RC9 = 1;
  1117  0016E0  8CAB               	bsf	4011,6,c	;volatile
  1118                           
  1119                           ;init.c: 52: RCSTA1bits.CREN = 1;
  1120  0016E2  88AB               	bsf	4011,4,c	;volatile
  1121                           
  1122                           ;init.c: 53: TRISCbits.RC6 = 0;
  1123  0016E4  9C94               	bcf	3988,6,c	;volatile
  1124  0016E6  0012               	return		;funcret
  1125  0016E8                     __end_of_InitTransmission:
  1126                           	opt stack 0
  1127                           tblptru	equ	0xFF8
  1128                           tblptrh	equ	0xFF7
  1129                           tblptrl	equ	0xFF6
  1130                           tablat	equ	0xFF5
  1131                           postinc0	equ	0xFEE
  1132                           wreg	equ	0xFE8
  1133                           postdec1	equ	0xFE5
  1134                           fsr1l	equ	0xFE1
  1135                           
  1136 ;; *************** function _InitTimer *****************
  1137 ;; Defined at:
  1138 ;;		line 56 in file "init.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;		None               void
  1145 ;; Registers used:
  1146 ;;		wreg, status,2
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1
  1152 ;;      Params:         0       0       0
  1153 ;;      Locals:         0       0       0
  1154 ;;      Temps:          0       0       0
  1155 ;;      Totals:         0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    5
  1159 ;; This function calls:
  1160 ;;		Nothing
  1161 ;; This function is called by:
  1162 ;;		_Init
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166                           	psect	text4
  1167  001636                     __ptext4:
  1168                           	opt stack 0
  1169  001636                     _InitTimer:
  1170                           	opt stack 24
  1171                           
  1172                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
  1173                           
  1174                           ;incstack = 0
  1175  001636  0E3F               	movlw	-193
  1176  001638  16CD               	andwf	4045,f,c	;volatile
  1177                           
  1178                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
  1179  00163A  0E30               	movlw	48
  1180  00163C  12CD               	iorwf	4045,f,c	;volatile
  1181                           
  1182                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
  1183  00163E  94CD               	bcf	4045,2,c	;volatile
  1184                           
  1185                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
  1186  001640  0E3F               	movlw	-193
  1187  001642  16B1               	andwf	4017,f,c	;volatile
  1188                           
  1189                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
  1190  001644  0E30               	movlw	48
  1191  001646  12B1               	iorwf	4017,f,c	;volatile
  1192                           
  1193                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
  1194  001648  94B1               	bcf	4017,2,c	;volatile
  1195                           
  1196                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
  1197  00164A  50BD               	movf	4029,w,c	;volatile
  1198  00164C  0BF0               	andlw	-16
  1199  00164E  090A               	iorlw	10
  1200  001650  6EBD               	movwf	4029,c	;volatile
  1201                           
  1202                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
  1203  001652  010F               	movlb	15	; () banked
  1204  001654  5149               	movf	73,w,b	;volatile
  1205  001656  0BFC               	andlw	-4
  1206  001658  0901               	iorlw	1
  1207  00165A  6F49               	movwf	73,b	;volatile
  1208                           
  1209                           ;init.c: 68: CCPR1L = 72;
  1210  00165C  0E48               	movlw	72
  1211  00165E  6EBE               	movwf	4030,c	;volatile
  1212                           
  1213                           ;init.c: 69: CCPR1H = 232;
  1214  001660  0EE8               	movlw	232
  1215  001662  6EBF               	movwf	4031,c	;volatile
  1216                           
  1217                           ; BSR set to: 15
  1218  001664  0012               	return		;funcret
  1219  001666                     __end_of_InitTimer:
  1220                           	opt stack 0
  1221                           tblptru	equ	0xFF8
  1222                           tblptrh	equ	0xFF7
  1223                           tblptrl	equ	0xFF6
  1224                           tablat	equ	0xFF5
  1225                           postinc0	equ	0xFEE
  1226                           wreg	equ	0xFE8
  1227                           postdec1	equ	0xFE5
  1228                           fsr1l	equ	0xFE1
  1229                           
  1230 ;; *************** function _InitPort *****************
  1231 ;; Defined at:
  1232 ;;		line 13 in file "init.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;		None               void
  1239 ;; Registers used:
  1240 ;;		wreg, status,2
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK0   BANK1
  1246 ;;      Params:         0       0       0
  1247 ;;      Locals:         0       0       0
  1248 ;;      Temps:          0       0       0
  1249 ;;      Totals:         0       0       0
  1250 ;;Total ram usage:        0 bytes
  1251 ;; Hardware stack levels used:    1
  1252 ;; Hardware stack levels required when called:    5
  1253 ;; This function calls:
  1254 ;;		Nothing
  1255 ;; This function is called by:
  1256 ;;		_Init
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text5
  1261  001748                     __ptext5:
  1262                           	opt stack 0
  1263  001748                     _InitPort:
  1264                           	opt stack 24
  1265                           
  1266                           ;init.c: 14: PORTA = 0b00000000;
  1267                           
  1268                           ; BSR set to: 15
  1269                           ;incstack = 0
  1270  001748  0E00               	movlw	0
  1271  00174A  6E80               	movwf	3968,c	;volatile
  1272                           
  1273                           ;init.c: 15: PORTB = 0b00000000;
  1274  00174C  0E00               	movlw	0
  1275  00174E  6E81               	movwf	3969,c	;volatile
  1276                           
  1277                           ;init.c: 16: PORTC = 0b00000100;
  1278  001750  0E04               	movlw	4
  1279  001752  6E82               	movwf	3970,c	;volatile
  1280                           
  1281                           ;init.c: 17: PORTE = 0;
  1282  001754  0E00               	movlw	0
  1283  001756  6E84               	movwf	3972,c	;volatile
  1284  001758  0012               	return		;funcret
  1285  00175A                     __end_of_InitPort:
  1286                           	opt stack 0
  1287                           tblptru	equ	0xFF8
  1288                           tblptrh	equ	0xFF7
  1289                           tblptrl	equ	0xFF6
  1290                           tablat	equ	0xFF5
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           postdec1	equ	0xFE5
  1294                           fsr1l	equ	0xFE1
  1295                           
  1296 ;; *************** function _InitMiscellaneous *****************
  1297 ;; Defined at:
  1298 ;;		line 33 in file "init.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;		None               void
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1
  1312 ;;      Params:         0       0       0
  1313 ;;      Locals:         0       0       0
  1314 ;;      Temps:          0       0       0
  1315 ;;      Totals:         0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    5
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_Init
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text6
  1327  001774                     __ptext6:
  1328                           	opt stack 0
  1329  001774                     _InitMiscellaneous:
  1330                           	opt stack 24
  1331                           
  1332                           ;init.c: 34: OSCCON = 0b01010011;
  1333                           
  1334                           ;incstack = 0
  1335  001774  0E53               	movlw	83
  1336  001776  6ED3               	movwf	4051,c	;volatile
  1337  001778  0012               	return		;funcret
  1338  00177A                     __end_of_InitMiscellaneous:
  1339                           	opt stack 0
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           postinc0	equ	0xFEE
  1345                           wreg	equ	0xFE8
  1346                           postdec1	equ	0xFE5
  1347                           fsr1l	equ	0xFE1
  1348                           
  1349 ;; *************** function _InitInterrupt *****************
  1350 ;; Defined at:
  1351 ;;		line 72 in file "init.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;		None
  1354 ;; Auto vars:     Size  Location     Type
  1355 ;;		None
  1356 ;; Return value:  Size  Location     Type
  1357 ;;		None               void
  1358 ;; Registers used:
  1359 ;;		None
  1360 ;; Tracked objects:
  1361 ;;		On entry : 0/0
  1362 ;;		On exit  : 0/0
  1363 ;;		Unchanged: 0/0
  1364 ;; Data sizes:     COMRAM   BANK0   BANK1
  1365 ;;      Params:         0       0       0
  1366 ;;      Locals:         0       0       0
  1367 ;;      Temps:          0       0       0
  1368 ;;      Totals:         0       0       0
  1369 ;;Total ram usage:        0 bytes
  1370 ;; Hardware stack levels used:    1
  1371 ;; Hardware stack levels required when called:    5
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_Init
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text7
  1380  001768                     __ptext7:
  1381                           	opt stack 0
  1382  001768                     _InitInterrupt:
  1383                           	opt stack 24
  1384                           
  1385                           ;init.c: 73: INTCONbits.GIE = 1;
  1386                           
  1387                           ;incstack = 0
  1388  001768  8EF2               	bsf	intcon,7,c	;volatile
  1389                           
  1390                           ;init.c: 74: INTCONbits.PEIE = 1;
  1391  00176A  8CF2               	bsf	intcon,6,c	;volatile
  1392                           
  1393                           ;init.c: 75: PIE1bits.RCIE = 1;
  1394  00176C  8A9D               	bsf	3997,5,c	;volatile
  1395                           
  1396                           ;init.c: 76: PIE1bits.CCP1IE = 1;
  1397  00176E  849D               	bsf	3997,2,c	;volatile
  1398                           
  1399                           ;init.c: 77: PIE1bits.TMR1IE = 1;
  1400  001770  809D               	bsf	3997,0,c	;volatile
  1401  001772  0012               	return		;funcret
  1402  001774                     __end_of_InitInterrupt:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           intcon	equ	0xFF2
  1409                           postinc0	equ	0xFEE
  1410                           wreg	equ	0xFE8
  1411                           postdec1	equ	0xFE5
  1412                           fsr1l	equ	0xFE1
  1413                           
  1414 ;; *************** function _InitAnsel *****************
  1415 ;; Defined at:
  1416 ;;		line 27 in file "init.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;		None               void
  1423 ;; Registers used:
  1424 ;;		wreg, status,2
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1
  1430 ;;      Params:         0       0       0
  1431 ;;      Locals:         0       0       0
  1432 ;;      Temps:          0       0       0
  1433 ;;      Totals:         0       0       0
  1434 ;;Total ram usage:        0 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    5
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_Init
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text8
  1445  001722                     __ptext8:
  1446                           	opt stack 0
  1447  001722                     _InitAnsel:
  1448                           	opt stack 24
  1449                           
  1450                           ;init.c: 28: ANSELA = 0;
  1451                           
  1452                           ;incstack = 0
  1453  001722  0E00               	movlw	0
  1454  001724  010F               	movlb	15	; () banked
  1455  001726  6F38               	movwf	56,b	;volatile
  1456                           
  1457                           ;init.c: 29: ANSELB = 0;
  1458  001728  0E00               	movlw	0
  1459  00172A  010F               	movlb	15	; () banked
  1460  00172C  6F39               	movwf	57,b	;volatile
  1461                           
  1462                           ;init.c: 30: ANSELC = 0;
  1463  00172E  0E00               	movlw	0
  1464  001730  010F               	movlb	15	; () banked
  1465  001732  6F3A               	movwf	58,b	;volatile
  1466                           
  1467                           ; BSR set to: 15
  1468  001734  0012               	return		;funcret
  1469  001736                     __end_of_InitAnsel:
  1470                           	opt stack 0
  1471                           tblptru	equ	0xFF8
  1472                           tblptrh	equ	0xFF7
  1473                           tblptrl	equ	0xFF6
  1474                           tablat	equ	0xFF5
  1475                           intcon	equ	0xFF2
  1476                           postinc0	equ	0xFEE
  1477                           wreg	equ	0xFE8
  1478                           postdec1	equ	0xFE5
  1479                           fsr1l	equ	0xFE1
  1480                           
  1481 ;; *************** function _Check_Detonators *****************
  1482 ;; Defined at:
  1483 ;;		line 25 in file "ignition.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;		None               void
  1490 ;; Registers used:
  1491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1
  1497 ;;      Params:         0       0       0
  1498 ;;      Locals:         0       0       0
  1499 ;;      Temps:          0       0       0
  1500 ;;      Totals:         0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    6
  1504 ;; This function calls:
  1505 ;;		_Transmit
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text9
  1512  001554                     __ptext9:
  1513                           	opt stack 0
  1514  001554                     _Check_Detonators:
  1515                           	opt stack 24
  1516                           
  1517                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  1518                           
  1519                           ; BSR set to: 15
  1520                           ;incstack = 0
  1521  001554  0E54               	movlw	84
  1522  001556  0100               	movlb	0	; () banked
  1523  001558  6F60               	movwf	Transmit@operation& (0+255),b
  1524  00155A  5035               	movf	_check_counter,w,c
  1525  00155C  0D06               	mullw	6
  1526  00155E  0E01               	movlw	1
  1527  001560  26F3               	addwf	prodl,f,c
  1528  001562  0E00               	movlw	0
  1529  001564  22F4               	addwfc	prodh,f,c
  1530  001566  0E00               	movlw	low _pin
  1531  001568  24F3               	addwf	prodl,w,c
  1532  00156A  6ED9               	movwf	fsr2l,c
  1533  00156C  0E01               	movlw	high _pin
  1534  00156E  20F4               	addwfc	prodh,w,c
  1535  001570  6EDA               	movwf	fsr2h,c
  1536  001572  50DF               	movf	indf2,w,c
  1537  001574  0100               	movlb	0	; () banked
  1538  001576  6F61               	movwf	Transmit@port& (0+255),b
  1539  001578  5035               	movf	_check_counter,w,c
  1540  00157A  0D06               	mullw	6
  1541  00157C  0E00               	movlw	low _pin
  1542  00157E  24F3               	addwf	prodl,w,c
  1543  001580  6ED9               	movwf	fsr2l,c
  1544  001582  0E01               	movlw	high _pin
  1545  001584  20F4               	addwfc	prodh,w,c
  1546  001586  6EDA               	movwf	fsr2h,c
  1547  001588  50DF               	movf	indf2,w,c
  1548  00158A  ECC8  F00A         	call	_Transmit
  1549  00158E  0012               	return		;funcret
  1550  001590                     __end_of_Check_Detonators:
  1551                           	opt stack 0
  1552                           tblptru	equ	0xFF8
  1553                           tblptrh	equ	0xFF7
  1554                           tblptrl	equ	0xFF6
  1555                           tablat	equ	0xFF5
  1556                           prodh	equ	0xFF4
  1557                           prodl	equ	0xFF3
  1558                           intcon	equ	0xFF2
  1559                           postinc0	equ	0xFEE
  1560                           wreg	equ	0xFE8
  1561                           postdec1	equ	0xFE5
  1562                           fsr1l	equ	0xFE1
  1563                           indf2	equ	0xFDF
  1564                           fsr2h	equ	0xFDA
  1565                           fsr2l	equ	0xFD9
  1566                           
  1567 ;; *************** function _Transmit *****************
  1568 ;; Defined at:
  1569 ;;		line 15 in file "communication.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  receiver        1    wreg     unsigned char 
  1572 ;;  operation       1    0[BANK0 ] unsigned char 
  1573 ;;  port            1    1[BANK0 ] unsigned char 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  receiver        1    2[BANK0 ] unsigned char 
  1576 ;; Return value:  Size  Location     Type
  1577 ;;		None               void
  1578 ;; Registers used:
  1579 ;;		wreg, status,2
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1
  1585 ;;      Params:         0       2       0
  1586 ;;      Locals:         0       1       0
  1587 ;;      Temps:          0       0       0
  1588 ;;      Totals:         0       3       0
  1589 ;;Total ram usage:        3 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    5
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_Check_Detonators
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text10
  1600  001590                     __ptext10:
  1601                           	opt stack 0
  1602  001590                     _Transmit:
  1603                           	opt stack 24
  1604                           
  1605                           ;incstack = 0
  1606                           ;Transmit@receiver stored from wreg
  1607  001590  0100               	movlb	0	; () banked
  1608  001592  6F62               	movwf	Transmit@receiver& (0+255),b
  1609                           
  1610                           ;communication.c: 17: PORTBbits.RB5 = 1;
  1611  001594  8A81               	bsf	3969,5,c	;volatile
  1612                           
  1613                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  1614  001596  98AB               	bcf	4011,4,c	;volatile
  1615                           
  1616                           ;communication.c: 20: __nop();
  1617  001598  F000               	nop	
  1618  00159A                     l491:
  1619  00159A  A89E               	btfss	3998,4,c	;volatile
  1620  00159C  D7FE               	goto	l491
  1621                           
  1622                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  1623  00159E  80AC               	bsf	4012,0,c	;volatile
  1624                           
  1625                           ;communication.c: 23: TXREG1 = receiver;
  1626  0015A0  C062  FFAD         	movff	Transmit@receiver,4013	;volatile
  1627  0015A4                     l494:
  1628  0015A4  A89E               	btfss	3998,4,c	;volatile
  1629  0015A6  D7FE               	goto	l494
  1630                           
  1631                           ;communication.c: 25: TXREG1 = 0xAA;
  1632  0015A8  0EAA               	movlw	170
  1633  0015AA  6EAD               	movwf	4013,c	;volatile
  1634  0015AC                     l497:
  1635  0015AC  A89E               	btfss	3998,4,c	;volatile
  1636  0015AE  D7FE               	goto	l497
  1637                           
  1638                           ;communication.c: 27: TXREG1 = operation;
  1639  0015B0  C060  FFAD         	movff	Transmit@operation,4013	;volatile
  1640  0015B4                     l500:
  1641  0015B4  A89E               	btfss	3998,4,c	;volatile
  1642  0015B6  D7FE               	goto	l500
  1643                           
  1644                           ;communication.c: 29: TXREG1 = port;
  1645  0015B8  C061  FFAD         	movff	Transmit@port,4013	;volatile
  1646  0015BC                     l503:
  1647  0015BC  A2AC               	btfss	4012,1,c	;volatile
  1648  0015BE  D7FE               	goto	l503
  1649                           
  1650                           ;communication.c: 31: PORTBbits.RB5 = 0;
  1651  0015C0  9A81               	bcf	3969,5,c	;volatile
  1652                           
  1653                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  1654  0015C2  88AB               	bsf	4011,4,c	;volatile
  1655                           
  1656                           ;communication.c: 33: __nop();
  1657  0015C4  F000               	nop	
  1658  0015C6  0012               	return		;funcret
  1659  0015C8                     __end_of_Transmit:
  1660                           	opt stack 0
  1661                           tblptru	equ	0xFF8
  1662                           tblptrh	equ	0xFF7
  1663                           tblptrl	equ	0xFF6
  1664                           tablat	equ	0xFF5
  1665                           prodh	equ	0xFF4
  1666                           prodl	equ	0xFF3
  1667                           intcon	equ	0xFF2
  1668                           postinc0	equ	0xFEE
  1669                           wreg	equ	0xFE8
  1670                           postdec1	equ	0xFE5
  1671                           fsr1l	equ	0xFE1
  1672                           indf2	equ	0xFDF
  1673                           fsr2h	equ	0xFDA
  1674                           fsr2l	equ	0xFD9
  1675                           
  1676 ;; *************** function _Check_Buttons *****************
  1677 ;; Defined at:
  1678 ;;		line 26 in file "buttonchanges.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;		None
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;		None               void
  1685 ;; Registers used:
  1686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1
  1692 ;;      Params:         0       0       0
  1693 ;;      Locals:         0       0       0
  1694 ;;      Temps:          0       2       0
  1695 ;;      Totals:         0       2       0
  1696 ;;Total ram usage:        2 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:   11
  1699 ;; This function calls:
  1700 ;;		_Del_Data
  1701 ;;		_Delay_Routine
  1702 ;;		_Read_Data
  1703 ;;		_Save_Data
  1704 ;;		_Set_Display
  1705 ;;		_Start_Timer
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text11
  1712  000270                     __ptext11:
  1713                           	opt stack 0
  1714  000270                     _Check_Buttons:
  1715                           	opt stack 19
  1716                           
  1717                           ;buttonchanges.c: 27: if(PORTCbits.RC1 == 1) {
  1718                           
  1719                           ;incstack = 0
  1720  000270  A282               	btfss	3970,1,c	;volatile
  1721  000272  D00A               	goto	l94
  1722                           
  1723                           ;buttonchanges.c: 28: Delay_Routine(3);
  1724  000274  0E03               	movlw	3
  1725  000276  EC33  F00B         	call	_Delay_Routine
  1726                           
  1727                           ;buttonchanges.c: 29: if(PORTCbits.RC1 == 1) {
  1728  00027A  A282               	btfss	3970,1,c	;volatile
  1729  00027C  0012               	return	
  1730                           
  1731                           ;buttonchanges.c: 30: ignite_ready = 1;
  1732  00027E  803E               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1733                           
  1734                           ;buttonchanges.c: 31: Start_Timer();
  1735  000280  EC83  F00B         	call	_Start_Timer	;wreg free
  1736                           
  1737                           ;buttonchanges.c: 32: __nop();
  1738  000284  F000               	nop	
  1739                           
  1740                           ;buttonchanges.c: 36: }
  1741                           ;buttonchanges.c: 37: } else if(PORTBbits.RB2 == 1) {
  1742                           
  1743                           ;buttonchanges.c: 33: return;
  1744  000286  0012               	return	
  1745  000288                     l94:
  1746  000288  A481               	btfss	3969,2,c	;volatile
  1747  00028A  D060               	goto	l98
  1748                           
  1749                           ;buttonchanges.c: 38: Delay_Routine(3);
  1750  00028C  0E03               	movlw	3
  1751  00028E  EC33  F00B         	call	_Delay_Routine
  1752                           
  1753                           ;buttonchanges.c: 39: if(PORTBbits.RB2 == 1) {
  1754  000292  A481               	btfss	3969,2,c	;volatile
  1755  000294  0012               	return	
  1756                           
  1757                           ;buttonchanges.c: 40: if(PORTBbits.RB3 == 1) {
  1758  000296  A681               	btfss	3969,3,c	;volatile
  1759  000298  D008               	goto	l3109
  1760                           
  1761                           ;buttonchanges.c: 41: Delay_Routine(3);
  1762  00029A  0E03               	movlw	3
  1763  00029C  EC33  F00B         	call	_Delay_Routine
  1764                           
  1765                           ;buttonchanges.c: 42: if(PORTBbits.RB3 == 1) {
  1766  0002A0  A681               	btfss	3969,3,c	;volatile
  1767  0002A2  D003               	goto	l3109
  1768                           
  1769                           ;buttonchanges.c: 43: Del_Data();
  1770  0002A4  EC45  F00A         	call	_Del_Data	;wreg free
  1771                           
  1772                           ;buttonchanges.c: 44: return;
  1773  0002A8  0012               	return	
  1774  0002AA                     l3109:
  1775                           
  1776                           ;buttonchanges.c: 46: }
  1777                           ;buttonchanges.c: 47: }
  1778                           ;buttonchanges.c: 48: pin[pin_selected].time++;
  1779  0002AA  0100               	movlb	0	; () banked
  1780  0002AC  517D               	movf	_pin_selected& (0+255),w,b
  1781  0002AE  0D06               	mullw	6
  1782  0002B0  0E04               	movlw	4
  1783  0002B2  26F3               	addwf	prodl,f,c
  1784  0002B4  0E00               	movlw	0
  1785  0002B6  22F4               	addwfc	prodh,f,c
  1786  0002B8  0E00               	movlw	low _pin
  1787  0002BA  24F3               	addwf	prodl,w,c
  1788  0002BC  6ED9               	movwf	fsr2l,c
  1789  0002BE  0E01               	movlw	high _pin
  1790  0002C0  20F4               	addwfc	prodh,w,c
  1791  0002C2  6EDA               	movwf	fsr2h,c
  1792  0002C4  2ADE               	incf	postinc2,f,c
  1793  0002C6  0E00               	movlw	0
  1794  0002C8  22DD               	addwfc	postdec2,f,c
  1795                           
  1796                           ;buttonchanges.c: 49: if(pin[pin_selected].time > 999) {
  1797  0002CA  0100               	movlb	0	; () banked
  1798  0002CC  517D               	movf	_pin_selected& (0+255),w,b
  1799  0002CE  0D06               	mullw	6
  1800  0002D0  0E04               	movlw	4
  1801  0002D2  26F3               	addwf	prodl,f,c
  1802  0002D4  0E00               	movlw	0
  1803  0002D6  22F4               	addwfc	prodh,f,c
  1804  0002D8  0E00               	movlw	low _pin
  1805  0002DA  24F3               	addwf	prodl,w,c
  1806  0002DC  6ED9               	movwf	fsr2l,c
  1807  0002DE  0E01               	movlw	high _pin
  1808  0002E0  20F4               	addwfc	prodh,w,c
  1809  0002E2  6EDA               	movwf	fsr2h,c
  1810  0002E4  0E01               	movlw	1
  1811  0002E6  BEDB               	btfsc	plusw2,7,c
  1812  0002E8  D017               	goto	l3113
  1813  0002EA  0EE8               	movlw	232
  1814  0002EC  5CDE               	subwf	postinc2,w,c
  1815  0002EE  0E03               	movlw	3
  1816  0002F0  58DE               	subwfb	postinc2,w,c
  1817  0002F2  A0D8               	btfss	status,0,c
  1818  0002F4  D011               	goto	l3113
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;buttonchanges.c: 50: pin[pin_selected].time = 0;
  1822  0002F6  0100               	movlb	0	; () banked
  1823  0002F8  517D               	movf	_pin_selected& (0+255),w,b
  1824  0002FA  0D06               	mullw	6
  1825  0002FC  0E04               	movlw	4
  1826  0002FE  26F3               	addwf	prodl,f,c
  1827  000300  0E00               	movlw	0
  1828  000302  22F4               	addwfc	prodh,f,c
  1829  000304  0E00               	movlw	low _pin
  1830  000306  24F3               	addwf	prodl,w,c
  1831  000308  6ED9               	movwf	fsr2l,c
  1832  00030A  0E01               	movlw	high _pin
  1833  00030C  20F4               	addwfc	prodh,w,c
  1834  00030E  6EDA               	movwf	fsr2h,c
  1835  000310  0E00               	movlw	0
  1836  000312  6EDE               	movwf	postinc2,c
  1837  000314  0E00               	movlw	0
  1838  000316  6EDD               	movwf	postdec2,c
  1839  000318                     l3113:
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;buttonchanges.c: 51: }
  1843                           ;buttonchanges.c: 52: __nop();
  1844  000318  F000               	nop	
  1845                           
  1846                           ;buttonchanges.c: 53: Set_Display('7', '-', pin[pin_selected].time);
  1847  00031A  0E2D               	movlw	45
  1848  00031C  0100               	movlb	0	; () banked
  1849  00031E  6F74               	movwf	Set_Display@information& (0+255),b
  1850  000320  0100               	movlb	0	; () banked
  1851  000322  517D               	movf	_pin_selected& (0+255),w,b
  1852  000324  0D06               	mullw	6
  1853  000326  0E04               	movlw	4
  1854  000328  26F3               	addwf	prodl,f,c
  1855  00032A  0E00               	movlw	0
  1856  00032C  22F4               	addwfc	prodh,f,c
  1857  00032E  0E00               	movlw	low _pin
  1858  000330  24F3               	addwf	prodl,w,c
  1859  000332  6ED9               	movwf	fsr2l,c
  1860  000334  0E01               	movlw	high _pin
  1861  000336  20F4               	addwfc	prodh,w,c
  1862  000338  6EDA               	movwf	fsr2h,c
  1863  00033A  CFDE F075          	movff	postinc2,Set_Display@value
  1864  00033E  CFDD F076          	movff	postdec2,Set_Display@value+1
  1865  000342  0E37               	movlw	55
  1866  000344  ECDF  F008         	call	_Set_Display
  1867                           
  1868                           ;buttonchanges.c: 54: __nop();
  1869  000348  F000               	nop	
  1870                           
  1871                           ;buttonchanges.c: 55: }
  1872                           ;buttonchanges.c: 56: } else if(PORTBbits.RB3 == 1) {
  1873  00034A  0012               	return	
  1874  00034C                     l98:
  1875  00034C  A681               	btfss	3969,3,c	;volatile
  1876  00034E  D05A               	goto	l104
  1877                           
  1878                           ;buttonchanges.c: 57: Delay_Routine(3);
  1879  000350  0E03               	movlw	3
  1880  000352  EC33  F00B         	call	_Delay_Routine
  1881                           
  1882                           ;buttonchanges.c: 58: if(PORTBbits.RB3 == 1) {
  1883  000356  A681               	btfss	3969,3,c	;volatile
  1884  000358  0012               	return	
  1885                           
  1886                           ;buttonchanges.c: 59: if(PORTBbits.RB2 == 1) {
  1887  00035A  A481               	btfss	3969,2,c	;volatile
  1888  00035C  D008               	goto	l3133
  1889                           
  1890                           ;buttonchanges.c: 60: Delay_Routine(3);
  1891  00035E  0E03               	movlw	3
  1892  000360  EC33  F00B         	call	_Delay_Routine
  1893                           
  1894                           ;buttonchanges.c: 61: if(PORTBbits.RB2 == 1) {
  1895  000364  A481               	btfss	3969,2,c	;volatile
  1896  000366  D003               	goto	l3133
  1897                           
  1898                           ;buttonchanges.c: 62: Del_Data();
  1899  000368  EC45  F00A         	call	_Del_Data	;wreg free
  1900                           
  1901                           ;buttonchanges.c: 63: return;
  1902  00036C  0012               	return	
  1903  00036E                     l3133:
  1904                           
  1905                           ;buttonchanges.c: 65: }
  1906                           ;buttonchanges.c: 66: }
  1907                           ;buttonchanges.c: 67: pin[pin_selected].time--;
  1908  00036E  0100               	movlb	0	; () banked
  1909  000370  517D               	movf	_pin_selected& (0+255),w,b
  1910  000372  0D06               	mullw	6
  1911  000374  0E04               	movlw	4
  1912  000376  26F3               	addwf	prodl,f,c
  1913  000378  0E00               	movlw	0
  1914  00037A  22F4               	addwfc	prodh,f,c
  1915  00037C  0E00               	movlw	low _pin
  1916  00037E  24F3               	addwf	prodl,w,c
  1917  000380  6ED9               	movwf	fsr2l,c
  1918  000382  0E01               	movlw	high _pin
  1919  000384  20F4               	addwfc	prodh,w,c
  1920  000386  6EDA               	movwf	fsr2h,c
  1921  000388  06DE               	decf	postinc2,f,c
  1922  00038A  0E00               	movlw	0
  1923  00038C  5ADD               	subwfb	postdec2,f,c
  1924                           
  1925                           ;buttonchanges.c: 68: if(pin[pin_selected].time < 0) {
  1926  00038E  0100               	movlb	0	; () banked
  1927  000390  517D               	movf	_pin_selected& (0+255),w,b
  1928  000392  0D06               	mullw	6
  1929  000394  0E04               	movlw	4
  1930  000396  26F3               	addwf	prodl,f,c
  1931  000398  0E00               	movlw	0
  1932  00039A  22F4               	addwfc	prodh,f,c
  1933  00039C  0E00               	movlw	low _pin
  1934  00039E  24F3               	addwf	prodl,w,c
  1935  0003A0  6ED9               	movwf	fsr2l,c
  1936  0003A2  0E01               	movlw	high _pin
  1937  0003A4  20F4               	addwfc	prodh,w,c
  1938  0003A6  6EDA               	movwf	fsr2h,c
  1939  0003A8  0E01               	movlw	1
  1940  0003AA  AEDB               	btfss	plusw2,7,c
  1941  0003AC  D011               	goto	l3137
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;buttonchanges.c: 69: pin[pin_selected].time = 999;
  1945  0003AE  0100               	movlb	0	; () banked
  1946  0003B0  517D               	movf	_pin_selected& (0+255),w,b
  1947  0003B2  0D06               	mullw	6
  1948  0003B4  0E04               	movlw	4
  1949  0003B6  26F3               	addwf	prodl,f,c
  1950  0003B8  0E00               	movlw	0
  1951  0003BA  22F4               	addwfc	prodh,f,c
  1952  0003BC  0E00               	movlw	low _pin
  1953  0003BE  24F3               	addwf	prodl,w,c
  1954  0003C0  6ED9               	movwf	fsr2l,c
  1955  0003C2  0E01               	movlw	high _pin
  1956  0003C4  20F4               	addwfc	prodh,w,c
  1957  0003C6  6EDA               	movwf	fsr2h,c
  1958  0003C8  0EE7               	movlw	231
  1959  0003CA  6EDE               	movwf	postinc2,c
  1960  0003CC  0E03               	movlw	3
  1961  0003CE  6EDD               	movwf	postdec2,c
  1962  0003D0                     l3137:
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;buttonchanges.c: 70: }
  1966                           ;buttonchanges.c: 71: __nop();
  1967  0003D0  F000               	nop	
  1968                           
  1969                           ;buttonchanges.c: 72: Set_Display('7', '-', pin[pin_selected].time);
  1970  0003D2  0E2D               	movlw	45
  1971  0003D4  0100               	movlb	0	; () banked
  1972  0003D6  6F74               	movwf	Set_Display@information& (0+255),b
  1973  0003D8  0100               	movlb	0	; () banked
  1974  0003DA  517D               	movf	_pin_selected& (0+255),w,b
  1975  0003DC  0D06               	mullw	6
  1976  0003DE  0E04               	movlw	4
  1977  0003E0  26F3               	addwf	prodl,f,c
  1978  0003E2  0E00               	movlw	0
  1979  0003E4  22F4               	addwfc	prodh,f,c
  1980  0003E6  0E00               	movlw	low _pin
  1981  0003E8  24F3               	addwf	prodl,w,c
  1982  0003EA  6ED9               	movwf	fsr2l,c
  1983  0003EC  0E01               	movlw	high _pin
  1984  0003EE  20F4               	addwfc	prodh,w,c
  1985  0003F0  6EDA               	movwf	fsr2h,c
  1986  0003F2  CFDE F075          	movff	postinc2,Set_Display@value
  1987  0003F6  CFDD F076          	movff	postdec2,Set_Display@value+1
  1988  0003FA  0E37               	movlw	55
  1989  0003FC  ECDF  F008         	call	_Set_Display
  1990                           
  1991                           ;buttonchanges.c: 73: __nop();
  1992  000400  F000               	nop	
  1993                           
  1994                           ;buttonchanges.c: 74: }
  1995                           ;buttonchanges.c: 75: } else if(PORTBbits.RB4 == 1) {
  1996  000402  0012               	return	
  1997  000404                     l104:
  1998  000404  A881               	btfss	3969,4,c	;volatile
  1999  000406  D057               	goto	l110
  2000                           
  2001                           ;buttonchanges.c: 76: Delay_Routine(3);
  2002  000408  0E03               	movlw	3
  2003  00040A  EC33  F00B         	call	_Delay_Routine
  2004                           
  2005                           ;buttonchanges.c: 77: if(PORTBbits.RB4 == 1) {
  2006  00040E  A881               	btfss	3969,4,c	;volatile
  2007  000410  0012               	return	
  2008                           
  2009                           ;buttonchanges.c: 78: pin[pin_selected].time += 10;
  2010  000412  0100               	movlb	0	; () banked
  2011  000414  517D               	movf	_pin_selected& (0+255),w,b
  2012  000416  0D06               	mullw	6
  2013  000418  0E04               	movlw	4
  2014  00041A  26F3               	addwf	prodl,f,c
  2015  00041C  0E00               	movlw	0
  2016  00041E  22F4               	addwfc	prodh,f,c
  2017  000420  0E00               	movlw	low _pin
  2018  000422  24F3               	addwf	prodl,w,c
  2019  000424  6ED9               	movwf	fsr2l,c
  2020  000426  0E01               	movlw	high _pin
  2021  000428  20F4               	addwfc	prodh,w,c
  2022  00042A  6EDA               	movwf	fsr2h,c
  2023  00042C  0E0A               	movlw	10
  2024  00042E  26DE               	addwf	postinc2,f,c
  2025  000430  0E00               	movlw	0
  2026  000432  22DD               	addwfc	postdec2,f,c
  2027                           
  2028                           ;buttonchanges.c: 79: if(pin[pin_selected].time > 999) {
  2029  000434  0100               	movlb	0	; () banked
  2030  000436  517D               	movf	_pin_selected& (0+255),w,b
  2031  000438  0D06               	mullw	6
  2032  00043A  0E04               	movlw	4
  2033  00043C  26F3               	addwf	prodl,f,c
  2034  00043E  0E00               	movlw	0
  2035  000440  22F4               	addwfc	prodh,f,c
  2036  000442  0E00               	movlw	low _pin
  2037  000444  24F3               	addwf	prodl,w,c
  2038  000446  6ED9               	movwf	fsr2l,c
  2039  000448  0E01               	movlw	high _pin
  2040  00044A  20F4               	addwfc	prodh,w,c
  2041  00044C  6EDA               	movwf	fsr2h,c
  2042  00044E  0E01               	movlw	1
  2043  000450  BEDB               	btfsc	plusw2,7,c
  2044  000452  D017               	goto	l3151
  2045  000454  0EE8               	movlw	232
  2046  000456  5CDE               	subwf	postinc2,w,c
  2047  000458  0E03               	movlw	3
  2048  00045A  58DE               	subwfb	postinc2,w,c
  2049  00045C  A0D8               	btfss	status,0,c
  2050  00045E  D011               	goto	l3151
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;buttonchanges.c: 80: pin[pin_selected].time = 0;
  2054  000460  0100               	movlb	0	; () banked
  2055  000462  517D               	movf	_pin_selected& (0+255),w,b
  2056  000464  0D06               	mullw	6
  2057  000466  0E04               	movlw	4
  2058  000468  26F3               	addwf	prodl,f,c
  2059  00046A  0E00               	movlw	0
  2060  00046C  22F4               	addwfc	prodh,f,c
  2061  00046E  0E00               	movlw	low _pin
  2062  000470  24F3               	addwf	prodl,w,c
  2063  000472  6ED9               	movwf	fsr2l,c
  2064  000474  0E01               	movlw	high _pin
  2065  000476  20F4               	addwfc	prodh,w,c
  2066  000478  6EDA               	movwf	fsr2h,c
  2067  00047A  0E00               	movlw	0
  2068  00047C  6EDE               	movwf	postinc2,c
  2069  00047E  0E00               	movlw	0
  2070  000480  6EDD               	movwf	postdec2,c
  2071  000482                     l3151:
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;buttonchanges.c: 81: }
  2075                           ;buttonchanges.c: 82: __nop();
  2076  000482  F000               	nop	
  2077                           
  2078                           ;buttonchanges.c: 83: Set_Display('7', '-', pin[pin_selected].time);
  2079  000484  0E2D               	movlw	45
  2080  000486  0100               	movlb	0	; () banked
  2081  000488  6F74               	movwf	Set_Display@information& (0+255),b
  2082  00048A  0100               	movlb	0	; () banked
  2083  00048C  517D               	movf	_pin_selected& (0+255),w,b
  2084  00048E  0D06               	mullw	6
  2085  000490  0E04               	movlw	4
  2086  000492  26F3               	addwf	prodl,f,c
  2087  000494  0E00               	movlw	0
  2088  000496  22F4               	addwfc	prodh,f,c
  2089  000498  0E00               	movlw	low _pin
  2090  00049A  24F3               	addwf	prodl,w,c
  2091  00049C  6ED9               	movwf	fsr2l,c
  2092  00049E  0E01               	movlw	high _pin
  2093  0004A0  20F4               	addwfc	prodh,w,c
  2094  0004A2  6EDA               	movwf	fsr2h,c
  2095  0004A4  CFDE F075          	movff	postinc2,Set_Display@value
  2096  0004A8  CFDD F076          	movff	postdec2,Set_Display@value+1
  2097  0004AC  0E37               	movlw	55
  2098  0004AE  ECDF  F008         	call	_Set_Display
  2099                           
  2100                           ;buttonchanges.c: 84: __nop();
  2101  0004B2  F000               	nop	
  2102                           
  2103                           ;buttonchanges.c: 85: }
  2104                           ;buttonchanges.c: 86: } else if(PORTBbits.RB1 == 1) {
  2105  0004B4  0012               	return	
  2106  0004B6                     l110:
  2107  0004B6  A281               	btfss	3969,1,c	;volatile
  2108  0004B8  D0B1               	goto	l114
  2109                           
  2110                           ;buttonchanges.c: 87: Delay_Routine(3);
  2111  0004BA  0E03               	movlw	3
  2112  0004BC  EC33  F00B         	call	_Delay_Routine
  2113                           
  2114                           ;buttonchanges.c: 88: if(PORTBbits.RB1 == 1) {
  2115  0004C0  A281               	btfss	3969,1,c	;volatile
  2116  0004C2  0012               	return	
  2117                           
  2118                           ;buttonchanges.c: 89: if(PORTBbits.RB0 == 1) {
  2119  0004C4  A081               	btfss	3969,0,c	;volatile
  2120  0004C6  D007               	goto	l3169
  2121                           
  2122                           ;buttonchanges.c: 90: Delay_Routine(3);
  2123  0004C8  0E03               	movlw	3
  2124  0004CA  EC33  F00B         	call	_Delay_Routine
  2125                           
  2126                           ;buttonchanges.c: 91: if(PORTBbits.RB0 == 1) {
  2127  0004CE  A081               	btfss	3969,0,c	;volatile
  2128  0004D0  D002               	goto	l3169
  2129                           
  2130                           ;buttonchanges.c: 92: testflag = 1;
  2131  0004D2  863E               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2132                           
  2133                           ;buttonchanges.c: 93: return;
  2134  0004D4  0012               	return	
  2135  0004D6                     l3169:
  2136                           
  2137                           ;buttonchanges.c: 95: }
  2138                           ;buttonchanges.c: 96: }
  2139                           ;buttonchanges.c: 97: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2140  0004D6  0100               	movlb	0	; () banked
  2141  0004D8  517D               	movf	_pin_selected& (0+255),w,b
  2142  0004DA  0D06               	mullw	6
  2143  0004DC  0E04               	movlw	4
  2144  0004DE  26F3               	addwf	prodl,f,c
  2145  0004E0  0E00               	movlw	0
  2146  0004E2  22F4               	addwfc	prodh,f,c
  2147  0004E4  0E00               	movlw	low _pin
  2148  0004E6  24F3               	addwf	prodl,w,c
  2149  0004E8  6ED9               	movwf	fsr2l,c
  2150  0004EA  0E01               	movlw	high _pin
  2151  0004EC  20F4               	addwfc	prodh,w,c
  2152  0004EE  6EDA               	movwf	fsr2h,c
  2153  0004F0  CFDE F060          	movff	postinc2,Save_Data@store
  2154  0004F4  CFDD F061          	movff	postdec2,Save_Data@store+1
  2155  0004F8  0100               	movlb	0	; () banked
  2156  0004FA  517D               	movf	_pin_selected& (0+255),w,b
  2157  0004FC  0D06               	mullw	6
  2158  0004FE  0E02               	movlw	2
  2159  000500  26F3               	addwf	prodl,f,c
  2160  000502  0E00               	movlw	0
  2161  000504  22F4               	addwfc	prodh,f,c
  2162  000506  0E00               	movlw	low _pin
  2163  000508  24F3               	addwf	prodl,w,c
  2164  00050A  6ED9               	movwf	fsr2l,c
  2165  00050C  0E01               	movlw	high _pin
  2166  00050E  20F4               	addwfc	prodh,w,c
  2167  000510  6EDA               	movwf	fsr2h,c
  2168  000512  50DF               	movf	indf2,w,c
  2169  000514  0100               	movlb	0	; () banked
  2170  000516  6F62               	movwf	Save_Data@store_address& (0+255),b
  2171  000518  ECD0  F009         	call	_Save_Data	;wreg free
  2172                           
  2173                           ;buttonchanges.c: 98: pin_selected++;
  2174  00051C  0100               	movlb	0	; () banked
  2175  00051E  2B7D               	incf	_pin_selected& (0+255),f,b
  2176                           
  2177                           ;buttonchanges.c: 99: switch (slave_selected) {
  2178  000520  D014               	goto	l3187
  2179  000522                     l3173:
  2180                           
  2181                           ; BSR set to: 0
  2182                           ;buttonchanges.c: 101: if(pin_selected > 9) {
  2183  000522  0E09               	movlw	9
  2184  000524  0100               	movlb	0	; () banked
  2185  000526  657D               	cpfsgt	_pin_selected& (0+255),b
  2186  000528  D01B               	goto	l3189
  2187                           
  2188                           ; BSR set to: 0
  2189                           ;buttonchanges.c: 102: pin_selected = 0;
  2190  00052A  0E00               	movlw	0
  2191  00052C  D00B               	goto	L2
  2192  00052E                     l3177:
  2193                           
  2194                           ; BSR set to: 0
  2195                           ;buttonchanges.c: 106: if(pin_selected > 19) {
  2196  00052E  0E13               	movlw	19
  2197  000530  0100               	movlb	0	; () banked
  2198  000532  657D               	cpfsgt	_pin_selected& (0+255),b
  2199  000534  D015               	goto	l3189
  2200                           
  2201                           ; BSR set to: 0
  2202                           ;buttonchanges.c: 107: pin_selected = 10;
  2203  000536  0E0A               	movlw	10
  2204  000538  D005               	goto	L2
  2205  00053A                     l3181:
  2206                           
  2207                           ; BSR set to: 0
  2208                           ;buttonchanges.c: 111: if(pin_selected > 29) {
  2209  00053A  0E1D               	movlw	29
  2210  00053C  0100               	movlb	0	; () banked
  2211  00053E  657D               	cpfsgt	_pin_selected& (0+255),b
  2212  000540  D00F               	goto	l3189
  2213                           
  2214                           ; BSR set to: 0
  2215                           ;buttonchanges.c: 112: pin_selected = 20;
  2216  000542  0E14               	movlw	20
  2217  000544                     L2:
  2218  000544  0100               	movlb	0	; () banked
  2219  000546  6F7D               	movwf	_pin_selected& (0+255),b
  2220                           
  2221                           ; BSR set to: 0
  2222                           ;buttonchanges.c: 115: }
  2223                           
  2224                           ; BSR set to: 0
  2225                           ;buttonchanges.c: 113: }
  2226                           ;buttonchanges.c: 114: break;
  2227  000548  D00B               	goto	l3189
  2228  00054A                     l3187:
  2229                           
  2230                           ; BSR set to: 0
  2231  00054A  0100               	movlb	0	; () banked
  2232  00054C  517E               	movf	_slave_selected& (0+255),w,b
  2233                           
  2234                           ; Switch size 1, requested type "space"
  2235                           ; Number of cases is 3, Range of values is 0 to 2
  2236                           ; switch strategies available:
  2237                           ; Name         Instructions Cycles
  2238                           ; simple_byte           10     6 (average)
  2239                           ;	Chosen strategy is simple_byte
  2240  00054E  0A00               	xorlw	0	; case 0
  2241  000550  B4D8               	btfsc	status,2,c
  2242  000552  D7E7               	goto	l3173
  2243  000554  0A01               	xorlw	1	; case 1
  2244  000556  B4D8               	btfsc	status,2,c
  2245  000558  D7EA               	goto	l3177
  2246  00055A  0A03               	xorlw	3	; case 2
  2247  00055C  B4D8               	btfsc	status,2,c
  2248  00055E  D7ED               	goto	l3181
  2249  000560                     l3189:
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;buttonchanges.c: 116: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2253  000560  0100               	movlb	0	; () banked
  2254  000562  517D               	movf	_pin_selected& (0+255),w,b
  2255  000564  0D06               	mullw	6
  2256  000566  0E02               	movlw	2
  2257  000568  26F3               	addwf	prodl,f,c
  2258  00056A  0E00               	movlw	0
  2259  00056C  22F4               	addwfc	prodh,f,c
  2260  00056E  0E00               	movlw	low _pin
  2261  000570  24F3               	addwf	prodl,w,c
  2262  000572  6ED9               	movwf	fsr2l,c
  2263  000574  0E01               	movlw	high _pin
  2264  000576  20F4               	addwfc	prodh,w,c
  2265  000578  6EDA               	movwf	fsr2h,c
  2266  00057A  50DF               	movf	indf2,w,c
  2267  00057C  ECFA  F009         	call	_Read_Data
  2268  000580  0100               	movlb	0	; () banked
  2269  000582  517D               	movf	_pin_selected& (0+255),w,b
  2270  000584  0D06               	mullw	6
  2271  000586  0E04               	movlw	4
  2272  000588  26F3               	addwf	prodl,f,c
  2273  00058A  0E00               	movlw	0
  2274  00058C  22F4               	addwfc	prodh,f,c
  2275  00058E  0E00               	movlw	low _pin
  2276  000590  24F3               	addwf	prodl,w,c
  2277  000592  6ED9               	movwf	fsr2l,c
  2278  000594  0E01               	movlw	high _pin
  2279  000596  20F4               	addwfc	prodh,w,c
  2280  000598  6EDA               	movwf	fsr2h,c
  2281  00059A  0100               	movlb	0	; () banked
  2282  00059C  C060  FFDE         	movff	?_Read_Data,postinc2
  2283  0005A0  0100               	movlb	0	; () banked
  2284  0005A2  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;buttonchanges.c: 117: __nop();
  2288  0005A6  F000               	nop	
  2289                           
  2290                           ;buttonchanges.c: 118: Set_Display('7', 'A', pin[pin_selected].output);
  2291  0005A8  0E41               	movlw	65
  2292  0005AA  0100               	movlb	0	; () banked
  2293  0005AC  6F74               	movwf	Set_Display@information& (0+255),b
  2294  0005AE  0100               	movlb	0	; () banked
  2295  0005B0  517D               	movf	_pin_selected& (0+255),w,b
  2296  0005B2  0D06               	mullw	6
  2297  0005B4  0E01               	movlw	1
  2298  0005B6  26F3               	addwf	prodl,f,c
  2299  0005B8  0E00               	movlw	0
  2300  0005BA  22F4               	addwfc	prodh,f,c
  2301  0005BC  0E00               	movlw	low _pin
  2302  0005BE  24F3               	addwf	prodl,w,c
  2303  0005C0  6ED9               	movwf	fsr2l,c
  2304  0005C2  0E01               	movlw	high _pin
  2305  0005C4  20F4               	addwfc	prodh,w,c
  2306  0005C6  6EDA               	movwf	fsr2h,c
  2307  0005C8  50DF               	movf	indf2,w,c
  2308  0005CA  0100               	movlb	0	; () banked
  2309  0005CC  6F7B               	movwf	??_Check_Buttons& (0+255),b
  2310  0005CE  0100               	movlb	0	; () banked
  2311  0005D0  517B               	movf	??_Check_Buttons& (0+255),w,b
  2312  0005D2  0100               	movlb	0	; () banked
  2313  0005D4  6F75               	movwf	Set_Display@value& (0+255),b
  2314  0005D6  6B76               	clrf	(Set_Display@value+1)& (0+255),b
  2315  0005D8  0E37               	movlw	55
  2316  0005DA  ECDF  F008         	call	_Set_Display
  2317                           
  2318                           ;buttonchanges.c: 119: Delay_Routine(30);
  2319  0005DE  0E1E               	movlw	30
  2320  0005E0  EC33  F00B         	call	_Delay_Routine
  2321                           
  2322                           ;buttonchanges.c: 120: Set_Display('7', '-', pin[pin_selected].time);
  2323  0005E4  0E2D               	movlw	45
  2324  0005E6  0100               	movlb	0	; () banked
  2325  0005E8  6F74               	movwf	Set_Display@information& (0+255),b
  2326  0005EA  0100               	movlb	0	; () banked
  2327  0005EC  517D               	movf	_pin_selected& (0+255),w,b
  2328  0005EE  0D06               	mullw	6
  2329  0005F0  0E04               	movlw	4
  2330  0005F2  26F3               	addwf	prodl,f,c
  2331  0005F4  0E00               	movlw	0
  2332  0005F6  22F4               	addwfc	prodh,f,c
  2333  0005F8  0E00               	movlw	low _pin
  2334  0005FA  24F3               	addwf	prodl,w,c
  2335  0005FC  6ED9               	movwf	fsr2l,c
  2336  0005FE  0E01               	movlw	high _pin
  2337  000600  20F4               	addwfc	prodh,w,c
  2338  000602  6EDA               	movwf	fsr2h,c
  2339  000604  CFDE F075          	movff	postinc2,Set_Display@value
  2340  000608  CFDD F076          	movff	postdec2,Set_Display@value+1
  2341  00060C  0E37               	movlw	55
  2342  00060E  ECDF  F008         	call	_Set_Display
  2343                           
  2344                           ;buttonchanges.c: 121: Delay_Routine(30);
  2345  000612  0E1E               	movlw	30
  2346  000614  EC33  F00B         	call	_Delay_Routine
  2347                           
  2348                           ;buttonchanges.c: 122: __nop();
  2349  000618  F000               	nop	
  2350                           
  2351                           ;buttonchanges.c: 123: }
  2352                           ;buttonchanges.c: 124: } else if(PORTBbits.RB0 == 1) {
  2353  00061A  0012               	return	
  2354  00061C                     l114:
  2355  00061C  A081               	btfss	3969,0,c	;volatile
  2356  00061E  0012               	return	
  2357                           
  2358                           ;buttonchanges.c: 125: Delay_Routine(3);
  2359  000620  0E03               	movlw	3
  2360  000622  EC33  F00B         	call	_Delay_Routine
  2361                           
  2362                           ;buttonchanges.c: 126: if(PORTBbits.RB0 == 1) {
  2363  000626  A081               	btfss	3969,0,c	;volatile
  2364  000628  0012               	return	
  2365                           
  2366                           ;buttonchanges.c: 127: if(PORTBbits.RB1 == 1) {
  2367  00062A  A281               	btfss	3969,1,c	;volatile
  2368  00062C  D007               	goto	l3215
  2369                           
  2370                           ;buttonchanges.c: 128: Delay_Routine(3);
  2371  00062E  0E03               	movlw	3
  2372  000630  EC33  F00B         	call	_Delay_Routine
  2373                           
  2374                           ;buttonchanges.c: 129: if(PORTBbits.RB1 == 1) {
  2375  000634  A281               	btfss	3969,1,c	;volatile
  2376  000636  D002               	goto	l3215
  2377                           
  2378                           ;buttonchanges.c: 130: testflag = 1;
  2379  000638  863E               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2380                           
  2381                           ;buttonchanges.c: 131: return;
  2382  00063A  0012               	return	
  2383  00063C                     l3215:
  2384                           
  2385                           ;buttonchanges.c: 133: }
  2386                           ;buttonchanges.c: 134: }
  2387                           ;buttonchanges.c: 135: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2388  00063C  0100               	movlb	0	; () banked
  2389  00063E  517D               	movf	_pin_selected& (0+255),w,b
  2390  000640  0D06               	mullw	6
  2391  000642  0E04               	movlw	4
  2392  000644  26F3               	addwf	prodl,f,c
  2393  000646  0E00               	movlw	0
  2394  000648  22F4               	addwfc	prodh,f,c
  2395  00064A  0E00               	movlw	low _pin
  2396  00064C  24F3               	addwf	prodl,w,c
  2397  00064E  6ED9               	movwf	fsr2l,c
  2398  000650  0E01               	movlw	high _pin
  2399  000652  20F4               	addwfc	prodh,w,c
  2400  000654  6EDA               	movwf	fsr2h,c
  2401  000656  CFDE F060          	movff	postinc2,Save_Data@store
  2402  00065A  CFDD F061          	movff	postdec2,Save_Data@store+1
  2403  00065E  0100               	movlb	0	; () banked
  2404  000660  517D               	movf	_pin_selected& (0+255),w,b
  2405  000662  0D06               	mullw	6
  2406  000664  0E02               	movlw	2
  2407  000666  26F3               	addwf	prodl,f,c
  2408  000668  0E00               	movlw	0
  2409  00066A  22F4               	addwfc	prodh,f,c
  2410  00066C  0E00               	movlw	low _pin
  2411  00066E  24F3               	addwf	prodl,w,c
  2412  000670  6ED9               	movwf	fsr2l,c
  2413  000672  0E01               	movlw	high _pin
  2414  000674  20F4               	addwfc	prodh,w,c
  2415  000676  6EDA               	movwf	fsr2h,c
  2416  000678  50DF               	movf	indf2,w,c
  2417  00067A  0100               	movlb	0	; () banked
  2418  00067C  6F62               	movwf	Save_Data@store_address& (0+255),b
  2419  00067E  ECD0  F009         	call	_Save_Data	;wreg free
  2420                           
  2421                           ;buttonchanges.c: 136: slave_selected++;
  2422  000682  0100               	movlb	0	; () banked
  2423  000684  2B7E               	incf	_slave_selected& (0+255),f,b
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;buttonchanges.c: 137: if(slave_selected > 2) {
  2427  000686  0E02               	movlw	2
  2428  000688  0100               	movlb	0	; () banked
  2429  00068A  657E               	cpfsgt	_slave_selected& (0+255),b
  2430  00068C  D003               	goto	l3223
  2431                           
  2432                           ; BSR set to: 0
  2433                           ;buttonchanges.c: 138: slave_selected = 0;
  2434  00068E  0E00               	movlw	0
  2435  000690  0100               	movlb	0	; () banked
  2436  000692  6F7E               	movwf	_slave_selected& (0+255),b
  2437  000694                     l3223:
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;buttonchanges.c: 139: }
  2441                           ;buttonchanges.c: 140: pin_selected = slave_selected * 10;
  2442  000694  0100               	movlb	0	; () banked
  2443  000696  517E               	movf	_slave_selected& (0+255),w,b
  2444  000698  0D0A               	mullw	10
  2445  00069A  CFF3 F07D          	movff	prodl,_pin_selected
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;buttonchanges.c: 141: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2449  00069E  0100               	movlb	0	; () banked
  2450  0006A0  517D               	movf	_pin_selected& (0+255),w,b
  2451  0006A2  0D06               	mullw	6
  2452  0006A4  0E02               	movlw	2
  2453  0006A6  26F3               	addwf	prodl,f,c
  2454  0006A8  0E00               	movlw	0
  2455  0006AA  22F4               	addwfc	prodh,f,c
  2456  0006AC  0E00               	movlw	low _pin
  2457  0006AE  24F3               	addwf	prodl,w,c
  2458  0006B0  6ED9               	movwf	fsr2l,c
  2459  0006B2  0E01               	movlw	high _pin
  2460  0006B4  20F4               	addwfc	prodh,w,c
  2461  0006B6  6EDA               	movwf	fsr2h,c
  2462  0006B8  50DF               	movf	indf2,w,c
  2463  0006BA  ECFA  F009         	call	_Read_Data
  2464  0006BE  0100               	movlb	0	; () banked
  2465  0006C0  517D               	movf	_pin_selected& (0+255),w,b
  2466  0006C2  0D06               	mullw	6
  2467  0006C4  0E04               	movlw	4
  2468  0006C6  26F3               	addwf	prodl,f,c
  2469  0006C8  0E00               	movlw	0
  2470  0006CA  22F4               	addwfc	prodh,f,c
  2471  0006CC  0E00               	movlw	low _pin
  2472  0006CE  24F3               	addwf	prodl,w,c
  2473  0006D0  6ED9               	movwf	fsr2l,c
  2474  0006D2  0E01               	movlw	high _pin
  2475  0006D4  20F4               	addwfc	prodh,w,c
  2476  0006D6  6EDA               	movwf	fsr2h,c
  2477  0006D8  0100               	movlb	0	; () banked
  2478  0006DA  C060  FFDE         	movff	?_Read_Data,postinc2
  2479  0006DE  0100               	movlb	0	; () banked
  2480  0006E0  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;buttonchanges.c: 142: __nop();
  2484  0006E4  F000               	nop	
  2485                           
  2486                           ;buttonchanges.c: 143: Set_Display('7', 'E', pin[pin_selected].slave);
  2487  0006E6  0E45               	movlw	69
  2488  0006E8  0100               	movlb	0	; () banked
  2489  0006EA  6F74               	movwf	Set_Display@information& (0+255),b
  2490  0006EC  0100               	movlb	0	; () banked
  2491  0006EE  517D               	movf	_pin_selected& (0+255),w,b
  2492  0006F0  0D06               	mullw	6
  2493  0006F2  0E00               	movlw	low _pin
  2494  0006F4  24F3               	addwf	prodl,w,c
  2495  0006F6  6ED9               	movwf	fsr2l,c
  2496  0006F8  0E01               	movlw	high _pin
  2497  0006FA  20F4               	addwfc	prodh,w,c
  2498  0006FC  6EDA               	movwf	fsr2h,c
  2499  0006FE  50DF               	movf	indf2,w,c
  2500  000700  0100               	movlb	0	; () banked
  2501  000702  6F7B               	movwf	??_Check_Buttons& (0+255),b
  2502  000704  0100               	movlb	0	; () banked
  2503  000706  517B               	movf	??_Check_Buttons& (0+255),w,b
  2504  000708  0100               	movlb	0	; () banked
  2505  00070A  6F75               	movwf	Set_Display@value& (0+255),b
  2506  00070C  6B76               	clrf	(Set_Display@value+1)& (0+255),b
  2507  00070E  0E37               	movlw	55
  2508  000710  ECDF  F008         	call	_Set_Display
  2509                           
  2510                           ;buttonchanges.c: 145: Delay_Routine(30);
  2511  000714  0E1E               	movlw	30
  2512  000716  EC33  F00B         	call	_Delay_Routine
  2513                           
  2514                           ;buttonchanges.c: 146: Set_Display('7', 'A', pin[pin_selected].output);
  2515  00071A  0E41               	movlw	65
  2516  00071C  0100               	movlb	0	; () banked
  2517  00071E  6F74               	movwf	Set_Display@information& (0+255),b
  2518  000720  0100               	movlb	0	; () banked
  2519  000722  517D               	movf	_pin_selected& (0+255),w,b
  2520  000724  0D06               	mullw	6
  2521  000726  0E01               	movlw	1
  2522  000728  26F3               	addwf	prodl,f,c
  2523  00072A  0E00               	movlw	0
  2524  00072C  22F4               	addwfc	prodh,f,c
  2525  00072E  0E00               	movlw	low _pin
  2526  000730  24F3               	addwf	prodl,w,c
  2527  000732  6ED9               	movwf	fsr2l,c
  2528  000734  0E01               	movlw	high _pin
  2529  000736  20F4               	addwfc	prodh,w,c
  2530  000738  6EDA               	movwf	fsr2h,c
  2531  00073A  50DF               	movf	indf2,w,c
  2532  00073C  0100               	movlb	0	; () banked
  2533  00073E  6F7B               	movwf	??_Check_Buttons& (0+255),b
  2534  000740  0100               	movlb	0	; () banked
  2535  000742  517B               	movf	??_Check_Buttons& (0+255),w,b
  2536  000744  0100               	movlb	0	; () banked
  2537  000746  6F75               	movwf	Set_Display@value& (0+255),b
  2538  000748  6B76               	clrf	(Set_Display@value+1)& (0+255),b
  2539  00074A  0E37               	movlw	55
  2540  00074C  ECDF  F008         	call	_Set_Display
  2541                           
  2542                           ;buttonchanges.c: 147: Delay_Routine(30);
  2543  000750  0E1E               	movlw	30
  2544  000752  EC33  F00B         	call	_Delay_Routine
  2545                           
  2546                           ;buttonchanges.c: 148: Set_Display('7', '-', pin[pin_selected].time);
  2547  000756  0E2D               	movlw	45
  2548  000758  0100               	movlb	0	; () banked
  2549  00075A  6F74               	movwf	Set_Display@information& (0+255),b
  2550  00075C  0100               	movlb	0	; () banked
  2551  00075E  517D               	movf	_pin_selected& (0+255),w,b
  2552  000760  0D06               	mullw	6
  2553  000762  0E04               	movlw	4
  2554  000764  26F3               	addwf	prodl,f,c
  2555  000766  0E00               	movlw	0
  2556  000768  22F4               	addwfc	prodh,f,c
  2557  00076A  0E00               	movlw	low _pin
  2558  00076C  24F3               	addwf	prodl,w,c
  2559  00076E  6ED9               	movwf	fsr2l,c
  2560  000770  0E01               	movlw	high _pin
  2561  000772  20F4               	addwfc	prodh,w,c
  2562  000774  6EDA               	movwf	fsr2h,c
  2563  000776  CFDE F075          	movff	postinc2,Set_Display@value
  2564  00077A  CFDD F076          	movff	postdec2,Set_Display@value+1
  2565  00077E  0E37               	movlw	55
  2566  000780  ECDF  F008         	call	_Set_Display
  2567                           
  2568                           ;buttonchanges.c: 149: Delay_Routine(30);
  2569  000784  0E1E               	movlw	30
  2570  000786  EC33  F00B         	call	_Delay_Routine
  2571                           
  2572                           ;buttonchanges.c: 150: __nop();
  2573  00078A  F000               	nop	
  2574  00078C  0012               	return	
  2575  00078E                     __end_of_Check_Buttons:
  2576                           	opt stack 0
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           prodh	equ	0xFF4
  2582                           prodl	equ	0xFF3
  2583                           intcon	equ	0xFF2
  2584                           postinc0	equ	0xFEE
  2585                           wreg	equ	0xFE8
  2586                           postdec1	equ	0xFE5
  2587                           fsr1l	equ	0xFE1
  2588                           indf2	equ	0xFDF
  2589                           postinc2	equ	0xFDE
  2590                           postdec2	equ	0xFDD
  2591                           plusw2	equ	0xFDB
  2592                           fsr2h	equ	0xFDA
  2593                           fsr2l	equ	0xFD9
  2594                           status	equ	0xFD8
  2595                           
  2596 ;; *************** function _Start_Timer *****************
  2597 ;; Defined at:
  2598 ;;		line 12 in file "ignition.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;		None               void
  2605 ;; Registers used:
  2606 ;;		wreg, status,2
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1
  2612 ;;      Params:         0       0       0
  2613 ;;      Locals:         0       0       0
  2614 ;;      Temps:          0       0       0
  2615 ;;      Totals:         0       0       0
  2616 ;;Total ram usage:        0 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    5
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_Check_Buttons
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text12
  2627  001706                     __ptext12:
  2628                           	opt stack 0
  2629  001706                     _Start_Timer:
  2630                           	opt stack 24
  2631                           
  2632                           ;ignition.c: 13: if(ignite_ready == 1) {
  2633                           
  2634                           ;incstack = 0
  2635  001706  A03E               	btfss	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  2636  001708  0012               	return	
  2637                           
  2638                           ;ignition.c: 14: TMR1L = 0;
  2639  00170A  0E00               	movlw	0
  2640  00170C  6ECE               	movwf	4046,c	;volatile
  2641                           
  2642                           ;ignition.c: 15: TMR1H = 0;
  2643  00170E  0E00               	movlw	0
  2644  001710  6ECF               	movwf	4047,c	;volatile
  2645                           
  2646                           ;ignition.c: 16: TMR3L = 0;
  2647  001712  0E00               	movlw	0
  2648  001714  6EB2               	movwf	4018,c	;volatile
  2649                           
  2650                           ;ignition.c: 17: TMR3H = 0;
  2651  001716  0E00               	movlw	0
  2652  001718  6EB3               	movwf	4019,c	;volatile
  2653                           
  2654                           ;ignition.c: 18: PIR1bits.TMR1IF = 0;
  2655  00171A  909E               	bcf	3998,0,c	;volatile
  2656                           
  2657                           ;ignition.c: 19: PIR2bits.TMR3IF = 0;
  2658  00171C  92A1               	bcf	4001,1,c	;volatile
  2659                           
  2660                           ;ignition.c: 20: T1CONbits.TMR1ON = 1;
  2661  00171E  80CD               	bsf	4045,0,c	;volatile
  2662  001720  0012               	return	
  2663  001722                     __end_of_Start_Timer:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           intcon	equ	0xFF2
  2672                           postinc0	equ	0xFEE
  2673                           wreg	equ	0xFE8
  2674                           postdec1	equ	0xFE5
  2675                           fsr1l	equ	0xFE1
  2676                           indf2	equ	0xFDF
  2677                           postinc2	equ	0xFDE
  2678                           postdec2	equ	0xFDD
  2679                           plusw2	equ	0xFDB
  2680                           fsr2h	equ	0xFDA
  2681                           fsr2l	equ	0xFD9
  2682                           status	equ	0xFD8
  2683                           
  2684 ;; *************** function _Del_Data *****************
  2685 ;; Defined at:
  2686 ;;		line 85 in file "storage.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;		None
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;  counter         1   26[BANK0 ] unsigned char 
  2691 ;; Return value:  Size  Location     Type
  2692 ;;		None               void
  2693 ;; Registers used:
  2694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1
  2700 ;;      Params:         0       0       0
  2701 ;;      Locals:         0       1       0
  2702 ;;      Temps:          0       0       0
  2703 ;;      Totals:         0       1       0
  2704 ;;Total ram usage:        1 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:   10
  2707 ;; This function calls:
  2708 ;;		_Delay_Routine
  2709 ;;		_Evaluate_Display
  2710 ;;		_Load_Data
  2711 ;;		_Save_Data
  2712 ;; This function is called by:
  2713 ;;		_Check_Buttons
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text13
  2718  00148A                     __ptext13:
  2719                           	opt stack 0
  2720  00148A                     _Del_Data:
  2721                           	opt stack 19
  2722                           
  2723                           ;storage.c: 86: Evaluate_Display(3, "DEL");
  2724                           
  2725                           ;incstack = 0
  2726  00148A  0E6A               	movlw	low STR_2
  2727  00148C  0100               	movlb	0	; () banked
  2728  00148E  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  2729  001490  0E02               	movlw	high STR_2
  2730  001492  0100               	movlb	0	; () banked
  2731  001494  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  2732  001496  0E03               	movlw	3
  2733  001498  ECC7  F003         	call	_Evaluate_Display
  2734                           
  2735                           ;storage.c: 87: Delay_Routine(3);
  2736  00149C  0E03               	movlw	3
  2737  00149E  EC33  F00B         	call	_Delay_Routine
  2738                           
  2739                           ;storage.c: 88: for(unsigned char counter = 0; counter < 30; counter++) {
  2740  0014A2  0E00               	movlw	0
  2741  0014A4  0100               	movlb	0	; () banked
  2742  0014A6  6F7A               	movwf	Del_Data@counter& (0+255),b
  2743  0014A8                     l3019:
  2744                           
  2745                           ; BSR set to: 0
  2746  0014A8  0E1D               	movlw	29
  2747  0014AA  0100               	movlb	0	; () banked
  2748  0014AC  657A               	cpfsgt	Del_Data@counter& (0+255),b
  2749  0014AE  D001               	goto	l3023
  2750  0014B0  D00C               	goto	l3029
  2751  0014B2                     l3023:
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;storage.c: 89: Save_Data(0, counter);
  2755  0014B2  0E00               	movlw	0
  2756  0014B4  0100               	movlb	0	; () banked
  2757  0014B6  6F61               	movwf	(Save_Data@store+1)& (0+255),b
  2758  0014B8  0E00               	movlw	0
  2759  0014BA  6F60               	movwf	Save_Data@store& (0+255),b
  2760  0014BC  C07A  F062         	movff	Del_Data@counter,Save_Data@store_address
  2761  0014C0  ECD0  F009         	call	_Save_Data	;wreg free
  2762  0014C4  0100               	movlb	0	; () banked
  2763  0014C6  2B7A               	incf	Del_Data@counter& (0+255),f,b
  2764  0014C8  D7EF               	goto	l3019
  2765  0014CA                     l3029:
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;storage.c: 90: }
  2769                           ;storage.c: 91: Load_Data();
  2770  0014CA  EC78  F006         	call	_Load_Data	;wreg free
  2771  0014CE  0012               	return		;funcret
  2772  0014D0                     __end_of_Del_Data:
  2773                           	opt stack 0
  2774                           tblptru	equ	0xFF8
  2775                           tblptrh	equ	0xFF7
  2776                           tblptrl	equ	0xFF6
  2777                           tablat	equ	0xFF5
  2778                           prodh	equ	0xFF4
  2779                           prodl	equ	0xFF3
  2780                           intcon	equ	0xFF2
  2781                           postinc0	equ	0xFEE
  2782                           wreg	equ	0xFE8
  2783                           postdec1	equ	0xFE5
  2784                           fsr1l	equ	0xFE1
  2785                           indf2	equ	0xFDF
  2786                           postinc2	equ	0xFDE
  2787                           postdec2	equ	0xFDD
  2788                           plusw2	equ	0xFDB
  2789                           fsr2h	equ	0xFDA
  2790                           fsr2l	equ	0xFD9
  2791                           status	equ	0xFD8
  2792                           
  2793 ;; *************** function _Save_Data *****************
  2794 ;; Defined at:
  2795 ;;		line 8 in file "storage.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  store           2    0[BANK0 ] unsigned int 
  2798 ;;  store_addres    1    2[BANK0 ] unsigned char 
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;		None               void
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1
  2810 ;;      Params:         0       3       0
  2811 ;;      Locals:         0       0       0
  2812 ;;      Temps:          0       0       0
  2813 ;;      Totals:         0       3       0
  2814 ;;Total ram usage:        3 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    5
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_Check_Buttons
  2821 ;;		_Del_Data
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text14
  2826  0013A0                     __ptext14:
  2827                           	opt stack 0
  2828  0013A0                     _Save_Data:
  2829                           	opt stack 24
  2830                           
  2831                           ;storage.c: 10: EEADR = store_address;
  2832                           
  2833                           ;incstack = 0
  2834  0013A0  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2835                           
  2836                           ;storage.c: 11: EEDATA = store;
  2837  0013A4  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2838                           
  2839                           ;storage.c: 12: EECON1bits.EEPGD = 0;
  2840  0013A8  9EA6               	bcf	4006,7,c	;volatile
  2841                           
  2842                           ;storage.c: 13: EECON1bits.CFGS = 0;
  2843  0013AA  9CA6               	bcf	4006,6,c	;volatile
  2844                           
  2845                           ;storage.c: 14: INTCONbits.GIE = 0;
  2846  0013AC  9EF2               	bcf	intcon,7,c	;volatile
  2847                           
  2848                           ;storage.c: 15: EECON1bits.WREN = 1;
  2849  0013AE  84A6               	bsf	4006,2,c	;volatile
  2850                           
  2851                           ;storage.c: 16: EECON2 = 0x55;
  2852  0013B0  0E55               	movlw	85
  2853  0013B2  6EA7               	movwf	4007,c	;volatile
  2854                           
  2855                           ;storage.c: 17: EECON2 = 0xAA;
  2856  0013B4  0EAA               	movlw	170
  2857  0013B6  6EA7               	movwf	4007,c	;volatile
  2858                           
  2859                           ;storage.c: 18: EECON1bits.WR = 1;
  2860  0013B8  82A6               	bsf	4006,1,c	;volatile
  2861  0013BA                     l339:
  2862  0013BA  A8A1               	btfss	4001,4,c	;volatile
  2863  0013BC  D7FE               	goto	l339
  2864                           
  2865                           ;storage.c: 20: PIR2bits.EEIF = 0;
  2866  0013BE  98A1               	bcf	4001,4,c	;volatile
  2867                           
  2868                           ;storage.c: 21: store >>= 8;
  2869  0013C0  0100               	movlb	0	; () banked
  2870  0013C2  5161               	movf	(Save_Data@store+1)& (0+255),w,b
  2871  0013C4  6F60               	movwf	Save_Data@store& (0+255),b
  2872  0013C6  6B61               	clrf	(Save_Data@store+1)& (0+255),b
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;storage.c: 22: store_address += 50;
  2876  0013C8  0E32               	movlw	50
  2877  0013CA  0100               	movlb	0	; () banked
  2878  0013CC  2762               	addwf	Save_Data@store_address& (0+255),f,b
  2879                           
  2880                           ; BSR set to: 0
  2881                           ;storage.c: 23: EEADR = store_address;
  2882  0013CE  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;storage.c: 24: EEDATA = store;
  2886  0013D2  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;storage.c: 25: EECON1bits.EEPGD = 0;
  2890  0013D6  9EA6               	bcf	4006,7,c	;volatile
  2891                           
  2892                           ; BSR set to: 0
  2893                           ;storage.c: 26: EECON1bits.CFGS = 0;
  2894  0013D8  9CA6               	bcf	4006,6,c	;volatile
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;storage.c: 27: EECON1bits.WREN = 1;
  2898  0013DA  84A6               	bsf	4006,2,c	;volatile
  2899                           
  2900                           ; BSR set to: 0
  2901                           ;storage.c: 28: INTCONbits.GIE = 0;
  2902  0013DC  9EF2               	bcf	intcon,7,c	;volatile
  2903                           
  2904                           ; BSR set to: 0
  2905                           ;storage.c: 29: EECON2 = 0x55;
  2906  0013DE  0E55               	movlw	85
  2907  0013E0  6EA7               	movwf	4007,c	;volatile
  2908                           
  2909                           ; BSR set to: 0
  2910                           ;storage.c: 30: EECON2 = 0xAA;
  2911  0013E2  0EAA               	movlw	170
  2912  0013E4  6EA7               	movwf	4007,c	;volatile
  2913                           
  2914                           ; BSR set to: 0
  2915                           ;storage.c: 31: EECON1bits.WR = 1;
  2916  0013E6  82A6               	bsf	4006,1,c	;volatile
  2917  0013E8                     l342:
  2918  0013E8  A8A1               	btfss	4001,4,c	;volatile
  2919  0013EA  D7FE               	goto	l342
  2920                           
  2921                           ;storage.c: 33: PIR2bits.EEIF = 0;
  2922  0013EC  98A1               	bcf	4001,4,c	;volatile
  2923                           
  2924                           ;storage.c: 34: EECON1bits.WREN = 0;
  2925  0013EE  94A6               	bcf	4006,2,c	;volatile
  2926                           
  2927                           ;storage.c: 35: INTCONbits.GIE = 1;
  2928  0013F0  8EF2               	bsf	intcon,7,c	;volatile
  2929  0013F2  0012               	return		;funcret
  2930  0013F4                     __end_of_Save_Data:
  2931                           	opt stack 0
  2932                           tblptru	equ	0xFF8
  2933                           tblptrh	equ	0xFF7
  2934                           tblptrl	equ	0xFF6
  2935                           tablat	equ	0xFF5
  2936                           prodh	equ	0xFF4
  2937                           prodl	equ	0xFF3
  2938                           intcon	equ	0xFF2
  2939                           postinc0	equ	0xFEE
  2940                           wreg	equ	0xFE8
  2941                           postdec1	equ	0xFE5
  2942                           fsr1l	equ	0xFE1
  2943                           indf2	equ	0xFDF
  2944                           postinc2	equ	0xFDE
  2945                           postdec2	equ	0xFDD
  2946                           plusw2	equ	0xFDB
  2947                           fsr2h	equ	0xFDA
  2948                           fsr2l	equ	0xFD9
  2949                           status	equ	0xFD8
  2950                           
  2951 ;; *************** function _Load_Data *****************
  2952 ;; Defined at:
  2953 ;;		line 65 in file "storage.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  counter         1   25[BANK0 ] unsigned char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;		None               void
  2960 ;; Registers used:
  2961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1
  2967 ;;      Params:         0       0       0
  2968 ;;      Locals:         0       1       0
  2969 ;;      Temps:          0       1       0
  2970 ;;      Totals:         0       2       0
  2971 ;;Total ram usage:        2 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    9
  2974 ;; This function calls:
  2975 ;;		_Delay_Routine
  2976 ;;		_Evaluate_Display
  2977 ;;		_Read_Data
  2978 ;;		_Set_Display
  2979 ;; This function is called by:
  2980 ;;		_main
  2981 ;;		_Del_Data
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text15
  2986  000CF0                     __ptext15:
  2987                           	opt stack 0
  2988  000CF0                     _Load_Data:
  2989                           	opt stack 21
  2990                           
  2991                           ;storage.c: 66: Evaluate_Display(3, "LOA");
  2992                           
  2993                           ;incstack = 0
  2994  000CF0  0E66               	movlw	low STR_1
  2995  000CF2  0100               	movlb	0	; () banked
  2996  000CF4  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  2997  000CF6  0E02               	movlw	high STR_1
  2998  000CF8  0100               	movlb	0	; () banked
  2999  000CFA  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3000  000CFC  0E03               	movlw	3
  3001  000CFE  ECC7  F003         	call	_Evaluate_Display
  3002                           
  3003                           ;storage.c: 67: Delay_Routine(3);
  3004  000D02  0E03               	movlw	3
  3005  000D04  EC33  F00B         	call	_Delay_Routine
  3006                           
  3007                           ;storage.c: 68: for(unsigned char counter = 0; counter < 30; counter++) {
  3008  000D08  0E00               	movlw	0
  3009  000D0A  0100               	movlb	0	; () banked
  3010  000D0C  6F79               	movwf	Load_Data@counter& (0+255),b
  3011  000D0E                     l2951:
  3012                           
  3013                           ; BSR set to: 0
  3014  000D0E  0E1D               	movlw	29
  3015  000D10  0100               	movlb	0	; () banked
  3016  000D12  6579               	cpfsgt	Load_Data@counter& (0+255),b
  3017  000D14  D001               	goto	l2955
  3018  000D16  D01A               	goto	l2961
  3019  000D18                     l2955:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;storage.c: 69: pin[counter].time = Read_Data(counter);
  3023  000D18  0100               	movlb	0	; () banked
  3024  000D1A  5179               	movf	Load_Data@counter& (0+255),w,b
  3025  000D1C  ECFA  F009         	call	_Read_Data
  3026  000D20  0100               	movlb	0	; () banked
  3027  000D22  5179               	movf	Load_Data@counter& (0+255),w,b
  3028  000D24  0D06               	mullw	6
  3029  000D26  0E04               	movlw	4
  3030  000D28  26F3               	addwf	prodl,f,c
  3031  000D2A  0E00               	movlw	0
  3032  000D2C  22F4               	addwfc	prodh,f,c
  3033  000D2E  0E00               	movlw	low _pin
  3034  000D30  24F3               	addwf	prodl,w,c
  3035  000D32  6ED9               	movwf	fsr2l,c
  3036  000D34  0E01               	movlw	high _pin
  3037  000D36  20F4               	addwfc	prodh,w,c
  3038  000D38  6EDA               	movwf	fsr2h,c
  3039  000D3A  0100               	movlb	0	; () banked
  3040  000D3C  C060  FFDE         	movff	?_Read_Data,postinc2
  3041  000D40  0100               	movlb	0	; () banked
  3042  000D42  C061  FFDD         	movff	?_Read_Data+1,postdec2
  3043                           
  3044                           ; BSR set to: 0
  3045  000D46  0100               	movlb	0	; () banked
  3046  000D48  2B79               	incf	Load_Data@counter& (0+255),f,b
  3047  000D4A  D7E1               	goto	l2951
  3048  000D4C                     l2961:
  3049                           
  3050                           ; BSR set to: 0
  3051                           ;storage.c: 70: }
  3052                           ;storage.c: 71: slave_selected = 0;
  3053  000D4C  0E00               	movlw	0
  3054  000D4E  0100               	movlb	0	; () banked
  3055  000D50  6F7E               	movwf	_slave_selected& (0+255),b
  3056                           
  3057                           ;storage.c: 72: pin_selected = 0;
  3058  000D52  0E00               	movlw	0
  3059  000D54  0100               	movlb	0	; () banked
  3060  000D56  6F7D               	movwf	_pin_selected& (0+255),b
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;storage.c: 73: Set_Display('7', 'E', pin[pin_selected].slave);
  3064  000D58  0E45               	movlw	69
  3065  000D5A  0100               	movlb	0	; () banked
  3066  000D5C  6F74               	movwf	Set_Display@information& (0+255),b
  3067  000D5E  0100               	movlb	0	; () banked
  3068  000D60  517D               	movf	_pin_selected& (0+255),w,b
  3069  000D62  0D06               	mullw	6
  3070  000D64  0E00               	movlw	low _pin
  3071  000D66  24F3               	addwf	prodl,w,c
  3072  000D68  6ED9               	movwf	fsr2l,c
  3073  000D6A  0E01               	movlw	high _pin
  3074  000D6C  20F4               	addwfc	prodh,w,c
  3075  000D6E  6EDA               	movwf	fsr2h,c
  3076  000D70  50DF               	movf	indf2,w,c
  3077  000D72  0100               	movlb	0	; () banked
  3078  000D74  6F78               	movwf	??_Load_Data& (0+255),b
  3079  000D76  0100               	movlb	0	; () banked
  3080  000D78  5178               	movf	??_Load_Data& (0+255),w,b
  3081  000D7A  0100               	movlb	0	; () banked
  3082  000D7C  6F75               	movwf	Set_Display@value& (0+255),b
  3083  000D7E  6B76               	clrf	(Set_Display@value+1)& (0+255),b
  3084  000D80  0E37               	movlw	55
  3085  000D82  ECDF  F008         	call	_Set_Display
  3086                           
  3087                           ;storage.c: 75: Delay_Routine(20);
  3088  000D86  0E14               	movlw	20
  3089  000D88  EC33  F00B         	call	_Delay_Routine
  3090                           
  3091                           ;storage.c: 76: Set_Display('7', 'A', pin[pin_selected].output);
  3092  000D8C  0E41               	movlw	65
  3093  000D8E  0100               	movlb	0	; () banked
  3094  000D90  6F74               	movwf	Set_Display@information& (0+255),b
  3095  000D92  0100               	movlb	0	; () banked
  3096  000D94  517D               	movf	_pin_selected& (0+255),w,b
  3097  000D96  0D06               	mullw	6
  3098  000D98  0E01               	movlw	1
  3099  000D9A  26F3               	addwf	prodl,f,c
  3100  000D9C  0E00               	movlw	0
  3101  000D9E  22F4               	addwfc	prodh,f,c
  3102  000DA0  0E00               	movlw	low _pin
  3103  000DA2  24F3               	addwf	prodl,w,c
  3104  000DA4  6ED9               	movwf	fsr2l,c
  3105  000DA6  0E01               	movlw	high _pin
  3106  000DA8  20F4               	addwfc	prodh,w,c
  3107  000DAA  6EDA               	movwf	fsr2h,c
  3108  000DAC  50DF               	movf	indf2,w,c
  3109  000DAE  0100               	movlb	0	; () banked
  3110  000DB0  6F78               	movwf	??_Load_Data& (0+255),b
  3111  000DB2  0100               	movlb	0	; () banked
  3112  000DB4  5178               	movf	??_Load_Data& (0+255),w,b
  3113  000DB6  0100               	movlb	0	; () banked
  3114  000DB8  6F75               	movwf	Set_Display@value& (0+255),b
  3115  000DBA  6B76               	clrf	(Set_Display@value+1)& (0+255),b
  3116  000DBC  0E37               	movlw	55
  3117  000DBE  ECDF  F008         	call	_Set_Display
  3118                           
  3119                           ;storage.c: 77: Delay_Routine(20);
  3120  000DC2  0E14               	movlw	20
  3121  000DC4  EC33  F00B         	call	_Delay_Routine
  3122                           
  3123                           ;storage.c: 78: Set_Display('7', '-', pin[pin_selected].time);
  3124  000DC8  0E2D               	movlw	45
  3125  000DCA  0100               	movlb	0	; () banked
  3126  000DCC  6F74               	movwf	Set_Display@information& (0+255),b
  3127  000DCE  0100               	movlb	0	; () banked
  3128  000DD0  517D               	movf	_pin_selected& (0+255),w,b
  3129  000DD2  0D06               	mullw	6
  3130  000DD4  0E04               	movlw	4
  3131  000DD6  26F3               	addwf	prodl,f,c
  3132  000DD8  0E00               	movlw	0
  3133  000DDA  22F4               	addwfc	prodh,f,c
  3134  000DDC  0E00               	movlw	low _pin
  3135  000DDE  24F3               	addwf	prodl,w,c
  3136  000DE0  6ED9               	movwf	fsr2l,c
  3137  000DE2  0E01               	movlw	high _pin
  3138  000DE4  20F4               	addwfc	prodh,w,c
  3139  000DE6  6EDA               	movwf	fsr2h,c
  3140  000DE8  CFDE F075          	movff	postinc2,Set_Display@value
  3141  000DEC  CFDD F076          	movff	postdec2,Set_Display@value+1
  3142  000DF0  0E37               	movlw	55
  3143  000DF2  ECDF  F008         	call	_Set_Display
  3144                           
  3145                           ;storage.c: 79: Delay_Routine(20);
  3146  000DF6  0E14               	movlw	20
  3147  000DF8  EC33  F00B         	call	_Delay_Routine
  3148  000DFC  0012               	return		;funcret
  3149  000DFE                     __end_of_Load_Data:
  3150                           	opt stack 0
  3151                           tblptru	equ	0xFF8
  3152                           tblptrh	equ	0xFF7
  3153                           tblptrl	equ	0xFF6
  3154                           tablat	equ	0xFF5
  3155                           prodh	equ	0xFF4
  3156                           prodl	equ	0xFF3
  3157                           intcon	equ	0xFF2
  3158                           postinc0	equ	0xFEE
  3159                           wreg	equ	0xFE8
  3160                           postdec1	equ	0xFE5
  3161                           fsr1l	equ	0xFE1
  3162                           indf2	equ	0xFDF
  3163                           postinc2	equ	0xFDE
  3164                           postdec2	equ	0xFDD
  3165                           plusw2	equ	0xFDB
  3166                           fsr2h	equ	0xFDA
  3167                           fsr2l	equ	0xFD9
  3168                           status	equ	0xFD8
  3169                           
  3170 ;; *************** function _Set_Display *****************
  3171 ;; Defined at:
  3172 ;;		line 139 in file "display.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  type            1    wreg     unsigned char 
  3175 ;;  information     1   20[BANK0 ] unsigned char 
  3176 ;;  value           2   21[BANK0 ] unsigned int 
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;  type            1   23[BANK0 ] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;		None               void
  3181 ;; Registers used:
  3182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1
  3188 ;;      Params:         0       3       0
  3189 ;;      Locals:         0       1       0
  3190 ;;      Temps:          0       0       0
  3191 ;;      Totals:         0       4       0
  3192 ;;Total ram usage:        4 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:    8
  3195 ;; This function calls:
  3196 ;;		_Evaluate_Display
  3197 ;;		_Evaluate_Signs
  3198 ;;		_Write_Display_Byte
  3199 ;; This function is called by:
  3200 ;;		_main
  3201 ;;		_Check_Buttons
  3202 ;;		_Load_Data
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text16
  3207  0011BE                     __ptext16:
  3208                           	opt stack 0
  3209  0011BE                     _Set_Display:
  3210                           	opt stack 22
  3211                           
  3212                           ;incstack = 0
  3213                           ;Set_Display@type stored from wreg
  3214  0011BE  0100               	movlb	0	; () banked
  3215  0011C0  6F77               	movwf	Set_Display@type& (0+255),b
  3216                           
  3217                           ;display.c: 141: switch (type) {
  3218  0011C2  D020               	goto	l2909
  3219  0011C4                     l2893:
  3220                           
  3221                           ;display.c: 143: if(information != '-') {
  3222  0011C4  0E2D               	movlw	45
  3223  0011C6  0100               	movlb	0	; () banked
  3224  0011C8  1974               	xorwf	Set_Display@information& (0+255),w,b
  3225  0011CA  B4D8               	btfsc	status,2,c
  3226  0011CC  D014               	goto	l2905
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;display.c: 144: signs[0] = value;
  3230  0011CE  C075  F07F         	movff	Set_Display@value,_signs
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;display.c: 145: signs[0] += 0x30;
  3234  0011D2  0E30               	movlw	48
  3235  0011D4  0100               	movlb	0	; () banked
  3236  0011D6  277F               	addwf	_signs& (0+255),f,b
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;display.c: 146: signs[1] = '-';
  3240  0011D8  0E2D               	movlw	45
  3241  0011DA  0100               	movlb	0	; () banked
  3242  0011DC  6F80               	movwf	(_signs+1)& (0+255),b
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;display.c: 147: signs[2] = information;
  3246  0011DE  C074  F081         	movff	Set_Display@information,_signs+2
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;display.c: 148: Evaluate_Display(sizeof(signs), signs);
  3250  0011E2  0E7F               	movlw	low _signs
  3251  0011E4  0100               	movlb	0	; () banked
  3252  0011E6  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3253  0011E8  0E00               	movlw	high _signs
  3254  0011EA  0100               	movlb	0	; () banked
  3255  0011EC  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3256  0011EE  0E03               	movlw	3
  3257  0011F0  ECC7  F003         	call	_Evaluate_Display
  3258                           
  3259                           ;display.c: 149: } else {
  3260  0011F4  D00D               	goto	l2911
  3261  0011F6                     l2905:
  3262                           
  3263                           ;display.c: 150: Evaluate_Signs(value);
  3264  0011F6  C075  F071         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  3265  0011FA  C076  F072         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  3266  0011FE  EC6D  F008         	call	_Evaluate_Signs	;wreg free
  3267                           
  3268                           ;display.c: 156: }
  3269                           
  3270                           ;display.c: 155: break;
  3271                           
  3272                           ;display.c: 153: case 'L':
  3273                           
  3274                           ;display.c: 151: }
  3275                           ;display.c: 152: break;
  3276  001202  D006               	goto	l2911
  3277  001204                     l2909:
  3278  001204  0100               	movlb	0	; () banked
  3279  001206  5177               	movf	Set_Display@type& (0+255),w,b
  3280                           
  3281                           ; Switch size 1, requested type "space"
  3282                           ; Number of cases is 2, Range of values is 55 to 76
  3283                           ; switch strategies available:
  3284                           ; Name         Instructions Cycles
  3285                           ; simple_byte            7     4 (average)
  3286                           ;	Chosen strategy is simple_byte
  3287  001208  0A37               	xorlw	55	; case 55
  3288  00120A  B4D8               	btfsc	status,2,c
  3289  00120C  D7DB               	goto	l2893
  3290  00120E  0A7B               	xorlw	123	; case 76
  3291  001210                     l2911:
  3292                           
  3293                           ;display.c: 157: Write_Display_Byte(pixels);
  3294  001210  0E37               	movlw	low _pixels
  3295  001212  0100               	movlb	0	; () banked
  3296  001214  6F60               	movwf	Write_Display_Byte@write_data& (0+255),b
  3297  001216  0E00               	movlw	high _pixels
  3298  001218  0100               	movlb	0	; () banked
  3299  00121A  6F61               	movwf	(Write_Display_Byte@write_data+1)& (0+255),b
  3300  00121C  EC43  F009         	call	_Write_Display_Byte	;wreg free
  3301  001220  0012               	return		;funcret
  3302  001222                     __end_of_Set_Display:
  3303                           	opt stack 0
  3304                           tblptru	equ	0xFF8
  3305                           tblptrh	equ	0xFF7
  3306                           tblptrl	equ	0xFF6
  3307                           tablat	equ	0xFF5
  3308                           prodh	equ	0xFF4
  3309                           prodl	equ	0xFF3
  3310                           intcon	equ	0xFF2
  3311                           postinc0	equ	0xFEE
  3312                           wreg	equ	0xFE8
  3313                           postdec1	equ	0xFE5
  3314                           fsr1l	equ	0xFE1
  3315                           indf2	equ	0xFDF
  3316                           postinc2	equ	0xFDE
  3317                           postdec2	equ	0xFDD
  3318                           plusw2	equ	0xFDB
  3319                           fsr2h	equ	0xFDA
  3320                           fsr2l	equ	0xFD9
  3321                           status	equ	0xFD8
  3322                           
  3323 ;; *************** function _Write_Display_Byte *****************
  3324 ;; Defined at:
  3325 ;;		line 46 in file "communication.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  write_data      2    0[BANK0 ] PTR unsigned char 
  3328 ;;		 -> pixels(7), 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  counter         1    6[BANK0 ] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;		None               void
  3333 ;; Registers used:
  3334 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1
  3340 ;;      Params:         0       2       0
  3341 ;;      Locals:         0       1       0
  3342 ;;      Temps:          0       4       0
  3343 ;;      Totals:         0       7       0
  3344 ;;Total ram usage:        7 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    5
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_Set_Display
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text17
  3355  001286                     __ptext17:
  3356                           	opt stack 0
  3357  001286                     _Write_Display_Byte:
  3358                           	opt stack 24
  3359                           
  3360                           ;communication.c: 47: for(unsigned char counter = sizeof(pixels); counter > 0;
  3361                           
  3362                           ;incstack = 0
  3363  001286  0E07               	movlw	7
  3364  001288  0100               	movlb	0	; () banked
  3365  00128A  6F66               	movwf	Write_Display_Byte@counter& (0+255),b
  3366  00128C                     
  3367                           ;communication.c: 48: counter--) {
  3368  00128C  0100               	movlb	0	; () banked
  3369  00128E  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3370  001290  0100               	movlb	0	; () banked
  3371  001292  B4D8               	btfsc	status,2,c
  3372  001294  0012               	return	
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;communication.c: 49: if(SSP1IF = 1) {
  3376                           
  3377                           ; BSR set to: 0
  3378  001296  869E               	bsf	3998,3,c	;volatile
  3379  001298  B69E               	btfsc	3998,3,c	;volatile
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;communication.c: 50: SSP1IF = 0;
  3383  00129A  969E               	bcf	3998,3,c	;volatile
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;communication.c: 51: }
  3387                           ;communication.c: 52: SSP1BUF = write_data[counter - 1];
  3388                           
  3389                           ; BSR set to: 0
  3390  00129C  0EFF               	movlw	255
  3391  00129E  0100               	movlb	0	; () banked
  3392  0012A0  6F62               	movwf	??_Write_Display_Byte& (0+255),b
  3393  0012A2  0EFF               	movlw	255
  3394  0012A4  0100               	movlb	0	; () banked
  3395  0012A6  6F63               	movwf	(??_Write_Display_Byte+1)& (0+255),b
  3396  0012A8  0100               	movlb	0	; () banked
  3397  0012AA  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3398  0012AC  0100               	movlb	0	; () banked
  3399  0012AE  6F64               	movwf	(??_Write_Display_Byte+2)& (0+255),b
  3400  0012B0  6B65               	clrf	(??_Write_Display_Byte+3)& (0+255),b
  3401  0012B2  0100               	movlb	0	; () banked
  3402  0012B4  5162               	movf	??_Write_Display_Byte& (0+255),w,b
  3403  0012B6  0100               	movlb	0	; () banked
  3404  0012B8  2764               	addwf	(??_Write_Display_Byte+2)& (0+255),f,b
  3405  0012BA  0100               	movlb	0	; () banked
  3406  0012BC  5163               	movf	(??_Write_Display_Byte+1)& (0+255),w,b
  3407  0012BE  0100               	movlb	0	; () banked
  3408  0012C0  2365               	addwfc	(??_Write_Display_Byte+3)& (0+255),f,b
  3409  0012C2  0100               	movlb	0	; () banked
  3410  0012C4  5164               	movf	(??_Write_Display_Byte+2)& (0+255),w,b
  3411  0012C6  0100               	movlb	0	; () banked
  3412  0012C8  2560               	addwf	Write_Display_Byte@write_data& (0+255),w,b
  3413  0012CA  6ED9               	movwf	fsr2l,c
  3414  0012CC  0100               	movlb	0	; () banked
  3415  0012CE  5165               	movf	(??_Write_Display_Byte+3)& (0+255),w,b
  3416  0012D0  0100               	movlb	0	; () banked
  3417  0012D2  2161               	addwfc	(Write_Display_Byte@write_data+1)& (0+255),w,b
  3418  0012D4  6EDA               	movwf	fsr2h,c
  3419  0012D6  50DF               	movf	indf2,w,c
  3420  0012D8  6EC9               	movwf	4041,c	;volatile
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;communication.c: 54: SSP1IF = 0;
  3424  0012DA  969E               	bcf	3998,3,c	;volatile
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;communication.c: 55: PORTCbits.RC0 = 0;
  3428  0012DC  9082               	bcf	3970,0,c	;volatile
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;communication.c: 56: PORTCbits.RC0 = 1;
  3432  0012DE  8082               	bsf	3970,0,c	;volatile
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;communication.c: 57: PORTCbits.RC0 = 0;
  3436  0012E0  9082               	bcf	3970,0,c	;volatile
  3437                           
  3438                           ; BSR set to: 0
  3439  0012E2  0100               	movlb	0	; () banked
  3440  0012E4  0766               	decf	Write_Display_Byte@counter& (0+255),f,b
  3441  0012E6  D7D2               	goto	L3
  3442  0012E8                     __end_of_Write_Display_Byte:
  3443                           	opt stack 0
  3444                           tblptru	equ	0xFF8
  3445                           tblptrh	equ	0xFF7
  3446                           tblptrl	equ	0xFF6
  3447                           tablat	equ	0xFF5
  3448                           prodh	equ	0xFF4
  3449                           prodl	equ	0xFF3
  3450                           intcon	equ	0xFF2
  3451                           postinc0	equ	0xFEE
  3452                           wreg	equ	0xFE8
  3453                           postdec1	equ	0xFE5
  3454                           fsr1l	equ	0xFE1
  3455                           indf2	equ	0xFDF
  3456                           postinc2	equ	0xFDE
  3457                           postdec2	equ	0xFDD
  3458                           plusw2	equ	0xFDB
  3459                           fsr2h	equ	0xFDA
  3460                           fsr2l	equ	0xFD9
  3461                           status	equ	0xFD8
  3462                           
  3463 ;; *************** function _Evaluate_Signs *****************
  3464 ;; Defined at:
  3465 ;;		line 119 in file "display.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  evaluation_v    2   17[BANK0 ] unsigned int 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  valuecounter    1   19[BANK0 ] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;		None               void
  3472 ;; Registers used:
  3473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1
  3479 ;;      Params:         0       2       0
  3480 ;;      Locals:         0       1       0
  3481 ;;      Temps:          0       0       0
  3482 ;;      Totals:         0       3       0
  3483 ;;Total ram usage:        3 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:    7
  3486 ;; This function calls:
  3487 ;;		_Evaluate_Display
  3488 ;;		___lwmod
  3489 ;; This function is called by:
  3490 ;;		_Set_Display
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text18
  3495  0010DA                     __ptext18:
  3496                           	opt stack 0
  3497  0010DA                     _Evaluate_Signs:
  3498                           	opt stack 22
  3499                           
  3500                           ;display.c: 120: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;incstack = 0
  3504  0010DA  0E00               	movlw	0
  3505  0010DC  0100               	movlb	0	; () banked
  3506  0010DE  6F73               	movwf	Evaluate_Signs@valuecounter& (0+255),b
  3507  0010E0                     l2847:
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;display.c: 121: valuecounter++) {
  3511  0010E0  0E02               	movlw	2
  3512  0010E2  0100               	movlb	0	; () banked
  3513  0010E4  6573               	cpfsgt	Evaluate_Signs@valuecounter& (0+255),b
  3514  0010E6  D001               	goto	l2851
  3515  0010E8  D029               	goto	l430
  3516  0010EA                     l2851:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;display.c: 122: signs[valuecounter] = evaluation_value % 10;
  3520  0010EA  0100               	movlb	0	; () banked
  3521  0010EC  5173               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3522  0010EE  0D01               	mullw	1
  3523  0010F0  0E7F               	movlw	low _signs
  3524  0010F2  24F3               	addwf	prodl,w,c
  3525  0010F4  6ED9               	movwf	fsr2l,c
  3526  0010F6  0E00               	movlw	high _signs
  3527  0010F8  20F4               	addwfc	prodh,w,c
  3528  0010FA  6EDA               	movwf	fsr2h,c
  3529  0010FC  C071  F060         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  3530  001100  C072  F061         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  3531  001104  0E00               	movlw	0
  3532  001106  0100               	movlb	0	; () banked
  3533  001108  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  3534  00110A  0E0A               	movlw	10
  3535  00110C  6F62               	movwf	___lwmod@divisor& (0+255),b
  3536  00110E  EC74  F009         	call	___lwmod	;wreg free
  3537  001112  0100               	movlb	0	; () banked
  3538  001114  5160               	movf	?___lwmod& (0+255),w,b
  3539  001116  6EDF               	movwf	indf2,c
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;display.c: 123: signs[valuecounter] += 0x30;
  3543  001118  0100               	movlb	0	; () banked
  3544  00111A  5173               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3545  00111C  0D01               	mullw	1
  3546  00111E  0E7F               	movlw	low _signs
  3547  001120  24F3               	addwf	prodl,w,c
  3548  001122  6ED9               	movwf	fsr2l,c
  3549  001124  0E00               	movlw	high _signs
  3550  001126  20F4               	addwfc	prodh,w,c
  3551  001128  6EDA               	movwf	fsr2h,c
  3552  00112A  0E30               	movlw	48
  3553  00112C  26DF               	addwf	indf2,f,c
  3554                           
  3555                           ; BSR set to: 0
  3556                           ;display.c: 124: evaluation_value >>= 1;
  3557  00112E  0100               	movlb	0	; () banked
  3558  001130  90D8               	bcf	status,0,c
  3559  001132  3372               	rrcf	(Evaluate_Signs@evaluation_value+1)& (0+255),f,b
  3560  001134  3371               	rrcf	Evaluate_Signs@evaluation_value& (0+255),f,b
  3561                           
  3562                           ; BSR set to: 0
  3563  001136  0100               	movlb	0	; () banked
  3564  001138  2B73               	incf	Evaluate_Signs@valuecounter& (0+255),f,b
  3565  00113A  D7D2               	goto	l2847
  3566  00113C                     l430:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;display.c: 125: }
  3570                           ;display.c: 126: __nop();
  3571  00113C  F000               	nop	
  3572                           
  3573                           ;display.c: 127: Evaluate_Display(sizeof(signs), signs);
  3574  00113E  0E7F               	movlw	low _signs
  3575  001140  0100               	movlb	0	; () banked
  3576  001142  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3577  001144  0E00               	movlw	high _signs
  3578  001146  0100               	movlb	0	; () banked
  3579  001148  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3580  00114A  0E03               	movlw	3
  3581  00114C  ECC7  F003         	call	_Evaluate_Display
  3582  001150  0012               	return		;funcret
  3583  001152                     __end_of_Evaluate_Signs:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           prodh	equ	0xFF4
  3590                           prodl	equ	0xFF3
  3591                           intcon	equ	0xFF2
  3592                           postinc0	equ	0xFEE
  3593                           wreg	equ	0xFE8
  3594                           postdec1	equ	0xFE5
  3595                           fsr1l	equ	0xFE1
  3596                           indf2	equ	0xFDF
  3597                           postinc2	equ	0xFDE
  3598                           postdec2	equ	0xFDD
  3599                           plusw2	equ	0xFDB
  3600                           fsr2h	equ	0xFDA
  3601                           fsr2l	equ	0xFD9
  3602                           status	equ	0xFD8
  3603                           
  3604 ;; *************** function ___lwmod *****************
  3605 ;; Defined at:
  3606 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  dividend        2    0[BANK0 ] unsigned int 
  3609 ;;  divisor         2    2[BANK0 ] unsigned int 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  counter         1    4[BANK0 ] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  2    0[BANK0 ] unsigned int 
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1
  3621 ;;      Params:         0       4       0
  3622 ;;      Locals:         0       1       0
  3623 ;;      Temps:          0       0       0
  3624 ;;      Totals:         0       5       0
  3625 ;;Total ram usage:        5 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    5
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_Evaluate_Signs
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text19
  3636  0012E8                     __ptext19:
  3637                           	opt stack 0
  3638  0012E8                     ___lwmod:
  3639                           	opt stack 23
  3640                           
  3641                           ;incstack = 0
  3642  0012E8  0100               	movlb	0	; () banked
  3643  0012EA  5162               	movf	___lwmod@divisor& (0+255),w,b
  3644  0012EC  0100               	movlb	0	; () banked
  3645  0012EE  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3646  0012F0  B4D8               	btfsc	status,2,c
  3647  0012F2  D026               	goto	l1002
  3648                           
  3649                           ; BSR set to: 0
  3650  0012F4  0E01               	movlw	1
  3651  0012F6  0100               	movlb	0	; () banked
  3652  0012F8  6F64               	movwf	___lwmod@counter& (0+255),b
  3653  0012FA  D006               	goto	l2835
  3654  0012FC                     l2833:
  3655                           
  3656                           ; BSR set to: 0
  3657  0012FC  0100               	movlb	0	; () banked
  3658  0012FE  90D8               	bcf	status,0,c
  3659  001300  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  3660  001302  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3661  001304  0100               	movlb	0	; () banked
  3662  001306  2B64               	incf	___lwmod@counter& (0+255),f,b
  3663  001308                     l2835:
  3664                           
  3665                           ; BSR set to: 0
  3666  001308  0100               	movlb	0	; () banked
  3667  00130A  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3668  00130C  D7F7               	goto	l2833
  3669  00130E                     l2837:
  3670                           
  3671                           ; BSR set to: 0
  3672  00130E  0100               	movlb	0	; () banked
  3673  001310  5162               	movf	___lwmod@divisor& (0+255),w,b
  3674  001312  0100               	movlb	0	; () banked
  3675  001314  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  3676  001316  0100               	movlb	0	; () banked
  3677  001318  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3678  00131A  0100               	movlb	0	; () banked
  3679  00131C  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3680  00131E  A0D8               	btfss	status,0,c
  3681  001320  D008               	goto	l2841
  3682                           
  3683                           ; BSR set to: 0
  3684  001322  0100               	movlb	0	; () banked
  3685  001324  5162               	movf	___lwmod@divisor& (0+255),w,b
  3686  001326  0100               	movlb	0	; () banked
  3687  001328  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  3688  00132A  0100               	movlb	0	; () banked
  3689  00132C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3690  00132E  0100               	movlb	0	; () banked
  3691  001330  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3692  001332                     l2841:
  3693                           
  3694                           ; BSR set to: 0
  3695  001332  0100               	movlb	0	; () banked
  3696  001334  90D8               	bcf	status,0,c
  3697  001336  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3698  001338  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  3699                           
  3700                           ; BSR set to: 0
  3701  00133A  0100               	movlb	0	; () banked
  3702  00133C  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  3703  00133E  D7E7               	goto	l2837
  3704  001340                     l1002:
  3705                           
  3706                           ; BSR set to: 0
  3707  001340  C060  F060         	movff	___lwmod@dividend,?___lwmod
  3708  001344  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  3709                           
  3710                           ; BSR set to: 0
  3711  001348  0012               	return		;funcret
  3712  00134A                     __end_of___lwmod:
  3713                           	opt stack 0
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           prodh	equ	0xFF4
  3719                           prodl	equ	0xFF3
  3720                           intcon	equ	0xFF2
  3721                           postinc0	equ	0xFEE
  3722                           wreg	equ	0xFE8
  3723                           postdec1	equ	0xFE5
  3724                           fsr1l	equ	0xFE1
  3725                           indf2	equ	0xFDF
  3726                           postinc2	equ	0xFDE
  3727                           postdec2	equ	0xFDD
  3728                           plusw2	equ	0xFDB
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function _Evaluate_Display *****************
  3734 ;; Defined at:
  3735 ;;		line 52 in file "display.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  size            1    wreg     unsigned char 
  3738 ;;  evaluate        2    8[BANK0 ] PTR const unsigned char 
  3739 ;;		 -> signs(3), STR_2(4), STR_1(4), 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  size            1   16[BANK0 ] unsigned char 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;		None               void
  3744 ;; Registers used:
  3745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMRAM   BANK0   BANK1
  3751 ;;      Params:         0       2       0
  3752 ;;      Locals:         0       1       0
  3753 ;;      Temps:          0       6       0
  3754 ;;      Totals:         0       9       0
  3755 ;;Total ram usage:        9 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:    6
  3758 ;; This function calls:
  3759 ;;		_Set_Bits
  3760 ;; This function is called by:
  3761 ;;		_Load_Data
  3762 ;;		_Del_Data
  3763 ;;		_Evaluate_Signs
  3764 ;;		_Set_Display
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text20
  3769  00078E                     __ptext20:
  3770                           	opt stack 0
  3771  00078E                     _Evaluate_Display:
  3772                           	opt stack 22
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;incstack = 0
  3776                           ;Evaluate_Display@size stored from wreg
  3777  00078E  0100               	movlb	0	; () banked
  3778  000790  6F70               	movwf	Evaluate_Display@size& (0+255),b
  3779                           
  3780                           ;display.c: 53: for(display_counter = (size + 1); display_counter > 0;
  3781  000792  0100               	movlb	0	; () banked
  3782  000794  2970               	incf	Evaluate_Display@size& (0+255),w,b
  3783  000796  6E3F               	movwf	_display_counter,c
  3784                           
  3785                           ;display.c: 54: display_counter--) {
  3786  000798  D170               	goto	l2827
  3787  00079A                     l404:
  3788                           
  3789                           ;display.c: 55: __nop();
  3790  00079A  F000               	nop	
  3791                           
  3792                           ;display.c: 56: switch (evaluate[(display_counter - 1)]) {
  3793  00079C  D10B               	goto	l2823
  3794  00079E                     l2787:
  3795                           
  3796                           ;display.c: 58: Set_Bits("ABCDEF");
  3797  00079E  0E23               	movlw	low STR_3
  3798  0007A0  0100               	movlb	0	; () banked
  3799  0007A2  6F60               	movwf	Set_Bits@bits& (0+255),b
  3800  0007A4  0E02               	movlw	high STR_3
  3801  0007A6  0100               	movlb	0	; () banked
  3802  0007A8  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3803  0007AA  0100               	movlb	0	; () banked
  3804  0007AC  5160               	movf	Set_Bits@bits& (0+255),w,b
  3805  0007AE  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3806  0007B0  A4D8               	btfss	status,2,c
  3807  0007B2  0E00               	movlw	low (__mediumconst shr (0+16))
  3808  0007B4  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3809  0007B6  ECFF  F006         	call	_Set_Bits	;wreg free
  3810                           
  3811                           ;display.c: 59: break;
  3812  0007BA  D15E               	goto	l2825
  3813  0007BC                     l2789:
  3814                           
  3815                           ;display.c: 61: Set_Bits("BC");
  3816  0007BC  0E63               	movlw	low (STR_10+1)
  3817  0007BE  0100               	movlb	0	; () banked
  3818  0007C0  6F60               	movwf	Set_Bits@bits& (0+255),b
  3819  0007C2  0E02               	movlw	high (STR_10+1)
  3820  0007C4  0100               	movlb	0	; () banked
  3821  0007C6  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3822  0007C8  0100               	movlb	0	; () banked
  3823  0007CA  5160               	movf	Set_Bits@bits& (0+255),w,b
  3824  0007CC  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3825  0007CE  A4D8               	btfss	status,2,c
  3826  0007D0  0E00               	movlw	low (__mediumconst shr (0+16))
  3827  0007D2  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3828  0007D4  ECFF  F006         	call	_Set_Bits	;wreg free
  3829                           
  3830                           ;display.c: 62: break;
  3831  0007D8  D14F               	goto	l2825
  3832  0007DA                     l2791:
  3833                           
  3834                           ;display.c: 64: Set_Bits("ABDEG");
  3835  0007DA  0E45               	movlw	low STR_5
  3836  0007DC  0100               	movlb	0	; () banked
  3837  0007DE  6F60               	movwf	Set_Bits@bits& (0+255),b
  3838  0007E0  0E02               	movlw	high STR_5
  3839  0007E2  0100               	movlb	0	; () banked
  3840  0007E4  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3841  0007E6  0100               	movlb	0	; () banked
  3842  0007E8  5160               	movf	Set_Bits@bits& (0+255),w,b
  3843  0007EA  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3844  0007EC  A4D8               	btfss	status,2,c
  3845  0007EE  0E00               	movlw	low (__mediumconst shr (0+16))
  3846  0007F0  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3847  0007F2  ECFF  F006         	call	_Set_Bits	;wreg free
  3848                           
  3849                           ;display.c: 65: break;
  3850  0007F6  D140               	goto	l2825
  3851  0007F8                     l2793:
  3852                           
  3853                           ;display.c: 67: Set_Bits("ABCDG");
  3854  0007F8  0E3F               	movlw	low STR_6
  3855  0007FA  0100               	movlb	0	; () banked
  3856  0007FC  6F60               	movwf	Set_Bits@bits& (0+255),b
  3857  0007FE  0E02               	movlw	high STR_6
  3858  000800  0100               	movlb	0	; () banked
  3859  000802  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3860  000804  0100               	movlb	0	; () banked
  3861  000806  5160               	movf	Set_Bits@bits& (0+255),w,b
  3862  000808  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3863  00080A  A4D8               	btfss	status,2,c
  3864  00080C  0E00               	movlw	low (__mediumconst shr (0+16))
  3865  00080E  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3866  000810  ECFF  F006         	call	_Set_Bits	;wreg free
  3867                           
  3868                           ;display.c: 68: break;
  3869  000814  D131               	goto	l2825
  3870  000816                     l2795:
  3871                           
  3872                           ;display.c: 70: Set_Bits("BCFG");
  3873  000816  0E5D               	movlw	low STR_7
  3874  000818  0100               	movlb	0	; () banked
  3875  00081A  6F60               	movwf	Set_Bits@bits& (0+255),b
  3876  00081C  0E02               	movlw	high STR_7
  3877  00081E  0100               	movlb	0	; () banked
  3878  000820  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3879  000822  0100               	movlb	0	; () banked
  3880  000824  5160               	movf	Set_Bits@bits& (0+255),w,b
  3881  000826  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3882  000828  A4D8               	btfss	status,2,c
  3883  00082A  0E00               	movlw	low (__mediumconst shr (0+16))
  3884  00082C  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3885  00082E  ECFF  F006         	call	_Set_Bits	;wreg free
  3886                           
  3887                           ;display.c: 71: break;
  3888  000832  D122               	goto	l2825
  3889  000834                     l2797:
  3890                           
  3891                           ;display.c: 73: Set_Bits("ACDFG");
  3892  000834  0E4B               	movlw	low STR_8
  3893  000836  0100               	movlb	0	; () banked
  3894  000838  6F60               	movwf	Set_Bits@bits& (0+255),b
  3895  00083A  0E02               	movlw	high STR_8
  3896  00083C  0100               	movlb	0	; () banked
  3897  00083E  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3898  000840  0100               	movlb	0	; () banked
  3899  000842  5160               	movf	Set_Bits@bits& (0+255),w,b
  3900  000844  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3901  000846  A4D8               	btfss	status,2,c
  3902  000848  0E00               	movlw	low (__mediumconst shr (0+16))
  3903  00084A  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3904  00084C  ECFF  F006         	call	_Set_Bits	;wreg free
  3905                           
  3906                           ;display.c: 74: break;
  3907  000850  D113               	goto	l2825
  3908  000852                     l2799:
  3909                           
  3910                           ;display.c: 76: Set_Bits("ACDEFG");
  3911  000852  0E38               	movlw	low STR_9
  3912  000854  0100               	movlb	0	; () banked
  3913  000856  6F60               	movwf	Set_Bits@bits& (0+255),b
  3914  000858  0E02               	movlw	high STR_9
  3915  00085A  0100               	movlb	0	; () banked
  3916  00085C  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3917  00085E  0100               	movlb	0	; () banked
  3918  000860  5160               	movf	Set_Bits@bits& (0+255),w,b
  3919  000862  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3920  000864  A4D8               	btfss	status,2,c
  3921  000866  0E00               	movlw	low (__mediumconst shr (0+16))
  3922  000868  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3923  00086A  ECFF  F006         	call	_Set_Bits	;wreg free
  3924                           
  3925                           ;display.c: 77: break;
  3926  00086E  D104               	goto	l2825
  3927  000870                     l2801:
  3928                           
  3929                           ;display.c: 79: Set_Bits("ABC");
  3930  000870  0E62               	movlw	low STR_10
  3931  000872  0100               	movlb	0	; () banked
  3932  000874  6F60               	movwf	Set_Bits@bits& (0+255),b
  3933  000876  0E02               	movlw	high STR_10
  3934  000878  0100               	movlb	0	; () banked
  3935  00087A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3936  00087C  0100               	movlb	0	; () banked
  3937  00087E  5160               	movf	Set_Bits@bits& (0+255),w,b
  3938  000880  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3939  000882  A4D8               	btfss	status,2,c
  3940  000884  0E00               	movlw	low (__mediumconst shr (0+16))
  3941  000886  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3942  000888  ECFF  F006         	call	_Set_Bits	;wreg free
  3943                           
  3944                           ;display.c: 80: break;
  3945  00088C  D0F5               	goto	l2825
  3946  00088E                     l2803:
  3947                           
  3948                           ;display.c: 82: Set_Bits("ABCDEFG");
  3949  00088E  0E1B               	movlw	low STR_11
  3950  000890  0100               	movlb	0	; () banked
  3951  000892  6F60               	movwf	Set_Bits@bits& (0+255),b
  3952  000894  0E02               	movlw	high STR_11
  3953  000896  0100               	movlb	0	; () banked
  3954  000898  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3955  00089A  0100               	movlb	0	; () banked
  3956  00089C  5160               	movf	Set_Bits@bits& (0+255),w,b
  3957  00089E  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3958  0008A0  A4D8               	btfss	status,2,c
  3959  0008A2  0E00               	movlw	low (__mediumconst shr (0+16))
  3960  0008A4  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3961  0008A6  ECFF  F006         	call	_Set_Bits	;wreg free
  3962                           
  3963                           ;display.c: 83: break;
  3964  0008AA  D0E6               	goto	l2825
  3965  0008AC                     l2805:
  3966                           
  3967                           ;display.c: 85: Set_Bits("ABCDFG");
  3968  0008AC  0E2A               	movlw	low STR_12
  3969  0008AE  0100               	movlb	0	; () banked
  3970  0008B0  6F60               	movwf	Set_Bits@bits& (0+255),b
  3971  0008B2  0E02               	movlw	high STR_12
  3972  0008B4  0100               	movlb	0	; () banked
  3973  0008B6  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3974  0008B8  0100               	movlb	0	; () banked
  3975  0008BA  5160               	movf	Set_Bits@bits& (0+255),w,b
  3976  0008BC  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3977  0008BE  A4D8               	btfss	status,2,c
  3978  0008C0  0E00               	movlw	low (__mediumconst shr (0+16))
  3979  0008C2  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3980  0008C4  ECFF  F006         	call	_Set_Bits	;wreg free
  3981                           
  3982                           ;display.c: 86: break;
  3983  0008C8  D0D7               	goto	l2825
  3984  0008CA                     l2807:
  3985                           
  3986                           ;display.c: 88: Set_Bits("ABCEFG");
  3987  0008CA  0E31               	movlw	low STR_13
  3988  0008CC  0100               	movlb	0	; () banked
  3989  0008CE  6F60               	movwf	Set_Bits@bits& (0+255),b
  3990  0008D0  0E02               	movlw	high STR_13
  3991  0008D2  0100               	movlb	0	; () banked
  3992  0008D4  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3993  0008D6  0100               	movlb	0	; () banked
  3994  0008D8  5160               	movf	Set_Bits@bits& (0+255),w,b
  3995  0008DA  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  3996  0008DC  A4D8               	btfss	status,2,c
  3997  0008DE  0E00               	movlw	low (__mediumconst shr (0+16))
  3998  0008E0  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  3999  0008E2  ECFF  F006         	call	_Set_Bits	;wreg free
  4000                           
  4001                           ;display.c: 89: break;
  4002  0008E6  D0C8               	goto	l2825
  4003  0008E8                     l2809:
  4004                           
  4005                           ;display.c: 91: Set_Bits("ABCDEF");
  4006  0008E8  0E23               	movlw	low STR_3
  4007  0008EA  0100               	movlb	0	; () banked
  4008  0008EC  6F60               	movwf	Set_Bits@bits& (0+255),b
  4009  0008EE  0E02               	movlw	high STR_3
  4010  0008F0  0100               	movlb	0	; () banked
  4011  0008F2  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4012  0008F4  0100               	movlb	0	; () banked
  4013  0008F6  5160               	movf	Set_Bits@bits& (0+255),w,b
  4014  0008F8  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4015  0008FA  A4D8               	btfss	status,2,c
  4016  0008FC  0E00               	movlw	low (__mediumconst shr (0+16))
  4017  0008FE  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4018  000900  ECFF  F006         	call	_Set_Bits	;wreg free
  4019                           
  4020                           ;display.c: 92: break;
  4021  000904  D0B9               	goto	l2825
  4022  000906                     l2811:
  4023                           
  4024                           ;display.c: 94: Set_Bits("ADEFG");
  4025  000906  0E57               	movlw	low STR_15
  4026  000908  0100               	movlb	0	; () banked
  4027  00090A  6F60               	movwf	Set_Bits@bits& (0+255),b
  4028  00090C  0E02               	movlw	high STR_15
  4029  00090E  0100               	movlb	0	; () banked
  4030  000910  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4031  000912  0100               	movlb	0	; () banked
  4032  000914  5160               	movf	Set_Bits@bits& (0+255),w,b
  4033  000916  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4034  000918  A4D8               	btfss	status,2,c
  4035  00091A  0E00               	movlw	low (__mediumconst shr (0+16))
  4036  00091C  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4037  00091E  ECFF  F006         	call	_Set_Bits	;wreg free
  4038                           
  4039                           ;display.c: 95: break;
  4040  000922  D0AA               	goto	l2825
  4041  000924                     l2813:
  4042                           
  4043                           ;display.c: 97: Set_Bits("DEF");
  4044  000924  0E26               	movlw	low (STR_3+3)
  4045  000926  0100               	movlb	0	; () banked
  4046  000928  6F60               	movwf	Set_Bits@bits& (0+255),b
  4047  00092A  0E02               	movlw	high (STR_3+3)
  4048  00092C  0100               	movlb	0	; () banked
  4049  00092E  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4050  000930  0100               	movlb	0	; () banked
  4051  000932  5160               	movf	Set_Bits@bits& (0+255),w,b
  4052  000934  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4053  000936  A4D8               	btfss	status,2,c
  4054  000938  0E00               	movlw	low (__mediumconst shr (0+16))
  4055  00093A  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4056  00093C  ECFF  F006         	call	_Set_Bits	;wreg free
  4057                           
  4058                           ;display.c: 98: break;
  4059  000940  D09B               	goto	l2825
  4060  000942                     l2815:
  4061                           
  4062                           ;display.c: 100: Set_Bits("ABCDEF");
  4063  000942  0E23               	movlw	low STR_3
  4064  000944  0100               	movlb	0	; () banked
  4065  000946  6F60               	movwf	Set_Bits@bits& (0+255),b
  4066  000948  0E02               	movlw	high STR_3
  4067  00094A  0100               	movlb	0	; () banked
  4068  00094C  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4069  00094E  0100               	movlb	0	; () banked
  4070  000950  5160               	movf	Set_Bits@bits& (0+255),w,b
  4071  000952  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4072  000954  A4D8               	btfss	status,2,c
  4073  000956  0E00               	movlw	low (__mediumconst shr (0+16))
  4074  000958  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4075  00095A  ECFF  F006         	call	_Set_Bits	;wreg free
  4076                           
  4077                           ;display.c: 101: break;
  4078  00095E  D08C               	goto	l2825
  4079  000960                     l2817:
  4080                           
  4081                           ;display.c: 103: Set_Bits("ABEFG");
  4082  000960  0E51               	movlw	low STR_18
  4083  000962  0100               	movlb	0	; () banked
  4084  000964  6F60               	movwf	Set_Bits@bits& (0+255),b
  4085  000966  0E02               	movlw	high STR_18
  4086  000968  0100               	movlb	0	; () banked
  4087  00096A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4088  00096C  0100               	movlb	0	; () banked
  4089  00096E  5160               	movf	Set_Bits@bits& (0+255),w,b
  4090  000970  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4091  000972  A4D8               	btfss	status,2,c
  4092  000974  0E00               	movlw	low (__mediumconst shr (0+16))
  4093  000976  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4094  000978  ECFF  F006         	call	_Set_Bits	;wreg free
  4095                           
  4096                           ;display.c: 104: break;
  4097  00097C  D07D               	goto	l2825
  4098  00097E                     l2819:
  4099                           
  4100                           ;display.c: 106: Set_Bits("G");
  4101  00097E  0E43               	movlw	low (STR_6+4)
  4102  000980  0100               	movlb	0	; () banked
  4103  000982  6F60               	movwf	Set_Bits@bits& (0+255),b
  4104  000984  0E02               	movlw	high (STR_6+4)
  4105  000986  0100               	movlb	0	; () banked
  4106  000988  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4107  00098A  0100               	movlb	0	; () banked
  4108  00098C  5160               	movf	Set_Bits@bits& (0+255),w,b
  4109  00098E  1161               	iorwf	(Set_Bits@bits+1)& (0+255),w,b
  4110  000990  A4D8               	btfss	status,2,c
  4111  000992  0E00               	movlw	low (__mediumconst shr (0+16))
  4112  000994  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4113  000996  ECFF  F006         	call	_Set_Bits	;wreg free
  4114                           
  4115                           ;display.c: 107: break;
  4116  00099A  D06E               	goto	l2825
  4117  00099C                     l2821:
  4118                           
  4119                           ;display.c: 109: Set_Bits(0);
  4120  00099C  0E00               	movlw	0
  4121  00099E  0100               	movlb	0	; () banked
  4122  0009A0  6F60               	movwf	Set_Bits@bits& (0+255),b
  4123  0009A2  0E00               	movlw	0
  4124  0009A4  0100               	movlb	0	; () banked
  4125  0009A6  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4126  0009A8  0E00               	movlw	0
  4127  0009AA  0100               	movlb	0	; () banked
  4128  0009AC  6F62               	movwf	(Set_Bits@bits+2)& (0+255),b
  4129  0009AE  ECFF  F006         	call	_Set_Bits	;wreg free
  4130                           
  4131                           ;display.c: 110: }
  4132  0009B2  D062               	goto	l2825
  4133  0009B4                     l2823:
  4134  0009B4  0EFF               	movlw	255
  4135  0009B6  0100               	movlb	0	; () banked
  4136  0009B8  6F6A               	movwf	??_Evaluate_Display& (0+255),b
  4137  0009BA  0EFF               	movlw	255
  4138  0009BC  0100               	movlb	0	; () banked
  4139  0009BE  6F6B               	movwf	(??_Evaluate_Display+1)& (0+255),b
  4140  0009C0  503F               	movf	_display_counter,w,c
  4141  0009C2  0100               	movlb	0	; () banked
  4142  0009C4  6F6C               	movwf	(??_Evaluate_Display+2)& (0+255),b
  4143  0009C6  6B6D               	clrf	(??_Evaluate_Display+3)& (0+255),b
  4144  0009C8  0100               	movlb	0	; () banked
  4145  0009CA  516A               	movf	??_Evaluate_Display& (0+255),w,b
  4146  0009CC  0100               	movlb	0	; () banked
  4147  0009CE  276C               	addwf	(??_Evaluate_Display+2)& (0+255),f,b
  4148  0009D0  0100               	movlb	0	; () banked
  4149  0009D2  516B               	movf	(??_Evaluate_Display+1)& (0+255),w,b
  4150  0009D4  0100               	movlb	0	; () banked
  4151  0009D6  236D               	addwfc	(??_Evaluate_Display+3)& (0+255),f,b
  4152  0009D8  C068  F06E         	movff	Evaluate_Display@evaluate,??_Evaluate_Display+4
  4153  0009DC  C069  F06F         	movff	Evaluate_Display@evaluate+1,??_Evaluate_Display+5
  4154  0009E0  0100               	movlb	0	; () banked
  4155  0009E2  516C               	movf	(??_Evaluate_Display+2)& (0+255),w,b
  4156  0009E4  0100               	movlb	0	; () banked
  4157  0009E6  276E               	addwf	(??_Evaluate_Display+4)& (0+255),f,b
  4158  0009E8  0100               	movlb	0	; () banked
  4159  0009EA  516D               	movf	(??_Evaluate_Display+3)& (0+255),w,b
  4160  0009EC  0100               	movlb	0	; () banked
  4161  0009EE  236F               	addwfc	(??_Evaluate_Display+5)& (0+255),f,b
  4162  0009F0  C06E  FFF6         	movff	??_Evaluate_Display+4,tblptrl
  4163  0009F4  C06F  FFF7         	movff	??_Evaluate_Display+5,tblptrh
  4164  0009F8  6AF8               	clrf	tblptru,c
  4165  0009FA  0E01               	movlw	(high __ramtop+-1)
  4166  0009FC  64F7               	cpfsgt	tblptrh,c
  4167  0009FE  D003               	bra	u1927
  4168  000A00  0008               	tblrd		*
  4169  000A02  50F5               	movf	tablat,w,c
  4170  000A04  D005               	bra	u1920
  4171  000A06                     u1927:
  4172  000A06  CFF6 FFD9          	movff	tblptrl,fsr2l
  4173  000A0A  CFF7 FFDA          	movff	tblptrh,fsr2h
  4174  000A0E  50DF               	movf	indf2,w,c
  4175  000A10                     u1920:
  4176                           
  4177                           ; Switch size 1, requested type "space"
  4178                           ; Number of cases is 17, Range of values is 45 to 80
  4179                           ; switch strategies available:
  4180                           ; Name         Instructions Cycles
  4181                           ; simple_byte           52    27 (average)
  4182                           ;	Chosen strategy is simple_byte
  4183  000A10  0A2D               	xorlw	45	; case 45
  4184  000A12  B4D8               	btfsc	status,2,c
  4185  000A14  D7B4               	goto	l2819
  4186  000A16  0A1D               	xorlw	29	; case 48
  4187  000A18  B4D8               	btfsc	status,2,c
  4188  000A1A  D6C1               	goto	l2787
  4189  000A1C  0A01               	xorlw	1	; case 49
  4190  000A1E  B4D8               	btfsc	status,2,c
  4191  000A20  D6CD               	goto	l2789
  4192  000A22  0A03               	xorlw	3	; case 50
  4193  000A24  B4D8               	btfsc	status,2,c
  4194  000A26  D6D9               	goto	l2791
  4195  000A28  0A01               	xorlw	1	; case 51
  4196  000A2A  B4D8               	btfsc	status,2,c
  4197  000A2C  D6E5               	goto	l2793
  4198  000A2E  0A07               	xorlw	7	; case 52
  4199  000A30  B4D8               	btfsc	status,2,c
  4200  000A32  D6F1               	goto	l2795
  4201  000A34  0A01               	xorlw	1	; case 53
  4202  000A36  B4D8               	btfsc	status,2,c
  4203  000A38  D6FD               	goto	l2797
  4204  000A3A  0A03               	xorlw	3	; case 54
  4205  000A3C  B4D8               	btfsc	status,2,c
  4206  000A3E  D709               	goto	l2799
  4207  000A40  0A01               	xorlw	1	; case 55
  4208  000A42  B4D8               	btfsc	status,2,c
  4209  000A44  D715               	goto	l2801
  4210  000A46  0A0F               	xorlw	15	; case 56
  4211  000A48  B4D8               	btfsc	status,2,c
  4212  000A4A  D721               	goto	l2803
  4213  000A4C  0A01               	xorlw	1	; case 57
  4214  000A4E  B4D8               	btfsc	status,2,c
  4215  000A50  D72D               	goto	l2805
  4216  000A52  0A78               	xorlw	120	; case 65
  4217  000A54  B4D8               	btfsc	status,2,c
  4218  000A56  D739               	goto	l2807
  4219  000A58  0A05               	xorlw	5	; case 68
  4220  000A5A  B4D8               	btfsc	status,2,c
  4221  000A5C  D745               	goto	l2809
  4222  000A5E  0A01               	xorlw	1	; case 69
  4223  000A60  B4D8               	btfsc	status,2,c
  4224  000A62  D751               	goto	l2811
  4225  000A64  0A09               	xorlw	9	; case 76
  4226  000A66  B4D8               	btfsc	status,2,c
  4227  000A68  D75D               	goto	l2813
  4228  000A6A  0A03               	xorlw	3	; case 79
  4229  000A6C  B4D8               	btfsc	status,2,c
  4230  000A6E  D769               	goto	l2815
  4231  000A70  0A1F               	xorlw	31	; case 80
  4232  000A72  B4D8               	btfsc	status,2,c
  4233  000A74  D775               	goto	l2817
  4234  000A76  D792               	goto	l2821
  4235  000A78                     l2825:
  4236  000A78  063F               	decf	_display_counter,f,c
  4237  000A7A                     l2827:
  4238  000A7A  503F               	movf	_display_counter,w,c
  4239  000A7C  B4D8               	btfsc	status,2,c
  4240  000A7E  0012               	return	
  4241  000A80  D68C               	goto	l404
  4242  000A82                     __end_of_Evaluate_Display:
  4243                           	opt stack 0
  4244                           tblptru	equ	0xFF8
  4245                           tblptrh	equ	0xFF7
  4246                           tblptrl	equ	0xFF6
  4247                           tablat	equ	0xFF5
  4248                           prodh	equ	0xFF4
  4249                           prodl	equ	0xFF3
  4250                           intcon	equ	0xFF2
  4251                           postinc0	equ	0xFEE
  4252                           wreg	equ	0xFE8
  4253                           postdec1	equ	0xFE5
  4254                           fsr1l	equ	0xFE1
  4255                           indf2	equ	0xFDF
  4256                           postinc2	equ	0xFDE
  4257                           postdec2	equ	0xFDD
  4258                           plusw2	equ	0xFDB
  4259                           fsr2h	equ	0xFDA
  4260                           fsr2l	equ	0xFD9
  4261                           status	equ	0xFD8
  4262                           
  4263 ;; *************** function _Set_Bits *****************
  4264 ;; Defined at:
  4265 ;;		line 12 in file "display.c"
  4266 ;; Parameters:    Size  Location     Type
  4267 ;;  bits            3    0[BANK0 ] PTR const unsigned char 
  4268 ;;		 -> ROM(8191), STR_19(2), STR_18(6), STR_17(7), 
  4269 ;;		 -> STR_16(4), STR_15(6), STR_14(7), STR_13(7), 
  4270 ;;		 -> STR_12(7), STR_11(8), STR_10(4), STR_9(7), 
  4271 ;;		 -> STR_8(6), STR_7(5), STR_6(6), STR_5(6), 
  4272 ;;		 -> STR_4(3), STR_3(7), 
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  bitcount        1    6[BANK0 ] unsigned char 
  4275 ;;  Bitoutput       1    7[BANK0 ] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;		None               void
  4278 ;; Registers used:
  4279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1
  4285 ;;      Params:         0       3       0
  4286 ;;      Locals:         0       2       0
  4287 ;;      Temps:          0       3       0
  4288 ;;      Totals:         0       8       0
  4289 ;;Total ram usage:        8 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    5
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_Evaluate_Display
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text21
  4300  000DFE                     __ptext21:
  4301                           	opt stack 0
  4302  000DFE                     _Set_Bits:
  4303                           	opt stack 22
  4304                           
  4305                           ;display.c: 13: unsigned char Bitoutput = 0;
  4306                           
  4307                           ;incstack = 0
  4308  000DFE  0E00               	movlw	0
  4309  000E00  0100               	movlb	0	; () banked
  4310  000E02  6F67               	movwf	Set_Bits@Bitoutput& (0+255),b
  4311                           
  4312                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  4313  000E04  0E00               	movlw	0
  4314  000E06  0100               	movlb	0	; () banked
  4315  000E08  6F66               	movwf	Set_Bits@bitcount& (0+255),b
  4316                           
  4317                           ;display.c: 15: bitcount++) {
  4318  000E0A  D046               	goto	l2781
  4319  000E0C                     l2761:
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;display.c: 18: Bitoutput |= 0b00000001;
  4323  000E0C  0100               	movlb	0	; () banked
  4324  000E0E  8167               	bsf	Set_Bits@Bitoutput& (0+255),0,b
  4325                           
  4326                           ;display.c: 19: break;
  4327  000E10  D041               	goto	l2779
  4328  000E12                     l2763:
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;display.c: 21: Bitoutput |= 0b00000010;
  4332  000E12  0100               	movlb	0	; () banked
  4333  000E14  8367               	bsf	Set_Bits@Bitoutput& (0+255),1,b
  4334                           
  4335                           ;display.c: 22: break;
  4336  000E16  D03E               	goto	l2779
  4337  000E18                     l2765:
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;display.c: 24: Bitoutput |= 0b00000100;
  4341  000E18  0100               	movlb	0	; () banked
  4342  000E1A  8567               	bsf	Set_Bits@Bitoutput& (0+255),2,b
  4343                           
  4344                           ;display.c: 25: break;
  4345  000E1C  D03B               	goto	l2779
  4346  000E1E                     l2767:
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;display.c: 27: Bitoutput |= 0b00001000;
  4350  000E1E  0100               	movlb	0	; () banked
  4351  000E20  8767               	bsf	Set_Bits@Bitoutput& (0+255),3,b
  4352                           
  4353                           ;display.c: 28: break;
  4354  000E22  D038               	goto	l2779
  4355  000E24                     l2769:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;display.c: 30: Bitoutput |= 0b00010000;
  4359  000E24  0100               	movlb	0	; () banked
  4360  000E26  8967               	bsf	Set_Bits@Bitoutput& (0+255),4,b
  4361                           
  4362                           ;display.c: 31: break;
  4363  000E28  D035               	goto	l2779
  4364  000E2A                     l2771:
  4365                           
  4366                           ; BSR set to: 0
  4367                           ;display.c: 33: Bitoutput |= 0b00100000;
  4368  000E2A  0100               	movlb	0	; () banked
  4369  000E2C  8B67               	bsf	Set_Bits@Bitoutput& (0+255),5,b
  4370                           
  4371                           ;display.c: 34: break;
  4372  000E2E  D032               	goto	l2779
  4373  000E30                     l2773:
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;display.c: 36: Bitoutput |= 0b01000000;
  4377  000E30  0100               	movlb	0	; () banked
  4378  000E32  8D67               	bsf	Set_Bits@Bitoutput& (0+255),6,b
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;display.c: 40: }
  4382                           
  4383                           ; BSR set to: 0
  4384                           ;display.c: 39: break;
  4385                           
  4386                           ;display.c: 38: default:
  4387                           
  4388                           ;display.c: 37: break;
  4389  000E34  D02F               	goto	l2779
  4390  000E36                     l2777:
  4391                           
  4392                           ; BSR set to: 0
  4393  000E36  0100               	movlb	0	; () banked
  4394  000E38  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4395  000E3A  0D01               	mullw	1
  4396  000E3C  50F3               	movf	prodl,w,c
  4397  000E3E  0100               	movlb	0	; () banked
  4398  000E40  2560               	addwf	Set_Bits@bits& (0+255),w,b
  4399  000E42  0100               	movlb	0	; () banked
  4400  000E44  6F63               	movwf	??_Set_Bits& (0+255),b
  4401  000E46  50F4               	movf	prodh,w,c
  4402  000E48  0100               	movlb	0	; () banked
  4403  000E4A  2161               	addwfc	(Set_Bits@bits+1)& (0+255),w,b
  4404  000E4C  0100               	movlb	0	; () banked
  4405  000E4E  6F64               	movwf	(??_Set_Bits+1)& (0+255),b
  4406  000E50  0E00               	movlw	0
  4407  000E52  0100               	movlb	0	; () banked
  4408  000E54  2162               	addwfc	(Set_Bits@bits+2)& (0+255),w,b
  4409  000E56  0100               	movlb	0	; () banked
  4410  000E58  6F65               	movwf	(??_Set_Bits+2)& (0+255),b
  4411  000E5A  C063  FFF6         	movff	??_Set_Bits,tblptrl
  4412  000E5E  C064  FFF7         	movff	??_Set_Bits+1,tblptrh
  4413  000E62  C065  FFF8         	movff	??_Set_Bits+2,tblptru
  4414  000E66  0008               	tblrd		*
  4415  000E68  50F5               	movf	tablat,w,c
  4416                           
  4417                           ; Switch size 1, requested type "space"
  4418                           ; Number of cases is 7, Range of values is 65 to 71
  4419                           ; switch strategies available:
  4420                           ; Name         Instructions Cycles
  4421                           ; simple_byte           22    12 (average)
  4422                           ;	Chosen strategy is simple_byte
  4423  000E6A  0A41               	xorlw	65	; case 65
  4424  000E6C  B4D8               	btfsc	status,2,c
  4425  000E6E  D7CE               	goto	l2761
  4426  000E70  0A03               	xorlw	3	; case 66
  4427  000E72  B4D8               	btfsc	status,2,c
  4428  000E74  D7CE               	goto	l2763
  4429  000E76  0A01               	xorlw	1	; case 67
  4430  000E78  B4D8               	btfsc	status,2,c
  4431  000E7A  D7CE               	goto	l2765
  4432  000E7C  0A07               	xorlw	7	; case 68
  4433  000E7E  B4D8               	btfsc	status,2,c
  4434  000E80  D7CE               	goto	l2767
  4435  000E82  0A01               	xorlw	1	; case 69
  4436  000E84  B4D8               	btfsc	status,2,c
  4437  000E86  D7CE               	goto	l2769
  4438  000E88  0A03               	xorlw	3	; case 70
  4439  000E8A  B4D8               	btfsc	status,2,c
  4440  000E8C  D7CE               	goto	l2771
  4441  000E8E  0A01               	xorlw	1	; case 71
  4442  000E90  B4D8               	btfsc	status,2,c
  4443  000E92  D7CE               	goto	l2773
  4444  000E94                     l2779:
  4445                           
  4446                           ; BSR set to: 0
  4447  000E94  0100               	movlb	0	; () banked
  4448  000E96  2B66               	incf	Set_Bits@bitcount& (0+255),f,b
  4449  000E98                     l2781:
  4450                           
  4451                           ; BSR set to: 0
  4452  000E98  0100               	movlb	0	; () banked
  4453  000E9A  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4454  000E9C  0D01               	mullw	1
  4455  000E9E  50F3               	movf	prodl,w,c
  4456  000EA0  0100               	movlb	0	; () banked
  4457  000EA2  2560               	addwf	Set_Bits@bits& (0+255),w,b
  4458  000EA4  0100               	movlb	0	; () banked
  4459  000EA6  6F63               	movwf	??_Set_Bits& (0+255),b
  4460  000EA8  50F4               	movf	prodh,w,c
  4461  000EAA  0100               	movlb	0	; () banked
  4462  000EAC  2161               	addwfc	(Set_Bits@bits+1)& (0+255),w,b
  4463  000EAE  0100               	movlb	0	; () banked
  4464  000EB0  6F64               	movwf	(??_Set_Bits+1)& (0+255),b
  4465  000EB2  0E00               	movlw	0
  4466  000EB4  0100               	movlb	0	; () banked
  4467  000EB6  2162               	addwfc	(Set_Bits@bits+2)& (0+255),w,b
  4468  000EB8  0100               	movlb	0	; () banked
  4469  000EBA  6F65               	movwf	(??_Set_Bits+2)& (0+255),b
  4470  000EBC  C063  FFF6         	movff	??_Set_Bits,tblptrl
  4471  000EC0  C064  FFF7         	movff	??_Set_Bits+1,tblptrh
  4472  000EC4  C065  FFF8         	movff	??_Set_Bits+2,tblptru
  4473  000EC8  0008               	tblrd		*
  4474  000ECA  50F5               	movf	tablat,w,c
  4475  000ECC  0900               	iorlw	0
  4476  000ECE  A4D8               	btfss	status,2,c
  4477  000ED0  D7B2               	goto	l2777
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;display.c: 41: }
  4481                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  4482                           
  4483                           ; BSR set to: 0
  4484  000ED2  503F               	movf	_display_counter,w,c
  4485  000ED4  0D01               	mullw	1
  4486  000ED6  0E37               	movlw	low _pixels
  4487  000ED8  24F3               	addwf	prodl,w,c
  4488  000EDA  6ED9               	movwf	fsr2l,c
  4489  000EDC  0E00               	movlw	high _pixels
  4490  000EDE  20F4               	addwfc	prodh,w,c
  4491  000EE0  6EDA               	movwf	fsr2h,c
  4492  000EE2  C067  FFDF         	movff	Set_Bits@Bitoutput,indf2
  4493                           
  4494                           ; BSR set to: 0
  4495  000EE6  0012               	return		;funcret
  4496  000EE8                     __end_of_Set_Bits:
  4497                           	opt stack 0
  4498                           tblptru	equ	0xFF8
  4499                           tblptrh	equ	0xFF7
  4500                           tblptrl	equ	0xFF6
  4501                           tablat	equ	0xFF5
  4502                           prodh	equ	0xFF4
  4503                           prodl	equ	0xFF3
  4504                           intcon	equ	0xFF2
  4505                           postinc0	equ	0xFEE
  4506                           wreg	equ	0xFE8
  4507                           postdec1	equ	0xFE5
  4508                           fsr1l	equ	0xFE1
  4509                           indf2	equ	0xFDF
  4510                           postinc2	equ	0xFDE
  4511                           postdec2	equ	0xFDD
  4512                           plusw2	equ	0xFDB
  4513                           fsr2h	equ	0xFDA
  4514                           fsr2l	equ	0xFD9
  4515                           status	equ	0xFD8
  4516                           
  4517 ;; *************** function _Read_Data *****************
  4518 ;; Defined at:
  4519 ;;		line 44 in file "storage.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;  read_address    1    wreg     unsigned char 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;  read_address    1    4[BANK0 ] unsigned char 
  4524 ;;  data_read       2    2[BANK0 ] unsigned int 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  2    0[BANK0 ] unsigned int 
  4527 ;; Registers used:
  4528 ;;		wreg, status,2, status,0
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1
  4534 ;;      Params:         0       2       0
  4535 ;;      Locals:         0       3       0
  4536 ;;      Temps:          0       0       0
  4537 ;;      Totals:         0       5       0
  4538 ;;Total ram usage:        5 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    5
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_Check_Buttons
  4545 ;;		_Load_Data
  4546 ;; This function uses a non-reentrant model
  4547 ;;
  4548                           
  4549                           	psect	text22
  4550  0013F4                     __ptext22:
  4551                           	opt stack 0
  4552  0013F4                     _Read_Data:
  4553                           	opt stack 24
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;incstack = 0
  4557                           ;Read_Data@read_address stored from wreg
  4558  0013F4  0100               	movlb	0	; () banked
  4559  0013F6  6F64               	movwf	Read_Data@read_address& (0+255),b
  4560                           
  4561                           ;storage.c: 45: unsigned int data_read = 0;
  4562  0013F8  0E00               	movlw	0
  4563  0013FA  0100               	movlb	0	; () banked
  4564  0013FC  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4565  0013FE  0E00               	movlw	0
  4566  001400  6F62               	movwf	Read_Data@data_read& (0+255),b
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;storage.c: 46: read_address += 50;
  4570  001402  0E32               	movlw	50
  4571  001404  0100               	movlb	0	; () banked
  4572  001406  2764               	addwf	Read_Data@read_address& (0+255),f,b
  4573                           
  4574                           ; BSR set to: 0
  4575                           ;storage.c: 47: EEADR = read_address;
  4576  001408  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4577                           
  4578                           ; BSR set to: 0
  4579                           ;storage.c: 48: EECON1bits.EEPGD = 0;
  4580  00140C  9EA6               	bcf	4006,7,c	;volatile
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;storage.c: 49: EECON1bits.CFGS = 0;
  4584  00140E  9CA6               	bcf	4006,6,c	;volatile
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;storage.c: 50: EECON1bits.RD = 1;
  4588  001410  80A6               	bsf	4006,0,c	;volatile
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;storage.c: 51: data_read = EEDATA;
  4592  001412  CFA8 F062          	movff	4008,Read_Data@data_read	;volatile
  4593  001416  0100               	movlb	0	; () banked
  4594  001418  6B63               	clrf	(Read_Data@data_read+1)& (0+255),b
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;storage.c: 52: read_address -= 50;
  4598  00141A  0E32               	movlw	50
  4599  00141C  0100               	movlb	0	; () banked
  4600  00141E  5F64               	subwf	Read_Data@read_address& (0+255),f,b
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;storage.c: 53: data_read <<= 8;
  4604  001420  0100               	movlb	0	; () banked
  4605  001422  5162               	movf	Read_Data@data_read& (0+255),w,b
  4606  001424  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4607  001426  6B62               	clrf	Read_Data@data_read& (0+255),b
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;storage.c: 54: EEADR = read_address;
  4611  001428  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4612                           
  4613                           ; BSR set to: 0
  4614                           ;storage.c: 55: EECON1bits.EEPGD = 0;
  4615  00142C  9EA6               	bcf	4006,7,c	;volatile
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;storage.c: 56: EECON1bits.CFGS = 0;
  4619  00142E  9CA6               	bcf	4006,6,c	;volatile
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;storage.c: 57: EECON1bits.RD = 1;
  4623  001430  80A6               	bsf	4006,0,c	;volatile
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;storage.c: 58: data_read |= EEDATA;
  4627  001432  50A8               	movf	4008,w,c	;volatile
  4628  001434  0100               	movlb	0	; () banked
  4629  001436  1362               	iorwf	Read_Data@data_read& (0+255),f,b
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;storage.c: 59: return data_read;
  4633  001438  C062  F060         	movff	Read_Data@data_read,?_Read_Data
  4634  00143C  C063  F061         	movff	Read_Data@data_read+1,?_Read_Data+1
  4635  001440  0012               	return	
  4636  001442                     __end_of_Read_Data:
  4637                           	opt stack 0
  4638                           tblptru	equ	0xFF8
  4639                           tblptrh	equ	0xFF7
  4640                           tblptrl	equ	0xFF6
  4641                           tablat	equ	0xFF5
  4642                           prodh	equ	0xFF4
  4643                           prodl	equ	0xFF3
  4644                           intcon	equ	0xFF2
  4645                           postinc0	equ	0xFEE
  4646                           wreg	equ	0xFE8
  4647                           postdec1	equ	0xFE5
  4648                           fsr1l	equ	0xFE1
  4649                           indf2	equ	0xFDF
  4650                           postinc2	equ	0xFDE
  4651                           postdec2	equ	0xFDD
  4652                           plusw2	equ	0xFDB
  4653                           fsr2h	equ	0xFDA
  4654                           fsr2l	equ	0xFD9
  4655                           status	equ	0xFD8
  4656                           
  4657 ;; *************** function _Delay_Routine *****************
  4658 ;; Defined at:
  4659 ;;		line 78 in file "main.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;  delay_multip    1    wreg     unsigned char 
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;  delay_multip    1    1[BANK0 ] unsigned char 
  4664 ;;  delay_counte    1    2[BANK0 ] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;		None               void
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1
  4674 ;;      Params:         0       0       0
  4675 ;;      Locals:         0       2       0
  4676 ;;      Temps:          0       1       0
  4677 ;;      Totals:         0       3       0
  4678 ;;Total ram usage:        3 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    5
  4681 ;; This function calls:
  4682 ;;		Nothing
  4683 ;; This function is called by:
  4684 ;;		_Check_Buttons
  4685 ;;		_Load_Data
  4686 ;;		_Del_Data
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           	psect	text23
  4691  001666                     __ptext23:
  4692                           	opt stack 0
  4693  001666                     _Delay_Routine:
  4694                           	opt stack 24
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;incstack = 0
  4698                           ;Delay_Routine@delay_multiplyer stored from wreg
  4699  001666  0100               	movlb	0	; () banked
  4700  001668  6F61               	movwf	Delay_Routine@delay_multiplyer& (0+255),b
  4701                           
  4702                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  4703  00166A  0E00               	movlw	0
  4704  00166C  0100               	movlb	0	; () banked
  4705  00166E  6F62               	movwf	Delay_Routine@delay_counter& (0+255),b
  4706                           
  4707                           ;main.c: 80: delay_counter++) {
  4708  001670  D00A               	goto	l2889
  4709  001672                     l2885:
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  4713  001672  0E82               	movlw	130
  4714  001674  0100               	movlb	0	; () banked
  4715  001676  6F60               	movwf	??_Delay_Routine& (0+255),b
  4716  001678  0EDE               	movlw	222
  4717  00167A                     u2447:
  4718  00167A  2EE8               	decfsz	wreg,f,c
  4719  00167C  D7FE               	goto	u2447
  4720  00167E  2F60               	decfsz	??_Delay_Routine& (0+255),f,b
  4721  001680  D7FC               	goto	u2447
  4722  001682  0100               	movlb	0	; () banked
  4723  001684  2B62               	incf	Delay_Routine@delay_counter& (0+255),f,b
  4724  001686                     l2889:
  4725                           
  4726                           ; BSR set to: 0
  4727  001686  0100               	movlb	0	; () banked
  4728  001688  5161               	movf	Delay_Routine@delay_multiplyer& (0+255),w,b
  4729  00168A  0100               	movlb	0	; () banked
  4730  00168C  5D62               	subwf	Delay_Routine@delay_counter& (0+255),w,b
  4731  00168E  A0D8               	btfss	status,0,c
  4732  001690  D7F0               	goto	l2885
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;main.c: 82: }
  4736                           ;main.c: 83: __nop();
  4737  001692  F000               	nop	
  4738  001694  0012               	return		;funcret
  4739  001696                     __end_of_Delay_Routine:
  4740                           	opt stack 0
  4741                           tblptru	equ	0xFF8
  4742                           tblptrh	equ	0xFF7
  4743                           tblptrl	equ	0xFF6
  4744                           tablat	equ	0xFF5
  4745                           prodh	equ	0xFF4
  4746                           prodl	equ	0xFF3
  4747                           intcon	equ	0xFF2
  4748                           postinc0	equ	0xFEE
  4749                           wreg	equ	0xFE8
  4750                           postdec1	equ	0xFE5
  4751                           fsr1l	equ	0xFE1
  4752                           indf2	equ	0xFDF
  4753                           postinc2	equ	0xFDE
  4754                           postdec2	equ	0xFDD
  4755                           plusw2	equ	0xFDB
  4756                           fsr2h	equ	0xFDA
  4757                           fsr2l	equ	0xFD9
  4758                           status	equ	0xFD8
  4759                           
  4760 ;; *************** function _Isr *****************
  4761 ;; Defined at:
  4762 ;;		line 4 in file "interrupt.c"
  4763 ;; Parameters:    Size  Location     Type
  4764 ;;		None
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  search_index    1   43[COMRAM] unsigned char 
  4767 ;;  pixel_index_    1   42[COMRAM] unsigned char 
  4768 ;;  pixel_index_    1   41[COMRAM] unsigned char 
  4769 ;; Return value:  Size  Location     Type
  4770 ;;		None               void
  4771 ;; Registers used:
  4772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1
  4778 ;;      Params:         0       0       0
  4779 ;;      Locals:         3       0       0
  4780 ;;      Temps:         17       0       0
  4781 ;;      Totals:        20       0       0
  4782 ;;Total ram usage:       20 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    4
  4785 ;; This function calls:
  4786 ;;		_Ignite_Detonators
  4787 ;;		_Receive
  4788 ;;		___awdiv
  4789 ;;		i2_Check_Detonators
  4790 ;;		i2_Set_Display
  4791 ;; This function is called by:
  4792 ;;		Interrupt level 2
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	intcode
  4797  000008                     __pintcode:
  4798                           	opt stack 0
  4799  000008                     _Isr:
  4800                           	opt stack 19
  4801                           
  4802                           ;incstack = 0
  4803  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4804  00000A  CFFA F01C          	movff	pclath,??_Isr+3
  4805  00000E  CFFB F01D          	movff	pclatu,??_Isr+4
  4806  000012  CFE9 F01E          	movff	fsr0l,??_Isr+5
  4807  000016  CFEA F01F          	movff	fsr0h,??_Isr+6
  4808  00001A  CFE1 F020          	movff	fsr1l,??_Isr+7
  4809  00001E  CFE2 F021          	movff	fsr1h,??_Isr+8
  4810  000022  CFD9 F022          	movff	fsr2l,??_Isr+9
  4811  000026  CFDA F023          	movff	fsr2h,??_Isr+10
  4812  00002A  CFF3 F024          	movff	prodl,??_Isr+11
  4813  00002E  CFF4 F025          	movff	prodh,??_Isr+12
  4814  000032  CFF6 F026          	movff	tblptrl,??_Isr+13
  4815  000036  CFF7 F027          	movff	tblptrh,??_Isr+14
  4816  00003A  CFF8 F028          	movff	tblptru,??_Isr+15
  4817  00003E  CFF5 F029          	movff	tablat,??_Isr+16
  4818                           
  4819                           ;interrupt.c: 5: if(PIR1bits.CCP1IF == 1) {
  4820  000042  A49E               	btfss	3998,2,c	;volatile
  4821  000044  D00B               	goto	i2l2689
  4822                           
  4823                           ;interrupt.c: 7: PIR1bits.CCP1IF = 0;
  4824  000046  949E               	bcf	3998,2,c	;volatile
  4825                           
  4826                           ;interrupt.c: 8: T1CONbits.TMR1ON = 1;
  4827  000048  80CD               	bsf	4045,0,c	;volatile
  4828                           
  4829                           ;interrupt.c: 9: T3CONbits.TMR3ON = 0;
  4830  00004A  90B1               	bcf	4017,0,c	;volatile
  4831                           
  4832                           ;interrupt.c: 10: TMR3L = 0;
  4833  00004C  0E00               	movlw	0
  4834  00004E  6EB2               	movwf	4018,c	;volatile
  4835                           
  4836                           ;interrupt.c: 11: TMR3H = 0;
  4837  000050  0E00               	movlw	0
  4838  000052  6EB3               	movwf	4019,c	;volatile
  4839                           
  4840                           ;interrupt.c: 12: current_time++;
  4841  000054  4A33               	infsnz	_current_time,f,c
  4842  000056  2A34               	incf	_current_time+1,f,c
  4843                           
  4844                           ;interrupt.c: 13: Ignite_Detonators();
  4845  000058  ECA9  F008         	call	_Ignite_Detonators	;wreg free
  4846  00005C                     i2l2689:
  4847                           
  4848                           ;interrupt.c: 14: }
  4849                           ;interrupt.c: 15: if(PIR1bits.TMR1IF == 1) {
  4850  00005C  A09E               	btfss	3998,0,c	;volatile
  4851  00005E  D007               	goto	i2l2695
  4852                           
  4853                           ;interrupt.c: 16: PIR1bits.TMR1IF = 0;
  4854  000060  909E               	bcf	3998,0,c	;volatile
  4855                           
  4856                           ;interrupt.c: 17: T3CONbits.TMR3ON = 1;
  4857  000062  80B1               	bsf	4017,0,c	;volatile
  4858                           
  4859                           ;interrupt.c: 18: T1CONbits.TMR1ON = 0;
  4860  000064  90CD               	bcf	4045,0,c	;volatile
  4861                           
  4862                           ;interrupt.c: 19: TMR1L = 0;
  4863  000066  0E00               	movlw	0
  4864  000068  6ECE               	movwf	4046,c	;volatile
  4865                           
  4866                           ;interrupt.c: 20: TMR1H = 0;
  4867  00006A  0E00               	movlw	0
  4868  00006C  6ECF               	movwf	4047,c	;volatile
  4869  00006E                     i2l2695:
  4870                           
  4871                           ;interrupt.c: 21: }
  4872                           ;interrupt.c: 22: if(PIR1bits.RCIF == 1) {
  4873  00006E  AA9E               	btfss	3998,5,c	;volatile
  4874  000070  D0B4               	goto	i2l589
  4875                           
  4876                           ;interrupt.c: 23: PIR1bits.RCIF = 0;
  4877  000072  9A9E               	bcf	3998,5,c	;volatile
  4878                           
  4879                           ;interrupt.c: 24: if(RCSTAbits.RX9D == 1) {
  4880  000074  A0AB               	btfss	4011,0,c	;volatile
  4881  000076  D016               	goto	i2l576
  4882                           
  4883                           ;interrupt.c: 25: receive_counter = 0;
  4884  000078  0E00               	movlw	0
  4885  00007A  6E36               	movwf	_receive_counter,c
  4886                           
  4887                           ;interrupt.c: 27: received[receive_counter] =
  4888                           ;interrupt.c: 28: Receive();
  4889  00007C  5036               	movf	_receive_counter,w,c
  4890  00007E  0D01               	mullw	1
  4891  000080  0E2D               	movlw	low _received
  4892  000082  24F3               	addwf	prodl,w,c
  4893  000084  6ED9               	movwf	fsr2l,c
  4894  000086  0E00               	movlw	high _received
  4895  000088  20F4               	addwfc	prodh,w,c
  4896  00008A  6EDA               	movwf	fsr2h,c
  4897  00008C  ECAD  F00B         	call	_Receive	;wreg free
  4898  000090  6EDF               	movwf	indf2,c
  4899                           
  4900                           ;interrupt.c: 29: receive_counter++;
  4901  000092  2A36               	incf	_receive_counter,f,c
  4902                           
  4903                           ;interrupt.c: 31: if(received[0] == 0xAA) {
  4904  000094  0EAA               	movlw	170
  4905  000096  182D               	xorwf	_received,w,c
  4906  000098  A4D8               	btfss	status,2,c
  4907  00009A  D002               	goto	i2l577
  4908                           
  4909                           ;interrupt.c: 32: master_addressed = 1;
  4910  00009C  823E               	bsf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4911                           
  4912                           ;interrupt.c: 33: } else {
  4913  00009E  D090               	goto	i2l2745
  4914  0000A0                     i2l577:
  4915                           
  4916                           ;interrupt.c: 34: master_addressed = 0;
  4917  0000A0  923E               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4918                           
  4919                           ;interrupt.c: 35: }
  4920                           ;interrupt.c: 36: } else if(master_addressed == 1) {
  4921  0000A2  D08E               	goto	i2l2745
  4922  0000A4                     i2l576:
  4923  0000A4  A23E               	btfss	_master_addressed/(0+8),_master_addressed& (0+7),c
  4924  0000A6  D08C               	goto	i2l2745
  4925                           
  4926                           ;interrupt.c: 37: received[receive_counter] =
  4927                           ;interrupt.c: 38: Receive();
  4928  0000A8  5036               	movf	_receive_counter,w,c
  4929  0000AA  0D01               	mullw	1
  4930  0000AC  0E2D               	movlw	low _received
  4931  0000AE  24F3               	addwf	prodl,w,c
  4932  0000B0  6ED9               	movwf	fsr2l,c
  4933  0000B2  0E00               	movlw	high _received
  4934  0000B4  20F4               	addwfc	prodh,w,c
  4935  0000B6  6EDA               	movwf	fsr2h,c
  4936  0000B8  ECAD  F00B         	call	_Receive	;wreg free
  4937  0000BC  6EDF               	movwf	indf2,c
  4938                           
  4939                           ;interrupt.c: 39: receive_counter++;
  4940  0000BE  2A36               	incf	_receive_counter,f,c
  4941                           
  4942                           ;interrupt.c: 41: if(receive_counter > 5) {
  4943  0000C0  0E05               	movlw	5
  4944  0000C2  6436               	cpfsgt	_receive_counter,c
  4945  0000C4  D07D               	goto	i2l2745
  4946                           
  4947                           ;interrupt.c: 42: receive_counter = 0;
  4948  0000C6  0E00               	movlw	0
  4949  0000C8  6E36               	movwf	_receive_counter,c
  4950                           
  4951                           ;interrupt.c: 43: master_addressed = 0;
  4952  0000CA  923E               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  4953                           
  4954                           ;interrupt.c: 45: if(received[2] == 'T') {
  4955  0000CC  0E54               	movlw	84
  4956  0000CE  182F               	xorwf	_received+2,w,c
  4957  0000D0  A4D8               	btfss	status,2,c
  4958  0000D2  D076               	goto	i2l2745
  4959                           
  4960                           ;interrupt.c: 46: unsigned char search_index = 0xFF;
  4961  0000D4  682C               	setf	Isr@search_index,c
  4962                           
  4963                           ;interrupt.c: 47: unsigned char pixel_index_array = 0;
  4964  0000D6  0E00               	movlw	0
  4965  0000D8  6E2A               	movwf	Isr@pixel_index_array,c
  4966                           
  4967                           ;interrupt.c: 48: unsigned char pixel_index_bit = 0;
  4968  0000DA  0E00               	movlw	0
  4969  0000DC  6E2B               	movwf	Isr@pixel_index_bit,c
  4970                           
  4971                           ;interrupt.c: 49: search_index = (received[1] * 10);
  4972  0000DE  502E               	movf	_received+1,w,c
  4973  0000E0  0D0A               	mullw	10
  4974  0000E2  CFF3 F02C          	movff	prodl,Isr@search_index
  4975                           
  4976                           ;interrupt.c: 51: search_index += received[3];
  4977  0000E6  5030               	movf	_received+3,w,c
  4978  0000E8  262C               	addwf	Isr@search_index,f,c
  4979                           
  4980                           ;interrupt.c: 53: pixel_index_array =
  4981                           ;interrupt.c: 54: pin[search_index].led_address / 8;
  4982  0000EA  502C               	movf	Isr@search_index,w,c
  4983  0000EC  0D06               	mullw	6
  4984  0000EE  0E03               	movlw	3
  4985  0000F0  26F3               	addwf	prodl,f,c
  4986  0000F2  0E00               	movlw	0
  4987  0000F4  22F4               	addwfc	prodh,f,c
  4988  0000F6  0E00               	movlw	low _pin
  4989  0000F8  24F3               	addwf	prodl,w,c
  4990  0000FA  6ED9               	movwf	fsr2l,c
  4991  0000FC  0E01               	movlw	high _pin
  4992  0000FE  20F4               	addwfc	prodh,w,c
  4993  000100  6EDA               	movwf	fsr2h,c
  4994  000102  50DF               	movf	indf2,w,c
  4995  000104  6E19               	movwf	??_Isr& (0+255),c
  4996  000106  5019               	movf	??_Isr,w,c
  4997  000108  6E01               	movwf	___awdiv@dividend,c
  4998  00010A  6A02               	clrf	___awdiv@dividend+1,c
  4999  00010C  0E00               	movlw	0
  5000  00010E  6E04               	movwf	___awdiv@divisor+1,c
  5001  000110  0E08               	movlw	8
  5002  000112  6E03               	movwf	___awdiv@divisor,c
  5003  000114  EC2B  F008         	call	___awdiv	;wreg free
  5004  000118  5001               	movf	?___awdiv,w,c
  5005  00011A  6E2A               	movwf	Isr@pixel_index_array,c
  5006                           
  5007                           ;interrupt.c: 55: pixel_index_bit =
  5008                           ;interrupt.c: 56: pin[search_index].led_address % 8;
  5009  00011C  502C               	movf	Isr@search_index,w,c
  5010  00011E  0D06               	mullw	6
  5011  000120  0E03               	movlw	3
  5012  000122  26F3               	addwf	prodl,f,c
  5013  000124  0E00               	movlw	0
  5014  000126  22F4               	addwfc	prodh,f,c
  5015  000128  0E00               	movlw	low _pin
  5016  00012A  24F3               	addwf	prodl,w,c
  5017  00012C  6ED9               	movwf	fsr2l,c
  5018  00012E  0E01               	movlw	high _pin
  5019  000130  20F4               	addwfc	prodh,w,c
  5020  000132  6EDA               	movwf	fsr2h,c
  5021  000134  50DF               	movf	indf2,w,c
  5022  000136  0B07               	andlw	7
  5023  000138  6E2B               	movwf	Isr@pixel_index_bit,c
  5024                           
  5025                           ;interrupt.c: 57: if(received[4] == '1'){
  5026  00013A  0E31               	movlw	49
  5027  00013C  1831               	xorwf	_received+4,w,c
  5028  00013E  A4D8               	btfss	status,2,c
  5029  000140  D015               	goto	i2l2737
  5030                           
  5031                           ;interrupt.c: 58: pixels[pixel_index_array] |=
  5032                           ;interrupt.c: 59: (1 << pixel_index_bit);
  5033  000142  C02B  F019         	movff	Isr@pixel_index_bit,??_Isr
  5034  000146  0E01               	movlw	1
  5035  000148  6E1A               	movwf	(??_Isr+1)& (0+255),c
  5036  00014A  2A19               	incf	??_Isr,f,c
  5037  00014C  D002               	goto	i2u185_44
  5038  00014E                     i2u185_45:
  5039  00014E  90D8               	bcf	status,0,c
  5040  000150  361A               	rlcf	??_Isr+1,f,c
  5041  000152                     i2u185_44:
  5042  000152  2E19               	decfsz	??_Isr,f,c
  5043  000154  D7FC               	goto	i2u185_45
  5044  000156  502A               	movf	Isr@pixel_index_array,w,c
  5045  000158  0D01               	mullw	1
  5046  00015A  0E37               	movlw	low _pixels
  5047  00015C  24F3               	addwf	prodl,w,c
  5048  00015E  6ED9               	movwf	fsr2l,c
  5049  000160  0E00               	movlw	high _pixels
  5050  000162  20F4               	addwfc	prodh,w,c
  5051  000164  6EDA               	movwf	fsr2h,c
  5052  000166  501A               	movf	??_Isr+1,w,c
  5053  000168  12DF               	iorwf	indf2,f,c
  5054                           
  5055                           ;interrupt.c: 60: }else if(received[4] == '0') {
  5056  00016A  D01B               	goto	i2l2741
  5057  00016C                     i2l2737:
  5058  00016C  0E30               	movlw	48
  5059  00016E  1831               	xorwf	_received+4,w,c
  5060  000170  A4D8               	btfss	status,2,c
  5061  000172  D017               	goto	i2l2741
  5062                           
  5063                           ;interrupt.c: 61: pixels[pixel_index_array] &=
  5064                           ;interrupt.c: 62: ~(1 << pixel_index_bit);
  5065  000174  C02B  F019         	movff	Isr@pixel_index_bit,??_Isr
  5066  000178  0E01               	movlw	1
  5067  00017A  6E1A               	movwf	(??_Isr+1)& (0+255),c
  5068  00017C  2A19               	incf	??_Isr,f,c
  5069  00017E  D002               	goto	i2u187_44
  5070  000180                     i2u187_45:
  5071  000180  90D8               	bcf	status,0,c
  5072  000182  361A               	rlcf	??_Isr+1,f,c
  5073  000184                     i2u187_44:
  5074  000184  2E19               	decfsz	??_Isr,f,c
  5075  000186  D7FC               	goto	i2u187_45
  5076  000188  501A               	movf	??_Isr+1,w,c
  5077  00018A  0AFF               	xorlw	255
  5078  00018C  6E1B               	movwf	(??_Isr+2)& (0+255),c
  5079  00018E  502A               	movf	Isr@pixel_index_array,w,c
  5080  000190  0D01               	mullw	1
  5081  000192  0E37               	movlw	low _pixels
  5082  000194  24F3               	addwf	prodl,w,c
  5083  000196  6ED9               	movwf	fsr2l,c
  5084  000198  0E00               	movlw	high _pixels
  5085  00019A  20F4               	addwfc	prodh,w,c
  5086  00019C  6EDA               	movwf	fsr2h,c
  5087  00019E  501B               	movf	??_Isr+2,w,c
  5088  0001A0  16DF               	andwf	indf2,f,c
  5089  0001A2                     i2l2741:
  5090                           
  5091                           ;interrupt.c: 63: }
  5092                           ;interrupt.c: 64: if(received[5] == '1') {
  5093  0001A2  0E31               	movlw	49
  5094  0001A4  1832               	xorwf	_received+5,w,c
  5095  0001A6  A4D8               	btfss	status,2,c
  5096  0001A8  D00B               	goto	i2l2745
  5097                           
  5098                           ;interrupt.c: 65: Set_Display('7', 'P', (received[1] + 1));
  5099  0001AA  0E50               	movlw	80
  5100  0001AC  6E15               	movwf	i2Set_Display@information,c
  5101  0001AE  0E01               	movlw	1
  5102  0001B0  242E               	addwf	_received+1,w,c
  5103  0001B2  6E16               	movwf	i2Set_Display@value,c
  5104  0001B4  6A17               	clrf	i2Set_Display@value+1,c
  5105  0001B6  0E00               	movlw	0
  5106  0001B8  2217               	addwfc	i2Set_Display@value+1,f,c
  5107  0001BA  0E37               	movlw	55
  5108  0001BC  ECA5  F009         	call	i2_Set_Display
  5109  0001C0                     i2l2745:
  5110                           
  5111                           ;interrupt.c: 66: }
  5112                           ;interrupt.c: 67: }
  5113                           ;interrupt.c: 68: }
  5114                           ;interrupt.c: 69: }
  5115                           ;interrupt.c: 70: __nop();
  5116  0001C0  F000               	nop	
  5117                           
  5118                           ;interrupt.c: 71: if(check_counter < 30 && testflag == 1) {
  5119  0001C2  0E1E               	movlw	30
  5120  0001C4  6035               	cpfslt	_check_counter,c
  5121  0001C6  D006               	goto	i2l2755
  5122  0001C8  A63E               	btfss	_testflag/(0+8),_testflag& (0+7),c
  5123  0001CA  D004               	goto	i2l2755
  5124                           
  5125                           ;interrupt.c: 72: check_counter++;
  5126  0001CC  2A35               	incf	_check_counter,f,c
  5127                           
  5128                           ;interrupt.c: 73: Check_Detonators();
  5129  0001CE  ECE4  F00A         	call	i2_Check_Detonators	;wreg free
  5130                           
  5131                           ;interrupt.c: 74: }else {
  5132  0001D2  D003               	goto	i2l589
  5133  0001D4                     i2l2755:
  5134                           
  5135                           ;interrupt.c: 75: check_counter = 0;
  5136  0001D4  0E00               	movlw	0
  5137  0001D6  6E35               	movwf	_check_counter,c
  5138                           
  5139                           ;interrupt.c: 76: testflag = 0;
  5140  0001D8  963E               	bcf	_testflag/(0+8),_testflag& (0+7),c
  5141  0001DA                     i2l589:
  5142  0001DA  C029  FFF5         	movff	??_Isr+16,tablat
  5143  0001DE  C028  FFF8         	movff	??_Isr+15,tblptru
  5144  0001E2  C027  FFF7         	movff	??_Isr+14,tblptrh
  5145  0001E6  C026  FFF6         	movff	??_Isr+13,tblptrl
  5146  0001EA  C025  FFF4         	movff	??_Isr+12,prodh
  5147  0001EE  C024  FFF3         	movff	??_Isr+11,prodl
  5148  0001F2  C023  FFDA         	movff	??_Isr+10,fsr2h
  5149  0001F6  C022  FFD9         	movff	??_Isr+9,fsr2l
  5150  0001FA  C021  FFE2         	movff	??_Isr+8,fsr1h
  5151  0001FE  C020  FFE1         	movff	??_Isr+7,fsr1l
  5152  000202  C01F  FFEA         	movff	??_Isr+6,fsr0h
  5153  000206  C01E  FFE9         	movff	??_Isr+5,fsr0l
  5154  00020A  C01D  FFFB         	movff	??_Isr+4,pclatu
  5155  00020E  C01C  FFFA         	movff	??_Isr+3,pclath
  5156  000212  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5157  000214  0011               	retfie		f
  5158  000216                     __end_of_Isr:
  5159                           	opt stack 0
  5160                           pclatu	equ	0xFFB
  5161                           pclath	equ	0xFFA
  5162                           tblptru	equ	0xFF8
  5163                           tblptrh	equ	0xFF7
  5164                           tblptrl	equ	0xFF6
  5165                           tablat	equ	0xFF5
  5166                           prodh	equ	0xFF4
  5167                           prodl	equ	0xFF3
  5168                           intcon	equ	0xFF2
  5169                           postinc0	equ	0xFEE
  5170                           fsr0h	equ	0xFEA
  5171                           fsr0l	equ	0xFE9
  5172                           wreg	equ	0xFE8
  5173                           postdec1	equ	0xFE5
  5174                           fsr1h	equ	0xFE2
  5175                           fsr1l	equ	0xFE1
  5176                           indf2	equ	0xFDF
  5177                           postinc2	equ	0xFDE
  5178                           postdec2	equ	0xFDD
  5179                           plusw2	equ	0xFDB
  5180                           fsr2h	equ	0xFDA
  5181                           fsr2l	equ	0xFD9
  5182                           status	equ	0xFD8
  5183                           
  5184 ;; *************** function i2_Set_Display *****************
  5185 ;; Defined at:
  5186 ;;		line 139 in file "display.c"
  5187 ;; Parameters:    Size  Location     Type
  5188 ;;  type            1    wreg     unsigned char 
  5189 ;;  information     1   20[COMRAM] unsigned char 
  5190 ;;  value           2   21[COMRAM] unsigned int 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  type            1   23[COMRAM] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;		None               void
  5195 ;; Registers used:
  5196 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMRAM   BANK0   BANK1
  5202 ;;      Params:         3       0       0
  5203 ;;      Locals:         1       0       0
  5204 ;;      Temps:          0       0       0
  5205 ;;      Totals:         4       0       0
  5206 ;;Total ram usage:        4 bytes
  5207 ;; Hardware stack levels used:    1
  5208 ;; Hardware stack levels required when called:    3
  5209 ;; This function calls:
  5210 ;;		i2_Evaluate_Display
  5211 ;;		i2_Evaluate_Signs
  5212 ;;		i2_Write_Display_Byte
  5213 ;; This function is called by:
  5214 ;;		_Isr
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218                           	psect	text25
  5219  00134A                     __ptext25:
  5220                           	opt stack 0
  5221  00134A                     i2_Set_Display:
  5222                           	opt stack 19
  5223                           
  5224                           ;incstack = 0
  5225                           ;i2Set_Display@type stored from wreg
  5226  00134A  6E18               	movwf	i2Set_Display@type,c
  5227                           
  5228                           ;display.c: 141: switch (type) {
  5229  00134C  D01D               	goto	i2l2661
  5230  00134E                     i2l2645:
  5231                           
  5232                           ;display.c: 143: if(information != '-') {
  5233  00134E  0E2D               	movlw	45
  5234  001350  1815               	xorwf	i2Set_Display@information,w,c
  5235  001352  B4D8               	btfsc	status,2,c
  5236  001354  D012               	goto	i2l2657
  5237                           
  5238                           ;display.c: 144: signs[0] = value;
  5239  001356  C016  F07F         	movff	i2Set_Display@value,_signs
  5240                           
  5241                           ;display.c: 145: signs[0] += 0x30;
  5242  00135A  0E30               	movlw	48
  5243  00135C  0100               	movlb	0	; () banked
  5244  00135E  277F               	addwf	_signs& (0+255),f,b
  5245                           
  5246                           ; BSR set to: 0
  5247                           ;display.c: 146: signs[1] = '-';
  5248  001360  0E2D               	movlw	45
  5249  001362  0100               	movlb	0	; () banked
  5250  001364  6F80               	movwf	(_signs+1)& (0+255),b
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;display.c: 147: signs[2] = information;
  5254  001366  C015  F081         	movff	i2Set_Display@information,_signs+2
  5255                           
  5256                           ; BSR set to: 0
  5257                           ;display.c: 148: Evaluate_Display(sizeof(signs), signs);
  5258  00136A  0E7F               	movlw	low _signs
  5259  00136C  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5260  00136E  0E00               	movlw	high _signs
  5261  001370  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5262  001372  0E03               	movlw	3
  5263  001374  EC41  F005         	call	i2_Evaluate_Display
  5264                           
  5265                           ;display.c: 149: } else {
  5266  001378  D00C               	goto	i2l2663
  5267  00137A                     i2l2657:
  5268                           
  5269                           ;display.c: 150: Evaluate_Signs(value);
  5270  00137A  C016  F012         	movff	i2Set_Display@value,i2Evaluate_Signs@evaluation_value
  5271  00137E  C017  F013         	movff	i2Set_Display@value+1,i2Evaluate_Signs@evaluation_value+1
  5272  001382  EC11  F009         	call	i2_Evaluate_Signs	;wreg free
  5273                           
  5274                           ;display.c: 156: }
  5275                           
  5276                           ;display.c: 155: break;
  5277                           
  5278                           ;display.c: 153: case 'L':
  5279                           
  5280                           ;display.c: 151: }
  5281                           ;display.c: 152: break;
  5282  001386  D005               	goto	i2l2663
  5283  001388                     i2l2661:
  5284  001388  5018               	movf	i2Set_Display@type,w,c
  5285                           
  5286                           ; Switch size 1, requested type "space"
  5287                           ; Number of cases is 2, Range of values is 55 to 76
  5288                           ; switch strategies available:
  5289                           ; Name         Instructions Cycles
  5290                           ; simple_byte            7     4 (average)
  5291                           ;	Chosen strategy is simple_byte
  5292  00138A  0A37               	xorlw	55	; case 55
  5293  00138C  B4D8               	btfsc	status,2,c
  5294  00138E  D7DF               	goto	i2l2645
  5295  001390  0A7B               	xorlw	123	; case 76
  5296  001392                     i2l2663:
  5297                           
  5298                           ;display.c: 157: Write_Display_Byte(pixels);
  5299  001392  0E37               	movlw	low _pixels
  5300  001394  6E01               	movwf	i2Write_Display_Byte@write_data,c
  5301  001396  0E00               	movlw	high _pixels
  5302  001398  6E02               	movwf	i2Write_Display_Byte@write_data+1,c
  5303  00139A  EC68  F00A         	call	i2_Write_Display_Byte	;wreg free
  5304  00139E  0012               	return		;funcret
  5305  0013A0                     __end_ofi2_Set_Display:
  5306                           	opt stack 0
  5307                           pclatu	equ	0xFFB
  5308                           pclath	equ	0xFFA
  5309                           tblptru	equ	0xFF8
  5310                           tblptrh	equ	0xFF7
  5311                           tblptrl	equ	0xFF6
  5312                           tablat	equ	0xFF5
  5313                           prodh	equ	0xFF4
  5314                           prodl	equ	0xFF3
  5315                           intcon	equ	0xFF2
  5316                           postinc0	equ	0xFEE
  5317                           fsr0h	equ	0xFEA
  5318                           fsr0l	equ	0xFE9
  5319                           wreg	equ	0xFE8
  5320                           postdec1	equ	0xFE5
  5321                           fsr1h	equ	0xFE2
  5322                           fsr1l	equ	0xFE1
  5323                           indf2	equ	0xFDF
  5324                           postinc2	equ	0xFDE
  5325                           postdec2	equ	0xFDD
  5326                           plusw2	equ	0xFDB
  5327                           fsr2h	equ	0xFDA
  5328                           fsr2l	equ	0xFD9
  5329                           status	equ	0xFD8
  5330                           
  5331 ;; *************** function i2_Write_Display_Byte *****************
  5332 ;; Defined at:
  5333 ;;		line 46 in file "communication.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  write_data      2    0[COMRAM] PTR unsigned char 
  5336 ;;		 -> pixels(7), 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  Write_Displa    1    6[COMRAM] unsigned char 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;		None               void
  5341 ;; Registers used:
  5342 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1
  5348 ;;      Params:         2       0       0
  5349 ;;      Locals:         1       0       0
  5350 ;;      Temps:          4       0       0
  5351 ;;      Totals:         7       0       0
  5352 ;;Total ram usage:        7 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; This function calls:
  5355 ;;		Nothing
  5356 ;; This function is called by:
  5357 ;;		i2_Set_Display
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	text26
  5362  0014D0                     __ptext26:
  5363                           	opt stack 0
  5364  0014D0                     i2_Write_Display_Byte:
  5365                           	opt stack 21
  5366                           
  5367                           ;communication.c: 47: for(unsigned char counter = sizeof(pixels); counter > 0;
  5368                           
  5369                           ;incstack = 0
  5370  0014D0  0E07               	movlw	7
  5371  0014D2  6E07               	movwf	i2Write_Display_Byte@counter,c
  5372  0014D4                     
  5373                           ;communication.c: 48: counter--) {
  5374  0014D4  5007               	movf	i2Write_Display_Byte@counter,w,c
  5375  0014D6  B4D8               	btfsc	status,2,c
  5376  0014D8  0012               	return	
  5377                           
  5378                           ;communication.c: 49: if(SSP1IF = 1) {
  5379  0014DA  869E               	bsf	3998,3,c	;volatile
  5380  0014DC  B69E               	btfsc	3998,3,c	;volatile
  5381                           
  5382                           ;communication.c: 50: SSP1IF = 0;
  5383  0014DE  969E               	bcf	3998,3,c	;volatile
  5384                           
  5385                           ;communication.c: 51: }
  5386                           ;communication.c: 52: SSP1BUF = write_data[counter - 1];
  5387  0014E0  0EFF               	movlw	255
  5388  0014E2  6E03               	movwf	??i2_Write_Display_Byte& (0+255),c
  5389  0014E4  0EFF               	movlw	255
  5390  0014E6  6E04               	movwf	(??i2_Write_Display_Byte+1)& (0+255),c
  5391  0014E8  5007               	movf	i2Write_Display_Byte@counter,w,c
  5392  0014EA  6E05               	movwf	(??i2_Write_Display_Byte+2)& (0+255),c
  5393  0014EC  6A06               	clrf	(??i2_Write_Display_Byte+3)& (0+255),c
  5394  0014EE  5003               	movf	??i2_Write_Display_Byte,w,c
  5395  0014F0  2605               	addwf	??i2_Write_Display_Byte+2,f,c
  5396  0014F2  5004               	movf	??i2_Write_Display_Byte+1,w,c
  5397  0014F4  2206               	addwfc	??i2_Write_Display_Byte+3,f,c
  5398  0014F6  5005               	movf	??i2_Write_Display_Byte+2,w,c
  5399  0014F8  2401               	addwf	i2Write_Display_Byte@write_data,w,c
  5400  0014FA  6ED9               	movwf	fsr2l,c
  5401  0014FC  5006               	movf	??i2_Write_Display_Byte+3,w,c
  5402  0014FE  2002               	addwfc	i2Write_Display_Byte@write_data+1,w,c
  5403  001500  6EDA               	movwf	fsr2h,c
  5404  001502  50DF               	movf	indf2,w,c
  5405  001504  6EC9               	movwf	4041,c	;volatile
  5406                           
  5407                           ;communication.c: 54: SSP1IF = 0;
  5408  001506  969E               	bcf	3998,3,c	;volatile
  5409                           
  5410                           ;communication.c: 55: PORTCbits.RC0 = 0;
  5411  001508  9082               	bcf	3970,0,c	;volatile
  5412                           
  5413                           ;communication.c: 56: PORTCbits.RC0 = 1;
  5414  00150A  8082               	bsf	3970,0,c	;volatile
  5415                           
  5416                           ;communication.c: 57: PORTCbits.RC0 = 0;
  5417  00150C  9082               	bcf	3970,0,c	;volatile
  5418  00150E  0607               	decf	i2Write_Display_Byte@counter,f,c
  5419  001510  D7E1               	goto	L4
  5420  001512                     __end_ofi2_Write_Display_Byte:
  5421                           	opt stack 0
  5422                           pclatu	equ	0xFFB
  5423                           pclath	equ	0xFFA
  5424                           tblptru	equ	0xFF8
  5425                           tblptrh	equ	0xFF7
  5426                           tblptrl	equ	0xFF6
  5427                           tablat	equ	0xFF5
  5428                           prodh	equ	0xFF4
  5429                           prodl	equ	0xFF3
  5430                           intcon	equ	0xFF2
  5431                           postinc0	equ	0xFEE
  5432                           fsr0h	equ	0xFEA
  5433                           fsr0l	equ	0xFE9
  5434                           wreg	equ	0xFE8
  5435                           postdec1	equ	0xFE5
  5436                           fsr1h	equ	0xFE2
  5437                           fsr1l	equ	0xFE1
  5438                           indf2	equ	0xFDF
  5439                           postinc2	equ	0xFDE
  5440                           postdec2	equ	0xFDD
  5441                           plusw2	equ	0xFDB
  5442                           fsr2h	equ	0xFDA
  5443                           fsr2l	equ	0xFD9
  5444                           status	equ	0xFD8
  5445                           
  5446 ;; *************** function i2_Evaluate_Signs *****************
  5447 ;; Defined at:
  5448 ;;		line 119 in file "display.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  evaluation_v    2   17[COMRAM] unsigned int 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  Evaluate_Sig    1   19[COMRAM] unsigned char 
  5453 ;; Return value:  Size  Location     Type
  5454 ;;		None               void
  5455 ;; Registers used:
  5456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5457 ;; Tracked objects:
  5458 ;;		On entry : 0/0
  5459 ;;		On exit  : 0/0
  5460 ;;		Unchanged: 0/0
  5461 ;; Data sizes:     COMRAM   BANK0   BANK1
  5462 ;;      Params:         2       0       0
  5463 ;;      Locals:         1       0       0
  5464 ;;      Temps:          0       0       0
  5465 ;;      Totals:         3       0       0
  5466 ;;Total ram usage:        3 bytes
  5467 ;; Hardware stack levels used:    1
  5468 ;; Hardware stack levels required when called:    2
  5469 ;; This function calls:
  5470 ;;		i2_Evaluate_Display
  5471 ;;		i2___lwmod
  5472 ;; This function is called by:
  5473 ;;		i2_Set_Display
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text27
  5478  001222                     __ptext27:
  5479                           	opt stack 0
  5480  001222                     i2_Evaluate_Signs:
  5481                           	opt stack 19
  5482                           
  5483                           ;display.c: 120: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  5484                           
  5485                           ;incstack = 0
  5486  001222  0E00               	movlw	0
  5487  001224  6E14               	movwf	i2Evaluate_Signs@valuecounter,c
  5488  001226                     i2l2369:
  5489                           
  5490                           ;display.c: 121: valuecounter++) {
  5491  001226  0E02               	movlw	2
  5492  001228  6414               	cpfsgt	i2Evaluate_Signs@valuecounter,c
  5493  00122A  D001               	goto	i2l2373
  5494  00122C  D023               	goto	i2l430
  5495  00122E                     i2l2373:
  5496                           
  5497                           ;display.c: 122: signs[valuecounter] = evaluation_value % 10;
  5498  00122E  5014               	movf	i2Evaluate_Signs@valuecounter,w,c
  5499  001230  0D01               	mullw	1
  5500  001232  0E7F               	movlw	low _signs
  5501  001234  24F3               	addwf	prodl,w,c
  5502  001236  6ED9               	movwf	fsr2l,c
  5503  001238  0E00               	movlw	high _signs
  5504  00123A  20F4               	addwfc	prodh,w,c
  5505  00123C  6EDA               	movwf	fsr2h,c
  5506  00123E  C012  F001         	movff	i2Evaluate_Signs@evaluation_value,i2___lwmod@dividend
  5507  001242  C013  F002         	movff	i2Evaluate_Signs@evaluation_value+1,i2___lwmod@dividend+1
  5508  001246  0E00               	movlw	0
  5509  001248  6E04               	movwf	i2___lwmod@divisor+1,c
  5510  00124A  0E0A               	movlw	10
  5511  00124C  6E03               	movwf	i2___lwmod@divisor,c
  5512  00124E  EC89  F00A         	call	i2___lwmod	;wreg free
  5513  001252  5001               	movf	?i2___lwmod,w,c
  5514  001254  6EDF               	movwf	indf2,c
  5515                           
  5516                           ;display.c: 123: signs[valuecounter] += 0x30;
  5517  001256  5014               	movf	i2Evaluate_Signs@valuecounter,w,c
  5518  001258  0D01               	mullw	1
  5519  00125A  0E7F               	movlw	low _signs
  5520  00125C  24F3               	addwf	prodl,w,c
  5521  00125E  6ED9               	movwf	fsr2l,c
  5522  001260  0E00               	movlw	high _signs
  5523  001262  20F4               	addwfc	prodh,w,c
  5524  001264  6EDA               	movwf	fsr2h,c
  5525  001266  0E30               	movlw	48
  5526  001268  26DF               	addwf	indf2,f,c
  5527                           
  5528                           ;display.c: 124: evaluation_value >>= 1;
  5529  00126A  90D8               	bcf	status,0,c
  5530  00126C  3213               	rrcf	i2Evaluate_Signs@evaluation_value+1,f,c
  5531  00126E  3212               	rrcf	i2Evaluate_Signs@evaluation_value,f,c
  5532  001270  2A14               	incf	i2Evaluate_Signs@valuecounter,f,c
  5533  001272  D7D9               	goto	i2l2369
  5534  001274                     i2l430:
  5535                           
  5536                           ;display.c: 125: }
  5537                           ;display.c: 126: __nop();
  5538  001274  F000               	nop	
  5539                           
  5540                           ;display.c: 127: Evaluate_Display(sizeof(signs), signs);
  5541  001276  0E7F               	movlw	low _signs
  5542  001278  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5543  00127A  0E00               	movlw	high _signs
  5544  00127C  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5545  00127E  0E03               	movlw	3
  5546  001280  EC41  F005         	call	i2_Evaluate_Display
  5547  001284  0012               	return		;funcret
  5548  001286                     __end_ofi2_Evaluate_Signs:
  5549                           	opt stack 0
  5550                           pclatu	equ	0xFFB
  5551                           pclath	equ	0xFFA
  5552                           tblptru	equ	0xFF8
  5553                           tblptrh	equ	0xFF7
  5554                           tblptrl	equ	0xFF6
  5555                           tablat	equ	0xFF5
  5556                           prodh	equ	0xFF4
  5557                           prodl	equ	0xFF3
  5558                           intcon	equ	0xFF2
  5559                           postinc0	equ	0xFEE
  5560                           fsr0h	equ	0xFEA
  5561                           fsr0l	equ	0xFE9
  5562                           wreg	equ	0xFE8
  5563                           postdec1	equ	0xFE5
  5564                           fsr1h	equ	0xFE2
  5565                           fsr1l	equ	0xFE1
  5566                           indf2	equ	0xFDF
  5567                           postinc2	equ	0xFDE
  5568                           postdec2	equ	0xFDD
  5569                           plusw2	equ	0xFDB
  5570                           fsr2h	equ	0xFDA
  5571                           fsr2l	equ	0xFD9
  5572                           status	equ	0xFD8
  5573                           
  5574 ;; *************** function i2___lwmod *****************
  5575 ;; Defined at:
  5576 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  dividend        2    0[COMRAM] unsigned int 
  5579 ;;  divisor         2    2[COMRAM] unsigned int 
  5580 ;; Auto vars:     Size  Location     Type
  5581 ;;  __lwmod         1    4[COMRAM] unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  2    0[COMRAM] unsigned int 
  5584 ;; Registers used:
  5585 ;;		wreg, status,2, status,0
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMRAM   BANK0   BANK1
  5591 ;;      Params:         4       0       0
  5592 ;;      Locals:         1       0       0
  5593 ;;      Temps:          0       0       0
  5594 ;;      Totals:         5       0       0
  5595 ;;Total ram usage:        5 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; This function calls:
  5598 ;;		Nothing
  5599 ;; This function is called by:
  5600 ;;		i2_Evaluate_Signs
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text28
  5605  001512                     __ptext28:
  5606                           	opt stack 0
  5607  001512                     i2___lwmod:
  5608                           	opt stack 20
  5609                           
  5610                           ;incstack = 0
  5611  001512  5003               	movf	i2___lwmod@divisor,w,c
  5612  001514  1004               	iorwf	i2___lwmod@divisor+1,w,c
  5613  001516  B4D8               	btfsc	status,2,c
  5614  001518  D018               	goto	i2l1002
  5615  00151A  0E01               	movlw	1
  5616  00151C  6E05               	movwf	i2___lwmod@counter,c
  5617  00151E  D004               	goto	i2l2323
  5618  001520                     i2l2321:
  5619  001520  90D8               	bcf	status,0,c
  5620  001522  3603               	rlcf	i2___lwmod@divisor,f,c
  5621  001524  3604               	rlcf	i2___lwmod@divisor+1,f,c
  5622  001526  2A05               	incf	i2___lwmod@counter,f,c
  5623  001528                     i2l2323:
  5624  001528  AE04               	btfss	i2___lwmod@divisor+1,7,c
  5625  00152A  D7FA               	goto	i2l2321
  5626  00152C                     i2l2325:
  5627  00152C  5003               	movf	i2___lwmod@divisor,w,c
  5628  00152E  5C01               	subwf	i2___lwmod@dividend,w,c
  5629  001530  5004               	movf	i2___lwmod@divisor+1,w,c
  5630  001532  5802               	subwfb	i2___lwmod@dividend+1,w,c
  5631  001534  A0D8               	btfss	status,0,c
  5632  001536  D004               	goto	i2l2329
  5633  001538  5003               	movf	i2___lwmod@divisor,w,c
  5634  00153A  5E01               	subwf	i2___lwmod@dividend,f,c
  5635  00153C  5004               	movf	i2___lwmod@divisor+1,w,c
  5636  00153E  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  5637  001540                     i2l2329:
  5638  001540  90D8               	bcf	status,0,c
  5639  001542  3204               	rrcf	i2___lwmod@divisor+1,f,c
  5640  001544  3203               	rrcf	i2___lwmod@divisor,f,c
  5641  001546  2E05               	decfsz	i2___lwmod@counter,f,c
  5642  001548  D7F1               	goto	i2l2325
  5643  00154A                     i2l1002:
  5644  00154A  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  5645  00154E  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  5646  001552  0012               	return		;funcret
  5647  001554                     __end_ofi2___lwmod:
  5648                           	opt stack 0
  5649                           pclatu	equ	0xFFB
  5650                           pclath	equ	0xFFA
  5651                           tblptru	equ	0xFF8
  5652                           tblptrh	equ	0xFF7
  5653                           tblptrl	equ	0xFF6
  5654                           tablat	equ	0xFF5
  5655                           prodh	equ	0xFF4
  5656                           prodl	equ	0xFF3
  5657                           intcon	equ	0xFF2
  5658                           postinc0	equ	0xFEE
  5659                           fsr0h	equ	0xFEA
  5660                           fsr0l	equ	0xFE9
  5661                           wreg	equ	0xFE8
  5662                           postdec1	equ	0xFE5
  5663                           fsr1h	equ	0xFE2
  5664                           fsr1l	equ	0xFE1
  5665                           indf2	equ	0xFDF
  5666                           postinc2	equ	0xFDE
  5667                           postdec2	equ	0xFDD
  5668                           plusw2	equ	0xFDB
  5669                           fsr2h	equ	0xFDA
  5670                           fsr2l	equ	0xFD9
  5671                           status	equ	0xFD8
  5672                           
  5673 ;; *************** function i2_Evaluate_Display *****************
  5674 ;; Defined at:
  5675 ;;		line 52 in file "display.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;  size            1    wreg     unsigned char 
  5678 ;;  evaluate        2    8[COMRAM] PTR const unsigned char 
  5679 ;;		 -> signs(3), STR_2(4), STR_1(4), 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  size            1   16[COMRAM] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;		None               void
  5684 ;; Registers used:
  5685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1
  5691 ;;      Params:         2       0       0
  5692 ;;      Locals:         1       0       0
  5693 ;;      Temps:          6       0       0
  5694 ;;      Totals:         9       0       0
  5695 ;;Total ram usage:        9 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    1
  5698 ;; This function calls:
  5699 ;;		i2_Set_Bits
  5700 ;; This function is called by:
  5701 ;;		i2_Evaluate_Signs
  5702 ;;		i2_Set_Display
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           	psect	text29
  5707  000A82                     __ptext29:
  5708                           	opt stack 0
  5709  000A82                     i2_Evaluate_Display:
  5710                           	opt stack 19
  5711                           
  5712                           ;incstack = 0
  5713                           ;i2Evaluate_Display@size stored from wreg
  5714  000A82  6E11               	movwf	i2Evaluate_Display@size,c
  5715                           
  5716                           ;display.c: 53: for(display_counter = (size + 1); display_counter > 0;
  5717  000A84  2811               	incf	i2Evaluate_Display@size,w,c
  5718  000A86  6E3F               	movwf	_display_counter,c
  5719                           
  5720                           ;display.c: 54: display_counter--) {
  5721  000A88  D12F               	goto	i2l2315
  5722  000A8A                     i2l404:
  5723                           
  5724                           ;display.c: 55: __nop();
  5725  000A8A  F000               	nop	
  5726                           
  5727                           ;display.c: 56: switch (evaluate[(display_counter - 1)]) {
  5728  000A8C  D0D5               	goto	i2l2311
  5729  000A8E                     i2l2275:
  5730                           
  5731                           ;display.c: 58: Set_Bits("ABCDEF");
  5732  000A8E  0E23               	movlw	low STR_3
  5733  000A90  6E01               	movwf	i2Set_Bits@bits,c
  5734  000A92  0E02               	movlw	high STR_3
  5735  000A94  6E02               	movwf	i2Set_Bits@bits+1,c
  5736  000A96  5001               	movf	i2Set_Bits@bits,w,c
  5737  000A98  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5738  000A9A  A4D8               	btfss	status,2,c
  5739  000A9C  0E00               	movlw	low (__mediumconst shr (0+16))
  5740  000A9E  6E03               	movwf	i2Set_Bits@bits+2,c
  5741  000AA0  EC74  F007         	call	i2_Set_Bits	;wreg free
  5742                           
  5743                           ;display.c: 59: break;
  5744  000AA4  D120               	goto	i2l2313
  5745  000AA6                     i2l2277:
  5746                           
  5747                           ;display.c: 61: Set_Bits("BC");
  5748  000AA6  0E63               	movlw	low (STR_10+1)
  5749  000AA8  6E01               	movwf	i2Set_Bits@bits,c
  5750  000AAA  0E02               	movlw	high (STR_10+1)
  5751  000AAC  6E02               	movwf	i2Set_Bits@bits+1,c
  5752  000AAE  5001               	movf	i2Set_Bits@bits,w,c
  5753  000AB0  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5754  000AB2  A4D8               	btfss	status,2,c
  5755  000AB4  0E00               	movlw	low (__mediumconst shr (0+16))
  5756  000AB6  6E03               	movwf	i2Set_Bits@bits+2,c
  5757  000AB8  EC74  F007         	call	i2_Set_Bits	;wreg free
  5758                           
  5759                           ;display.c: 62: break;
  5760  000ABC  D114               	goto	i2l2313
  5761  000ABE                     i2l2279:
  5762                           
  5763                           ;display.c: 64: Set_Bits("ABDEG");
  5764  000ABE  0E45               	movlw	low STR_5
  5765  000AC0  6E01               	movwf	i2Set_Bits@bits,c
  5766  000AC2  0E02               	movlw	high STR_5
  5767  000AC4  6E02               	movwf	i2Set_Bits@bits+1,c
  5768  000AC6  5001               	movf	i2Set_Bits@bits,w,c
  5769  000AC8  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5770  000ACA  A4D8               	btfss	status,2,c
  5771  000ACC  0E00               	movlw	low (__mediumconst shr (0+16))
  5772  000ACE  6E03               	movwf	i2Set_Bits@bits+2,c
  5773  000AD0  EC74  F007         	call	i2_Set_Bits	;wreg free
  5774                           
  5775                           ;display.c: 65: break;
  5776  000AD4  D108               	goto	i2l2313
  5777  000AD6                     i2l2281:
  5778                           
  5779                           ;display.c: 67: Set_Bits("ABCDG");
  5780  000AD6  0E3F               	movlw	low STR_6
  5781  000AD8  6E01               	movwf	i2Set_Bits@bits,c
  5782  000ADA  0E02               	movlw	high STR_6
  5783  000ADC  6E02               	movwf	i2Set_Bits@bits+1,c
  5784  000ADE  5001               	movf	i2Set_Bits@bits,w,c
  5785  000AE0  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5786  000AE2  A4D8               	btfss	status,2,c
  5787  000AE4  0E00               	movlw	low (__mediumconst shr (0+16))
  5788  000AE6  6E03               	movwf	i2Set_Bits@bits+2,c
  5789  000AE8  EC74  F007         	call	i2_Set_Bits	;wreg free
  5790                           
  5791                           ;display.c: 68: break;
  5792  000AEC  D0FC               	goto	i2l2313
  5793  000AEE                     i2l2283:
  5794                           
  5795                           ;display.c: 70: Set_Bits("BCFG");
  5796  000AEE  0E5D               	movlw	low STR_7
  5797  000AF0  6E01               	movwf	i2Set_Bits@bits,c
  5798  000AF2  0E02               	movlw	high STR_7
  5799  000AF4  6E02               	movwf	i2Set_Bits@bits+1,c
  5800  000AF6  5001               	movf	i2Set_Bits@bits,w,c
  5801  000AF8  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5802  000AFA  A4D8               	btfss	status,2,c
  5803  000AFC  0E00               	movlw	low (__mediumconst shr (0+16))
  5804  000AFE  6E03               	movwf	i2Set_Bits@bits+2,c
  5805  000B00  EC74  F007         	call	i2_Set_Bits	;wreg free
  5806                           
  5807                           ;display.c: 71: break;
  5808  000B04  D0F0               	goto	i2l2313
  5809  000B06                     i2l2285:
  5810                           
  5811                           ;display.c: 73: Set_Bits("ACDFG");
  5812  000B06  0E4B               	movlw	low STR_8
  5813  000B08  6E01               	movwf	i2Set_Bits@bits,c
  5814  000B0A  0E02               	movlw	high STR_8
  5815  000B0C  6E02               	movwf	i2Set_Bits@bits+1,c
  5816  000B0E  5001               	movf	i2Set_Bits@bits,w,c
  5817  000B10  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5818  000B12  A4D8               	btfss	status,2,c
  5819  000B14  0E00               	movlw	low (__mediumconst shr (0+16))
  5820  000B16  6E03               	movwf	i2Set_Bits@bits+2,c
  5821  000B18  EC74  F007         	call	i2_Set_Bits	;wreg free
  5822                           
  5823                           ;display.c: 74: break;
  5824  000B1C  D0E4               	goto	i2l2313
  5825  000B1E                     i2l2287:
  5826                           
  5827                           ;display.c: 76: Set_Bits("ACDEFG");
  5828  000B1E  0E38               	movlw	low STR_9
  5829  000B20  6E01               	movwf	i2Set_Bits@bits,c
  5830  000B22  0E02               	movlw	high STR_9
  5831  000B24  6E02               	movwf	i2Set_Bits@bits+1,c
  5832  000B26  5001               	movf	i2Set_Bits@bits,w,c
  5833  000B28  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5834  000B2A  A4D8               	btfss	status,2,c
  5835  000B2C  0E00               	movlw	low (__mediumconst shr (0+16))
  5836  000B2E  6E03               	movwf	i2Set_Bits@bits+2,c
  5837  000B30  EC74  F007         	call	i2_Set_Bits	;wreg free
  5838                           
  5839                           ;display.c: 77: break;
  5840  000B34  D0D8               	goto	i2l2313
  5841  000B36                     i2l2289:
  5842                           
  5843                           ;display.c: 79: Set_Bits("ABC");
  5844  000B36  0E62               	movlw	low STR_10
  5845  000B38  6E01               	movwf	i2Set_Bits@bits,c
  5846  000B3A  0E02               	movlw	high STR_10
  5847  000B3C  6E02               	movwf	i2Set_Bits@bits+1,c
  5848  000B3E  5001               	movf	i2Set_Bits@bits,w,c
  5849  000B40  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5850  000B42  A4D8               	btfss	status,2,c
  5851  000B44  0E00               	movlw	low (__mediumconst shr (0+16))
  5852  000B46  6E03               	movwf	i2Set_Bits@bits+2,c
  5853  000B48  EC74  F007         	call	i2_Set_Bits	;wreg free
  5854                           
  5855                           ;display.c: 80: break;
  5856  000B4C  D0CC               	goto	i2l2313
  5857  000B4E                     i2l2291:
  5858                           
  5859                           ;display.c: 82: Set_Bits("ABCDEFG");
  5860  000B4E  0E1B               	movlw	low STR_11
  5861  000B50  6E01               	movwf	i2Set_Bits@bits,c
  5862  000B52  0E02               	movlw	high STR_11
  5863  000B54  6E02               	movwf	i2Set_Bits@bits+1,c
  5864  000B56  5001               	movf	i2Set_Bits@bits,w,c
  5865  000B58  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5866  000B5A  A4D8               	btfss	status,2,c
  5867  000B5C  0E00               	movlw	low (__mediumconst shr (0+16))
  5868  000B5E  6E03               	movwf	i2Set_Bits@bits+2,c
  5869  000B60  EC74  F007         	call	i2_Set_Bits	;wreg free
  5870                           
  5871                           ;display.c: 83: break;
  5872  000B64  D0C0               	goto	i2l2313
  5873  000B66                     i2l2293:
  5874                           
  5875                           ;display.c: 85: Set_Bits("ABCDFG");
  5876  000B66  0E2A               	movlw	low STR_12
  5877  000B68  6E01               	movwf	i2Set_Bits@bits,c
  5878  000B6A  0E02               	movlw	high STR_12
  5879  000B6C  6E02               	movwf	i2Set_Bits@bits+1,c
  5880  000B6E  5001               	movf	i2Set_Bits@bits,w,c
  5881  000B70  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5882  000B72  A4D8               	btfss	status,2,c
  5883  000B74  0E00               	movlw	low (__mediumconst shr (0+16))
  5884  000B76  6E03               	movwf	i2Set_Bits@bits+2,c
  5885  000B78  EC74  F007         	call	i2_Set_Bits	;wreg free
  5886                           
  5887                           ;display.c: 86: break;
  5888  000B7C  D0B4               	goto	i2l2313
  5889  000B7E                     i2l2295:
  5890                           
  5891                           ;display.c: 88: Set_Bits("ABCEFG");
  5892  000B7E  0E31               	movlw	low STR_13
  5893  000B80  6E01               	movwf	i2Set_Bits@bits,c
  5894  000B82  0E02               	movlw	high STR_13
  5895  000B84  6E02               	movwf	i2Set_Bits@bits+1,c
  5896  000B86  5001               	movf	i2Set_Bits@bits,w,c
  5897  000B88  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5898  000B8A  A4D8               	btfss	status,2,c
  5899  000B8C  0E00               	movlw	low (__mediumconst shr (0+16))
  5900  000B8E  6E03               	movwf	i2Set_Bits@bits+2,c
  5901  000B90  EC74  F007         	call	i2_Set_Bits	;wreg free
  5902                           
  5903                           ;display.c: 89: break;
  5904  000B94  D0A8               	goto	i2l2313
  5905  000B96                     i2l2297:
  5906                           
  5907                           ;display.c: 91: Set_Bits("ABCDEF");
  5908  000B96  0E23               	movlw	low STR_3
  5909  000B98  6E01               	movwf	i2Set_Bits@bits,c
  5910  000B9A  0E02               	movlw	high STR_3
  5911  000B9C  6E02               	movwf	i2Set_Bits@bits+1,c
  5912  000B9E  5001               	movf	i2Set_Bits@bits,w,c
  5913  000BA0  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5914  000BA2  A4D8               	btfss	status,2,c
  5915  000BA4  0E00               	movlw	low (__mediumconst shr (0+16))
  5916  000BA6  6E03               	movwf	i2Set_Bits@bits+2,c
  5917  000BA8  EC74  F007         	call	i2_Set_Bits	;wreg free
  5918                           
  5919                           ;display.c: 92: break;
  5920  000BAC  D09C               	goto	i2l2313
  5921  000BAE                     i2l2299:
  5922                           
  5923                           ;display.c: 94: Set_Bits("ADEFG");
  5924  000BAE  0E57               	movlw	low STR_15
  5925  000BB0  6E01               	movwf	i2Set_Bits@bits,c
  5926  000BB2  0E02               	movlw	high STR_15
  5927  000BB4  6E02               	movwf	i2Set_Bits@bits+1,c
  5928  000BB6  5001               	movf	i2Set_Bits@bits,w,c
  5929  000BB8  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5930  000BBA  A4D8               	btfss	status,2,c
  5931  000BBC  0E00               	movlw	low (__mediumconst shr (0+16))
  5932  000BBE  6E03               	movwf	i2Set_Bits@bits+2,c
  5933  000BC0  EC74  F007         	call	i2_Set_Bits	;wreg free
  5934                           
  5935                           ;display.c: 95: break;
  5936  000BC4  D090               	goto	i2l2313
  5937  000BC6                     i2l2301:
  5938                           
  5939                           ;display.c: 97: Set_Bits("DEF");
  5940  000BC6  0E26               	movlw	low (STR_3+3)
  5941  000BC8  6E01               	movwf	i2Set_Bits@bits,c
  5942  000BCA  0E02               	movlw	high (STR_3+3)
  5943  000BCC  6E02               	movwf	i2Set_Bits@bits+1,c
  5944  000BCE  5001               	movf	i2Set_Bits@bits,w,c
  5945  000BD0  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5946  000BD2  A4D8               	btfss	status,2,c
  5947  000BD4  0E00               	movlw	low (__mediumconst shr (0+16))
  5948  000BD6  6E03               	movwf	i2Set_Bits@bits+2,c
  5949  000BD8  EC74  F007         	call	i2_Set_Bits	;wreg free
  5950                           
  5951                           ;display.c: 98: break;
  5952  000BDC  D084               	goto	i2l2313
  5953  000BDE                     i2l2303:
  5954                           
  5955                           ;display.c: 100: Set_Bits("ABCDEF");
  5956  000BDE  0E23               	movlw	low STR_3
  5957  000BE0  6E01               	movwf	i2Set_Bits@bits,c
  5958  000BE2  0E02               	movlw	high STR_3
  5959  000BE4  6E02               	movwf	i2Set_Bits@bits+1,c
  5960  000BE6  5001               	movf	i2Set_Bits@bits,w,c
  5961  000BE8  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5962  000BEA  A4D8               	btfss	status,2,c
  5963  000BEC  0E00               	movlw	low (__mediumconst shr (0+16))
  5964  000BEE  6E03               	movwf	i2Set_Bits@bits+2,c
  5965  000BF0  EC74  F007         	call	i2_Set_Bits	;wreg free
  5966                           
  5967                           ;display.c: 101: break;
  5968  000BF4  D078               	goto	i2l2313
  5969  000BF6                     i2l2305:
  5970                           
  5971                           ;display.c: 103: Set_Bits("ABEFG");
  5972  000BF6  0E51               	movlw	low STR_18
  5973  000BF8  6E01               	movwf	i2Set_Bits@bits,c
  5974  000BFA  0E02               	movlw	high STR_18
  5975  000BFC  6E02               	movwf	i2Set_Bits@bits+1,c
  5976  000BFE  5001               	movf	i2Set_Bits@bits,w,c
  5977  000C00  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5978  000C02  A4D8               	btfss	status,2,c
  5979  000C04  0E00               	movlw	low (__mediumconst shr (0+16))
  5980  000C06  6E03               	movwf	i2Set_Bits@bits+2,c
  5981  000C08  EC74  F007         	call	i2_Set_Bits	;wreg free
  5982                           
  5983                           ;display.c: 104: break;
  5984  000C0C  D06C               	goto	i2l2313
  5985  000C0E                     i2l2307:
  5986                           
  5987                           ;display.c: 106: Set_Bits("G");
  5988  000C0E  0E43               	movlw	low (STR_6+4)
  5989  000C10  6E01               	movwf	i2Set_Bits@bits,c
  5990  000C12  0E02               	movlw	high (STR_6+4)
  5991  000C14  6E02               	movwf	i2Set_Bits@bits+1,c
  5992  000C16  5001               	movf	i2Set_Bits@bits,w,c
  5993  000C18  1002               	iorwf	i2Set_Bits@bits+1,w,c
  5994  000C1A  A4D8               	btfss	status,2,c
  5995  000C1C  0E00               	movlw	low (__mediumconst shr (0+16))
  5996  000C1E  6E03               	movwf	i2Set_Bits@bits+2,c
  5997  000C20  EC74  F007         	call	i2_Set_Bits	;wreg free
  5998                           
  5999                           ;display.c: 107: break;
  6000  000C24  D060               	goto	i2l2313
  6001  000C26                     i2l2309:
  6002                           
  6003                           ;display.c: 109: Set_Bits(0);
  6004  000C26  0E00               	movlw	0
  6005  000C28  6E01               	movwf	i2Set_Bits@bits,c
  6006  000C2A  0E00               	movlw	0
  6007  000C2C  6E02               	movwf	i2Set_Bits@bits+1,c
  6008  000C2E  0E00               	movlw	0
  6009  000C30  6E03               	movwf	i2Set_Bits@bits+2,c
  6010  000C32  EC74  F007         	call	i2_Set_Bits	;wreg free
  6011                           
  6012                           ;display.c: 110: }
  6013  000C36  D057               	goto	i2l2313
  6014  000C38                     i2l2311:
  6015  000C38  0EFF               	movlw	255
  6016  000C3A  6E0B               	movwf	??i2_Evaluate_Display& (0+255),c
  6017  000C3C  0EFF               	movlw	255
  6018  000C3E  6E0C               	movwf	(??i2_Evaluate_Display+1)& (0+255),c
  6019  000C40  503F               	movf	_display_counter,w,c
  6020  000C42  6E0D               	movwf	(??i2_Evaluate_Display+2)& (0+255),c
  6021  000C44  6A0E               	clrf	(??i2_Evaluate_Display+3)& (0+255),c
  6022  000C46  500B               	movf	??i2_Evaluate_Display,w,c
  6023  000C48  260D               	addwf	??i2_Evaluate_Display+2,f,c
  6024  000C4A  500C               	movf	??i2_Evaluate_Display+1,w,c
  6025  000C4C  220E               	addwfc	??i2_Evaluate_Display+3,f,c
  6026  000C4E  C009  F00F         	movff	i2Evaluate_Display@evaluate,??i2_Evaluate_Display+4
  6027  000C52  C00A  F010         	movff	i2Evaluate_Display@evaluate+1,??i2_Evaluate_Display+5
  6028  000C56  500D               	movf	??i2_Evaluate_Display+2,w,c
  6029  000C58  260F               	addwf	??i2_Evaluate_Display+4,f,c
  6030  000C5A  500E               	movf	??i2_Evaluate_Display+3,w,c
  6031  000C5C  2210               	addwfc	??i2_Evaluate_Display+5,f,c
  6032  000C5E  C00F  FFF6         	movff	??i2_Evaluate_Display+4,tblptrl
  6033  000C62  C010  FFF7         	movff	??i2_Evaluate_Display+5,tblptrh
  6034  000C66  6AF8               	clrf	tblptru,c
  6035  000C68  0E01               	movlw	(high __ramtop+-1)
  6036  000C6A  64F7               	cpfsgt	tblptrh,c
  6037  000C6C  D003               	bra	i2u114_47
  6038  000C6E  0008               	tblrd		*
  6039  000C70  50F5               	movf	tablat,w,c
  6040  000C72  D005               	bra	i2u114_40
  6041  000C74                     i2u114_47:
  6042  000C74  CFF6 FFD9          	movff	tblptrl,fsr2l
  6043  000C78  CFF7 FFDA          	movff	tblptrh,fsr2h
  6044  000C7C  50DF               	movf	indf2,w,c
  6045  000C7E                     i2u114_40:
  6046                           
  6047                           ; Switch size 1, requested type "space"
  6048                           ; Number of cases is 17, Range of values is 45 to 80
  6049                           ; switch strategies available:
  6050                           ; Name         Instructions Cycles
  6051                           ; simple_byte           52    27 (average)
  6052                           ;	Chosen strategy is simple_byte
  6053  000C7E  0A2D               	xorlw	45	; case 45
  6054  000C80  B4D8               	btfsc	status,2,c
  6055  000C82  D7C5               	goto	i2l2307
  6056  000C84  0A1D               	xorlw	29	; case 48
  6057  000C86  B4D8               	btfsc	status,2,c
  6058  000C88  D702               	goto	i2l2275
  6059  000C8A  0A01               	xorlw	1	; case 49
  6060  000C8C  B4D8               	btfsc	status,2,c
  6061  000C8E  D70B               	goto	i2l2277
  6062  000C90  0A03               	xorlw	3	; case 50
  6063  000C92  B4D8               	btfsc	status,2,c
  6064  000C94  D714               	goto	i2l2279
  6065  000C96  0A01               	xorlw	1	; case 51
  6066  000C98  B4D8               	btfsc	status,2,c
  6067  000C9A  D71D               	goto	i2l2281
  6068  000C9C  0A07               	xorlw	7	; case 52
  6069  000C9E  B4D8               	btfsc	status,2,c
  6070  000CA0  D726               	goto	i2l2283
  6071  000CA2  0A01               	xorlw	1	; case 53
  6072  000CA4  B4D8               	btfsc	status,2,c
  6073  000CA6  D72F               	goto	i2l2285
  6074  000CA8  0A03               	xorlw	3	; case 54
  6075  000CAA  B4D8               	btfsc	status,2,c
  6076  000CAC  D738               	goto	i2l2287
  6077  000CAE  0A01               	xorlw	1	; case 55
  6078  000CB0  B4D8               	btfsc	status,2,c
  6079  000CB2  D741               	goto	i2l2289
  6080  000CB4  0A0F               	xorlw	15	; case 56
  6081  000CB6  B4D8               	btfsc	status,2,c
  6082  000CB8  D74A               	goto	i2l2291
  6083  000CBA  0A01               	xorlw	1	; case 57
  6084  000CBC  B4D8               	btfsc	status,2,c
  6085  000CBE  D753               	goto	i2l2293
  6086  000CC0  0A78               	xorlw	120	; case 65
  6087  000CC2  B4D8               	btfsc	status,2,c
  6088  000CC4  D75C               	goto	i2l2295
  6089  000CC6  0A05               	xorlw	5	; case 68
  6090  000CC8  B4D8               	btfsc	status,2,c
  6091  000CCA  D765               	goto	i2l2297
  6092  000CCC  0A01               	xorlw	1	; case 69
  6093  000CCE  B4D8               	btfsc	status,2,c
  6094  000CD0  D76E               	goto	i2l2299
  6095  000CD2  0A09               	xorlw	9	; case 76
  6096  000CD4  B4D8               	btfsc	status,2,c
  6097  000CD6  D777               	goto	i2l2301
  6098  000CD8  0A03               	xorlw	3	; case 79
  6099  000CDA  B4D8               	btfsc	status,2,c
  6100  000CDC  D780               	goto	i2l2303
  6101  000CDE  0A1F               	xorlw	31	; case 80
  6102  000CE0  B4D8               	btfsc	status,2,c
  6103  000CE2  D789               	goto	i2l2305
  6104  000CE4  D7A0               	goto	i2l2309
  6105  000CE6                     i2l2313:
  6106  000CE6  063F               	decf	_display_counter,f,c
  6107  000CE8                     i2l2315:
  6108  000CE8  503F               	movf	_display_counter,w,c
  6109  000CEA  B4D8               	btfsc	status,2,c
  6110  000CEC  0012               	return	
  6111  000CEE  D6CD               	goto	i2l404
  6112  000CF0                     __end_ofi2_Evaluate_Display:
  6113                           	opt stack 0
  6114                           pclatu	equ	0xFFB
  6115                           pclath	equ	0xFFA
  6116                           tblptru	equ	0xFF8
  6117                           tblptrh	equ	0xFF7
  6118                           tblptrl	equ	0xFF6
  6119                           tablat	equ	0xFF5
  6120                           prodh	equ	0xFF4
  6121                           prodl	equ	0xFF3
  6122                           intcon	equ	0xFF2
  6123                           postinc0	equ	0xFEE
  6124                           fsr0h	equ	0xFEA
  6125                           fsr0l	equ	0xFE9
  6126                           wreg	equ	0xFE8
  6127                           postdec1	equ	0xFE5
  6128                           fsr1h	equ	0xFE2
  6129                           fsr1l	equ	0xFE1
  6130                           indf2	equ	0xFDF
  6131                           postinc2	equ	0xFDE
  6132                           postdec2	equ	0xFDD
  6133                           plusw2	equ	0xFDB
  6134                           fsr2h	equ	0xFDA
  6135                           fsr2l	equ	0xFD9
  6136                           status	equ	0xFD8
  6137                           
  6138 ;; *************** function i2_Set_Bits *****************
  6139 ;; Defined at:
  6140 ;;		line 12 in file "display.c"
  6141 ;; Parameters:    Size  Location     Type
  6142 ;;  bits            3    0[COMRAM] PTR const unsigned char 
  6143 ;;		 -> ROM(8191), STR_19(2), STR_18(6), STR_17(7), 
  6144 ;;		 -> STR_16(4), STR_15(6), STR_14(7), STR_13(7), 
  6145 ;;		 -> STR_12(7), STR_11(8), STR_10(4), STR_9(7), 
  6146 ;;		 -> STR_8(6), STR_7(5), STR_6(6), STR_5(6), 
  6147 ;;		 -> STR_4(3), STR_3(7), 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  Set_Bits        1    7[COMRAM] unsigned char 
  6150 ;;  Set_Bits        1    6[COMRAM] unsigned char 
  6151 ;; Return value:  Size  Location     Type
  6152 ;;		None               void
  6153 ;; Registers used:
  6154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1
  6160 ;;      Params:         3       0       0
  6161 ;;      Locals:         2       0       0
  6162 ;;      Temps:          3       0       0
  6163 ;;      Totals:         8       0       0
  6164 ;;Total ram usage:        8 bytes
  6165 ;; Hardware stack levels used:    1
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		i2_Evaluate_Display
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           	psect	text30
  6174  000EE8                     __ptext30:
  6175                           	opt stack 0
  6176  000EE8                     i2_Set_Bits:
  6177                           	opt stack 19
  6178                           
  6179                           ;display.c: 13: unsigned char Bitoutput = 0;
  6180                           
  6181                           ;incstack = 0
  6182  000EE8  0E00               	movlw	0
  6183  000EEA  6E08               	movwf	i2Set_Bits@Bitoutput,c
  6184                           
  6185                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  6186  000EEC  0E00               	movlw	0
  6187  000EEE  6E07               	movwf	i2Set_Bits@bitcount,c
  6188                           
  6189                           ;display.c: 15: bitcount++) {
  6190  000EF0  D037               	goto	i2l2211
  6191  000EF2                     i2l2191:
  6192                           
  6193                           ;display.c: 18: Bitoutput |= 0b00000001;
  6194  000EF2  8008               	bsf	i2Set_Bits@Bitoutput,0,c
  6195                           
  6196                           ;display.c: 19: break;
  6197  000EF4  D034               	goto	i2l2209
  6198  000EF6                     i2l2193:
  6199                           
  6200                           ;display.c: 21: Bitoutput |= 0b00000010;
  6201  000EF6  8208               	bsf	i2Set_Bits@Bitoutput,1,c
  6202                           
  6203                           ;display.c: 22: break;
  6204  000EF8  D032               	goto	i2l2209
  6205  000EFA                     i2l2195:
  6206                           
  6207                           ;display.c: 24: Bitoutput |= 0b00000100;
  6208  000EFA  8408               	bsf	i2Set_Bits@Bitoutput,2,c
  6209                           
  6210                           ;display.c: 25: break;
  6211  000EFC  D030               	goto	i2l2209
  6212  000EFE                     i2l2197:
  6213                           
  6214                           ;display.c: 27: Bitoutput |= 0b00001000;
  6215  000EFE  8608               	bsf	i2Set_Bits@Bitoutput,3,c
  6216                           
  6217                           ;display.c: 28: break;
  6218  000F00  D02E               	goto	i2l2209
  6219  000F02                     i2l2199:
  6220                           
  6221                           ;display.c: 30: Bitoutput |= 0b00010000;
  6222  000F02  8808               	bsf	i2Set_Bits@Bitoutput,4,c
  6223                           
  6224                           ;display.c: 31: break;
  6225  000F04  D02C               	goto	i2l2209
  6226  000F06                     i2l2201:
  6227                           
  6228                           ;display.c: 33: Bitoutput |= 0b00100000;
  6229  000F06  8A08               	bsf	i2Set_Bits@Bitoutput,5,c
  6230                           
  6231                           ;display.c: 34: break;
  6232  000F08  D02A               	goto	i2l2209
  6233  000F0A                     i2l2203:
  6234                           
  6235                           ;display.c: 36: Bitoutput |= 0b01000000;
  6236  000F0A  8C08               	bsf	i2Set_Bits@Bitoutput,6,c
  6237                           
  6238                           ;display.c: 40: }
  6239                           
  6240                           ;display.c: 39: break;
  6241                           
  6242                           ;display.c: 38: default:
  6243                           
  6244                           ;display.c: 37: break;
  6245  000F0C  D028               	goto	i2l2209
  6246  000F0E                     i2l2207:
  6247  000F0E  5007               	movf	i2Set_Bits@bitcount,w,c
  6248  000F10  0D01               	mullw	1
  6249  000F12  50F3               	movf	prodl,w,c
  6250  000F14  2401               	addwf	i2Set_Bits@bits,w,c
  6251  000F16  6E04               	movwf	??i2_Set_Bits& (0+255),c
  6252  000F18  50F4               	movf	prodh,w,c
  6253  000F1A  2002               	addwfc	i2Set_Bits@bits+1,w,c
  6254  000F1C  6E05               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6255  000F1E  0E00               	movlw	0
  6256  000F20  2003               	addwfc	i2Set_Bits@bits+2,w,c
  6257  000F22  6E06               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6258  000F24  C004  FFF6         	movff	??i2_Set_Bits,tblptrl
  6259  000F28  C005  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6260  000F2C  C006  FFF8         	movff	??i2_Set_Bits+2,tblptru
  6261  000F30  0008               	tblrd		*
  6262  000F32  50F5               	movf	tablat,w,c
  6263                           
  6264                           ; Switch size 1, requested type "space"
  6265                           ; Number of cases is 7, Range of values is 65 to 71
  6266                           ; switch strategies available:
  6267                           ; Name         Instructions Cycles
  6268                           ; simple_byte           22    12 (average)
  6269                           ;	Chosen strategy is simple_byte
  6270  000F34  0A41               	xorlw	65	; case 65
  6271  000F36  B4D8               	btfsc	status,2,c
  6272  000F38  D7DC               	goto	i2l2191
  6273  000F3A  0A03               	xorlw	3	; case 66
  6274  000F3C  B4D8               	btfsc	status,2,c
  6275  000F3E  D7DB               	goto	i2l2193
  6276  000F40  0A01               	xorlw	1	; case 67
  6277  000F42  B4D8               	btfsc	status,2,c
  6278  000F44  D7DA               	goto	i2l2195
  6279  000F46  0A07               	xorlw	7	; case 68
  6280  000F48  B4D8               	btfsc	status,2,c
  6281  000F4A  D7D9               	goto	i2l2197
  6282  000F4C  0A01               	xorlw	1	; case 69
  6283  000F4E  B4D8               	btfsc	status,2,c
  6284  000F50  D7D8               	goto	i2l2199
  6285  000F52  0A03               	xorlw	3	; case 70
  6286  000F54  B4D8               	btfsc	status,2,c
  6287  000F56  D7D7               	goto	i2l2201
  6288  000F58  0A01               	xorlw	1	; case 71
  6289  000F5A  B4D8               	btfsc	status,2,c
  6290  000F5C  D7D6               	goto	i2l2203
  6291  000F5E                     i2l2209:
  6292  000F5E  2A07               	incf	i2Set_Bits@bitcount,f,c
  6293  000F60                     i2l2211:
  6294  000F60  5007               	movf	i2Set_Bits@bitcount,w,c
  6295  000F62  0D01               	mullw	1
  6296  000F64  50F3               	movf	prodl,w,c
  6297  000F66  2401               	addwf	i2Set_Bits@bits,w,c
  6298  000F68  6E04               	movwf	??i2_Set_Bits& (0+255),c
  6299  000F6A  50F4               	movf	prodh,w,c
  6300  000F6C  2002               	addwfc	i2Set_Bits@bits+1,w,c
  6301  000F6E  6E05               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6302  000F70  0E00               	movlw	0
  6303  000F72  2003               	addwfc	i2Set_Bits@bits+2,w,c
  6304  000F74  6E06               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6305  000F76  C004  FFF6         	movff	??i2_Set_Bits,tblptrl
  6306  000F7A  C005  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6307  000F7E  C006  FFF8         	movff	??i2_Set_Bits+2,tblptru
  6308  000F82  0008               	tblrd		*
  6309  000F84  50F5               	movf	tablat,w,c
  6310  000F86  0900               	iorlw	0
  6311  000F88  A4D8               	btfss	status,2,c
  6312  000F8A  D7C1               	goto	i2l2207
  6313                           
  6314                           ;display.c: 41: }
  6315                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  6316  000F8C  503F               	movf	_display_counter,w,c
  6317  000F8E  0D01               	mullw	1
  6318  000F90  0E37               	movlw	low _pixels
  6319  000F92  24F3               	addwf	prodl,w,c
  6320  000F94  6ED9               	movwf	fsr2l,c
  6321  000F96  0E00               	movlw	high _pixels
  6322  000F98  20F4               	addwfc	prodh,w,c
  6323  000F9A  6EDA               	movwf	fsr2h,c
  6324  000F9C  C008  FFDF         	movff	i2Set_Bits@Bitoutput,indf2
  6325  000FA0  0012               	return		;funcret
  6326  000FA2                     __end_ofi2_Set_Bits:
  6327                           	opt stack 0
  6328                           pclatu	equ	0xFFB
  6329                           pclath	equ	0xFFA
  6330                           tblptru	equ	0xFF8
  6331                           tblptrh	equ	0xFF7
  6332                           tblptrl	equ	0xFF6
  6333                           tablat	equ	0xFF5
  6334                           prodh	equ	0xFF4
  6335                           prodl	equ	0xFF3
  6336                           intcon	equ	0xFF2
  6337                           postinc0	equ	0xFEE
  6338                           fsr0h	equ	0xFEA
  6339                           fsr0l	equ	0xFE9
  6340                           wreg	equ	0xFE8
  6341                           postdec1	equ	0xFE5
  6342                           fsr1h	equ	0xFE2
  6343                           fsr1l	equ	0xFE1
  6344                           indf2	equ	0xFDF
  6345                           postinc2	equ	0xFDE
  6346                           postdec2	equ	0xFDD
  6347                           plusw2	equ	0xFDB
  6348                           fsr2h	equ	0xFDA
  6349                           fsr2l	equ	0xFD9
  6350                           status	equ	0xFD8
  6351                           
  6352 ;; *************** function i2_Check_Detonators *****************
  6353 ;; Defined at:
  6354 ;;		line 25 in file "ignition.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;		None               void
  6361 ;; Registers used:
  6362 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1
  6368 ;;      Params:         0       0       0
  6369 ;;      Locals:         0       0       0
  6370 ;;      Temps:          0       0       0
  6371 ;;      Totals:         0       0       0
  6372 ;;Total ram usage:        0 bytes
  6373 ;; Hardware stack levels used:    1
  6374 ;; Hardware stack levels required when called:    1
  6375 ;; This function calls:
  6376 ;;		i2_Transmit
  6377 ;; This function is called by:
  6378 ;;		_Isr
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text31
  6383  0015C8                     __ptext31:
  6384                           	opt stack 0
  6385  0015C8                     i2_Check_Detonators:
  6386                           	opt stack 21
  6387                           
  6388                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  6389                           
  6390                           ;incstack = 0
  6391  0015C8  0E54               	movlw	84
  6392  0015CA  6E01               	movwf	i2Transmit@operation,c
  6393  0015CC  5035               	movf	_check_counter,w,c
  6394  0015CE  0D06               	mullw	6
  6395  0015D0  0E01               	movlw	1
  6396  0015D2  26F3               	addwf	prodl,f,c
  6397  0015D4  0E00               	movlw	0
  6398  0015D6  22F4               	addwfc	prodh,f,c
  6399  0015D8  0E00               	movlw	low _pin
  6400  0015DA  24F3               	addwf	prodl,w,c
  6401  0015DC  6ED9               	movwf	fsr2l,c
  6402  0015DE  0E01               	movlw	high _pin
  6403  0015E0  20F4               	addwfc	prodh,w,c
  6404  0015E2  6EDA               	movwf	fsr2h,c
  6405  0015E4  50DF               	movf	indf2,w,c
  6406  0015E6  6E02               	movwf	i2Transmit@port,c
  6407  0015E8  5035               	movf	_check_counter,w,c
  6408  0015EA  0D06               	mullw	6
  6409  0015EC  0E00               	movlw	low _pin
  6410  0015EE  24F3               	addwf	prodl,w,c
  6411  0015F0  6ED9               	movwf	fsr2l,c
  6412  0015F2  0E01               	movlw	high _pin
  6413  0015F4  20F4               	addwfc	prodh,w,c
  6414  0015F6  6EDA               	movwf	fsr2h,c
  6415  0015F8  50DF               	movf	indf2,w,c
  6416  0015FA  EC00  F00B         	call	i2_Transmit
  6417  0015FE  0012               	return		;funcret
  6418  001600                     __end_ofi2_Check_Detonators:
  6419                           	opt stack 0
  6420                           pclatu	equ	0xFFB
  6421                           pclath	equ	0xFFA
  6422                           tblptru	equ	0xFF8
  6423                           tblptrh	equ	0xFF7
  6424                           tblptrl	equ	0xFF6
  6425                           tablat	equ	0xFF5
  6426                           prodh	equ	0xFF4
  6427                           prodl	equ	0xFF3
  6428                           intcon	equ	0xFF2
  6429                           postinc0	equ	0xFEE
  6430                           fsr0h	equ	0xFEA
  6431                           fsr0l	equ	0xFE9
  6432                           wreg	equ	0xFE8
  6433                           postdec1	equ	0xFE5
  6434                           fsr1h	equ	0xFE2
  6435                           fsr1l	equ	0xFE1
  6436                           indf2	equ	0xFDF
  6437                           postinc2	equ	0xFDE
  6438                           postdec2	equ	0xFDD
  6439                           plusw2	equ	0xFDB
  6440                           fsr2h	equ	0xFDA
  6441                           fsr2l	equ	0xFD9
  6442                           status	equ	0xFD8
  6443                           
  6444 ;; *************** function ___awdiv *****************
  6445 ;; Defined at:
  6446 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;  dividend        2    0[COMRAM] int 
  6449 ;;  divisor         2    2[COMRAM] int 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;  quotient        2    6[COMRAM] int 
  6452 ;;  sign            1    5[COMRAM] unsigned char 
  6453 ;;  counter         1    4[COMRAM] unsigned char 
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  2    0[COMRAM] int 
  6456 ;; Registers used:
  6457 ;;		wreg, status,2, status,0
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMRAM   BANK0   BANK1
  6463 ;;      Params:         4       0       0
  6464 ;;      Locals:         4       0       0
  6465 ;;      Temps:          0       0       0
  6466 ;;      Totals:         8       0       0
  6467 ;;Total ram usage:        8 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_Isr
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text32
  6477  001056                     __ptext32:
  6478                           	opt stack 0
  6479  001056                     ___awdiv:
  6480                           	opt stack 22
  6481                           
  6482                           ;incstack = 0
  6483  001056  0E00               	movlw	0
  6484  001058  6E06               	movwf	___awdiv@sign,c
  6485  00105A  AE04               	btfss	___awdiv@divisor+1,7,c
  6486  00105C  D006               	goto	i2l2605
  6487  00105E  6C03               	negf	___awdiv@divisor,c
  6488  001060  1E04               	comf	___awdiv@divisor+1,f,c
  6489  001062  B0D8               	btfsc	status,0,c
  6490  001064  2A04               	incf	___awdiv@divisor+1,f,c
  6491  001066  0E01               	movlw	1
  6492  001068  6E06               	movwf	___awdiv@sign,c
  6493  00106A                     i2l2605:
  6494  00106A  AE02               	btfss	___awdiv@dividend+1,7,c
  6495  00106C  D006               	goto	i2l2611
  6496  00106E  6C01               	negf	___awdiv@dividend,c
  6497  001070  1E02               	comf	___awdiv@dividend+1,f,c
  6498  001072  B0D8               	btfsc	status,0,c
  6499  001074  2A02               	incf	___awdiv@dividend+1,f,c
  6500  001076  0E01               	movlw	1
  6501  001078  1A06               	xorwf	___awdiv@sign,f,c
  6502  00107A                     i2l2611:
  6503  00107A  0E00               	movlw	0
  6504  00107C  6E08               	movwf	___awdiv@quotient+1,c
  6505  00107E  0E00               	movlw	0
  6506  001080  6E07               	movwf	___awdiv@quotient,c
  6507  001082  5003               	movf	___awdiv@divisor,w,c
  6508  001084  1004               	iorwf	___awdiv@divisor+1,w,c
  6509  001086  B4D8               	btfsc	status,2,c
  6510  001088  D01C               	goto	i2l2633
  6511  00108A  0E01               	movlw	1
  6512  00108C  6E05               	movwf	___awdiv@counter,c
  6513  00108E  D004               	goto	i2l2619
  6514  001090                     i2l2617:
  6515  001090  90D8               	bcf	status,0,c
  6516  001092  3603               	rlcf	___awdiv@divisor,f,c
  6517  001094  3604               	rlcf	___awdiv@divisor+1,f,c
  6518  001096  2A05               	incf	___awdiv@counter,f,c
  6519  001098                     i2l2619:
  6520  001098  AE04               	btfss	___awdiv@divisor+1,7,c
  6521  00109A  D7FA               	goto	i2l2617
  6522  00109C                     i2l2621:
  6523  00109C  90D8               	bcf	status,0,c
  6524  00109E  3607               	rlcf	___awdiv@quotient,f,c
  6525  0010A0  3608               	rlcf	___awdiv@quotient+1,f,c
  6526  0010A2  5003               	movf	___awdiv@divisor,w,c
  6527  0010A4  5C01               	subwf	___awdiv@dividend,w,c
  6528  0010A6  5004               	movf	___awdiv@divisor+1,w,c
  6529  0010A8  5802               	subwfb	___awdiv@dividend+1,w,c
  6530  0010AA  A0D8               	btfss	status,0,c
  6531  0010AC  D005               	goto	i2l2629
  6532  0010AE  5003               	movf	___awdiv@divisor,w,c
  6533  0010B0  5E01               	subwf	___awdiv@dividend,f,c
  6534  0010B2  5004               	movf	___awdiv@divisor+1,w,c
  6535  0010B4  5A02               	subwfb	___awdiv@dividend+1,f,c
  6536  0010B6  8007               	bsf	___awdiv@quotient,0,c
  6537  0010B8                     i2l2629:
  6538  0010B8  90D8               	bcf	status,0,c
  6539  0010BA  3204               	rrcf	___awdiv@divisor+1,f,c
  6540  0010BC  3203               	rrcf	___awdiv@divisor,f,c
  6541  0010BE  2E05               	decfsz	___awdiv@counter,f,c
  6542  0010C0  D7ED               	goto	i2l2621
  6543  0010C2                     i2l2633:
  6544  0010C2  5006               	movf	___awdiv@sign,w,c
  6545  0010C4  B4D8               	btfsc	status,2,c
  6546  0010C6  D004               	goto	i2l2637
  6547  0010C8  6C07               	negf	___awdiv@quotient,c
  6548  0010CA  1E08               	comf	___awdiv@quotient+1,f,c
  6549  0010CC  B0D8               	btfsc	status,0,c
  6550  0010CE  2A08               	incf	___awdiv@quotient+1,f,c
  6551  0010D0                     i2l2637:
  6552  0010D0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6553  0010D4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6554  0010D8  0012               	return	
  6555  0010DA                     __end_of___awdiv:
  6556                           	opt stack 0
  6557                           pclatu	equ	0xFFB
  6558                           pclath	equ	0xFFA
  6559                           tblptru	equ	0xFF8
  6560                           tblptrh	equ	0xFF7
  6561                           tblptrl	equ	0xFF6
  6562                           tablat	equ	0xFF5
  6563                           prodh	equ	0xFF4
  6564                           prodl	equ	0xFF3
  6565                           intcon	equ	0xFF2
  6566                           postinc0	equ	0xFEE
  6567                           fsr0h	equ	0xFEA
  6568                           fsr0l	equ	0xFE9
  6569                           wreg	equ	0xFE8
  6570                           postdec1	equ	0xFE5
  6571                           fsr1h	equ	0xFE2
  6572                           fsr1l	equ	0xFE1
  6573                           indf2	equ	0xFDF
  6574                           postinc2	equ	0xFDE
  6575                           postdec2	equ	0xFDD
  6576                           plusw2	equ	0xFDB
  6577                           fsr2h	equ	0xFDA
  6578                           fsr2l	equ	0xFD9
  6579                           status	equ	0xFD8
  6580                           
  6581 ;; *************** function _Receive *****************
  6582 ;; Defined at:
  6583 ;;		line 37 in file "communication.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;		None
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;		None
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      unsigned char 
  6590 ;; Registers used:
  6591 ;;		wreg, status,2
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMRAM   BANK0   BANK1
  6597 ;;      Params:         0       0       0
  6598 ;;      Locals:         0       0       0
  6599 ;;      Temps:          0       0       0
  6600 ;;      Totals:         0       0       0
  6601 ;;Total ram usage:        0 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; This function calls:
  6604 ;;		Nothing
  6605 ;; This function is called by:
  6606 ;;		_Isr
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text33
  6611  00175A                     __ptext33:
  6612                           	opt stack 0
  6613  00175A                     _Receive:
  6614                           	opt stack 22
  6615                           
  6616                           ;communication.c: 38: if(RCSTA1bits.OERR == 1) {
  6617                           
  6618                           ;incstack = 0
  6619  00175A  A2AB               	btfss	4011,1,c	;volatile
  6620  00175C  D003               	goto	i2l2593
  6621                           
  6622                           ;communication.c: 39: RCSTA1bits.CREN = 0;
  6623  00175E  98AB               	bcf	4011,4,c	;volatile
  6624                           
  6625                           ;communication.c: 40: RCSTA1bits.CREN = 1;
  6626  001760  88AB               	bsf	4011,4,c	;volatile
  6627                           
  6628                           ;communication.c: 41: overrun = 1;
  6629  001762  843E               	bsf	_overrun/(0+8),_overrun& (0+7),c
  6630  001764                     i2l2593:
  6631                           
  6632                           ;communication.c: 42: }
  6633                           ;communication.c: 43: return (RCREG1);
  6634  001764  50AE               	movf	4014,w,c	;volatile
  6635  001766  0012               	return	
  6636  001768                     __end_of_Receive:
  6637                           	opt stack 0
  6638                           pclatu	equ	0xFFB
  6639                           pclath	equ	0xFFA
  6640                           tblptru	equ	0xFF8
  6641                           tblptrh	equ	0xFF7
  6642                           tblptrl	equ	0xFF6
  6643                           tablat	equ	0xFF5
  6644                           prodh	equ	0xFF4
  6645                           prodl	equ	0xFF3
  6646                           intcon	equ	0xFF2
  6647                           postinc0	equ	0xFEE
  6648                           fsr0h	equ	0xFEA
  6649                           fsr0l	equ	0xFE9
  6650                           wreg	equ	0xFE8
  6651                           postdec1	equ	0xFE5
  6652                           fsr1h	equ	0xFE2
  6653                           fsr1l	equ	0xFE1
  6654                           indf2	equ	0xFDF
  6655                           postinc2	equ	0xFDE
  6656                           postdec2	equ	0xFDD
  6657                           plusw2	equ	0xFDB
  6658                           fsr2h	equ	0xFDA
  6659                           fsr2l	equ	0xFD9
  6660                           status	equ	0xFD8
  6661                           
  6662 ;; *************** function _Ignite_Detonators *****************
  6663 ;; Defined at:
  6664 ;;		line 29 in file "ignition.c"
  6665 ;; Parameters:    Size  Location     Type
  6666 ;;		None
  6667 ;; Auto vars:     Size  Location     Type
  6668 ;;  counter         1    5[COMRAM] unsigned char 
  6669 ;; Return value:  Size  Location     Type
  6670 ;;		None               void
  6671 ;; Registers used:
  6672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6673 ;; Tracked objects:
  6674 ;;		On entry : 0/0
  6675 ;;		On exit  : 0/0
  6676 ;;		Unchanged: 0/0
  6677 ;; Data sizes:     COMRAM   BANK0   BANK1
  6678 ;;      Params:         0       0       0
  6679 ;;      Locals:         1       0       0
  6680 ;;      Temps:          2       0       0
  6681 ;;      Totals:         3       0       0
  6682 ;;Total ram usage:        3 bytes
  6683 ;; Hardware stack levels used:    1
  6684 ;; Hardware stack levels required when called:    1
  6685 ;; This function calls:
  6686 ;;		i2_Transmit
  6687 ;; This function is called by:
  6688 ;;		_Isr
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           	psect	text34
  6693  001152                     __ptext34:
  6694                           	opt stack 0
  6695  001152                     _Ignite_Detonators:
  6696                           	opt stack 21
  6697                           
  6698                           ;ignition.c: 30: for(unsigned char counter = 0; counter < 30; counter++) {
  6699                           
  6700                           ;incstack = 0
  6701  001152  0E00               	movlw	0
  6702  001154  6E06               	movwf	Ignite_Detonators@counter,c
  6703  001156                     i2l2577:
  6704  001156  0E1D               	movlw	29
  6705  001158  6406               	cpfsgt	Ignite_Detonators@counter,c
  6706  00115A  D001               	goto	i2l2581
  6707  00115C  0012               	return	
  6708  00115E                     i2l2581:
  6709                           
  6710                           ;ignition.c: 31: if(pin[counter].time == current_time) {
  6711  00115E  5006               	movf	Ignite_Detonators@counter,w,c
  6712  001160  0D06               	mullw	6
  6713  001162  0E04               	movlw	4
  6714  001164  26F3               	addwf	prodl,f,c
  6715  001166  0E00               	movlw	0
  6716  001168  22F4               	addwfc	prodh,f,c
  6717  00116A  0E00               	movlw	low _pin
  6718  00116C  24F3               	addwf	prodl,w,c
  6719  00116E  6ED9               	movwf	fsr2l,c
  6720  001170  0E01               	movlw	high _pin
  6721  001172  20F4               	addwfc	prodh,w,c
  6722  001174  6EDA               	movwf	fsr2h,c
  6723  001176  5033               	movf	_current_time,w,c
  6724  001178  18DE               	xorwf	postinc2,w,c
  6725  00117A  E11F               	bnz	i2l2585
  6726  00117C  5034               	movf	_current_time+1,w,c
  6727  00117E  18DE               	xorwf	postinc2,w,c
  6728  001180  A4D8               	btfss	status,2,c
  6729  001182  D01B               	goto	i2l2585
  6730                           
  6731                           ;ignition.c: 32: Transmit(pin[counter].slave, 'I', pin[counter].output);
  6732  001184  0E49               	movlw	73
  6733  001186  6E01               	movwf	i2Transmit@operation,c
  6734  001188  5006               	movf	Ignite_Detonators@counter,w,c
  6735  00118A  0D06               	mullw	6
  6736  00118C  0E01               	movlw	1
  6737  00118E  26F3               	addwf	prodl,f,c
  6738  001190  0E00               	movlw	0
  6739  001192  22F4               	addwfc	prodh,f,c
  6740  001194  0E00               	movlw	low _pin
  6741  001196  24F3               	addwf	prodl,w,c
  6742  001198  6ED9               	movwf	fsr2l,c
  6743  00119A  0E01               	movlw	high _pin
  6744  00119C  20F4               	addwfc	prodh,w,c
  6745  00119E  6EDA               	movwf	fsr2h,c
  6746  0011A0  50DF               	movf	indf2,w,c
  6747  0011A2  6E02               	movwf	i2Transmit@port,c
  6748  0011A4  5006               	movf	Ignite_Detonators@counter,w,c
  6749  0011A6  0D06               	mullw	6
  6750  0011A8  0E00               	movlw	low _pin
  6751  0011AA  24F3               	addwf	prodl,w,c
  6752  0011AC  6ED9               	movwf	fsr2l,c
  6753  0011AE  0E01               	movlw	high _pin
  6754  0011B0  20F4               	addwfc	prodh,w,c
  6755  0011B2  6EDA               	movwf	fsr2h,c
  6756  0011B4  50DF               	movf	indf2,w,c
  6757  0011B6  EC00  F00B         	call	i2_Transmit
  6758  0011BA                     i2l2585:
  6759  0011BA  2A06               	incf	Ignite_Detonators@counter,f,c
  6760  0011BC  D7CC               	goto	i2l2577
  6761  0011BE                     __end_of_Ignite_Detonators:
  6762                           	opt stack 0
  6763                           pclatu	equ	0xFFB
  6764                           pclath	equ	0xFFA
  6765                           tblptru	equ	0xFF8
  6766                           tblptrh	equ	0xFF7
  6767                           tblptrl	equ	0xFF6
  6768                           tablat	equ	0xFF5
  6769                           prodh	equ	0xFF4
  6770                           prodl	equ	0xFF3
  6771                           intcon	equ	0xFF2
  6772                           postinc0	equ	0xFEE
  6773                           fsr0h	equ	0xFEA
  6774                           fsr0l	equ	0xFE9
  6775                           wreg	equ	0xFE8
  6776                           postdec1	equ	0xFE5
  6777                           fsr1h	equ	0xFE2
  6778                           fsr1l	equ	0xFE1
  6779                           indf2	equ	0xFDF
  6780                           postinc2	equ	0xFDE
  6781                           postdec2	equ	0xFDD
  6782                           plusw2	equ	0xFDB
  6783                           fsr2h	equ	0xFDA
  6784                           fsr2l	equ	0xFD9
  6785                           status	equ	0xFD8
  6786                           
  6787 ;; *************** function i2_Transmit *****************
  6788 ;; Defined at:
  6789 ;;		line 15 in file "communication.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;  receiver        1    wreg     unsigned char 
  6792 ;;  operation       1    0[COMRAM] unsigned char 
  6793 ;;  port            1    1[COMRAM] unsigned char 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  receiver        1    2[COMRAM] unsigned char 
  6796 ;; Return value:  Size  Location     Type
  6797 ;;		None               void
  6798 ;; Registers used:
  6799 ;;		wreg, status,2
  6800 ;; Tracked objects:
  6801 ;;		On entry : 0/0
  6802 ;;		On exit  : 0/0
  6803 ;;		Unchanged: 0/0
  6804 ;; Data sizes:     COMRAM   BANK0   BANK1
  6805 ;;      Params:         2       0       0
  6806 ;;      Locals:         1       0       0
  6807 ;;      Temps:          0       0       0
  6808 ;;      Totals:         3       0       0
  6809 ;;Total ram usage:        3 bytes
  6810 ;; Hardware stack levels used:    1
  6811 ;; This function calls:
  6812 ;;		Nothing
  6813 ;; This function is called by:
  6814 ;;		_Ignite_Detonators
  6815 ;;		i2_Check_Detonators
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           
  6819                           	psect	text35
  6820  001600                     __ptext35:
  6821                           	opt stack 0
  6822  001600                     i2_Transmit:
  6823                           	opt stack 21
  6824                           
  6825                           ;incstack = 0
  6826                           ;i2Transmit@receiver stored from wreg
  6827  001600  6E03               	movwf	i2Transmit@receiver,c
  6828                           
  6829                           ;communication.c: 17: PORTBbits.RB5 = 1;
  6830  001602  8A81               	bsf	3969,5,c	;volatile
  6831                           
  6832                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  6833  001604  98AB               	bcf	4011,4,c	;volatile
  6834                           
  6835                           ;communication.c: 20: __nop();
  6836  001606  F000               	nop	
  6837  001608                     i2l491:
  6838  001608  A89E               	btfss	3998,4,c	;volatile
  6839  00160A  D7FE               	goto	i2l491
  6840                           
  6841                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  6842  00160C  80AC               	bsf	4012,0,c	;volatile
  6843                           
  6844                           ;communication.c: 23: TXREG1 = receiver;
  6845  00160E  C003  FFAD         	movff	i2Transmit@receiver,4013	;volatile
  6846  001612                     i2l494:
  6847  001612  A89E               	btfss	3998,4,c	;volatile
  6848  001614  D7FE               	goto	i2l494
  6849                           
  6850                           ;communication.c: 25: TXREG1 = 0xAA;
  6851  001616  0EAA               	movlw	170
  6852  001618  6EAD               	movwf	4013,c	;volatile
  6853  00161A                     i2l497:
  6854  00161A  A89E               	btfss	3998,4,c	;volatile
  6855  00161C  D7FE               	goto	i2l497
  6856                           
  6857                           ;communication.c: 27: TXREG1 = operation;
  6858  00161E  C001  FFAD         	movff	i2Transmit@operation,4013	;volatile
  6859  001622                     i2l500:
  6860  001622  A89E               	btfss	3998,4,c	;volatile
  6861  001624  D7FE               	goto	i2l500
  6862                           
  6863                           ;communication.c: 29: TXREG1 = port;
  6864  001626  C002  FFAD         	movff	i2Transmit@port,4013	;volatile
  6865  00162A                     i2l503:
  6866  00162A  A2AC               	btfss	4012,1,c	;volatile
  6867  00162C  D7FE               	goto	i2l503
  6868                           
  6869                           ;communication.c: 31: PORTBbits.RB5 = 0;
  6870  00162E  9A81               	bcf	3969,5,c	;volatile
  6871                           
  6872                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  6873  001630  88AB               	bsf	4011,4,c	;volatile
  6874                           
  6875                           ;communication.c: 33: __nop();
  6876  001632  F000               	nop	
  6877  001634  0012               	return		;funcret
  6878  001636                     __end_ofi2_Transmit:
  6879                           	opt stack 0
  6880                           pclatu	equ	0xFFB
  6881                           pclath	equ	0xFFA
  6882                           tblptru	equ	0xFF8
  6883                           tblptrh	equ	0xFF7
  6884                           tblptrl	equ	0xFF6
  6885                           tablat	equ	0xFF5
  6886                           prodh	equ	0xFF4
  6887                           prodl	equ	0xFF3
  6888                           intcon	equ	0xFF2
  6889                           postinc0	equ	0xFEE
  6890                           fsr0h	equ	0xFEA
  6891                           fsr0l	equ	0xFE9
  6892                           wreg	equ	0xFE8
  6893                           postdec1	equ	0xFE5
  6894                           fsr1h	equ	0xFE2
  6895                           fsr1l	equ	0xFE1
  6896                           indf2	equ	0xFDF
  6897                           postinc2	equ	0xFDE
  6898                           postdec2	equ	0xFDD
  6899                           plusw2	equ	0xFDB
  6900                           fsr2h	equ	0xFDA
  6901                           fsr2l	equ	0xFD9
  6902                           status	equ	0xFD8
  6903                           pclatu	equ	0xFFB
  6904                           pclath	equ	0xFFA
  6905                           tblptru	equ	0xFF8
  6906                           tblptrh	equ	0xFF7
  6907                           tblptrl	equ	0xFF6
  6908                           tablat	equ	0xFF5
  6909                           prodh	equ	0xFF4
  6910                           prodl	equ	0xFF3
  6911                           intcon	equ	0xFF2
  6912                           postinc0	equ	0xFEE
  6913                           fsr0h	equ	0xFEA
  6914                           fsr0l	equ	0xFE9
  6915                           wreg	equ	0xFE8
  6916                           postdec1	equ	0xFE5
  6917                           fsr1h	equ	0xFE2
  6918                           fsr1l	equ	0xFE1
  6919                           indf2	equ	0xFDF
  6920                           postinc2	equ	0xFDE
  6921                           postdec2	equ	0xFDD
  6922                           plusw2	equ	0xFDB
  6923                           fsr2h	equ	0xFDA
  6924                           fsr2l	equ	0xFD9
  6925                           status	equ	0xFD8
  6926                           
  6927                           	psect	rparam
  6928  0000                     pclatu	equ	0xFFB
  6929                           pclath	equ	0xFFA
  6930                           tblptru	equ	0xFF8
  6931                           tblptrh	equ	0xFF7
  6932                           tblptrl	equ	0xFF6
  6933                           tablat	equ	0xFF5
  6934                           prodh	equ	0xFF4
  6935                           prodl	equ	0xFF3
  6936                           intcon	equ	0xFF2
  6937                           postinc0	equ	0xFEE
  6938                           fsr0h	equ	0xFEA
  6939                           fsr0l	equ	0xFE9
  6940                           wreg	equ	0xFE8
  6941                           postdec1	equ	0xFE5
  6942                           fsr1h	equ	0xFE2
  6943                           fsr1l	equ	0xFE1
  6944                           indf2	equ	0xFDF
  6945                           postinc2	equ	0xFDE
  6946                           postdec2	equ	0xFDD
  6947                           plusw2	equ	0xFDB
  6948                           fsr2h	equ	0xFDA
  6949                           fsr2l	equ	0xFD9
  6950                           status	equ	0xFD8
  6951                           
  6952                           	psect	temp
  6953  000040                     btemp:
  6954                           	opt stack 0
  6955  000040                     	ds	1
  6956  0000                     int$flags	set	btemp
  6957                           pclatu	equ	0xFFB
  6958                           pclath	equ	0xFFA
  6959                           tblptru	equ	0xFF8
  6960                           tblptrh	equ	0xFF7
  6961                           tblptrl	equ	0xFF6
  6962                           tablat	equ	0xFF5
  6963                           prodh	equ	0xFF4
  6964                           prodl	equ	0xFF3
  6965                           intcon	equ	0xFF2
  6966                           postinc0	equ	0xFEE
  6967                           fsr0h	equ	0xFEA
  6968                           fsr0l	equ	0xFE9
  6969                           wreg	equ	0xFE8
  6970                           postdec1	equ	0xFE5
  6971                           fsr1h	equ	0xFE2
  6972                           fsr1l	equ	0xFE1
  6973                           indf2	equ	0xFDF
  6974                           postinc2	equ	0xFDE
  6975                           postdec2	equ	0xFDD
  6976                           plusw2	equ	0xFDB
  6977                           fsr2h	equ	0xFDA
  6978                           fsr2l	equ	0xFD9
  6979                           status	equ	0xFD8


Data Sizes:
    Strings     83
    Constant    0
    Data        180
    BSS         22
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     44      63
    BANK0           160     29      34
    BANK1           256      0     180

Pointer List with Targets:

    Write_Display_Byte@write_data	PTR unsigned char  size(2) Largest target is 7
		 -> pixels(COMRAM[7]), 

    Evaluate_Display@evaluate	PTR const unsigned char  size(2) Largest target is 4
		 -> signs(BANK0[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    Set_Bits@bits	PTR const unsigned char  size(3) Largest target is 8191
		 -> ROM(CODE[8191]), STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[4]), STR_15(CODE[6]), STR_14(CODE[7]), STR_13(CODE[7]), 
		 -> STR_12(CODE[7]), STR_11(CODE[8]), STR_10(CODE[4]), STR_9(CODE[7]), 
		 -> STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[3]), STR_3(CODE[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Isr->i2_Set_Display
    i2_Set_Display->i2_Evaluate_Signs
    i2_Evaluate_Signs->i2_Evaluate_Display
    i2_Evaluate_Display->i2_Set_Bits
    i2_Check_Detonators->i2_Transmit
    _Ignite_Detonators->i2_Transmit

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _Check_Detonators->_Transmit
    _Check_Buttons->_Del_Data
    _Del_Data->_Load_Data
    _Load_Data->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   35514
                      _Check_Buttons
                   _Check_Detonators
                               _Init
                          _Load_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Detonators                                     0     0      0     331
                           _Transmit
 ---------------------------------------------------------------------------------
 (2) _Transmit                                             3     1      2     331
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0   19327
                                             27 BANK0      2     2      0
                           _Del_Data
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (2) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Del_Data                                             1     1      0   11753
                                             26 BANK0      1     1      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Load_Data
                          _Save_Data
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     592
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Load_Data                                            2     2      0    9053
                                             24 BANK0      2     2      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Read_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Set_Display                                          4     1      3    6803
                                             20 BANK0      4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
                 _Write_Display_Byte
 ---------------------------------------------------------------------------------
 (2) _Write_Display_Byte                                   7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _Evaluate_Signs                                       3     1      2    2568
                                             17 BANK0      3     1      2
                   _Evaluate_Display
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Display                                     9     7      2    1941
                                              8 BANK0      9     7      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (4) _Set_Bits                                             8     5      3    1571
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2     111
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Isr                                                 20    20      0    3015
                                             24 COMRAM    20    20      0
                  _Ignite_Detonators
                            _Receive
                            ___awdiv
                 i2_Check_Detonators
                      i2_Set_Display
 ---------------------------------------------------------------------------------
 (9) i2_Set_Display                                        4     1      3    1996
                                             20 COMRAM     4     1      3
                 i2_Evaluate_Display
                   i2_Evaluate_Signs
               i2_Write_Display_Byte
 ---------------------------------------------------------------------------------
 (10) i2_Write_Display_Byte                                7     5      2     116
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) i2_Evaluate_Signs                                    3     1      2    1034
                                             17 COMRAM     3     1      2
                 i2_Evaluate_Display
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2_Evaluate_Display                                  9     7      2     684
                                              8 COMRAM     9     7      2
                         i2_Set_Bits
 ---------------------------------------------------------------------------------
 (12) i2_Set_Bits                                          8     5      3     588
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (9) i2_Check_Detonators                                   0     0      0     170
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Ignite_Detonators                                    3     3      0     282
                                              3 COMRAM     3     3      0
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (10) i2_Transmit                                          3     1      2     170
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Del_Data
       _Delay_Routine
       _Evaluate_Display
         _Set_Bits
       _Load_Data
         _Delay_Routine
         _Evaluate_Display
           _Set_Bits
         _Read_Data
         _Set_Display
           _Evaluate_Display
             _Set_Bits
           _Evaluate_Signs
             _Evaluate_Display
               _Set_Bits
             ___lwmod
           _Write_Display_Byte
       _Save_Data
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
       _Write_Display_Byte
     _Start_Timer
   _Check_Detonators
     _Transmit
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Load_Data
     _Delay_Routine
     _Evaluate_Display
       _Set_Bits
     _Read_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwmod
       _Write_Display_Byte
   _Set_Display
     _Evaluate_Display
       _Set_Bits
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
       ___lwmod
     _Write_Display_Byte

 _Isr (ROOT)
   _Ignite_Detonators
     i2_Transmit
   _Receive
   ___awdiv
   i2_Check_Detonators
     i2_Transmit
   i2_Set_Display
     i2_Evaluate_Display
       i2_Set_Bits
     i2_Evaluate_Signs
       i2_Evaluate_Display
         i2_Set_Bits
       i2___lwmod
     i2_Write_Display_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1D      22       4       21.3%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2C      3F       1       67.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115       6        0.0%
DATA                 0      0     115       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Feb 03 22:00:13 2017

        Evaluate_Display@evaluate 0068                        i2_Transmit 1600  
                              l94 0288                                l98 034C  
                    ___awdiv@sign 0006                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                               l110 04B6  
                             l104 0404                               l114 061C  
                             l404 079A                               l500 15B4  
                             l430 113C                               l342 13E8  
                             l503 15BC                               l339 13BA  
                             l491 159A                               l494 15A4  
                             l497 15AC                    ?i2_Set_Display 0015  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _Isr 0008                               _pin 0100  
                  _Evaluate_Signs 10DA                               prod 000FF3  
                             wreg 000FE8                 Set_Bits@Bitoutput 0067  
                      _TXSTA1bits 000FAC                      __CFG_LVP$OFF 000000  
                            ?_Isr 0001                              l1002 1340  
                            l3023 14B2                              l3113 0318  
                            l3019 14A8                              l3029 14CA  
                            l3133 036E                              l3109 02AA  
                            l3223 0694                              l3215 063C  
                            l3151 0482                              l3137 03D0  
                            l3251 16A0                              l3181 053A  
                            l3173 0522                              l2801 0870  
                            l3177 052E                              l3169 04D6  
                            l2811 0906                              l2803 088E  
                            l3187 054A                              l2821 099C  
                            l2813 0924                              l2805 08AC  
                            l3189 0560                              l2815 0942  
                            l2807 08CA                              l2823 09B4  
                            l2911 1210                              l2761 0E0C  
                            l2817 0960                              l2809 08E8  
                            l2825 0A78                              l2841 1332  
                            l2833 12FC                              l2905 11F6  
                            l2771 0E2A                              l2763 0E12  
                            l2819 097E                              l2827 0A7A  
                            l2835 1308                              l2851 10EA  
                            l2773 0E30                              l2765 0E18  
                            l2781 0E98                              l2837 130E  
                            l2909 1204                              l2767 0E1E  
                            l2791 07DA                              l2847 10E0  
                            l2951 0D0E                              l2769 0E24  
                            l2777 0E36                              l2793 07F8  
                            l2961 0D4C                              l2779 0E94  
                            l2795 0816                              l2787 079E  
                            l2955 0D18                              l2885 1672  
                            l2797 0834                              l2789 07BC  
                            l2893 11C4                              l2799 0852  
                            l2889 1686                              STR_1 0266  
                            STR_2 026A                              STR_3 0223  
                            STR_4 0263                              STR_5 0245  
                            STR_6 023F                              STR_7 025D  
                            STR_8 024B                              STR_9 0238  
                            u2447 167A                              u1920 0A10  
                            u1927 0A06                              _Init 16E8  
                            _main 1696                              fsr0h 000FEA  
                            fsr1h 000FE2                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0040                     __CFG_BORV$190 000000  
                    Transmit@port 0061                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 0216                     __CFG_IESO$OFF 000000  
                  Save_Data@store 0060                _Write_Display_Byte 1286  
                    ___param_bank 000010                     _InitInterrupt 1768  
                           ??_Isr 0019                   __end_of_Receive 1768  
             ?_Write_Display_Byte 0060                      _BAUDCON1bits 000FB8  
                           ?_Init 0001                             ?_main 0001  
                 __end_of___awdiv 10DA                             _EEADR 000FA9  
                           STR_10 0262                             STR_11 021B  
                           STR_12 022A                             STR_13 0231  
                           STR_14 0223                             STR_15 0257  
                           STR_16 0226                             STR_17 0223  
                           STR_18 0251                             STR_19 0243  
          __end_of_Evaluate_Signs 1152                   ___awdiv@divisor 0003  
               _InitMiscellaneous 1774                   __end_of___lwmod 134A  
                           i2l500 1622                             i2l404 0A8A  
                           i2l430 1274                             i2l503 162A  
                           i2l491 1608                             i2l494 1612  
                           i2l576 00A4                             i2l497 161A  
                           i2l577 00A0                             i2l589 01DA  
                 ___awdiv@counter 0005                 _Ignite_Detonators 1152  
                           _TMR1H 000FCF                             _TMR3H 000FB3  
                           _TMR1L 000FCE                             _TMR3L 000FB2  
                           _PORTA 000F80                             _PORTB 000F81  
                           _PORTC 000F82                             _PORTE 000F84  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISE 000F96  
                   __CFG_WRT0$OFF 000000          __end_of_InitTransmission 16E8  
                   __CFG_WRT1$OFF 000000                ?_InitMiscellaneous 0001  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                ?_Ignite_Detonators 0001  
               i2Set_Display@type 0018          __end_ofi2_Evaluate_Signs 1286  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                  _Evaluate_Display 078E  
                  __CFG_EBTRB$OFF 000000                             _signs 007F  
              __CFG_MCLRE$EXTMCLR 000000              ??_Write_Display_Byte 0062  
                  __pbitbssCOMRAM 01F0                    __CFG_BOREN$OFF 000000  
             ??_InitMiscellaneous 0060                             tablat 000FF5  
             ??_Ignite_Detonators 0004                             plusw2 000FDB  
                __end_of_Del_Data 14D0                             status 000FD8  
                     ?i2_Set_Bits 0001                __size_ofi2___lwmod 0042  
                  ?_InitInterrupt 0001                   __initialization 1442  
                    __end_of_Init 1706                      __end_of_main 16C4  
                     ?i2_Transmit 0001                  __end_of_InitPort 175A  
                __end_of_InitTris 1748            Set_Display@information 0074  
       __end_of_InitMiscellaneous 177A                   ??i2_Set_Display 0018  
                          ??_Init 0060         __end_of_Ignite_Detonators 11BE  
                   ??_Set_Display 0077                            ??_main 007D  
                __end_of_Set_Bits 0EE8                   ?_Evaluate_Signs 0071  
                   __activetblptr 000002        __end_ofi2_Evaluate_Display 0CF0  
                __end_of_Transmit 15C8                            _EEDATA 000FA8  
                          _CCPR1H 000FBF                            _CCPR1L 000FBE  
                          _EECON2 000FA7                  ___awdiv@dividend 0001  
                          _ANSELA 000F38                            _ANSELB 000F39  
                          _ANSELC 000F3A                            i2l1002 154A  
                          i2l2201 0F06                            i2l2203 0F0A  
                          i2l2211 0F60                            i2l2301 0BC6  
                          i2l2207 0F0E                            i2l2303 0BDE  
                          i2l2311 0C38                            i2l2209 0F5E  
                          i2l2305 0BF6                            i2l2313 0CE6  
                          i2l2321 1520                            i2l2307 0C0E  
                          i2l2315 0CE8                            i2l2323 1528  
                          i2l2309 0C26                            i2l2325 152C  
                          i2l2191 0EF2                            i2l2193 0EF6  
                          i2l2281 0AD6                            i2l2329 1540  
                          i2l2611 107A                            i2l2195 0EFA  
                          i2l2291 0B4E                            i2l2283 0AEE  
                          i2l2275 0A8E                            i2l2621 109C  
                          i2l2605 106A                            i2l2197 0EFE  
                          i2l2293 0B66                            i2l2285 0B06  
                          i2l2277 0AA6                            i2l2373 122E  
                  __CFG_WDTEN$OFF 000000                            i2l2199 0F02  
                          i2l2295 0B7E                            i2l2287 0B1E  
                          i2l2279 0ABE                            i2l2617 1090  
                          i2l2633 10C2                            i2l2297 0B96  
                          i2l2289 0B36                            i2l2369 1226  
                          i2l2619 1098                            i2l2299 0BAE  
                          i2l2581 115E                            i2l2637 10D0  
                          i2l2629 10B8                            i2l2645 134E  
                          i2l2661 1388                            i2l2741 01A2  
                          i2l2663 1392                            i2l2585 11BA  
                          i2l2577 1156                            i2l2593 1764  
                          i2l2657 137A                            i2l2737 016C  
                          i2l2745 01C0                            i2l2755 01D4  
                          i2l2695 006E                            i2l2689 005C  
                          _RCREG1 000FAE                __size_of_Load_Data 010E  
                          _OSCCON 000FD3                __size_of_InitAnsel 0014  
                          _SPBRG1 000FAF                            _SSP1IF 007CF3  
              __size_of_Read_Data 004E                __size_of_InitTimer 0030  
                          _TXREG1 000FAD                         ??_Receive 0001  
              i2Set_Display@value 0016                    __CFG_XINST$OFF 000000  
                    _CCPTMRS0bits 000F49       __size_ofi2_Check_Detonators 0038  
              __size_of_Save_Data 0054                         ??___awdiv 0005  
                       ??___lwmod 0064                            clear_0 1456  
                ___awdiv@quotient 0007                            _pixels 0037  
          __size_of_Check_Buttons 051E  i2Evaluate_Signs@evaluation_value 0012  
  Evaluate_Signs@evaluation_value 0071                      __mediumconst 0000  
               __end_ofi2___lwmod 1554               __size_ofi2_Set_Bits 00BA  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                i2Transmit@receiver 0003  
             __end_of_Set_Display 1222                   __CFG_HFOFST$OFF 000000  
             __size_ofi2_Transmit 0036              Isr@pixel_index_array 002A  
                      __accesstop 0060           __end_of__initialization 147C  
                 __CFG_PBADEN$OFF 000000                   ??_InitInterrupt 0060  
                   ___rparam_used 000001                    i2Transmit@port 0002  
              i2___lwmod@dividend 0001                    __pcstackCOMRAM 0001  
       __size_of_Check_Detonators 003C                      __pidataBANK1 0FA2  
                   ??_Start_Timer 0060        __size_of_InitMiscellaneous 0006  
      __size_of_Ignite_Detonators 006C                 __end_of_Load_Data 0DFE  
               __end_of_InitAnsel 1736                 __end_of_Read_Data 1442  
               __end_of_InitTimer 1666                         ?_Del_Data 0001  
    __end_ofi2_Write_Display_Byte 1512                 __end_of_Save_Data 13F4  
                      __pbssBANK0 007D                Isr@pixel_index_bit 002B  
                 __CFG_PLLCFG$OFF 000000                     _Check_Buttons 0270  
                       ?_InitPort 0001                         ?_InitTris 0001  
                      __pnvCOMRAM 003F                         ?_Set_Bits 0060  
              __CFG_CCP2MX$PORTC1 000000          __end_of_Evaluate_Display 0A82  
              __CFG_CCP3MX$PORTB5 000000                         ?_Transmit 0060  
                     _Set_Display 11BE                        ??_Del_Data 007A  
          __size_of_Delay_Routine 0030               __end_of_Start_Timer 1722  
               ?_InitTransmission 0001                 __CFG_PRICLKEN$OFF 000000  
                         _SSP1BUF 000FC9                 ?i2_Evaluate_Signs 0012  
              ??_InitTransmission 0060                ??i2_Evaluate_Signs 0014  
                  ?_Check_Buttons 0001                        ??_InitPort 0060  
                      ??_InitTris 0060       i2Write_Display_Byte@counter 0007  
                    ??i2_Set_Bits 0004                        ??_Set_Bits 0063  
                 __CFG_PWRTEN$OFF 000000                           _Receive 175A  
                         __Hparam 0000                           __Lparam 0000  
                Load_Data@counter 0079                           ___awdiv 1056  
                ??_Evaluate_Signs 0073                      ??i2_Transmit 0003  
                      ??_Transmit 0062                           ___lwmod 12E8  
                    __psmallconst 021A                   __CFG_STVREN$OFF 000000  
                         __pcinit 1442                           __ramtop 0200  
                         __ptext0 1696                           __ptext1 16E8  
                         __ptext2 1736                           __ptext3 16C4  
                         __ptext4 1636                           __ptext5 1748  
                         __ptext6 1774                           __ptext7 1768  
                         __ptext8 1722                           __ptext9 1554  
                       _T1CONbits 000FCD                      __size_of_Isr 020E  
                 Set_Display@type 0077                         _T3CONbits 000FB1  
              __end_ofi2_Set_Bits 0FA2                           _overrun 01F2  
            end_of_initialization 147C       __size_of_Write_Display_Byte 0062  
              __end_ofi2_Transmit 1636                     __Lmediumconst 0000  
              i2_Evaluate_Display 0A82                     _Delay_Routine 1666  
            i2_Write_Display_Byte 14D0               ?i2_Evaluate_Display 0009  
                       _RCSTAbits 000FAB                  _Check_Detonators 1554  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
          i2Evaluate_Display@size 0011                       _Start_Timer 1706  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                       _PORTCbits 000F82               i2Transmit@operation 0001  
           __end_ofi2_Set_Display 13A0                         _TRISCbits 000F94  
            ??i2_Evaluate_Display 000B                   ??_Check_Buttons 007B  
        Ignite_Detonators@counter 0006                         i2___lwmod 1512  
                   _check_counter 0035                    ?_Delay_Routine 0001  
                     _CCP1CONbits 000FBD             ?i2_Write_Display_Byte 0001  
      __end_ofi2_Check_Detonators 1600          i2Set_Display@information 0015  
                    Set_Bits@bits 0060               start_initialization 1442  
                       _Load_Data 0CF0                         _InitAnsel 1722  
                    _ignite_ready 01F0                 __size_of_Del_Data 0046  
                     __end_of_Isr 0216                         _Read_Data 13F4  
                       _InitTimer 1636                        ?i2___lwmod 0001  
                Set_Bits@bitcount 0066                         _Save_Data 13A0  
  i2Write_Display_Byte@write_data 0001                 __size_of_InitPort 0012  
               __size_of_InitTris 0012             __end_of_InitInterrupt 1774  
               __size_of_Set_Bits 00EA                 ?_Evaluate_Display 0068  
                     __pdataBANK1 0100                ??_Evaluate_Display 006A  
                  _slave_selected 007E                 __size_of_Transmit 0038  
                    ?_Set_Display 0074            Save_Data@store_address 0062  
                     __pbssCOMRAM 002D                        ?_Load_Data 0001  
                      ?_InitAnsel 0001                     __pcstackBANK0 0060  
                      ?_Read_Data 0060                        ?_InitTimer 0001  
               i2___lwmod@divisor 0003                 i2___lwmod@counter 0005  
                 ??_Delay_Routine 0060                        ?_Save_Data 0060  
          ??i2_Write_Display_Byte 0003                      _current_time 0033  
                _master_addressed 01F1                          ?_Receive 0001  
       __size_of_InitTransmission 0024         __size_ofi2_Evaluate_Signs 0064  
           Read_Data@read_address 0064                         __pintcode 0008  
                        ?___awdiv 0001                          ?___lwmod 0060  
                     __smallconst 021A          __end_of_Check_Detonators 1590  
                     ??i2___lwmod 0005                          _PIE1bits 000F9D  
             i2Set_Bits@Bitoutput 0008                          i2u114_40 0C7E  
                        i2u114_47 0C74                          _PIR1bits 000F9E  
                        i2u185_44 0152                          i2u185_45 014E  
                        _PIR2bits 000FA1                          i2u187_44 0184  
                        i2u187_45 0180                  __CFG_WDTPS$32768 000000  
      i2Evaluate_Display@evaluate 0009                          _SSP1CON1 000FC6  
                        _SSP1STAT 000FC7                      ?_Start_Timer 0001  
                  i2Set_Bits@bits 0001                          _Del_Data 148A  
                     ??_Load_Data 0078                       ??_InitAnsel 0060  
                 _receive_counter 0036                       ??_Read_Data 0062  
                     ??_InitTimer 0060        __end_of_Write_Display_Byte 12E8  
                       copy_data0 1470                          _InitPort 1748  
                        _InitTris 1736                       ??_Save_Data 0063  
               Transmit@operation 0060                        _EECON1bits 000FA6  
                 Isr@search_index 002C                          _Set_Bits 0DFE  
                    _pin_selected 007D                          __Hrparam 0000  
                __size_of_Receive 000E                          __Lrparam 0000  
               __CFG_P2BMX$PORTB5 000000                          _Transmit 1590  
                __size_of___awdiv 0084                  __size_of___lwmod 0062  
    i2Evaluate_Signs@valuecounter 0014                i2_Check_Detonators 15C8  
            __size_of_Set_Display 0064           __size_of_Evaluate_Signs 0078  
     __size_ofi2_Evaluate_Display 026E               ?i2_Check_Detonators 0001  
                        __ptext10 1590                          __ptext11 0270  
                        __ptext20 078E                          __ptext12 1706  
                        __ptext21 0DFE                          __ptext13 148A  
                        __ptext30 0EE8                          __ptext22 13F4  
                        __ptext14 13A0                          __ptext31 15C8  
                        __ptext23 1666                          __ptext15 0CF0  
                        __ptext32 1056                          __ptext16 11BE  
                        __ptext33 175A                          __ptext25 134A  
                        __ptext17 1286                          __ptext34 1152  
                        __ptext26 14D0                          __ptext18 10DA  
                        __ptext35 1600                          __ptext27 1222  
                        __ptext19 12E8                          __ptext28 1512  
                        __ptext29 0A82             __end_of_Check_Buttons 078E  
                Set_Display@value 0075                     __size_of_Init 001E  
                   __size_of_main 002E                          _received 002D  
          __size_ofi2_Set_Display 0056                  _InitTransmission 16C4  
      Delay_Routine@delay_counter 0062                  i2_Evaluate_Signs 1222  
            ??i2_Check_Detonators 0004                          _testflag 01F3  
                        int$flags 0040              Evaluate_Display@size 0070  
                Transmit@receiver 0062      Write_Display_Byte@write_data 0060  
      Evaluate_Signs@valuecounter 0073                        _INTCONbits 000FF2  
       __size_of_Evaluate_Display 02F4                Read_Data@data_read 0062  
                        intlevel2 0000                  ___lwmod@dividend 0060  
       Write_Display_Byte@counter 0066                        _RCSTA1bits 000FAB  
                 _display_counter 003F                i2Set_Bits@bitcount 0007  
                 Del_Data@counter 007A              __size_of_Start_Timer 001C  
                   i2_Set_Display 134A                   ___lwmod@divisor 0062  
   Delay_Routine@delay_multiplyer 0061                   ___lwmod@counter 0064  
               __CFG_T3CMX$PORTC0 000000            __size_of_InitInterrupt 000C  
               ?_Check_Detonators 0001                ??_Check_Detonators 0063  
           __end_of_Delay_Routine 1696                 __CFG_FOSC$INTIO67 000000  
                      i2_Set_Bits 0EE8     __size_ofi2_Write_Display_Byte 0042  
