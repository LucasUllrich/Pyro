

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Feb 20 20:24:33 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58  0000                     
    59                           	psect	idataBANK1
    60  000F7E                     __pidataBANK1:
    61                           	opt stack 0
    62                           
    63                           ;initializer for _pin
    64  000F7E  00                 	db	0
    65  000F7F  00                 	db	0
    66  000F80  00                 	db	0
    67  000F81  1F                 	db	31
    68  000F82  00                 	db	0
    69  000F83  00                 	db	0
    70  000F84  00                 	db	0
    71  000F85  01                 	db	1
    72  000F86  01                 	db	1
    73  000F87  1E                 	db	30
    74  000F88  00                 	db	0
    75  000F89  00                 	db	0
    76  000F8A  00                 	db	0
    77  000F8B  02                 	db	2
    78  000F8C  02                 	db	2
    79  000F8D  1D                 	db	29
    80  000F8E  00                 	db	0
    81  000F8F  00                 	db	0
    82  000F90  00                 	db	0
    83  000F91  03                 	db	3
    84  000F92  03                 	db	3
    85  000F93  1C                 	db	28
    86  000F94  00                 	db	0
    87  000F95  00                 	db	0
    88  000F96  00                 	db	0
    89  000F97  04                 	db	4
    90  000F98  04                 	db	4
    91  000F99  1B                 	db	27
    92  000F9A  00                 	db	0
    93  000F9B  00                 	db	0
    94  000F9C  00                 	db	0
    95  000F9D  05                 	db	5
    96  000F9E  05                 	db	5
    97  000F9F  1A                 	db	26
    98  000FA0  00                 	db	0
    99  000FA1  00                 	db	0
   100  000FA2  00                 	db	0
   101  000FA3  06                 	db	6
   102  000FA4  06                 	db	6
   103  000FA5  19                 	db	25
   104  000FA6  00                 	db	0
   105  000FA7  00                 	db	0
   106  000FA8  00                 	db	0
   107  000FA9  07                 	db	7
   108  000FAA  07                 	db	7
   109  000FAB  18                 	db	24
   110  000FAC  00                 	db	0
   111  000FAD  00                 	db	0
   112  000FAE  00                 	db	0
   113  000FAF  08                 	db	8
   114  000FB0  08                 	db	8
   115  000FB1  27                 	db	39
   116  000FB2  00                 	db	0
   117  000FB3  00                 	db	0
   118  000FB4  00                 	db	0
   119  000FB5  09                 	db	9
   120  000FB6  09                 	db	9
   121  000FB7  26                 	db	38
   122  000FB8  00                 	db	0
   123  000FB9  00                 	db	0
   124  000FBA  01                 	db	1
   125  000FBB  00                 	db	0
   126  000FBC  0A                 	db	10
   127  000FBD  25                 	db	37
   128  000FBE  00                 	db	0
   129  000FBF  00                 	db	0
   130  000FC0  01                 	db	1
   131  000FC1  01                 	db	1
   132  000FC2  0B                 	db	11
   133  000FC3  24                 	db	36
   134  000FC4  00                 	db	0
   135  000FC5  00                 	db	0
   136  000FC6  01                 	db	1
   137  000FC7  02                 	db	2
   138  000FC8  0C                 	db	12
   139  000FC9  23                 	db	35
   140  000FCA  00                 	db	0
   141  000FCB  00                 	db	0
   142  000FCC  01                 	db	1
   143  000FCD  03                 	db	3
   144  000FCE  0D                 	db	13
   145  000FCF  22                 	db	34
   146  000FD0  00                 	db	0
   147  000FD1  00                 	db	0
   148  000FD2  01                 	db	1
   149  000FD3  04                 	db	4
   150  000FD4  0E                 	db	14
   151  000FD5  21                 	db	33
   152  000FD6  00                 	db	0
   153  000FD7  00                 	db	0
   154  000FD8  01                 	db	1
   155  000FD9  05                 	db	5
   156  000FDA  0F                 	db	15
   157  000FDB  20                 	db	32
   158  000FDC  00                 	db	0
   159  000FDD  00                 	db	0
   160  000FDE  01                 	db	1
   161  000FDF  06                 	db	6
   162  000FE0  10                 	db	16
   163  000FE1  2F                 	db	47
   164  000FE2  00                 	db	0
   165  000FE3  00                 	db	0
   166  000FE4  01                 	db	1
   167  000FE5  07                 	db	7
   168  000FE6  11                 	db	17
   169  000FE7  2E                 	db	46
   170  000FE8  00                 	db	0
   171  000FE9  00                 	db	0
   172  000FEA  01                 	db	1
   173  000FEB  08                 	db	8
   174  000FEC  12                 	db	18
   175  000FED  2D                 	db	45
   176  000FEE  00                 	db	0
   177  000FEF  00                 	db	0
   178  000FF0  01                 	db	1
   179  000FF1  09                 	db	9
   180  000FF2  13                 	db	19
   181  000FF3  2C                 	db	44
   182  000FF4  00                 	db	0
   183  000FF5  00                 	db	0
   184  000FF6  02                 	db	2
   185  000FF7  00                 	db	0
   186  000FF8  14                 	db	20
   187  000FF9  2B                 	db	43
   188  000FFA  00                 	db	0
   189  000FFB  00                 	db	0
   190  000FFC  02                 	db	2
   191  000FFD  01                 	db	1
   192  000FFE  15                 	db	21
   193  000FFF  2A                 	db	42
   194  001000  00                 	db	0
   195  001001  00                 	db	0
   196  001002  02                 	db	2
   197  001003  02                 	db	2
   198  001004  16                 	db	22
   199  001005  29                 	db	41
   200  001006  00                 	db	0
   201  001007  00                 	db	0
   202  001008  02                 	db	2
   203  001009  03                 	db	3
   204  00100A  17                 	db	23
   205  00100B  28                 	db	40
   206  00100C  00                 	db	0
   207  00100D  00                 	db	0
   208  00100E  02                 	db	2
   209  00100F  04                 	db	4
   210  001010  18                 	db	24
   211  001011  35                 	db	53
   212  001012  00                 	db	0
   213  001013  00                 	db	0
   214  001014  02                 	db	2
   215  001015  05                 	db	5
   216  001016  19                 	db	25
   217  001017  34                 	db	52
   218  001018  00                 	db	0
   219  001019  00                 	db	0
   220  00101A  02                 	db	2
   221  00101B  06                 	db	6
   222  00101C  1A                 	db	26
   223  00101D  33                 	db	51
   224  00101E  00                 	db	0
   225  00101F  00                 	db	0
   226  001020  02                 	db	2
   227  001021  07                 	db	7
   228  001022  1B                 	db	27
   229  001023  32                 	db	50
   230  001024  00                 	db	0
   231  001025  00                 	db	0
   232  001026  02                 	db	2
   233  001027  08                 	db	8
   234  001028  1C                 	db	28
   235  001029  31                 	db	49
   236  00102A  00                 	db	0
   237  00102B  00                 	db	0
   238  00102C  02                 	db	2
   239  00102D  09                 	db	9
   240  00102E  1D                 	db	29
   241  00102F  30                 	db	48
   242  001030  00                 	db	0
   243  001031  00                 	db	0
   244                           
   245                           	psect	nvCOMRAM
   246  000041                     __pnvCOMRAM:
   247                           	opt stack 0
   248  000041                     _display_counter:
   249                           	opt stack 0
   250  000041                     	ds	1
   251  0000                     _ANSELA	set	3896
   252  0000                     _ANSELB	set	3897
   253  0000                     _ANSELC	set	3898
   254  0000                     _CCPTMRS0bits	set	3913
   255  0000                     _BAUDCON1bits	set	4024
   256  0000                     _CCP1CONbits	set	4029
   257  0000                     _CCPR1H	set	4031
   258  0000                     _CCPR1L	set	4030
   259  0000                     _EEADR	set	4009
   260  0000                     _EECON1bits	set	4006
   261  0000                     _EECON2	set	4007
   262  0000                     _EEDATA	set	4008
   263  0000                     _INTCONbits	set	4082
   264  0000                     _OSCCON	set	4051
   265  0000                     _PIE1bits	set	3997
   266  0000                     _PIR1bits	set	3998
   267  0000                     _PIR2bits	set	4001
   268  0000                     _PORTA	set	3968
   269  0000                     _PORTAbits	set	3968
   270  0000                     _PORTB	set	3969
   271  0000                     _PORTBbits	set	3969
   272  0000                     _PORTC	set	3970
   273  0000                     _PORTCbits	set	3970
   274  0000                     _PORTE	set	3972
   275  0000                     _RCREG1	set	4014
   276  0000                     _RCSTA1bits	set	4011
   277  0000                     _RCSTAbits	set	4011
   278  0000                     _SPBRG1	set	4015
   279  0000                     _SSP1BUF	set	4041
   280  0000                     _SSP1CON1	set	4038
   281  0000                     _SSP1STAT	set	4039
   282  0000                     _T1CONbits	set	4045
   283  0000                     _T3CONbits	set	4017
   284  0000                     _TMR1H	set	4047
   285  0000                     _TMR1L	set	4046
   286  0000                     _TMR3H	set	4019
   287  0000                     _TMR3L	set	4018
   288  0000                     _TRISA	set	3986
   289  0000                     _TRISB	set	3987
   290  0000                     _TRISC	set	3988
   291  0000                     _TRISCbits	set	3988
   292  0000                     _TRISE	set	3990
   293  0000                     _TXREG1	set	4013
   294  0000                     _TXSTA1bits	set	4012
   295  0000                     _SSP1IF	set	31987
   296                           
   297                           	psect	smallconst
   298  000250                     __psmallconst:
   299                           	opt stack 0
   300  000250  00                 	db	0
   301  000251                     STR_9:
   302  000251  41                 	db	65	;'A'
   303  000252  42                 	db	66	;'B'
   304  000253  43                 	db	67	;'C'
   305  000254  44                 	db	68	;'D'
   306  000255  45                 	db	69	;'E'
   307  000256  46                 	db	70	;'F'
   308  000257  47                 	db	71	;'G'
   309  000258  00                 	db	0
   310  000259                     STR_1:
   311  000259  41                 	db	65	;'A'
   312  00025A  42                 	db	66	;'B'
   313  00025B  43                 	db	67	;'C'
   314  00025C  44                 	db	68	;'D'
   315  00025D  45                 	db	69	;'E'
   316  00025E  46                 	db	70	;'F'
   317  00025F  00                 	db	0
   318  000260                     STR_10:
   319  000260  41                 	db	65	;'A'
   320  000261  42                 	db	66	;'B'
   321  000262  43                 	db	67	;'C'
   322  000263  44                 	db	68	;'D'
   323  000264  46                 	db	70	;'F'
   324  000265  47                 	db	71	;'G'
   325  000266  00                 	db	0
   326  000267                     STR_11:
   327  000267  41                 	db	65	;'A'
   328  000268  42                 	db	66	;'B'
   329  000269  43                 	db	67	;'C'
   330  00026A  45                 	db	69	;'E'
   331  00026B  46                 	db	70	;'F'
   332  00026C  47                 	db	71	;'G'
   333  00026D  00                 	db	0
   334  00026E                     STR_7:
   335  00026E  41                 	db	65	;'A'
   336  00026F  43                 	db	67	;'C'
   337  000270  44                 	db	68	;'D'
   338  000271  45                 	db	69	;'E'
   339  000272  46                 	db	70	;'F'
   340  000273  47                 	db	71	;'G'
   341  000274  00                 	db	0
   342  000275                     STR_4:
   343  000275  41                 	db	65	;'A'
   344  000276  42                 	db	66	;'B'
   345  000277  43                 	db	67	;'C'
   346  000278  44                 	db	68	;'D'
   347  000279  47                 	db	71	;'G'
   348  00027A  00                 	db	0
   349  00027B                     STR_3:
   350  00027B  41                 	db	65	;'A'
   351  00027C  42                 	db	66	;'B'
   352  00027D  44                 	db	68	;'D'
   353  00027E  45                 	db	69	;'E'
   354  00027F  47                 	db	71	;'G'
   355  000280  00                 	db	0
   356  000281                     STR_6:
   357  000281  41                 	db	65	;'A'
   358  000282  43                 	db	67	;'C'
   359  000283  44                 	db	68	;'D'
   360  000284  46                 	db	70	;'F'
   361  000285  47                 	db	71	;'G'
   362  000286  00                 	db	0
   363  000287                     STR_16:
   364  000287  41                 	db	65	;'A'
   365  000288  42                 	db	66	;'B'
   366  000289  45                 	db	69	;'E'
   367  00028A  46                 	db	70	;'F'
   368  00028B  47                 	db	71	;'G'
   369  00028C  00                 	db	0
   370  00028D                     STR_13:
   371  00028D  41                 	db	65	;'A'
   372  00028E  44                 	db	68	;'D'
   373  00028F  45                 	db	69	;'E'
   374  000290  46                 	db	70	;'F'
   375  000291  47                 	db	71	;'G'
   376  000292  00                 	db	0
   377  000293                     STR_5:
   378  000293  42                 	db	66	;'B'
   379  000294  43                 	db	67	;'C'
   380  000295  46                 	db	70	;'F'
   381  000296  47                 	db	71	;'G'
   382  000297  00                 	db	0
   383  000298                     STR_8:
   384  000298  41                 	db	65	;'A'
   385  000299  42                 	db	66	;'B'
   386  00029A  43                 	db	67	;'C'
   387  00029B  00                 	db	0
   388  00029C                     STR_19:
   389  00029C  30                 	db	48	;'0'
   390  00029D  00                 	db	0
   391  0000                     
   392                           ; #config settings
   393  00029E  00                 	db	0	; dummy byte at the end
   394  0000                     
   395                           	psect	cinit
   396  0015B6                     __pcinit:
   397                           	opt stack 0
   398  0015B6                     start_initialization:
   399                           	opt stack 0
   400  0015B6                     __initialization:
   401                           	opt stack 0
   402                           
   403                           ; Clear objects allocated to BANK0 (11 bytes)
   404  0015B6  EE00  F07F         	lfsr	0,__pbssBANK0
   405  0015BA  0E0B               	movlw	11
   406  0015BC                     clear_0:
   407  0015BC  6AEE               	clrf	postinc0,c
   408  0015BE  06E8               	decf	wreg,f,c
   409  0015C0  E1FD               	bnz	clear_0
   410                           
   411                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   412  0015C2  6A40               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   413                           
   414                           ; Clear objects allocated to COMRAM (17 bytes)
   415  0015C4  EE00  F02F         	lfsr	0,__pbssCOMRAM
   416  0015C8  0E11               	movlw	17
   417  0015CA                     clear_1:
   418  0015CA  6AEE               	clrf	postinc0,c
   419  0015CC  06E8               	decf	wreg,f,c
   420  0015CE  E1FD               	bnz	clear_1
   421                           
   422                           ; Initialize objects allocated to BANK1 (180 bytes)
   423                           ; load TBLPTR registers with __pidataBANK1
   424  0015D0  0E7E               	movlw	low __pidataBANK1
   425  0015D2  6EF6               	movwf	tblptrl,c
   426  0015D4  0E0F               	movlw	high __pidataBANK1
   427  0015D6  6EF7               	movwf	tblptrh,c
   428  0015D8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   429  0015DA  6EF8               	movwf	tblptru,c
   430  0015DC  EE01  F000         	lfsr	0,__pdataBANK1
   431  0015E0  EE10 F0B4          	lfsr	1,180
   432  0015E4                     copy_data0:
   433  0015E4  0009               	tblrd		*+
   434  0015E6  CFF5 FFEE          	movff	tablat,postinc0
   435  0015EA  50E5               	movf	postdec1,w,c
   436  0015EC  50E1               	movf	fsr1l,w,c
   437  0015EE  E1FA               	bnz	copy_data0
   438  0015F0                     end_of_initialization:
   439                           	opt stack 0
   440  0015F0                     __end_of__initialization:
   441                           	opt stack 0
   442  0015F0  9042               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   443  0015F2  9242               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   444  0015F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   445  0015F6  6EF8               	movwf	tblptru,c
   446  0015F8  0100               	movlb	0
   447  0015FA  EF08  F00C         	goto	_main	;jump to C main() function
   448                           tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           tblptrl	equ	0xFF6
   451                           tablat	equ	0xFF5
   452                           postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           postdec1	equ	0xFE5
   455                           fsr1l	equ	0xFE1
   456                           
   457                           	psect	bitbssCOMRAM
   458  000200                     __pbitbssCOMRAM:
   459                           	opt stack 0
   460  000200                     _ignite_ready:
   461                           	opt stack 0
   462  000200                     	ds	1
   463  000201                     _master_addressed:
   464                           	opt stack 0
   465  000201                     	ds	1
   466  000202                     _overrun:
   467                           	opt stack 0
   468  000202                     	ds	1
   469  000203                     _testflag:
   470                           	opt stack 0
   471  000203                     	ds	1
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           postinc0	equ	0xFEE
   477                           wreg	equ	0xFE8
   478                           postdec1	equ	0xFE5
   479                           fsr1l	equ	0xFE1
   480                           
   481                           	psect	bssCOMRAM
   482  00002F                     __pbssCOMRAM:
   483                           	opt stack 0
   484  00002F                     _received:
   485                           	opt stack 0
   486  00002F                     	ds	6
   487  000035                     _current_time:
   488                           	opt stack 0
   489  000035                     	ds	2
   490  000037                     _check_counter:
   491                           	opt stack 0
   492  000037                     	ds	1
   493  000038                     _receive_counter:
   494                           	opt stack 0
   495  000038                     	ds	1
   496  000039                     _pixels:
   497                           	opt stack 0
   498  000039                     	ds	7
   499                           tblptru	equ	0xFF8
   500                           tblptrh	equ	0xFF7
   501                           tblptrl	equ	0xFF6
   502                           tablat	equ	0xFF5
   503                           postinc0	equ	0xFEE
   504                           wreg	equ	0xFE8
   505                           postdec1	equ	0xFE5
   506                           fsr1l	equ	0xFE1
   507                           
   508                           	psect	bssBANK0
   509  00007F                     __pbssBANK0:
   510                           	opt stack 0
   511  00007F                     _pin_selected:
   512                           	opt stack 0
   513  00007F                     	ds	1
   514  000080                     _slave_selected:
   515                           	opt stack 0
   516  000080                     	ds	1
   517  000081                     _signs:
   518                           	opt stack 0
   519  000081                     	ds	3
   520  000084                     _string_delete:
   521                           	opt stack 0
   522  000084                     	ds	3
   523  000087                     _string_load:
   524                           	opt stack 0
   525  000087                     	ds	3
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           postdec1	equ	0xFE5
   533                           fsr1l	equ	0xFE1
   534                           
   535                           	psect	dataBANK1
   536  000100                     __pdataBANK1:
   537                           	opt stack 0
   538  000100                     _pin:
   539                           	opt stack 0
   540  000100                     	ds	180
   541                           tblptru	equ	0xFF8
   542                           tblptrh	equ	0xFF7
   543                           tblptrl	equ	0xFF6
   544                           tablat	equ	0xFF5
   545                           postinc0	equ	0xFEE
   546                           wreg	equ	0xFE8
   547                           postdec1	equ	0xFE5
   548                           fsr1l	equ	0xFE1
   549                           
   550                           	psect	cstackBANK0
   551  000060                     __pcstackBANK0:
   552                           	opt stack 0
   553  000060                     ??_Delay_Routine:
   554  000060                     ?_Read_Data:
   555                           	opt stack 0
   556  000060                     ?___lwdiv:
   557                           	opt stack 0
   558  000060                     ?___lwmod:
   559                           	opt stack 0
   560  000060                     Transmit@operation:
   561                           	opt stack 0
   562  000060                     Save_Data@store:
   563                           	opt stack 0
   564  000060                     Set_Bits@bits:
   565                           	opt stack 0
   566  000060                     Write_Display_Byte@write_data:
   567                           	opt stack 0
   568  000060                     ___lwdiv@dividend:
   569                           	opt stack 0
   570  000060                     ___lwmod@dividend:
   571                           	opt stack 0
   572                           
   573                           ; 2 bytes @ 0x0
   574  000060                     	ds	1
   575  000061                     Delay_Routine@delay_multiplyer:
   576                           	opt stack 0
   577  000061                     Transmit@port:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x1
   581  000061                     	ds	1
   582  000062                     ??_Write_Display_Byte:
   583  000062                     ??_Set_Bits:
   584  000062                     Delay_Routine@delay_counter:
   585                           	opt stack 0
   586  000062                     Save_Data@store_address:
   587                           	opt stack 0
   588  000062                     Transmit@receiver:
   589                           	opt stack 0
   590  000062                     Read_Data@data_read:
   591                           	opt stack 0
   592  000062                     ___lwdiv@divisor:
   593                           	opt stack 0
   594  000062                     ___lwmod@divisor:
   595                           	opt stack 0
   596                           
   597                           ; 2 bytes @ 0x2
   598  000062                     	ds	1
   599  000063                     
   600                           ; 0 bytes @ 0x3
   601  000063                     	ds	1
   602  000064                     Read_Data@read_address:
   603                           	opt stack 0
   604  000064                     ___lwdiv@counter:
   605                           	opt stack 0
   606  000064                     ___lwmod@counter:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x4
   610  000064                     	ds	1
   611  000065                     ___lwdiv@quotient:
   612                           	opt stack 0
   613                           
   614                           ; 2 bytes @ 0x5
   615  000065                     	ds	1
   616  000066                     Set_Bits@bitcount:
   617                           	opt stack 0
   618  000066                     Write_Display_Byte@counter:
   619                           	opt stack 0
   620                           
   621                           ; 1 bytes @ 0x6
   622  000066                     	ds	1
   623  000067                     Set_Bits@Bitoutput:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x7
   627  000067                     	ds	1
   628  000068                     Evaluate_Display@evaluate:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x8
   632  000068                     	ds	2
   633  00006A                     ??_Evaluate_Display:
   634                           
   635                           ; 0 bytes @ 0xA
   636  00006A                     	ds	4
   637  00006E                     Evaluate_Display@size:
   638                           	opt stack 0
   639                           
   640                           ; 1 bytes @ 0xE
   641  00006E                     	ds	1
   642  00006F                     Evaluate_Signs@evaluation_value:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0xF
   646  00006F                     	ds	2
   647  000071                     ??_Evaluate_Signs:
   648                           
   649                           ; 0 bytes @ 0x11
   650  000071                     	ds	4
   651  000075                     Evaluate_Signs@valuecounter:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x15
   655  000075                     	ds	1
   656  000076                     Set_Display@information:
   657                           	opt stack 0
   658                           
   659                           ; 1 bytes @ 0x16
   660  000076                     	ds	1
   661  000077                     Set_Display@value:
   662                           	opt stack 0
   663                           
   664                           ; 2 bytes @ 0x17
   665  000077                     	ds	2
   666  000079                     Set_Display@type:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x19
   670  000079                     	ds	1
   671  00007A                     ??_Load_Data:
   672                           
   673                           ; 0 bytes @ 0x1A
   674  00007A                     	ds	1
   675  00007B                     Load_Data@counter:
   676                           	opt stack 0
   677                           
   678                           ; 1 bytes @ 0x1B
   679  00007B                     	ds	1
   680  00007C                     Del_Data@counter:
   681                           	opt stack 0
   682                           
   683                           ; 1 bytes @ 0x1C
   684  00007C                     	ds	1
   685  00007D                     ??_Check_Buttons:
   686                           
   687                           ; 0 bytes @ 0x1D
   688  00007D                     	ds	2
   689  00007F                     tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           postinc0	equ	0xFEE
   694                           wreg	equ	0xFE8
   695                           postdec1	equ	0xFE5
   696                           fsr1l	equ	0xFE1
   697                           
   698                           ; 0 bytes @ 0x1F
   699                           
   700                           	psect	cstackCOMRAM
   701  000001                     __pcstackCOMRAM:
   702                           	opt stack 0
   703  000001                     ??i2_Delay_Routine:
   704  000001                     ?___awdiv:
   705                           	opt stack 0
   706  000001                     ?i2___lwdiv:
   707                           	opt stack 0
   708  000001                     ?i2___lwmod:
   709                           	opt stack 0
   710  000001                     Receive_Dump@dump:
   711                           	opt stack 0
   712  000001                     i2Transmit@operation:
   713                           	opt stack 0
   714  000001                     ___awdiv@dividend:
   715                           	opt stack 0
   716  000001                     i2Set_Bits@bits:
   717                           	opt stack 0
   718  000001                     i2Write_Display_Byte@write_data:
   719                           	opt stack 0
   720  000001                     i2___lwdiv@dividend:
   721                           	opt stack 0
   722  000001                     i2___lwmod@dividend:
   723                           	opt stack 0
   724                           
   725                           ; 2 bytes @ 0x0
   726  000001                     	ds	1
   727  000002                     i2Delay_Routine@delay_multiplyer:
   728                           	opt stack 0
   729  000002                     i2Transmit@port:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x1
   733  000002                     	ds	1
   734  000003                     ??i2_Set_Bits:
   735  000003                     ??i2_Write_Display_Byte:
   736  000003                     i2Delay_Routine@delay_counter:
   737                           	opt stack 0
   738  000003                     i2Transmit@receiver:
   739                           	opt stack 0
   740  000003                     ___awdiv@divisor:
   741                           	opt stack 0
   742  000003                     i2___lwdiv@divisor:
   743                           	opt stack 0
   744  000003                     i2___lwmod@divisor:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x2
   748  000003                     	ds	1
   749  000004                     
   750                           ; 0 bytes @ 0x3
   751  000004                     	ds	1
   752  000005                     ___awdiv@counter:
   753                           	opt stack 0
   754  000005                     i2___lwmod@counter:
   755                           	opt stack 0
   756  000005                     i2___lwdiv@quotient:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x4
   760  000005                     	ds	1
   761  000006                     Ignite_Detonators@counter:
   762                           	opt stack 0
   763  000006                     ___awdiv@sign:
   764                           	opt stack 0
   765                           
   766                           ; 1 bytes @ 0x5
   767  000006                     	ds	1
   768  000007                     i2Set_Bits@bitcount:
   769                           	opt stack 0
   770  000007                     i2Write_Display_Byte@counter:
   771                           	opt stack 0
   772  000007                     i2___lwdiv@counter:
   773                           	opt stack 0
   774  000007                     ___awdiv@quotient:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x6
   778  000007                     	ds	1
   779  000008                     i2Set_Bits@Bitoutput:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x7
   783  000008                     	ds	1
   784  000009                     i2Evaluate_Display@evaluate:
   785                           	opt stack 0
   786                           
   787                           ; 2 bytes @ 0x8
   788  000009                     	ds	2
   789  00000B                     ??i2_Evaluate_Display:
   790                           
   791                           ; 0 bytes @ 0xA
   792  00000B                     	ds	4
   793  00000F                     i2Evaluate_Display@size:
   794                           	opt stack 0
   795                           
   796                           ; 1 bytes @ 0xE
   797  00000F                     	ds	1
   798  000010                     i2Evaluate_Signs@evaluation_value:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0xF
   802  000010                     	ds	2
   803  000012                     ??i2_Evaluate_Signs:
   804                           
   805                           ; 0 bytes @ 0x11
   806  000012                     	ds	4
   807  000016                     i2Evaluate_Signs@valuecounter:
   808                           	opt stack 0
   809                           
   810                           ; 1 bytes @ 0x15
   811  000016                     	ds	1
   812  000017                     i2Set_Display@information:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x16
   816  000017                     	ds	1
   817  000018                     i2Set_Display@value:
   818                           	opt stack 0
   819                           
   820                           ; 2 bytes @ 0x17
   821  000018                     	ds	2
   822  00001A                     i2Set_Display@type:
   823                           	opt stack 0
   824                           
   825                           ; 1 bytes @ 0x19
   826  00001A                     	ds	1
   827  00001B                     ??_Isr:
   828                           
   829                           ; 0 bytes @ 0x1A
   830  00001B                     	ds	17
   831  00002C                     Isr@pixel_index_array:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0x2B
   835  00002C                     	ds	1
   836  00002D                     Isr@pixel_index_bit:
   837                           	opt stack 0
   838                           
   839                           ; 1 bytes @ 0x2C
   840  00002D                     	ds	1
   841  00002E                     Isr@search_index:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x2D
   845  00002E                     	ds	1
   846                           tblptru	equ	0xFF8
   847                           tblptrh	equ	0xFF7
   848                           tblptrl	equ	0xFF6
   849                           tablat	equ	0xFF5
   850                           postinc0	equ	0xFEE
   851                           wreg	equ	0xFE8
   852                           postdec1	equ	0xFE5
   853                           fsr1l	equ	0xFE1
   854                           
   855 ;;
   856 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   857 ;;
   858 ;; *************** function _main *****************
   859 ;; Defined at:
   860 ;;		line 86 in file "main.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;		None               void
   867 ;; Registers used:
   868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1
   874 ;;      Params:         0       0       0
   875 ;;      Locals:         0       0       0
   876 ;;      Temps:          0       0       0
   877 ;;      Totals:         0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels required when called:   12
   880 ;; This function calls:
   881 ;;		_Check_Buttons
   882 ;;		_Init
   883 ;;		_Load_Data
   884 ;; This function is called by:
   885 ;;		Startup code after reset
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text0
   890  001810                     __ptext0:
   891                           	opt stack 0
   892  001810                     _main:
   893                           	opt stack 19
   894                           
   895                           ;main.c: 87: Init();
   896                           
   897                           ;incstack = 0
   898  001810  ECCF  F00B         	call	_Init	;wreg free
   899                           
   900                           ;main.c: 88: Load_Data();
   901  001814  ECEB  F005         	call	_Load_Data	;wreg free
   902                           
   903                           ;main.c: 89: PORTAbits.RA0 = 1;
   904  001818  8080               	bsf	3968,0,c	;volatile
   905  00181A                     l3616:
   906                           
   907                           ;main.c: 91: Check_Buttons();
   908  00181A  EC50  F001         	call	_Check_Buttons	;wreg free
   909  00181E  D7FD               	goto	l3616
   910  001820                     __end_of_main:
   911                           	opt stack 0
   912                           tblptru	equ	0xFF8
   913                           tblptrh	equ	0xFF7
   914                           tblptrl	equ	0xFF6
   915                           tablat	equ	0xFF5
   916                           postinc0	equ	0xFEE
   917                           wreg	equ	0xFE8
   918                           postdec1	equ	0xFE5
   919                           fsr1l	equ	0xFE1
   920                           
   921 ;; *************** function _Init *****************
   922 ;; Defined at:
   923 ;;		line 3 in file "init.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;		None
   928 ;; Return value:  Size  Location     Type
   929 ;;		None               void
   930 ;; Registers used:
   931 ;;		wreg, status,2, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1
   937 ;;      Params:         0       0       0
   938 ;;      Locals:         0       0       0
   939 ;;      Temps:          0       0       0
   940 ;;      Totals:         0       0       0
   941 ;;Total ram usage:        0 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    6
   944 ;; This function calls:
   945 ;;		_InitAnsel
   946 ;;		_InitInterrupt
   947 ;;		_InitMiscellaneous
   948 ;;		_InitPort
   949 ;;		_InitTimer
   950 ;;		_InitTransmission
   951 ;;		_InitTris
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text1
   958  00179E                     __ptext1:
   959                           	opt stack 0
   960  00179E                     _Init:
   961                           	opt stack 24
   962                           
   963                           ;init.c: 4: InitPort();
   964                           
   965                           ;incstack = 0
   966  00179E  ECFF  F00B         	call	_InitPort	;wreg free
   967                           
   968                           ;init.c: 5: InitTris();
   969  0017A2  ECF6  F00B         	call	_InitTris	;wreg free
   970                           
   971                           ;init.c: 6: InitAnsel();
   972  0017A6  ECEC  F00B         	call	_InitAnsel	;wreg free
   973                           
   974                           ;init.c: 7: InitMiscellaneous();
   975  0017AA  EC25  F00C         	call	_InitMiscellaneous	;wreg free
   976                           
   977                           ;init.c: 8: InitTransmission();
   978  0017AE  ECAB  F00B         	call	_InitTransmission	;wreg free
   979                           
   980                           ;init.c: 9: InitTimer();
   981  0017B2  EC7B  F00B         	call	_InitTimer	;wreg free
   982                           
   983                           ;init.c: 10: InitInterrupt();
   984  0017B6  EC1F  F00C         	call	_InitInterrupt	;wreg free
   985  0017BA  0012               	return		;funcret
   986  0017BC                     __end_of_Init:
   987                           	opt stack 0
   988                           tblptru	equ	0xFF8
   989                           tblptrh	equ	0xFF7
   990                           tblptrl	equ	0xFF6
   991                           tablat	equ	0xFF5
   992                           postinc0	equ	0xFEE
   993                           wreg	equ	0xFE8
   994                           postdec1	equ	0xFE5
   995                           fsr1l	equ	0xFE1
   996                           
   997 ;; *************** function _InitTris *****************
   998 ;; Defined at:
   999 ;;		line 20 in file "init.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;		None               void
  1006 ;; Registers used:
  1007 ;;		wreg, status,2
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1
  1013 ;;      Params:         0       0       0
  1014 ;;      Locals:         0       0       0
  1015 ;;      Temps:          0       0       0
  1016 ;;      Totals:         0       0       0
  1017 ;;Total ram usage:        0 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    5
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_Init
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text2
  1028  0017EC                     __ptext2:
  1029                           	opt stack 0
  1030  0017EC                     _InitTris:
  1031                           	opt stack 24
  1032                           
  1033                           ;init.c: 21: TRISA = 0b00000000;
  1034                           
  1035                           ;incstack = 0
  1036  0017EC  0E00               	movlw	0
  1037  0017EE  6E92               	movwf	3986,c	;volatile
  1038                           
  1039                           ;init.c: 22: TRISB = 0b00011111;
  1040  0017F0  0E1F               	movlw	31
  1041  0017F2  6E93               	movwf	3987,c	;volatile
  1042                           
  1043                           ;init.c: 23: TRISC = 0b10000010;
  1044  0017F4  0E82               	movlw	130
  1045  0017F6  6E94               	movwf	3988,c	;volatile
  1046                           
  1047                           ;init.c: 24: TRISE = 0;
  1048  0017F8  0E00               	movlw	0
  1049  0017FA  6E96               	movwf	3990,c	;volatile
  1050  0017FC  0012               	return		;funcret
  1051  0017FE                     __end_of_InitTris:
  1052                           	opt stack 0
  1053                           tblptru	equ	0xFF8
  1054                           tblptrh	equ	0xFF7
  1055                           tblptrl	equ	0xFF6
  1056                           tablat	equ	0xFF5
  1057                           postinc0	equ	0xFEE
  1058                           wreg	equ	0xFE8
  1059                           postdec1	equ	0xFE5
  1060                           fsr1l	equ	0xFE1
  1061                           
  1062 ;; *************** function _InitTransmission *****************
  1063 ;; Defined at:
  1064 ;;		line 37 in file "init.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;		None
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;		None
  1069 ;; Return value:  Size  Location     Type
  1070 ;;		None               void
  1071 ;; Registers used:
  1072 ;;		wreg, status,2
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMRAM   BANK0   BANK1
  1078 ;;      Params:         0       0       0
  1079 ;;      Locals:         0       0       0
  1080 ;;      Temps:          0       0       0
  1081 ;;      Totals:         0       0       0
  1082 ;;Total ram usage:        0 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; Hardware stack levels required when called:    5
  1085 ;; This function calls:
  1086 ;;		Nothing
  1087 ;; This function is called by:
  1088 ;;		_Init
  1089 ;; This function uses a non-reentrant model
  1090 ;;
  1091                           
  1092                           	psect	text3
  1093  001756                     __ptext3:
  1094                           	opt stack 0
  1095  001756                     _InitTransmission:
  1096                           	opt stack 24
  1097                           
  1098                           ;init.c: 39: SSP1STAT = 0b01000000;
  1099                           
  1100                           ;incstack = 0
  1101  001756  0E40               	movlw	64
  1102  001758  6EC7               	movwf	4039,c	;volatile
  1103                           
  1104                           ;init.c: 40: SSP1CON1 = 0b00100010;
  1105  00175A  0E22               	movlw	34
  1106  00175C  6EC6               	movwf	4038,c	;volatile
  1107                           
  1108                           ;init.c: 42: TXSTA1bits.SYNC = 0;
  1109  00175E  98AC               	bcf	4012,4,c	;volatile
  1110                           
  1111                           ;init.c: 43: TXSTA1bits.BRGH = 1;
  1112  001760  84AC               	bsf	4012,2,c	;volatile
  1113                           
  1114                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
  1115  001762  96B8               	bcf	4024,3,c	;volatile
  1116                           
  1117                           ;init.c: 45: SPBRG1 = 25;
  1118  001764  0E19               	movlw	25
  1119  001766  6EAF               	movwf	4015,c	;volatile
  1120                           
  1121                           ;init.c: 46: TRISCbits.RC6 = 1;
  1122  001768  8C94               	bsf	3988,6,c	;volatile
  1123                           
  1124                           ;init.c: 47: TRISCbits.RC7 = 1;
  1125  00176A  8E94               	bsf	3988,7,c	;volatile
  1126                           
  1127                           ;init.c: 48: RCSTA1bits.SPEN = 1;
  1128  00176C  8EAB               	bsf	4011,7,c	;volatile
  1129                           
  1130                           ;init.c: 49: TXSTA1bits.TX9 = 1;
  1131  00176E  8CAC               	bsf	4012,6,c	;volatile
  1132                           
  1133                           ;init.c: 50: TXSTA1bits.TXEN = 1;
  1134  001770  8AAC               	bsf	4012,5,c	;volatile
  1135                           
  1136                           ;init.c: 51: RCSTA1bits.RC9 = 1;
  1137  001772  8CAB               	bsf	4011,6,c	;volatile
  1138                           
  1139                           ;init.c: 52: RCSTA1bits.CREN = 1;
  1140  001774  88AB               	bsf	4011,4,c	;volatile
  1141                           
  1142                           ;init.c: 53: TRISCbits.RC6 = 0;
  1143  001776  9C94               	bcf	3988,6,c	;volatile
  1144  001778  0012               	return		;funcret
  1145  00177A                     __end_of_InitTransmission:
  1146                           	opt stack 0
  1147                           tblptru	equ	0xFF8
  1148                           tblptrh	equ	0xFF7
  1149                           tblptrl	equ	0xFF6
  1150                           tablat	equ	0xFF5
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           postdec1	equ	0xFE5
  1154                           fsr1l	equ	0xFE1
  1155                           
  1156 ;; *************** function _InitTimer *****************
  1157 ;; Defined at:
  1158 ;;		line 56 in file "init.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;		None               void
  1165 ;; Registers used:
  1166 ;;		wreg, status,2
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1
  1172 ;;      Params:         0       0       0
  1173 ;;      Locals:         0       0       0
  1174 ;;      Temps:          0       0       0
  1175 ;;      Totals:         0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    5
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_Init
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text4
  1187  0016F6                     __ptext4:
  1188                           	opt stack 0
  1189  0016F6                     _InitTimer:
  1190                           	opt stack 24
  1191                           
  1192                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
  1193                           
  1194                           ;incstack = 0
  1195  0016F6  0E3F               	movlw	-193
  1196  0016F8  16CD               	andwf	4045,f,c	;volatile
  1197                           
  1198                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
  1199  0016FA  0E30               	movlw	48
  1200  0016FC  12CD               	iorwf	4045,f,c	;volatile
  1201                           
  1202                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
  1203  0016FE  94CD               	bcf	4045,2,c	;volatile
  1204                           
  1205                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
  1206  001700  0E3F               	movlw	-193
  1207  001702  16B1               	andwf	4017,f,c	;volatile
  1208                           
  1209                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
  1210  001704  0E30               	movlw	48
  1211  001706  12B1               	iorwf	4017,f,c	;volatile
  1212                           
  1213                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
  1214  001708  94B1               	bcf	4017,2,c	;volatile
  1215                           
  1216                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
  1217  00170A  50BD               	movf	4029,w,c	;volatile
  1218  00170C  0BF0               	andlw	-16
  1219  00170E  090A               	iorlw	10
  1220  001710  6EBD               	movwf	4029,c	;volatile
  1221                           
  1222                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
  1223  001712  010F               	movlb	15	; () banked
  1224  001714  5149               	movf	73,w,b	;volatile
  1225  001716  0BFC               	andlw	-4
  1226  001718  0901               	iorlw	1
  1227  00171A  6F49               	movwf	73,b	;volatile
  1228                           
  1229                           ;init.c: 68: CCPR1L = 72;
  1230  00171C  0E48               	movlw	72
  1231  00171E  6EBE               	movwf	4030,c	;volatile
  1232                           
  1233                           ;init.c: 69: CCPR1H = 232;
  1234  001720  0EE8               	movlw	232
  1235  001722  6EBF               	movwf	4031,c	;volatile
  1236                           
  1237                           ; BSR set to: 15
  1238  001724  0012               	return		;funcret
  1239  001726                     __end_of_InitTimer:
  1240                           	opt stack 0
  1241                           tblptru	equ	0xFF8
  1242                           tblptrh	equ	0xFF7
  1243                           tblptrl	equ	0xFF6
  1244                           tablat	equ	0xFF5
  1245                           postinc0	equ	0xFEE
  1246                           wreg	equ	0xFE8
  1247                           postdec1	equ	0xFE5
  1248                           fsr1l	equ	0xFE1
  1249                           
  1250 ;; *************** function _InitPort *****************
  1251 ;; Defined at:
  1252 ;;		line 13 in file "init.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;		None               void
  1259 ;; Registers used:
  1260 ;;		wreg, status,2
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1
  1266 ;;      Params:         0       0       0
  1267 ;;      Locals:         0       0       0
  1268 ;;      Temps:          0       0       0
  1269 ;;      Totals:         0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    5
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_Init
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text5
  1281  0017FE                     __ptext5:
  1282                           	opt stack 0
  1283  0017FE                     _InitPort:
  1284                           	opt stack 24
  1285                           
  1286                           ;init.c: 14: PORTA = 0b00000000;
  1287                           
  1288                           ; BSR set to: 15
  1289                           ;incstack = 0
  1290  0017FE  0E00               	movlw	0
  1291  001800  6E80               	movwf	3968,c	;volatile
  1292                           
  1293                           ;init.c: 15: PORTB = 0b00000000;
  1294  001802  0E00               	movlw	0
  1295  001804  6E81               	movwf	3969,c	;volatile
  1296                           
  1297                           ;init.c: 16: PORTC = 0b00000100;
  1298  001806  0E04               	movlw	4
  1299  001808  6E82               	movwf	3970,c	;volatile
  1300                           
  1301                           ;init.c: 17: PORTE = 0;
  1302  00180A  0E00               	movlw	0
  1303  00180C  6E84               	movwf	3972,c	;volatile
  1304  00180E  0012               	return		;funcret
  1305  001810                     __end_of_InitPort:
  1306                           	opt stack 0
  1307                           tblptru	equ	0xFF8
  1308                           tblptrh	equ	0xFF7
  1309                           tblptrl	equ	0xFF6
  1310                           tablat	equ	0xFF5
  1311                           postinc0	equ	0xFEE
  1312                           wreg	equ	0xFE8
  1313                           postdec1	equ	0xFE5
  1314                           fsr1l	equ	0xFE1
  1315                           
  1316 ;; *************** function _InitMiscellaneous *****************
  1317 ;; Defined at:
  1318 ;;		line 33 in file "init.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;		None               void
  1325 ;; Registers used:
  1326 ;;		wreg, status,2
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMRAM   BANK0   BANK1
  1332 ;;      Params:         0       0       0
  1333 ;;      Locals:         0       0       0
  1334 ;;      Temps:          0       0       0
  1335 ;;      Totals:         0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    5
  1339 ;; This function calls:
  1340 ;;		Nothing
  1341 ;; This function is called by:
  1342 ;;		_Init
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text6
  1347  00184A                     __ptext6:
  1348                           	opt stack 0
  1349  00184A                     _InitMiscellaneous:
  1350                           	opt stack 24
  1351                           
  1352                           ;init.c: 34: OSCCON = 0b01010011;
  1353                           
  1354                           ;incstack = 0
  1355  00184A  0E53               	movlw	83
  1356  00184C  6ED3               	movwf	4051,c	;volatile
  1357  00184E  0012               	return		;funcret
  1358  001850                     __end_of_InitMiscellaneous:
  1359                           	opt stack 0
  1360                           tblptru	equ	0xFF8
  1361                           tblptrh	equ	0xFF7
  1362                           tblptrl	equ	0xFF6
  1363                           tablat	equ	0xFF5
  1364                           postinc0	equ	0xFEE
  1365                           wreg	equ	0xFE8
  1366                           postdec1	equ	0xFE5
  1367                           fsr1l	equ	0xFE1
  1368                           
  1369 ;; *************** function _InitInterrupt *****************
  1370 ;; Defined at:
  1371 ;;		line 72 in file "init.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;		None
  1376 ;; Return value:  Size  Location     Type
  1377 ;;		None               void
  1378 ;; Registers used:
  1379 ;;		None
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1
  1385 ;;      Params:         0       0       0
  1386 ;;      Locals:         0       0       0
  1387 ;;      Temps:          0       0       0
  1388 ;;      Totals:         0       0       0
  1389 ;;Total ram usage:        0 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    5
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_Init
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text7
  1400  00183E                     __ptext7:
  1401                           	opt stack 0
  1402  00183E                     _InitInterrupt:
  1403                           	opt stack 24
  1404                           
  1405                           ;init.c: 73: INTCONbits.GIE = 1;
  1406                           
  1407                           ;incstack = 0
  1408  00183E  8EF2               	bsf	intcon,7,c	;volatile
  1409                           
  1410                           ;init.c: 74: INTCONbits.PEIE = 1;
  1411  001840  8CF2               	bsf	intcon,6,c	;volatile
  1412                           
  1413                           ;init.c: 75: PIE1bits.RCIE = 1;
  1414  001842  8A9D               	bsf	3997,5,c	;volatile
  1415                           
  1416                           ;init.c: 76: PIE1bits.CCP1IE = 1;
  1417  001844  849D               	bsf	3997,2,c	;volatile
  1418                           
  1419                           ;init.c: 77: PIE1bits.TMR1IE = 1;
  1420  001846  809D               	bsf	3997,0,c	;volatile
  1421  001848  0012               	return		;funcret
  1422  00184A                     __end_of_InitInterrupt:
  1423                           	opt stack 0
  1424                           tblptru	equ	0xFF8
  1425                           tblptrh	equ	0xFF7
  1426                           tblptrl	equ	0xFF6
  1427                           tablat	equ	0xFF5
  1428                           intcon	equ	0xFF2
  1429                           postinc0	equ	0xFEE
  1430                           wreg	equ	0xFE8
  1431                           postdec1	equ	0xFE5
  1432                           fsr1l	equ	0xFE1
  1433                           
  1434 ;; *************** function _InitAnsel *****************
  1435 ;; Defined at:
  1436 ;;		line 27 in file "init.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;		None               void
  1443 ;; Registers used:
  1444 ;;		wreg, status,2
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1
  1450 ;;      Params:         0       0       0
  1451 ;;      Locals:         0       0       0
  1452 ;;      Temps:          0       0       0
  1453 ;;      Totals:         0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    5
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_Init
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text8
  1465  0017D8                     __ptext8:
  1466                           	opt stack 0
  1467  0017D8                     _InitAnsel:
  1468                           	opt stack 24
  1469                           
  1470                           ;init.c: 28: ANSELA = 0;
  1471                           
  1472                           ;incstack = 0
  1473  0017D8  0E00               	movlw	0
  1474  0017DA  010F               	movlb	15	; () banked
  1475  0017DC  6F38               	movwf	56,b	;volatile
  1476                           
  1477                           ;init.c: 29: ANSELB = 0;
  1478  0017DE  0E00               	movlw	0
  1479  0017E0  010F               	movlb	15	; () banked
  1480  0017E2  6F39               	movwf	57,b	;volatile
  1481                           
  1482                           ;init.c: 30: ANSELC = 0;
  1483  0017E4  0E00               	movlw	0
  1484  0017E6  010F               	movlb	15	; () banked
  1485  0017E8  6F3A               	movwf	58,b	;volatile
  1486                           
  1487                           ; BSR set to: 15
  1488  0017EA  0012               	return		;funcret
  1489  0017EC                     __end_of_InitAnsel:
  1490                           	opt stack 0
  1491                           tblptru	equ	0xFF8
  1492                           tblptrh	equ	0xFF7
  1493                           tblptrl	equ	0xFF6
  1494                           tablat	equ	0xFF5
  1495                           intcon	equ	0xFF2
  1496                           postinc0	equ	0xFEE
  1497                           wreg	equ	0xFE8
  1498                           postdec1	equ	0xFE5
  1499                           fsr1l	equ	0xFE1
  1500                           
  1501 ;; *************** function _Check_Buttons *****************
  1502 ;; Defined at:
  1503 ;;		line 26 in file "buttonchanges.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;		None               void
  1510 ;; Registers used:
  1511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1
  1517 ;;      Params:         0       0       0
  1518 ;;      Locals:         0       0       0
  1519 ;;      Temps:          0       2       0
  1520 ;;      Totals:         0       2       0
  1521 ;;Total ram usage:        2 bytes
  1522 ;; Hardware stack levels used:    1
  1523 ;; Hardware stack levels required when called:   11
  1524 ;; This function calls:
  1525 ;;		_Check_Detonators
  1526 ;;		_Del_Data
  1527 ;;		_Delay_Routine
  1528 ;;		_Read_Data
  1529 ;;		_Save_Data
  1530 ;;		_Set_Display
  1531 ;;		_Start_Timer
  1532 ;; This function is called by:
  1533 ;;		_main
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text9
  1538  0002A0                     __ptext9:
  1539                           	opt stack 0
  1540  0002A0                     _Check_Buttons:
  1541                           	opt stack 19
  1542                           
  1543                           ;buttonchanges.c: 27: if(PORTCbits.RC1 == 1) {
  1544                           
  1545                           ; BSR set to: 15
  1546                           ;incstack = 0
  1547  0002A0  A282               	btfss	3970,1,c	;volatile
  1548  0002A2  D00B               	goto	l99
  1549                           
  1550                           ;buttonchanges.c: 28: Delay_Routine(3);
  1551  0002A4  0E03               	movlw	3
  1552  0002A6  EC93  F00B         	call	_Delay_Routine
  1553                           
  1554                           ;buttonchanges.c: 29: if(PORTCbits.RC1 == 1) {
  1555  0002AA  A282               	btfss	3970,1,c	;volatile
  1556  0002AC  0012               	return	
  1557                           
  1558                           ;buttonchanges.c: 30: __nop();
  1559  0002AE  F000               	nop	
  1560                           
  1561                           ;buttonchanges.c: 31: ignite_ready = 1;
  1562  0002B0  8040               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1563                           
  1564                           ;buttonchanges.c: 32: Start_Timer();
  1565  0002B2  ECDE  F00B         	call	_Start_Timer	;wreg free
  1566                           
  1567                           ;buttonchanges.c: 33: __nop();
  1568  0002B6  F000               	nop	
  1569                           
  1570                           ;buttonchanges.c: 37: }
  1571                           ;buttonchanges.c: 38: } else if(PORTBbits.RB2 == 1) {
  1572                           
  1573                           ;buttonchanges.c: 34: return;
  1574  0002B8  0012               	return	
  1575  0002BA                     l99:
  1576  0002BA  A481               	btfss	3969,2,c	;volatile
  1577  0002BC  D061               	goto	l103
  1578                           
  1579                           ;buttonchanges.c: 39: Delay_Routine(3);
  1580  0002BE  0E03               	movlw	3
  1581  0002C0  EC93  F00B         	call	_Delay_Routine
  1582                           
  1583                           ;buttonchanges.c: 40: if(PORTBbits.RB2 == 1) {
  1584  0002C4  A481               	btfss	3969,2,c	;volatile
  1585  0002C6  0012               	return	
  1586                           
  1587                           ;buttonchanges.c: 41: __nop();
  1588  0002C8  F000               	nop	
  1589                           
  1590                           ;buttonchanges.c: 42: if(PORTBbits.RB3 == 1) {
  1591  0002CA  A681               	btfss	3969,3,c	;volatile
  1592  0002CC  D008               	goto	l3458
  1593                           
  1594                           ;buttonchanges.c: 43: Delay_Routine(3);
  1595  0002CE  0E03               	movlw	3
  1596  0002D0  EC93  F00B         	call	_Delay_Routine
  1597                           
  1598                           ;buttonchanges.c: 44: if(PORTBbits.RB3 == 1) {
  1599  0002D4  A681               	btfss	3969,3,c	;volatile
  1600  0002D6  D003               	goto	l3458
  1601                           
  1602                           ;buttonchanges.c: 45: Del_Data();
  1603  0002D8  ECAF  F009         	call	_Del_Data	;wreg free
  1604                           
  1605                           ;buttonchanges.c: 46: return;
  1606  0002DC  0012               	return	
  1607  0002DE                     l3458:
  1608                           
  1609                           ;buttonchanges.c: 48: }
  1610                           ;buttonchanges.c: 49: }
  1611                           ;buttonchanges.c: 50: pin[pin_selected].time++;
  1612  0002DE  0100               	movlb	0	; () banked
  1613  0002E0  517F               	movf	_pin_selected& (0+255),w,b
  1614  0002E2  0D06               	mullw	6
  1615  0002E4  0E04               	movlw	4
  1616  0002E6  26F3               	addwf	prodl,f,c
  1617  0002E8  0E00               	movlw	0
  1618  0002EA  22F4               	addwfc	prodh,f,c
  1619  0002EC  0E00               	movlw	low _pin
  1620  0002EE  24F3               	addwf	prodl,w,c
  1621  0002F0  6ED9               	movwf	fsr2l,c
  1622  0002F2  0E01               	movlw	high _pin
  1623  0002F4  20F4               	addwfc	prodh,w,c
  1624  0002F6  6EDA               	movwf	fsr2h,c
  1625  0002F8  2ADE               	incf	postinc2,f,c
  1626  0002FA  0E00               	movlw	0
  1627  0002FC  22DD               	addwfc	postdec2,f,c
  1628                           
  1629                           ;buttonchanges.c: 51: if(pin[pin_selected].time > 999) {
  1630  0002FE  0100               	movlb	0	; () banked
  1631  000300  517F               	movf	_pin_selected& (0+255),w,b
  1632  000302  0D06               	mullw	6
  1633  000304  0E04               	movlw	4
  1634  000306  26F3               	addwf	prodl,f,c
  1635  000308  0E00               	movlw	0
  1636  00030A  22F4               	addwfc	prodh,f,c
  1637  00030C  0E00               	movlw	low _pin
  1638  00030E  24F3               	addwf	prodl,w,c
  1639  000310  6ED9               	movwf	fsr2l,c
  1640  000312  0E01               	movlw	high _pin
  1641  000314  20F4               	addwfc	prodh,w,c
  1642  000316  6EDA               	movwf	fsr2h,c
  1643  000318  0E01               	movlw	1
  1644  00031A  BEDB               	btfsc	plusw2,7,c
  1645  00031C  D017               	goto	l3462
  1646  00031E  0EE8               	movlw	232
  1647  000320  5CDE               	subwf	postinc2,w,c
  1648  000322  0E03               	movlw	3
  1649  000324  58DE               	subwfb	postinc2,w,c
  1650  000326  A0D8               	btfss	status,0,c
  1651  000328  D011               	goto	l3462
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;buttonchanges.c: 52: pin[pin_selected].time = 0;
  1655  00032A  0100               	movlb	0	; () banked
  1656  00032C  517F               	movf	_pin_selected& (0+255),w,b
  1657  00032E  0D06               	mullw	6
  1658  000330  0E04               	movlw	4
  1659  000332  26F3               	addwf	prodl,f,c
  1660  000334  0E00               	movlw	0
  1661  000336  22F4               	addwfc	prodh,f,c
  1662  000338  0E00               	movlw	low _pin
  1663  00033A  24F3               	addwf	prodl,w,c
  1664  00033C  6ED9               	movwf	fsr2l,c
  1665  00033E  0E01               	movlw	high _pin
  1666  000340  20F4               	addwfc	prodh,w,c
  1667  000342  6EDA               	movwf	fsr2h,c
  1668  000344  0E00               	movlw	0
  1669  000346  6EDE               	movwf	postinc2,c
  1670  000348  0E00               	movlw	0
  1671  00034A  6EDD               	movwf	postdec2,c
  1672  00034C                     l3462:
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;buttonchanges.c: 53: }
  1676                           ;buttonchanges.c: 54: __nop();
  1677  00034C  F000               	nop	
  1678                           
  1679                           ;buttonchanges.c: 55: Set_Display('7', '-', pin[pin_selected].time);
  1680  00034E  0E2D               	movlw	45
  1681  000350  0100               	movlb	0	; () banked
  1682  000352  6F76               	movwf	Set_Display@information& (0+255),b
  1683  000354  0100               	movlb	0	; () banked
  1684  000356  517F               	movf	_pin_selected& (0+255),w,b
  1685  000358  0D06               	mullw	6
  1686  00035A  0E04               	movlw	4
  1687  00035C  26F3               	addwf	prodl,f,c
  1688  00035E  0E00               	movlw	0
  1689  000360  22F4               	addwfc	prodh,f,c
  1690  000362  0E00               	movlw	low _pin
  1691  000364  24F3               	addwf	prodl,w,c
  1692  000366  6ED9               	movwf	fsr2l,c
  1693  000368  0E01               	movlw	high _pin
  1694  00036A  20F4               	addwfc	prodh,w,c
  1695  00036C  6EDA               	movwf	fsr2h,c
  1696  00036E  CFDE F077          	movff	postinc2,Set_Display@value
  1697  000372  CFDD F078          	movff	postdec2,Set_Display@value+1
  1698  000376  0E37               	movlw	55
  1699  000378  EC1B  F009         	call	_Set_Display
  1700                           
  1701                           ;buttonchanges.c: 56: __nop();
  1702  00037C  F000               	nop	
  1703                           
  1704                           ;buttonchanges.c: 57: }
  1705                           ;buttonchanges.c: 58: } else if(PORTBbits.RB3 == 1) {
  1706  00037E  0012               	return	
  1707  000380                     l103:
  1708  000380  A681               	btfss	3969,3,c	;volatile
  1709  000382  D05B               	goto	l109
  1710                           
  1711                           ;buttonchanges.c: 59: Delay_Routine(3);
  1712  000384  0E03               	movlw	3
  1713  000386  EC93  F00B         	call	_Delay_Routine
  1714                           
  1715                           ;buttonchanges.c: 60: if(PORTBbits.RB3 == 1) {
  1716  00038A  A681               	btfss	3969,3,c	;volatile
  1717  00038C  0012               	return	
  1718                           
  1719                           ;buttonchanges.c: 61: __nop();
  1720  00038E  F000               	nop	
  1721                           
  1722                           ;buttonchanges.c: 62: if(PORTBbits.RB2 == 1) {
  1723  000390  A481               	btfss	3969,2,c	;volatile
  1724  000392  D008               	goto	l3482
  1725                           
  1726                           ;buttonchanges.c: 63: Delay_Routine(3);
  1727  000394  0E03               	movlw	3
  1728  000396  EC93  F00B         	call	_Delay_Routine
  1729                           
  1730                           ;buttonchanges.c: 64: if(PORTBbits.RB2 == 1) {
  1731  00039A  A481               	btfss	3969,2,c	;volatile
  1732  00039C  D003               	goto	l3482
  1733                           
  1734                           ;buttonchanges.c: 65: Del_Data();
  1735  00039E  ECAF  F009         	call	_Del_Data	;wreg free
  1736                           
  1737                           ;buttonchanges.c: 66: return;
  1738  0003A2  0012               	return	
  1739  0003A4                     l3482:
  1740                           
  1741                           ;buttonchanges.c: 68: }
  1742                           ;buttonchanges.c: 69: }
  1743                           ;buttonchanges.c: 70: pin[pin_selected].time--;
  1744  0003A4  0100               	movlb	0	; () banked
  1745  0003A6  517F               	movf	_pin_selected& (0+255),w,b
  1746  0003A8  0D06               	mullw	6
  1747  0003AA  0E04               	movlw	4
  1748  0003AC  26F3               	addwf	prodl,f,c
  1749  0003AE  0E00               	movlw	0
  1750  0003B0  22F4               	addwfc	prodh,f,c
  1751  0003B2  0E00               	movlw	low _pin
  1752  0003B4  24F3               	addwf	prodl,w,c
  1753  0003B6  6ED9               	movwf	fsr2l,c
  1754  0003B8  0E01               	movlw	high _pin
  1755  0003BA  20F4               	addwfc	prodh,w,c
  1756  0003BC  6EDA               	movwf	fsr2h,c
  1757  0003BE  06DE               	decf	postinc2,f,c
  1758  0003C0  0E00               	movlw	0
  1759  0003C2  5ADD               	subwfb	postdec2,f,c
  1760                           
  1761                           ;buttonchanges.c: 71: if(pin[pin_selected].time < 0) {
  1762  0003C4  0100               	movlb	0	; () banked
  1763  0003C6  517F               	movf	_pin_selected& (0+255),w,b
  1764  0003C8  0D06               	mullw	6
  1765  0003CA  0E04               	movlw	4
  1766  0003CC  26F3               	addwf	prodl,f,c
  1767  0003CE  0E00               	movlw	0
  1768  0003D0  22F4               	addwfc	prodh,f,c
  1769  0003D2  0E00               	movlw	low _pin
  1770  0003D4  24F3               	addwf	prodl,w,c
  1771  0003D6  6ED9               	movwf	fsr2l,c
  1772  0003D8  0E01               	movlw	high _pin
  1773  0003DA  20F4               	addwfc	prodh,w,c
  1774  0003DC  6EDA               	movwf	fsr2h,c
  1775  0003DE  0E01               	movlw	1
  1776  0003E0  AEDB               	btfss	plusw2,7,c
  1777  0003E2  D011               	goto	l3486
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;buttonchanges.c: 72: pin[pin_selected].time = 999;
  1781  0003E4  0100               	movlb	0	; () banked
  1782  0003E6  517F               	movf	_pin_selected& (0+255),w,b
  1783  0003E8  0D06               	mullw	6
  1784  0003EA  0E04               	movlw	4
  1785  0003EC  26F3               	addwf	prodl,f,c
  1786  0003EE  0E00               	movlw	0
  1787  0003F0  22F4               	addwfc	prodh,f,c
  1788  0003F2  0E00               	movlw	low _pin
  1789  0003F4  24F3               	addwf	prodl,w,c
  1790  0003F6  6ED9               	movwf	fsr2l,c
  1791  0003F8  0E01               	movlw	high _pin
  1792  0003FA  20F4               	addwfc	prodh,w,c
  1793  0003FC  6EDA               	movwf	fsr2h,c
  1794  0003FE  0EE7               	movlw	231
  1795  000400  6EDE               	movwf	postinc2,c
  1796  000402  0E03               	movlw	3
  1797  000404  6EDD               	movwf	postdec2,c
  1798  000406                     l3486:
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;buttonchanges.c: 73: }
  1802                           ;buttonchanges.c: 74: __nop();
  1803  000406  F000               	nop	
  1804                           
  1805                           ;buttonchanges.c: 75: Set_Display('7', '-', pin[pin_selected].time);
  1806  000408  0E2D               	movlw	45
  1807  00040A  0100               	movlb	0	; () banked
  1808  00040C  6F76               	movwf	Set_Display@information& (0+255),b
  1809  00040E  0100               	movlb	0	; () banked
  1810  000410  517F               	movf	_pin_selected& (0+255),w,b
  1811  000412  0D06               	mullw	6
  1812  000414  0E04               	movlw	4
  1813  000416  26F3               	addwf	prodl,f,c
  1814  000418  0E00               	movlw	0
  1815  00041A  22F4               	addwfc	prodh,f,c
  1816  00041C  0E00               	movlw	low _pin
  1817  00041E  24F3               	addwf	prodl,w,c
  1818  000420  6ED9               	movwf	fsr2l,c
  1819  000422  0E01               	movlw	high _pin
  1820  000424  20F4               	addwfc	prodh,w,c
  1821  000426  6EDA               	movwf	fsr2h,c
  1822  000428  CFDE F077          	movff	postinc2,Set_Display@value
  1823  00042C  CFDD F078          	movff	postdec2,Set_Display@value+1
  1824  000430  0E37               	movlw	55
  1825  000432  EC1B  F009         	call	_Set_Display
  1826                           
  1827                           ;buttonchanges.c: 76: __nop();
  1828  000436  F000               	nop	
  1829                           
  1830                           ;buttonchanges.c: 77: }
  1831                           ;buttonchanges.c: 78: } else if(PORTBbits.RB4 == 1) {
  1832  000438  0012               	return	
  1833  00043A                     l109:
  1834  00043A  A881               	btfss	3969,4,c	;volatile
  1835  00043C  D058               	goto	l115
  1836                           
  1837                           ;buttonchanges.c: 79: Delay_Routine(3);
  1838  00043E  0E03               	movlw	3
  1839  000440  EC93  F00B         	call	_Delay_Routine
  1840                           
  1841                           ;buttonchanges.c: 80: if(PORTBbits.RB4 == 1) {
  1842  000444  A881               	btfss	3969,4,c	;volatile
  1843  000446  0012               	return	
  1844                           
  1845                           ;buttonchanges.c: 81: __nop();
  1846  000448  F000               	nop	
  1847                           
  1848                           ;buttonchanges.c: 82: pin[pin_selected].time += 10;
  1849  00044A  0100               	movlb	0	; () banked
  1850  00044C  517F               	movf	_pin_selected& (0+255),w,b
  1851  00044E  0D06               	mullw	6
  1852  000450  0E04               	movlw	4
  1853  000452  26F3               	addwf	prodl,f,c
  1854  000454  0E00               	movlw	0
  1855  000456  22F4               	addwfc	prodh,f,c
  1856  000458  0E00               	movlw	low _pin
  1857  00045A  24F3               	addwf	prodl,w,c
  1858  00045C  6ED9               	movwf	fsr2l,c
  1859  00045E  0E01               	movlw	high _pin
  1860  000460  20F4               	addwfc	prodh,w,c
  1861  000462  6EDA               	movwf	fsr2h,c
  1862  000464  0E0A               	movlw	10
  1863  000466  26DE               	addwf	postinc2,f,c
  1864  000468  0E00               	movlw	0
  1865  00046A  22DD               	addwfc	postdec2,f,c
  1866                           
  1867                           ;buttonchanges.c: 83: if(pin[pin_selected].time > 999) {
  1868  00046C  0100               	movlb	0	; () banked
  1869  00046E  517F               	movf	_pin_selected& (0+255),w,b
  1870  000470  0D06               	mullw	6
  1871  000472  0E04               	movlw	4
  1872  000474  26F3               	addwf	prodl,f,c
  1873  000476  0E00               	movlw	0
  1874  000478  22F4               	addwfc	prodh,f,c
  1875  00047A  0E00               	movlw	low _pin
  1876  00047C  24F3               	addwf	prodl,w,c
  1877  00047E  6ED9               	movwf	fsr2l,c
  1878  000480  0E01               	movlw	high _pin
  1879  000482  20F4               	addwfc	prodh,w,c
  1880  000484  6EDA               	movwf	fsr2h,c
  1881  000486  0E01               	movlw	1
  1882  000488  BEDB               	btfsc	plusw2,7,c
  1883  00048A  D017               	goto	l3502
  1884  00048C  0EE8               	movlw	232
  1885  00048E  5CDE               	subwf	postinc2,w,c
  1886  000490  0E03               	movlw	3
  1887  000492  58DE               	subwfb	postinc2,w,c
  1888  000494  A0D8               	btfss	status,0,c
  1889  000496  D011               	goto	l3502
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;buttonchanges.c: 84: pin[pin_selected].time = 0;
  1893  000498  0100               	movlb	0	; () banked
  1894  00049A  517F               	movf	_pin_selected& (0+255),w,b
  1895  00049C  0D06               	mullw	6
  1896  00049E  0E04               	movlw	4
  1897  0004A0  26F3               	addwf	prodl,f,c
  1898  0004A2  0E00               	movlw	0
  1899  0004A4  22F4               	addwfc	prodh,f,c
  1900  0004A6  0E00               	movlw	low _pin
  1901  0004A8  24F3               	addwf	prodl,w,c
  1902  0004AA  6ED9               	movwf	fsr2l,c
  1903  0004AC  0E01               	movlw	high _pin
  1904  0004AE  20F4               	addwfc	prodh,w,c
  1905  0004B0  6EDA               	movwf	fsr2h,c
  1906  0004B2  0E00               	movlw	0
  1907  0004B4  6EDE               	movwf	postinc2,c
  1908  0004B6  0E00               	movlw	0
  1909  0004B8  6EDD               	movwf	postdec2,c
  1910  0004BA                     l3502:
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;buttonchanges.c: 85: }
  1914                           ;buttonchanges.c: 86: __nop();
  1915  0004BA  F000               	nop	
  1916                           
  1917                           ;buttonchanges.c: 87: Set_Display('7', '-', pin[pin_selected].time);
  1918  0004BC  0E2D               	movlw	45
  1919  0004BE  0100               	movlb	0	; () banked
  1920  0004C0  6F76               	movwf	Set_Display@information& (0+255),b
  1921  0004C2  0100               	movlb	0	; () banked
  1922  0004C4  517F               	movf	_pin_selected& (0+255),w,b
  1923  0004C6  0D06               	mullw	6
  1924  0004C8  0E04               	movlw	4
  1925  0004CA  26F3               	addwf	prodl,f,c
  1926  0004CC  0E00               	movlw	0
  1927  0004CE  22F4               	addwfc	prodh,f,c
  1928  0004D0  0E00               	movlw	low _pin
  1929  0004D2  24F3               	addwf	prodl,w,c
  1930  0004D4  6ED9               	movwf	fsr2l,c
  1931  0004D6  0E01               	movlw	high _pin
  1932  0004D8  20F4               	addwfc	prodh,w,c
  1933  0004DA  6EDA               	movwf	fsr2h,c
  1934  0004DC  CFDE F077          	movff	postinc2,Set_Display@value
  1935  0004E0  CFDD F078          	movff	postdec2,Set_Display@value+1
  1936  0004E4  0E37               	movlw	55
  1937  0004E6  EC1B  F009         	call	_Set_Display
  1938                           
  1939                           ;buttonchanges.c: 88: __nop();
  1940  0004EA  F000               	nop	
  1941                           
  1942                           ;buttonchanges.c: 89: }
  1943                           ;buttonchanges.c: 90: } else if(PORTBbits.RB1 == 1) {
  1944  0004EC  0012               	return	
  1945  0004EE                     l115:
  1946  0004EE  A281               	btfss	3969,1,c	;volatile
  1947  0004F0  D0C2               	goto	l119
  1948                           
  1949                           ;buttonchanges.c: 91: Delay_Routine(3);
  1950  0004F2  0E03               	movlw	3
  1951  0004F4  EC93  F00B         	call	_Delay_Routine
  1952                           
  1953                           ;buttonchanges.c: 92: if(PORTBbits.RB1 == 1) {
  1954  0004F8  A281               	btfss	3969,1,c	;volatile
  1955  0004FA  0012               	return	
  1956                           
  1957                           ;buttonchanges.c: 93: __nop();
  1958  0004FC  F000               	nop	
  1959                           
  1960                           ;buttonchanges.c: 94: if(PORTBbits.RB0 == 1) {
  1961  0004FE  A081               	btfss	3969,0,c	;volatile
  1962  000500  D017               	goto	l3528
  1963                           
  1964                           ;buttonchanges.c: 95: Delay_Routine(3);
  1965  000502  0E03               	movlw	3
  1966  000504  EC93  F00B         	call	_Delay_Routine
  1967                           
  1968                           ;buttonchanges.c: 96: if(PORTBbits.RB0 == 1) {
  1969  000508  A081               	btfss	3969,0,c	;volatile
  1970  00050A  D012               	goto	l3528
  1971                           
  1972                           ;buttonchanges.c: 97: testflag = 1;
  1973  00050C  8640               	bsf	_testflag/(0+8),_testflag& (0+7),c
  1974                           
  1975                           ;buttonchanges.c: 98: Set_Display('7', 'T',0);
  1976  00050E  0E54               	movlw	84
  1977  000510  0100               	movlb	0	; () banked
  1978  000512  6F76               	movwf	Set_Display@information& (0+255),b
  1979  000514  0E00               	movlw	0
  1980  000516  0100               	movlb	0	; () banked
  1981  000518  6F78               	movwf	(Set_Display@value+1)& (0+255),b
  1982  00051A  0E00               	movlw	0
  1983  00051C  6F77               	movwf	Set_Display@value& (0+255),b
  1984  00051E  0E37               	movlw	55
  1985  000520  EC1B  F009         	call	_Set_Display
  1986                           
  1987                           ;buttonchanges.c: 99: Delay_Routine(30);
  1988  000524  0E1E               	movlw	30
  1989  000526  EC93  F00B         	call	_Delay_Routine
  1990                           
  1991                           ;buttonchanges.c: 100: Check_Detonators();
  1992  00052A  EC41  F00B         	call	_Check_Detonators	;wreg free
  1993                           
  1994                           ;buttonchanges.c: 101: return;
  1995  00052E  0012               	return	
  1996  000530                     l3528:
  1997                           
  1998                           ;buttonchanges.c: 103: }
  1999                           ;buttonchanges.c: 104: }
  2000                           ;buttonchanges.c: 105: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2001  000530  0100               	movlb	0	; () banked
  2002  000532  517F               	movf	_pin_selected& (0+255),w,b
  2003  000534  0D06               	mullw	6
  2004  000536  0E04               	movlw	4
  2005  000538  26F3               	addwf	prodl,f,c
  2006  00053A  0E00               	movlw	0
  2007  00053C  22F4               	addwfc	prodh,f,c
  2008  00053E  0E00               	movlw	low _pin
  2009  000540  24F3               	addwf	prodl,w,c
  2010  000542  6ED9               	movwf	fsr2l,c
  2011  000544  0E01               	movlw	high _pin
  2012  000546  20F4               	addwfc	prodh,w,c
  2013  000548  6EDA               	movwf	fsr2h,c
  2014  00054A  CFDE F060          	movff	postinc2,Save_Data@store
  2015  00054E  CFDD F061          	movff	postdec2,Save_Data@store+1
  2016  000552  0100               	movlb	0	; () banked
  2017  000554  517F               	movf	_pin_selected& (0+255),w,b
  2018  000556  0D06               	mullw	6
  2019  000558  0E02               	movlw	2
  2020  00055A  26F3               	addwf	prodl,f,c
  2021  00055C  0E00               	movlw	0
  2022  00055E  22F4               	addwfc	prodh,f,c
  2023  000560  0E00               	movlw	low _pin
  2024  000562  24F3               	addwf	prodl,w,c
  2025  000564  6ED9               	movwf	fsr2l,c
  2026  000566  0E01               	movlw	high _pin
  2027  000568  20F4               	addwfc	prodh,w,c
  2028  00056A  6EDA               	movwf	fsr2h,c
  2029  00056C  50DF               	movf	indf2,w,c
  2030  00056E  0100               	movlb	0	; () banked
  2031  000570  6F62               	movwf	Save_Data@store_address& (0+255),b
  2032  000572  EC35  F00A         	call	_Save_Data	;wreg free
  2033                           
  2034                           ;buttonchanges.c: 106: pin_selected++;
  2035  000576  0100               	movlb	0	; () banked
  2036  000578  2B7F               	incf	_pin_selected& (0+255),f,b
  2037                           
  2038                           ;buttonchanges.c: 107: switch (slave_selected) {
  2039  00057A  D014               	goto	l3546
  2040  00057C                     l3532:
  2041                           
  2042                           ; BSR set to: 0
  2043                           ;buttonchanges.c: 109: if(pin_selected > 9) {
  2044  00057C  0E09               	movlw	9
  2045  00057E  0100               	movlb	0	; () banked
  2046  000580  657F               	cpfsgt	_pin_selected& (0+255),b
  2047  000582  D01B               	goto	l3548
  2048                           
  2049                           ; BSR set to: 0
  2050                           ;buttonchanges.c: 110: pin_selected = 0;
  2051  000584  0E00               	movlw	0
  2052  000586  D00B               	goto	L2
  2053  000588                     l3536:
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;buttonchanges.c: 114: if(pin_selected > 19) {
  2057  000588  0E13               	movlw	19
  2058  00058A  0100               	movlb	0	; () banked
  2059  00058C  657F               	cpfsgt	_pin_selected& (0+255),b
  2060  00058E  D015               	goto	l3548
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;buttonchanges.c: 115: pin_selected = 10;
  2064  000590  0E0A               	movlw	10
  2065  000592  D005               	goto	L2
  2066  000594                     l3540:
  2067                           
  2068                           ; BSR set to: 0
  2069                           ;buttonchanges.c: 119: if(pin_selected > 29) {
  2070  000594  0E1D               	movlw	29
  2071  000596  0100               	movlb	0	; () banked
  2072  000598  657F               	cpfsgt	_pin_selected& (0+255),b
  2073  00059A  D00F               	goto	l3548
  2074                           
  2075                           ; BSR set to: 0
  2076                           ;buttonchanges.c: 120: pin_selected = 20;
  2077  00059C  0E14               	movlw	20
  2078  00059E                     L2:
  2079  00059E  0100               	movlb	0	; () banked
  2080  0005A0  6F7F               	movwf	_pin_selected& (0+255),b
  2081                           
  2082                           ; BSR set to: 0
  2083                           ;buttonchanges.c: 123: }
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;buttonchanges.c: 121: }
  2087                           ;buttonchanges.c: 122: break;
  2088  0005A2  D00B               	goto	l3548
  2089  0005A4                     l3546:
  2090                           
  2091                           ; BSR set to: 0
  2092  0005A4  0100               	movlb	0	; () banked
  2093  0005A6  5180               	movf	_slave_selected& (0+255),w,b
  2094                           
  2095                           ; Switch size 1, requested type "space"
  2096                           ; Number of cases is 3, Range of values is 0 to 2
  2097                           ; switch strategies available:
  2098                           ; Name         Instructions Cycles
  2099                           ; simple_byte           10     6 (average)
  2100                           ;	Chosen strategy is simple_byte
  2101  0005A8  0A00               	xorlw	0	; case 0
  2102  0005AA  B4D8               	btfsc	status,2,c
  2103  0005AC  D7E7               	goto	l3532
  2104  0005AE  0A01               	xorlw	1	; case 1
  2105  0005B0  B4D8               	btfsc	status,2,c
  2106  0005B2  D7EA               	goto	l3536
  2107  0005B4  0A03               	xorlw	3	; case 2
  2108  0005B6  B4D8               	btfsc	status,2,c
  2109  0005B8  D7ED               	goto	l3540
  2110  0005BA                     l3548:
  2111                           
  2112                           ; BSR set to: 0
  2113                           ;buttonchanges.c: 124: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2114  0005BA  0100               	movlb	0	; () banked
  2115  0005BC  517F               	movf	_pin_selected& (0+255),w,b
  2116  0005BE  0D06               	mullw	6
  2117  0005C0  0E02               	movlw	2
  2118  0005C2  26F3               	addwf	prodl,f,c
  2119  0005C4  0E00               	movlw	0
  2120  0005C6  22F4               	addwfc	prodh,f,c
  2121  0005C8  0E00               	movlw	low _pin
  2122  0005CA  24F3               	addwf	prodl,w,c
  2123  0005CC  6ED9               	movwf	fsr2l,c
  2124  0005CE  0E01               	movlw	high _pin
  2125  0005D0  20F4               	addwfc	prodh,w,c
  2126  0005D2  6EDA               	movwf	fsr2h,c
  2127  0005D4  50DF               	movf	indf2,w,c
  2128  0005D6  ECB4  F00A         	call	_Read_Data
  2129  0005DA  0100               	movlb	0	; () banked
  2130  0005DC  517F               	movf	_pin_selected& (0+255),w,b
  2131  0005DE  0D06               	mullw	6
  2132  0005E0  0E04               	movlw	4
  2133  0005E2  26F3               	addwf	prodl,f,c
  2134  0005E4  0E00               	movlw	0
  2135  0005E6  22F4               	addwfc	prodh,f,c
  2136  0005E8  0E00               	movlw	low _pin
  2137  0005EA  24F3               	addwf	prodl,w,c
  2138  0005EC  6ED9               	movwf	fsr2l,c
  2139  0005EE  0E01               	movlw	high _pin
  2140  0005F0  20F4               	addwfc	prodh,w,c
  2141  0005F2  6EDA               	movwf	fsr2h,c
  2142  0005F4  0100               	movlb	0	; () banked
  2143  0005F6  C060  FFDE         	movff	?_Read_Data,postinc2
  2144  0005FA  0100               	movlb	0	; () banked
  2145  0005FC  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;buttonchanges.c: 125: __nop();
  2149  000600  F000               	nop	
  2150                           
  2151                           ;buttonchanges.c: 126: Set_Display('7', 'A', pin[pin_selected].output);
  2152  000602  0E41               	movlw	65
  2153  000604  0100               	movlb	0	; () banked
  2154  000606  6F76               	movwf	Set_Display@information& (0+255),b
  2155  000608  0100               	movlb	0	; () banked
  2156  00060A  517F               	movf	_pin_selected& (0+255),w,b
  2157  00060C  0D06               	mullw	6
  2158  00060E  0E01               	movlw	1
  2159  000610  26F3               	addwf	prodl,f,c
  2160  000612  0E00               	movlw	0
  2161  000614  22F4               	addwfc	prodh,f,c
  2162  000616  0E00               	movlw	low _pin
  2163  000618  24F3               	addwf	prodl,w,c
  2164  00061A  6ED9               	movwf	fsr2l,c
  2165  00061C  0E01               	movlw	high _pin
  2166  00061E  20F4               	addwfc	prodh,w,c
  2167  000620  6EDA               	movwf	fsr2h,c
  2168  000622  50DF               	movf	indf2,w,c
  2169  000624  0100               	movlb	0	; () banked
  2170  000626  6F7D               	movwf	??_Check_Buttons& (0+255),b
  2171  000628  0100               	movlb	0	; () banked
  2172  00062A  517D               	movf	??_Check_Buttons& (0+255),w,b
  2173  00062C  0100               	movlb	0	; () banked
  2174  00062E  6F77               	movwf	Set_Display@value& (0+255),b
  2175  000630  6B78               	clrf	(Set_Display@value+1)& (0+255),b
  2176  000632  0E37               	movlw	55
  2177  000634  EC1B  F009         	call	_Set_Display
  2178                           
  2179                           ;buttonchanges.c: 127: Delay_Routine(30);
  2180  000638  0E1E               	movlw	30
  2181  00063A  EC93  F00B         	call	_Delay_Routine
  2182                           
  2183                           ;buttonchanges.c: 128: Set_Display('7', '-', pin[pin_selected].time);
  2184  00063E  0E2D               	movlw	45
  2185  000640  0100               	movlb	0	; () banked
  2186  000642  6F76               	movwf	Set_Display@information& (0+255),b
  2187  000644  0100               	movlb	0	; () banked
  2188  000646  517F               	movf	_pin_selected& (0+255),w,b
  2189  000648  0D06               	mullw	6
  2190  00064A  0E04               	movlw	4
  2191  00064C  26F3               	addwf	prodl,f,c
  2192  00064E  0E00               	movlw	0
  2193  000650  22F4               	addwfc	prodh,f,c
  2194  000652  0E00               	movlw	low _pin
  2195  000654  24F3               	addwf	prodl,w,c
  2196  000656  6ED9               	movwf	fsr2l,c
  2197  000658  0E01               	movlw	high _pin
  2198  00065A  20F4               	addwfc	prodh,w,c
  2199  00065C  6EDA               	movwf	fsr2h,c
  2200  00065E  CFDE F077          	movff	postinc2,Set_Display@value
  2201  000662  CFDD F078          	movff	postdec2,Set_Display@value+1
  2202  000666  0E37               	movlw	55
  2203  000668  EC1B  F009         	call	_Set_Display
  2204                           
  2205                           ;buttonchanges.c: 129: Delay_Routine(30);
  2206  00066C  0E1E               	movlw	30
  2207  00066E  EC93  F00B         	call	_Delay_Routine
  2208                           
  2209                           ;buttonchanges.c: 130: __nop();
  2210  000672  F000               	nop	
  2211                           
  2212                           ;buttonchanges.c: 131: }
  2213                           ;buttonchanges.c: 132: } else if(PORTBbits.RB0 == 1) {
  2214  000674  0012               	return	
  2215  000676                     l119:
  2216  000676  A081               	btfss	3969,0,c	;volatile
  2217  000678  D0C8               	goto	l132
  2218                           
  2219                           ;buttonchanges.c: 133: Delay_Routine(3);
  2220  00067A  0E03               	movlw	3
  2221  00067C  EC93  F00B         	call	_Delay_Routine
  2222                           
  2223                           ;buttonchanges.c: 134: if(PORTBbits.RB0 == 1) {
  2224  000680  A081               	btfss	3969,0,c	;volatile
  2225  000682  0012               	return	
  2226                           
  2227                           ;buttonchanges.c: 135: __nop();
  2228  000684  F000               	nop	
  2229                           
  2230                           ;buttonchanges.c: 136: if(PORTBbits.RB1 == 1) {
  2231  000686  A281               	btfss	3969,1,c	;volatile
  2232  000688  D017               	goto	l3582
  2233                           
  2234                           ;buttonchanges.c: 137: Delay_Routine(3);
  2235  00068A  0E03               	movlw	3
  2236  00068C  EC93  F00B         	call	_Delay_Routine
  2237                           
  2238                           ;buttonchanges.c: 138: if(PORTBbits.RB1 == 1) {
  2239  000690  A281               	btfss	3969,1,c	;volatile
  2240  000692  D012               	goto	l3582
  2241                           
  2242                           ;buttonchanges.c: 139: testflag = 1;
  2243  000694  8640               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2244                           
  2245                           ;buttonchanges.c: 140: Set_Display('7', 'T',0);
  2246  000696  0E54               	movlw	84
  2247  000698  0100               	movlb	0	; () banked
  2248  00069A  6F76               	movwf	Set_Display@information& (0+255),b
  2249  00069C  0E00               	movlw	0
  2250  00069E  0100               	movlb	0	; () banked
  2251  0006A0  6F78               	movwf	(Set_Display@value+1)& (0+255),b
  2252  0006A2  0E00               	movlw	0
  2253  0006A4  6F77               	movwf	Set_Display@value& (0+255),b
  2254  0006A6  0E37               	movlw	55
  2255  0006A8  EC1B  F009         	call	_Set_Display
  2256                           
  2257                           ;buttonchanges.c: 141: Delay_Routine(30);
  2258  0006AC  0E1E               	movlw	30
  2259  0006AE  EC93  F00B         	call	_Delay_Routine
  2260                           
  2261                           ;buttonchanges.c: 142: Check_Detonators();
  2262  0006B2  EC41  F00B         	call	_Check_Detonators	;wreg free
  2263                           
  2264                           ;buttonchanges.c: 143: return;
  2265  0006B6  0012               	return	
  2266  0006B8                     l3582:
  2267                           
  2268                           ;buttonchanges.c: 145: }
  2269                           ;buttonchanges.c: 146: }
  2270                           ;buttonchanges.c: 147: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2271  0006B8  0100               	movlb	0	; () banked
  2272  0006BA  517F               	movf	_pin_selected& (0+255),w,b
  2273  0006BC  0D06               	mullw	6
  2274  0006BE  0E04               	movlw	4
  2275  0006C0  26F3               	addwf	prodl,f,c
  2276  0006C2  0E00               	movlw	0
  2277  0006C4  22F4               	addwfc	prodh,f,c
  2278  0006C6  0E00               	movlw	low _pin
  2279  0006C8  24F3               	addwf	prodl,w,c
  2280  0006CA  6ED9               	movwf	fsr2l,c
  2281  0006CC  0E01               	movlw	high _pin
  2282  0006CE  20F4               	addwfc	prodh,w,c
  2283  0006D0  6EDA               	movwf	fsr2h,c
  2284  0006D2  CFDE F060          	movff	postinc2,Save_Data@store
  2285  0006D6  CFDD F061          	movff	postdec2,Save_Data@store+1
  2286  0006DA  0100               	movlb	0	; () banked
  2287  0006DC  517F               	movf	_pin_selected& (0+255),w,b
  2288  0006DE  0D06               	mullw	6
  2289  0006E0  0E02               	movlw	2
  2290  0006E2  26F3               	addwf	prodl,f,c
  2291  0006E4  0E00               	movlw	0
  2292  0006E6  22F4               	addwfc	prodh,f,c
  2293  0006E8  0E00               	movlw	low _pin
  2294  0006EA  24F3               	addwf	prodl,w,c
  2295  0006EC  6ED9               	movwf	fsr2l,c
  2296  0006EE  0E01               	movlw	high _pin
  2297  0006F0  20F4               	addwfc	prodh,w,c
  2298  0006F2  6EDA               	movwf	fsr2h,c
  2299  0006F4  50DF               	movf	indf2,w,c
  2300  0006F6  0100               	movlb	0	; () banked
  2301  0006F8  6F62               	movwf	Save_Data@store_address& (0+255),b
  2302  0006FA  EC35  F00A         	call	_Save_Data	;wreg free
  2303                           
  2304                           ;buttonchanges.c: 148: slave_selected++;
  2305  0006FE  0100               	movlb	0	; () banked
  2306  000700  2B80               	incf	_slave_selected& (0+255),f,b
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;buttonchanges.c: 149: if(slave_selected > 2) {
  2310  000702  0E02               	movlw	2
  2311  000704  0100               	movlb	0	; () banked
  2312  000706  6580               	cpfsgt	_slave_selected& (0+255),b
  2313  000708  D003               	goto	l3590
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;buttonchanges.c: 150: slave_selected = 0;
  2317  00070A  0E00               	movlw	0
  2318  00070C  0100               	movlb	0	; () banked
  2319  00070E  6F80               	movwf	_slave_selected& (0+255),b
  2320  000710                     l3590:
  2321                           
  2322                           ; BSR set to: 0
  2323                           ;buttonchanges.c: 151: }
  2324                           ;buttonchanges.c: 152: pin_selected = slave_selected * 10;
  2325  000710  0100               	movlb	0	; () banked
  2326  000712  5180               	movf	_slave_selected& (0+255),w,b
  2327  000714  0D0A               	mullw	10
  2328  000716  CFF3 F07F          	movff	prodl,_pin_selected
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;buttonchanges.c: 153: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2332  00071A  0100               	movlb	0	; () banked
  2333  00071C  517F               	movf	_pin_selected& (0+255),w,b
  2334  00071E  0D06               	mullw	6
  2335  000720  0E02               	movlw	2
  2336  000722  26F3               	addwf	prodl,f,c
  2337  000724  0E00               	movlw	0
  2338  000726  22F4               	addwfc	prodh,f,c
  2339  000728  0E00               	movlw	low _pin
  2340  00072A  24F3               	addwf	prodl,w,c
  2341  00072C  6ED9               	movwf	fsr2l,c
  2342  00072E  0E01               	movlw	high _pin
  2343  000730  20F4               	addwfc	prodh,w,c
  2344  000732  6EDA               	movwf	fsr2h,c
  2345  000734  50DF               	movf	indf2,w,c
  2346  000736  ECB4  F00A         	call	_Read_Data
  2347  00073A  0100               	movlb	0	; () banked
  2348  00073C  517F               	movf	_pin_selected& (0+255),w,b
  2349  00073E  0D06               	mullw	6
  2350  000740  0E04               	movlw	4
  2351  000742  26F3               	addwf	prodl,f,c
  2352  000744  0E00               	movlw	0
  2353  000746  22F4               	addwfc	prodh,f,c
  2354  000748  0E00               	movlw	low _pin
  2355  00074A  24F3               	addwf	prodl,w,c
  2356  00074C  6ED9               	movwf	fsr2l,c
  2357  00074E  0E01               	movlw	high _pin
  2358  000750  20F4               	addwfc	prodh,w,c
  2359  000752  6EDA               	movwf	fsr2h,c
  2360  000754  0100               	movlb	0	; () banked
  2361  000756  C060  FFDE         	movff	?_Read_Data,postinc2
  2362  00075A  0100               	movlb	0	; () banked
  2363  00075C  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;buttonchanges.c: 154: __nop();
  2367  000760  F000               	nop	
  2368                           
  2369                           ;buttonchanges.c: 155: Set_Display('7', 'E', pin[pin_selected].slave);
  2370  000762  0E45               	movlw	69
  2371  000764  0100               	movlb	0	; () banked
  2372  000766  6F76               	movwf	Set_Display@information& (0+255),b
  2373  000768  0100               	movlb	0	; () banked
  2374  00076A  517F               	movf	_pin_selected& (0+255),w,b
  2375  00076C  0D06               	mullw	6
  2376  00076E  0E00               	movlw	low _pin
  2377  000770  24F3               	addwf	prodl,w,c
  2378  000772  6ED9               	movwf	fsr2l,c
  2379  000774  0E01               	movlw	high _pin
  2380  000776  20F4               	addwfc	prodh,w,c
  2381  000778  6EDA               	movwf	fsr2h,c
  2382  00077A  50DF               	movf	indf2,w,c
  2383  00077C  0100               	movlb	0	; () banked
  2384  00077E  6F7D               	movwf	??_Check_Buttons& (0+255),b
  2385  000780  0100               	movlb	0	; () banked
  2386  000782  517D               	movf	??_Check_Buttons& (0+255),w,b
  2387  000784  0100               	movlb	0	; () banked
  2388  000786  6F77               	movwf	Set_Display@value& (0+255),b
  2389  000788  6B78               	clrf	(Set_Display@value+1)& (0+255),b
  2390  00078A  0E37               	movlw	55
  2391  00078C  EC1B  F009         	call	_Set_Display
  2392                           
  2393                           ;buttonchanges.c: 157: Delay_Routine(30);
  2394  000790  0E1E               	movlw	30
  2395  000792  EC93  F00B         	call	_Delay_Routine
  2396                           
  2397                           ;buttonchanges.c: 158: Set_Display('7', 'A', pin[pin_selected].output);
  2398  000796  0E41               	movlw	65
  2399  000798  0100               	movlb	0	; () banked
  2400  00079A  6F76               	movwf	Set_Display@information& (0+255),b
  2401  00079C  0100               	movlb	0	; () banked
  2402  00079E  517F               	movf	_pin_selected& (0+255),w,b
  2403  0007A0  0D06               	mullw	6
  2404  0007A2  0E01               	movlw	1
  2405  0007A4  26F3               	addwf	prodl,f,c
  2406  0007A6  0E00               	movlw	0
  2407  0007A8  22F4               	addwfc	prodh,f,c
  2408  0007AA  0E00               	movlw	low _pin
  2409  0007AC  24F3               	addwf	prodl,w,c
  2410  0007AE  6ED9               	movwf	fsr2l,c
  2411  0007B0  0E01               	movlw	high _pin
  2412  0007B2  20F4               	addwfc	prodh,w,c
  2413  0007B4  6EDA               	movwf	fsr2h,c
  2414  0007B6  50DF               	movf	indf2,w,c
  2415  0007B8  0100               	movlb	0	; () banked
  2416  0007BA  6F7D               	movwf	??_Check_Buttons& (0+255),b
  2417  0007BC  0100               	movlb	0	; () banked
  2418  0007BE  517D               	movf	??_Check_Buttons& (0+255),w,b
  2419  0007C0  0100               	movlb	0	; () banked
  2420  0007C2  6F77               	movwf	Set_Display@value& (0+255),b
  2421  0007C4  6B78               	clrf	(Set_Display@value+1)& (0+255),b
  2422  0007C6  0E37               	movlw	55
  2423  0007C8  EC1B  F009         	call	_Set_Display
  2424                           
  2425                           ;buttonchanges.c: 159: Delay_Routine(30);
  2426  0007CC  0E1E               	movlw	30
  2427  0007CE  EC93  F00B         	call	_Delay_Routine
  2428                           
  2429                           ;buttonchanges.c: 160: Set_Display('7', '-', pin[pin_selected].time);
  2430  0007D2  0E2D               	movlw	45
  2431  0007D4  0100               	movlb	0	; () banked
  2432  0007D6  6F76               	movwf	Set_Display@information& (0+255),b
  2433  0007D8  0100               	movlb	0	; () banked
  2434  0007DA  517F               	movf	_pin_selected& (0+255),w,b
  2435  0007DC  0D06               	mullw	6
  2436  0007DE  0E04               	movlw	4
  2437  0007E0  26F3               	addwf	prodl,f,c
  2438  0007E2  0E00               	movlw	0
  2439  0007E4  22F4               	addwfc	prodh,f,c
  2440  0007E6  0E00               	movlw	low _pin
  2441  0007E8  24F3               	addwf	prodl,w,c
  2442  0007EA  6ED9               	movwf	fsr2l,c
  2443  0007EC  0E01               	movlw	high _pin
  2444  0007EE  20F4               	addwfc	prodh,w,c
  2445  0007F0  6EDA               	movwf	fsr2h,c
  2446  0007F2  CFDE F077          	movff	postinc2,Set_Display@value
  2447  0007F6  CFDD F078          	movff	postdec2,Set_Display@value+1
  2448  0007FA  0E37               	movlw	55
  2449  0007FC  EC1B  F009         	call	_Set_Display
  2450                           
  2451                           ;buttonchanges.c: 161: Delay_Routine(30);
  2452  000800  0E1E               	movlw	30
  2453  000802  EC93  F00B         	call	_Delay_Routine
  2454                           
  2455                           ;buttonchanges.c: 162: __nop();
  2456  000806  F000               	nop	
  2457                           
  2458                           ;buttonchanges.c: 163: }
  2459                           ;buttonchanges.c: 164: } else {
  2460  000808  0012               	return	
  2461  00080A                     l132:
  2462                           
  2463                           ;buttonchanges.c: 165: __nop();
  2464  00080A  F000               	nop	
  2465  00080C  0012               	return	
  2466  00080E                     __end_of_Check_Buttons:
  2467                           	opt stack 0
  2468                           tblptru	equ	0xFF8
  2469                           tblptrh	equ	0xFF7
  2470                           tblptrl	equ	0xFF6
  2471                           tablat	equ	0xFF5
  2472                           prodh	equ	0xFF4
  2473                           prodl	equ	0xFF3
  2474                           intcon	equ	0xFF2
  2475                           postinc0	equ	0xFEE
  2476                           wreg	equ	0xFE8
  2477                           postdec1	equ	0xFE5
  2478                           fsr1l	equ	0xFE1
  2479                           indf2	equ	0xFDF
  2480                           postinc2	equ	0xFDE
  2481                           postdec2	equ	0xFDD
  2482                           plusw2	equ	0xFDB
  2483                           fsr2h	equ	0xFDA
  2484                           fsr2l	equ	0xFD9
  2485                           status	equ	0xFD8
  2486                           
  2487 ;; *************** function _Start_Timer *****************
  2488 ;; Defined at:
  2489 ;;		line 12 in file "ignition.c"
  2490 ;; Parameters:    Size  Location     Type
  2491 ;;		None
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;		None
  2494 ;; Return value:  Size  Location     Type
  2495 ;;		None               void
  2496 ;; Registers used:
  2497 ;;		wreg, status,2
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1
  2503 ;;      Params:         0       0       0
  2504 ;;      Locals:         0       0       0
  2505 ;;      Temps:          0       0       0
  2506 ;;      Totals:         0       0       0
  2507 ;;Total ram usage:        0 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    5
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_Check_Buttons
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text10
  2518  0017BC                     __ptext10:
  2519                           	opt stack 0
  2520  0017BC                     _Start_Timer:
  2521                           	opt stack 24
  2522                           
  2523                           ;ignition.c: 13: if(ignite_ready == 1) {
  2524                           
  2525                           ;incstack = 0
  2526  0017BC  A040               	btfss	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  2527  0017BE  0012               	return	
  2528                           
  2529                           ;ignition.c: 14: TMR1L = 0;
  2530  0017C0  0E00               	movlw	0
  2531  0017C2  6ECE               	movwf	4046,c	;volatile
  2532                           
  2533                           ;ignition.c: 15: TMR1H = 0;
  2534  0017C4  0E00               	movlw	0
  2535  0017C6  6ECF               	movwf	4047,c	;volatile
  2536                           
  2537                           ;ignition.c: 16: TMR3L = 0;
  2538  0017C8  0E00               	movlw	0
  2539  0017CA  6EB2               	movwf	4018,c	;volatile
  2540                           
  2541                           ;ignition.c: 17: TMR3H = 0;
  2542  0017CC  0E00               	movlw	0
  2543  0017CE  6EB3               	movwf	4019,c	;volatile
  2544                           
  2545                           ;ignition.c: 18: PIR1bits.TMR1IF = 0;
  2546  0017D0  909E               	bcf	3998,0,c	;volatile
  2547                           
  2548                           ;ignition.c: 19: PIR2bits.TMR3IF = 0;
  2549  0017D2  92A1               	bcf	4001,1,c	;volatile
  2550                           
  2551                           ;ignition.c: 20: T1CONbits.TMR1ON = 1;
  2552  0017D4  80CD               	bsf	4045,0,c	;volatile
  2553  0017D6  0012               	return	
  2554  0017D8                     __end_of_Start_Timer:
  2555                           	opt stack 0
  2556                           tblptru	equ	0xFF8
  2557                           tblptrh	equ	0xFF7
  2558                           tblptrl	equ	0xFF6
  2559                           tablat	equ	0xFF5
  2560                           prodh	equ	0xFF4
  2561                           prodl	equ	0xFF3
  2562                           intcon	equ	0xFF2
  2563                           postinc0	equ	0xFEE
  2564                           wreg	equ	0xFE8
  2565                           postdec1	equ	0xFE5
  2566                           fsr1l	equ	0xFE1
  2567                           indf2	equ	0xFDF
  2568                           postinc2	equ	0xFDE
  2569                           postdec2	equ	0xFDD
  2570                           plusw2	equ	0xFDB
  2571                           fsr2h	equ	0xFDA
  2572                           fsr2l	equ	0xFD9
  2573                           status	equ	0xFD8
  2574                           
  2575 ;; *************** function _Del_Data *****************
  2576 ;; Defined at:
  2577 ;;		line 90 in file "storage.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;		None
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  counter         1   28[BANK0 ] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;		None               void
  2584 ;; Registers used:
  2585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1
  2591 ;;      Params:         0       0       0
  2592 ;;      Locals:         0       1       0
  2593 ;;      Temps:          0       0       0
  2594 ;;      Totals:         0       1       0
  2595 ;;Total ram usage:        1 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:   10
  2598 ;; This function calls:
  2599 ;;		_Delay_Routine
  2600 ;;		_Evaluate_Display
  2601 ;;		_Load_Data
  2602 ;;		_Save_Data
  2603 ;; This function is called by:
  2604 ;;		_Check_Buttons
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text11
  2609  00135E                     __ptext11:
  2610                           	opt stack 0
  2611  00135E                     _Del_Data:
  2612                           	opt stack 19
  2613                           
  2614                           ;storage.c: 91: string_delete[0] = 'D';
  2615                           
  2616                           ;incstack = 0
  2617  00135E  0E44               	movlw	68
  2618  001360  0100               	movlb	0	; () banked
  2619  001362  6F84               	movwf	_string_delete& (0+255),b
  2620                           
  2621                           ;storage.c: 92: string_delete[1] = 'E';
  2622  001364  0E45               	movlw	69
  2623  001366  0100               	movlb	0	; () banked
  2624  001368  6F85               	movwf	(_string_delete+1)& (0+255),b
  2625                           
  2626                           ;storage.c: 93: string_delete[2] = 'L';
  2627  00136A  0E4C               	movlw	76
  2628  00136C  0100               	movlb	0	; () banked
  2629  00136E  6F86               	movwf	(_string_delete+2)& (0+255),b
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;storage.c: 95: Evaluate_Display(3, string_delete);
  2633  001370  0E84               	movlw	low _string_delete
  2634  001372  0100               	movlb	0	; () banked
  2635  001374  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  2636  001376  0E00               	movlw	high _string_delete
  2637  001378  0100               	movlb	0	; () banked
  2638  00137A  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  2639  00137C  0E03               	movlw	3
  2640  00137E  EC07  F004         	call	_Evaluate_Display
  2641                           
  2642                           ;storage.c: 96: Delay_Routine(30);
  2643  001382  0E1E               	movlw	30
  2644  001384  EC93  F00B         	call	_Delay_Routine
  2645                           
  2646                           ;storage.c: 97: for(unsigned char counter = 0; counter < 30; counter++) {
  2647  001388  0E00               	movlw	0
  2648  00138A  0100               	movlb	0	; () banked
  2649  00138C  6F7C               	movwf	Del_Data@counter& (0+255),b
  2650  00138E                     l3370:
  2651                           
  2652                           ; BSR set to: 0
  2653  00138E  0E1D               	movlw	29
  2654  001390  0100               	movlb	0	; () banked
  2655  001392  657C               	cpfsgt	Del_Data@counter& (0+255),b
  2656  001394  D001               	goto	l3374
  2657  001396  D00C               	goto	l3380
  2658  001398                     l3374:
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;storage.c: 98: Save_Data(0, counter);
  2662  001398  0E00               	movlw	0
  2663  00139A  0100               	movlb	0	; () banked
  2664  00139C  6F61               	movwf	(Save_Data@store+1)& (0+255),b
  2665  00139E  0E00               	movlw	0
  2666  0013A0  6F60               	movwf	Save_Data@store& (0+255),b
  2667  0013A2  C07C  F062         	movff	Del_Data@counter,Save_Data@store_address
  2668  0013A6  EC35  F00A         	call	_Save_Data	;wreg free
  2669  0013AA  0100               	movlb	0	; () banked
  2670  0013AC  2B7C               	incf	Del_Data@counter& (0+255),f,b
  2671  0013AE  D7EF               	goto	l3370
  2672  0013B0                     l3380:
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;storage.c: 99: }
  2676                           ;storage.c: 100: Load_Data();
  2677  0013B0  ECEB  F005         	call	_Load_Data	;wreg free
  2678                           
  2679                           ;storage.c: 101: __nop();
  2680  0013B4  F000               	nop	
  2681  0013B6  0012               	return		;funcret
  2682  0013B8                     __end_of_Del_Data:
  2683                           	opt stack 0
  2684                           tblptru	equ	0xFF8
  2685                           tblptrh	equ	0xFF7
  2686                           tblptrl	equ	0xFF6
  2687                           tablat	equ	0xFF5
  2688                           prodh	equ	0xFF4
  2689                           prodl	equ	0xFF3
  2690                           intcon	equ	0xFF2
  2691                           postinc0	equ	0xFEE
  2692                           wreg	equ	0xFE8
  2693                           postdec1	equ	0xFE5
  2694                           fsr1l	equ	0xFE1
  2695                           indf2	equ	0xFDF
  2696                           postinc2	equ	0xFDE
  2697                           postdec2	equ	0xFDD
  2698                           plusw2	equ	0xFDB
  2699                           fsr2h	equ	0xFDA
  2700                           fsr2l	equ	0xFD9
  2701                           status	equ	0xFD8
  2702                           
  2703 ;; *************** function _Save_Data *****************
  2704 ;; Defined at:
  2705 ;;		line 8 in file "storage.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  store           2    0[BANK0 ] unsigned int 
  2708 ;;  store_addres    1    2[BANK0 ] unsigned char 
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;		None               void
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1
  2720 ;;      Params:         0       3       0
  2721 ;;      Locals:         0       0       0
  2722 ;;      Temps:          0       0       0
  2723 ;;      Totals:         0       3       0
  2724 ;;Total ram usage:        3 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    5
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_Check_Buttons
  2731 ;;		_Del_Data
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text12
  2736  00146A                     __ptext12:
  2737                           	opt stack 0
  2738  00146A                     _Save_Data:
  2739                           	opt stack 24
  2740                           
  2741                           ;storage.c: 10: EEADR = store_address;
  2742                           
  2743                           ;incstack = 0
  2744  00146A  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2745                           
  2746                           ;storage.c: 11: EEDATA = store;
  2747  00146E  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2748                           
  2749                           ;storage.c: 12: EECON1bits.EEPGD = 0;
  2750  001472  9EA6               	bcf	4006,7,c	;volatile
  2751                           
  2752                           ;storage.c: 13: EECON1bits.CFGS = 0;
  2753  001474  9CA6               	bcf	4006,6,c	;volatile
  2754                           
  2755                           ;storage.c: 14: INTCONbits.GIE = 0;
  2756  001476  9EF2               	bcf	intcon,7,c	;volatile
  2757                           
  2758                           ;storage.c: 15: EECON1bits.WREN = 1;
  2759  001478  84A6               	bsf	4006,2,c	;volatile
  2760                           
  2761                           ;storage.c: 16: EECON2 = 0x55;
  2762  00147A  0E55               	movlw	85
  2763  00147C  6EA7               	movwf	4007,c	;volatile
  2764                           
  2765                           ;storage.c: 17: EECON2 = 0xAA;
  2766  00147E  0EAA               	movlw	170
  2767  001480  6EA7               	movwf	4007,c	;volatile
  2768                           
  2769                           ;storage.c: 18: EECON1bits.WR = 1;
  2770  001482  82A6               	bsf	4006,1,c	;volatile
  2771  001484                     l359:
  2772  001484  A8A1               	btfss	4001,4,c	;volatile
  2773  001486  D7FE               	goto	l359
  2774                           
  2775                           ;storage.c: 20: PIR2bits.EEIF = 0;
  2776  001488  98A1               	bcf	4001,4,c	;volatile
  2777                           
  2778                           ;storage.c: 21: store >>= 8;
  2779  00148A  0100               	movlb	0	; () banked
  2780  00148C  5161               	movf	(Save_Data@store+1)& (0+255),w,b
  2781  00148E  6F60               	movwf	Save_Data@store& (0+255),b
  2782  001490  6B61               	clrf	(Save_Data@store+1)& (0+255),b
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;storage.c: 22: store_address += 50;
  2786  001492  0E32               	movlw	50
  2787  001494  0100               	movlb	0	; () banked
  2788  001496  2762               	addwf	Save_Data@store_address& (0+255),f,b
  2789                           
  2790                           ; BSR set to: 0
  2791                           ;storage.c: 23: EEADR = store_address;
  2792  001498  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;storage.c: 24: EEDATA = store;
  2796  00149C  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2797                           
  2798                           ; BSR set to: 0
  2799                           ;storage.c: 25: EECON1bits.EEPGD = 0;
  2800  0014A0  9EA6               	bcf	4006,7,c	;volatile
  2801                           
  2802                           ; BSR set to: 0
  2803                           ;storage.c: 26: EECON1bits.CFGS = 0;
  2804  0014A2  9CA6               	bcf	4006,6,c	;volatile
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;storage.c: 27: EECON1bits.WREN = 1;
  2808  0014A4  84A6               	bsf	4006,2,c	;volatile
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;storage.c: 28: INTCONbits.GIE = 0;
  2812  0014A6  9EF2               	bcf	intcon,7,c	;volatile
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;storage.c: 29: EECON2 = 0x55;
  2816  0014A8  0E55               	movlw	85
  2817  0014AA  6EA7               	movwf	4007,c	;volatile
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;storage.c: 30: EECON2 = 0xAA;
  2821  0014AC  0EAA               	movlw	170
  2822  0014AE  6EA7               	movwf	4007,c	;volatile
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;storage.c: 31: EECON1bits.WR = 1;
  2826  0014B0  82A6               	bsf	4006,1,c	;volatile
  2827  0014B2                     l362:
  2828  0014B2  A8A1               	btfss	4001,4,c	;volatile
  2829  0014B4  D7FE               	goto	l362
  2830                           
  2831                           ;storage.c: 33: PIR2bits.EEIF = 0;
  2832  0014B6  98A1               	bcf	4001,4,c	;volatile
  2833                           
  2834                           ;storage.c: 34: EECON1bits.WREN = 0;
  2835  0014B8  94A6               	bcf	4006,2,c	;volatile
  2836                           
  2837                           ;storage.c: 35: INTCONbits.GIE = 1;
  2838  0014BA  8EF2               	bsf	intcon,7,c	;volatile
  2839                           
  2840                           ;storage.c: 36: __nop();
  2841  0014BC  F000               	nop	
  2842  0014BE  0012               	return		;funcret
  2843  0014C0                     __end_of_Save_Data:
  2844                           	opt stack 0
  2845                           tblptru	equ	0xFF8
  2846                           tblptrh	equ	0xFF7
  2847                           tblptrl	equ	0xFF6
  2848                           tablat	equ	0xFF5
  2849                           prodh	equ	0xFF4
  2850                           prodl	equ	0xFF3
  2851                           intcon	equ	0xFF2
  2852                           postinc0	equ	0xFEE
  2853                           wreg	equ	0xFE8
  2854                           postdec1	equ	0xFE5
  2855                           fsr1l	equ	0xFE1
  2856                           indf2	equ	0xFDF
  2857                           postinc2	equ	0xFDE
  2858                           postdec2	equ	0xFDD
  2859                           plusw2	equ	0xFDB
  2860                           fsr2h	equ	0xFDA
  2861                           fsr2l	equ	0xFD9
  2862                           status	equ	0xFD8
  2863                           
  2864 ;; *************** function _Load_Data *****************
  2865 ;; Defined at:
  2866 ;;		line 66 in file "storage.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  counter         1   27[BANK0 ] unsigned char 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;		None               void
  2873 ;; Registers used:
  2874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1
  2880 ;;      Params:         0       0       0
  2881 ;;      Locals:         0       1       0
  2882 ;;      Temps:          0       1       0
  2883 ;;      Totals:         0       2       0
  2884 ;;Total ram usage:        2 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    9
  2887 ;; This function calls:
  2888 ;;		_Delay_Routine
  2889 ;;		_Evaluate_Display
  2890 ;;		_Read_Data
  2891 ;;		_Set_Display
  2892 ;; This function is called by:
  2893 ;;		_main
  2894 ;;		_Del_Data
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text13
  2899  000BD6                     __ptext13:
  2900                           	opt stack 0
  2901  000BD6                     _Load_Data:
  2902                           	opt stack 21
  2903                           
  2904                           ;storage.c: 67: string_load[0] = 'L';
  2905                           
  2906                           ;incstack = 0
  2907  000BD6  0E4C               	movlw	76
  2908  000BD8  0100               	movlb	0	; () banked
  2909  000BDA  6F87               	movwf	_string_load& (0+255),b
  2910                           
  2911                           ;storage.c: 68: string_load[1] = 'O';
  2912  000BDC  0E4F               	movlw	79
  2913  000BDE  0100               	movlb	0	; () banked
  2914  000BE0  6F88               	movwf	(_string_load+1)& (0+255),b
  2915                           
  2916                           ;storage.c: 69: string_load[2] = 'A';
  2917  000BE2  0E41               	movlw	65
  2918  000BE4  0100               	movlb	0	; () banked
  2919  000BE6  6F89               	movwf	(_string_load+2)& (0+255),b
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;storage.c: 71: Evaluate_Display(3, string_load);
  2923  000BE8  0E87               	movlw	low _string_load
  2924  000BEA  0100               	movlb	0	; () banked
  2925  000BEC  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  2926  000BEE  0E00               	movlw	high _string_load
  2927  000BF0  0100               	movlb	0	; () banked
  2928  000BF2  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  2929  000BF4  0E03               	movlw	3
  2930  000BF6  EC07  F004         	call	_Evaluate_Display
  2931                           
  2932                           ;storage.c: 72: Delay_Routine(30);
  2933  000BFA  0E1E               	movlw	30
  2934  000BFC  EC93  F00B         	call	_Delay_Routine
  2935                           
  2936                           ;storage.c: 73: for(unsigned char counter = 0; counter < 30; counter++) {
  2937  000C00  0E00               	movlw	0
  2938  000C02  0100               	movlb	0	; () banked
  2939  000C04  6F7B               	movwf	Load_Data@counter& (0+255),b
  2940  000C06                     l3276:
  2941                           
  2942                           ; BSR set to: 0
  2943  000C06  0E1D               	movlw	29
  2944  000C08  0100               	movlb	0	; () banked
  2945  000C0A  657B               	cpfsgt	Load_Data@counter& (0+255),b
  2946  000C0C  D001               	goto	l3280
  2947  000C0E  D01A               	goto	l3286
  2948  000C10                     l3280:
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;storage.c: 74: pin[counter].time = Read_Data(counter);
  2952  000C10  0100               	movlb	0	; () banked
  2953  000C12  517B               	movf	Load_Data@counter& (0+255),w,b
  2954  000C14  ECB4  F00A         	call	_Read_Data
  2955  000C18  0100               	movlb	0	; () banked
  2956  000C1A  517B               	movf	Load_Data@counter& (0+255),w,b
  2957  000C1C  0D06               	mullw	6
  2958  000C1E  0E04               	movlw	4
  2959  000C20  26F3               	addwf	prodl,f,c
  2960  000C22  0E00               	movlw	0
  2961  000C24  22F4               	addwfc	prodh,f,c
  2962  000C26  0E00               	movlw	low _pin
  2963  000C28  24F3               	addwf	prodl,w,c
  2964  000C2A  6ED9               	movwf	fsr2l,c
  2965  000C2C  0E01               	movlw	high _pin
  2966  000C2E  20F4               	addwfc	prodh,w,c
  2967  000C30  6EDA               	movwf	fsr2h,c
  2968  000C32  0100               	movlb	0	; () banked
  2969  000C34  C060  FFDE         	movff	?_Read_Data,postinc2
  2970  000C38  0100               	movlb	0	; () banked
  2971  000C3A  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2972                           
  2973                           ; BSR set to: 0
  2974  000C3E  0100               	movlb	0	; () banked
  2975  000C40  2B7B               	incf	Load_Data@counter& (0+255),f,b
  2976  000C42  D7E1               	goto	l3276
  2977  000C44                     l3286:
  2978                           
  2979                           ; BSR set to: 0
  2980                           ;storage.c: 75: }
  2981                           ;storage.c: 76: slave_selected = 0;
  2982  000C44  0E00               	movlw	0
  2983  000C46  0100               	movlb	0	; () banked
  2984  000C48  6F80               	movwf	_slave_selected& (0+255),b
  2985                           
  2986                           ;storage.c: 77: pin_selected = 0;
  2987  000C4A  0E00               	movlw	0
  2988  000C4C  0100               	movlb	0	; () banked
  2989  000C4E  6F7F               	movwf	_pin_selected& (0+255),b
  2990                           
  2991                           ; BSR set to: 0
  2992                           ;storage.c: 78: Set_Display('7', 'E', pin[pin_selected].slave);
  2993  000C50  0E45               	movlw	69
  2994  000C52  0100               	movlb	0	; () banked
  2995  000C54  6F76               	movwf	Set_Display@information& (0+255),b
  2996  000C56  0100               	movlb	0	; () banked
  2997  000C58  517F               	movf	_pin_selected& (0+255),w,b
  2998  000C5A  0D06               	mullw	6
  2999  000C5C  0E00               	movlw	low _pin
  3000  000C5E  24F3               	addwf	prodl,w,c
  3001  000C60  6ED9               	movwf	fsr2l,c
  3002  000C62  0E01               	movlw	high _pin
  3003  000C64  20F4               	addwfc	prodh,w,c
  3004  000C66  6EDA               	movwf	fsr2h,c
  3005  000C68  50DF               	movf	indf2,w,c
  3006  000C6A  0100               	movlb	0	; () banked
  3007  000C6C  6F7A               	movwf	??_Load_Data& (0+255),b
  3008  000C6E  0100               	movlb	0	; () banked
  3009  000C70  517A               	movf	??_Load_Data& (0+255),w,b
  3010  000C72  0100               	movlb	0	; () banked
  3011  000C74  6F77               	movwf	Set_Display@value& (0+255),b
  3012  000C76  6B78               	clrf	(Set_Display@value+1)& (0+255),b
  3013  000C78  0E37               	movlw	55
  3014  000C7A  EC1B  F009         	call	_Set_Display
  3015                           
  3016                           ;storage.c: 80: Delay_Routine(20);
  3017  000C7E  0E14               	movlw	20
  3018  000C80  EC93  F00B         	call	_Delay_Routine
  3019                           
  3020                           ;storage.c: 81: Set_Display('7', 'A', pin[pin_selected].output);
  3021  000C84  0E41               	movlw	65
  3022  000C86  0100               	movlb	0	; () banked
  3023  000C88  6F76               	movwf	Set_Display@information& (0+255),b
  3024  000C8A  0100               	movlb	0	; () banked
  3025  000C8C  517F               	movf	_pin_selected& (0+255),w,b
  3026  000C8E  0D06               	mullw	6
  3027  000C90  0E01               	movlw	1
  3028  000C92  26F3               	addwf	prodl,f,c
  3029  000C94  0E00               	movlw	0
  3030  000C96  22F4               	addwfc	prodh,f,c
  3031  000C98  0E00               	movlw	low _pin
  3032  000C9A  24F3               	addwf	prodl,w,c
  3033  000C9C  6ED9               	movwf	fsr2l,c
  3034  000C9E  0E01               	movlw	high _pin
  3035  000CA0  20F4               	addwfc	prodh,w,c
  3036  000CA2  6EDA               	movwf	fsr2h,c
  3037  000CA4  50DF               	movf	indf2,w,c
  3038  000CA6  0100               	movlb	0	; () banked
  3039  000CA8  6F7A               	movwf	??_Load_Data& (0+255),b
  3040  000CAA  0100               	movlb	0	; () banked
  3041  000CAC  517A               	movf	??_Load_Data& (0+255),w,b
  3042  000CAE  0100               	movlb	0	; () banked
  3043  000CB0  6F77               	movwf	Set_Display@value& (0+255),b
  3044  000CB2  6B78               	clrf	(Set_Display@value+1)& (0+255),b
  3045  000CB4  0E37               	movlw	55
  3046  000CB6  EC1B  F009         	call	_Set_Display
  3047                           
  3048                           ;storage.c: 82: Delay_Routine(20);
  3049  000CBA  0E14               	movlw	20
  3050  000CBC  EC93  F00B         	call	_Delay_Routine
  3051                           
  3052                           ;storage.c: 83: Set_Display('7', '-', pin[pin_selected].time);
  3053  000CC0  0E2D               	movlw	45
  3054  000CC2  0100               	movlb	0	; () banked
  3055  000CC4  6F76               	movwf	Set_Display@information& (0+255),b
  3056  000CC6  0100               	movlb	0	; () banked
  3057  000CC8  517F               	movf	_pin_selected& (0+255),w,b
  3058  000CCA  0D06               	mullw	6
  3059  000CCC  0E04               	movlw	4
  3060  000CCE  26F3               	addwf	prodl,f,c
  3061  000CD0  0E00               	movlw	0
  3062  000CD2  22F4               	addwfc	prodh,f,c
  3063  000CD4  0E00               	movlw	low _pin
  3064  000CD6  24F3               	addwf	prodl,w,c
  3065  000CD8  6ED9               	movwf	fsr2l,c
  3066  000CDA  0E01               	movlw	high _pin
  3067  000CDC  20F4               	addwfc	prodh,w,c
  3068  000CDE  6EDA               	movwf	fsr2h,c
  3069  000CE0  CFDE F077          	movff	postinc2,Set_Display@value
  3070  000CE4  CFDD F078          	movff	postdec2,Set_Display@value+1
  3071  000CE8  0E37               	movlw	55
  3072  000CEA  EC1B  F009         	call	_Set_Display
  3073                           
  3074                           ;storage.c: 84: Delay_Routine(20);
  3075  000CEE  0E14               	movlw	20
  3076  000CF0  EC93  F00B         	call	_Delay_Routine
  3077  000CF4  0012               	return		;funcret
  3078  000CF6                     __end_of_Load_Data:
  3079                           	opt stack 0
  3080                           tblptru	equ	0xFF8
  3081                           tblptrh	equ	0xFF7
  3082                           tblptrl	equ	0xFF6
  3083                           tablat	equ	0xFF5
  3084                           prodh	equ	0xFF4
  3085                           prodl	equ	0xFF3
  3086                           intcon	equ	0xFF2
  3087                           postinc0	equ	0xFEE
  3088                           wreg	equ	0xFE8
  3089                           postdec1	equ	0xFE5
  3090                           fsr1l	equ	0xFE1
  3091                           indf2	equ	0xFDF
  3092                           postinc2	equ	0xFDE
  3093                           postdec2	equ	0xFDD
  3094                           plusw2	equ	0xFDB
  3095                           fsr2h	equ	0xFDA
  3096                           fsr2l	equ	0xFD9
  3097                           status	equ	0xFD8
  3098                           
  3099 ;; *************** function _Set_Display *****************
  3100 ;; Defined at:
  3101 ;;		line 142 in file "display.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  type            1    wreg     unsigned char 
  3104 ;;  information     1   22[BANK0 ] unsigned char 
  3105 ;;  value           2   23[BANK0 ] unsigned int 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  type            1   25[BANK0 ] unsigned char 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;		None               void
  3110 ;; Registers used:
  3111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1
  3117 ;;      Params:         0       3       0
  3118 ;;      Locals:         0       1       0
  3119 ;;      Temps:          0       0       0
  3120 ;;      Totals:         0       4       0
  3121 ;;Total ram usage:        4 bytes
  3122 ;; Hardware stack levels used:    1
  3123 ;; Hardware stack levels required when called:    8
  3124 ;; This function calls:
  3125 ;;		_Evaluate_Display
  3126 ;;		_Evaluate_Signs
  3127 ;;		_Write_Display_Byte
  3128 ;; This function is called by:
  3129 ;;		_Check_Buttons
  3130 ;;		_Load_Data
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text14
  3135  001236                     __ptext14:
  3136                           	opt stack 0
  3137  001236                     _Set_Display:
  3138                           	opt stack 21
  3139                           
  3140                           ;incstack = 0
  3141                           ;Set_Display@type stored from wreg
  3142  001236  0100               	movlb	0	; () banked
  3143  001238  6F79               	movwf	Set_Display@type& (0+255),b
  3144                           
  3145                           ;display.c: 144: switch (type) {
  3146  00123A  D020               	goto	l3232
  3147  00123C                     l3216:
  3148                           
  3149                           ;display.c: 146: if(information != '-') {
  3150  00123C  0E2D               	movlw	45
  3151  00123E  0100               	movlb	0	; () banked
  3152  001240  1976               	xorwf	Set_Display@information& (0+255),w,b
  3153  001242  B4D8               	btfsc	status,2,c
  3154  001244  D014               	goto	l3228
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;display.c: 147: signs[2] = value;
  3158  001246  C077  F083         	movff	Set_Display@value,_signs+2
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;display.c: 148: signs[2] += 0x30;
  3162  00124A  0E30               	movlw	48
  3163  00124C  0100               	movlb	0	; () banked
  3164  00124E  2783               	addwf	(_signs+2)& (0+255),f,b
  3165                           
  3166                           ; BSR set to: 0
  3167                           ;display.c: 149: signs[1] = '-';
  3168  001250  0E2D               	movlw	45
  3169  001252  0100               	movlb	0	; () banked
  3170  001254  6F82               	movwf	(_signs+1)& (0+255),b
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;display.c: 150: signs[0] = information;
  3174  001256  C076  F081         	movff	Set_Display@information,_signs
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;display.c: 151: Evaluate_Display(sizeof(signs), signs);
  3178  00125A  0E81               	movlw	low _signs
  3179  00125C  0100               	movlb	0	; () banked
  3180  00125E  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3181  001260  0E00               	movlw	high _signs
  3182  001262  0100               	movlb	0	; () banked
  3183  001264  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3184  001266  0E03               	movlw	3
  3185  001268  EC07  F004         	call	_Evaluate_Display
  3186                           
  3187                           ;display.c: 152: } else {
  3188  00126C  D00D               	goto	l3234
  3189  00126E                     l3228:
  3190                           
  3191                           ;display.c: 153: Evaluate_Signs(value);
  3192  00126E  C077  F06F         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  3193  001272  C078  F070         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  3194  001276  ECF4  F006         	call	_Evaluate_Signs	;wreg free
  3195                           
  3196                           ;display.c: 159: }
  3197                           
  3198                           ;display.c: 158: break;
  3199                           
  3200                           ;display.c: 156: case 'L':
  3201                           
  3202                           ;display.c: 154: }
  3203                           ;display.c: 155: break;
  3204  00127A  D006               	goto	l3234
  3205  00127C                     l3232:
  3206  00127C  0100               	movlb	0	; () banked
  3207  00127E  5179               	movf	Set_Display@type& (0+255),w,b
  3208                           
  3209                           ; Switch size 1, requested type "space"
  3210                           ; Number of cases is 2, Range of values is 55 to 76
  3211                           ; switch strategies available:
  3212                           ; Name         Instructions Cycles
  3213                           ; simple_byte            7     4 (average)
  3214                           ;	Chosen strategy is simple_byte
  3215  001280  0A37               	xorlw	55	; case 55
  3216  001282  B4D8               	btfsc	status,2,c
  3217  001284  D7DB               	goto	l3216
  3218  001286  0A7B               	xorlw	123	; case 76
  3219  001288                     l3234:
  3220                           
  3221                           ;display.c: 160: Write_Display_Byte(pixels);
  3222  001288  0E39               	movlw	low _pixels
  3223  00128A  0100               	movlb	0	; () banked
  3224  00128C  6F60               	movwf	Write_Display_Byte@write_data& (0+255),b
  3225  00128E  0E00               	movlw	high _pixels
  3226  001290  0100               	movlb	0	; () banked
  3227  001292  6F61               	movwf	(Write_Display_Byte@write_data+1)& (0+255),b
  3228  001294  EC4D  F009         	call	_Write_Display_Byte	;wreg free
  3229  001298  0012               	return		;funcret
  3230  00129A                     __end_of_Set_Display:
  3231                           	opt stack 0
  3232                           tblptru	equ	0xFF8
  3233                           tblptrh	equ	0xFF7
  3234                           tblptrl	equ	0xFF6
  3235                           tablat	equ	0xFF5
  3236                           prodh	equ	0xFF4
  3237                           prodl	equ	0xFF3
  3238                           intcon	equ	0xFF2
  3239                           postinc0	equ	0xFEE
  3240                           wreg	equ	0xFE8
  3241                           postdec1	equ	0xFE5
  3242                           fsr1l	equ	0xFE1
  3243                           indf2	equ	0xFDF
  3244                           postinc2	equ	0xFDE
  3245                           postdec2	equ	0xFDD
  3246                           plusw2	equ	0xFDB
  3247                           fsr2h	equ	0xFDA
  3248                           fsr2l	equ	0xFD9
  3249                           status	equ	0xFD8
  3250                           
  3251 ;; *************** function _Write_Display_Byte *****************
  3252 ;; Defined at:
  3253 ;;		line 61 in file "communication.c"
  3254 ;; Parameters:    Size  Location     Type
  3255 ;;  write_data      2    0[BANK0 ] PTR unsigned char 
  3256 ;;		 -> pixels(7), 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  counter         1    6[BANK0 ] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;		None               void
  3261 ;; Registers used:
  3262 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1
  3268 ;;      Params:         0       2       0
  3269 ;;      Locals:         0       1       0
  3270 ;;      Temps:          0       4       0
  3271 ;;      Totals:         0       7       0
  3272 ;;Total ram usage:        7 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    5
  3275 ;; This function calls:
  3276 ;;		Nothing
  3277 ;; This function is called by:
  3278 ;;		_Set_Display
  3279 ;; This function uses a non-reentrant model
  3280 ;;
  3281                           
  3282                           	psect	text15
  3283  00129A                     __ptext15:
  3284                           	opt stack 0
  3285  00129A                     _Write_Display_Byte:
  3286                           	opt stack 23
  3287                           
  3288                           ;communication.c: 62: for(unsigned char counter = sizeof(pixels); counter > 0;
  3289                           
  3290                           ;incstack = 0
  3291  00129A  0E07               	movlw	7
  3292  00129C  0100               	movlb	0	; () banked
  3293  00129E  6F66               	movwf	Write_Display_Byte@counter& (0+255),b
  3294  0012A0                     
  3295                           ;communication.c: 63: counter--) {
  3296  0012A0  0100               	movlb	0	; () banked
  3297  0012A2  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3298  0012A4  0100               	movlb	0	; () banked
  3299  0012A6  B4D8               	btfsc	status,2,c
  3300  0012A8  0012               	return	
  3301                           
  3302                           ; BSR set to: 0
  3303                           ;communication.c: 64: if(SSP1IF = 1) {
  3304                           
  3305                           ; BSR set to: 0
  3306  0012AA  869E               	bsf	3998,3,c	;volatile
  3307  0012AC  B69E               	btfsc	3998,3,c	;volatile
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;communication.c: 65: SSP1IF = 0;
  3311  0012AE  969E               	bcf	3998,3,c	;volatile
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;communication.c: 66: }
  3315                           ;communication.c: 67: SSP1BUF = write_data[counter - 1];
  3316                           
  3317                           ; BSR set to: 0
  3318  0012B0  0EFF               	movlw	255
  3319  0012B2  0100               	movlb	0	; () banked
  3320  0012B4  6F62               	movwf	??_Write_Display_Byte& (0+255),b
  3321  0012B6  0EFF               	movlw	255
  3322  0012B8  0100               	movlb	0	; () banked
  3323  0012BA  6F63               	movwf	(??_Write_Display_Byte+1)& (0+255),b
  3324  0012BC  0100               	movlb	0	; () banked
  3325  0012BE  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3326  0012C0  0100               	movlb	0	; () banked
  3327  0012C2  6F64               	movwf	(??_Write_Display_Byte+2)& (0+255),b
  3328  0012C4  6B65               	clrf	(??_Write_Display_Byte+3)& (0+255),b
  3329  0012C6  0100               	movlb	0	; () banked
  3330  0012C8  5162               	movf	??_Write_Display_Byte& (0+255),w,b
  3331  0012CA  0100               	movlb	0	; () banked
  3332  0012CC  2764               	addwf	(??_Write_Display_Byte+2)& (0+255),f,b
  3333  0012CE  0100               	movlb	0	; () banked
  3334  0012D0  5163               	movf	(??_Write_Display_Byte+1)& (0+255),w,b
  3335  0012D2  0100               	movlb	0	; () banked
  3336  0012D4  2365               	addwfc	(??_Write_Display_Byte+3)& (0+255),f,b
  3337  0012D6  0100               	movlb	0	; () banked
  3338  0012D8  5164               	movf	(??_Write_Display_Byte+2)& (0+255),w,b
  3339  0012DA  0100               	movlb	0	; () banked
  3340  0012DC  2560               	addwf	Write_Display_Byte@write_data& (0+255),w,b
  3341  0012DE  6ED9               	movwf	fsr2l,c
  3342  0012E0  0100               	movlb	0	; () banked
  3343  0012E2  5165               	movf	(??_Write_Display_Byte+3)& (0+255),w,b
  3344  0012E4  0100               	movlb	0	; () banked
  3345  0012E6  2161               	addwfc	(Write_Display_Byte@write_data+1)& (0+255),w,b
  3346  0012E8  6EDA               	movwf	fsr2h,c
  3347  0012EA  50DF               	movf	indf2,w,c
  3348  0012EC  6EC9               	movwf	4041,c	;volatile
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;communication.c: 69: SSP1IF = 0;
  3352  0012EE  969E               	bcf	3998,3,c	;volatile
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;communication.c: 70: PORTCbits.RC0 = 0;
  3356  0012F0  9082               	bcf	3970,0,c	;volatile
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;communication.c: 71: PORTCbits.RC0 = 1;
  3360  0012F2  8082               	bsf	3970,0,c	;volatile
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;communication.c: 72: PORTCbits.RC0 = 0;
  3364  0012F4  9082               	bcf	3970,0,c	;volatile
  3365                           
  3366                           ; BSR set to: 0
  3367  0012F6  0100               	movlb	0	; () banked
  3368  0012F8  0766               	decf	Write_Display_Byte@counter& (0+255),f,b
  3369  0012FA  D7D2               	goto	L3
  3370  0012FC                     __end_of_Write_Display_Byte:
  3371                           	opt stack 0
  3372                           tblptru	equ	0xFF8
  3373                           tblptrh	equ	0xFF7
  3374                           tblptrl	equ	0xFF6
  3375                           tablat	equ	0xFF5
  3376                           prodh	equ	0xFF4
  3377                           prodl	equ	0xFF3
  3378                           intcon	equ	0xFF2
  3379                           postinc0	equ	0xFEE
  3380                           wreg	equ	0xFE8
  3381                           postdec1	equ	0xFE5
  3382                           fsr1l	equ	0xFE1
  3383                           indf2	equ	0xFDF
  3384                           postinc2	equ	0xFDE
  3385                           postdec2	equ	0xFDD
  3386                           plusw2	equ	0xFDB
  3387                           fsr2h	equ	0xFDA
  3388                           fsr2l	equ	0xFD9
  3389                           status	equ	0xFD8
  3390                           
  3391 ;; *************** function _Evaluate_Signs *****************
  3392 ;; Defined at:
  3393 ;;		line 122 in file "display.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  evaluation_v    2   15[BANK0 ] unsigned int 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  valuecounter    1   21[BANK0 ] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;		None               void
  3400 ;; Registers used:
  3401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1
  3407 ;;      Params:         0       2       0
  3408 ;;      Locals:         0       1       0
  3409 ;;      Temps:          0       4       0
  3410 ;;      Totals:         0       7       0
  3411 ;;Total ram usage:        7 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    7
  3414 ;; This function calls:
  3415 ;;		_Evaluate_Display
  3416 ;;		___lwdiv
  3417 ;;		___lwmod
  3418 ;; This function is called by:
  3419 ;;		_Set_Display
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text16
  3424  000DE8                     __ptext16:
  3425                           	opt stack 0
  3426  000DE8                     _Evaluate_Signs:
  3427                           	opt stack 21
  3428                           
  3429                           ;display.c: 123: for(unsigned char valuecounter = sizeof(signs); valuecounter > 0;
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;incstack = 0
  3433  000DE8  0E03               	movlw	3
  3434  000DEA  0100               	movlb	0	; () banked
  3435  000DEC  6F75               	movwf	Evaluate_Signs@valuecounter& (0+255),b
  3436  000DEE                     
  3437                           ;display.c: 124: valuecounter--) {
  3438  000DEE  0100               	movlb	0	; () banked
  3439  000DF0  5175               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3440  000DF2  0100               	movlb	0	; () banked
  3441  000DF4  B4D8               	btfsc	status,2,c
  3442  000DF6  D058               	goto	l455
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;display.c: 125: signs[(valuecounter - 1)] = evaluation_value % 10;
  3446                           
  3447                           ; BSR set to: 0
  3448                           
  3449                           ; BSR set to: 0
  3450  000DF8  0EFF               	movlw	255
  3451  000DFA  0100               	movlb	0	; () banked
  3452  000DFC  6F71               	movwf	??_Evaluate_Signs& (0+255),b
  3453  000DFE  0EFF               	movlw	255
  3454  000E00  0100               	movlb	0	; () banked
  3455  000E02  6F72               	movwf	(??_Evaluate_Signs+1)& (0+255),b
  3456  000E04  0100               	movlb	0	; () banked
  3457  000E06  5175               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3458  000E08  0100               	movlb	0	; () banked
  3459  000E0A  6F73               	movwf	(??_Evaluate_Signs+2)& (0+255),b
  3460  000E0C  6B74               	clrf	(??_Evaluate_Signs+3)& (0+255),b
  3461  000E0E  0100               	movlb	0	; () banked
  3462  000E10  5171               	movf	??_Evaluate_Signs& (0+255),w,b
  3463  000E12  0100               	movlb	0	; () banked
  3464  000E14  2773               	addwf	(??_Evaluate_Signs+2)& (0+255),f,b
  3465  000E16  0100               	movlb	0	; () banked
  3466  000E18  5172               	movf	(??_Evaluate_Signs+1)& (0+255),w,b
  3467  000E1A  0100               	movlb	0	; () banked
  3468  000E1C  2374               	addwfc	(??_Evaluate_Signs+3)& (0+255),f,b
  3469  000E1E  0E81               	movlw	low _signs
  3470  000E20  0100               	movlb	0	; () banked
  3471  000E22  2573               	addwf	(??_Evaluate_Signs+2)& (0+255),w,b
  3472  000E24  6ED9               	movwf	fsr2l,c
  3473  000E26  0E00               	movlw	high _signs
  3474  000E28  0100               	movlb	0	; () banked
  3475  000E2A  2174               	addwfc	(??_Evaluate_Signs+3)& (0+255),w,b
  3476  000E2C  6EDA               	movwf	fsr2h,c
  3477  000E2E  C06F  F060         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  3478  000E32  C070  F061         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  3479  000E36  0E00               	movlw	0
  3480  000E38  0100               	movlb	0	; () banked
  3481  000E3A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  3482  000E3C  0E0A               	movlw	10
  3483  000E3E  6F62               	movwf	___lwmod@divisor& (0+255),b
  3484  000E40  EC7E  F009         	call	___lwmod	;wreg free
  3485  000E44  0100               	movlb	0	; () banked
  3486  000E46  5160               	movf	?___lwmod& (0+255),w,b
  3487  000E48  6EDF               	movwf	indf2,c
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;display.c: 126: signs[(valuecounter - 1)] += 0x30;
  3491  000E4A  0EFF               	movlw	255
  3492  000E4C  0100               	movlb	0	; () banked
  3493  000E4E  6F71               	movwf	??_Evaluate_Signs& (0+255),b
  3494  000E50  0EFF               	movlw	255
  3495  000E52  0100               	movlb	0	; () banked
  3496  000E54  6F72               	movwf	(??_Evaluate_Signs+1)& (0+255),b
  3497  000E56  0100               	movlb	0	; () banked
  3498  000E58  5175               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3499  000E5A  0100               	movlb	0	; () banked
  3500  000E5C  6F73               	movwf	(??_Evaluate_Signs+2)& (0+255),b
  3501  000E5E  6B74               	clrf	(??_Evaluate_Signs+3)& (0+255),b
  3502  000E60  0100               	movlb	0	; () banked
  3503  000E62  5171               	movf	??_Evaluate_Signs& (0+255),w,b
  3504  000E64  0100               	movlb	0	; () banked
  3505  000E66  2773               	addwf	(??_Evaluate_Signs+2)& (0+255),f,b
  3506  000E68  0100               	movlb	0	; () banked
  3507  000E6A  5172               	movf	(??_Evaluate_Signs+1)& (0+255),w,b
  3508  000E6C  0100               	movlb	0	; () banked
  3509  000E6E  2374               	addwfc	(??_Evaluate_Signs+3)& (0+255),f,b
  3510  000E70  0E81               	movlw	low _signs
  3511  000E72  0100               	movlb	0	; () banked
  3512  000E74  2573               	addwf	(??_Evaluate_Signs+2)& (0+255),w,b
  3513  000E76  6ED9               	movwf	fsr2l,c
  3514  000E78  0E00               	movlw	high _signs
  3515  000E7A  0100               	movlb	0	; () banked
  3516  000E7C  2174               	addwfc	(??_Evaluate_Signs+3)& (0+255),w,b
  3517  000E7E  6EDA               	movwf	fsr2h,c
  3518  000E80  0E30               	movlw	48
  3519  000E82  26DF               	addwf	indf2,f,c
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;display.c: 127: evaluation_value = evaluation_value / 10;
  3523  000E84  C06F  F060         	movff	Evaluate_Signs@evaluation_value,___lwdiv@dividend
  3524  000E88  C070  F061         	movff	Evaluate_Signs@evaluation_value+1,___lwdiv@dividend+1
  3525  000E8C  0E00               	movlw	0
  3526  000E8E  0100               	movlb	0	; () banked
  3527  000E90  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3528  000E92  0E0A               	movlw	10
  3529  000E94  6F62               	movwf	___lwdiv@divisor& (0+255),b
  3530  000E96  ECA9  F008         	call	___lwdiv	;wreg free
  3531  000E9A  C060  F06F         	movff	?___lwdiv,Evaluate_Signs@evaluation_value
  3532  000E9E  C061  F070         	movff	?___lwdiv+1,Evaluate_Signs@evaluation_value+1
  3533  000EA2  0100               	movlb	0	; () banked
  3534  000EA4  0775               	decf	Evaluate_Signs@valuecounter& (0+255),f,b
  3535  000EA6  D7A3               	goto	L4
  3536  000EA8                     l455:
  3537                           
  3538                           ; BSR set to: 0
  3539                           ;display.c: 128: }
  3540                           ;display.c: 129: __nop();
  3541  000EA8  F000               	nop	
  3542                           
  3543                           ;display.c: 130: Evaluate_Display(sizeof(signs), signs);
  3544  000EAA  0E81               	movlw	low _signs
  3545  000EAC  0100               	movlb	0	; () banked
  3546  000EAE  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3547  000EB0  0E00               	movlw	high _signs
  3548  000EB2  0100               	movlb	0	; () banked
  3549  000EB4  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3550  000EB6  0E03               	movlw	3
  3551  000EB8  EC07  F004         	call	_Evaluate_Display
  3552  000EBC  0012               	return		;funcret
  3553  000EBE                     __end_of_Evaluate_Signs:
  3554                           	opt stack 0
  3555                           tblptru	equ	0xFF8
  3556                           tblptrh	equ	0xFF7
  3557                           tblptrl	equ	0xFF6
  3558                           tablat	equ	0xFF5
  3559                           prodh	equ	0xFF4
  3560                           prodl	equ	0xFF3
  3561                           intcon	equ	0xFF2
  3562                           postinc0	equ	0xFEE
  3563                           wreg	equ	0xFE8
  3564                           postdec1	equ	0xFE5
  3565                           fsr1l	equ	0xFE1
  3566                           indf2	equ	0xFDF
  3567                           postinc2	equ	0xFDE
  3568                           postdec2	equ	0xFDD
  3569                           plusw2	equ	0xFDB
  3570                           fsr2h	equ	0xFDA
  3571                           fsr2l	equ	0xFD9
  3572                           status	equ	0xFD8
  3573                           
  3574 ;; *************** function ___lwmod *****************
  3575 ;; Defined at:
  3576 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  dividend        2    0[BANK0 ] unsigned int 
  3579 ;;  divisor         2    2[BANK0 ] unsigned int 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  counter         1    4[BANK0 ] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  2    0[BANK0 ] unsigned int 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK0   BANK1
  3591 ;;      Params:         0       4       0
  3592 ;;      Locals:         0       1       0
  3593 ;;      Temps:          0       0       0
  3594 ;;      Totals:         0       5       0
  3595 ;;Total ram usage:        5 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    5
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_Evaluate_Signs
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text17
  3606  0012FC                     __ptext17:
  3607                           	opt stack 0
  3608  0012FC                     ___lwmod:
  3609                           	opt stack 22
  3610                           
  3611                           ;incstack = 0
  3612  0012FC  0100               	movlb	0	; () banked
  3613  0012FE  5162               	movf	___lwmod@divisor& (0+255),w,b
  3614  001300  0100               	movlb	0	; () banked
  3615  001302  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3616  001304  B4D8               	btfsc	status,2,c
  3617  001306  D026               	goto	l1047
  3618                           
  3619                           ; BSR set to: 0
  3620  001308  0E01               	movlw	1
  3621  00130A  0100               	movlb	0	; () banked
  3622  00130C  6F64               	movwf	___lwmod@counter& (0+255),b
  3623  00130E  D006               	goto	l3160
  3624  001310                     l3158:
  3625                           
  3626                           ; BSR set to: 0
  3627  001310  0100               	movlb	0	; () banked
  3628  001312  90D8               	bcf	status,0,c
  3629  001314  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  3630  001316  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3631  001318  0100               	movlb	0	; () banked
  3632  00131A  2B64               	incf	___lwmod@counter& (0+255),f,b
  3633  00131C                     l3160:
  3634                           
  3635                           ; BSR set to: 0
  3636  00131C  0100               	movlb	0	; () banked
  3637  00131E  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3638  001320  D7F7               	goto	l3158
  3639  001322                     l3162:
  3640                           
  3641                           ; BSR set to: 0
  3642  001322  0100               	movlb	0	; () banked
  3643  001324  5162               	movf	___lwmod@divisor& (0+255),w,b
  3644  001326  0100               	movlb	0	; () banked
  3645  001328  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  3646  00132A  0100               	movlb	0	; () banked
  3647  00132C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3648  00132E  0100               	movlb	0	; () banked
  3649  001330  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3650  001332  A0D8               	btfss	status,0,c
  3651  001334  D008               	goto	l3166
  3652                           
  3653                           ; BSR set to: 0
  3654  001336  0100               	movlb	0	; () banked
  3655  001338  5162               	movf	___lwmod@divisor& (0+255),w,b
  3656  00133A  0100               	movlb	0	; () banked
  3657  00133C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  3658  00133E  0100               	movlb	0	; () banked
  3659  001340  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3660  001342  0100               	movlb	0	; () banked
  3661  001344  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3662  001346                     l3166:
  3663                           
  3664                           ; BSR set to: 0
  3665  001346  0100               	movlb	0	; () banked
  3666  001348  90D8               	bcf	status,0,c
  3667  00134A  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3668  00134C  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  3669                           
  3670                           ; BSR set to: 0
  3671  00134E  0100               	movlb	0	; () banked
  3672  001350  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  3673  001352  D7E7               	goto	l3162
  3674  001354                     l1047:
  3675                           
  3676                           ; BSR set to: 0
  3677  001354  C060  F060         	movff	___lwmod@dividend,?___lwmod
  3678  001358  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  3679                           
  3680                           ; BSR set to: 0
  3681  00135C  0012               	return		;funcret
  3682  00135E                     __end_of___lwmod:
  3683                           	opt stack 0
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           postinc0	equ	0xFEE
  3692                           wreg	equ	0xFE8
  3693                           postdec1	equ	0xFE5
  3694                           fsr1l	equ	0xFE1
  3695                           indf2	equ	0xFDF
  3696                           postinc2	equ	0xFDE
  3697                           postdec2	equ	0xFDD
  3698                           plusw2	equ	0xFDB
  3699                           fsr2h	equ	0xFDA
  3700                           fsr2l	equ	0xFD9
  3701                           status	equ	0xFD8
  3702                           
  3703 ;; *************** function ___lwdiv *****************
  3704 ;; Defined at:
  3705 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;  dividend        2    0[BANK0 ] unsigned int 
  3708 ;;  divisor         2    2[BANK0 ] unsigned int 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;  quotient        2    5[BANK0 ] unsigned int 
  3711 ;;  counter         1    4[BANK0 ] unsigned char 
  3712 ;; Return value:  Size  Location     Type
  3713 ;;                  2    0[BANK0 ] unsigned int 
  3714 ;; Registers used:
  3715 ;;		wreg, status,2, status,0
  3716 ;; Tracked objects:
  3717 ;;		On entry : 0/0
  3718 ;;		On exit  : 0/0
  3719 ;;		Unchanged: 0/0
  3720 ;; Data sizes:     COMRAM   BANK0   BANK1
  3721 ;;      Params:         0       4       0
  3722 ;;      Locals:         0       3       0
  3723 ;;      Temps:          0       0       0
  3724 ;;      Totals:         0       7       0
  3725 ;;Total ram usage:        7 bytes
  3726 ;; Hardware stack levels used:    1
  3727 ;; Hardware stack levels required when called:    5
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		_Evaluate_Signs
  3732 ;; This function uses a non-reentrant model
  3733 ;;
  3734                           
  3735                           	psect	text18
  3736  001152                     __ptext18:
  3737                           	opt stack 0
  3738  001152                     ___lwdiv:
  3739                           	opt stack 22
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;incstack = 0
  3743  001152  0E00               	movlw	0
  3744  001154  0100               	movlb	0	; () banked
  3745  001156  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3746  001158  0E00               	movlw	0
  3747  00115A  6F65               	movwf	___lwdiv@quotient& (0+255),b
  3748                           
  3749                           ; BSR set to: 0
  3750  00115C  0100               	movlb	0	; () banked
  3751  00115E  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3752  001160  0100               	movlb	0	; () banked
  3753  001162  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3754  001164  B4D8               	btfsc	status,2,c
  3755  001166  D02C               	goto	l1037
  3756                           
  3757                           ; BSR set to: 0
  3758  001168  0E01               	movlw	1
  3759  00116A  0100               	movlb	0	; () banked
  3760  00116C  6F64               	movwf	___lwdiv@counter& (0+255),b
  3761  00116E  D006               	goto	l3140
  3762  001170                     l3138:
  3763                           
  3764                           ; BSR set to: 0
  3765  001170  0100               	movlb	0	; () banked
  3766  001172  90D8               	bcf	status,0,c
  3767  001174  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  3768  001176  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3769  001178  0100               	movlb	0	; () banked
  3770  00117A  2B64               	incf	___lwdiv@counter& (0+255),f,b
  3771  00117C                     l3140:
  3772                           
  3773                           ; BSR set to: 0
  3774  00117C  0100               	movlb	0	; () banked
  3775  00117E  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3776  001180  D7F7               	goto	l3138
  3777  001182                     l3142:
  3778                           
  3779                           ; BSR set to: 0
  3780  001182  0100               	movlb	0	; () banked
  3781  001184  90D8               	bcf	status,0,c
  3782  001186  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  3783  001188  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3784                           
  3785                           ; BSR set to: 0
  3786  00118A  0100               	movlb	0	; () banked
  3787  00118C  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3788  00118E  0100               	movlb	0	; () banked
  3789  001190  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  3790  001192  0100               	movlb	0	; () banked
  3791  001194  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3792  001196  0100               	movlb	0	; () banked
  3793  001198  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3794  00119A  A0D8               	btfss	status,0,c
  3795  00119C  D00A               	goto	l3150
  3796                           
  3797                           ; BSR set to: 0
  3798  00119E  0100               	movlb	0	; () banked
  3799  0011A0  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3800  0011A2  0100               	movlb	0	; () banked
  3801  0011A4  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  3802  0011A6  0100               	movlb	0	; () banked
  3803  0011A8  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3804  0011AA  0100               	movlb	0	; () banked
  3805  0011AC  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3806                           
  3807                           ; BSR set to: 0
  3808  0011AE  0100               	movlb	0	; () banked
  3809  0011B0  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  3810  0011B2                     l3150:
  3811                           
  3812                           ; BSR set to: 0
  3813  0011B2  0100               	movlb	0	; () banked
  3814  0011B4  90D8               	bcf	status,0,c
  3815  0011B6  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3816  0011B8  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  3817                           
  3818                           ; BSR set to: 0
  3819  0011BA  0100               	movlb	0	; () banked
  3820  0011BC  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  3821  0011BE  D7E1               	goto	l3142
  3822  0011C0                     l1037:
  3823                           
  3824                           ; BSR set to: 0
  3825  0011C0  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  3826  0011C4  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3827                           
  3828                           ; BSR set to: 0
  3829  0011C8  0012               	return		;funcret
  3830  0011CA                     __end_of___lwdiv:
  3831                           	opt stack 0
  3832                           tblptru	equ	0xFF8
  3833                           tblptrh	equ	0xFF7
  3834                           tblptrl	equ	0xFF6
  3835                           tablat	equ	0xFF5
  3836                           prodh	equ	0xFF4
  3837                           prodl	equ	0xFF3
  3838                           intcon	equ	0xFF2
  3839                           postinc0	equ	0xFEE
  3840                           wreg	equ	0xFE8
  3841                           postdec1	equ	0xFE5
  3842                           fsr1l	equ	0xFE1
  3843                           indf2	equ	0xFDF
  3844                           postinc2	equ	0xFDE
  3845                           postdec2	equ	0xFDD
  3846                           plusw2	equ	0xFDB
  3847                           fsr2h	equ	0xFDA
  3848                           fsr2l	equ	0xFD9
  3849                           status	equ	0xFD8
  3850                           
  3851 ;; *************** function _Evaluate_Display *****************
  3852 ;; Defined at:
  3853 ;;		line 52 in file "display.c"
  3854 ;; Parameters:    Size  Location     Type
  3855 ;;  size            1    wreg     unsigned char 
  3856 ;;  evaluate        2    8[BANK0 ] PTR unsigned char 
  3857 ;;		 -> signs(3), string_delete(3), string_load(3), 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  size            1   14[BANK0 ] unsigned char 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;		None               void
  3862 ;; Registers used:
  3863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMRAM   BANK0   BANK1
  3869 ;;      Params:         0       2       0
  3870 ;;      Locals:         0       1       0
  3871 ;;      Temps:          0       4       0
  3872 ;;      Totals:         0       7       0
  3873 ;;Total ram usage:        7 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    6
  3876 ;; This function calls:
  3877 ;;		_Set_Bits
  3878 ;; This function is called by:
  3879 ;;		_Load_Data
  3880 ;;		_Del_Data
  3881 ;;		_Evaluate_Signs
  3882 ;;		_Set_Display
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text19
  3887  00080E                     __ptext19:
  3888                           	opt stack 0
  3889  00080E                     _Evaluate_Display:
  3890                           	opt stack 21
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;incstack = 0
  3894                           ;Evaluate_Display@size stored from wreg
  3895  00080E  0100               	movlb	0	; () banked
  3896  000810  6F6E               	movwf	Evaluate_Display@size& (0+255),b
  3897                           
  3898                           ;display.c: 53: for(display_counter = size; display_counter > 0;
  3899  000812  C06E  F041         	movff	Evaluate_Display@size,_display_counter
  3900                           
  3901                           ;display.c: 54: display_counter--) {
  3902  000816  D102               	goto	l3130
  3903  000818                     l428:
  3904                           
  3905                           ;display.c: 55: __nop();
  3906  000818  F000               	nop	
  3907                           
  3908                           ;display.c: 56: switch (evaluate[(display_counter - 1)]) {
  3909  00081A  D0AB               	goto	l3126
  3910  00081C                     l3088:
  3911                           
  3912                           ;display.c: 58: Set_Bits("ABCDEF");
  3913  00081C  0E59               	movlw	low STR_1
  3914  00081E  0100               	movlb	0	; () banked
  3915  000820  6F60               	movwf	Set_Bits@bits& (0+255),b
  3916  000822  0E02               	movlw	high STR_1
  3917  000824  0100               	movlb	0	; () banked
  3918  000826  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3919  000828  EC7B  F006         	call	_Set_Bits	;wreg free
  3920                           
  3921                           ;display.c: 59: break;
  3922  00082C  D0F6               	goto	l3128
  3923  00082E                     l3090:
  3924                           
  3925                           ;display.c: 61: Set_Bits("BC");
  3926  00082E  0E99               	movlw	low (STR_8+1)
  3927  000830  0100               	movlb	0	; () banked
  3928  000832  6F60               	movwf	Set_Bits@bits& (0+255),b
  3929  000834  0E02               	movlw	high (STR_8+1)
  3930  000836  0100               	movlb	0	; () banked
  3931  000838  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3932  00083A  EC7B  F006         	call	_Set_Bits	;wreg free
  3933                           
  3934                           ;display.c: 62: break;
  3935  00083E  D0ED               	goto	l3128
  3936  000840                     l3092:
  3937                           
  3938                           ;display.c: 64: Set_Bits("ABDEG");
  3939  000840  0E7B               	movlw	low STR_3
  3940  000842  0100               	movlb	0	; () banked
  3941  000844  6F60               	movwf	Set_Bits@bits& (0+255),b
  3942  000846  0E02               	movlw	high STR_3
  3943  000848  0100               	movlb	0	; () banked
  3944  00084A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3945  00084C  EC7B  F006         	call	_Set_Bits	;wreg free
  3946                           
  3947                           ;display.c: 65: break;
  3948  000850  D0E4               	goto	l3128
  3949  000852                     l3094:
  3950                           
  3951                           ;display.c: 67: Set_Bits("ABCDG");
  3952  000852  0E75               	movlw	low STR_4
  3953  000854  0100               	movlb	0	; () banked
  3954  000856  6F60               	movwf	Set_Bits@bits& (0+255),b
  3955  000858  0E02               	movlw	high STR_4
  3956  00085A  0100               	movlb	0	; () banked
  3957  00085C  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3958  00085E  EC7B  F006         	call	_Set_Bits	;wreg free
  3959                           
  3960                           ;display.c: 68: break;
  3961  000862  D0DB               	goto	l3128
  3962  000864                     l3096:
  3963                           
  3964                           ;display.c: 70: Set_Bits("BCFG");
  3965  000864  0E93               	movlw	low STR_5
  3966  000866  0100               	movlb	0	; () banked
  3967  000868  6F60               	movwf	Set_Bits@bits& (0+255),b
  3968  00086A  0E02               	movlw	high STR_5
  3969  00086C  0100               	movlb	0	; () banked
  3970  00086E  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3971  000870  EC7B  F006         	call	_Set_Bits	;wreg free
  3972                           
  3973                           ;display.c: 71: break;
  3974  000874  D0D2               	goto	l3128
  3975  000876                     l3098:
  3976                           
  3977                           ;display.c: 73: Set_Bits("ACDFG");
  3978  000876  0E81               	movlw	low STR_6
  3979  000878  0100               	movlb	0	; () banked
  3980  00087A  6F60               	movwf	Set_Bits@bits& (0+255),b
  3981  00087C  0E02               	movlw	high STR_6
  3982  00087E  0100               	movlb	0	; () banked
  3983  000880  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3984  000882  EC7B  F006         	call	_Set_Bits	;wreg free
  3985                           
  3986                           ;display.c: 74: break;
  3987  000886  D0C9               	goto	l3128
  3988  000888                     l3100:
  3989                           
  3990                           ;display.c: 76: Set_Bits("ACDEFG");
  3991  000888  0E6E               	movlw	low STR_7
  3992  00088A  0100               	movlb	0	; () banked
  3993  00088C  6F60               	movwf	Set_Bits@bits& (0+255),b
  3994  00088E  0E02               	movlw	high STR_7
  3995  000890  0100               	movlb	0	; () banked
  3996  000892  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  3997  000894  EC7B  F006         	call	_Set_Bits	;wreg free
  3998                           
  3999                           ;display.c: 77: break;
  4000  000898  D0C0               	goto	l3128
  4001  00089A                     l3102:
  4002                           
  4003                           ;display.c: 79: Set_Bits("ABC");
  4004  00089A  0E98               	movlw	low STR_8
  4005  00089C  0100               	movlb	0	; () banked
  4006  00089E  6F60               	movwf	Set_Bits@bits& (0+255),b
  4007  0008A0  0E02               	movlw	high STR_8
  4008  0008A2  0100               	movlb	0	; () banked
  4009  0008A4  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4010  0008A6  EC7B  F006         	call	_Set_Bits	;wreg free
  4011                           
  4012                           ;display.c: 80: break;
  4013  0008AA  D0B7               	goto	l3128
  4014  0008AC                     l3104:
  4015                           
  4016                           ;display.c: 82: Set_Bits("ABCDEFG");
  4017  0008AC  0E51               	movlw	low STR_9
  4018  0008AE  0100               	movlb	0	; () banked
  4019  0008B0  6F60               	movwf	Set_Bits@bits& (0+255),b
  4020  0008B2  0E02               	movlw	high STR_9
  4021  0008B4  0100               	movlb	0	; () banked
  4022  0008B6  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4023  0008B8  EC7B  F006         	call	_Set_Bits	;wreg free
  4024                           
  4025                           ;display.c: 83: break;
  4026  0008BC  D0AE               	goto	l3128
  4027  0008BE                     l3106:
  4028                           
  4029                           ;display.c: 85: Set_Bits("ABCDFG");
  4030  0008BE  0E60               	movlw	low STR_10
  4031  0008C0  0100               	movlb	0	; () banked
  4032  0008C2  6F60               	movwf	Set_Bits@bits& (0+255),b
  4033  0008C4  0E02               	movlw	high STR_10
  4034  0008C6  0100               	movlb	0	; () banked
  4035  0008C8  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4036  0008CA  EC7B  F006         	call	_Set_Bits	;wreg free
  4037                           
  4038                           ;display.c: 86: break;
  4039  0008CE  D0A5               	goto	l3128
  4040  0008D0                     l3108:
  4041                           
  4042                           ;display.c: 88: Set_Bits("ABCEFG");
  4043  0008D0  0E67               	movlw	low STR_11
  4044  0008D2  0100               	movlb	0	; () banked
  4045  0008D4  6F60               	movwf	Set_Bits@bits& (0+255),b
  4046  0008D6  0E02               	movlw	high STR_11
  4047  0008D8  0100               	movlb	0	; () banked
  4048  0008DA  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4049  0008DC  EC7B  F006         	call	_Set_Bits	;wreg free
  4050                           
  4051                           ;display.c: 89: break;
  4052  0008E0  D09C               	goto	l3128
  4053  0008E2                     l3110:
  4054                           
  4055                           ;display.c: 91: Set_Bits("ABCDEF");
  4056  0008E2  0E59               	movlw	low STR_1
  4057  0008E4  0100               	movlb	0	; () banked
  4058  0008E6  6F60               	movwf	Set_Bits@bits& (0+255),b
  4059  0008E8  0E02               	movlw	high STR_1
  4060  0008EA  0100               	movlb	0	; () banked
  4061  0008EC  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4062  0008EE  EC7B  F006         	call	_Set_Bits	;wreg free
  4063                           
  4064                           ;display.c: 92: break;
  4065  0008F2  D093               	goto	l3128
  4066  0008F4                     l3112:
  4067                           
  4068                           ;display.c: 94: Set_Bits("ADEFG");
  4069  0008F4  0E8D               	movlw	low STR_13
  4070  0008F6  0100               	movlb	0	; () banked
  4071  0008F8  6F60               	movwf	Set_Bits@bits& (0+255),b
  4072  0008FA  0E02               	movlw	high STR_13
  4073  0008FC  0100               	movlb	0	; () banked
  4074  0008FE  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4075  000900  EC7B  F006         	call	_Set_Bits	;wreg free
  4076                           
  4077                           ;display.c: 95: break;
  4078  000904  D08A               	goto	l3128
  4079  000906                     l3114:
  4080                           
  4081                           ;display.c: 97: Set_Bits("DEF");
  4082  000906  0E5C               	movlw	low (STR_1+3)
  4083  000908  0100               	movlb	0	; () banked
  4084  00090A  6F60               	movwf	Set_Bits@bits& (0+255),b
  4085  00090C  0E02               	movlw	high (STR_1+3)
  4086  00090E  0100               	movlb	0	; () banked
  4087  000910  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4088  000912  EC7B  F006         	call	_Set_Bits	;wreg free
  4089                           
  4090                           ;display.c: 98: break;
  4091  000916  D081               	goto	l3128
  4092  000918                     l3116:
  4093                           
  4094                           ;display.c: 100: Set_Bits("ABCDEF");
  4095  000918  0E59               	movlw	low STR_1
  4096  00091A  0100               	movlb	0	; () banked
  4097  00091C  6F60               	movwf	Set_Bits@bits& (0+255),b
  4098  00091E  0E02               	movlw	high STR_1
  4099  000920  0100               	movlb	0	; () banked
  4100  000922  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4101  000924  EC7B  F006         	call	_Set_Bits	;wreg free
  4102                           
  4103                           ;display.c: 101: break;
  4104  000928  D078               	goto	l3128
  4105  00092A                     l3118:
  4106                           
  4107                           ;display.c: 103: Set_Bits("ABEFG");
  4108  00092A  0E87               	movlw	low STR_16
  4109  00092C  0100               	movlb	0	; () banked
  4110  00092E  6F60               	movwf	Set_Bits@bits& (0+255),b
  4111  000930  0E02               	movlw	high STR_16
  4112  000932  0100               	movlb	0	; () banked
  4113  000934  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4114  000936  EC7B  F006         	call	_Set_Bits	;wreg free
  4115                           
  4116                           ;display.c: 104: break;
  4117  00093A  D06F               	goto	l3128
  4118  00093C                     l3120:
  4119                           
  4120                           ;display.c: 106: Set_Bits("G");
  4121  00093C  0E79               	movlw	low (STR_4+4)
  4122  00093E  0100               	movlb	0	; () banked
  4123  000940  6F60               	movwf	Set_Bits@bits& (0+255),b
  4124  000942  0E02               	movlw	high (STR_4+4)
  4125  000944  0100               	movlb	0	; () banked
  4126  000946  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4127  000948  EC7B  F006         	call	_Set_Bits	;wreg free
  4128                           
  4129                           ;display.c: 107: break;
  4130  00094C  D066               	goto	l3128
  4131  00094E                     l3122:
  4132                           
  4133                           ;display.c: 109: Set_Bits("BCDEF");
  4134  00094E  0E5A               	movlw	low (STR_1+1)
  4135  000950  0100               	movlb	0	; () banked
  4136  000952  6F60               	movwf	Set_Bits@bits& (0+255),b
  4137  000954  0E02               	movlw	high (STR_1+1)
  4138  000956  0100               	movlb	0	; () banked
  4139  000958  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4140  00095A  EC7B  F006         	call	_Set_Bits	;wreg free
  4141                           
  4142                           ;display.c: 110: break;
  4143  00095E  D05D               	goto	l3128
  4144  000960                     l3124:
  4145                           
  4146                           ;display.c: 112: Set_Bits("0");
  4147  000960  0E9C               	movlw	low STR_19
  4148  000962  0100               	movlb	0	; () banked
  4149  000964  6F60               	movwf	Set_Bits@bits& (0+255),b
  4150  000966  0E02               	movlw	high STR_19
  4151  000968  0100               	movlb	0	; () banked
  4152  00096A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4153  00096C  EC7B  F006         	call	_Set_Bits	;wreg free
  4154                           
  4155                           ;display.c: 113: }
  4156  000970  D054               	goto	l3128
  4157  000972                     l3126:
  4158  000972  0EFF               	movlw	255
  4159  000974  0100               	movlb	0	; () banked
  4160  000976  6F6A               	movwf	??_Evaluate_Display& (0+255),b
  4161  000978  0EFF               	movlw	255
  4162  00097A  0100               	movlb	0	; () banked
  4163  00097C  6F6B               	movwf	(??_Evaluate_Display+1)& (0+255),b
  4164  00097E  5041               	movf	_display_counter,w,c
  4165  000980  0100               	movlb	0	; () banked
  4166  000982  6F6C               	movwf	(??_Evaluate_Display+2)& (0+255),b
  4167  000984  6B6D               	clrf	(??_Evaluate_Display+3)& (0+255),b
  4168  000986  0100               	movlb	0	; () banked
  4169  000988  516A               	movf	??_Evaluate_Display& (0+255),w,b
  4170  00098A  0100               	movlb	0	; () banked
  4171  00098C  276C               	addwf	(??_Evaluate_Display+2)& (0+255),f,b
  4172  00098E  0100               	movlb	0	; () banked
  4173  000990  516B               	movf	(??_Evaluate_Display+1)& (0+255),w,b
  4174  000992  0100               	movlb	0	; () banked
  4175  000994  236D               	addwfc	(??_Evaluate_Display+3)& (0+255),f,b
  4176  000996  0100               	movlb	0	; () banked
  4177  000998  516C               	movf	(??_Evaluate_Display+2)& (0+255),w,b
  4178  00099A  0100               	movlb	0	; () banked
  4179  00099C  2568               	addwf	Evaluate_Display@evaluate& (0+255),w,b
  4180  00099E  6ED9               	movwf	fsr2l,c
  4181  0009A0  0100               	movlb	0	; () banked
  4182  0009A2  516D               	movf	(??_Evaluate_Display+3)& (0+255),w,b
  4183  0009A4  0100               	movlb	0	; () banked
  4184  0009A6  2169               	addwfc	(Evaluate_Display@evaluate+1)& (0+255),w,b
  4185  0009A8  6EDA               	movwf	fsr2h,c
  4186  0009AA  50DF               	movf	indf2,w,c
  4187                           
  4188                           ; Switch size 1, requested type "space"
  4189                           ; Number of cases is 18, Range of values is 45 to 84
  4190                           ; switch strategies available:
  4191                           ; Name         Instructions Cycles
  4192                           ; simple_byte           55    28 (average)
  4193                           ;	Chosen strategy is simple_byte
  4194  0009AC  0A2D               	xorlw	45	; case 45
  4195  0009AE  B4D8               	btfsc	status,2,c
  4196  0009B0  D7C5               	goto	l3120
  4197  0009B2  0A1D               	xorlw	29	; case 48
  4198  0009B4  B4D8               	btfsc	status,2,c
  4199  0009B6  D732               	goto	l3088
  4200  0009B8  0A01               	xorlw	1	; case 49
  4201  0009BA  B4D8               	btfsc	status,2,c
  4202  0009BC  D738               	goto	l3090
  4203  0009BE  0A03               	xorlw	3	; case 50
  4204  0009C0  B4D8               	btfsc	status,2,c
  4205  0009C2  D73E               	goto	l3092
  4206  0009C4  0A01               	xorlw	1	; case 51
  4207  0009C6  B4D8               	btfsc	status,2,c
  4208  0009C8  D744               	goto	l3094
  4209  0009CA  0A07               	xorlw	7	; case 52
  4210  0009CC  B4D8               	btfsc	status,2,c
  4211  0009CE  D74A               	goto	l3096
  4212  0009D0  0A01               	xorlw	1	; case 53
  4213  0009D2  B4D8               	btfsc	status,2,c
  4214  0009D4  D750               	goto	l3098
  4215  0009D6  0A03               	xorlw	3	; case 54
  4216  0009D8  B4D8               	btfsc	status,2,c
  4217  0009DA  D756               	goto	l3100
  4218  0009DC  0A01               	xorlw	1	; case 55
  4219  0009DE  B4D8               	btfsc	status,2,c
  4220  0009E0  D75C               	goto	l3102
  4221  0009E2  0A0F               	xorlw	15	; case 56
  4222  0009E4  B4D8               	btfsc	status,2,c
  4223  0009E6  D762               	goto	l3104
  4224  0009E8  0A01               	xorlw	1	; case 57
  4225  0009EA  B4D8               	btfsc	status,2,c
  4226  0009EC  D768               	goto	l3106
  4227  0009EE  0A78               	xorlw	120	; case 65
  4228  0009F0  B4D8               	btfsc	status,2,c
  4229  0009F2  D76E               	goto	l3108
  4230  0009F4  0A05               	xorlw	5	; case 68
  4231  0009F6  B4D8               	btfsc	status,2,c
  4232  0009F8  D774               	goto	l3110
  4233  0009FA  0A01               	xorlw	1	; case 69
  4234  0009FC  B4D8               	btfsc	status,2,c
  4235  0009FE  D77A               	goto	l3112
  4236  000A00  0A09               	xorlw	9	; case 76
  4237  000A02  B4D8               	btfsc	status,2,c
  4238  000A04  D780               	goto	l3114
  4239  000A06  0A03               	xorlw	3	; case 79
  4240  000A08  B4D8               	btfsc	status,2,c
  4241  000A0A  D786               	goto	l3116
  4242  000A0C  0A1F               	xorlw	31	; case 80
  4243  000A0E  B4D8               	btfsc	status,2,c
  4244  000A10  D78C               	goto	l3118
  4245  000A12  0A04               	xorlw	4	; case 84
  4246  000A14  B4D8               	btfsc	status,2,c
  4247  000A16  D79B               	goto	l3122
  4248  000A18  D7A3               	goto	l3124
  4249  000A1A                     l3128:
  4250  000A1A  0641               	decf	_display_counter,f,c
  4251  000A1C                     l3130:
  4252  000A1C  5041               	movf	_display_counter,w,c
  4253  000A1E  B4D8               	btfsc	status,2,c
  4254  000A20  0012               	return	
  4255  000A22  D6FA               	goto	l428
  4256  000A24                     __end_of_Evaluate_Display:
  4257                           	opt stack 0
  4258                           tblptru	equ	0xFF8
  4259                           tblptrh	equ	0xFF7
  4260                           tblptrl	equ	0xFF6
  4261                           tablat	equ	0xFF5
  4262                           prodh	equ	0xFF4
  4263                           prodl	equ	0xFF3
  4264                           intcon	equ	0xFF2
  4265                           postinc0	equ	0xFEE
  4266                           wreg	equ	0xFE8
  4267                           postdec1	equ	0xFE5
  4268                           fsr1l	equ	0xFE1
  4269                           indf2	equ	0xFDF
  4270                           postinc2	equ	0xFDE
  4271                           postdec2	equ	0xFDD
  4272                           plusw2	equ	0xFDB
  4273                           fsr2h	equ	0xFDA
  4274                           fsr2l	equ	0xFD9
  4275                           status	equ	0xFD8
  4276                           
  4277 ;; *************** function _Set_Bits *****************
  4278 ;; Defined at:
  4279 ;;		line 12 in file "display.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  bits            2    0[BANK0 ] PTR const unsigned char 
  4282 ;;		 -> STR_19(2), STR_18(6), STR_17(2), STR_16(6), 
  4283 ;;		 -> STR_15(7), STR_14(4), STR_13(6), STR_12(7), 
  4284 ;;		 -> STR_11(7), STR_10(7), STR_9(8), STR_8(4), 
  4285 ;;		 -> STR_7(7), STR_6(6), STR_5(5), STR_4(6), 
  4286 ;;		 -> STR_3(6), STR_2(3), STR_1(7), 
  4287 ;; Auto vars:     Size  Location     Type
  4288 ;;  bitcount        1    6[BANK0 ] unsigned char 
  4289 ;;  Bitoutput       1    7[BANK0 ] unsigned char 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;		None               void
  4292 ;; Registers used:
  4293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMRAM   BANK0   BANK1
  4299 ;;      Params:         0       2       0
  4300 ;;      Locals:         0       2       0
  4301 ;;      Temps:          0       4       0
  4302 ;;      Totals:         0       8       0
  4303 ;;Total ram usage:        8 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; Hardware stack levels required when called:    5
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_Evaluate_Display
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           	psect	text20
  4314  000CF6                     __ptext20:
  4315                           	opt stack 0
  4316  000CF6                     _Set_Bits:
  4317                           	opt stack 21
  4318                           
  4319                           ;display.c: 13: unsigned char Bitoutput = 0;
  4320                           
  4321                           ;incstack = 0
  4322  000CF6  0E00               	movlw	0
  4323  000CF8  0100               	movlb	0	; () banked
  4324  000CFA  6F67               	movwf	Set_Bits@Bitoutput& (0+255),b
  4325                           
  4326                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  4327  000CFC  0E00               	movlw	0
  4328  000CFE  0100               	movlb	0	; () banked
  4329  000D00  6F66               	movwf	Set_Bits@bitcount& (0+255),b
  4330                           
  4331                           ;display.c: 15: bitcount++) {
  4332  000D02  D03F               	goto	l3082
  4333  000D04                     l3062:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;display.c: 18: Bitoutput |= 0b00000001;
  4337  000D04  0100               	movlb	0	; () banked
  4338  000D06  8167               	bsf	Set_Bits@Bitoutput& (0+255),0,b
  4339                           
  4340                           ;display.c: 19: break;
  4341  000D08  D03A               	goto	l3080
  4342  000D0A                     l3064:
  4343                           
  4344                           ; BSR set to: 0
  4345                           ;display.c: 21: Bitoutput |= 0b00000010;
  4346  000D0A  0100               	movlb	0	; () banked
  4347  000D0C  8367               	bsf	Set_Bits@Bitoutput& (0+255),1,b
  4348                           
  4349                           ;display.c: 22: break;
  4350  000D0E  D037               	goto	l3080
  4351  000D10                     l3066:
  4352                           
  4353                           ; BSR set to: 0
  4354                           ;display.c: 24: Bitoutput |= 0b00000100;
  4355  000D10  0100               	movlb	0	; () banked
  4356  000D12  8567               	bsf	Set_Bits@Bitoutput& (0+255),2,b
  4357                           
  4358                           ;display.c: 25: break;
  4359  000D14  D034               	goto	l3080
  4360  000D16                     l3068:
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;display.c: 27: Bitoutput |= 0b00001000;
  4364  000D16  0100               	movlb	0	; () banked
  4365  000D18  8767               	bsf	Set_Bits@Bitoutput& (0+255),3,b
  4366                           
  4367                           ;display.c: 28: break;
  4368  000D1A  D031               	goto	l3080
  4369  000D1C                     l3070:
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;display.c: 30: Bitoutput |= 0b00010000;
  4373  000D1C  0100               	movlb	0	; () banked
  4374  000D1E  8967               	bsf	Set_Bits@Bitoutput& (0+255),4,b
  4375                           
  4376                           ;display.c: 31: break;
  4377  000D20  D02E               	goto	l3080
  4378  000D22                     l3072:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;display.c: 33: Bitoutput |= 0b00100000;
  4382  000D22  0100               	movlb	0	; () banked
  4383  000D24  8B67               	bsf	Set_Bits@Bitoutput& (0+255),5,b
  4384                           
  4385                           ;display.c: 34: break;
  4386  000D26  D02B               	goto	l3080
  4387  000D28                     l3074:
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;display.c: 36: Bitoutput |= 0b01000000;
  4391  000D28  0100               	movlb	0	; () banked
  4392  000D2A  8D67               	bsf	Set_Bits@Bitoutput& (0+255),6,b
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;display.c: 40: }
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;display.c: 39: break;
  4399                           
  4400                           ;display.c: 38: default:
  4401                           
  4402                           ;display.c: 37: break;
  4403  000D2C  D028               	goto	l3080
  4404  000D2E                     l3078:
  4405                           
  4406                           ; BSR set to: 0
  4407  000D2E  0100               	movlb	0	; () banked
  4408  000D30  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4409  000D32  0D01               	mullw	1
  4410  000D34  C060  F062         	movff	Set_Bits@bits,??_Set_Bits
  4411  000D38  C061  F063         	movff	Set_Bits@bits+1,??_Set_Bits+1
  4412  000D3C  50F3               	movf	prodl,w,c
  4413  000D3E  0100               	movlb	0	; () banked
  4414  000D40  2762               	addwf	??_Set_Bits& (0+255),f,b
  4415  000D42  50F4               	movf	prodh,w,c
  4416  000D44  0100               	movlb	0	; () banked
  4417  000D46  2363               	addwfc	(??_Set_Bits+1)& (0+255),f,b
  4418  000D48  C062  FFF6         	movff	??_Set_Bits,tblptrl
  4419  000D4C  C063  FFF7         	movff	??_Set_Bits+1,tblptrh
  4420  000D50                     	if	0	;tblptru may be non-zero
  4421  000D50                     	endif
  4422  000D50                     	if	0	;tblptru may be non-zero
  4423  000D50                     	endif
  4424  000D50  0008               	tblrd		*
  4425  000D52  50F5               	movf	tablat,w,c
  4426                           
  4427                           ; Switch size 1, requested type "space"
  4428                           ; Number of cases is 7, Range of values is 65 to 71
  4429                           ; switch strategies available:
  4430                           ; Name         Instructions Cycles
  4431                           ; simple_byte           22    12 (average)
  4432                           ;	Chosen strategy is simple_byte
  4433  000D54  0A41               	xorlw	65	; case 65
  4434  000D56  B4D8               	btfsc	status,2,c
  4435  000D58  D7D5               	goto	l3062
  4436  000D5A  0A03               	xorlw	3	; case 66
  4437  000D5C  B4D8               	btfsc	status,2,c
  4438  000D5E  D7D5               	goto	l3064
  4439  000D60  0A01               	xorlw	1	; case 67
  4440  000D62  B4D8               	btfsc	status,2,c
  4441  000D64  D7D5               	goto	l3066
  4442  000D66  0A07               	xorlw	7	; case 68
  4443  000D68  B4D8               	btfsc	status,2,c
  4444  000D6A  D7D5               	goto	l3068
  4445  000D6C  0A01               	xorlw	1	; case 69
  4446  000D6E  B4D8               	btfsc	status,2,c
  4447  000D70  D7D5               	goto	l3070
  4448  000D72  0A03               	xorlw	3	; case 70
  4449  000D74  B4D8               	btfsc	status,2,c
  4450  000D76  D7D5               	goto	l3072
  4451  000D78  0A01               	xorlw	1	; case 71
  4452  000D7A  B4D8               	btfsc	status,2,c
  4453  000D7C  D7D5               	goto	l3074
  4454  000D7E                     l3080:
  4455                           
  4456                           ; BSR set to: 0
  4457  000D7E  0100               	movlb	0	; () banked
  4458  000D80  2B66               	incf	Set_Bits@bitcount& (0+255),f,b
  4459  000D82                     l3082:
  4460                           
  4461                           ; BSR set to: 0
  4462  000D82  0100               	movlb	0	; () banked
  4463  000D84  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4464  000D86  0D01               	mullw	1
  4465  000D88  C060  F062         	movff	Set_Bits@bits,??_Set_Bits
  4466  000D8C  C061  F063         	movff	Set_Bits@bits+1,??_Set_Bits+1
  4467  000D90  50F3               	movf	prodl,w,c
  4468  000D92  0100               	movlb	0	; () banked
  4469  000D94  2762               	addwf	??_Set_Bits& (0+255),f,b
  4470  000D96  50F4               	movf	prodh,w,c
  4471  000D98  0100               	movlb	0	; () banked
  4472  000D9A  2363               	addwfc	(??_Set_Bits+1)& (0+255),f,b
  4473  000D9C  C062  FFF6         	movff	??_Set_Bits,tblptrl
  4474  000DA0  C063  FFF7         	movff	??_Set_Bits+1,tblptrh
  4475  000DA4                     	if	0	;tblptru may be non-zero
  4476  000DA4                     	endif
  4477  000DA4                     	if	0	;tblptru may be non-zero
  4478  000DA4                     	endif
  4479  000DA4  0008               	tblrd		*
  4480  000DA6  50F5               	movf	tablat,w,c
  4481  000DA8  0900               	iorlw	0
  4482  000DAA  A4D8               	btfss	status,2,c
  4483  000DAC  D7C0               	goto	l3078
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;display.c: 41: }
  4487                           ;display.c: 42: pixels[(display_counter - 1)] = Bitoutput;
  4488                           
  4489                           ; BSR set to: 0
  4490  000DAE  0EFF               	movlw	255
  4491  000DB0  0100               	movlb	0	; () banked
  4492  000DB2  6F62               	movwf	??_Set_Bits& (0+255),b
  4493  000DB4  0EFF               	movlw	255
  4494  000DB6  0100               	movlb	0	; () banked
  4495  000DB8  6F63               	movwf	(??_Set_Bits+1)& (0+255),b
  4496  000DBA  5041               	movf	_display_counter,w,c
  4497  000DBC  0100               	movlb	0	; () banked
  4498  000DBE  6F64               	movwf	(??_Set_Bits+2)& (0+255),b
  4499  000DC0  6B65               	clrf	(??_Set_Bits+3)& (0+255),b
  4500  000DC2  0100               	movlb	0	; () banked
  4501  000DC4  5162               	movf	??_Set_Bits& (0+255),w,b
  4502  000DC6  0100               	movlb	0	; () banked
  4503  000DC8  2764               	addwf	(??_Set_Bits+2)& (0+255),f,b
  4504  000DCA  0100               	movlb	0	; () banked
  4505  000DCC  5163               	movf	(??_Set_Bits+1)& (0+255),w,b
  4506  000DCE  0100               	movlb	0	; () banked
  4507  000DD0  2365               	addwfc	(??_Set_Bits+3)& (0+255),f,b
  4508  000DD2  0E39               	movlw	low _pixels
  4509  000DD4  0100               	movlb	0	; () banked
  4510  000DD6  2564               	addwf	(??_Set_Bits+2)& (0+255),w,b
  4511  000DD8  6ED9               	movwf	fsr2l,c
  4512  000DDA  0E00               	movlw	high _pixels
  4513  000DDC  0100               	movlb	0	; () banked
  4514  000DDE  2165               	addwfc	(??_Set_Bits+3)& (0+255),w,b
  4515  000DE0  6EDA               	movwf	fsr2h,c
  4516  000DE2  C067  FFDF         	movff	Set_Bits@Bitoutput,indf2
  4517                           
  4518                           ; BSR set to: 0
  4519  000DE6  0012               	return		;funcret
  4520  000DE8                     __end_of_Set_Bits:
  4521                           	opt stack 0
  4522                           tblptru	equ	0xFF8
  4523                           tblptrh	equ	0xFF7
  4524                           tblptrl	equ	0xFF6
  4525                           tablat	equ	0xFF5
  4526                           prodh	equ	0xFF4
  4527                           prodl	equ	0xFF3
  4528                           intcon	equ	0xFF2
  4529                           postinc0	equ	0xFEE
  4530                           wreg	equ	0xFE8
  4531                           postdec1	equ	0xFE5
  4532                           fsr1l	equ	0xFE1
  4533                           indf2	equ	0xFDF
  4534                           postinc2	equ	0xFDE
  4535                           postdec2	equ	0xFDD
  4536                           plusw2	equ	0xFDB
  4537                           fsr2h	equ	0xFDA
  4538                           fsr2l	equ	0xFD9
  4539                           status	equ	0xFD8
  4540                           
  4541 ;; *************** function _Read_Data *****************
  4542 ;; Defined at:
  4543 ;;		line 45 in file "storage.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  read_address    1    wreg     unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  read_address    1    4[BANK0 ] unsigned char 
  4548 ;;  data_read       2    2[BANK0 ] unsigned int 
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  2    0[BANK0 ] unsigned int 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1
  4558 ;;      Params:         0       2       0
  4559 ;;      Locals:         0       3       0
  4560 ;;      Temps:          0       0       0
  4561 ;;      Totals:         0       5       0
  4562 ;;Total ram usage:        5 bytes
  4563 ;; Hardware stack levels used:    1
  4564 ;; Hardware stack levels required when called:    5
  4565 ;; This function calls:
  4566 ;;		Nothing
  4567 ;; This function is called by:
  4568 ;;		_Check_Buttons
  4569 ;;		_Load_Data
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text21
  4574  001568                     __ptext21:
  4575                           	opt stack 0
  4576  001568                     _Read_Data:
  4577                           	opt stack 24
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;incstack = 0
  4581                           ;Read_Data@read_address stored from wreg
  4582  001568  0100               	movlb	0	; () banked
  4583  00156A  6F64               	movwf	Read_Data@read_address& (0+255),b
  4584                           
  4585                           ;storage.c: 46: unsigned int data_read = 0;
  4586  00156C  0E00               	movlw	0
  4587  00156E  0100               	movlb	0	; () banked
  4588  001570  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4589  001572  0E00               	movlw	0
  4590  001574  6F62               	movwf	Read_Data@data_read& (0+255),b
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;storage.c: 47: read_address += 50;
  4594  001576  0E32               	movlw	50
  4595  001578  0100               	movlb	0	; () banked
  4596  00157A  2764               	addwf	Read_Data@read_address& (0+255),f,b
  4597                           
  4598                           ; BSR set to: 0
  4599                           ;storage.c: 48: EEADR = read_address;
  4600  00157C  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;storage.c: 49: EECON1bits.EEPGD = 0;
  4604  001580  9EA6               	bcf	4006,7,c	;volatile
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;storage.c: 50: EECON1bits.CFGS = 0;
  4608  001582  9CA6               	bcf	4006,6,c	;volatile
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;storage.c: 51: EECON1bits.RD = 1;
  4612  001584  80A6               	bsf	4006,0,c	;volatile
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;storage.c: 52: data_read = EEDATA;
  4616  001586  CFA8 F062          	movff	4008,Read_Data@data_read	;volatile
  4617  00158A  0100               	movlb	0	; () banked
  4618  00158C  6B63               	clrf	(Read_Data@data_read+1)& (0+255),b
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;storage.c: 53: read_address -= 50;
  4622  00158E  0E32               	movlw	50
  4623  001590  0100               	movlb	0	; () banked
  4624  001592  5F64               	subwf	Read_Data@read_address& (0+255),f,b
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;storage.c: 54: data_read <<= 8;
  4628  001594  0100               	movlb	0	; () banked
  4629  001596  5162               	movf	Read_Data@data_read& (0+255),w,b
  4630  001598  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4631  00159A  6B62               	clrf	Read_Data@data_read& (0+255),b
  4632                           
  4633                           ; BSR set to: 0
  4634                           ;storage.c: 55: EEADR = read_address;
  4635  00159C  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;storage.c: 56: EECON1bits.EEPGD = 0;
  4639  0015A0  9EA6               	bcf	4006,7,c	;volatile
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;storage.c: 57: EECON1bits.CFGS = 0;
  4643  0015A2  9CA6               	bcf	4006,6,c	;volatile
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;storage.c: 58: EECON1bits.RD = 1;
  4647  0015A4  80A6               	bsf	4006,0,c	;volatile
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;storage.c: 59: data_read |= EEDATA;
  4651  0015A6  50A8               	movf	4008,w,c	;volatile
  4652  0015A8  0100               	movlb	0	; () banked
  4653  0015AA  1362               	iorwf	Read_Data@data_read& (0+255),f,b
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;storage.c: 60: return data_read;
  4657  0015AC  C062  F060         	movff	Read_Data@data_read,?_Read_Data
  4658  0015B0  C063  F061         	movff	Read_Data@data_read+1,?_Read_Data+1
  4659  0015B4  0012               	return	
  4660  0015B6                     __end_of_Read_Data:
  4661                           	opt stack 0
  4662                           tblptru	equ	0xFF8
  4663                           tblptrh	equ	0xFF7
  4664                           tblptrl	equ	0xFF6
  4665                           tablat	equ	0xFF5
  4666                           prodh	equ	0xFF4
  4667                           prodl	equ	0xFF3
  4668                           intcon	equ	0xFF2
  4669                           postinc0	equ	0xFEE
  4670                           wreg	equ	0xFE8
  4671                           postdec1	equ	0xFE5
  4672                           fsr1l	equ	0xFE1
  4673                           indf2	equ	0xFDF
  4674                           postinc2	equ	0xFDE
  4675                           postdec2	equ	0xFDD
  4676                           plusw2	equ	0xFDB
  4677                           fsr2h	equ	0xFDA
  4678                           fsr2l	equ	0xFD9
  4679                           status	equ	0xFD8
  4680                           
  4681 ;; *************** function _Delay_Routine *****************
  4682 ;; Defined at:
  4683 ;;		line 78 in file "main.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  delay_multip    1    wreg     unsigned char 
  4686 ;; Auto vars:     Size  Location     Type
  4687 ;;  delay_multip    1    1[BANK0 ] unsigned char 
  4688 ;;  delay_counte    1    2[BANK0 ] unsigned char 
  4689 ;; Return value:  Size  Location     Type
  4690 ;;		None               void
  4691 ;; Registers used:
  4692 ;;		wreg, status,2, status,0, cstack
  4693 ;; Tracked objects:
  4694 ;;		On entry : 0/0
  4695 ;;		On exit  : 0/0
  4696 ;;		Unchanged: 0/0
  4697 ;; Data sizes:     COMRAM   BANK0   BANK1
  4698 ;;      Params:         0       0       0
  4699 ;;      Locals:         0       2       0
  4700 ;;      Temps:          0       1       0
  4701 ;;      Totals:         0       3       0
  4702 ;;Total ram usage:        3 bytes
  4703 ;; Hardware stack levels used:    1
  4704 ;; Hardware stack levels required when called:    5
  4705 ;; This function calls:
  4706 ;;		Nothing
  4707 ;; This function is called by:
  4708 ;;		_Check_Buttons
  4709 ;;		_Load_Data
  4710 ;;		_Del_Data
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           	psect	text22
  4715  001726                     __ptext22:
  4716                           	opt stack 0
  4717  001726                     _Delay_Routine:
  4718                           	opt stack 24
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;incstack = 0
  4722                           ;Delay_Routine@delay_multiplyer stored from wreg
  4723  001726  0100               	movlb	0	; () banked
  4724  001728  6F61               	movwf	Delay_Routine@delay_multiplyer& (0+255),b
  4725                           
  4726                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  4727  00172A  0E00               	movlw	0
  4728  00172C  0100               	movlb	0	; () banked
  4729  00172E  6F62               	movwf	Delay_Routine@delay_counter& (0+255),b
  4730                           
  4731                           ;main.c: 80: delay_counter++) {
  4732  001730  D00A               	goto	l3212
  4733  001732                     l3208:
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  4737  001732  0E82               	movlw	130
  4738  001734  0100               	movlb	0	; () banked
  4739  001736  6F60               	movwf	??_Delay_Routine& (0+255),b
  4740  001738  0EDE               	movlw	222
  4741  00173A                     u2577:
  4742  00173A  2EE8               	decfsz	wreg,f,c
  4743  00173C  D7FE               	goto	u2577
  4744  00173E  2F60               	decfsz	??_Delay_Routine& (0+255),f,b
  4745  001740  D7FC               	goto	u2577
  4746  001742  0100               	movlb	0	; () banked
  4747  001744  2B62               	incf	Delay_Routine@delay_counter& (0+255),f,b
  4748  001746                     l3212:
  4749                           
  4750                           ; BSR set to: 0
  4751  001746  0100               	movlb	0	; () banked
  4752  001748  5161               	movf	Delay_Routine@delay_multiplyer& (0+255),w,b
  4753  00174A  0100               	movlb	0	; () banked
  4754  00174C  5D62               	subwf	Delay_Routine@delay_counter& (0+255),w,b
  4755  00174E  A0D8               	btfss	status,0,c
  4756  001750  D7F0               	goto	l3208
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;main.c: 82: }
  4760                           ;main.c: 83: __nop();
  4761  001752  F000               	nop	
  4762  001754  0012               	return		;funcret
  4763  001756                     __end_of_Delay_Routine:
  4764                           	opt stack 0
  4765                           tblptru	equ	0xFF8
  4766                           tblptrh	equ	0xFF7
  4767                           tblptrl	equ	0xFF6
  4768                           tablat	equ	0xFF5
  4769                           prodh	equ	0xFF4
  4770                           prodl	equ	0xFF3
  4771                           intcon	equ	0xFF2
  4772                           postinc0	equ	0xFEE
  4773                           wreg	equ	0xFE8
  4774                           postdec1	equ	0xFE5
  4775                           fsr1l	equ	0xFE1
  4776                           indf2	equ	0xFDF
  4777                           postinc2	equ	0xFDE
  4778                           postdec2	equ	0xFDD
  4779                           plusw2	equ	0xFDB
  4780                           fsr2h	equ	0xFDA
  4781                           fsr2l	equ	0xFD9
  4782                           status	equ	0xFD8
  4783                           
  4784 ;; *************** function _Check_Detonators *****************
  4785 ;; Defined at:
  4786 ;;		line 25 in file "ignition.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;		None
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;		None
  4791 ;; Return value:  Size  Location     Type
  4792 ;;		None               void
  4793 ;; Registers used:
  4794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMRAM   BANK0   BANK1
  4800 ;;      Params:         0       0       0
  4801 ;;      Locals:         0       0       0
  4802 ;;      Temps:          0       0       0
  4803 ;;      Totals:         0       0       0
  4804 ;;Total ram usage:        0 bytes
  4805 ;; Hardware stack levels used:    1
  4806 ;; Hardware stack levels required when called:    6
  4807 ;; This function calls:
  4808 ;;		_Transmit
  4809 ;; This function is called by:
  4810 ;;		_Check_Buttons
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text23
  4815  001682                     __ptext23:
  4816                           	opt stack 0
  4817  001682                     _Check_Detonators:
  4818                           	opt stack 23
  4819                           
  4820                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  4821                           
  4822                           ;incstack = 0
  4823  001682  0E54               	movlw	84
  4824  001684  0100               	movlb	0	; () banked
  4825  001686  6F60               	movwf	Transmit@operation& (0+255),b
  4826  001688  5037               	movf	_check_counter,w,c
  4827  00168A  0D06               	mullw	6
  4828  00168C  0E01               	movlw	1
  4829  00168E  26F3               	addwf	prodl,f,c
  4830  001690  0E00               	movlw	0
  4831  001692  22F4               	addwfc	prodh,f,c
  4832  001694  0E00               	movlw	low _pin
  4833  001696  24F3               	addwf	prodl,w,c
  4834  001698  6ED9               	movwf	fsr2l,c
  4835  00169A  0E01               	movlw	high _pin
  4836  00169C  20F4               	addwfc	prodh,w,c
  4837  00169E  6EDA               	movwf	fsr2h,c
  4838  0016A0  50DF               	movf	indf2,w,c
  4839  0016A2  0100               	movlb	0	; () banked
  4840  0016A4  6F61               	movwf	Transmit@port& (0+255),b
  4841  0016A6  5037               	movf	_check_counter,w,c
  4842  0016A8  0D06               	mullw	6
  4843  0016AA  0E00               	movlw	low _pin
  4844  0016AC  24F3               	addwf	prodl,w,c
  4845  0016AE  6ED9               	movwf	fsr2l,c
  4846  0016B0  0E01               	movlw	high _pin
  4847  0016B2  20F4               	addwfc	prodh,w,c
  4848  0016B4  6EDA               	movwf	fsr2h,c
  4849  0016B6  50DF               	movf	indf2,w,c
  4850  0016B8  ECDC  F009         	call	_Transmit
  4851  0016BC  0012               	return		;funcret
  4852  0016BE                     __end_of_Check_Detonators:
  4853                           	opt stack 0
  4854                           tblptru	equ	0xFF8
  4855                           tblptrh	equ	0xFF7
  4856                           tblptrl	equ	0xFF6
  4857                           tablat	equ	0xFF5
  4858                           prodh	equ	0xFF4
  4859                           prodl	equ	0xFF3
  4860                           intcon	equ	0xFF2
  4861                           postinc0	equ	0xFEE
  4862                           wreg	equ	0xFE8
  4863                           postdec1	equ	0xFE5
  4864                           fsr1l	equ	0xFE1
  4865                           indf2	equ	0xFDF
  4866                           postinc2	equ	0xFDE
  4867                           postdec2	equ	0xFDD
  4868                           plusw2	equ	0xFDB
  4869                           fsr2h	equ	0xFDA
  4870                           fsr2l	equ	0xFD9
  4871                           status	equ	0xFD8
  4872                           
  4873 ;; *************** function _Transmit *****************
  4874 ;; Defined at:
  4875 ;;		line 15 in file "communication.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  receiver        1    wreg     unsigned char 
  4878 ;;  operation       1    0[BANK0 ] unsigned char 
  4879 ;;  port            1    1[BANK0 ] unsigned char 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  receiver        1    2[BANK0 ] unsigned char 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;		None               void
  4884 ;; Registers used:
  4885 ;;		wreg, status,2, cstack
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1
  4891 ;;      Params:         0       2       0
  4892 ;;      Locals:         0       1       0
  4893 ;;      Temps:          0       0       0
  4894 ;;      Totals:         0       3       0
  4895 ;;Total ram usage:        3 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; Hardware stack levels required when called:    5
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_Check_Detonators
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text24
  4906  0013B8                     __ptext24:
  4907                           	opt stack 0
  4908  0013B8                     _Transmit:
  4909                           	opt stack 23
  4910                           
  4911                           ;incstack = 0
  4912                           ;Transmit@receiver stored from wreg
  4913  0013B8  0100               	movlb	0	; () banked
  4914  0013BA  6F62               	movwf	Transmit@receiver& (0+255),b
  4915                           
  4916                           ;communication.c: 17: PORTBbits.RB5 = 1;
  4917  0013BC  8A81               	bsf	3969,5,c	;volatile
  4918                           
  4919                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  4920  0013BE  98AB               	bcf	4011,4,c	;volatile
  4921                           
  4922                           ;communication.c: 20: __nop();
  4923  0013C0  F000               	nop	
  4924  0013C2                     l522:
  4925  0013C2  A89E               	btfss	3998,4,c	;volatile
  4926  0013C4  D7FE               	goto	l522
  4927                           
  4928                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  4929  0013C6  80AC               	bsf	4012,0,c	;volatile
  4930                           
  4931                           ;communication.c: 23: TXREG1 = receiver;
  4932  0013C8  C062  FFAD         	movff	Transmit@receiver,4013	;volatile
  4933  0013CC                     l525:
  4934  0013CC  A89E               	btfss	3998,4,c	;volatile
  4935  0013CE  D7FE               	goto	l525
  4936                           
  4937                           ;communication.c: 25: TXSTA1bits.TX9D = 0;
  4938  0013D0  90AC               	bcf	4012,0,c	;volatile
  4939                           
  4940                           ;communication.c: 26: _delay((unsigned long)((1)*(4000000/4000.0)));
  4941  0013D2  0EFA               	movlw	250
  4942  0013D4                     u2587:
  4943  0013D4  F000               	nop	
  4944  0013D6  2EE8               	decfsz	wreg,f,c
  4945  0013D8  D7FD               	goto	u2587
  4946                           
  4947                           ;communication.c: 27: TXREG1 = 0xAA;
  4948  0013DA  0EAA               	movlw	170
  4949  0013DC  6EAD               	movwf	4013,c	;volatile
  4950  0013DE                     l528:
  4951  0013DE  A89E               	btfss	3998,4,c	;volatile
  4952  0013E0  D7FE               	goto	l528
  4953                           
  4954                           ;communication.c: 29: _delay((unsigned long)((1)*(4000000/4000.0)));
  4955  0013E2  0EFA               	movlw	250
  4956  0013E4                     u2597:
  4957  0013E4  F000               	nop	
  4958  0013E6  2EE8               	decfsz	wreg,f,c
  4959  0013E8  D7FD               	goto	u2597
  4960                           
  4961                           ;communication.c: 30: TXREG1 = operation;
  4962  0013EA  C060  FFAD         	movff	Transmit@operation,4013	;volatile
  4963  0013EE                     l531:
  4964  0013EE  A89E               	btfss	3998,4,c	;volatile
  4965  0013F0  D7FE               	goto	l531
  4966                           
  4967                           ;communication.c: 32: _delay((unsigned long)((1)*(4000000/4000.0)));
  4968  0013F2  0EFA               	movlw	250
  4969  0013F4                     u2607:
  4970  0013F4  F000               	nop	
  4971  0013F6  2EE8               	decfsz	wreg,f,c
  4972  0013F8  D7FD               	goto	u2607
  4973                           
  4974                           ;communication.c: 33: TXREG1 = port;
  4975  0013FA  C061  FFAD         	movff	Transmit@port,4013	;volatile
  4976  0013FE                     l534:
  4977  0013FE  A2AC               	btfss	4012,1,c	;volatile
  4978  001400  D7FE               	goto	l534
  4979                           
  4980                           ;communication.c: 35: _delay((unsigned long)((1)*(4000000/4000.0)));
  4981  001402  0EFA               	movlw	250
  4982  001404                     u2617:
  4983  001404  F000               	nop	
  4984  001406  2EE8               	decfsz	wreg,f,c
  4985  001408  D7FD               	goto	u2617
  4986                           
  4987                           ;communication.c: 36: PORTBbits.RB5 = 0;
  4988  00140A  9A81               	bcf	3969,5,c	;volatile
  4989                           
  4990                           ;communication.c: 37: RCSTA1bits.CREN = 1;
  4991  00140C  88AB               	bsf	4011,4,c	;volatile
  4992                           
  4993                           ;communication.c: 38: __nop();
  4994  00140E  F000               	nop	
  4995  001410  0012               	return		;funcret
  4996  001412                     __end_of_Transmit:
  4997                           	opt stack 0
  4998                           tblptru	equ	0xFF8
  4999                           tblptrh	equ	0xFF7
  5000                           tblptrl	equ	0xFF6
  5001                           tablat	equ	0xFF5
  5002                           prodh	equ	0xFF4
  5003                           prodl	equ	0xFF3
  5004                           intcon	equ	0xFF2
  5005                           postinc0	equ	0xFEE
  5006                           wreg	equ	0xFE8
  5007                           postdec1	equ	0xFE5
  5008                           fsr1l	equ	0xFE1
  5009                           indf2	equ	0xFDF
  5010                           postinc2	equ	0xFDE
  5011                           postdec2	equ	0xFDD
  5012                           plusw2	equ	0xFDB
  5013                           fsr2h	equ	0xFDA
  5014                           fsr2l	equ	0xFD9
  5015                           status	equ	0xFD8
  5016                           
  5017 ;; *************** function _Isr *****************
  5018 ;; Defined at:
  5019 ;;		line 4 in file "interrupt.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;		None
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;  search_index    1   45[COMRAM] unsigned char 
  5024 ;;  pixel_index_    1   44[COMRAM] unsigned char 
  5025 ;;  pixel_index_    1   43[COMRAM] unsigned char 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;		None               void
  5028 ;; Registers used:
  5029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1
  5035 ;;      Params:         0       0       0
  5036 ;;      Locals:         3       0       0
  5037 ;;      Temps:         17       0       0
  5038 ;;      Totals:        20       0       0
  5039 ;;Total ram usage:       20 bytes
  5040 ;; Hardware stack levels used:    1
  5041 ;; Hardware stack levels required when called:    4
  5042 ;; This function calls:
  5043 ;;		_Ignite_Detonators
  5044 ;;		_Receive
  5045 ;;		_Receive_Dump
  5046 ;;		___awdiv
  5047 ;;		i2_Check_Detonators
  5048 ;;		i2_Delay_Routine
  5049 ;;		i2_Set_Display
  5050 ;; This function is called by:
  5051 ;;		Interrupt level 2
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           	psect	intcode
  5056  000008                     __pintcode:
  5057                           	opt stack 0
  5058  000008                     _Isr:
  5059                           	opt stack 19
  5060                           
  5061                           ;incstack = 0
  5062  000008  8242               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5063  00000A  CFFA F01E          	movff	pclath,??_Isr+3
  5064  00000E  CFFB F01F          	movff	pclatu,??_Isr+4
  5065  000012  CFE9 F020          	movff	fsr0l,??_Isr+5
  5066  000016  CFEA F021          	movff	fsr0h,??_Isr+6
  5067  00001A  CFE1 F022          	movff	fsr1l,??_Isr+7
  5068  00001E  CFE2 F023          	movff	fsr1h,??_Isr+8
  5069  000022  CFD9 F024          	movff	fsr2l,??_Isr+9
  5070  000026  CFDA F025          	movff	fsr2h,??_Isr+10
  5071  00002A  CFF3 F026          	movff	prodl,??_Isr+11
  5072  00002E  CFF4 F027          	movff	prodh,??_Isr+12
  5073  000032  CFF6 F028          	movff	tblptrl,??_Isr+13
  5074  000036  CFF7 F029          	movff	tblptrh,??_Isr+14
  5075  00003A  CFF8 F02A          	movff	tblptru,??_Isr+15
  5076  00003E  CFF5 F02B          	movff	tablat,??_Isr+16
  5077                           
  5078                           ;interrupt.c: 5: if(PIR1bits.CCP1IF == 1) {
  5079  000042  A49E               	btfss	3998,2,c	;volatile
  5080  000044  D00B               	goto	i2l2972
  5081                           
  5082                           ;interrupt.c: 7: PIR1bits.CCP1IF = 0;
  5083  000046  949E               	bcf	3998,2,c	;volatile
  5084                           
  5085                           ;interrupt.c: 8: T1CONbits.TMR1ON = 1;
  5086  000048  80CD               	bsf	4045,0,c	;volatile
  5087                           
  5088                           ;interrupt.c: 9: T3CONbits.TMR3ON = 0;
  5089  00004A  90B1               	bcf	4017,0,c	;volatile
  5090                           
  5091                           ;interrupt.c: 10: TMR3L = 0;
  5092  00004C  0E00               	movlw	0
  5093  00004E  6EB2               	movwf	4018,c	;volatile
  5094                           
  5095                           ;interrupt.c: 11: TMR3H = 0;
  5096  000050  0E00               	movlw	0
  5097  000052  6EB3               	movwf	4019,c	;volatile
  5098                           
  5099                           ;interrupt.c: 12: current_time++;
  5100  000054  4A35               	infsnz	_current_time,f,c
  5101  000056  2A36               	incf	_current_time+1,f,c
  5102                           
  5103                           ;interrupt.c: 13: Ignite_Detonators();
  5104  000058  ECE5  F008         	call	_Ignite_Detonators	;wreg free
  5105  00005C                     i2l2972:
  5106                           
  5107                           ;interrupt.c: 14: }
  5108                           ;interrupt.c: 15: if(PIR1bits.TMR1IF == 1) {
  5109  00005C  A09E               	btfss	3998,0,c	;volatile
  5110  00005E  D007               	goto	i2l2978
  5111                           
  5112                           ;interrupt.c: 16: PIR1bits.TMR1IF = 0;
  5113  000060  909E               	bcf	3998,0,c	;volatile
  5114                           
  5115                           ;interrupt.c: 17: T3CONbits.TMR3ON = 1;
  5116  000062  80B1               	bsf	4017,0,c	;volatile
  5117                           
  5118                           ;interrupt.c: 18: T1CONbits.TMR1ON = 0;
  5119  000064  90CD               	bcf	4045,0,c	;volatile
  5120                           
  5121                           ;interrupt.c: 19: TMR1L = 0;
  5122  000066  0E00               	movlw	0
  5123  000068  6ECE               	movwf	4046,c	;volatile
  5124                           
  5125                           ;interrupt.c: 20: TMR1H = 0;
  5126  00006A  0E00               	movlw	0
  5127  00006C  6ECF               	movwf	4047,c	;volatile
  5128  00006E                     i2l2978:
  5129                           
  5130                           ;interrupt.c: 21: }
  5131                           ;interrupt.c: 22: if(PIR1bits.RCIF == 1) {
  5132  00006E  AA9E               	btfss	3998,5,c	;volatile
  5133  000070  D0CF               	goto	i2l634
  5134                           
  5135                           ;interrupt.c: 23: __nop();
  5136  000072  F000               	nop	
  5137                           
  5138                           ;interrupt.c: 24: if(RCSTAbits.RX9D == 1) {
  5139  000074  A0AB               	btfss	4011,0,c	;volatile
  5140  000076  D016               	goto	i2l619
  5141                           
  5142                           ;interrupt.c: 25: receive_counter = 0;
  5143  000078  0E00               	movlw	0
  5144  00007A  6E38               	movwf	_receive_counter,c
  5145                           
  5146                           ;interrupt.c: 27: received[receive_counter] =
  5147                           ;interrupt.c: 28: Receive();
  5148  00007C  5038               	movf	_receive_counter,w,c
  5149  00007E  0D01               	mullw	1
  5150  000080  0E2F               	movlw	low _received
  5151  000082  24F3               	addwf	prodl,w,c
  5152  000084  6ED9               	movwf	fsr2l,c
  5153  000086  0E00               	movlw	high _received
  5154  000088  20F4               	addwfc	prodh,w,c
  5155  00008A  6EDA               	movwf	fsr2h,c
  5156  00008C  EC18  F00C         	call	_Receive	;wreg free
  5157  000090  6EDF               	movwf	indf2,c
  5158                           
  5159                           ;interrupt.c: 29: receive_counter++;
  5160  000092  2A38               	incf	_receive_counter,f,c
  5161                           
  5162                           ;interrupt.c: 31: if(received[0] == 0xAA) {
  5163  000094  0EAA               	movlw	170
  5164  000096  182F               	xorwf	_received,w,c
  5165  000098  A4D8               	btfss	status,2,c
  5166  00009A  D002               	goto	i2l620
  5167                           
  5168                           ;interrupt.c: 32: master_addressed = 1;
  5169  00009C  8240               	bsf	_master_addressed/(0+8),_master_addressed& (0+7),c
  5170                           
  5171                           ;interrupt.c: 33: } else {
  5172  00009E  D0B8               	goto	i2l634
  5173  0000A0                     i2l620:
  5174                           
  5175                           ;interrupt.c: 34: master_addressed = 0;
  5176  0000A0  9240               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  5177                           
  5178                           ;interrupt.c: 35: }
  5179                           ;interrupt.c: 36: } else if(master_addressed == 1) {
  5180  0000A2  D0B6               	goto	i2l634
  5181  0000A4                     i2l619:
  5182  0000A4  A240               	btfss	_master_addressed/(0+8),_master_addressed& (0+7),c
  5183  0000A6  D0B2               	goto	i2l3058
  5184                           
  5185                           ;interrupt.c: 37: received[receive_counter] =
  5186                           ;interrupt.c: 38: Receive();
  5187  0000A8  5038               	movf	_receive_counter,w,c
  5188  0000AA  0D01               	mullw	1
  5189  0000AC  0E2F               	movlw	low _received
  5190  0000AE  24F3               	addwf	prodl,w,c
  5191  0000B0  6ED9               	movwf	fsr2l,c
  5192  0000B2  0E00               	movlw	high _received
  5193  0000B4  20F4               	addwfc	prodh,w,c
  5194  0000B6  6EDA               	movwf	fsr2h,c
  5195  0000B8  EC18  F00C         	call	_Receive	;wreg free
  5196  0000BC  6EDF               	movwf	indf2,c
  5197                           
  5198                           ;interrupt.c: 39: receive_counter++;
  5199  0000BE  2A38               	incf	_receive_counter,f,c
  5200                           
  5201                           ;interrupt.c: 41: if(receive_counter > 5) {
  5202  0000C0  0E05               	movlw	5
  5203  0000C2  6438               	cpfsgt	_receive_counter,c
  5204  0000C4  D0A5               	goto	i2l634
  5205                           
  5206                           ;interrupt.c: 42: receive_counter = 0;
  5207  0000C6  0E00               	movlw	0
  5208  0000C8  6E38               	movwf	_receive_counter,c
  5209                           
  5210                           ;interrupt.c: 43: master_addressed = 0;
  5211  0000CA  9240               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  5212                           
  5213                           ;interrupt.c: 45: if(received[2] == 'T') {
  5214  0000CC  0E54               	movlw	84
  5215  0000CE  1831               	xorwf	_received+2,w,c
  5216  0000D0  A4D8               	btfss	status,2,c
  5217  0000D2  D09E               	goto	i2l634
  5218                           
  5219                           ;interrupt.c: 46: unsigned char search_index = 0xFF;
  5220  0000D4  682E               	setf	Isr@search_index,c
  5221                           
  5222                           ;interrupt.c: 47: unsigned char pixel_index_array = 0;
  5223  0000D6  0E00               	movlw	0
  5224  0000D8  6E2C               	movwf	Isr@pixel_index_array,c
  5225                           
  5226                           ;interrupt.c: 48: unsigned char pixel_index_bit = 0;
  5227  0000DA  0E00               	movlw	0
  5228  0000DC  6E2D               	movwf	Isr@pixel_index_bit,c
  5229                           
  5230                           ;interrupt.c: 49: search_index = (received[1] * 10);
  5231  0000DE  5030               	movf	_received+1,w,c
  5232  0000E0  0D0A               	mullw	10
  5233  0000E2  CFF3 F02E          	movff	prodl,Isr@search_index
  5234                           
  5235                           ;interrupt.c: 51: search_index += received[3];
  5236  0000E6  5032               	movf	_received+3,w,c
  5237  0000E8  262E               	addwf	Isr@search_index,f,c
  5238                           
  5239                           ;interrupt.c: 53: pixel_index_array =
  5240                           ;interrupt.c: 54: pin[search_index].led_address / 8;
  5241  0000EA  502E               	movf	Isr@search_index,w,c
  5242  0000EC  0D06               	mullw	6
  5243  0000EE  0E03               	movlw	3
  5244  0000F0  26F3               	addwf	prodl,f,c
  5245  0000F2  0E00               	movlw	0
  5246  0000F4  22F4               	addwfc	prodh,f,c
  5247  0000F6  0E00               	movlw	low _pin
  5248  0000F8  24F3               	addwf	prodl,w,c
  5249  0000FA  6ED9               	movwf	fsr2l,c
  5250  0000FC  0E01               	movlw	high _pin
  5251  0000FE  20F4               	addwfc	prodh,w,c
  5252  000100  6EDA               	movwf	fsr2h,c
  5253  000102  50DF               	movf	indf2,w,c
  5254  000104  6E1B               	movwf	??_Isr& (0+255),c
  5255  000106  501B               	movf	??_Isr,w,c
  5256  000108  6E01               	movwf	___awdiv@dividend,c
  5257  00010A  6A02               	clrf	___awdiv@dividend+1,c
  5258  00010C  0E00               	movlw	0
  5259  00010E  6E04               	movwf	___awdiv@divisor+1,c
  5260  000110  0E08               	movlw	8
  5261  000112  6E03               	movwf	___awdiv@divisor,c
  5262  000114  EC67  F008         	call	___awdiv	;wreg free
  5263  000118  5001               	movf	?___awdiv,w,c
  5264  00011A  6E2C               	movwf	Isr@pixel_index_array,c
  5265                           
  5266                           ;interrupt.c: 55: __nop();
  5267  00011C  F000               	nop	
  5268                           
  5269                           ;interrupt.c: 56: pixel_index_bit =
  5270                           ;interrupt.c: 57: pin[search_index].led_address % 8;
  5271  00011E  502E               	movf	Isr@search_index,w,c
  5272  000120  0D06               	mullw	6
  5273  000122  0E03               	movlw	3
  5274  000124  26F3               	addwf	prodl,f,c
  5275  000126  0E00               	movlw	0
  5276  000128  22F4               	addwfc	prodh,f,c
  5277  00012A  0E00               	movlw	low _pin
  5278  00012C  24F3               	addwf	prodl,w,c
  5279  00012E  6ED9               	movwf	fsr2l,c
  5280  000130  0E01               	movlw	high _pin
  5281  000132  20F4               	addwfc	prodh,w,c
  5282  000134  6EDA               	movwf	fsr2h,c
  5283  000136  50DF               	movf	indf2,w,c
  5284  000138  0B07               	andlw	7
  5285  00013A  6E2D               	movwf	Isr@pixel_index_bit,c
  5286                           
  5287                           ;interrupt.c: 58: __nop();
  5288  00013C  F000               	nop	
  5289                           
  5290                           ;interrupt.c: 59: if(received[4] == '1'){
  5291  00013E  0E31               	movlw	49
  5292  000140  1833               	xorwf	_received+4,w,c
  5293  000142  A4D8               	btfss	status,2,c
  5294  000144  D015               	goto	i2l3024
  5295                           
  5296                           ;interrupt.c: 60: pixels[pixel_index_array] |=
  5297                           ;interrupt.c: 61: (1 << pixel_index_bit);
  5298  000146  C02D  F01B         	movff	Isr@pixel_index_bit,??_Isr
  5299  00014A  0E01               	movlw	1
  5300  00014C  6E1C               	movwf	(??_Isr+1)& (0+255),c
  5301  00014E  2A1B               	incf	??_Isr,f,c
  5302  000150  D002               	goto	i2u196_44
  5303  000152                     i2u196_45:
  5304  000152  90D8               	bcf	status,0,c
  5305  000154  361C               	rlcf	??_Isr+1,f,c
  5306  000156                     i2u196_44:
  5307  000156  2E1B               	decfsz	??_Isr,f,c
  5308  000158  D7FC               	goto	i2u196_45
  5309  00015A  502C               	movf	Isr@pixel_index_array,w,c
  5310  00015C  0D01               	mullw	1
  5311  00015E  0E39               	movlw	low _pixels
  5312  000160  24F3               	addwf	prodl,w,c
  5313  000162  6ED9               	movwf	fsr2l,c
  5314  000164  0E00               	movlw	high _pixels
  5315  000166  20F4               	addwfc	prodh,w,c
  5316  000168  6EDA               	movwf	fsr2h,c
  5317  00016A  501C               	movf	??_Isr+1,w,c
  5318  00016C  12DF               	iorwf	indf2,f,c
  5319                           
  5320                           ;interrupt.c: 62: }else if(received[4] == '0') {
  5321  00016E  D01B               	goto	i2l3028
  5322  000170                     i2l3024:
  5323  000170  0E30               	movlw	48
  5324  000172  1833               	xorwf	_received+4,w,c
  5325  000174  A4D8               	btfss	status,2,c
  5326  000176  D017               	goto	i2l3028
  5327                           
  5328                           ;interrupt.c: 63: pixels[pixel_index_array] &=
  5329                           ;interrupt.c: 64: ~(1 << pixel_index_bit);
  5330  000178  C02D  F01B         	movff	Isr@pixel_index_bit,??_Isr
  5331  00017C  0E01               	movlw	1
  5332  00017E  6E1C               	movwf	(??_Isr+1)& (0+255),c
  5333  000180  2A1B               	incf	??_Isr,f,c
  5334  000182  D002               	goto	i2u198_44
  5335  000184                     i2u198_45:
  5336  000184  90D8               	bcf	status,0,c
  5337  000186  361C               	rlcf	??_Isr+1,f,c
  5338  000188                     i2u198_44:
  5339  000188  2E1B               	decfsz	??_Isr,f,c
  5340  00018A  D7FC               	goto	i2u198_45
  5341  00018C  501C               	movf	??_Isr+1,w,c
  5342  00018E  0AFF               	xorlw	255
  5343  000190  6E1D               	movwf	(??_Isr+2)& (0+255),c
  5344  000192  502C               	movf	Isr@pixel_index_array,w,c
  5345  000194  0D01               	mullw	1
  5346  000196  0E39               	movlw	low _pixels
  5347  000198  24F3               	addwf	prodl,w,c
  5348  00019A  6ED9               	movwf	fsr2l,c
  5349  00019C  0E00               	movlw	high _pixels
  5350  00019E  20F4               	addwfc	prodh,w,c
  5351  0001A0  6EDA               	movwf	fsr2h,c
  5352  0001A2  501D               	movf	??_Isr+2,w,c
  5353  0001A4  16DF               	andwf	indf2,f,c
  5354  0001A6                     i2l3028:
  5355                           
  5356                           ;interrupt.c: 65: }
  5357                           ;interrupt.c: 67: if(received[5] == '0') {
  5358  0001A6  0E30               	movlw	48
  5359  0001A8  1834               	xorwf	_received+5,w,c
  5360  0001AA  A4D8               	btfss	status,2,c
  5361  0001AC  D014               	goto	i2l3036
  5362                           
  5363                           ;interrupt.c: 68: Set_Display('7', 'P', received[1]);
  5364  0001AE  0E50               	movlw	80
  5365  0001B0  6E17               	movwf	i2Set_Display@information,c
  5366  0001B2  C030  F018         	movff	_received+1,i2Set_Display@value
  5367  0001B6  6A19               	clrf	i2Set_Display@value+1,c
  5368  0001B8  0E37               	movlw	55
  5369  0001BA  EC60  F00A         	call	i2_Set_Display
  5370                           
  5371                           ;interrupt.c: 69: Delay_Routine(10);
  5372  0001BE  0E0A               	movlw	10
  5373  0001C0  ECBD  F00B         	call	i2_Delay_Routine
  5374                           
  5375                           ;interrupt.c: 70: Set_Display('7', 'T',0);
  5376  0001C4  0E54               	movlw	84
  5377  0001C6  6E17               	movwf	i2Set_Display@information,c
  5378  0001C8  0E00               	movlw	0
  5379  0001CA  6E19               	movwf	i2Set_Display@value+1,c
  5380  0001CC  0E00               	movlw	0
  5381  0001CE  6E18               	movwf	i2Set_Display@value,c
  5382  0001D0  0E37               	movlw	55
  5383  0001D2  EC60  F00A         	call	i2_Set_Display
  5384  0001D6                     i2l3036:
  5385                           
  5386                           ;interrupt.c: 71: }
  5387                           ;interrupt.c: 73: __nop();
  5388  0001D6  F000               	nop	
  5389                           
  5390                           ;interrupt.c: 74: if(check_counter < 30 && testflag == 1) {
  5391  0001D8  0E1E               	movlw	30
  5392  0001DA  6037               	cpfslt	_check_counter,c
  5393  0001DC  D014               	goto	i2l3054
  5394  0001DE  A640               	btfss	_testflag/(0+8),_testflag& (0+7),c
  5395  0001E0  D012               	goto	i2l3054
  5396                           
  5397                           ;interrupt.c: 75: check_counter++;
  5398  0001E2  2A37               	incf	_check_counter,f,c
  5399                           
  5400                           ;interrupt.c: 76: Check_Detonators();
  5401  0001E4  EC5F  F00B         	call	i2_Check_Detonators	;wreg free
  5402                           
  5403                           ;interrupt.c: 77: if(check_counter > 29) {
  5404  0001E8  0E1D               	movlw	29
  5405  0001EA  6437               	cpfsgt	_check_counter,c
  5406  0001EC  D011               	goto	i2l634
  5407                           
  5408                           ;interrupt.c: 78: Set_Display('7', 'T',0);
  5409  0001EE  0E54               	movlw	84
  5410  0001F0  6E17               	movwf	i2Set_Display@information,c
  5411  0001F2  0E00               	movlw	0
  5412  0001F4  6E19               	movwf	i2Set_Display@value+1,c
  5413  0001F6  0E00               	movlw	0
  5414  0001F8  6E18               	movwf	i2Set_Display@value,c
  5415  0001FA  0E37               	movlw	55
  5416  0001FC  EC60  F00A         	call	i2_Set_Display
  5417  000200  D002               	goto	i2l3054
  5418  000202                     i2l3052:
  5419                           
  5420                           ;interrupt.c: 80: testflag = 0;
  5421  000202  9640               	bcf	_testflag/(0+8),_testflag& (0+7),c
  5422                           
  5423                           ;interrupt.c: 81: }
  5424                           ;interrupt.c: 82: }else {
  5425  000204  D005               	goto	i2l634
  5426  000206                     i2l3054:
  5427                           
  5428                           ;interrupt.c: 83: check_counter = 0;
  5429  000206  0E00               	movlw	0
  5430  000208  6E37               	movwf	_check_counter,c
  5431  00020A  D7FB               	goto	i2l3052
  5432  00020C                     i2l3058:
  5433                           
  5434                           ;interrupt.c: 89: Receive_Dump();
  5435  00020C  EC10  F00C         	call	_Receive_Dump	;wreg free
  5436  000210                     i2l634:
  5437  000210  C02B  FFF5         	movff	??_Isr+16,tablat
  5438  000214  C02A  FFF8         	movff	??_Isr+15,tblptru
  5439  000218  C029  FFF7         	movff	??_Isr+14,tblptrh
  5440  00021C  C028  FFF6         	movff	??_Isr+13,tblptrl
  5441  000220  C027  FFF4         	movff	??_Isr+12,prodh
  5442  000224  C026  FFF3         	movff	??_Isr+11,prodl
  5443  000228  C025  FFDA         	movff	??_Isr+10,fsr2h
  5444  00022C  C024  FFD9         	movff	??_Isr+9,fsr2l
  5445  000230  C023  FFE2         	movff	??_Isr+8,fsr1h
  5446  000234  C022  FFE1         	movff	??_Isr+7,fsr1l
  5447  000238  C021  FFEA         	movff	??_Isr+6,fsr0h
  5448  00023C  C020  FFE9         	movff	??_Isr+5,fsr0l
  5449  000240  C01F  FFFB         	movff	??_Isr+4,pclatu
  5450  000244  C01E  FFFA         	movff	??_Isr+3,pclath
  5451  000248  9242               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5452  00024A  0011               	retfie		f
  5453  00024C                     __end_of_Isr:
  5454                           	opt stack 0
  5455                           pclatu	equ	0xFFB
  5456                           pclath	equ	0xFFA
  5457                           tblptru	equ	0xFF8
  5458                           tblptrh	equ	0xFF7
  5459                           tblptrl	equ	0xFF6
  5460                           tablat	equ	0xFF5
  5461                           prodh	equ	0xFF4
  5462                           prodl	equ	0xFF3
  5463                           intcon	equ	0xFF2
  5464                           postinc0	equ	0xFEE
  5465                           fsr0h	equ	0xFEA
  5466                           fsr0l	equ	0xFE9
  5467                           wreg	equ	0xFE8
  5468                           postdec1	equ	0xFE5
  5469                           fsr1h	equ	0xFE2
  5470                           fsr1l	equ	0xFE1
  5471                           indf2	equ	0xFDF
  5472                           postinc2	equ	0xFDE
  5473                           postdec2	equ	0xFDD
  5474                           plusw2	equ	0xFDB
  5475                           fsr2h	equ	0xFDA
  5476                           fsr2l	equ	0xFD9
  5477                           status	equ	0xFD8
  5478                           
  5479 ;; *************** function i2_Set_Display *****************
  5480 ;; Defined at:
  5481 ;;		line 142 in file "display.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  type            1    wreg     unsigned char 
  5484 ;;  information     1   22[COMRAM] unsigned char 
  5485 ;;  value           2   23[COMRAM] unsigned int 
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;  type            1   25[COMRAM] unsigned char 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;		None               void
  5490 ;; Registers used:
  5491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1
  5497 ;;      Params:         3       0       0
  5498 ;;      Locals:         1       0       0
  5499 ;;      Temps:          0       0       0
  5500 ;;      Totals:         4       0       0
  5501 ;;Total ram usage:        4 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; Hardware stack levels required when called:    3
  5504 ;; This function calls:
  5505 ;;		i2_Evaluate_Display
  5506 ;;		i2_Evaluate_Signs
  5507 ;;		i2_Write_Display_Byte
  5508 ;; This function is called by:
  5509 ;;		_Isr
  5510 ;; This function uses a non-reentrant model
  5511 ;;
  5512                           
  5513                           	psect	text26
  5514  0014C0                     __ptext26:
  5515                           	opt stack 0
  5516  0014C0                     i2_Set_Display:
  5517                           	opt stack 19
  5518                           
  5519                           ;incstack = 0
  5520                           ;i2Set_Display@type stored from wreg
  5521  0014C0  6E1A               	movwf	i2Set_Display@type,c
  5522                           
  5523                           ;display.c: 144: switch (type) {
  5524  0014C2  D01D               	goto	i2l2950
  5525  0014C4                     i2l2934:
  5526                           
  5527                           ;display.c: 146: if(information != '-') {
  5528  0014C4  0E2D               	movlw	45
  5529  0014C6  1817               	xorwf	i2Set_Display@information,w,c
  5530  0014C8  B4D8               	btfsc	status,2,c
  5531  0014CA  D012               	goto	i2l2946
  5532                           
  5533                           ;display.c: 147: signs[2] = value;
  5534  0014CC  C018  F083         	movff	i2Set_Display@value,_signs+2
  5535                           
  5536                           ;display.c: 148: signs[2] += 0x30;
  5537  0014D0  0E30               	movlw	48
  5538  0014D2  0100               	movlb	0	; () banked
  5539  0014D4  2783               	addwf	(_signs+2)& (0+255),f,b
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;display.c: 149: signs[1] = '-';
  5543  0014D6  0E2D               	movlw	45
  5544  0014D8  0100               	movlb	0	; () banked
  5545  0014DA  6F82               	movwf	(_signs+1)& (0+255),b
  5546                           
  5547                           ; BSR set to: 0
  5548                           ;display.c: 150: signs[0] = information;
  5549  0014DC  C017  F081         	movff	i2Set_Display@information,_signs
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;display.c: 151: Evaluate_Display(sizeof(signs), signs);
  5553  0014E0  0E81               	movlw	low _signs
  5554  0014E2  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5555  0014E4  0E00               	movlw	high _signs
  5556  0014E6  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5557  0014E8  0E03               	movlw	3
  5558  0014EA  EC12  F005         	call	i2_Evaluate_Display
  5559                           
  5560                           ;display.c: 152: } else {
  5561  0014EE  D00C               	goto	i2l2952
  5562  0014F0                     i2l2946:
  5563                           
  5564                           ;display.c: 153: Evaluate_Signs(value);
  5565  0014F0  C018  F010         	movff	i2Set_Display@value,i2Evaluate_Signs@evaluation_value
  5566  0014F4  C019  F011         	movff	i2Set_Display@value+1,i2Evaluate_Signs@evaluation_value+1
  5567  0014F8  EC19  F008         	call	i2_Evaluate_Signs	;wreg free
  5568                           
  5569                           ;display.c: 159: }
  5570                           
  5571                           ;display.c: 158: break;
  5572                           
  5573                           ;display.c: 156: case 'L':
  5574                           
  5575                           ;display.c: 154: }
  5576                           ;display.c: 155: break;
  5577  0014FC  D005               	goto	i2l2952
  5578  0014FE                     i2l2950:
  5579  0014FE  501A               	movf	i2Set_Display@type,w,c
  5580                           
  5581                           ; Switch size 1, requested type "space"
  5582                           ; Number of cases is 2, Range of values is 55 to 76
  5583                           ; switch strategies available:
  5584                           ; Name         Instructions Cycles
  5585                           ; simple_byte            7     4 (average)
  5586                           ;	Chosen strategy is simple_byte
  5587  001500  0A37               	xorlw	55	; case 55
  5588  001502  B4D8               	btfsc	status,2,c
  5589  001504  D7DF               	goto	i2l2934
  5590  001506  0A7B               	xorlw	123	; case 76
  5591  001508                     i2l2952:
  5592                           
  5593                           ;display.c: 160: Write_Display_Byte(pixels);
  5594  001508  0E39               	movlw	low _pixels
  5595  00150A  6E01               	movwf	i2Write_Display_Byte@write_data,c
  5596  00150C  0E00               	movlw	high _pixels
  5597  00150E  6E02               	movwf	i2Write_Display_Byte@write_data+1,c
  5598  001510  ECFF  F00A         	call	i2_Write_Display_Byte	;wreg free
  5599  001514  0012               	return		;funcret
  5600  001516                     __end_ofi2_Set_Display:
  5601                           	opt stack 0
  5602                           pclatu	equ	0xFFB
  5603                           pclath	equ	0xFFA
  5604                           tblptru	equ	0xFF8
  5605                           tblptrh	equ	0xFF7
  5606                           tblptrl	equ	0xFF6
  5607                           tablat	equ	0xFF5
  5608                           prodh	equ	0xFF4
  5609                           prodl	equ	0xFF3
  5610                           intcon	equ	0xFF2
  5611                           postinc0	equ	0xFEE
  5612                           fsr0h	equ	0xFEA
  5613                           fsr0l	equ	0xFE9
  5614                           wreg	equ	0xFE8
  5615                           postdec1	equ	0xFE5
  5616                           fsr1h	equ	0xFE2
  5617                           fsr1l	equ	0xFE1
  5618                           indf2	equ	0xFDF
  5619                           postinc2	equ	0xFDE
  5620                           postdec2	equ	0xFDD
  5621                           plusw2	equ	0xFDB
  5622                           fsr2h	equ	0xFDA
  5623                           fsr2l	equ	0xFD9
  5624                           status	equ	0xFD8
  5625                           
  5626 ;; *************** function i2_Write_Display_Byte *****************
  5627 ;; Defined at:
  5628 ;;		line 61 in file "communication.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  write_data      2    0[COMRAM] PTR unsigned char 
  5631 ;;		 -> pixels(7), 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  Write_Displa    1    6[COMRAM] unsigned char 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;		None               void
  5636 ;; Registers used:
  5637 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1
  5643 ;;      Params:         2       0       0
  5644 ;;      Locals:         1       0       0
  5645 ;;      Temps:          4       0       0
  5646 ;;      Totals:         7       0       0
  5647 ;;Total ram usage:        7 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; This function calls:
  5650 ;;		Nothing
  5651 ;; This function is called by:
  5652 ;;		i2_Set_Display
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           	psect	text27
  5657  0015FE                     __ptext27:
  5658                           	opt stack 0
  5659  0015FE                     i2_Write_Display_Byte:
  5660                           	opt stack 21
  5661                           
  5662                           ;communication.c: 62: for(unsigned char counter = sizeof(pixels); counter > 0;
  5663                           
  5664                           ;incstack = 0
  5665  0015FE  0E07               	movlw	7
  5666  001600  6E07               	movwf	i2Write_Display_Byte@counter,c
  5667  001602                     
  5668                           ;communication.c: 63: counter--) {
  5669  001602  5007               	movf	i2Write_Display_Byte@counter,w,c
  5670  001604  B4D8               	btfsc	status,2,c
  5671  001606  0012               	return	
  5672                           
  5673                           ;communication.c: 64: if(SSP1IF = 1) {
  5674  001608  869E               	bsf	3998,3,c	;volatile
  5675  00160A  B69E               	btfsc	3998,3,c	;volatile
  5676                           
  5677                           ;communication.c: 65: SSP1IF = 0;
  5678  00160C  969E               	bcf	3998,3,c	;volatile
  5679                           
  5680                           ;communication.c: 66: }
  5681                           ;communication.c: 67: SSP1BUF = write_data[counter - 1];
  5682  00160E  0EFF               	movlw	255
  5683  001610  6E03               	movwf	??i2_Write_Display_Byte& (0+255),c
  5684  001612  0EFF               	movlw	255
  5685  001614  6E04               	movwf	(??i2_Write_Display_Byte+1)& (0+255),c
  5686  001616  5007               	movf	i2Write_Display_Byte@counter,w,c
  5687  001618  6E05               	movwf	(??i2_Write_Display_Byte+2)& (0+255),c
  5688  00161A  6A06               	clrf	(??i2_Write_Display_Byte+3)& (0+255),c
  5689  00161C  5003               	movf	??i2_Write_Display_Byte,w,c
  5690  00161E  2605               	addwf	??i2_Write_Display_Byte+2,f,c
  5691  001620  5004               	movf	??i2_Write_Display_Byte+1,w,c
  5692  001622  2206               	addwfc	??i2_Write_Display_Byte+3,f,c
  5693  001624  5005               	movf	??i2_Write_Display_Byte+2,w,c
  5694  001626  2401               	addwf	i2Write_Display_Byte@write_data,w,c
  5695  001628  6ED9               	movwf	fsr2l,c
  5696  00162A  5006               	movf	??i2_Write_Display_Byte+3,w,c
  5697  00162C  2002               	addwfc	i2Write_Display_Byte@write_data+1,w,c
  5698  00162E  6EDA               	movwf	fsr2h,c
  5699  001630  50DF               	movf	indf2,w,c
  5700  001632  6EC9               	movwf	4041,c	;volatile
  5701                           
  5702                           ;communication.c: 69: SSP1IF = 0;
  5703  001634  969E               	bcf	3998,3,c	;volatile
  5704                           
  5705                           ;communication.c: 70: PORTCbits.RC0 = 0;
  5706  001636  9082               	bcf	3970,0,c	;volatile
  5707                           
  5708                           ;communication.c: 71: PORTCbits.RC0 = 1;
  5709  001638  8082               	bsf	3970,0,c	;volatile
  5710                           
  5711                           ;communication.c: 72: PORTCbits.RC0 = 0;
  5712  00163A  9082               	bcf	3970,0,c	;volatile
  5713  00163C  0607               	decf	i2Write_Display_Byte@counter,f,c
  5714  00163E  D7E1               	goto	L5
  5715  001640                     __end_ofi2_Write_Display_Byte:
  5716                           	opt stack 0
  5717                           pclatu	equ	0xFFB
  5718                           pclath	equ	0xFFA
  5719                           tblptru	equ	0xFF8
  5720                           tblptrh	equ	0xFF7
  5721                           tblptrl	equ	0xFF6
  5722                           tablat	equ	0xFF5
  5723                           prodh	equ	0xFF4
  5724                           prodl	equ	0xFF3
  5725                           intcon	equ	0xFF2
  5726                           postinc0	equ	0xFEE
  5727                           fsr0h	equ	0xFEA
  5728                           fsr0l	equ	0xFE9
  5729                           wreg	equ	0xFE8
  5730                           postdec1	equ	0xFE5
  5731                           fsr1h	equ	0xFE2
  5732                           fsr1l	equ	0xFE1
  5733                           indf2	equ	0xFDF
  5734                           postinc2	equ	0xFDE
  5735                           postdec2	equ	0xFDD
  5736                           plusw2	equ	0xFDB
  5737                           fsr2h	equ	0xFDA
  5738                           fsr2l	equ	0xFD9
  5739                           status	equ	0xFD8
  5740                           
  5741 ;; *************** function i2_Evaluate_Signs *****************
  5742 ;; Defined at:
  5743 ;;		line 122 in file "display.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  evaluation_v    2   15[COMRAM] unsigned int 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  Evaluate_Sig    1   21[COMRAM] unsigned char 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;		None               void
  5750 ;; Registers used:
  5751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMRAM   BANK0   BANK1
  5757 ;;      Params:         2       0       0
  5758 ;;      Locals:         1       0       0
  5759 ;;      Temps:          4       0       0
  5760 ;;      Totals:         7       0       0
  5761 ;;Total ram usage:        7 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    2
  5764 ;; This function calls:
  5765 ;;		i2_Evaluate_Display
  5766 ;;		i2___lwdiv
  5767 ;;		i2___lwmod
  5768 ;; This function is called by:
  5769 ;;		i2_Set_Display
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773                           	psect	text28
  5774  001032                     __ptext28:
  5775                           	opt stack 0
  5776  001032                     i2_Evaluate_Signs:
  5777                           	opt stack 19
  5778                           
  5779                           ;display.c: 123: for(unsigned char valuecounter = sizeof(signs); valuecounter > 0;
  5780                           
  5781                           ;incstack = 0
  5782  001032  0E03               	movlw	3
  5783  001034  6E16               	movwf	i2Evaluate_Signs@valuecounter,c
  5784  001036                     
  5785                           ;display.c: 124: valuecounter--) {
  5786  001036  5016               	movf	i2Evaluate_Signs@valuecounter,w,c
  5787  001038  B4D8               	btfsc	status,2,c
  5788  00103A  D040               	goto	i2l455
  5789                           
  5790                           ;display.c: 125: signs[(valuecounter - 1)] = evaluation_value % 10;
  5791  00103C  0EFF               	movlw	255
  5792  00103E  6E12               	movwf	??i2_Evaluate_Signs& (0+255),c
  5793  001040  0EFF               	movlw	255
  5794  001042  6E13               	movwf	(??i2_Evaluate_Signs+1)& (0+255),c
  5795  001044  5016               	movf	i2Evaluate_Signs@valuecounter,w,c
  5796  001046  6E14               	movwf	(??i2_Evaluate_Signs+2)& (0+255),c
  5797  001048  6A15               	clrf	(??i2_Evaluate_Signs+3)& (0+255),c
  5798  00104A  5012               	movf	??i2_Evaluate_Signs,w,c
  5799  00104C  2614               	addwf	??i2_Evaluate_Signs+2,f,c
  5800  00104E  5013               	movf	??i2_Evaluate_Signs+1,w,c
  5801  001050  2215               	addwfc	??i2_Evaluate_Signs+3,f,c
  5802  001052  0E81               	movlw	low _signs
  5803  001054  2414               	addwf	??i2_Evaluate_Signs+2,w,c
  5804  001056  6ED9               	movwf	fsr2l,c
  5805  001058  0E00               	movlw	high _signs
  5806  00105A  2015               	addwfc	??i2_Evaluate_Signs+3,w,c
  5807  00105C  6EDA               	movwf	fsr2h,c
  5808  00105E  C010  F001         	movff	i2Evaluate_Signs@evaluation_value,i2___lwmod@dividend
  5809  001062  C011  F002         	movff	i2Evaluate_Signs@evaluation_value+1,i2___lwmod@dividend+1
  5810  001066  0E00               	movlw	0
  5811  001068  6E04               	movwf	i2___lwmod@divisor+1,c
  5812  00106A  0E0A               	movlw	10
  5813  00106C  6E03               	movwf	i2___lwmod@divisor,c
  5814  00106E  EC20  F00B         	call	i2___lwmod	;wreg free
  5815  001072  5001               	movf	?i2___lwmod,w,c
  5816  001074  6EDF               	movwf	indf2,c
  5817                           
  5818                           ;display.c: 126: signs[(valuecounter - 1)] += 0x30;
  5819  001076  0EFF               	movlw	255
  5820  001078  6E12               	movwf	??i2_Evaluate_Signs& (0+255),c
  5821  00107A  0EFF               	movlw	255
  5822  00107C  6E13               	movwf	(??i2_Evaluate_Signs+1)& (0+255),c
  5823  00107E  5016               	movf	i2Evaluate_Signs@valuecounter,w,c
  5824  001080  6E14               	movwf	(??i2_Evaluate_Signs+2)& (0+255),c
  5825  001082  6A15               	clrf	(??i2_Evaluate_Signs+3)& (0+255),c
  5826  001084  5012               	movf	??i2_Evaluate_Signs,w,c
  5827  001086  2614               	addwf	??i2_Evaluate_Signs+2,f,c
  5828  001088  5013               	movf	??i2_Evaluate_Signs+1,w,c
  5829  00108A  2215               	addwfc	??i2_Evaluate_Signs+3,f,c
  5830  00108C  0E81               	movlw	low _signs
  5831  00108E  2414               	addwf	??i2_Evaluate_Signs+2,w,c
  5832  001090  6ED9               	movwf	fsr2l,c
  5833  001092  0E00               	movlw	high _signs
  5834  001094  2015               	addwfc	??i2_Evaluate_Signs+3,w,c
  5835  001096  6EDA               	movwf	fsr2h,c
  5836  001098  0E30               	movlw	48
  5837  00109A  26DF               	addwf	indf2,f,c
  5838                           
  5839                           ;display.c: 127: evaluation_value = evaluation_value / 10;
  5840  00109C  C010  F001         	movff	i2Evaluate_Signs@evaluation_value,i2___lwdiv@dividend
  5841  0010A0  C011  F002         	movff	i2Evaluate_Signs@evaluation_value+1,i2___lwdiv@dividend+1
  5842  0010A4  0E00               	movlw	0
  5843  0010A6  6E04               	movwf	i2___lwdiv@divisor+1,c
  5844  0010A8  0E0A               	movlw	10
  5845  0010AA  6E03               	movwf	i2___lwdiv@divisor,c
  5846  0010AC  EC8B  F00A         	call	i2___lwdiv	;wreg free
  5847  0010B0  C001  F010         	movff	?i2___lwdiv,i2Evaluate_Signs@evaluation_value
  5848  0010B4  C002  F011         	movff	?i2___lwdiv+1,i2Evaluate_Signs@evaluation_value+1
  5849  0010B8  0616               	decf	i2Evaluate_Signs@valuecounter,f,c
  5850  0010BA  D7BD               	goto	L6
  5851  0010BC                     i2l455:
  5852                           
  5853                           ;display.c: 128: }
  5854                           ;display.c: 129: __nop();
  5855  0010BC  F000               	nop	
  5856                           
  5857                           ;display.c: 130: Evaluate_Display(sizeof(signs), signs);
  5858  0010BE  0E81               	movlw	low _signs
  5859  0010C0  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5860  0010C2  0E00               	movlw	high _signs
  5861  0010C4  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5862  0010C6  0E03               	movlw	3
  5863  0010C8  EC12  F005         	call	i2_Evaluate_Display
  5864  0010CC  0012               	return		;funcret
  5865  0010CE                     __end_ofi2_Evaluate_Signs:
  5866                           	opt stack 0
  5867                           pclatu	equ	0xFFB
  5868                           pclath	equ	0xFFA
  5869                           tblptru	equ	0xFF8
  5870                           tblptrh	equ	0xFF7
  5871                           tblptrl	equ	0xFF6
  5872                           tablat	equ	0xFF5
  5873                           prodh	equ	0xFF4
  5874                           prodl	equ	0xFF3
  5875                           intcon	equ	0xFF2
  5876                           postinc0	equ	0xFEE
  5877                           fsr0h	equ	0xFEA
  5878                           fsr0l	equ	0xFE9
  5879                           wreg	equ	0xFE8
  5880                           postdec1	equ	0xFE5
  5881                           fsr1h	equ	0xFE2
  5882                           fsr1l	equ	0xFE1
  5883                           indf2	equ	0xFDF
  5884                           postinc2	equ	0xFDE
  5885                           postdec2	equ	0xFDD
  5886                           plusw2	equ	0xFDB
  5887                           fsr2h	equ	0xFDA
  5888                           fsr2l	equ	0xFD9
  5889                           status	equ	0xFD8
  5890                           
  5891 ;; *************** function i2___lwmod *****************
  5892 ;; Defined at:
  5893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  dividend        2    0[COMRAM] unsigned int 
  5896 ;;  divisor         2    2[COMRAM] unsigned int 
  5897 ;; Auto vars:     Size  Location     Type
  5898 ;;  __lwmod         1    4[COMRAM] unsigned char 
  5899 ;; Return value:  Size  Location     Type
  5900 ;;                  2    0[COMRAM] unsigned int 
  5901 ;; Registers used:
  5902 ;;		wreg, status,2, status,0
  5903 ;; Tracked objects:
  5904 ;;		On entry : 0/0
  5905 ;;		On exit  : 0/0
  5906 ;;		Unchanged: 0/0
  5907 ;; Data sizes:     COMRAM   BANK0   BANK1
  5908 ;;      Params:         4       0       0
  5909 ;;      Locals:         1       0       0
  5910 ;;      Temps:          0       0       0
  5911 ;;      Totals:         5       0       0
  5912 ;;Total ram usage:        5 bytes
  5913 ;; Hardware stack levels used:    1
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		i2_Evaluate_Signs
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text29
  5922  001640                     __ptext29:
  5923                           	opt stack 0
  5924  001640                     i2___lwmod:
  5925                           	opt stack 20
  5926                           
  5927                           ;incstack = 0
  5928  001640  5003               	movf	i2___lwmod@divisor,w,c
  5929  001642  1004               	iorwf	i2___lwmod@divisor+1,w,c
  5930  001644  B4D8               	btfsc	status,2,c
  5931  001646  D018               	goto	i2l1047
  5932  001648  0E01               	movlw	1
  5933  00164A  6E05               	movwf	i2___lwmod@counter,c
  5934  00164C  D004               	goto	i2l2568
  5935  00164E                     i2l2566:
  5936  00164E  90D8               	bcf	status,0,c
  5937  001650  3603               	rlcf	i2___lwmod@divisor,f,c
  5938  001652  3604               	rlcf	i2___lwmod@divisor+1,f,c
  5939  001654  2A05               	incf	i2___lwmod@counter,f,c
  5940  001656                     i2l2568:
  5941  001656  AE04               	btfss	i2___lwmod@divisor+1,7,c
  5942  001658  D7FA               	goto	i2l2566
  5943  00165A                     i2l2570:
  5944  00165A  5003               	movf	i2___lwmod@divisor,w,c
  5945  00165C  5C01               	subwf	i2___lwmod@dividend,w,c
  5946  00165E  5004               	movf	i2___lwmod@divisor+1,w,c
  5947  001660  5802               	subwfb	i2___lwmod@dividend+1,w,c
  5948  001662  A0D8               	btfss	status,0,c
  5949  001664  D004               	goto	i2l2574
  5950  001666  5003               	movf	i2___lwmod@divisor,w,c
  5951  001668  5E01               	subwf	i2___lwmod@dividend,f,c
  5952  00166A  5004               	movf	i2___lwmod@divisor+1,w,c
  5953  00166C  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  5954  00166E                     i2l2574:
  5955  00166E  90D8               	bcf	status,0,c
  5956  001670  3204               	rrcf	i2___lwmod@divisor+1,f,c
  5957  001672  3203               	rrcf	i2___lwmod@divisor,f,c
  5958  001674  2E05               	decfsz	i2___lwmod@counter,f,c
  5959  001676  D7F1               	goto	i2l2570
  5960  001678                     i2l1047:
  5961  001678  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  5962  00167C  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  5963  001680  0012               	return		;funcret
  5964  001682                     __end_ofi2___lwmod:
  5965                           	opt stack 0
  5966                           pclatu	equ	0xFFB
  5967                           pclath	equ	0xFFA
  5968                           tblptru	equ	0xFF8
  5969                           tblptrh	equ	0xFF7
  5970                           tblptrl	equ	0xFF6
  5971                           tablat	equ	0xFF5
  5972                           prodh	equ	0xFF4
  5973                           prodl	equ	0xFF3
  5974                           intcon	equ	0xFF2
  5975                           postinc0	equ	0xFEE
  5976                           fsr0h	equ	0xFEA
  5977                           fsr0l	equ	0xFE9
  5978                           wreg	equ	0xFE8
  5979                           postdec1	equ	0xFE5
  5980                           fsr1h	equ	0xFE2
  5981                           fsr1l	equ	0xFE1
  5982                           indf2	equ	0xFDF
  5983                           postinc2	equ	0xFDE
  5984                           postdec2	equ	0xFDD
  5985                           plusw2	equ	0xFDB
  5986                           fsr2h	equ	0xFDA
  5987                           fsr2l	equ	0xFD9
  5988                           status	equ	0xFD8
  5989                           
  5990 ;; *************** function i2___lwdiv *****************
  5991 ;; Defined at:
  5992 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  dividend        2    0[COMRAM] unsigned int 
  5995 ;;  divisor         2    2[COMRAM] unsigned int 
  5996 ;; Auto vars:     Size  Location     Type
  5997 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  5998 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  2    0[COMRAM] unsigned int 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMRAM   BANK0   BANK1
  6008 ;;      Params:         4       0       0
  6009 ;;      Locals:         3       0       0
  6010 ;;      Temps:          0       0       0
  6011 ;;      Totals:         7       0       0
  6012 ;;Total ram usage:        7 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		i2_Evaluate_Signs
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text30
  6022  001516                     __ptext30:
  6023                           	opt stack 0
  6024  001516                     i2___lwdiv:
  6025                           	opt stack 20
  6026                           
  6027                           ;incstack = 0
  6028  001516  0E00               	movlw	0
  6029  001518  6E06               	movwf	i2___lwdiv@quotient+1,c
  6030  00151A  0E00               	movlw	0
  6031  00151C  6E05               	movwf	i2___lwdiv@quotient,c
  6032  00151E  5003               	movf	i2___lwdiv@divisor,w,c
  6033  001520  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  6034  001522  B4D8               	btfsc	status,2,c
  6035  001524  D01C               	goto	i2l1037
  6036  001526  0E01               	movlw	1
  6037  001528  6E07               	movwf	i2___lwdiv@counter,c
  6038  00152A  D004               	goto	i2l2548
  6039  00152C                     i2l2546:
  6040  00152C  90D8               	bcf	status,0,c
  6041  00152E  3603               	rlcf	i2___lwdiv@divisor,f,c
  6042  001530  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  6043  001532  2A07               	incf	i2___lwdiv@counter,f,c
  6044  001534                     i2l2548:
  6045  001534  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  6046  001536  D7FA               	goto	i2l2546
  6047  001538                     i2l2550:
  6048  001538  90D8               	bcf	status,0,c
  6049  00153A  3605               	rlcf	i2___lwdiv@quotient,f,c
  6050  00153C  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  6051  00153E  5003               	movf	i2___lwdiv@divisor,w,c
  6052  001540  5C01               	subwf	i2___lwdiv@dividend,w,c
  6053  001542  5004               	movf	i2___lwdiv@divisor+1,w,c
  6054  001544  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  6055  001546  A0D8               	btfss	status,0,c
  6056  001548  D005               	goto	i2l2558
  6057  00154A  5003               	movf	i2___lwdiv@divisor,w,c
  6058  00154C  5E01               	subwf	i2___lwdiv@dividend,f,c
  6059  00154E  5004               	movf	i2___lwdiv@divisor+1,w,c
  6060  001550  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  6061  001552  8005               	bsf	i2___lwdiv@quotient,0,c
  6062  001554                     i2l2558:
  6063  001554  90D8               	bcf	status,0,c
  6064  001556  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  6065  001558  3203               	rrcf	i2___lwdiv@divisor,f,c
  6066  00155A  2E07               	decfsz	i2___lwdiv@counter,f,c
  6067  00155C  D7ED               	goto	i2l2550
  6068  00155E                     i2l1037:
  6069  00155E  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  6070  001562  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  6071  001566  0012               	return		;funcret
  6072  001568                     __end_ofi2___lwdiv:
  6073                           	opt stack 0
  6074                           pclatu	equ	0xFFB
  6075                           pclath	equ	0xFFA
  6076                           tblptru	equ	0xFF8
  6077                           tblptrh	equ	0xFF7
  6078                           tblptrl	equ	0xFF6
  6079                           tablat	equ	0xFF5
  6080                           prodh	equ	0xFF4
  6081                           prodl	equ	0xFF3
  6082                           intcon	equ	0xFF2
  6083                           postinc0	equ	0xFEE
  6084                           fsr0h	equ	0xFEA
  6085                           fsr0l	equ	0xFE9
  6086                           wreg	equ	0xFE8
  6087                           postdec1	equ	0xFE5
  6088                           fsr1h	equ	0xFE2
  6089                           fsr1l	equ	0xFE1
  6090                           indf2	equ	0xFDF
  6091                           postinc2	equ	0xFDE
  6092                           postdec2	equ	0xFDD
  6093                           plusw2	equ	0xFDB
  6094                           fsr2h	equ	0xFDA
  6095                           fsr2l	equ	0xFD9
  6096                           status	equ	0xFD8
  6097                           
  6098 ;; *************** function i2_Evaluate_Display *****************
  6099 ;; Defined at:
  6100 ;;		line 52 in file "display.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  size            1    wreg     unsigned char 
  6103 ;;  evaluate        2    8[COMRAM] PTR unsigned char 
  6104 ;;		 -> signs(3), string_delete(3), string_load(3), 
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;  size            1   14[COMRAM] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;		None               void
  6109 ;; Registers used:
  6110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1
  6116 ;;      Params:         2       0       0
  6117 ;;      Locals:         1       0       0
  6118 ;;      Temps:          4       0       0
  6119 ;;      Totals:         7       0       0
  6120 ;;Total ram usage:        7 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    1
  6123 ;; This function calls:
  6124 ;;		i2_Set_Bits
  6125 ;; This function is called by:
  6126 ;;		i2_Evaluate_Signs
  6127 ;;		i2_Set_Display
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           	psect	text31
  6132  000A24                     __ptext31:
  6133                           	opt stack 0
  6134  000A24                     i2_Evaluate_Display:
  6135                           	opt stack 19
  6136                           
  6137                           ;incstack = 0
  6138                           ;i2Evaluate_Display@size stored from wreg
  6139  000A24  6E0F               	movwf	i2Evaluate_Display@size,c
  6140                           
  6141                           ;display.c: 53: for(display_counter = size; display_counter > 0;
  6142  000A26  C00F  F041         	movff	i2Evaluate_Display@size,_display_counter
  6143                           
  6144                           ;display.c: 54: display_counter--) {
  6145  000A2A  D0D1               	goto	i2l2538
  6146  000A2C                     i2l428:
  6147                           
  6148                           ;display.c: 55: __nop();
  6149  000A2C  F000               	nop	
  6150                           
  6151                           ;display.c: 56: switch (evaluate[(display_counter - 1)]) {
  6152  000A2E  D085               	goto	i2l2534
  6153  000A30                     i2l2496:
  6154                           
  6155                           ;display.c: 58: Set_Bits("ABCDEF");
  6156  000A30  0E59               	movlw	low STR_1
  6157  000A32  6E01               	movwf	i2Set_Bits@bits,c
  6158  000A34  0E02               	movlw	high STR_1
  6159  000A36  6E02               	movwf	i2Set_Bits@bits+1,c
  6160  000A38  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6161                           
  6162                           ;display.c: 59: break;
  6163  000A3C  D0C7               	goto	i2l2536
  6164  000A3E                     i2l2498:
  6165                           
  6166                           ;display.c: 61: Set_Bits("BC");
  6167  000A3E  0E99               	movlw	low (STR_8+1)
  6168  000A40  6E01               	movwf	i2Set_Bits@bits,c
  6169  000A42  0E02               	movlw	high (STR_8+1)
  6170  000A44  6E02               	movwf	i2Set_Bits@bits+1,c
  6171  000A46  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6172                           
  6173                           ;display.c: 62: break;
  6174  000A4A  D0C0               	goto	i2l2536
  6175  000A4C                     i2l2500:
  6176                           
  6177                           ;display.c: 64: Set_Bits("ABDEG");
  6178  000A4C  0E7B               	movlw	low STR_3
  6179  000A4E  6E01               	movwf	i2Set_Bits@bits,c
  6180  000A50  0E02               	movlw	high STR_3
  6181  000A52  6E02               	movwf	i2Set_Bits@bits+1,c
  6182  000A54  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6183                           
  6184                           ;display.c: 65: break;
  6185  000A58  D0B9               	goto	i2l2536
  6186  000A5A                     i2l2502:
  6187                           
  6188                           ;display.c: 67: Set_Bits("ABCDG");
  6189  000A5A  0E75               	movlw	low STR_4
  6190  000A5C  6E01               	movwf	i2Set_Bits@bits,c
  6191  000A5E  0E02               	movlw	high STR_4
  6192  000A60  6E02               	movwf	i2Set_Bits@bits+1,c
  6193  000A62  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6194                           
  6195                           ;display.c: 68: break;
  6196  000A66  D0B2               	goto	i2l2536
  6197  000A68                     i2l2504:
  6198                           
  6199                           ;display.c: 70: Set_Bits("BCFG");
  6200  000A68  0E93               	movlw	low STR_5
  6201  000A6A  6E01               	movwf	i2Set_Bits@bits,c
  6202  000A6C  0E02               	movlw	high STR_5
  6203  000A6E  6E02               	movwf	i2Set_Bits@bits+1,c
  6204  000A70  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6205                           
  6206                           ;display.c: 71: break;
  6207  000A74  D0AB               	goto	i2l2536
  6208  000A76                     i2l2506:
  6209                           
  6210                           ;display.c: 73: Set_Bits("ACDFG");
  6211  000A76  0E81               	movlw	low STR_6
  6212  000A78  6E01               	movwf	i2Set_Bits@bits,c
  6213  000A7A  0E02               	movlw	high STR_6
  6214  000A7C  6E02               	movwf	i2Set_Bits@bits+1,c
  6215  000A7E  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6216                           
  6217                           ;display.c: 74: break;
  6218  000A82  D0A4               	goto	i2l2536
  6219  000A84                     i2l2508:
  6220                           
  6221                           ;display.c: 76: Set_Bits("ACDEFG");
  6222  000A84  0E6E               	movlw	low STR_7
  6223  000A86  6E01               	movwf	i2Set_Bits@bits,c
  6224  000A88  0E02               	movlw	high STR_7
  6225  000A8A  6E02               	movwf	i2Set_Bits@bits+1,c
  6226  000A8C  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6227                           
  6228                           ;display.c: 77: break;
  6229  000A90  D09D               	goto	i2l2536
  6230  000A92                     i2l2510:
  6231                           
  6232                           ;display.c: 79: Set_Bits("ABC");
  6233  000A92  0E98               	movlw	low STR_8
  6234  000A94  6E01               	movwf	i2Set_Bits@bits,c
  6235  000A96  0E02               	movlw	high STR_8
  6236  000A98  6E02               	movwf	i2Set_Bits@bits+1,c
  6237  000A9A  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6238                           
  6239                           ;display.c: 80: break;
  6240  000A9E  D096               	goto	i2l2536
  6241  000AA0                     i2l2512:
  6242                           
  6243                           ;display.c: 82: Set_Bits("ABCDEFG");
  6244  000AA0  0E51               	movlw	low STR_9
  6245  000AA2  6E01               	movwf	i2Set_Bits@bits,c
  6246  000AA4  0E02               	movlw	high STR_9
  6247  000AA6  6E02               	movwf	i2Set_Bits@bits+1,c
  6248  000AA8  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6249                           
  6250                           ;display.c: 83: break;
  6251  000AAC  D08F               	goto	i2l2536
  6252  000AAE                     i2l2514:
  6253                           
  6254                           ;display.c: 85: Set_Bits("ABCDFG");
  6255  000AAE  0E60               	movlw	low STR_10
  6256  000AB0  6E01               	movwf	i2Set_Bits@bits,c
  6257  000AB2  0E02               	movlw	high STR_10
  6258  000AB4  6E02               	movwf	i2Set_Bits@bits+1,c
  6259  000AB6  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6260                           
  6261                           ;display.c: 86: break;
  6262  000ABA  D088               	goto	i2l2536
  6263  000ABC                     i2l2516:
  6264                           
  6265                           ;display.c: 88: Set_Bits("ABCEFG");
  6266  000ABC  0E67               	movlw	low STR_11
  6267  000ABE  6E01               	movwf	i2Set_Bits@bits,c
  6268  000AC0  0E02               	movlw	high STR_11
  6269  000AC2  6E02               	movwf	i2Set_Bits@bits+1,c
  6270  000AC4  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6271                           
  6272                           ;display.c: 89: break;
  6273  000AC8  D081               	goto	i2l2536
  6274  000ACA                     i2l2518:
  6275                           
  6276                           ;display.c: 91: Set_Bits("ABCDEF");
  6277  000ACA  0E59               	movlw	low STR_1
  6278  000ACC  6E01               	movwf	i2Set_Bits@bits,c
  6279  000ACE  0E02               	movlw	high STR_1
  6280  000AD0  6E02               	movwf	i2Set_Bits@bits+1,c
  6281  000AD2  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6282                           
  6283                           ;display.c: 92: break;
  6284  000AD6  D07A               	goto	i2l2536
  6285  000AD8                     i2l2520:
  6286                           
  6287                           ;display.c: 94: Set_Bits("ADEFG");
  6288  000AD8  0E8D               	movlw	low STR_13
  6289  000ADA  6E01               	movwf	i2Set_Bits@bits,c
  6290  000ADC  0E02               	movlw	high STR_13
  6291  000ADE  6E02               	movwf	i2Set_Bits@bits+1,c
  6292  000AE0  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6293                           
  6294                           ;display.c: 95: break;
  6295  000AE4  D073               	goto	i2l2536
  6296  000AE6                     i2l2522:
  6297                           
  6298                           ;display.c: 97: Set_Bits("DEF");
  6299  000AE6  0E5C               	movlw	low (STR_1+3)
  6300  000AE8  6E01               	movwf	i2Set_Bits@bits,c
  6301  000AEA  0E02               	movlw	high (STR_1+3)
  6302  000AEC  6E02               	movwf	i2Set_Bits@bits+1,c
  6303  000AEE  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6304                           
  6305                           ;display.c: 98: break;
  6306  000AF2  D06C               	goto	i2l2536
  6307  000AF4                     i2l2524:
  6308                           
  6309                           ;display.c: 100: Set_Bits("ABCDEF");
  6310  000AF4  0E59               	movlw	low STR_1
  6311  000AF6  6E01               	movwf	i2Set_Bits@bits,c
  6312  000AF8  0E02               	movlw	high STR_1
  6313  000AFA  6E02               	movwf	i2Set_Bits@bits+1,c
  6314  000AFC  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6315                           
  6316                           ;display.c: 101: break;
  6317  000B00  D065               	goto	i2l2536
  6318  000B02                     i2l2526:
  6319                           
  6320                           ;display.c: 103: Set_Bits("ABEFG");
  6321  000B02  0E87               	movlw	low STR_16
  6322  000B04  6E01               	movwf	i2Set_Bits@bits,c
  6323  000B06  0E02               	movlw	high STR_16
  6324  000B08  6E02               	movwf	i2Set_Bits@bits+1,c
  6325  000B0A  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6326                           
  6327                           ;display.c: 104: break;
  6328  000B0E  D05E               	goto	i2l2536
  6329  000B10                     i2l2528:
  6330                           
  6331                           ;display.c: 106: Set_Bits("G");
  6332  000B10  0E79               	movlw	low (STR_4+4)
  6333  000B12  6E01               	movwf	i2Set_Bits@bits,c
  6334  000B14  0E02               	movlw	high (STR_4+4)
  6335  000B16  6E02               	movwf	i2Set_Bits@bits+1,c
  6336  000B18  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6337                           
  6338                           ;display.c: 107: break;
  6339  000B1C  D057               	goto	i2l2536
  6340  000B1E                     i2l2530:
  6341                           
  6342                           ;display.c: 109: Set_Bits("BCDEF");
  6343  000B1E  0E5A               	movlw	low (STR_1+1)
  6344  000B20  6E01               	movwf	i2Set_Bits@bits,c
  6345  000B22  0E02               	movlw	high (STR_1+1)
  6346  000B24  6E02               	movwf	i2Set_Bits@bits+1,c
  6347  000B26  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6348                           
  6349                           ;display.c: 110: break;
  6350  000B2A  D050               	goto	i2l2536
  6351  000B2C                     i2l2532:
  6352                           
  6353                           ;display.c: 112: Set_Bits("0");
  6354  000B2C  0E9C               	movlw	low STR_19
  6355  000B2E  6E01               	movwf	i2Set_Bits@bits,c
  6356  000B30  0E02               	movlw	high STR_19
  6357  000B32  6E02               	movwf	i2Set_Bits@bits+1,c
  6358  000B34  EC5F  F007         	call	i2_Set_Bits	;wreg free
  6359                           
  6360                           ;display.c: 113: }
  6361  000B38  D049               	goto	i2l2536
  6362  000B3A                     i2l2534:
  6363  000B3A  0EFF               	movlw	255
  6364  000B3C  6E0B               	movwf	??i2_Evaluate_Display& (0+255),c
  6365  000B3E  0EFF               	movlw	255
  6366  000B40  6E0C               	movwf	(??i2_Evaluate_Display+1)& (0+255),c
  6367  000B42  5041               	movf	_display_counter,w,c
  6368  000B44  6E0D               	movwf	(??i2_Evaluate_Display+2)& (0+255),c
  6369  000B46  6A0E               	clrf	(??i2_Evaluate_Display+3)& (0+255),c
  6370  000B48  500B               	movf	??i2_Evaluate_Display,w,c
  6371  000B4A  260D               	addwf	??i2_Evaluate_Display+2,f,c
  6372  000B4C  500C               	movf	??i2_Evaluate_Display+1,w,c
  6373  000B4E  220E               	addwfc	??i2_Evaluate_Display+3,f,c
  6374  000B50  500D               	movf	??i2_Evaluate_Display+2,w,c
  6375  000B52  2409               	addwf	i2Evaluate_Display@evaluate,w,c
  6376  000B54  6ED9               	movwf	fsr2l,c
  6377  000B56  500E               	movf	??i2_Evaluate_Display+3,w,c
  6378  000B58  200A               	addwfc	i2Evaluate_Display@evaluate+1,w,c
  6379  000B5A  6EDA               	movwf	fsr2h,c
  6380  000B5C  50DF               	movf	indf2,w,c
  6381                           
  6382                           ; Switch size 1, requested type "space"
  6383                           ; Number of cases is 18, Range of values is 45 to 84
  6384                           ; switch strategies available:
  6385                           ; Name         Instructions Cycles
  6386                           ; simple_byte           55    28 (average)
  6387                           ;	Chosen strategy is simple_byte
  6388  000B5E  0A2D               	xorlw	45	; case 45
  6389  000B60  B4D8               	btfsc	status,2,c
  6390  000B62  D7D6               	goto	i2l2528
  6391  000B64  0A1D               	xorlw	29	; case 48
  6392  000B66  B4D8               	btfsc	status,2,c
  6393  000B68  D763               	goto	i2l2496
  6394  000B6A  0A01               	xorlw	1	; case 49
  6395  000B6C  B4D8               	btfsc	status,2,c
  6396  000B6E  D767               	goto	i2l2498
  6397  000B70  0A03               	xorlw	3	; case 50
  6398  000B72  B4D8               	btfsc	status,2,c
  6399  000B74  D76B               	goto	i2l2500
  6400  000B76  0A01               	xorlw	1	; case 51
  6401  000B78  B4D8               	btfsc	status,2,c
  6402  000B7A  D76F               	goto	i2l2502
  6403  000B7C  0A07               	xorlw	7	; case 52
  6404  000B7E  B4D8               	btfsc	status,2,c
  6405  000B80  D773               	goto	i2l2504
  6406  000B82  0A01               	xorlw	1	; case 53
  6407  000B84  B4D8               	btfsc	status,2,c
  6408  000B86  D777               	goto	i2l2506
  6409  000B88  0A03               	xorlw	3	; case 54
  6410  000B8A  B4D8               	btfsc	status,2,c
  6411  000B8C  D77B               	goto	i2l2508
  6412  000B8E  0A01               	xorlw	1	; case 55
  6413  000B90  B4D8               	btfsc	status,2,c
  6414  000B92  D77F               	goto	i2l2510
  6415  000B94  0A0F               	xorlw	15	; case 56
  6416  000B96  B4D8               	btfsc	status,2,c
  6417  000B98  D783               	goto	i2l2512
  6418  000B9A  0A01               	xorlw	1	; case 57
  6419  000B9C  B4D8               	btfsc	status,2,c
  6420  000B9E  D787               	goto	i2l2514
  6421  000BA0  0A78               	xorlw	120	; case 65
  6422  000BA2  B4D8               	btfsc	status,2,c
  6423  000BA4  D78B               	goto	i2l2516
  6424  000BA6  0A05               	xorlw	5	; case 68
  6425  000BA8  B4D8               	btfsc	status,2,c
  6426  000BAA  D78F               	goto	i2l2518
  6427  000BAC  0A01               	xorlw	1	; case 69
  6428  000BAE  B4D8               	btfsc	status,2,c
  6429  000BB0  D793               	goto	i2l2520
  6430  000BB2  0A09               	xorlw	9	; case 76
  6431  000BB4  B4D8               	btfsc	status,2,c
  6432  000BB6  D797               	goto	i2l2522
  6433  000BB8  0A03               	xorlw	3	; case 79
  6434  000BBA  B4D8               	btfsc	status,2,c
  6435  000BBC  D79B               	goto	i2l2524
  6436  000BBE  0A1F               	xorlw	31	; case 80
  6437  000BC0  B4D8               	btfsc	status,2,c
  6438  000BC2  D79F               	goto	i2l2526
  6439  000BC4  0A04               	xorlw	4	; case 84
  6440  000BC6  B4D8               	btfsc	status,2,c
  6441  000BC8  D7AA               	goto	i2l2530
  6442  000BCA  D7B0               	goto	i2l2532
  6443  000BCC                     i2l2536:
  6444  000BCC  0641               	decf	_display_counter,f,c
  6445  000BCE                     i2l2538:
  6446  000BCE  5041               	movf	_display_counter,w,c
  6447  000BD0  B4D8               	btfsc	status,2,c
  6448  000BD2  0012               	return	
  6449  000BD4  D72B               	goto	i2l428
  6450  000BD6                     __end_ofi2_Evaluate_Display:
  6451                           	opt stack 0
  6452                           pclatu	equ	0xFFB
  6453                           pclath	equ	0xFFA
  6454                           tblptru	equ	0xFF8
  6455                           tblptrh	equ	0xFF7
  6456                           tblptrl	equ	0xFF6
  6457                           tablat	equ	0xFF5
  6458                           prodh	equ	0xFF4
  6459                           prodl	equ	0xFF3
  6460                           intcon	equ	0xFF2
  6461                           postinc0	equ	0xFEE
  6462                           fsr0h	equ	0xFEA
  6463                           fsr0l	equ	0xFE9
  6464                           wreg	equ	0xFE8
  6465                           postdec1	equ	0xFE5
  6466                           fsr1h	equ	0xFE2
  6467                           fsr1l	equ	0xFE1
  6468                           indf2	equ	0xFDF
  6469                           postinc2	equ	0xFDE
  6470                           postdec2	equ	0xFDD
  6471                           plusw2	equ	0xFDB
  6472                           fsr2h	equ	0xFDA
  6473                           fsr2l	equ	0xFD9
  6474                           status	equ	0xFD8
  6475                           
  6476 ;; *************** function i2_Set_Bits *****************
  6477 ;; Defined at:
  6478 ;;		line 12 in file "display.c"
  6479 ;; Parameters:    Size  Location     Type
  6480 ;;  bits            2    0[COMRAM] PTR const unsigned char 
  6481 ;;		 -> STR_19(2), STR_18(6), STR_17(2), STR_16(6), 
  6482 ;;		 -> STR_15(7), STR_14(4), STR_13(6), STR_12(7), 
  6483 ;;		 -> STR_11(7), STR_10(7), STR_9(8), STR_8(4), 
  6484 ;;		 -> STR_7(7), STR_6(6), STR_5(5), STR_4(6), 
  6485 ;;		 -> STR_3(6), STR_2(3), STR_1(7), 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  Set_Bits        1    7[COMRAM] unsigned char 
  6488 ;;  Set_Bits        1    6[COMRAM] unsigned char 
  6489 ;; Return value:  Size  Location     Type
  6490 ;;		None               void
  6491 ;; Registers used:
  6492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1
  6498 ;;      Params:         2       0       0
  6499 ;;      Locals:         2       0       0
  6500 ;;      Temps:          4       0       0
  6501 ;;      Totals:         8       0       0
  6502 ;;Total ram usage:        8 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; This function calls:
  6505 ;;		Nothing
  6506 ;; This function is called by:
  6507 ;;		i2_Evaluate_Display
  6508 ;; This function uses a non-reentrant model
  6509 ;;
  6510                           
  6511                           	psect	text32
  6512  000EBE                     __ptext32:
  6513                           	opt stack 0
  6514  000EBE                     i2_Set_Bits:
  6515                           	opt stack 19
  6516                           
  6517                           ;display.c: 13: unsigned char Bitoutput = 0;
  6518                           
  6519                           ;incstack = 0
  6520  000EBE  0E00               	movlw	0
  6521  000EC0  6E08               	movwf	i2Set_Bits@Bitoutput,c
  6522                           
  6523                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  6524  000EC2  0E00               	movlw	0
  6525  000EC4  6E07               	movwf	i2Set_Bits@bitcount,c
  6526                           
  6527                           ;display.c: 15: bitcount++) {
  6528  000EC6  D034               	goto	i2l2406
  6529  000EC8                     i2l2386:
  6530                           
  6531                           ;display.c: 18: Bitoutput |= 0b00000001;
  6532  000EC8  8008               	bsf	i2Set_Bits@Bitoutput,0,c
  6533                           
  6534                           ;display.c: 19: break;
  6535  000ECA  D031               	goto	i2l2404
  6536  000ECC                     i2l2388:
  6537                           
  6538                           ;display.c: 21: Bitoutput |= 0b00000010;
  6539  000ECC  8208               	bsf	i2Set_Bits@Bitoutput,1,c
  6540                           
  6541                           ;display.c: 22: break;
  6542  000ECE  D02F               	goto	i2l2404
  6543  000ED0                     i2l2390:
  6544                           
  6545                           ;display.c: 24: Bitoutput |= 0b00000100;
  6546  000ED0  8408               	bsf	i2Set_Bits@Bitoutput,2,c
  6547                           
  6548                           ;display.c: 25: break;
  6549  000ED2  D02D               	goto	i2l2404
  6550  000ED4                     i2l2392:
  6551                           
  6552                           ;display.c: 27: Bitoutput |= 0b00001000;
  6553  000ED4  8608               	bsf	i2Set_Bits@Bitoutput,3,c
  6554                           
  6555                           ;display.c: 28: break;
  6556  000ED6  D02B               	goto	i2l2404
  6557  000ED8                     i2l2394:
  6558                           
  6559                           ;display.c: 30: Bitoutput |= 0b00010000;
  6560  000ED8  8808               	bsf	i2Set_Bits@Bitoutput,4,c
  6561                           
  6562                           ;display.c: 31: break;
  6563  000EDA  D029               	goto	i2l2404
  6564  000EDC                     i2l2396:
  6565                           
  6566                           ;display.c: 33: Bitoutput |= 0b00100000;
  6567  000EDC  8A08               	bsf	i2Set_Bits@Bitoutput,5,c
  6568                           
  6569                           ;display.c: 34: break;
  6570  000EDE  D027               	goto	i2l2404
  6571  000EE0                     i2l2398:
  6572                           
  6573                           ;display.c: 36: Bitoutput |= 0b01000000;
  6574  000EE0  8C08               	bsf	i2Set_Bits@Bitoutput,6,c
  6575                           
  6576                           ;display.c: 40: }
  6577                           
  6578                           ;display.c: 39: break;
  6579                           
  6580                           ;display.c: 38: default:
  6581                           
  6582                           ;display.c: 37: break;
  6583  000EE2  D025               	goto	i2l2404
  6584  000EE4                     i2l2402:
  6585  000EE4  5007               	movf	i2Set_Bits@bitcount,w,c
  6586  000EE6  0D01               	mullw	1
  6587  000EE8  C001  F003         	movff	i2Set_Bits@bits,??i2_Set_Bits
  6588  000EEC  C002  F004         	movff	i2Set_Bits@bits+1,??i2_Set_Bits+1
  6589  000EF0  50F3               	movf	prodl,w,c
  6590  000EF2  2603               	addwf	??i2_Set_Bits,f,c
  6591  000EF4  50F4               	movf	prodh,w,c
  6592  000EF6  2204               	addwfc	??i2_Set_Bits+1,f,c
  6593  000EF8  C003  FFF6         	movff	??i2_Set_Bits,tblptrl
  6594  000EFC  C004  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6595  000F00                     	if	0	;tblptru may be non-zero
  6596  000F00                     	endif
  6597  000F00                     	if	0	;tblptru may be non-zero
  6598  000F00                     	endif
  6599  000F00  0008               	tblrd		*
  6600  000F02  50F5               	movf	tablat,w,c
  6601                           
  6602                           ; Switch size 1, requested type "space"
  6603                           ; Number of cases is 7, Range of values is 65 to 71
  6604                           ; switch strategies available:
  6605                           ; Name         Instructions Cycles
  6606                           ; simple_byte           22    12 (average)
  6607                           ;	Chosen strategy is simple_byte
  6608  000F04  0A41               	xorlw	65	; case 65
  6609  000F06  B4D8               	btfsc	status,2,c
  6610  000F08  D7DF               	goto	i2l2386
  6611  000F0A  0A03               	xorlw	3	; case 66
  6612  000F0C  B4D8               	btfsc	status,2,c
  6613  000F0E  D7DE               	goto	i2l2388
  6614  000F10  0A01               	xorlw	1	; case 67
  6615  000F12  B4D8               	btfsc	status,2,c
  6616  000F14  D7DD               	goto	i2l2390
  6617  000F16  0A07               	xorlw	7	; case 68
  6618  000F18  B4D8               	btfsc	status,2,c
  6619  000F1A  D7DC               	goto	i2l2392
  6620  000F1C  0A01               	xorlw	1	; case 69
  6621  000F1E  B4D8               	btfsc	status,2,c
  6622  000F20  D7DB               	goto	i2l2394
  6623  000F22  0A03               	xorlw	3	; case 70
  6624  000F24  B4D8               	btfsc	status,2,c
  6625  000F26  D7DA               	goto	i2l2396
  6626  000F28  0A01               	xorlw	1	; case 71
  6627  000F2A  B4D8               	btfsc	status,2,c
  6628  000F2C  D7D9               	goto	i2l2398
  6629  000F2E                     i2l2404:
  6630  000F2E  2A07               	incf	i2Set_Bits@bitcount,f,c
  6631  000F30                     i2l2406:
  6632  000F30  5007               	movf	i2Set_Bits@bitcount,w,c
  6633  000F32  0D01               	mullw	1
  6634  000F34  C001  F003         	movff	i2Set_Bits@bits,??i2_Set_Bits
  6635  000F38  C002  F004         	movff	i2Set_Bits@bits+1,??i2_Set_Bits+1
  6636  000F3C  50F3               	movf	prodl,w,c
  6637  000F3E  2603               	addwf	??i2_Set_Bits,f,c
  6638  000F40  50F4               	movf	prodh,w,c
  6639  000F42  2204               	addwfc	??i2_Set_Bits+1,f,c
  6640  000F44  C003  FFF6         	movff	??i2_Set_Bits,tblptrl
  6641  000F48  C004  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6642  000F4C                     	if	0	;tblptru may be non-zero
  6643  000F4C                     	endif
  6644  000F4C                     	if	0	;tblptru may be non-zero
  6645  000F4C                     	endif
  6646  000F4C  0008               	tblrd		*
  6647  000F4E  50F5               	movf	tablat,w,c
  6648  000F50  0900               	iorlw	0
  6649  000F52  A4D8               	btfss	status,2,c
  6650  000F54  D7C7               	goto	i2l2402
  6651                           
  6652                           ;display.c: 41: }
  6653                           ;display.c: 42: pixels[(display_counter - 1)] = Bitoutput;
  6654  000F56  0EFF               	movlw	255
  6655  000F58  6E03               	movwf	??i2_Set_Bits& (0+255),c
  6656  000F5A  0EFF               	movlw	255
  6657  000F5C  6E04               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6658  000F5E  5041               	movf	_display_counter,w,c
  6659  000F60  6E05               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6660  000F62  6A06               	clrf	(??i2_Set_Bits+3)& (0+255),c
  6661  000F64  5003               	movf	??i2_Set_Bits,w,c
  6662  000F66  2605               	addwf	??i2_Set_Bits+2,f,c
  6663  000F68  5004               	movf	??i2_Set_Bits+1,w,c
  6664  000F6A  2206               	addwfc	??i2_Set_Bits+3,f,c
  6665  000F6C  0E39               	movlw	low _pixels
  6666  000F6E  2405               	addwf	??i2_Set_Bits+2,w,c
  6667  000F70  6ED9               	movwf	fsr2l,c
  6668  000F72  0E00               	movlw	high _pixels
  6669  000F74  2006               	addwfc	??i2_Set_Bits+3,w,c
  6670  000F76  6EDA               	movwf	fsr2h,c
  6671  000F78  C008  FFDF         	movff	i2Set_Bits@Bitoutput,indf2
  6672  000F7C  0012               	return		;funcret
  6673  000F7E                     __end_ofi2_Set_Bits:
  6674                           	opt stack 0
  6675                           pclatu	equ	0xFFB
  6676                           pclath	equ	0xFFA
  6677                           tblptru	equ	0xFF8
  6678                           tblptrh	equ	0xFF7
  6679                           tblptrl	equ	0xFF6
  6680                           tablat	equ	0xFF5
  6681                           prodh	equ	0xFF4
  6682                           prodl	equ	0xFF3
  6683                           intcon	equ	0xFF2
  6684                           postinc0	equ	0xFEE
  6685                           fsr0h	equ	0xFEA
  6686                           fsr0l	equ	0xFE9
  6687                           wreg	equ	0xFE8
  6688                           postdec1	equ	0xFE5
  6689                           fsr1h	equ	0xFE2
  6690                           fsr1l	equ	0xFE1
  6691                           indf2	equ	0xFDF
  6692                           postinc2	equ	0xFDE
  6693                           postdec2	equ	0xFDD
  6694                           plusw2	equ	0xFDB
  6695                           fsr2h	equ	0xFDA
  6696                           fsr2l	equ	0xFD9
  6697                           status	equ	0xFD8
  6698                           
  6699 ;; *************** function i2_Delay_Routine *****************
  6700 ;; Defined at:
  6701 ;;		line 78 in file "main.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  delay_multip    1    wreg     unsigned char 
  6704 ;; Auto vars:     Size  Location     Type
  6705 ;;  delay_multip    1    1[COMRAM] unsigned char 
  6706 ;;  Delay_Routin    1    2[COMRAM] unsigned char 
  6707 ;; Return value:  Size  Location     Type
  6708 ;;		None               void
  6709 ;; Registers used:
  6710 ;;		wreg, status,2, status,0, cstack
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMRAM   BANK0   BANK1
  6716 ;;      Params:         0       0       0
  6717 ;;      Locals:         2       0       0
  6718 ;;      Temps:          1       0       0
  6719 ;;      Totals:         3       0       0
  6720 ;;Total ram usage:        3 bytes
  6721 ;; Hardware stack levels used:    1
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		_Isr
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text33
  6730  00177A                     __ptext33:
  6731                           	opt stack 0
  6732  00177A                     i2_Delay_Routine:
  6733                           	opt stack 22
  6734                           
  6735                           ;incstack = 0
  6736                           ;i2Delay_Routine@delay_multiplyer stored from wreg
  6737  00177A  6E02               	movwf	i2Delay_Routine@delay_multiplyer,c
  6738                           
  6739                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  6740  00177C  0E00               	movlw	0
  6741  00177E  6E03               	movwf	i2Delay_Routine@delay_counter,c
  6742                           
  6743                           ;main.c: 80: delay_counter++) {
  6744  001780  D008               	goto	i2l2928
  6745  001782                     i2l2924:
  6746                           
  6747                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  6748  001782  0E82               	movlw	130
  6749  001784  6E01               	movwf	??i2_Delay_Routine& (0+255),c
  6750  001786  0EDE               	movlw	222
  6751  001788                     i2u262_47:
  6752  001788  2EE8               	decfsz	wreg,f,c
  6753  00178A  D7FE               	goto	i2u262_47
  6754  00178C  2E01               	decfsz	??i2_Delay_Routine& (0+255),f,c
  6755  00178E  D7FC               	goto	i2u262_47
  6756  001790  2A03               	incf	i2Delay_Routine@delay_counter,f,c
  6757  001792                     i2l2928:
  6758  001792  5002               	movf	i2Delay_Routine@delay_multiplyer,w,c
  6759  001794  5C03               	subwf	i2Delay_Routine@delay_counter,w,c
  6760  001796  A0D8               	btfss	status,0,c
  6761  001798  D7F4               	goto	i2l2924
  6762                           
  6763                           ;main.c: 82: }
  6764                           ;main.c: 83: __nop();
  6765  00179A  F000               	nop	
  6766  00179C  0012               	return		;funcret
  6767  00179E                     __end_ofi2_Delay_Routine:
  6768                           	opt stack 0
  6769                           pclatu	equ	0xFFB
  6770                           pclath	equ	0xFFA
  6771                           tblptru	equ	0xFF8
  6772                           tblptrh	equ	0xFF7
  6773                           tblptrl	equ	0xFF6
  6774                           tablat	equ	0xFF5
  6775                           prodh	equ	0xFF4
  6776                           prodl	equ	0xFF3
  6777                           intcon	equ	0xFF2
  6778                           postinc0	equ	0xFEE
  6779                           fsr0h	equ	0xFEA
  6780                           fsr0l	equ	0xFE9
  6781                           wreg	equ	0xFE8
  6782                           postdec1	equ	0xFE5
  6783                           fsr1h	equ	0xFE2
  6784                           fsr1l	equ	0xFE1
  6785                           indf2	equ	0xFDF
  6786                           postinc2	equ	0xFDE
  6787                           postdec2	equ	0xFDD
  6788                           plusw2	equ	0xFDB
  6789                           fsr2h	equ	0xFDA
  6790                           fsr2l	equ	0xFD9
  6791                           status	equ	0xFD8
  6792                           
  6793 ;; *************** function i2_Check_Detonators *****************
  6794 ;; Defined at:
  6795 ;;		line 25 in file "ignition.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;		None
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;		None
  6800 ;; Return value:  Size  Location     Type
  6801 ;;		None               void
  6802 ;; Registers used:
  6803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6804 ;; Tracked objects:
  6805 ;;		On entry : 0/0
  6806 ;;		On exit  : 0/0
  6807 ;;		Unchanged: 0/0
  6808 ;; Data sizes:     COMRAM   BANK0   BANK1
  6809 ;;      Params:         0       0       0
  6810 ;;      Locals:         0       0       0
  6811 ;;      Temps:          0       0       0
  6812 ;;      Totals:         0       0       0
  6813 ;;Total ram usage:        0 bytes
  6814 ;; Hardware stack levels used:    1
  6815 ;; Hardware stack levels required when called:    1
  6816 ;; This function calls:
  6817 ;;		i2_Transmit
  6818 ;; This function is called by:
  6819 ;;		_Isr
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text34
  6824  0016BE                     __ptext34:
  6825                           	opt stack 0
  6826  0016BE                     i2_Check_Detonators:
  6827                           	opt stack 21
  6828                           
  6829                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  6830                           
  6831                           ;incstack = 0
  6832  0016BE  0E54               	movlw	84
  6833  0016C0  6E01               	movwf	i2Transmit@operation,c
  6834  0016C2  5037               	movf	_check_counter,w,c
  6835  0016C4  0D06               	mullw	6
  6836  0016C6  0E01               	movlw	1
  6837  0016C8  26F3               	addwf	prodl,f,c
  6838  0016CA  0E00               	movlw	0
  6839  0016CC  22F4               	addwfc	prodh,f,c
  6840  0016CE  0E00               	movlw	low _pin
  6841  0016D0  24F3               	addwf	prodl,w,c
  6842  0016D2  6ED9               	movwf	fsr2l,c
  6843  0016D4  0E01               	movlw	high _pin
  6844  0016D6  20F4               	addwfc	prodh,w,c
  6845  0016D8  6EDA               	movwf	fsr2h,c
  6846  0016DA  50DF               	movf	indf2,w,c
  6847  0016DC  6E02               	movwf	i2Transmit@port,c
  6848  0016DE  5037               	movf	_check_counter,w,c
  6849  0016E0  0D06               	mullw	6
  6850  0016E2  0E00               	movlw	low _pin
  6851  0016E4  24F3               	addwf	prodl,w,c
  6852  0016E6  6ED9               	movwf	fsr2l,c
  6853  0016E8  0E01               	movlw	high _pin
  6854  0016EA  20F4               	addwfc	prodh,w,c
  6855  0016EC  6EDA               	movwf	fsr2h,c
  6856  0016EE  50DF               	movf	indf2,w,c
  6857  0016F0  EC09  F00A         	call	i2_Transmit
  6858  0016F4  0012               	return		;funcret
  6859  0016F6                     __end_ofi2_Check_Detonators:
  6860                           	opt stack 0
  6861                           pclatu	equ	0xFFB
  6862                           pclath	equ	0xFFA
  6863                           tblptru	equ	0xFF8
  6864                           tblptrh	equ	0xFF7
  6865                           tblptrl	equ	0xFF6
  6866                           tablat	equ	0xFF5
  6867                           prodh	equ	0xFF4
  6868                           prodl	equ	0xFF3
  6869                           intcon	equ	0xFF2
  6870                           postinc0	equ	0xFEE
  6871                           fsr0h	equ	0xFEA
  6872                           fsr0l	equ	0xFE9
  6873                           wreg	equ	0xFE8
  6874                           postdec1	equ	0xFE5
  6875                           fsr1h	equ	0xFE2
  6876                           fsr1l	equ	0xFE1
  6877                           indf2	equ	0xFDF
  6878                           postinc2	equ	0xFDE
  6879                           postdec2	equ	0xFDD
  6880                           plusw2	equ	0xFDB
  6881                           fsr2h	equ	0xFDA
  6882                           fsr2l	equ	0xFD9
  6883                           status	equ	0xFD8
  6884                           
  6885 ;; *************** function ___awdiv *****************
  6886 ;; Defined at:
  6887 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  dividend        2    0[COMRAM] int 
  6890 ;;  divisor         2    2[COMRAM] int 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  quotient        2    6[COMRAM] int 
  6893 ;;  sign            1    5[COMRAM] unsigned char 
  6894 ;;  counter         1    4[COMRAM] unsigned char 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  2    0[COMRAM] int 
  6897 ;; Registers used:
  6898 ;;		wreg, status,2, status,0
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1
  6904 ;;      Params:         4       0       0
  6905 ;;      Locals:         4       0       0
  6906 ;;      Temps:          0       0       0
  6907 ;;      Totals:         8       0       0
  6908 ;;Total ram usage:        8 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; This function calls:
  6911 ;;		Nothing
  6912 ;; This function is called by:
  6913 ;;		_Isr
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           	psect	text35
  6918  0010CE                     __ptext35:
  6919                           	opt stack 0
  6920  0010CE                     ___awdiv:
  6921                           	opt stack 22
  6922                           
  6923                           ;incstack = 0
  6924  0010CE  0E00               	movlw	0
  6925  0010D0  6E06               	movwf	___awdiv@sign,c
  6926  0010D2  AE04               	btfss	___awdiv@divisor+1,7,c
  6927  0010D4  D006               	goto	i2l2886
  6928  0010D6  6C03               	negf	___awdiv@divisor,c
  6929  0010D8  1E04               	comf	___awdiv@divisor+1,f,c
  6930  0010DA  B0D8               	btfsc	status,0,c
  6931  0010DC  2A04               	incf	___awdiv@divisor+1,f,c
  6932  0010DE  0E01               	movlw	1
  6933  0010E0  6E06               	movwf	___awdiv@sign,c
  6934  0010E2                     i2l2886:
  6935  0010E2  AE02               	btfss	___awdiv@dividend+1,7,c
  6936  0010E4  D006               	goto	i2l2892
  6937  0010E6  6C01               	negf	___awdiv@dividend,c
  6938  0010E8  1E02               	comf	___awdiv@dividend+1,f,c
  6939  0010EA  B0D8               	btfsc	status,0,c
  6940  0010EC  2A02               	incf	___awdiv@dividend+1,f,c
  6941  0010EE  0E01               	movlw	1
  6942  0010F0  1A06               	xorwf	___awdiv@sign,f,c
  6943  0010F2                     i2l2892:
  6944  0010F2  0E00               	movlw	0
  6945  0010F4  6E08               	movwf	___awdiv@quotient+1,c
  6946  0010F6  0E00               	movlw	0
  6947  0010F8  6E07               	movwf	___awdiv@quotient,c
  6948  0010FA  5003               	movf	___awdiv@divisor,w,c
  6949  0010FC  1004               	iorwf	___awdiv@divisor+1,w,c
  6950  0010FE  B4D8               	btfsc	status,2,c
  6951  001100  D01C               	goto	i2l2914
  6952  001102  0E01               	movlw	1
  6953  001104  6E05               	movwf	___awdiv@counter,c
  6954  001106  D004               	goto	i2l2900
  6955  001108                     i2l2898:
  6956  001108  90D8               	bcf	status,0,c
  6957  00110A  3603               	rlcf	___awdiv@divisor,f,c
  6958  00110C  3604               	rlcf	___awdiv@divisor+1,f,c
  6959  00110E  2A05               	incf	___awdiv@counter,f,c
  6960  001110                     i2l2900:
  6961  001110  AE04               	btfss	___awdiv@divisor+1,7,c
  6962  001112  D7FA               	goto	i2l2898
  6963  001114                     i2l2902:
  6964  001114  90D8               	bcf	status,0,c
  6965  001116  3607               	rlcf	___awdiv@quotient,f,c
  6966  001118  3608               	rlcf	___awdiv@quotient+1,f,c
  6967  00111A  5003               	movf	___awdiv@divisor,w,c
  6968  00111C  5C01               	subwf	___awdiv@dividend,w,c
  6969  00111E  5004               	movf	___awdiv@divisor+1,w,c
  6970  001120  5802               	subwfb	___awdiv@dividend+1,w,c
  6971  001122  A0D8               	btfss	status,0,c
  6972  001124  D005               	goto	i2l2910
  6973  001126  5003               	movf	___awdiv@divisor,w,c
  6974  001128  5E01               	subwf	___awdiv@dividend,f,c
  6975  00112A  5004               	movf	___awdiv@divisor+1,w,c
  6976  00112C  5A02               	subwfb	___awdiv@dividend+1,f,c
  6977  00112E  8007               	bsf	___awdiv@quotient,0,c
  6978  001130                     i2l2910:
  6979  001130  90D8               	bcf	status,0,c
  6980  001132  3204               	rrcf	___awdiv@divisor+1,f,c
  6981  001134  3203               	rrcf	___awdiv@divisor,f,c
  6982  001136  2E05               	decfsz	___awdiv@counter,f,c
  6983  001138  D7ED               	goto	i2l2902
  6984  00113A                     i2l2914:
  6985  00113A  5006               	movf	___awdiv@sign,w,c
  6986  00113C  B4D8               	btfsc	status,2,c
  6987  00113E  D004               	goto	i2l2918
  6988  001140  6C07               	negf	___awdiv@quotient,c
  6989  001142  1E08               	comf	___awdiv@quotient+1,f,c
  6990  001144  B0D8               	btfsc	status,0,c
  6991  001146  2A08               	incf	___awdiv@quotient+1,f,c
  6992  001148                     i2l2918:
  6993  001148  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6994  00114C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6995  001150  0012               	return	
  6996  001152                     __end_of___awdiv:
  6997                           	opt stack 0
  6998                           pclatu	equ	0xFFB
  6999                           pclath	equ	0xFFA
  7000                           tblptru	equ	0xFF8
  7001                           tblptrh	equ	0xFF7
  7002                           tblptrl	equ	0xFF6
  7003                           tablat	equ	0xFF5
  7004                           prodh	equ	0xFF4
  7005                           prodl	equ	0xFF3
  7006                           intcon	equ	0xFF2
  7007                           postinc0	equ	0xFEE
  7008                           fsr0h	equ	0xFEA
  7009                           fsr0l	equ	0xFE9
  7010                           wreg	equ	0xFE8
  7011                           postdec1	equ	0xFE5
  7012                           fsr1h	equ	0xFE2
  7013                           fsr1l	equ	0xFE1
  7014                           indf2	equ	0xFDF
  7015                           postinc2	equ	0xFDE
  7016                           postdec2	equ	0xFDD
  7017                           plusw2	equ	0xFDB
  7018                           fsr2h	equ	0xFDA
  7019                           fsr2l	equ	0xFD9
  7020                           status	equ	0xFD8
  7021                           
  7022 ;; *************** function _Receive_Dump *****************
  7023 ;; Defined at:
  7024 ;;		line 51 in file "communication.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;		None
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  dump            1    0[COMRAM] unsigned char 
  7029 ;; Return value:  Size  Location     Type
  7030 ;;		None               void
  7031 ;; Registers used:
  7032 ;;		None
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1
  7038 ;;      Params:         0       0       0
  7039 ;;      Locals:         1       0       0
  7040 ;;      Temps:          0       0       0
  7041 ;;      Totals:         1       0       0
  7042 ;;Total ram usage:        1 bytes
  7043 ;; Hardware stack levels used:    1
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_Isr
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text36
  7052  001820                     __ptext36:
  7053                           	opt stack 0
  7054  001820                     _Receive_Dump:
  7055                           	opt stack 22
  7056                           
  7057                           ;communication.c: 52: unsigned char dump;
  7058                           ;communication.c: 53: if(RCSTA1bits.OERR == 1) {
  7059                           
  7060                           ;incstack = 0
  7061  001820  A2AB               	btfss	4011,1,c	;volatile
  7062  001822  D003               	goto	i2l544
  7063                           
  7064                           ;communication.c: 54: RCSTA1bits.CREN = 0;
  7065  001824  98AB               	bcf	4011,4,c	;volatile
  7066                           
  7067                           ;communication.c: 55: RCSTA1bits.CREN = 1;
  7068  001826  88AB               	bsf	4011,4,c	;volatile
  7069                           
  7070                           ;communication.c: 56: overrun = 1;
  7071  001828  8440               	bsf	_overrun/(0+8),_overrun& (0+7),c
  7072  00182A                     i2l544:
  7073                           
  7074                           ;communication.c: 57: }
  7075                           ;communication.c: 58: dump = RCREG1;
  7076  00182A  CFAE F001          	movff	4014,Receive_Dump@dump	;volatile
  7077  00182E  0012               	return		;funcret
  7078  001830                     __end_of_Receive_Dump:
  7079                           	opt stack 0
  7080                           pclatu	equ	0xFFB
  7081                           pclath	equ	0xFFA
  7082                           tblptru	equ	0xFF8
  7083                           tblptrh	equ	0xFF7
  7084                           tblptrl	equ	0xFF6
  7085                           tablat	equ	0xFF5
  7086                           prodh	equ	0xFF4
  7087                           prodl	equ	0xFF3
  7088                           intcon	equ	0xFF2
  7089                           postinc0	equ	0xFEE
  7090                           fsr0h	equ	0xFEA
  7091                           fsr0l	equ	0xFE9
  7092                           wreg	equ	0xFE8
  7093                           postdec1	equ	0xFE5
  7094                           fsr1h	equ	0xFE2
  7095                           fsr1l	equ	0xFE1
  7096                           indf2	equ	0xFDF
  7097                           postinc2	equ	0xFDE
  7098                           postdec2	equ	0xFDD
  7099                           plusw2	equ	0xFDB
  7100                           fsr2h	equ	0xFDA
  7101                           fsr2l	equ	0xFD9
  7102                           status	equ	0xFD8
  7103                           
  7104 ;; *************** function _Receive *****************
  7105 ;; Defined at:
  7106 ;;		line 42 in file "communication.c"
  7107 ;; Parameters:    Size  Location     Type
  7108 ;;		None
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;		None
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      unsigned char 
  7113 ;; Registers used:
  7114 ;;		wreg, status,2
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1
  7120 ;;      Params:         0       0       0
  7121 ;;      Locals:         0       0       0
  7122 ;;      Temps:          0       0       0
  7123 ;;      Totals:         0       0       0
  7124 ;;Total ram usage:        0 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; This function calls:
  7127 ;;		Nothing
  7128 ;; This function is called by:
  7129 ;;		_Isr
  7130 ;; This function uses a non-reentrant model
  7131 ;;
  7132                           
  7133                           	psect	text37
  7134  001830                     __ptext37:
  7135                           	opt stack 0
  7136  001830                     _Receive:
  7137                           	opt stack 22
  7138                           
  7139                           ;communication.c: 43: if(RCSTA1bits.OERR == 1) {
  7140                           
  7141                           ;incstack = 0
  7142  001830  A2AB               	btfss	4011,1,c	;volatile
  7143  001832  D003               	goto	i2l2870
  7144                           
  7145                           ;communication.c: 44: RCSTA1bits.CREN = 0;
  7146  001834  98AB               	bcf	4011,4,c	;volatile
  7147                           
  7148                           ;communication.c: 45: RCSTA1bits.CREN = 1;
  7149  001836  88AB               	bsf	4011,4,c	;volatile
  7150                           
  7151                           ;communication.c: 46: overrun = 1;
  7152  001838  8440               	bsf	_overrun/(0+8),_overrun& (0+7),c
  7153  00183A                     i2l2870:
  7154                           
  7155                           ;communication.c: 47: }
  7156                           ;communication.c: 48: return (RCREG1);
  7157  00183A  50AE               	movf	4014,w,c	;volatile
  7158  00183C  0012               	return	
  7159  00183E                     __end_of_Receive:
  7160                           	opt stack 0
  7161                           pclatu	equ	0xFFB
  7162                           pclath	equ	0xFFA
  7163                           tblptru	equ	0xFF8
  7164                           tblptrh	equ	0xFF7
  7165                           tblptrl	equ	0xFF6
  7166                           tablat	equ	0xFF5
  7167                           prodh	equ	0xFF4
  7168                           prodl	equ	0xFF3
  7169                           intcon	equ	0xFF2
  7170                           postinc0	equ	0xFEE
  7171                           fsr0h	equ	0xFEA
  7172                           fsr0l	equ	0xFE9
  7173                           wreg	equ	0xFE8
  7174                           postdec1	equ	0xFE5
  7175                           fsr1h	equ	0xFE2
  7176                           fsr1l	equ	0xFE1
  7177                           indf2	equ	0xFDF
  7178                           postinc2	equ	0xFDE
  7179                           postdec2	equ	0xFDD
  7180                           plusw2	equ	0xFDB
  7181                           fsr2h	equ	0xFDA
  7182                           fsr2l	equ	0xFD9
  7183                           status	equ	0xFD8
  7184                           
  7185 ;; *************** function _Ignite_Detonators *****************
  7186 ;; Defined at:
  7187 ;;		line 29 in file "ignition.c"
  7188 ;; Parameters:    Size  Location     Type
  7189 ;;		None
  7190 ;; Auto vars:     Size  Location     Type
  7191 ;;  counter         1    5[COMRAM] unsigned char 
  7192 ;; Return value:  Size  Location     Type
  7193 ;;		None               void
  7194 ;; Registers used:
  7195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7196 ;; Tracked objects:
  7197 ;;		On entry : 0/0
  7198 ;;		On exit  : 0/0
  7199 ;;		Unchanged: 0/0
  7200 ;; Data sizes:     COMRAM   BANK0   BANK1
  7201 ;;      Params:         0       0       0
  7202 ;;      Locals:         1       0       0
  7203 ;;      Temps:          2       0       0
  7204 ;;      Totals:         3       0       0
  7205 ;;Total ram usage:        3 bytes
  7206 ;; Hardware stack levels used:    1
  7207 ;; Hardware stack levels required when called:    1
  7208 ;; This function calls:
  7209 ;;		i2_Transmit
  7210 ;; This function is called by:
  7211 ;;		_Isr
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text38
  7216  0011CA                     __ptext38:
  7217                           	opt stack 0
  7218  0011CA                     _Ignite_Detonators:
  7219                           	opt stack 21
  7220                           
  7221                           ;ignition.c: 30: for(unsigned char counter = 0; counter < 30; counter++) {
  7222                           
  7223                           ;incstack = 0
  7224  0011CA  0E00               	movlw	0
  7225  0011CC  6E06               	movwf	Ignite_Detonators@counter,c
  7226  0011CE                     i2l2854:
  7227  0011CE  0E1D               	movlw	29
  7228  0011D0  6406               	cpfsgt	Ignite_Detonators@counter,c
  7229  0011D2  D001               	goto	i2l2858
  7230  0011D4  0012               	return	
  7231  0011D6                     i2l2858:
  7232                           
  7233                           ;ignition.c: 31: if(pin[counter].time == current_time) {
  7234  0011D6  5006               	movf	Ignite_Detonators@counter,w,c
  7235  0011D8  0D06               	mullw	6
  7236  0011DA  0E04               	movlw	4
  7237  0011DC  26F3               	addwf	prodl,f,c
  7238  0011DE  0E00               	movlw	0
  7239  0011E0  22F4               	addwfc	prodh,f,c
  7240  0011E2  0E00               	movlw	low _pin
  7241  0011E4  24F3               	addwf	prodl,w,c
  7242  0011E6  6ED9               	movwf	fsr2l,c
  7243  0011E8  0E01               	movlw	high _pin
  7244  0011EA  20F4               	addwfc	prodh,w,c
  7245  0011EC  6EDA               	movwf	fsr2h,c
  7246  0011EE  5035               	movf	_current_time,w,c
  7247  0011F0  18DE               	xorwf	postinc2,w,c
  7248  0011F2  E11F               	bnz	i2l2862
  7249  0011F4  5036               	movf	_current_time+1,w,c
  7250  0011F6  18DE               	xorwf	postinc2,w,c
  7251  0011F8  A4D8               	btfss	status,2,c
  7252  0011FA  D01B               	goto	i2l2862
  7253                           
  7254                           ;ignition.c: 32: Transmit(pin[counter].slave, 'I', pin[counter].output);
  7255  0011FC  0E49               	movlw	73
  7256  0011FE  6E01               	movwf	i2Transmit@operation,c
  7257  001200  5006               	movf	Ignite_Detonators@counter,w,c
  7258  001202  0D06               	mullw	6
  7259  001204  0E01               	movlw	1
  7260  001206  26F3               	addwf	prodl,f,c
  7261  001208  0E00               	movlw	0
  7262  00120A  22F4               	addwfc	prodh,f,c
  7263  00120C  0E00               	movlw	low _pin
  7264  00120E  24F3               	addwf	prodl,w,c
  7265  001210  6ED9               	movwf	fsr2l,c
  7266  001212  0E01               	movlw	high _pin
  7267  001214  20F4               	addwfc	prodh,w,c
  7268  001216  6EDA               	movwf	fsr2h,c
  7269  001218  50DF               	movf	indf2,w,c
  7270  00121A  6E02               	movwf	i2Transmit@port,c
  7271  00121C  5006               	movf	Ignite_Detonators@counter,w,c
  7272  00121E  0D06               	mullw	6
  7273  001220  0E00               	movlw	low _pin
  7274  001222  24F3               	addwf	prodl,w,c
  7275  001224  6ED9               	movwf	fsr2l,c
  7276  001226  0E01               	movlw	high _pin
  7277  001228  20F4               	addwfc	prodh,w,c
  7278  00122A  6EDA               	movwf	fsr2h,c
  7279  00122C  50DF               	movf	indf2,w,c
  7280  00122E  EC09  F00A         	call	i2_Transmit
  7281  001232                     i2l2862:
  7282  001232  2A06               	incf	Ignite_Detonators@counter,f,c
  7283  001234  D7CC               	goto	i2l2854
  7284  001236                     __end_of_Ignite_Detonators:
  7285                           	opt stack 0
  7286                           pclatu	equ	0xFFB
  7287                           pclath	equ	0xFFA
  7288                           tblptru	equ	0xFF8
  7289                           tblptrh	equ	0xFF7
  7290                           tblptrl	equ	0xFF6
  7291                           tablat	equ	0xFF5
  7292                           prodh	equ	0xFF4
  7293                           prodl	equ	0xFF3
  7294                           intcon	equ	0xFF2
  7295                           postinc0	equ	0xFEE
  7296                           fsr0h	equ	0xFEA
  7297                           fsr0l	equ	0xFE9
  7298                           wreg	equ	0xFE8
  7299                           postdec1	equ	0xFE5
  7300                           fsr1h	equ	0xFE2
  7301                           fsr1l	equ	0xFE1
  7302                           indf2	equ	0xFDF
  7303                           postinc2	equ	0xFDE
  7304                           postdec2	equ	0xFDD
  7305                           plusw2	equ	0xFDB
  7306                           fsr2h	equ	0xFDA
  7307                           fsr2l	equ	0xFD9
  7308                           status	equ	0xFD8
  7309                           
  7310 ;; *************** function i2_Transmit *****************
  7311 ;; Defined at:
  7312 ;;		line 15 in file "communication.c"
  7313 ;; Parameters:    Size  Location     Type
  7314 ;;  receiver        1    wreg     unsigned char 
  7315 ;;  operation       1    0[COMRAM] unsigned char 
  7316 ;;  port            1    1[COMRAM] unsigned char 
  7317 ;; Auto vars:     Size  Location     Type
  7318 ;;  receiver        1    2[COMRAM] unsigned char 
  7319 ;; Return value:  Size  Location     Type
  7320 ;;		None               void
  7321 ;; Registers used:
  7322 ;;		wreg, status,2, cstack
  7323 ;; Tracked objects:
  7324 ;;		On entry : 0/0
  7325 ;;		On exit  : 0/0
  7326 ;;		Unchanged: 0/0
  7327 ;; Data sizes:     COMRAM   BANK0   BANK1
  7328 ;;      Params:         2       0       0
  7329 ;;      Locals:         1       0       0
  7330 ;;      Temps:          0       0       0
  7331 ;;      Totals:         3       0       0
  7332 ;;Total ram usage:        3 bytes
  7333 ;; Hardware stack levels used:    1
  7334 ;; This function calls:
  7335 ;;		Nothing
  7336 ;; This function is called by:
  7337 ;;		_Ignite_Detonators
  7338 ;;		i2_Check_Detonators
  7339 ;; This function uses a non-reentrant model
  7340 ;;
  7341                           
  7342                           	psect	text39
  7343  001412                     __ptext39:
  7344                           	opt stack 0
  7345  001412                     i2_Transmit:
  7346                           	opt stack 21
  7347                           
  7348                           ;incstack = 0
  7349                           ;i2Transmit@receiver stored from wreg
  7350  001412  6E03               	movwf	i2Transmit@receiver,c
  7351                           
  7352                           ;communication.c: 17: PORTBbits.RB5 = 1;
  7353  001414  8A81               	bsf	3969,5,c	;volatile
  7354                           
  7355                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  7356  001416  98AB               	bcf	4011,4,c	;volatile
  7357                           
  7358                           ;communication.c: 20: __nop();
  7359  001418  F000               	nop	
  7360  00141A                     i2l522:
  7361  00141A  A89E               	btfss	3998,4,c	;volatile
  7362  00141C  D7FE               	goto	i2l522
  7363                           
  7364                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  7365  00141E  80AC               	bsf	4012,0,c	;volatile
  7366                           
  7367                           ;communication.c: 23: TXREG1 = receiver;
  7368  001420  C003  FFAD         	movff	i2Transmit@receiver,4013	;volatile
  7369  001424                     i2l525:
  7370  001424  A89E               	btfss	3998,4,c	;volatile
  7371  001426  D7FE               	goto	i2l525
  7372                           
  7373                           ;communication.c: 25: TXSTA1bits.TX9D = 0;
  7374  001428  90AC               	bcf	4012,0,c	;volatile
  7375                           
  7376                           ;communication.c: 26: _delay((unsigned long)((1)*(4000000/4000.0)));
  7377  00142A  0EFA               	movlw	250
  7378  00142C                     i2u263_47:
  7379  00142C  F000               	nop	
  7380  00142E  2EE8               	decfsz	wreg,f,c
  7381  001430  D7FD               	goto	i2u263_47
  7382                           
  7383                           ;communication.c: 27: TXREG1 = 0xAA;
  7384  001432  0EAA               	movlw	170
  7385  001434  6EAD               	movwf	4013,c	;volatile
  7386  001436                     i2l528:
  7387  001436  A89E               	btfss	3998,4,c	;volatile
  7388  001438  D7FE               	goto	i2l528
  7389                           
  7390                           ;communication.c: 29: _delay((unsigned long)((1)*(4000000/4000.0)));
  7391  00143A  0EFA               	movlw	250
  7392  00143C                     i2u264_47:
  7393  00143C  F000               	nop	
  7394  00143E  2EE8               	decfsz	wreg,f,c
  7395  001440  D7FD               	goto	i2u264_47
  7396                           
  7397                           ;communication.c: 30: TXREG1 = operation;
  7398  001442  C001  FFAD         	movff	i2Transmit@operation,4013	;volatile
  7399  001446                     i2l531:
  7400  001446  A89E               	btfss	3998,4,c	;volatile
  7401  001448  D7FE               	goto	i2l531
  7402                           
  7403                           ;communication.c: 32: _delay((unsigned long)((1)*(4000000/4000.0)));
  7404  00144A  0EFA               	movlw	250
  7405  00144C                     i2u265_47:
  7406  00144C  F000               	nop	
  7407  00144E  2EE8               	decfsz	wreg,f,c
  7408  001450  D7FD               	goto	i2u265_47
  7409                           
  7410                           ;communication.c: 33: TXREG1 = port;
  7411  001452  C002  FFAD         	movff	i2Transmit@port,4013	;volatile
  7412  001456                     i2l534:
  7413  001456  A2AC               	btfss	4012,1,c	;volatile
  7414  001458  D7FE               	goto	i2l534
  7415                           
  7416                           ;communication.c: 35: _delay((unsigned long)((1)*(4000000/4000.0)));
  7417  00145A  0EFA               	movlw	250
  7418  00145C                     i2u266_47:
  7419  00145C  F000               	nop	
  7420  00145E  2EE8               	decfsz	wreg,f,c
  7421  001460  D7FD               	goto	i2u266_47
  7422                           
  7423                           ;communication.c: 36: PORTBbits.RB5 = 0;
  7424  001462  9A81               	bcf	3969,5,c	;volatile
  7425                           
  7426                           ;communication.c: 37: RCSTA1bits.CREN = 1;
  7427  001464  88AB               	bsf	4011,4,c	;volatile
  7428                           
  7429                           ;communication.c: 38: __nop();
  7430  001466  F000               	nop	
  7431  001468  0012               	return		;funcret
  7432  00146A                     __end_ofi2_Transmit:
  7433                           	opt stack 0
  7434                           pclatu	equ	0xFFB
  7435                           pclath	equ	0xFFA
  7436                           tblptru	equ	0xFF8
  7437                           tblptrh	equ	0xFF7
  7438                           tblptrl	equ	0xFF6
  7439                           tablat	equ	0xFF5
  7440                           prodh	equ	0xFF4
  7441                           prodl	equ	0xFF3
  7442                           intcon	equ	0xFF2
  7443                           postinc0	equ	0xFEE
  7444                           fsr0h	equ	0xFEA
  7445                           fsr0l	equ	0xFE9
  7446                           wreg	equ	0xFE8
  7447                           postdec1	equ	0xFE5
  7448                           fsr1h	equ	0xFE2
  7449                           fsr1l	equ	0xFE1
  7450                           indf2	equ	0xFDF
  7451                           postinc2	equ	0xFDE
  7452                           postdec2	equ	0xFDD
  7453                           plusw2	equ	0xFDB
  7454                           fsr2h	equ	0xFDA
  7455                           fsr2l	equ	0xFD9
  7456                           status	equ	0xFD8
  7457                           pclatu	equ	0xFFB
  7458                           pclath	equ	0xFFA
  7459                           tblptru	equ	0xFF8
  7460                           tblptrh	equ	0xFF7
  7461                           tblptrl	equ	0xFF6
  7462                           tablat	equ	0xFF5
  7463                           prodh	equ	0xFF4
  7464                           prodl	equ	0xFF3
  7465                           intcon	equ	0xFF2
  7466                           postinc0	equ	0xFEE
  7467                           fsr0h	equ	0xFEA
  7468                           fsr0l	equ	0xFE9
  7469                           wreg	equ	0xFE8
  7470                           postdec1	equ	0xFE5
  7471                           fsr1h	equ	0xFE2
  7472                           fsr1l	equ	0xFE1
  7473                           indf2	equ	0xFDF
  7474                           postinc2	equ	0xFDE
  7475                           postdec2	equ	0xFDD
  7476                           plusw2	equ	0xFDB
  7477                           fsr2h	equ	0xFDA
  7478                           fsr2l	equ	0xFD9
  7479                           status	equ	0xFD8
  7480                           
  7481                           	psect	rparam
  7482  0000                     pclatu	equ	0xFFB
  7483                           pclath	equ	0xFFA
  7484                           tblptru	equ	0xFF8
  7485                           tblptrh	equ	0xFF7
  7486                           tblptrl	equ	0xFF6
  7487                           tablat	equ	0xFF5
  7488                           prodh	equ	0xFF4
  7489                           prodl	equ	0xFF3
  7490                           intcon	equ	0xFF2
  7491                           postinc0	equ	0xFEE
  7492                           fsr0h	equ	0xFEA
  7493                           fsr0l	equ	0xFE9
  7494                           wreg	equ	0xFE8
  7495                           postdec1	equ	0xFE5
  7496                           fsr1h	equ	0xFE2
  7497                           fsr1l	equ	0xFE1
  7498                           indf2	equ	0xFDF
  7499                           postinc2	equ	0xFDE
  7500                           postdec2	equ	0xFDD
  7501                           plusw2	equ	0xFDB
  7502                           fsr2h	equ	0xFDA
  7503                           fsr2l	equ	0xFD9
  7504                           status	equ	0xFD8
  7505                           
  7506                           	psect	temp
  7507  000042                     btemp:
  7508                           	opt stack 0
  7509  000042                     	ds	1
  7510  0000                     int$flags	set	btemp
  7511                           pclatu	equ	0xFFB
  7512                           pclath	equ	0xFFA
  7513                           tblptru	equ	0xFF8
  7514                           tblptrh	equ	0xFF7
  7515                           tblptrl	equ	0xFF6
  7516                           tablat	equ	0xFF5
  7517                           prodh	equ	0xFF4
  7518                           prodl	equ	0xFF3
  7519                           intcon	equ	0xFF2
  7520                           postinc0	equ	0xFEE
  7521                           fsr0h	equ	0xFEA
  7522                           fsr0l	equ	0xFE9
  7523                           wreg	equ	0xFE8
  7524                           postdec1	equ	0xFE5
  7525                           fsr1h	equ	0xFE2
  7526                           fsr1l	equ	0xFE1
  7527                           indf2	equ	0xFDF
  7528                           postinc2	equ	0xFDE
  7529                           postdec2	equ	0xFDD
  7530                           plusw2	equ	0xFDB
  7531                           fsr2h	equ	0xFDA
  7532                           fsr2l	equ	0xFD9
  7533                           status	equ	0xFD8


Data Sizes:
    Strings     77
    Constant    0
    Data        180
    BSS         28
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      65
    BANK0           160     31      42
    BANK1           256      0     180

Pointer List with Targets:

    Write_Display_Byte@write_data	PTR unsigned char  size(2) Largest target is 7
		 -> pixels(COMRAM[7]), 

    Evaluate_Display@evaluate	PTR unsigned char  size(2) Largest target is 3
		 -> signs(BANK0[3]), string_delete(BANK0[3]), string_load(BANK0[3]), 

    Set_Bits@bits	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[2]), STR_16(CODE[6]), 
		 -> STR_15(CODE[7]), STR_14(CODE[4]), STR_13(CODE[6]), STR_12(CODE[7]), 
		 -> STR_11(CODE[7]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[4]), 
		 -> STR_7(CODE[7]), STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[6]), 
		 -> STR_3(CODE[6]), STR_2(CODE[3]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Isr->i2_Set_Display
    i2_Set_Display->i2_Evaluate_Signs
    i2_Evaluate_Signs->i2_Evaluate_Display
    i2_Evaluate_Display->i2_Set_Bits
    i2_Check_Detonators->i2_Transmit
    _Ignite_Detonators->i2_Transmit

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _Check_Buttons->_Del_Data
    _Del_Data->_Load_Data
    _Load_Data->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits
    _Check_Detonators->_Transmit

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   31648
                      _Check_Buttons
                               _Init
                          _Load_Data
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0   21616
                                             29 BANK0      2     2      0
                   _Check_Detonators
                           _Del_Data
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (2) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Del_Data                                             1     1      0   12809
                                             28 BANK0      1     1      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Load_Data
                          _Save_Data
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     592
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Load_Data                                            2     2      0   10032
                                             26 BANK0      2     2      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Read_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (2) _Set_Display                                          4     1      3    7705
                                             22 BANK0      4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
                 _Write_Display_Byte
 ---------------------------------------------------------------------------------
 (3) _Write_Display_Byte                                   7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Signs                                       7     5      2    3071
                                             15 BANK0      7     5      2
                   _Evaluate_Display
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _Evaluate_Display                                     7     5      2    2018
                                              8 BANK0      7     5      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (5) _Set_Bits                                             8     6      2    1648
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2     111
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _Check_Detonators                                     0     0      0     331
                           _Transmit
 ---------------------------------------------------------------------------------
 (3) _Transmit                                             3     1      2     331
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Isr                                                 20    20      0    3454
                                             26 COMRAM    20    20      0
                  _Ignite_Detonators
                            _Receive
                       _Receive_Dump
                            ___awdiv
                 i2_Check_Detonators
                    i2_Delay_Routine
                      i2_Set_Display
 ---------------------------------------------------------------------------------
 (9) i2_Set_Display                                        4     1      3    2388
                                             22 COMRAM     4     1      3
                 i2_Evaluate_Display
                   i2_Evaluate_Signs
               i2_Write_Display_Byte
 ---------------------------------------------------------------------------------
 (10) i2_Write_Display_Byte                                7     5      2     116
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) i2_Evaluate_Signs                                    7     5      2    1296
                                             15 COMRAM     7     5      2
                 i2_Evaluate_Display
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) i2_Evaluate_Display                                  7     5      2     710
                                              8 COMRAM     7     5      2
                         i2_Set_Bits
 ---------------------------------------------------------------------------------
 (12) i2_Set_Bits                                          8     6      2     614
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (9) i2_Delay_Routine                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (9) i2_Check_Detonators                                   0     0      0     170
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) _Receive_Dump                                         1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Ignite_Detonators                                    3     3      0     282
                                              3 COMRAM     3     3      0
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (10) i2_Transmit                                          3     1      2     170
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Check_Detonators
       _Transmit
     _Del_Data
       _Delay_Routine
       _Evaluate_Display
         _Set_Bits
       _Load_Data
         _Delay_Routine
         _Evaluate_Display
           _Set_Bits
         _Read_Data
         _Set_Display
           _Evaluate_Display
             _Set_Bits
           _Evaluate_Signs
             _Evaluate_Display
               _Set_Bits
             ___lwdiv
             ___lwmod
           _Write_Display_Byte
       _Save_Data
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwdiv
         ___lwmod
       _Write_Display_Byte
     _Start_Timer
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Load_Data
     _Delay_Routine
     _Evaluate_Display
       _Set_Bits
     _Read_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwdiv
         ___lwmod
       _Write_Display_Byte

 _Isr (ROOT)
   _Ignite_Detonators
     i2_Transmit
   _Receive
   _Receive_Dump
   ___awdiv
   i2_Check_Detonators
     i2_Transmit
   i2_Delay_Routine
   i2_Set_Display
     i2_Evaluate_Display
       i2_Set_Bits
     i2_Evaluate_Signs
       i2_Evaluate_Display
         i2_Set_Bits
       i2___lwdiv
       i2___lwmod
     i2_Write_Display_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1F      2A       4       26.3%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2E      41       1       69.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11F       6        0.0%
DATA                 0      0     11F       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Feb 20 20:24:33 2017

        Evaluate_Display@evaluate 0068                        i2_Transmit 1412  
                              l99 02BA                      ___awdiv@sign 0006  
              i2___lwdiv@dividend 0001                      __CFG_CP0$OFF 000000  
                    __CFG_CP1$OFF 000000                               l103 0380  
                             l115 04EE                               l132 080A  
                             l109 043A                               l119 0676  
                             l522 13C2                               l362 14B2  
                             l531 13EE                               l428 0818  
                             l525 13CC                               l534 13FE  
                             l455 0EA8                               l359 1484  
                             l528 13DE                    ?i2_Set_Display 0017  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _Isr 0008                               _pin 0100  
                  _Evaluate_Signs 0DE8                               prod 000FF3  
                             wreg 000FE8                 Set_Bits@Bitoutput 0067  
                      _TXSTA1bits 000FAC                      __CFG_LVP$OFF 000000  
                            ?_Isr 0001                              l1037 11C0  
                            l1047 1354                              l3100 0888  
                            l3110 08E2                              l3102 089A  
                            l3120 093C                              l3112 08F4  
                            l3104 08AC                              l3122 094E  
                            l3114 0906                              l3106 08BE  
                            l3130 0A1C                              l3212 1746  
                            l3124 0960                              l3116 0918  
                            l3108 08D0                              l3140 117C  
                            l3070 0D1C                              l3062 0D04  
                            l3118 092A                              l3126 0972  
                            l3150 11B2                              l3142 1182  
                            l3208 1732                              l3072 0D22  
                            l3064 0D0A                              l3080 0D7E  
                            l3128 0A1A                              l3160 131C  
                            l3216 123C                              l3232 127C  
                            l3074 0D28                              l3066 0D10  
                            l3082 0D82                              l3090 082E  
                            l3138 1170                              l3162 1322  
                            l3234 1288                              l3068 0D16  
                            l3092 0840                              l3228 126E  
                            l3078 0D2E                              l3094 0852  
                            l3166 1346                              l3158 1310  
                            l3502 04BA                              l3096 0864  
                            l3088 081C                              l3280 0C10  
                            l3098 0876                              l3370 138E  
                            l3276 0C06                              l3380 13B0  
                            l3540 0594                              l3532 057C  
                            l3286 0C44                              l3374 1398  
                            l3462 034C                              l3536 0588  
                            l3528 0530                              l3616 181A  
                            l3546 05A4                              l3482 03A4  
                            l3458 02DE                              l3548 05BA  
                            l3590 0710                              l3582 06B8  
                            l3486 0406                              STR_1 0259  
                            STR_2 0299                              STR_3 027B  
                            STR_4 0275                              STR_5 0293  
                            STR_6 0281                              STR_7 026E  
                            STR_8 0298                              STR_9 0251  
                            u2607 13F4                              u2617 1404  
                            u2577 173A                              u2587 13D4  
                            u2597 13E4                              _Init 179E  
                            _main 1810                              fsr0h 000FEA  
                            fsr1h 000FE2                i2___lwdiv@quotient 0005  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 0042  
                   __CFG_BORV$190 000000                      Transmit@port 0061  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 024C  
                   __CFG_IESO$OFF 000000                    Save_Data@store 0060  
              _Write_Display_Byte 129A                      ___param_bank 000010  
                   _InitInterrupt 183E                       _string_load 0087  
                           ??_Isr 001B                   __end_of_Receive 183E  
             ?_Write_Display_Byte 0060                      _BAUDCON1bits 000FB8  
                           ?_Init 0001                             ?_main 0001  
                 __end_of___awdiv 1152                             _EEADR 000FA9  
                           STR_10 0260                             STR_11 0267  
                           STR_12 0259                             STR_13 028D  
                           STR_14 025C                             STR_15 0259  
                           STR_16 0287                             STR_17 0279  
                           STR_18 025A                             STR_19 029C  
          __end_of_Evaluate_Signs 0EBE                   ___awdiv@divisor 0003  
               _InitMiscellaneous 184A                   __end_of___lwdiv 11CA  
                 __end_of___lwmod 135E                             i2l522 141A  
                           i2l531 1446                             i2l428 0A2C  
                           i2l620 00A0                             i2l525 1424  
                           i2l534 1456                             i2l455 10BC  
                           i2l528 1436                             i2l544 182A  
                           i2l634 0210                             i2l619 00A4  
                 ___awdiv@counter 0005                 _Ignite_Detonators 11CA  
                           _TMR1H 000FCF                             _TMR3H 000FB3  
                           _TMR1L 000FCE                             _TMR3L 000FB2  
                           _PORTA 000F80                             _PORTB 000F81  
                           _PORTC 000F82                             _PORTE 000F84  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISE 000F96  
                   __CFG_WRT0$OFF 000000          __end_of_InitTransmission 177A  
                   __CFG_WRT1$OFF 000000                ?_InitMiscellaneous 0001  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                ?_Ignite_Detonators 0001  
               i2Set_Display@type 001A          __end_ofi2_Evaluate_Signs 10CE  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                  _Evaluate_Display 080E  
                  __CFG_EBTRB$OFF 000000                             _signs 0081  
              __CFG_MCLRE$EXTMCLR 000000              ??_Write_Display_Byte 0062  
                  __pbitbssCOMRAM 0200                    __CFG_BOREN$OFF 000000  
             ??_InitMiscellaneous 0060                             tablat 000FF5  
             ??_Ignite_Detonators 0004                             plusw2 000FDB  
                __end_of_Del_Data 13B8                             status 000FD8  
                ?i2_Delay_Routine 0001                       ?i2_Set_Bits 0001  
              __size_ofi2___lwdiv 0052                __size_ofi2___lwmod 0042  
                  ?_InitInterrupt 0001                   __initialization 15B6  
                    __end_of_Init 17BC                      __end_of_main 1820  
                     ?i2_Transmit 0001                  __end_of_InitPort 1810  
                __end_of_InitTris 17FE            Set_Display@information 0076  
       __end_of_InitMiscellaneous 1850                   ??i2_Set_Display 001A  
                          ??_Init 0060         __end_of_Ignite_Detonators 1236  
                   ??_Set_Display 0079                            ??_main 007F  
                __end_of_Set_Bits 0DE8                   ?_Evaluate_Signs 006F  
                   __activetblptr 000002        __end_ofi2_Evaluate_Display 0BD6  
                   ?_Receive_Dump 0001                  __end_of_Transmit 1412  
                          _EEDATA 000FA8                            _CCPR1H 000FBF  
                          _CCPR1L 000FBE                            _EECON2 000FA7  
                ___awdiv@dividend 0001                            _ANSELA 000F38  
                          _ANSELB 000F39                            _ANSELC 000F3A  
                          i2l1037 155E                            i2l1047 1678  
                          i2l3024 0170                            i2l2402 0EE4  
                          i2l2404 0F2E                            i2l2500 0A4C  
                          i2l3052 0202                            i2l3036 01D6  
                          i2l3028 01A6                            i2l2406 0F30  
                          i2l2510 0A92                            i2l2502 0A5A  
                          i2l3054 0206                            i2l2520 0AD8  
                          i2l2512 0AA0                            i2l2504 0A68  
                          i2l2530 0B1E                            i2l2522 0AE6  
                          i2l2514 0AAE                            i2l2506 0A76  
                          i2l3058 020C                            i2l2532 0B2C  
                          i2l2524 0AF4                            i2l2516 0ABC  
                          i2l2508 0A84                            i2l2390 0ED0  
                          i2l2526 0B02                            i2l2518 0ACA  
                          i2l2534 0B3A                            i2l2550 1538  
                  __CFG_WDTEN$OFF 000000                            i2l2392 0ED4  
                          i2l2528 0B10                            i2l2536 0BCC  
                          i2l2394 0ED8                            i2l2386 0EC8  
                          i2l2538 0BCE                            i2l2546 152C  
                          i2l2570 165A                            i2l2900 1110  
                          i2l2396 0EDC                            i2l2388 0ECC  
                          i2l2548 1534                            i2l2910 1130  
                          i2l2902 1114                            i2l2398 0EE0  
                          i2l2558 1554                            i2l2574 166E  
                          i2l2566 164E                            i2l2496 0A30  
                          i2l2568 1656                            i2l2914 113A  
                          i2l2498 0A3E                            i2l2924 1782  
                          i2l2862 1232                            i2l2854 11CE  
                          i2l2870 183A                            i2l2918 1148  
                          i2l2934 14C4                            i2l2950 14FE  
                          i2l2928 1792                            i2l2952 1508  
                          i2l2858 11D6                            i2l2946 14F0  
                          i2l2892 10F2                            i2l2972 005C  
                          i2l2886 10E2                            i2l2898 1108  
                          i2l2978 006E                            _RCREG1 000FAE  
              __size_of_Load_Data 0120                            _OSCCON 000FD3  
              __size_of_InitAnsel 0014                            _SPBRG1 000FAF  
                          _SSP1IF 007CF3                __size_of_Read_Data 004E  
              __size_of_InitTimer 0030                            _TXREG1 000FAD  
                       ??_Receive 0001                i2Set_Display@value 0018  
                  __CFG_XINST$OFF 000000                      _CCPTMRS0bits 000F49  
     __size_ofi2_Check_Detonators 0038                __size_of_Save_Data 0056  
                       ??___awdiv 0005                         ??___lwdiv 0064  
                       ??___lwmod 0064                            clear_0 15BC  
                          clear_1 15CA                  ___awdiv@quotient 0007  
                          _pixels 0039            __size_of_Check_Buttons 056E  
i2Evaluate_Signs@evaluation_value 0010    Evaluate_Signs@evaluation_value 006F  
                  ??_Receive_Dump 0001                 __end_ofi2___lwdiv 1568  
                    __mediumconst 0000                 __end_ofi2___lwmod 1682  
             __size_ofi2_Set_Bits 00C0                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
              i2Transmit@receiver 0003               __end_of_Set_Display 129A  
                 __CFG_HFOFST$OFF 000000               __size_ofi2_Transmit 0058  
            Isr@pixel_index_array 002C                        __accesstop 0060  
         __end_of__initialization 15F0                   __CFG_PBADEN$OFF 000000  
                 ??_InitInterrupt 0060                     ___rparam_used 000001  
                  i2Transmit@port 0002                i2___lwmod@dividend 0001  
                  __pcstackCOMRAM 0001         __size_of_Check_Detonators 003C  
                    __pidataBANK1 0F7E                     ??_Start_Timer 0060  
      __size_of_InitMiscellaneous 0006        __size_of_Ignite_Detonators 006C  
               __end_of_Load_Data 0CF6                 __end_of_InitAnsel 17EC  
               __end_of_Read_Data 15B6                 __end_of_InitTimer 1726  
                   _string_delete 0084                         ?_Del_Data 0001  
    __end_ofi2_Write_Display_Byte 1640                 __end_of_Save_Data 14C0  
                      __pbssBANK0 007F                Isr@pixel_index_bit 002D  
                 __CFG_PLLCFG$OFF 000000                     _Check_Buttons 02A0  
                       ?_InitPort 0001                         ?_InitTris 0001  
                      __pnvCOMRAM 0041                         ?_Set_Bits 0060  
              __CFG_CCP2MX$PORTC1 000000          __end_of_Evaluate_Display 0A24  
              __CFG_CCP3MX$PORTB5 000000                         ?_Transmit 0060  
                     _Set_Display 1236                        ??_Del_Data 007C  
          __size_of_Delay_Routine 0030               __end_of_Start_Timer 17D8  
               ?_InitTransmission 0001                 __CFG_PRICLKEN$OFF 000000  
                         _SSP1BUF 000FC9                 ?i2_Evaluate_Signs 0010  
              ??_InitTransmission 0060                ??i2_Evaluate_Signs 0012  
                  ?_Check_Buttons 0001                        ??_InitPort 0060  
                      ??_InitTris 0060       i2Write_Display_Byte@counter 0007  
                    ??i2_Set_Bits 0003                        ??_Set_Bits 0062  
                 __CFG_PWRTEN$OFF 000000                           _Receive 1830  
                         __Hparam 0000              __end_of_Receive_Dump 1830  
                         __Lparam 0000                  Load_Data@counter 007B  
                         ___awdiv 10CE                  ??_Evaluate_Signs 0071  
                    ??i2_Transmit 0003                  Receive_Dump@dump 0001  
                         ___lwdiv 1152                        ??_Transmit 0062  
                         ___lwmod 12FC                      __psmallconst 0250  
                 __CFG_STVREN$OFF 000000                           __pcinit 15B6  
                         __ramtop 0200                           __ptext0 1810  
                         __ptext1 179E                           __ptext2 17EC  
                         __ptext3 1756                           __ptext4 16F6  
                         __ptext5 17FE                           __ptext6 184A  
                         __ptext7 183E                           __ptext8 17D8  
                         __ptext9 02A0                         _T1CONbits 000FCD  
                    __size_of_Isr 0244                   Set_Display@type 0079  
                       _T3CONbits 000FB1                __end_ofi2_Set_Bits 0F7E  
                         _overrun 0202              end_of_initialization 15F0  
     __size_of_Write_Display_Byte 0062                __end_ofi2_Transmit 146A  
                   __Lmediumconst 0000                i2_Evaluate_Display 0A24  
                   _Delay_Routine 1726              i2_Write_Display_Byte 15FE  
             ?i2_Evaluate_Display 0009                         _RCSTAbits 000FAB  
                _Check_Detonators 1682                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc2 000FDE            i2Evaluate_Display@size 000F  
                     _Start_Timer 17BC          __size_ofi2_Delay_Routine 0024  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                       _PORTCbits 000F82               i2Transmit@operation 0001  
           __end_ofi2_Set_Display 1516                         _TRISCbits 000F94  
            ??i2_Evaluate_Display 000B                   ??_Check_Buttons 007D  
        Ignite_Detonators@counter 0006                 i2___lwdiv@divisor 0003  
                       i2___lwdiv 1516                         i2___lwmod 1640  
               i2___lwdiv@counter 0007                     _check_counter 0037  
                  ?_Delay_Routine 0001                       _CCP1CONbits 000FBD  
           ?i2_Write_Display_Byte 0001        __end_ofi2_Check_Detonators 16F6  
        i2Set_Display@information 0017                      Set_Bits@bits 0060  
             start_initialization 15B6                         _Load_Data 0BD6  
                       _InitAnsel 17D8                      _ignite_ready 0200  
               __size_of_Del_Data 005A                       __end_of_Isr 024C  
                       _Read_Data 1568                         _InitTimer 16F6  
                      ?i2___lwdiv 0001                        ?i2___lwmod 0001  
                Set_Bits@bitcount 0066             __size_of_Receive_Dump 0010  
                       _Save_Data 146A    i2Write_Display_Byte@write_data 0001  
               __size_of_InitPort 0012                 __size_of_InitTris 0012  
           __end_of_InitInterrupt 184A                 __size_of_Set_Bits 00F2  
               ?_Evaluate_Display 0068                       __pdataBANK1 0100  
              ??_Evaluate_Display 006A                    _slave_selected 0080  
               __size_of_Transmit 005A                      ?_Set_Display 0076  
          Save_Data@store_address 0062                       __pbssCOMRAM 002F  
                      ?_Load_Data 0001                        ?_InitAnsel 0001  
               ??i2_Delay_Routine 0001                     __pcstackBANK0 0060  
                    _Receive_Dump 1820                        ?_Read_Data 0060  
                      ?_InitTimer 0001                 i2___lwmod@divisor 0003  
               i2___lwmod@counter 0005                   ??_Delay_Routine 0060  
                      ?_Save_Data 0060            ??i2_Write_Display_Byte 0003  
                    _current_time 0035                  _master_addressed 0201  
                        ?_Receive 0001         __size_of_InitTransmission 0024  
                ___lwdiv@dividend 0060         __size_ofi2_Evaluate_Signs 009C  
           Read_Data@read_address 0064                         __pintcode 0008  
                        ?___awdiv 0001                          ?___lwdiv 0060  
                        ?___lwmod 0060                       __smallconst 0250  
                ___lwdiv@quotient 0065          __end_of_Check_Detonators 16BE  
                     ??i2___lwdiv 0005                       ??i2___lwmod 0005  
                        _PIE1bits 000F9D               i2Set_Bits@Bitoutput 0008  
                        i2u262_47 1788                          i2u263_47 142C  
                        i2u264_47 143C                          _PIR1bits 000F9E  
                        i2u265_47 144C                          i2u266_47 145C  
                        _PIR2bits 000FA1                          i2u196_44 0156  
                        i2u196_45 0152                          i2u198_44 0188  
                        i2u198_45 0184                  __CFG_WDTPS$32768 000000  
      i2Evaluate_Display@evaluate 0009                          _SSP1CON1 000FC6  
                        _SSP1STAT 000FC7                      ?_Start_Timer 0001  
                  i2Set_Bits@bits 0001                          _Del_Data 135E  
                     ??_Load_Data 007A                       ??_InitAnsel 0060  
                 _receive_counter 0038                       ??_Read_Data 0062  
                     ??_InitTimer 0060        __end_of_Write_Display_Byte 12FC  
                       copy_data0 15E4                          _InitPort 17FE  
                        _InitTris 17EC                       ??_Save_Data 0063  
               Transmit@operation 0060      i2Delay_Routine@delay_counter 0003  
                      _EECON1bits 000FA6                   Isr@search_index 002E  
                        _Set_Bits 0CF6                      _pin_selected 007F  
                        __Hrparam 0000                  __size_of_Receive 000E  
                        __Lrparam 0000                 __CFG_P2BMX$PORTB5 000000  
                        _Transmit 13B8                  __size_of___awdiv 0084  
                __size_of___lwdiv 0078                  __size_of___lwmod 0062  
    i2Evaluate_Signs@valuecounter 0016                i2_Check_Detonators 16BE  
            __size_of_Set_Display 0064           __size_of_Evaluate_Signs 00D6  
                 ___lwdiv@divisor 0062                   ___lwdiv@counter 0064  
     __size_ofi2_Evaluate_Display 01B2               ?i2_Check_Detonators 0001  
                        __ptext10 17BC                          __ptext11 135E  
                        __ptext20 0CF6                          __ptext12 146A  
                        __ptext21 1568                          __ptext13 0BD6  
                        __ptext30 1516                          __ptext22 1726  
                        __ptext14 1236                          __ptext31 0A24  
                        __ptext23 1682                          __ptext15 129A  
                        __ptext32 0EBE                          __ptext24 13B8  
                        __ptext16 0DE8                          __ptext33 177A  
                        __ptext17 12FC                          __ptext34 16BE  
                        __ptext26 14C0                          __ptext18 1152  
                        __ptext35 10CE                          __ptext27 15FE  
                        __ptext19 080E                          __ptext36 1820  
                        __ptext28 1032                          __ptext37 1830  
                        __ptext29 1640                          __ptext38 11CA  
                        __ptext39 1412             __end_of_Check_Buttons 080E  
                Set_Display@value 0077                     __size_of_Init 001E  
                   __size_of_main 0010                          _received 002F  
          __size_ofi2_Set_Display 0056                  _InitTransmission 1756  
      Delay_Routine@delay_counter 0062                  i2_Evaluate_Signs 1032  
            ??i2_Check_Detonators 0004                          _testflag 0203  
                        int$flags 0042                   i2_Delay_Routine 177A  
            Evaluate_Display@size 006E                  Transmit@receiver 0062  
    Write_Display_Byte@write_data 0060        Evaluate_Signs@valuecounter 0075  
                      _INTCONbits 000FF2         __size_of_Evaluate_Display 0216  
              Read_Data@data_read 0062                          intlevel2 0000  
                ___lwmod@dividend 0060         Write_Display_Byte@counter 0066  
                      _RCSTA1bits 000FAB                   _display_counter 0041  
              i2Set_Bits@bitcount 0007                   Del_Data@counter 007C  
            __size_of_Start_Timer 001C                     i2_Set_Display 14C0  
                 ___lwmod@divisor 0062   i2Delay_Routine@delay_multiplyer 0002  
   Delay_Routine@delay_multiplyer 0061                   ___lwmod@counter 0064  
               __CFG_T3CMX$PORTC0 000000            __size_of_InitInterrupt 000C  
               ?_Check_Detonators 0001                ??_Check_Detonators 0063  
           __end_of_Delay_Routine 1756                 __CFG_FOSC$INTIO67 000000  
         __end_ofi2_Delay_Routine 179E                        i2_Set_Bits 0EBE  
   __size_ofi2_Write_Display_Byte 0042  
