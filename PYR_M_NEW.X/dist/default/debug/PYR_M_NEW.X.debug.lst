

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Oct 13 20:29:20 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           	psect	idataBANK0
    30  00031C                     __pidataBANK0:
    31                           	opt stack 0
    32                           
    33                           ;initializer for _pin
    34  00031C  00                 	db	0
    35  00031D  00                 	db	0
    36  00031E  00                 	db	0
    37  00031F  00                 	db	0
    38  000320  00                 	db	0
    39  000321  00                 	db	0
    40  000322  01                 	db	1
    41  000323  01                 	db	1
    42  000324  00                 	db	0
    43  000325  00                 	db	0
    44  000326  00                 	db	0
    45  000327  02                 	db	2
    46  000328  02                 	db	2
    47  000329  00                 	db	0
    48  00032A  00                 	db	0
    49  00032B  00                 	db	0
    50  00032C  03                 	db	3
    51  00032D  03                 	db	3
    52  00032E  00                 	db	0
    53  00032F  00                 	db	0
    54  000330  00                 	db	0
    55  000331  04                 	db	4
    56  000332  04                 	db	4
    57  000333  00                 	db	0
    58  000334  00                 	db	0
    59  000335  00                 	db	0
    60  000336  05                 	db	5
    61  000337  05                 	db	5
    62  000338  00                 	db	0
    63  000339  00                 	db	0
    64  00033A  00                 	db	0
    65  00033B  06                 	db	6
    66  00033C  06                 	db	6
    67  00033D  00                 	db	0
    68  00033E  00                 	db	0
    69  00033F  00                 	db	0
    70  000340  07                 	db	7
    71  000341  07                 	db	7
    72  000342  00                 	db	0
    73  000343  00                 	db	0
    74  000344  00                 	db	0
    75  000345  08                 	db	8
    76  000346  08                 	db	8
    77  000347  00                 	db	0
    78  000348  00                 	db	0
    79  000349  00                 	db	0
    80  00034A  09                 	db	9
    81  00034B  09                 	db	9
    82  00034C  00                 	db	0
    83  00034D  00                 	db	0
    84  00034E  01                 	db	1
    85  00034F  00                 	db	0
    86  000350  0A                 	db	10
    87  000351  00                 	db	0
    88  000352  00                 	db	0
    89  000353  01                 	db	1
    90  000354  01                 	db	1
    91  000355  0B                 	db	11
    92  000356  00                 	db	0
    93  000357  00                 	db	0
    94  000358  01                 	db	1
    95  000359  02                 	db	2
    96  00035A  0C                 	db	12
    97  00035B  00                 	db	0
    98  00035C  00                 	db	0
    99  00035D  01                 	db	1
   100  00035E  03                 	db	3
   101  00035F  0D                 	db	13
   102  000360  00                 	db	0
   103  000361  00                 	db	0
   104  000362  01                 	db	1
   105  000363  04                 	db	4
   106  000364  0E                 	db	14
   107  000365  00                 	db	0
   108  000366  00                 	db	0
   109  000367  01                 	db	1
   110  000368  05                 	db	5
   111  000369  0F                 	db	15
   112  00036A  00                 	db	0
   113  00036B  00                 	db	0
   114  00036C  01                 	db	1
   115  00036D  06                 	db	6
   116  00036E  10                 	db	16
   117  00036F  00                 	db	0
   118  000370  00                 	db	0
   119  000371  01                 	db	1
   120  000372  07                 	db	7
   121  000373  11                 	db	17
   122  000374  00                 	db	0
   123  000375  00                 	db	0
   124  000376  01                 	db	1
   125  000377  08                 	db	8
   126  000378  12                 	db	18
   127  000379  00                 	db	0
   128  00037A  00                 	db	0
   129  00037B  01                 	db	1
   130  00037C  09                 	db	9
   131  00037D  13                 	db	19
   132  00037E  00                 	db	0
   133  00037F  00                 	db	0
   134  000380  02                 	db	2
   135  000381  00                 	db	0
   136  000382  14                 	db	20
   137  000383  00                 	db	0
   138  000384  00                 	db	0
   139  000385  02                 	db	2
   140  000386  01                 	db	1
   141  000387  15                 	db	21
   142  000388  00                 	db	0
   143  000389  00                 	db	0
   144  00038A  02                 	db	2
   145  00038B  02                 	db	2
   146  00038C  16                 	db	22
   147  00038D  00                 	db	0
   148  00038E  00                 	db	0
   149  00038F  02                 	db	2
   150  000390  03                 	db	3
   151  000391  17                 	db	23
   152  000392  00                 	db	0
   153  000393  00                 	db	0
   154  000394  02                 	db	2
   155  000395  04                 	db	4
   156  000396  18                 	db	24
   157  000397  00                 	db	0
   158  000398  00                 	db	0
   159  000399  02                 	db	2
   160  00039A  05                 	db	5
   161  00039B  19                 	db	25
   162  00039C  00                 	db	0
   163  00039D  00                 	db	0
   164  00039E  02                 	db	2
   165  00039F  06                 	db	6
   166  0003A0  1A                 	db	26
   167  0003A1  00                 	db	0
   168  0003A2  00                 	db	0
   169  0003A3  02                 	db	2
   170  0003A4  07                 	db	7
   171  0003A5  1B                 	db	27
   172  0003A6  00                 	db	0
   173  0003A7  00                 	db	0
   174  0003A8  02                 	db	2
   175  0003A9  08                 	db	8
   176  0003AA  1C                 	db	28
   177  0003AB  00                 	db	0
   178  0003AC  00                 	db	0
   179  0003AD  02                 	db	2
   180  0003AE  09                 	db	9
   181  0003AF  1D                 	db	29
   182  0003B0  00                 	db	0
   183  0003B1  00                 	db	0
   184  0000                     _ANSELA	set	3896
   185  0000                     _ANSELB	set	3897
   186  0000                     _ANSELC	set	3898
   187  0000                     _CCPTMRS0bits	set	3913
   188  0000                     _BAUDCON1bits	set	4024
   189  0000                     _CCP1CONbits	set	4029
   190  0000                     _CCPR1H	set	4031
   191  0000                     _CCPR1L	set	4030
   192  0000                     _EEADR	set	4009
   193  0000                     _EECON1bits	set	4006
   194  0000                     _EECON2	set	4007
   195  0000                     _EEDATA	set	4008
   196  0000                     _INTCONbits	set	4082
   197  0000                     _OSCCON	set	4051
   198  0000                     _PIE1bits	set	3997
   199  0000                     _PIR1bits	set	3998
   200  0000                     _PIR2bits	set	4001
   201  0000                     _PORTA	set	3968
   202  0000                     _PORTAbits	set	3968
   203  0000                     _PORTB	set	3969
   204  0000                     _PORTBbits	set	3969
   205  0000                     _PORTC	set	3970
   206  0000                     _PORTCbits	set	3970
   207  0000                     _PORTE	set	3972
   208  0000                     _RCREG1	set	4014
   209  0000                     _RCSTA1bits	set	4011
   210  0000                     _SPBRG1	set	4015
   211  0000                     _SSP1CON1	set	4038
   212  0000                     _SSP1STAT	set	4039
   213  0000                     _T1CONbits	set	4045
   214  0000                     _T3CONbits	set	4017
   215  0000                     _TMR1H	set	4047
   216  0000                     _TMR1L	set	4046
   217  0000                     _TRISA	set	3986
   218  0000                     _TRISB	set	3987
   219  0000                     _TRISC	set	3988
   220  0000                     _TRISCbits	set	3988
   221  0000                     _TRISE	set	3990
   222  0000                     _TXREG1	set	4013
   223  0000                     _TXSTA1bits	set	4012
   224                           
   225                           ; #config settings
   226  0000                     
   227                           	psect	cinit
   228  000406                     __pcinit:
   229                           	opt stack 0
   230  000406                     start_initialization:
   231                           	opt stack 0
   232  000406                     __initialization:
   233                           	opt stack 0
   234                           
   235                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   236  000406  6A1A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   237                           
   238                           ; Clear objects allocated to COMRAM (5 bytes)
   239  000408  6A19               	clrf	(__pbssCOMRAM+4)& (0+255),c
   240  00040A  6A18               	clrf	(__pbssCOMRAM+3)& (0+255),c
   241  00040C  6A17               	clrf	(__pbssCOMRAM+2)& (0+255),c
   242  00040E  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
   243  000410  6A15               	clrf	__pbssCOMRAM& (0+255),c
   244                           
   245                           ; Initialize objects allocated to BANK0 (150 bytes)
   246                           ; load TBLPTR registers with __pidataBANK0
   247  000412  0E1C               	movlw	low __pidataBANK0
   248  000414  6EF6               	movwf	tblptrl,c
   249  000416  0E03               	movlw	high __pidataBANK0
   250  000418  6EF7               	movwf	tblptrh,c
   251  00041A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   252  00041C  6EF8               	movwf	tblptru,c
   253  00041E  EE00  F060         	lfsr	0,__pdataBANK0
   254  000422  EE10 F096          	lfsr	1,150
   255  000426                     copy_data0:
   256  000426  0009               	tblrd		*+
   257  000428  CFF5 FFEE          	movff	tablat,postinc0
   258  00042C  50E5               	movf	postdec1,w,c
   259  00042E  50E1               	movf	fsr1l,w,c
   260  000430  E1FA               	bnz	copy_data0
   261  000432                     end_of_initialization:
   262                           	opt stack 0
   263  000432                     __end_of__initialization:
   264                           	opt stack 0
   265  000432  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   266  000434  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   267  000436  0E00               	movlw	low (__Lmediumconst shr (0+16))
   268  000438  6EF8               	movwf	tblptru,c
   269  00043A  0100               	movlb	0
   270  00043C  EF8A  F002         	goto	_main	;jump to C main() function
   271                           tblptru	equ	0xFF8
   272                           tblptrh	equ	0xFF7
   273                           tblptrl	equ	0xFF6
   274                           tablat	equ	0xFF5
   275                           postinc0	equ	0xFEE
   276                           postdec1	equ	0xFE5
   277                           fsr1l	equ	0xFE1
   278                           
   279                           	psect	bitbssCOMRAM
   280  0000D0                     __pbitbssCOMRAM:
   281                           	opt stack 0
   282  0000D0                     _ignite_ready:
   283                           	opt stack 0
   284  0000D0                     	ds	1
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           	psect	bssCOMRAM
   294  000015                     __pbssCOMRAM:
   295                           	opt stack 0
   296  000015                     _current_time:
   297                           	opt stack 0
   298  000015                     	ds	2
   299  000017                     _overrun:
   300                           	opt stack 0
   301  000017                     	ds	1
   302  000018                     _pin_selected:
   303                           	opt stack 0
   304  000018                     	ds	1
   305  000019                     _slave_selected:
   306                           	opt stack 0
   307  000019                     	ds	1
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	dataBANK0
   317  000060                     __pdataBANK0:
   318                           	opt stack 0
   319  000060                     _pin:
   320                           	opt stack 0
   321  000060                     	ds	150
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           postdec1	equ	0xFE5
   328                           fsr1l	equ	0xFE1
   329                           
   330                           	psect	cstackCOMRAM
   331  000001                     __pcstackCOMRAM:
   332                           	opt stack 0
   333  000001                     ??_Isr:
   334  000001                     
   335                           ; 1 bytes @ 0x0
   336  000001                     	ds	14
   337  00000F                     Isr@received:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0xE
   341  00000F                     	ds	1
   342  000010                     ??_Delay_Routine:
   343  000010                     Save_Data@store:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0xF
   347  000010                     	ds	1
   348  000011                     Delay_Routine@delay_multiplyer:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x10
   352  000011                     	ds	1
   353  000012                     Delay_Routine@delay_counter:
   354                           	opt stack 0
   355  000012                     Save_Data@store_address:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x11
   359  000012                     	ds	1
   360  000013                     
   361                           ; 0 bytes @ 0x12
   362  000013                     	ds	2
   363  000015                     tblptru	equ	0xFF8
   364                           tblptrh	equ	0xFF7
   365                           tblptrl	equ	0xFF6
   366                           tablat	equ	0xFF5
   367                           postinc0	equ	0xFEE
   368                           postdec1	equ	0xFE5
   369                           fsr1l	equ	0xFE1
   370                           
   371                           ; 0 bytes @ 0x14
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 80 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;		None               void
   384 ;; Registers used:
   385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1
   391 ;;      Params:         0       0       0
   392 ;;      Locals:         0       0       0
   393 ;;      Temps:          0       0       0
   394 ;;      Totals:         0       0       0
   395 ;;Total ram usage:        0 bytes
   396 ;; Hardware stack levels required when called:    4
   397 ;; This function calls:
   398 ;;		_Check_Buttons
   399 ;;		_Init
   400 ;; This function is called by:
   401 ;;		Startup code after reset
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	text0
   406  000514                     __ptext0:
   407                           	opt stack 0
   408  000514                     _main:
   409                           	opt stack 27
   410                           
   411                           ;main.c: 81: Init();
   412                           
   413                           ;incstack = 0
   414  000514  EC57  F002         	call	_Init	;wreg free
   415  000518                     l1244:
   416                           
   417                           ;main.c: 83: Check_Buttons();
   418  000518  EC5A  F000         	call	_Check_Buttons	;wreg free
   419  00051C  D7FD               	goto	l1244
   420  00051E                     __end_of_main:
   421                           	opt stack 0
   422                           tblptru	equ	0xFF8
   423                           tblptrh	equ	0xFF7
   424                           tblptrl	equ	0xFF6
   425                           tablat	equ	0xFF5
   426                           postinc0	equ	0xFEE
   427                           postdec1	equ	0xFE5
   428                           fsr1l	equ	0xFE1
   429                           
   430 ;; *************** function _Init *****************
   431 ;; Defined at:
   432 ;;		line 3 in file "init.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;		None               void
   439 ;; Registers used:
   440 ;;		wreg, status,2, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMRAM   BANK0   BANK1
   446 ;;      Params:         0       0       0
   447 ;;      Locals:         0       0       0
   448 ;;      Temps:          0       0       0
   449 ;;      Totals:         0       0       0
   450 ;;Total ram usage:        0 bytes
   451 ;; Hardware stack levels used:    1
   452 ;; Hardware stack levels required when called:    3
   453 ;; This function calls:
   454 ;;		_InitAnsel
   455 ;;		_InitInterrupt
   456 ;;		_InitMiscellaneous
   457 ;;		_InitPort
   458 ;;		_InitTimer
   459 ;;		_InitTransmission
   460 ;;		_InitTris
   461 ;; This function is called by:
   462 ;;		_main
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           	psect	text1
   467  0004AE                     __ptext1:
   468                           	opt stack 0
   469  0004AE                     _Init:
   470                           	opt stack 27
   471                           
   472                           ;init.c: 4: InitPort();
   473                           
   474                           ;incstack = 0
   475  0004AE  EC79  F002         	call	_InitPort	;wreg free
   476                           
   477                           ;init.c: 5: InitTris();
   478  0004B2  EC70  F002         	call	_InitTris	;wreg free
   479                           
   480                           ;init.c: 6: InitAnsel();
   481  0004B6  EC66  F002         	call	_InitAnsel	;wreg free
   482                           
   483                           ;init.c: 7: InitMiscellaneous();
   484  0004BA  EC94  F002         	call	_InitMiscellaneous	;wreg free
   485                           
   486                           ;init.c: 8: InitTransmission();
   487  0004BE  EC34  F002         	call	_InitTransmission	;wreg free
   488                           
   489                           ;init.c: 9: InitTimer();
   490  0004C2  EC20  F002         	call	_InitTimer	;wreg free
   491                           
   492                           ;init.c: 10: InitInterrupt();
   493  0004C6  EC8F  F002         	call	_InitInterrupt	;wreg free
   494  0004CA  0012               	return		;funcret
   495  0004CC                     __end_of_Init:
   496                           	opt stack 0
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           postinc0	equ	0xFEE
   502                           postdec1	equ	0xFE5
   503                           fsr1l	equ	0xFE1
   504                           
   505 ;; *************** function _InitTris *****************
   506 ;; Defined at:
   507 ;;		line 20 in file "init.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;		None               void
   514 ;; Registers used:
   515 ;;		wreg, status,2
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1
   521 ;;      Params:         0       0       0
   522 ;;      Locals:         0       0       0
   523 ;;      Temps:          0       0       0
   524 ;;      Totals:         0       0       0
   525 ;;Total ram usage:        0 bytes
   526 ;; Hardware stack levels used:    1
   527 ;; Hardware stack levels required when called:    2
   528 ;; This function calls:
   529 ;;		Nothing
   530 ;; This function is called by:
   531 ;;		_Init
   532 ;; This function uses a non-reentrant model
   533 ;;
   534                           
   535                           	psect	text2
   536  0004E0                     __ptext2:
   537                           	opt stack 0
   538  0004E0                     _InitTris:
   539                           	opt stack 27
   540                           
   541                           ;init.c: 21: TRISA = 0b00000000;
   542                           
   543                           ;incstack = 0
   544  0004E0  0E00               	movlw	0
   545  0004E2  6E92               	movwf	3986,c	;volatile
   546                           
   547                           ;init.c: 22: TRISB = 0b00011111;
   548  0004E4  0E1F               	movlw	31
   549  0004E6  6E93               	movwf	3987,c	;volatile
   550                           
   551                           ;init.c: 23: TRISC = 0b10000010;
   552  0004E8  0E82               	movlw	130
   553  0004EA  6E94               	movwf	3988,c	;volatile
   554                           
   555                           ;init.c: 24: TRISE = 0;
   556  0004EC  0E00               	movlw	0
   557  0004EE  6E96               	movwf	3990,c	;volatile
   558  0004F0  0012               	return		;funcret
   559  0004F2                     __end_of_InitTris:
   560                           	opt stack 0
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           postinc0	equ	0xFEE
   566                           postdec1	equ	0xFE5
   567                           fsr1l	equ	0xFE1
   568                           
   569 ;; *************** function _InitTransmission *****************
   570 ;; Defined at:
   571 ;;		line 37 in file "init.c"
   572 ;; Parameters:    Size  Location     Type
   573 ;;		None
   574 ;; Auto vars:     Size  Location     Type
   575 ;;		None
   576 ;; Return value:  Size  Location     Type
   577 ;;		None               void
   578 ;; Registers used:
   579 ;;		wreg, status,2
   580 ;; Tracked objects:
   581 ;;		On entry : 0/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMRAM   BANK0   BANK1
   585 ;;      Params:         0       0       0
   586 ;;      Locals:         0       0       0
   587 ;;      Temps:          0       0       0
   588 ;;      Totals:         0       0       0
   589 ;;Total ram usage:        0 bytes
   590 ;; Hardware stack levels used:    1
   591 ;; Hardware stack levels required when called:    2
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_Init
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text3
   600  000468                     __ptext3:
   601                           	opt stack 0
   602  000468                     _InitTransmission:
   603                           	opt stack 27
   604                           
   605                           ;init.c: 39: SSP1STAT = 0b01000000;
   606                           
   607                           ;incstack = 0
   608  000468  0E40               	movlw	64
   609  00046A  6EC7               	movwf	4039,c	;volatile
   610                           
   611                           ;init.c: 40: SSP1CON1 = 0b00100010;
   612  00046C  0E22               	movlw	34
   613  00046E  6EC6               	movwf	4038,c	;volatile
   614                           
   615                           ;init.c: 42: TXSTA1bits.SYNC = 0;
   616  000470  98AC               	bcf	4012,4,c	;volatile
   617                           
   618                           ;init.c: 43: TXSTA1bits.BRGH = 1;
   619  000472  84AC               	bsf	4012,2,c	;volatile
   620                           
   621                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
   622  000474  96B8               	bcf	4024,3,c	;volatile
   623                           
   624                           ;init.c: 45: SPBRG1 = 25;
   625  000476  0E19               	movlw	25
   626  000478  6EAF               	movwf	4015,c	;volatile
   627                           
   628                           ;init.c: 46: TRISCbits.RC6 = 1;
   629  00047A  8C94               	bsf	3988,6,c	;volatile
   630                           
   631                           ;init.c: 47: TRISCbits.RC7 = 1;
   632  00047C  8E94               	bsf	3988,7,c	;volatile
   633                           
   634                           ;init.c: 48: RCSTA1bits.SPEN = 1;
   635  00047E  8EAB               	bsf	4011,7,c	;volatile
   636                           
   637                           ;init.c: 49: TXSTA1bits.TX9 = 1;
   638  000480  8CAC               	bsf	4012,6,c	;volatile
   639                           
   640                           ;init.c: 50: TXSTA1bits.TXEN = 1;
   641  000482  8AAC               	bsf	4012,5,c	;volatile
   642                           
   643                           ;init.c: 51: RCSTA1bits.RC9 = 1;
   644  000484  8CAB               	bsf	4011,6,c	;volatile
   645                           
   646                           ;init.c: 52: RCSTA1bits.CREN = 1;
   647  000486  88AB               	bsf	4011,4,c	;volatile
   648                           
   649                           ;init.c: 53: TRISCbits.RC6 = 0;
   650  000488  9C94               	bcf	3988,6,c	;volatile
   651  00048A  0012               	return		;funcret
   652  00048C                     __end_of_InitTransmission:
   653                           	opt stack 0
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           tblptrl	equ	0xFF6
   657                           tablat	equ	0xFF5
   658                           postinc0	equ	0xFEE
   659                           postdec1	equ	0xFE5
   660                           fsr1l	equ	0xFE1
   661                           
   662 ;; *************** function _InitTimer *****************
   663 ;; Defined at:
   664 ;;		line 56 in file "init.c"
   665 ;; Parameters:    Size  Location     Type
   666 ;;		None
   667 ;; Auto vars:     Size  Location     Type
   668 ;;		None
   669 ;; Return value:  Size  Location     Type
   670 ;;		None               void
   671 ;; Registers used:
   672 ;;		wreg, status,2
   673 ;; Tracked objects:
   674 ;;		On entry : 0/0
   675 ;;		On exit  : 0/0
   676 ;;		Unchanged: 0/0
   677 ;; Data sizes:     COMRAM   BANK0   BANK1
   678 ;;      Params:         0       0       0
   679 ;;      Locals:         0       0       0
   680 ;;      Temps:          0       0       0
   681 ;;      Totals:         0       0       0
   682 ;;Total ram usage:        0 bytes
   683 ;; Hardware stack levels used:    1
   684 ;; Hardware stack levels required when called:    2
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_Init
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text4
   693  000440                     __ptext4:
   694                           	opt stack 0
   695  000440                     _InitTimer:
   696                           	opt stack 27
   697                           
   698                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
   699                           
   700                           ;incstack = 0
   701  000440  0E3F               	movlw	-193
   702  000442  16CD               	andwf	4045,f,c	;volatile
   703                           
   704                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
   705  000444  0E30               	movlw	48
   706  000446  12CD               	iorwf	4045,f,c	;volatile
   707                           
   708                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
   709  000448  94CD               	bcf	4045,2,c	;volatile
   710                           
   711                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
   712  00044A  0E3F               	movlw	-193
   713  00044C  16B1               	andwf	4017,f,c	;volatile
   714                           
   715                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
   716  00044E  0E30               	movlw	48
   717  000450  12B1               	iorwf	4017,f,c	;volatile
   718                           
   719                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
   720  000452  94B1               	bcf	4017,2,c	;volatile
   721                           
   722                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
   723  000454  50BD               	movf	4029,w,c	;volatile
   724  000456  0BF0               	andlw	-16
   725  000458  090A               	iorlw	10
   726  00045A  6EBD               	movwf	4029,c	;volatile
   727                           
   728                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
   729  00045C  010F               	movlb	15	; () banked
   730  00045E  5149               	movf	73,w,b	;volatile
   731  000460  0BFC               	andlw	-4
   732  000462  0901               	iorlw	1
   733  000464  6F49               	movwf	73,b	;volatile
   734                           
   735                           ; BSR set to: 15
   736  000466  0012               	return		;funcret
   737  000468                     __end_of_InitTimer:
   738                           	opt stack 0
   739                           tblptru	equ	0xFF8
   740                           tblptrh	equ	0xFF7
   741                           tblptrl	equ	0xFF6
   742                           tablat	equ	0xFF5
   743                           postinc0	equ	0xFEE
   744                           postdec1	equ	0xFE5
   745                           fsr1l	equ	0xFE1
   746                           
   747 ;; *************** function _InitPort *****************
   748 ;; Defined at:
   749 ;;		line 13 in file "init.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;		None               void
   756 ;; Registers used:
   757 ;;		wreg, status,2
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1
   763 ;;      Params:         0       0       0
   764 ;;      Locals:         0       0       0
   765 ;;      Temps:          0       0       0
   766 ;;      Totals:         0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used:    1
   769 ;; Hardware stack levels required when called:    2
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_Init
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           
   777                           	psect	text5
   778  0004F2                     __ptext5:
   779                           	opt stack 0
   780  0004F2                     _InitPort:
   781                           	opt stack 27
   782                           
   783                           ;init.c: 14: PORTA = 0b00000000;
   784                           
   785                           ; BSR set to: 15
   786                           ;incstack = 0
   787  0004F2  0E00               	movlw	0
   788  0004F4  6E80               	movwf	3968,c	;volatile
   789                           
   790                           ;init.c: 15: PORTB = 0b00000000;
   791  0004F6  0E00               	movlw	0
   792  0004F8  6E81               	movwf	3969,c	;volatile
   793                           
   794                           ;init.c: 16: PORTC = 0b00000001;
   795  0004FA  0E01               	movlw	1
   796  0004FC  6E82               	movwf	3970,c	;volatile
   797                           
   798                           ;init.c: 17: PORTE = 0;
   799  0004FE  0E00               	movlw	0
   800  000500  6E84               	movwf	3972,c	;volatile
   801  000502  0012               	return		;funcret
   802  000504                     __end_of_InitPort:
   803                           	opt stack 0
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           postinc0	equ	0xFEE
   809                           postdec1	equ	0xFE5
   810                           fsr1l	equ	0xFE1
   811                           
   812 ;; *************** function _InitMiscellaneous *****************
   813 ;; Defined at:
   814 ;;		line 33 in file "init.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;		None               void
   821 ;; Registers used:
   822 ;;		wreg, status,2
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1
   828 ;;      Params:         0       0       0
   829 ;;      Locals:         0       0       0
   830 ;;      Temps:          0       0       0
   831 ;;      Totals:         0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    2
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_Init
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text6
   843  000528                     __ptext6:
   844                           	opt stack 0
   845  000528                     _InitMiscellaneous:
   846                           	opt stack 27
   847                           
   848                           ;init.c: 34: OSCCON = 0b01010011;
   849                           
   850                           ;incstack = 0
   851  000528  0E53               	movlw	83
   852  00052A  6ED3               	movwf	4051,c	;volatile
   853  00052C  0012               	return		;funcret
   854  00052E                     __end_of_InitMiscellaneous:
   855                           	opt stack 0
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           tblptrl	equ	0xFF6
   859                           tablat	equ	0xFF5
   860                           postinc0	equ	0xFEE
   861                           postdec1	equ	0xFE5
   862                           fsr1l	equ	0xFE1
   863                           
   864 ;; *************** function _InitInterrupt *****************
   865 ;; Defined at:
   866 ;;		line 70 in file "init.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;		None               void
   873 ;; Registers used:
   874 ;;		None
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMRAM   BANK0   BANK1
   880 ;;      Params:         0       0       0
   881 ;;      Locals:         0       0       0
   882 ;;      Temps:          0       0       0
   883 ;;      Totals:         0       0       0
   884 ;;Total ram usage:        0 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    2
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_Init
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text7
   895  00051E                     __ptext7:
   896                           	opt stack 0
   897  00051E                     _InitInterrupt:
   898                           	opt stack 27
   899                           
   900                           ;init.c: 71: INTCONbits.GIE = 1;
   901                           
   902                           ;incstack = 0
   903  00051E  8EF2               	bsf	intcon,7,c	;volatile
   904                           
   905                           ;init.c: 72: INTCONbits.PEIE = 1;
   906  000520  8CF2               	bsf	intcon,6,c	;volatile
   907                           
   908                           ;init.c: 73: PIE1bits.RCIE = 1;
   909  000522  8A9D               	bsf	3997,5,c	;volatile
   910                           
   911                           ;init.c: 74: PIE1bits.CCP1IE = 1;
   912  000524  849D               	bsf	3997,2,c	;volatile
   913  000526  0012               	return		;funcret
   914  000528                     __end_of_InitInterrupt:
   915                           	opt stack 0
   916                           tblptru	equ	0xFF8
   917                           tblptrh	equ	0xFF7
   918                           tblptrl	equ	0xFF6
   919                           tablat	equ	0xFF5
   920                           intcon	equ	0xFF2
   921                           postinc0	equ	0xFEE
   922                           postdec1	equ	0xFE5
   923                           fsr1l	equ	0xFE1
   924                           
   925 ;; *************** function _InitAnsel *****************
   926 ;; Defined at:
   927 ;;		line 27 in file "init.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;		None               void
   934 ;; Registers used:
   935 ;;		wreg, status,2
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1
   941 ;;      Params:         0       0       0
   942 ;;      Locals:         0       0       0
   943 ;;      Temps:          0       0       0
   944 ;;      Totals:         0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    2
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_Init
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text8
   956  0004CC                     __ptext8:
   957                           	opt stack 0
   958  0004CC                     _InitAnsel:
   959                           	opt stack 27
   960                           
   961                           ;init.c: 28: ANSELA = 0;
   962                           
   963                           ;incstack = 0
   964  0004CC  0E00               	movlw	0
   965  0004CE  010F               	movlb	15	; () banked
   966  0004D0  6F38               	movwf	56,b	;volatile
   967                           
   968                           ;init.c: 29: ANSELB = 0;
   969  0004D2  0E00               	movlw	0
   970  0004D4  010F               	movlb	15	; () banked
   971  0004D6  6F39               	movwf	57,b	;volatile
   972                           
   973                           ;init.c: 30: ANSELC = 0;
   974  0004D8  0E00               	movlw	0
   975  0004DA  010F               	movlb	15	; () banked
   976  0004DC  6F3A               	movwf	58,b	;volatile
   977                           
   978                           ; BSR set to: 15
   979  0004DE  0012               	return		;funcret
   980  0004E0                     __end_of_InitAnsel:
   981                           	opt stack 0
   982                           tblptru	equ	0xFF8
   983                           tblptrh	equ	0xFF7
   984                           tblptrl	equ	0xFF6
   985                           tablat	equ	0xFF5
   986                           intcon	equ	0xFF2
   987                           postinc0	equ	0xFEE
   988                           postdec1	equ	0xFE5
   989                           fsr1l	equ	0xFE1
   990                           
   991 ;; *************** function _Check_Buttons *****************
   992 ;; Defined at:
   993 ;;		line 3 in file "buttonchanges.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;		None               void
  1000 ;; Registers used:
  1001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1
  1007 ;;      Params:         0       0       0
  1008 ;;      Locals:         0       0       0
  1009 ;;      Temps:          2       0       0
  1010 ;;      Totals:         2       0       0
  1011 ;;Total ram usage:        2 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    3
  1014 ;; This function calls:
  1015 ;;		_Delay_Routine
  1016 ;;		_Save_Data
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           	psect	text9
  1023  0000B4                     __ptext9:
  1024                           	opt stack 0
  1025  0000B4                     _Check_Buttons:
  1026                           	opt stack 27
  1027                           
  1028                           ;buttonchanges.c: 4: if(PORTCbits.RC1 == 1) {
  1029                           
  1030                           ; BSR set to: 15
  1031                           ;incstack = 0
  1032  0000B4  A282               	btfss	3970,1,c	;volatile
  1033  0000B6  D008               	goto	l55
  1034                           
  1035                           ;buttonchanges.c: 5: Delay_Routine(3);
  1036  0000B8  0E03               	movlw	3
  1037  0000BA  EC46  F002         	call	_Delay_Routine
  1038                           
  1039                           ;buttonchanges.c: 6: if(PORTCbits.RC1 == 1) {
  1040  0000BE  A282               	btfss	3970,1,c	;volatile
  1041  0000C0  0012               	return	
  1042                           
  1043                           ;buttonchanges.c: 7: ignite_ready = 1;
  1044  0000C2  801A               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1045                           
  1046                           ;buttonchanges.c: 8: __nop();
  1047  0000C4  F000               	nop	
  1048                           
  1049                           ;buttonchanges.c: 12: }
  1050                           ;buttonchanges.c: 13: } else if(PORTBbits.RB2 == 1) {
  1051                           
  1052                           ;buttonchanges.c: 9: return;
  1053  0000C6  0012               	return	
  1054  0000C8                     l55:
  1055  0000C8  A481               	btfss	3969,2,c	;volatile
  1056  0000CA  D03B               	goto	l59
  1057                           
  1058                           ;buttonchanges.c: 14: Delay_Routine(3);
  1059  0000CC  0E03               	movlw	3
  1060  0000CE  EC46  F002         	call	_Delay_Routine
  1061                           
  1062                           ;buttonchanges.c: 15: if(PORTBbits.RB2 == 1) {
  1063  0000D2  A481               	btfss	3969,2,c	;volatile
  1064  0000D4  0012               	return	
  1065                           
  1066                           ;buttonchanges.c: 16: pin[pin_selected].time++;
  1067  0000D6  5018               	movf	_pin_selected,w,c
  1068  0000D8  0D05               	mullw	5
  1069  0000DA  0E03               	movlw	3
  1070  0000DC  26F3               	addwf	prodl,f,c
  1071  0000DE  0E00               	movlw	0
  1072  0000E0  22F4               	addwfc	prodh,f,c
  1073  0000E2  0E60               	movlw	low _pin
  1074  0000E4  24F3               	addwf	prodl,w,c
  1075  0000E6  6ED9               	movwf	fsr2l,c
  1076  0000E8  0E00               	movlw	high _pin
  1077  0000EA  20F4               	addwfc	prodh,w,c
  1078  0000EC  6EDA               	movwf	fsr2h,c
  1079  0000EE  2ADE               	incf	postinc2,f,c
  1080  0000F0  0E00               	movlw	0
  1081  0000F2  22DD               	addwfc	postdec2,f,c
  1082                           
  1083                           ;buttonchanges.c: 17: if(pin[pin_selected].time > 999) {
  1084  0000F4  5018               	movf	_pin_selected,w,c
  1085  0000F6  0D05               	mullw	5
  1086  0000F8  0E03               	movlw	3
  1087  0000FA  26F3               	addwf	prodl,f,c
  1088  0000FC  0E00               	movlw	0
  1089  0000FE  22F4               	addwfc	prodh,f,c
  1090  000100  0E60               	movlw	low _pin
  1091  000102  24F3               	addwf	prodl,w,c
  1092  000104  6ED9               	movwf	fsr2l,c
  1093  000106  0E00               	movlw	high _pin
  1094  000108  20F4               	addwfc	prodh,w,c
  1095  00010A  6EDA               	movwf	fsr2h,c
  1096  00010C  0E01               	movlw	1
  1097  00010E  BEDB               	btfsc	plusw2,7,c
  1098  000110  D016               	goto	l1180
  1099  000112  0EE8               	movlw	232
  1100  000114  5CDE               	subwf	postinc2,w,c
  1101  000116  0E03               	movlw	3
  1102  000118  58DE               	subwfb	postinc2,w,c
  1103  00011A  A0D8               	btfss	status,0,c
  1104  00011C  D010               	goto	l1180
  1105                           
  1106                           ;buttonchanges.c: 18: pin[pin_selected].time = 0;
  1107  00011E  5018               	movf	_pin_selected,w,c
  1108  000120  0D05               	mullw	5
  1109  000122  0E03               	movlw	3
  1110  000124  26F3               	addwf	prodl,f,c
  1111  000126  0E00               	movlw	0
  1112  000128  22F4               	addwfc	prodh,f,c
  1113  00012A  0E60               	movlw	low _pin
  1114  00012C  24F3               	addwf	prodl,w,c
  1115  00012E  6ED9               	movwf	fsr2l,c
  1116  000130  0E00               	movlw	high _pin
  1117  000132  20F4               	addwfc	prodh,w,c
  1118  000134  6EDA               	movwf	fsr2h,c
  1119  000136  0E00               	movlw	0
  1120  000138  6EDE               	movwf	postinc2,c
  1121  00013A  0E00               	movlw	0
  1122  00013C  6EDD               	movwf	postdec2,c
  1123  00013E                     l1180:
  1124                           
  1125                           ;buttonchanges.c: 19: }
  1126                           ;buttonchanges.c: 20: __nop();
  1127  00013E  F000               	nop	
  1128                           
  1129                           ;buttonchanges.c: 21: }
  1130                           ;buttonchanges.c: 22: } else if(PORTBbits.RB3 == 1) {
  1131  000140  0012               	return	
  1132  000142                     l59:
  1133  000142  A681               	btfss	3969,3,c	;volatile
  1134  000144  D035               	goto	l63
  1135                           
  1136                           ;buttonchanges.c: 23: Delay_Routine(3);
  1137  000146  0E03               	movlw	3
  1138  000148  EC46  F002         	call	_Delay_Routine
  1139                           
  1140                           ;buttonchanges.c: 24: if(PORTBbits.RB3 == 1) {
  1141  00014C  A681               	btfss	3969,3,c	;volatile
  1142  00014E  0012               	return	
  1143                           
  1144                           ;buttonchanges.c: 25: pin[pin_selected].time--;
  1145  000150  5018               	movf	_pin_selected,w,c
  1146  000152  0D05               	mullw	5
  1147  000154  0E03               	movlw	3
  1148  000156  26F3               	addwf	prodl,f,c
  1149  000158  0E00               	movlw	0
  1150  00015A  22F4               	addwfc	prodh,f,c
  1151  00015C  0E60               	movlw	low _pin
  1152  00015E  24F3               	addwf	prodl,w,c
  1153  000160  6ED9               	movwf	fsr2l,c
  1154  000162  0E00               	movlw	high _pin
  1155  000164  20F4               	addwfc	prodh,w,c
  1156  000166  6EDA               	movwf	fsr2h,c
  1157  000168  06DE               	decf	postinc2,f,c
  1158  00016A  0E00               	movlw	0
  1159  00016C  5ADD               	subwfb	postdec2,f,c
  1160                           
  1161                           ;buttonchanges.c: 26: if(pin[pin_selected].time < 0) {
  1162  00016E  5018               	movf	_pin_selected,w,c
  1163  000170  0D05               	mullw	5
  1164  000172  0E03               	movlw	3
  1165  000174  26F3               	addwf	prodl,f,c
  1166  000176  0E00               	movlw	0
  1167  000178  22F4               	addwfc	prodh,f,c
  1168  00017A  0E60               	movlw	low _pin
  1169  00017C  24F3               	addwf	prodl,w,c
  1170  00017E  6ED9               	movwf	fsr2l,c
  1171  000180  0E00               	movlw	high _pin
  1172  000182  20F4               	addwfc	prodh,w,c
  1173  000184  6EDA               	movwf	fsr2h,c
  1174  000186  0E01               	movlw	1
  1175  000188  AEDB               	btfss	plusw2,7,c
  1176  00018A  D010               	goto	l1190
  1177                           
  1178                           ;buttonchanges.c: 27: pin[pin_selected].time = 999;
  1179  00018C  5018               	movf	_pin_selected,w,c
  1180  00018E  0D05               	mullw	5
  1181  000190  0E03               	movlw	3
  1182  000192  26F3               	addwf	prodl,f,c
  1183  000194  0E00               	movlw	0
  1184  000196  22F4               	addwfc	prodh,f,c
  1185  000198  0E60               	movlw	low _pin
  1186  00019A  24F3               	addwf	prodl,w,c
  1187  00019C  6ED9               	movwf	fsr2l,c
  1188  00019E  0E00               	movlw	high _pin
  1189  0001A0  20F4               	addwfc	prodh,w,c
  1190  0001A2  6EDA               	movwf	fsr2h,c
  1191  0001A4  0EE7               	movlw	231
  1192  0001A6  6EDE               	movwf	postinc2,c
  1193  0001A8  0E03               	movlw	3
  1194  0001AA  6EDD               	movwf	postdec2,c
  1195  0001AC                     l1190:
  1196                           
  1197                           ;buttonchanges.c: 28: }
  1198                           ;buttonchanges.c: 29: __nop();
  1199  0001AC  F000               	nop	
  1200                           
  1201                           ;buttonchanges.c: 30: }
  1202                           ;buttonchanges.c: 31: } else if(PORTBbits.RB4 == 1) {
  1203  0001AE  0012               	return	
  1204  0001B0                     l63:
  1205  0001B0  A881               	btfss	3969,4,c	;volatile
  1206  0001B2  D03C               	goto	l67
  1207                           
  1208                           ;buttonchanges.c: 32: Delay_Routine(3);
  1209  0001B4  0E03               	movlw	3
  1210  0001B6  EC46  F002         	call	_Delay_Routine
  1211                           
  1212                           ;buttonchanges.c: 33: if(PORTBbits.RB4 == 1) {
  1213  0001BA  A881               	btfss	3969,4,c	;volatile
  1214  0001BC  0012               	return	
  1215                           
  1216                           ;buttonchanges.c: 34: pin[pin_selected].time += 10;
  1217  0001BE  5018               	movf	_pin_selected,w,c
  1218  0001C0  0D05               	mullw	5
  1219  0001C2  0E03               	movlw	3
  1220  0001C4  26F3               	addwf	prodl,f,c
  1221  0001C6  0E00               	movlw	0
  1222  0001C8  22F4               	addwfc	prodh,f,c
  1223  0001CA  0E60               	movlw	low _pin
  1224  0001CC  24F3               	addwf	prodl,w,c
  1225  0001CE  6ED9               	movwf	fsr2l,c
  1226  0001D0  0E00               	movlw	high _pin
  1227  0001D2  20F4               	addwfc	prodh,w,c
  1228  0001D4  6EDA               	movwf	fsr2h,c
  1229  0001D6  0E0A               	movlw	10
  1230  0001D8  26DE               	addwf	postinc2,f,c
  1231  0001DA  0E00               	movlw	0
  1232  0001DC  22DD               	addwfc	postdec2,f,c
  1233                           
  1234                           ;buttonchanges.c: 35: if(pin[pin_selected].time > 999) {
  1235  0001DE  5018               	movf	_pin_selected,w,c
  1236  0001E0  0D05               	mullw	5
  1237  0001E2  0E03               	movlw	3
  1238  0001E4  26F3               	addwf	prodl,f,c
  1239  0001E6  0E00               	movlw	0
  1240  0001E8  22F4               	addwfc	prodh,f,c
  1241  0001EA  0E60               	movlw	low _pin
  1242  0001EC  24F3               	addwf	prodl,w,c
  1243  0001EE  6ED9               	movwf	fsr2l,c
  1244  0001F0  0E00               	movlw	high _pin
  1245  0001F2  20F4               	addwfc	prodh,w,c
  1246  0001F4  6EDA               	movwf	fsr2h,c
  1247  0001F6  0E01               	movlw	1
  1248  0001F8  BEDB               	btfsc	plusw2,7,c
  1249  0001FA  D016               	goto	l1200
  1250  0001FC  0EE8               	movlw	232
  1251  0001FE  5CDE               	subwf	postinc2,w,c
  1252  000200  0E03               	movlw	3
  1253  000202  58DE               	subwfb	postinc2,w,c
  1254  000204  A0D8               	btfss	status,0,c
  1255  000206  D010               	goto	l1200
  1256                           
  1257                           ;buttonchanges.c: 36: pin[pin_selected].time = 0;
  1258  000208  5018               	movf	_pin_selected,w,c
  1259  00020A  0D05               	mullw	5
  1260  00020C  0E03               	movlw	3
  1261  00020E  26F3               	addwf	prodl,f,c
  1262  000210  0E00               	movlw	0
  1263  000212  22F4               	addwfc	prodh,f,c
  1264  000214  0E60               	movlw	low _pin
  1265  000216  24F3               	addwf	prodl,w,c
  1266  000218  6ED9               	movwf	fsr2l,c
  1267  00021A  0E00               	movlw	high _pin
  1268  00021C  20F4               	addwfc	prodh,w,c
  1269  00021E  6EDA               	movwf	fsr2h,c
  1270  000220  0E00               	movlw	0
  1271  000222  6EDE               	movwf	postinc2,c
  1272  000224  0E00               	movlw	0
  1273  000226  6EDD               	movwf	postdec2,c
  1274  000228                     l1200:
  1275                           
  1276                           ;buttonchanges.c: 37: }
  1277                           ;buttonchanges.c: 38: __nop();
  1278  000228  F000               	nop	
  1279                           
  1280                           ;buttonchanges.c: 39: }
  1281                           ;buttonchanges.c: 40: } else if(PORTBbits.RB1 == 1) {
  1282  00022A  0012               	return	
  1283  00022C                     l67:
  1284  00022C  A281               	btfss	3969,1,c	;volatile
  1285  00022E  D043               	goto	l71
  1286                           
  1287                           ;buttonchanges.c: 41: Delay_Routine(3);
  1288  000230  0E03               	movlw	3
  1289  000232  EC46  F002         	call	_Delay_Routine
  1290                           
  1291                           ;buttonchanges.c: 42: if(PORTBbits.RB1 == 1) {
  1292  000236  A281               	btfss	3969,1,c	;volatile
  1293  000238  0012               	return	
  1294                           
  1295                           ;buttonchanges.c: 43: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  1296  00023A  5018               	movf	_pin_selected,w,c
  1297  00023C  0D05               	mullw	5
  1298  00023E  0E03               	movlw	3
  1299  000240  26F3               	addwf	prodl,f,c
  1300  000242  0E00               	movlw	0
  1301  000244  22F4               	addwfc	prodh,f,c
  1302  000246  0E60               	movlw	low _pin
  1303  000248  24F3               	addwf	prodl,w,c
  1304  00024A  6ED9               	movwf	fsr2l,c
  1305  00024C  0E00               	movlw	high _pin
  1306  00024E  20F4               	addwfc	prodh,w,c
  1307  000250  6EDA               	movwf	fsr2h,c
  1308  000252  CFDE F010          	movff	postinc2,Save_Data@store
  1309  000256  CFDD F011          	movff	postdec2,Save_Data@store+1
  1310  00025A  5018               	movf	_pin_selected,w,c
  1311  00025C  0D05               	mullw	5
  1312  00025E  0E02               	movlw	2
  1313  000260  26F3               	addwf	prodl,f,c
  1314  000262  0E00               	movlw	0
  1315  000264  22F4               	addwfc	prodh,f,c
  1316  000266  0E60               	movlw	low _pin
  1317  000268  24F3               	addwf	prodl,w,c
  1318  00026A  6ED9               	movwf	fsr2l,c
  1319  00026C  0E00               	movlw	high _pin
  1320  00026E  20F4               	addwfc	prodh,w,c
  1321  000270  6EDA               	movwf	fsr2h,c
  1322  000272  50DF               	movf	indf2,w,c
  1323  000274  6E12               	movwf	Save_Data@store_address,c
  1324  000276  ECD9  F001         	call	_Save_Data	;wreg free
  1325                           
  1326                           ;buttonchanges.c: 44: pin_selected++;
  1327  00027A  2A18               	incf	_pin_selected,f,c
  1328                           
  1329                           ;buttonchanges.c: 45: switch (slave_selected) {
  1330  00027C  D010               	goto	l1224
  1331  00027E                     l1210:
  1332                           
  1333                           ;buttonchanges.c: 47: if(pin_selected > 9) {
  1334  00027E  0E09               	movlw	9
  1335  000280  6418               	cpfsgt	_pin_selected,c
  1336  000282  D017               	goto	l76
  1337                           
  1338                           ;buttonchanges.c: 48: pin_selected = 0;
  1339  000284  0E00               	movlw	0
  1340  000286  D009               	goto	L2
  1341  000288                     l1214:
  1342                           
  1343                           ;buttonchanges.c: 52: if(pin_selected > 19) {
  1344  000288  0E13               	movlw	19
  1345  00028A  6418               	cpfsgt	_pin_selected,c
  1346  00028C  D012               	goto	l76
  1347                           
  1348                           ;buttonchanges.c: 53: pin_selected = 10;
  1349  00028E  0E0A               	movlw	10
  1350  000290  D004               	goto	L2
  1351  000292                     l1218:
  1352                           
  1353                           ;buttonchanges.c: 57: if(pin_selected > 29) {
  1354  000292  0E1D               	movlw	29
  1355  000294  6418               	cpfsgt	_pin_selected,c
  1356  000296  D00D               	goto	l76
  1357                           
  1358                           ;buttonchanges.c: 58: pin_selected = 20;
  1359  000298  0E14               	movlw	20
  1360  00029A                     L2:
  1361  00029A  6E18               	movwf	_pin_selected,c
  1362                           
  1363                           ;buttonchanges.c: 61: }
  1364                           
  1365                           ;buttonchanges.c: 59: }
  1366                           ;buttonchanges.c: 60: break;
  1367  00029C  D00A               	goto	l76
  1368  00029E                     l1224:
  1369  00029E  5019               	movf	_slave_selected,w,c
  1370                           
  1371                           ; Switch size 1, requested type "space"
  1372                           ; Number of cases is 3, Range of values is 0 to 2
  1373                           ; switch strategies available:
  1374                           ; Name         Instructions Cycles
  1375                           ; simple_byte           10     6 (average)
  1376                           ;	Chosen strategy is simple_byte
  1377  0002A0  0A00               	xorlw	0	; case 0
  1378  0002A2  B4D8               	btfsc	status,2,c
  1379  0002A4  D7EC               	goto	l1210
  1380  0002A6  0A01               	xorlw	1	; case 1
  1381  0002A8  B4D8               	btfsc	status,2,c
  1382  0002AA  D7EE               	goto	l1214
  1383  0002AC  0A03               	xorlw	3	; case 2
  1384  0002AE  B4D8               	btfsc	status,2,c
  1385  0002B0  D7F0               	goto	l1218
  1386  0002B2                     l76:
  1387                           
  1388                           ;buttonchanges.c: 62: __nop();
  1389  0002B2  F000               	nop	
  1390                           
  1391                           ;buttonchanges.c: 63: }
  1392                           ;buttonchanges.c: 64: } else if(PORTBbits.RB0 == 1) {
  1393  0002B4  0012               	return	
  1394  0002B6                     l71:
  1395  0002B6  A081               	btfss	3969,0,c	;volatile
  1396  0002B8  0012               	return	
  1397                           
  1398                           ;buttonchanges.c: 65: Delay_Routine(3);
  1399  0002BA  0E03               	movlw	3
  1400  0002BC  EC46  F002         	call	_Delay_Routine
  1401                           
  1402                           ;buttonchanges.c: 66: if(PORTBbits.RB0 == 1) {
  1403  0002C0  A081               	btfss	3969,0,c	;volatile
  1404  0002C2  0012               	return	
  1405                           
  1406                           ;buttonchanges.c: 67: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  1407  0002C4  5018               	movf	_pin_selected,w,c
  1408  0002C6  0D05               	mullw	5
  1409  0002C8  0E03               	movlw	3
  1410  0002CA  26F3               	addwf	prodl,f,c
  1411  0002CC  0E00               	movlw	0
  1412  0002CE  22F4               	addwfc	prodh,f,c
  1413  0002D0  0E60               	movlw	low _pin
  1414  0002D2  24F3               	addwf	prodl,w,c
  1415  0002D4  6ED9               	movwf	fsr2l,c
  1416  0002D6  0E00               	movlw	high _pin
  1417  0002D8  20F4               	addwfc	prodh,w,c
  1418  0002DA  6EDA               	movwf	fsr2h,c
  1419  0002DC  CFDE F010          	movff	postinc2,Save_Data@store
  1420  0002E0  CFDD F011          	movff	postdec2,Save_Data@store+1
  1421  0002E4  5018               	movf	_pin_selected,w,c
  1422  0002E6  0D05               	mullw	5
  1423  0002E8  0E02               	movlw	2
  1424  0002EA  26F3               	addwf	prodl,f,c
  1425  0002EC  0E00               	movlw	0
  1426  0002EE  22F4               	addwfc	prodh,f,c
  1427  0002F0  0E60               	movlw	low _pin
  1428  0002F2  24F3               	addwf	prodl,w,c
  1429  0002F4  6ED9               	movwf	fsr2l,c
  1430  0002F6  0E00               	movlw	high _pin
  1431  0002F8  20F4               	addwfc	prodh,w,c
  1432  0002FA  6EDA               	movwf	fsr2h,c
  1433  0002FC  50DF               	movf	indf2,w,c
  1434  0002FE  6E12               	movwf	Save_Data@store_address,c
  1435  000300  ECD9  F001         	call	_Save_Data	;wreg free
  1436                           
  1437                           ;buttonchanges.c: 68: slave_selected++;
  1438  000304  2A19               	incf	_slave_selected,f,c
  1439                           
  1440                           ;buttonchanges.c: 69: if(slave_selected > 2) {
  1441  000306  0E02               	movlw	2
  1442  000308  6419               	cpfsgt	_slave_selected,c
  1443  00030A  D002               	goto	l1238
  1444                           
  1445                           ;buttonchanges.c: 70: slave_selected = 0;
  1446  00030C  0E00               	movlw	0
  1447  00030E  6E19               	movwf	_slave_selected,c
  1448  000310                     l1238:
  1449                           
  1450                           ;buttonchanges.c: 71: }
  1451                           ;buttonchanges.c: 72: pin_selected = slave_selected * 10;
  1452  000310  5019               	movf	_slave_selected,w,c
  1453  000312  0D0A               	mullw	10
  1454  000314  CFF3 F018          	movff	prodl,_pin_selected
  1455                           
  1456                           ;buttonchanges.c: 73: __nop();
  1457  000318  F000               	nop	
  1458  00031A  0012               	return	
  1459  00031C                     __end_of_Check_Buttons:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           prodh	equ	0xFF4
  1466                           prodl	equ	0xFF3
  1467                           intcon	equ	0xFF2
  1468                           postinc0	equ	0xFEE
  1469                           postdec1	equ	0xFE5
  1470                           fsr1l	equ	0xFE1
  1471                           indf2	equ	0xFDF
  1472                           postinc2	equ	0xFDE
  1473                           postdec2	equ	0xFDD
  1474                           plusw2	equ	0xFDB
  1475                           fsr2h	equ	0xFDA
  1476                           fsr2l	equ	0xFD9
  1477                           status	equ	0xFD8
  1478                           
  1479 ;; *************** function _Save_Data *****************
  1480 ;; Defined at:
  1481 ;;		line 7 in file "storage.c"
  1482 ;; Parameters:    Size  Location     Type
  1483 ;;  store           2   15[COMRAM] int 
  1484 ;;  store_addres    1   17[COMRAM] unsigned char 
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;		None               void
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1
  1496 ;;      Params:         3       0       0
  1497 ;;      Locals:         0       0       0
  1498 ;;      Temps:          0       0       0
  1499 ;;      Totals:         3       0       0
  1500 ;;Total ram usage:        3 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    2
  1503 ;; This function calls:
  1504 ;;		Nothing
  1505 ;; This function is called by:
  1506 ;;		_Check_Buttons
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text10
  1511  0003B2                     __ptext10:
  1512                           	opt stack 0
  1513  0003B2                     _Save_Data:
  1514                           	opt stack 27
  1515                           
  1516                           ;storage.c: 9: EEADR = store_address;
  1517                           
  1518                           ;incstack = 0
  1519  0003B2  C012  FFA9         	movff	Save_Data@store_address,4009	;volatile
  1520                           
  1521                           ;storage.c: 10: EEDATA = store;
  1522  0003B6  C010  FFA8         	movff	Save_Data@store,4008	;volatile
  1523                           
  1524                           ;storage.c: 11: EECON1bits.EEPGD = 0;
  1525  0003BA  9EA6               	bcf	4006,7,c	;volatile
  1526                           
  1527                           ;storage.c: 12: EECON1bits.CFGS = 0;
  1528  0003BC  9CA6               	bcf	4006,6,c	;volatile
  1529                           
  1530                           ;storage.c: 13: INTCONbits.GIE = 0;
  1531  0003BE  9EF2               	bcf	intcon,7,c	;volatile
  1532                           
  1533                           ;storage.c: 14: EECON1bits.WREN = 1;
  1534  0003C0  84A6               	bsf	4006,2,c	;volatile
  1535                           
  1536                           ;storage.c: 15: EECON2 = 0x55;
  1537  0003C2  0E55               	movlw	85
  1538  0003C4  6EA7               	movwf	4007,c	;volatile
  1539                           
  1540                           ;storage.c: 16: EECON2 = 0xAA;
  1541  0003C6  0EAA               	movlw	170
  1542  0003C8  6EA7               	movwf	4007,c	;volatile
  1543                           
  1544                           ;storage.c: 17: EECON1bits.WR = 1;
  1545  0003CA  82A6               	bsf	4006,1,c	;volatile
  1546  0003CC                     l243:
  1547  0003CC  A8A1               	btfss	4001,4,c	;volatile
  1548  0003CE  D7FE               	goto	l243
  1549                           
  1550                           ;storage.c: 19: PIR2bits.EEIF = 0;
  1551  0003D0  98A1               	bcf	4001,4,c	;volatile
  1552                           
  1553                           ;storage.c: 20: store >>= 8;
  1554  0003D2  5011               	movf	Save_Data@store+1,w,c
  1555  0003D4  6E10               	movwf	Save_Data@store,c
  1556  0003D6  6A11               	clrf	Save_Data@store+1,c
  1557  0003D8  BE10               	btfsc	Save_Data@store,7,c
  1558  0003DA  0611               	decf	Save_Data@store+1,f,c
  1559                           
  1560                           ;storage.c: 21: store_address += 50;
  1561  0003DC  0E32               	movlw	50
  1562  0003DE  2612               	addwf	Save_Data@store_address,f,c
  1563                           
  1564                           ;storage.c: 22: EEADR = store_address;
  1565  0003E0  C012  FFA9         	movff	Save_Data@store_address,4009	;volatile
  1566                           
  1567                           ;storage.c: 23: EEDATA = store;
  1568  0003E4  C010  FFA8         	movff	Save_Data@store,4008	;volatile
  1569                           
  1570                           ;storage.c: 24: EECON1bits.EEPGD = 0;
  1571  0003E8  9EA6               	bcf	4006,7,c	;volatile
  1572                           
  1573                           ;storage.c: 25: EECON1bits.CFGS = 0;
  1574  0003EA  9CA6               	bcf	4006,6,c	;volatile
  1575                           
  1576                           ;storage.c: 26: EECON1bits.WREN = 1;
  1577  0003EC  84A6               	bsf	4006,2,c	;volatile
  1578                           
  1579                           ;storage.c: 27: INTCONbits.GIE = 0;
  1580  0003EE  9EF2               	bcf	intcon,7,c	;volatile
  1581                           
  1582                           ;storage.c: 28: EECON2 = 0x55;
  1583  0003F0  0E55               	movlw	85
  1584  0003F2  6EA7               	movwf	4007,c	;volatile
  1585                           
  1586                           ;storage.c: 29: EECON2 = 0xAA;
  1587  0003F4  0EAA               	movlw	170
  1588  0003F6  6EA7               	movwf	4007,c	;volatile
  1589                           
  1590                           ;storage.c: 30: EECON1bits.WR = 1;
  1591  0003F8  82A6               	bsf	4006,1,c	;volatile
  1592  0003FA                     l246:
  1593  0003FA  A8A1               	btfss	4001,4,c	;volatile
  1594  0003FC  D7FE               	goto	l246
  1595                           
  1596                           ;storage.c: 32: PIR2bits.EEIF = 0;
  1597  0003FE  98A1               	bcf	4001,4,c	;volatile
  1598                           
  1599                           ;storage.c: 33: EECON1bits.WREN = 0;
  1600  000400  94A6               	bcf	4006,2,c	;volatile
  1601                           
  1602                           ;storage.c: 34: INTCONbits.GIE = 1;
  1603  000402  8EF2               	bsf	intcon,7,c	;volatile
  1604  000404  0012               	return		;funcret
  1605  000406                     __end_of_Save_Data:
  1606                           	opt stack 0
  1607                           tblptru	equ	0xFF8
  1608                           tblptrh	equ	0xFF7
  1609                           tblptrl	equ	0xFF6
  1610                           tablat	equ	0xFF5
  1611                           prodh	equ	0xFF4
  1612                           prodl	equ	0xFF3
  1613                           intcon	equ	0xFF2
  1614                           postinc0	equ	0xFEE
  1615                           postdec1	equ	0xFE5
  1616                           fsr1l	equ	0xFE1
  1617                           indf2	equ	0xFDF
  1618                           postinc2	equ	0xFDE
  1619                           postdec2	equ	0xFDD
  1620                           plusw2	equ	0xFDB
  1621                           fsr2h	equ	0xFDA
  1622                           fsr2l	equ	0xFD9
  1623                           status	equ	0xFD8
  1624                           
  1625 ;; *************** function _Delay_Routine *****************
  1626 ;; Defined at:
  1627 ;;		line 73 in file "main.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  delay_multip    1    wreg     unsigned char 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  delay_multip    1   16[COMRAM] unsigned char 
  1632 ;;  delay_counte    1   17[COMRAM] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;		None               void
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1
  1642 ;;      Params:         0       0       0
  1643 ;;      Locals:         2       0       0
  1644 ;;      Temps:          1       0       0
  1645 ;;      Totals:         3       0       0
  1646 ;;Total ram usage:        3 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    2
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_Check_Buttons
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text11
  1657  00048C                     __ptext11:
  1658                           	opt stack 0
  1659  00048C                     _Delay_Routine:
  1660                           	opt stack 27
  1661                           
  1662                           ;incstack = 0
  1663                           ;Delay_Routine@delay_multiplyer stored from wreg
  1664  00048C  6E11               	movwf	Delay_Routine@delay_multiplyer,c
  1665                           
  1666                           ;main.c: 74: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  1667  00048E  0E00               	movlw	0
  1668  000490  6E12               	movwf	Delay_Routine@delay_counter,c
  1669                           
  1670                           ;main.c: 75: delay_counter++) {
  1671  000492  D008               	goto	l1134
  1672  000494                     l1130:
  1673                           
  1674                           ;main.c: 76: _delay((unsigned long)((100)*(4000000/4000.0)));
  1675  000494  0E82               	movlw	130
  1676  000496  6E10               	movwf	??_Delay_Routine& (0+255),c
  1677  000498  0EDE               	movlw	222
  1678  00049A                     u547:
  1679  00049A  2EE8               	decfsz	wreg,f,c
  1680  00049C  D7FE               	goto	u547
  1681  00049E  2E10               	decfsz	??_Delay_Routine& (0+255),f,c
  1682  0004A0  D7FC               	goto	u547
  1683  0004A2  2A12               	incf	Delay_Routine@delay_counter,f,c
  1684  0004A4                     l1134:
  1685  0004A4  5011               	movf	Delay_Routine@delay_multiplyer,w,c
  1686  0004A6  5C12               	subwf	Delay_Routine@delay_counter,w,c
  1687  0004A8  B0D8               	btfsc	status,0,c
  1688  0004AA  0012               	return	
  1689  0004AC  D7F3               	goto	l1130
  1690  0004AE                     __end_of_Delay_Routine:
  1691                           	opt stack 0
  1692                           tblptru	equ	0xFF8
  1693                           tblptrh	equ	0xFF7
  1694                           tblptrl	equ	0xFF6
  1695                           tablat	equ	0xFF5
  1696                           prodh	equ	0xFF4
  1697                           prodl	equ	0xFF3
  1698                           intcon	equ	0xFF2
  1699                           postinc0	equ	0xFEE
  1700                           wreg	equ	0xFE8
  1701                           postdec1	equ	0xFE5
  1702                           fsr1l	equ	0xFE1
  1703                           indf2	equ	0xFDF
  1704                           postinc2	equ	0xFDE
  1705                           postdec2	equ	0xFDD
  1706                           plusw2	equ	0xFDB
  1707                           fsr2h	equ	0xFDA
  1708                           fsr2l	equ	0xFD9
  1709                           status	equ	0xFD8
  1710                           
  1711 ;; *************** function _Isr *****************
  1712 ;; Defined at:
  1713 ;;		line 3 in file "interrupt.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  received        1   14[COMRAM] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;		None               void
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1
  1727 ;;      Params:         0       0       0
  1728 ;;      Locals:         1       0       0
  1729 ;;      Temps:         14       0       0
  1730 ;;      Totals:        15       0       0
  1731 ;;Total ram usage:       15 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    1
  1734 ;; This function calls:
  1735 ;;		_Receive
  1736 ;; This function is called by:
  1737 ;;		Interrupt level 2
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	intcode
  1742  000008                     __pintcode:
  1743                           	opt stack 0
  1744  000008                     _Isr:
  1745                           	opt stack 27
  1746                           
  1747                           ;incstack = 0
  1748  000008  821B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1749  00000A  CFFA F001          	movff	pclath,??_Isr
  1750  00000E  CFFB F002          	movff	pclatu,??_Isr+1
  1751  000012  CFE9 F003          	movff	fsr0l,??_Isr+2
  1752  000016  CFEA F004          	movff	fsr0h,??_Isr+3
  1753  00001A  CFE1 F005          	movff	fsr1l,??_Isr+4
  1754  00001E  CFE2 F006          	movff	fsr1h,??_Isr+5
  1755  000022  CFD9 F007          	movff	fsr2l,??_Isr+6
  1756  000026  CFDA F008          	movff	fsr2h,??_Isr+7
  1757  00002A  CFF3 F009          	movff	prodl,??_Isr+8
  1758  00002E  CFF4 F00A          	movff	prodh,??_Isr+9
  1759  000032  CFF6 F00B          	movff	tblptrl,??_Isr+10
  1760  000036  CFF7 F00C          	movff	tblptrh,??_Isr+11
  1761  00003A  CFF8 F00D          	movff	tblptru,??_Isr+12
  1762  00003E  CFF5 F00E          	movff	tablat,??_Isr+13
  1763                           
  1764                           ;interrupt.c: 4: if(PIR1bits.RCIF == 1) {
  1765  000042  AA9E               	btfss	3998,5,c	;volatile
  1766  000044  D012               	goto	i2l326
  1767                           
  1768                           ;interrupt.c: 5: PIR1bits.RCIF = 0;
  1769  000046  9A9E               	bcf	3998,5,c	;volatile
  1770                           
  1771                           ;interrupt.c: 6: unsigned char received = 0;
  1772  000048  0E00               	movlw	0
  1773  00004A  6E0F               	movwf	Isr@received,c
  1774                           
  1775                           ;interrupt.c: 7: received = Receive();
  1776  00004C  EC82  F002         	call	_Receive	;wreg free
  1777  000050  6E0F               	movwf	Isr@received,c
  1778                           
  1779                           ;interrupt.c: 8: __nop();
  1780  000052  F000               	nop	
  1781                           
  1782                           ;interrupt.c: 9: if(received == '1' || received == 'L') {
  1783  000054  0E31               	movlw	49
  1784  000056  180F               	xorwf	Isr@received,w,c
  1785  000058  B4D8               	btfsc	status,2,c
  1786  00005A  D004               	goto	i2l329
  1787  00005C  0E4C               	movlw	76
  1788  00005E  180F               	xorwf	Isr@received,w,c
  1789  000060  A4D8               	btfss	status,2,c
  1790  000062  D002               	goto	i2l327
  1791  000064                     i2l329:
  1792                           
  1793                           ;interrupt.c: 10: PORTAbits.RA0 = 1;
  1794  000064  8080               	bsf	3968,0,c	;volatile
  1795                           
  1796                           ;interrupt.c: 11: }else {
  1797  000066  D001               	goto	i2l326
  1798  000068                     i2l327:
  1799                           
  1800                           ;interrupt.c: 12: PORTAbits.RA0 = 0;
  1801  000068  9080               	bcf	3968,0,c	;volatile
  1802  00006A                     i2l326:
  1803                           
  1804                           ;interrupt.c: 13: }
  1805                           ;interrupt.c: 14: }if(PIR1bits.CCP1IF == 1) {
  1806  00006A  A49E               	btfss	3998,2,c	;volatile
  1807  00006C  D003               	goto	i2l332
  1808                           
  1809                           ;interrupt.c: 15: PIR1bits.CCP1IF = 0;
  1810  00006E  949E               	bcf	3998,2,c	;volatile
  1811                           
  1812                           ;interrupt.c: 16: current_time++;
  1813  000070  4A15               	infsnz	_current_time,f,c
  1814  000072  2A16               	incf	_current_time+1,f,c
  1815  000074                     i2l332:
  1816  000074  C00E  FFF5         	movff	??_Isr+13,tablat
  1817  000078  C00D  FFF8         	movff	??_Isr+12,tblptru
  1818  00007C  C00C  FFF7         	movff	??_Isr+11,tblptrh
  1819  000080  C00B  FFF6         	movff	??_Isr+10,tblptrl
  1820  000084  C00A  FFF4         	movff	??_Isr+9,prodh
  1821  000088  C009  FFF3         	movff	??_Isr+8,prodl
  1822  00008C  C008  FFDA         	movff	??_Isr+7,fsr2h
  1823  000090  C007  FFD9         	movff	??_Isr+6,fsr2l
  1824  000094  C006  FFE2         	movff	??_Isr+5,fsr1h
  1825  000098  C005  FFE1         	movff	??_Isr+4,fsr1l
  1826  00009C  C004  FFEA         	movff	??_Isr+3,fsr0h
  1827  0000A0  C003  FFE9         	movff	??_Isr+2,fsr0l
  1828  0000A4  C002  FFFB         	movff	??_Isr+1,pclatu
  1829  0000A8  C001  FFFA         	movff	??_Isr,pclath
  1830  0000AC  921B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1831  0000AE  0011               	retfie		f
  1832  0000B0                     __end_of_Isr:
  1833                           	opt stack 0
  1834                           pclatu	equ	0xFFB
  1835                           pclath	equ	0xFFA
  1836                           tblptru	equ	0xFF8
  1837                           tblptrh	equ	0xFF7
  1838                           tblptrl	equ	0xFF6
  1839                           tablat	equ	0xFF5
  1840                           prodh	equ	0xFF4
  1841                           prodl	equ	0xFF3
  1842                           intcon	equ	0xFF2
  1843                           postinc0	equ	0xFEE
  1844                           fsr0h	equ	0xFEA
  1845                           fsr0l	equ	0xFE9
  1846                           wreg	equ	0xFE8
  1847                           postdec1	equ	0xFE5
  1848                           fsr1h	equ	0xFE2
  1849                           fsr1l	equ	0xFE1
  1850                           indf2	equ	0xFDF
  1851                           postinc2	equ	0xFDE
  1852                           postdec2	equ	0xFDD
  1853                           plusw2	equ	0xFDB
  1854                           fsr2h	equ	0xFDA
  1855                           fsr2l	equ	0xFD9
  1856                           status	equ	0xFD8
  1857                           
  1858 ;; *************** function _Receive *****************
  1859 ;; Defined at:
  1860 ;;		line 32 in file "communication.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;		None
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      unsigned char 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1
  1874 ;;      Params:         0       0       0
  1875 ;;      Locals:         0       0       0
  1876 ;;      Temps:          0       0       0
  1877 ;;      Totals:         0       0       0
  1878 ;;Total ram usage:        0 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_Isr
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text13
  1888  000504                     __ptext13:
  1889                           	opt stack 0
  1890  000504                     _Receive:
  1891                           	opt stack 27
  1892                           
  1893                           ;communication.c: 33: if(RCSTA1bits.OERR == 1) {
  1894                           
  1895                           ;incstack = 0
  1896  000504  A2AB               	btfss	4011,1,c	;volatile
  1897  000506  D004               	goto	i2l302
  1898                           
  1899                           ;communication.c: 34: RCSTA1bits.CREN = 0;
  1900  000508  98AB               	bcf	4011,4,c	;volatile
  1901                           
  1902                           ;communication.c: 35: RCSTA1bits.CREN = 1;
  1903  00050A  88AB               	bsf	4011,4,c	;volatile
  1904                           
  1905                           ;communication.c: 36: overrun = 1;
  1906  00050C  0E01               	movlw	1
  1907  00050E  6E17               	movwf	_overrun,c
  1908  000510                     i2l302:
  1909                           
  1910                           ;communication.c: 37: }
  1911                           ;communication.c: 39: return (RCREG1);
  1912  000510  50AE               	movf	4014,w,c	;volatile
  1913  000512  0012               	return	
  1914  000514                     __end_of_Receive:
  1915                           	opt stack 0
  1916  0000                     pclatu	equ	0xFFB
  1917                           pclath	equ	0xFFA
  1918                           tblptru	equ	0xFF8
  1919                           tblptrh	equ	0xFF7
  1920                           tblptrl	equ	0xFF6
  1921                           tablat	equ	0xFF5
  1922                           prodh	equ	0xFF4
  1923                           prodl	equ	0xFF3
  1924                           intcon	equ	0xFF2
  1925                           postinc0	equ	0xFEE
  1926                           fsr0h	equ	0xFEA
  1927                           fsr0l	equ	0xFE9
  1928                           wreg	equ	0xFE8
  1929                           postdec1	equ	0xFE5
  1930                           fsr1h	equ	0xFE2
  1931                           fsr1l	equ	0xFE1
  1932                           indf2	equ	0xFDF
  1933                           postinc2	equ	0xFDE
  1934                           postdec2	equ	0xFDD
  1935                           plusw2	equ	0xFDB
  1936                           fsr2h	equ	0xFDA
  1937                           fsr2l	equ	0xFD9
  1938                           status	equ	0xFD8
  1939                           pclatu	equ	0xFFB
  1940                           pclath	equ	0xFFA
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           prodh	equ	0xFF4
  1946                           prodl	equ	0xFF3
  1947                           intcon	equ	0xFF2
  1948                           postinc0	equ	0xFEE
  1949                           fsr0h	equ	0xFEA
  1950                           fsr0l	equ	0xFE9
  1951                           wreg	equ	0xFE8
  1952                           postdec1	equ	0xFE5
  1953                           fsr1h	equ	0xFE2
  1954                           fsr1l	equ	0xFE1
  1955                           indf2	equ	0xFDF
  1956                           postinc2	equ	0xFDE
  1957                           postdec2	equ	0xFDD
  1958                           plusw2	equ	0xFDB
  1959                           fsr2h	equ	0xFDA
  1960                           fsr2l	equ	0xFD9
  1961                           status	equ	0xFD8
  1962                           
  1963                           	psect	rparam
  1964  0000                     pclatu	equ	0xFFB
  1965                           pclath	equ	0xFFA
  1966                           tblptru	equ	0xFF8
  1967                           tblptrh	equ	0xFF7
  1968                           tblptrl	equ	0xFF6
  1969                           tablat	equ	0xFF5
  1970                           prodh	equ	0xFF4
  1971                           prodl	equ	0xFF3
  1972                           intcon	equ	0xFF2
  1973                           postinc0	equ	0xFEE
  1974                           fsr0h	equ	0xFEA
  1975                           fsr0l	equ	0xFE9
  1976                           wreg	equ	0xFE8
  1977                           postdec1	equ	0xFE5
  1978                           fsr1h	equ	0xFE2
  1979                           fsr1l	equ	0xFE1
  1980                           indf2	equ	0xFDF
  1981                           postinc2	equ	0xFDE
  1982                           postdec2	equ	0xFDD
  1983                           plusw2	equ	0xFDB
  1984                           fsr2h	equ	0xFDA
  1985                           fsr2l	equ	0xFD9
  1986                           status	equ	0xFD8
  1987                           
  1988                           	psect	temp
  1989  00001B                     btemp:
  1990                           	opt stack 0
  1991  00001B                     	ds	1
  1992  0000                     int$flags	set	btemp
  1993                           pclatu	equ	0xFFB
  1994                           pclath	equ	0xFFA
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           prodh	equ	0xFF4
  2000                           prodl	equ	0xFF3
  2001                           intcon	equ	0xFF2
  2002                           postinc0	equ	0xFEE
  2003                           fsr0h	equ	0xFEA
  2004                           fsr0l	equ	0xFE9
  2005                           wreg	equ	0xFE8
  2006                           postdec1	equ	0xFE5
  2007                           fsr1h	equ	0xFE2
  2008                           fsr1l	equ	0xFE1
  2009                           indf2	equ	0xFDF
  2010                           postinc2	equ	0xFDE
  2011                           postdec2	equ	0xFDD
  2012                           plusw2	equ	0xFDB
  2013                           fsr2h	equ	0xFDA
  2014                           fsr2l	equ	0xFD9
  2015                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        150
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      26
    BANK0           160      0     150
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Check_Buttons
    _Check_Buttons->_Delay_Routine
    _Check_Buttons->_Save_Data

Critical Paths under _Isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     308
                      _Check_Buttons
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0     308
                                             18 COMRAM     2     2      0
                      _Delay_Routine
                          _Save_Data
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     262
                                             15 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      46
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 15    15      0      30
                                              0 COMRAM    15    15      0
                            _Receive
 ---------------------------------------------------------------------------------
 (4) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Delay_Routine
     _Save_Data
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris

 _Isr (ROOT)
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0      96       4       93.8%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     14      1A       1       27.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B0       6        0.0%
DATA                 0      0      B0       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Oct 13 20:29:20 2016

                           l71 02B6                             l63 01B0                             l55 00C8  
                           l67 022C                             l59 0142                             l76 02B2  
                 __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000                            l243 03CC  
                          l246 03FA                   __CFG_CPB$OFF 000000                   __CFG_CPD$OFF 000000  
                          u547 049A                            _Isr 0008                            _pin 0060  
                          wreg 000FE8                     _TXSTA1bits 000FAC                   __CFG_LVP$OFF 000000  
                         ?_Isr 0001                           l1200 0228                           l1130 0494  
                         l1210 027E                           l1134 04A4                           l1214 0288  
                         l1224 029E                           l1218 0292                           l1180 013E  
                         l1244 0518                           l1238 0310                           l1190 01AC  
                         _Init 04AE                           _main 0514                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         btemp 001B                  __CFG_BORV$190 000000                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 00B0  
                __CFG_IESO$OFF 000000                 Save_Data@store 0010                   ___param_bank 000010  
                _InitInterrupt 051E                          ??_Isr 0001                __end_of_Receive 0514  
                 _BAUDCON1bits 000FB8                          ?_Init 0001                          ?_main 0001  
                        _EEADR 000FA9              _InitMiscellaneous 0528                          i2l302 0510  
                        i2l332 0074                          i2l326 006A                          i2l327 0068  
                        i2l329 0064                          _TMR1H 000FCF                          _TMR1L 000FCE  
                        _PORTA 000F80                          _PORTB 000F81                          _PORTC 000F82  
                        _PORTE 000F84                          _TRISA 000F92                          _TRISB 000F93  
                        _TRISC 000F94                          _TRISE 000F96                  __CFG_WRT0$OFF 000000  
     __end_of_InitTransmission 048C                  __CFG_WRT1$OFF 000000             ?_InitMiscellaneous 0001  
               __CFG_EBTR0$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBTR1$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBTRB$OFF 000000             __CFG_MCLRE$EXTMCLR 000000                    Isr@received 000F  
               __pbitbssCOMRAM 00D0                 __CFG_BOREN$OFF 000000            ??_InitMiscellaneous 0010  
                        tablat 000FF5                          plusw2 000FDB                          status 000FD8  
               ?_InitInterrupt 0001                __initialization 0406                   __end_of_Init 04CC  
                 __end_of_main 051E               __end_of_InitPort 0504               __end_of_InitTris 04F2  
    __end_of_InitMiscellaneous 052E                         ??_Init 0010                         ??_main 0015  
                __activetblptr 000002                         _EEDATA 000FA8                         _CCPR1H 000FBF  
                       _CCPR1L 000FBE                         _EECON2 000FA7                         _ANSELA 000F38  
                       _ANSELB 000F39                         _ANSELC 000F3A                 __CFG_WDTEN$OFF 000000  
                       _RCREG1 000FAE                         _OSCCON 000FD3             __size_of_InitAnsel 0014  
                       _SPBRG1 000FAF             __size_of_InitTimer 0028                         _TXREG1 000FAD  
                    ??_Receive 0001                 __CFG_XINST$OFF 000000                   _CCPTMRS0bits 000F49  
           __size_of_Save_Data 0054         __size_of_Check_Buttons 0268                         tblptrh 000FF7  
                       tblptrl 000FF6                         tblptru 000FF8                __CFG_HFOFST$OFF 000000  
                   __accesstop 0060        __end_of__initialization 0432                __CFG_PBADEN$OFF 000000  
              ??_InitInterrupt 0010                  ___rparam_used 000001                 __pcstackCOMRAM 0001  
                 __pidataBANK0 031C     __size_of_InitMiscellaneous 0006              __end_of_InitAnsel 04E0  
            __end_of_InitTimer 0468              __end_of_Save_Data 0406                __CFG_PLLCFG$OFF 000000  
                _Check_Buttons 00B4                      ?_InitPort 0001                      ?_InitTris 0001  
           __CFG_CCP2MX$PORTC1 000000             __CFG_CCP3MX$PORTB5 000000         __size_of_Delay_Routine 0022  
            ?_InitTransmission 0001              __CFG_PRICLKEN$OFF 000000             ??_InitTransmission 0010  
               ?_Check_Buttons 0001                     ??_InitPort 0010                     ??_InitTris 0010  
              __CFG_PWRTEN$OFF 000000                        _Receive 0504                        __Hparam 0000  
                      __Lparam 0000                __CFG_STVREN$OFF 000000                        __pcinit 0406  
                      __ramtop 0200                        __ptext0 0514                        __ptext1 04AE  
                      __ptext2 04E0                        __ptext3 0468                        __ptext4 0440  
                      __ptext5 04F2                        __ptext6 0528                        __ptext7 051E  
                      __ptext8 04CC                        __ptext9 00B4                      _T1CONbits 000FCD  
                 __size_of_Isr 00A8                      _T3CONbits 000FB1                        _overrun 0017  
         end_of_initialization 0432                  __Lmediumconst 0000                  _Delay_Routine 048C  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc2 000FDE                      _PORTAbits 000F80                      _PORTBbits 000F81  
                    _PORTCbits 000F82                      _TRISCbits 000F94                ??_Check_Buttons 0013  
               ?_Delay_Routine 0001                    _CCP1CONbits 000FBD            start_initialization 0406  
                    _InitAnsel 04CC                   _ignite_ready 00D0                    __end_of_Isr 00B0  
                    _InitTimer 0440                      _Save_Data 03B2              __size_of_InitPort 0012  
            __size_of_InitTris 0012          __end_of_InitInterrupt 0528                    __pdataBANK0 0060  
               _slave_selected 0019         Save_Data@store_address 0012                    __pbssCOMRAM 0015  
                   ?_InitAnsel 0001                     ?_InitTimer 0001                ??_Delay_Routine 0010  
                   ?_Save_Data 0010                   _current_time 0015                       ?_Receive 0001  
    __size_of_InitTransmission 0024                      __pintcode 0008                       _PIE1bits 000F9D  
                     _PIR1bits 000F9E                       _PIR2bits 000FA1               __CFG_WDTPS$32768 000000  
                     _SSP1CON1 000FC6                       _SSP1STAT 000FC7                    ??_InitAnsel 0010  
                  ??_InitTimer 0010                      copy_data0 0426                       _InitPort 04F2  
                     _InitTris 04E0                    ??_Save_Data 0013                     _EECON1bits 000FA6  
                 _pin_selected 0018                       __Hrparam 0000               __size_of_Receive 0010  
                     __Lrparam 0000              __CFG_P2BMX$PORTB5 000000                       __ptext10 03B2  
                     __ptext11 048C                       __ptext13 0504          __end_of_Check_Buttons 031C  
                __size_of_Init 001E                  __size_of_main 000A               _InitTransmission 0468  
   Delay_Routine@delay_counter 0012                       int$flags 001B                     _INTCONbits 000FF2  
                     intlevel2 0000                     _RCSTA1bits 000FAB  Delay_Routine@delay_multiplyer 0011  
            __CFG_T3CMX$PORTC0 000000         __size_of_InitInterrupt 000A          __end_of_Delay_Routine 04AE  
            __CFG_FOSC$INTIO67 000000  
