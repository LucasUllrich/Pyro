

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Feb 10 22:04:42 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    57  0000                     
    58                           	psect	idataBANK1
    59  000EE0                     __pidataBANK1:
    60                           	opt stack 0
    61                           
    62                           ;initializer for _pin
    63  000EE0  00                 	db	0
    64  000EE1  00                 	db	0
    65  000EE2  00                 	db	0
    66  000EE3  1F                 	db	31
    67  000EE4  00                 	db	0
    68  000EE5  00                 	db	0
    69  000EE6  00                 	db	0
    70  000EE7  01                 	db	1
    71  000EE8  01                 	db	1
    72  000EE9  1E                 	db	30
    73  000EEA  00                 	db	0
    74  000EEB  00                 	db	0
    75  000EEC  00                 	db	0
    76  000EED  02                 	db	2
    77  000EEE  02                 	db	2
    78  000EEF  1D                 	db	29
    79  000EF0  00                 	db	0
    80  000EF1  00                 	db	0
    81  000EF2  00                 	db	0
    82  000EF3  03                 	db	3
    83  000EF4  03                 	db	3
    84  000EF5  1C                 	db	28
    85  000EF6  00                 	db	0
    86  000EF7  00                 	db	0
    87  000EF8  00                 	db	0
    88  000EF9  04                 	db	4
    89  000EFA  04                 	db	4
    90  000EFB  1B                 	db	27
    91  000EFC  00                 	db	0
    92  000EFD  00                 	db	0
    93  000EFE  00                 	db	0
    94  000EFF  05                 	db	5
    95  000F00  05                 	db	5
    96  000F01  1A                 	db	26
    97  000F02  00                 	db	0
    98  000F03  00                 	db	0
    99  000F04  00                 	db	0
   100  000F05  06                 	db	6
   101  000F06  06                 	db	6
   102  000F07  19                 	db	25
   103  000F08  00                 	db	0
   104  000F09  00                 	db	0
   105  000F0A  00                 	db	0
   106  000F0B  07                 	db	7
   107  000F0C  07                 	db	7
   108  000F0D  18                 	db	24
   109  000F0E  00                 	db	0
   110  000F0F  00                 	db	0
   111  000F10  00                 	db	0
   112  000F11  08                 	db	8
   113  000F12  08                 	db	8
   114  000F13  27                 	db	39
   115  000F14  00                 	db	0
   116  000F15  00                 	db	0
   117  000F16  00                 	db	0
   118  000F17  09                 	db	9
   119  000F18  09                 	db	9
   120  000F19  26                 	db	38
   121  000F1A  00                 	db	0
   122  000F1B  00                 	db	0
   123  000F1C  01                 	db	1
   124  000F1D  00                 	db	0
   125  000F1E  0A                 	db	10
   126  000F1F  25                 	db	37
   127  000F20  00                 	db	0
   128  000F21  00                 	db	0
   129  000F22  01                 	db	1
   130  000F23  01                 	db	1
   131  000F24  0B                 	db	11
   132  000F25  24                 	db	36
   133  000F26  00                 	db	0
   134  000F27  00                 	db	0
   135  000F28  01                 	db	1
   136  000F29  02                 	db	2
   137  000F2A  0C                 	db	12
   138  000F2B  23                 	db	35
   139  000F2C  00                 	db	0
   140  000F2D  00                 	db	0
   141  000F2E  01                 	db	1
   142  000F2F  03                 	db	3
   143  000F30  0D                 	db	13
   144  000F31  22                 	db	34
   145  000F32  00                 	db	0
   146  000F33  00                 	db	0
   147  000F34  01                 	db	1
   148  000F35  04                 	db	4
   149  000F36  0E                 	db	14
   150  000F37  21                 	db	33
   151  000F38  00                 	db	0
   152  000F39  00                 	db	0
   153  000F3A  01                 	db	1
   154  000F3B  05                 	db	5
   155  000F3C  0F                 	db	15
   156  000F3D  20                 	db	32
   157  000F3E  00                 	db	0
   158  000F3F  00                 	db	0
   159  000F40  01                 	db	1
   160  000F41  06                 	db	6
   161  000F42  10                 	db	16
   162  000F43  2F                 	db	47
   163  000F44  00                 	db	0
   164  000F45  00                 	db	0
   165  000F46  01                 	db	1
   166  000F47  07                 	db	7
   167  000F48  11                 	db	17
   168  000F49  2E                 	db	46
   169  000F4A  00                 	db	0
   170  000F4B  00                 	db	0
   171  000F4C  01                 	db	1
   172  000F4D  08                 	db	8
   173  000F4E  12                 	db	18
   174  000F4F  2D                 	db	45
   175  000F50  00                 	db	0
   176  000F51  00                 	db	0
   177  000F52  01                 	db	1
   178  000F53  09                 	db	9
   179  000F54  13                 	db	19
   180  000F55  2C                 	db	44
   181  000F56  00                 	db	0
   182  000F57  00                 	db	0
   183  000F58  02                 	db	2
   184  000F59  00                 	db	0
   185  000F5A  14                 	db	20
   186  000F5B  2B                 	db	43
   187  000F5C  00                 	db	0
   188  000F5D  00                 	db	0
   189  000F5E  02                 	db	2
   190  000F5F  01                 	db	1
   191  000F60  15                 	db	21
   192  000F61  2A                 	db	42
   193  000F62  00                 	db	0
   194  000F63  00                 	db	0
   195  000F64  02                 	db	2
   196  000F65  02                 	db	2
   197  000F66  16                 	db	22
   198  000F67  29                 	db	41
   199  000F68  00                 	db	0
   200  000F69  00                 	db	0
   201  000F6A  02                 	db	2
   202  000F6B  03                 	db	3
   203  000F6C  17                 	db	23
   204  000F6D  28                 	db	40
   205  000F6E  00                 	db	0
   206  000F6F  00                 	db	0
   207  000F70  02                 	db	2
   208  000F71  04                 	db	4
   209  000F72  18                 	db	24
   210  000F73  35                 	db	53
   211  000F74  00                 	db	0
   212  000F75  00                 	db	0
   213  000F76  02                 	db	2
   214  000F77  05                 	db	5
   215  000F78  19                 	db	25
   216  000F79  34                 	db	52
   217  000F7A  00                 	db	0
   218  000F7B  00                 	db	0
   219  000F7C  02                 	db	2
   220  000F7D  06                 	db	6
   221  000F7E  1A                 	db	26
   222  000F7F  33                 	db	51
   223  000F80  00                 	db	0
   224  000F81  00                 	db	0
   225  000F82  02                 	db	2
   226  000F83  07                 	db	7
   227  000F84  1B                 	db	27
   228  000F85  32                 	db	50
   229  000F86  00                 	db	0
   230  000F87  00                 	db	0
   231  000F88  02                 	db	2
   232  000F89  08                 	db	8
   233  000F8A  1C                 	db	28
   234  000F8B  31                 	db	49
   235  000F8C  00                 	db	0
   236  000F8D  00                 	db	0
   237  000F8E  02                 	db	2
   238  000F8F  09                 	db	9
   239  000F90  1D                 	db	29
   240  000F91  30                 	db	48
   241  000F92  00                 	db	0
   242  000F93  00                 	db	0
   243                           
   244                           	psect	nvCOMRAM
   245  000042                     __pnvCOMRAM:
   246                           	opt stack 0
   247  000042                     _display_counter:
   248                           	opt stack 0
   249  000042                     	ds	1
   250  0000                     _ANSELA	set	3896
   251  0000                     _ANSELB	set	3897
   252  0000                     _ANSELC	set	3898
   253  0000                     _CCPTMRS0bits	set	3913
   254  0000                     _BAUDCON1bits	set	4024
   255  0000                     _CCP1CONbits	set	4029
   256  0000                     _CCPR1H	set	4031
   257  0000                     _CCPR1L	set	4030
   258  0000                     _EEADR	set	4009
   259  0000                     _EECON1bits	set	4006
   260  0000                     _EECON2	set	4007
   261  0000                     _EEDATA	set	4008
   262  0000                     _INTCONbits	set	4082
   263  0000                     _OSCCON	set	4051
   264  0000                     _PIE1bits	set	3997
   265  0000                     _PIR1bits	set	3998
   266  0000                     _PIR2bits	set	4001
   267  0000                     _PORTA	set	3968
   268  0000                     _PORTAbits	set	3968
   269  0000                     _PORTB	set	3969
   270  0000                     _PORTBbits	set	3969
   271  0000                     _PORTC	set	3970
   272  0000                     _PORTCbits	set	3970
   273  0000                     _PORTE	set	3972
   274  0000                     _RCREG1	set	4014
   275  0000                     _RCSTA1bits	set	4011
   276  0000                     _RCSTAbits	set	4011
   277  0000                     _SPBRG1	set	4015
   278  0000                     _SSP1BUF	set	4041
   279  0000                     _SSP1CON1	set	4038
   280  0000                     _SSP1STAT	set	4039
   281  0000                     _T1CONbits	set	4045
   282  0000                     _T3CONbits	set	4017
   283  0000                     _TMR1H	set	4047
   284  0000                     _TMR1L	set	4046
   285  0000                     _TMR3H	set	4019
   286  0000                     _TMR3L	set	4018
   287  0000                     _TRISA	set	3986
   288  0000                     _TRISB	set	3987
   289  0000                     _TRISC	set	3988
   290  0000                     _TRISCbits	set	3988
   291  0000                     _TRISE	set	3990
   292  0000                     _TXREG1	set	4013
   293  0000                     _TXSTA1bits	set	4012
   294  0000                     _SSP1IF	set	31987
   295                           
   296                           	psect	smallconst
   297  00021E                     __psmallconst:
   298                           	opt stack 0
   299  00021E  00                 	db	0
   300  00021F                     STR_9:
   301  00021F  41                 	db	65	;'A'
   302  000220  42                 	db	66	;'B'
   303  000221  43                 	db	67	;'C'
   304  000222  44                 	db	68	;'D'
   305  000223  45                 	db	69	;'E'
   306  000224  46                 	db	70	;'F'
   307  000225  47                 	db	71	;'G'
   308  000226  00                 	db	0
   309  000227                     STR_1:
   310  000227  41                 	db	65	;'A'
   311  000228  42                 	db	66	;'B'
   312  000229  43                 	db	67	;'C'
   313  00022A  44                 	db	68	;'D'
   314  00022B  45                 	db	69	;'E'
   315  00022C  46                 	db	70	;'F'
   316  00022D  00                 	db	0
   317  00022E                     STR_10:
   318  00022E  41                 	db	65	;'A'
   319  00022F  42                 	db	66	;'B'
   320  000230  43                 	db	67	;'C'
   321  000231  44                 	db	68	;'D'
   322  000232  46                 	db	70	;'F'
   323  000233  47                 	db	71	;'G'
   324  000234  00                 	db	0
   325  000235                     STR_11:
   326  000235  41                 	db	65	;'A'
   327  000236  42                 	db	66	;'B'
   328  000237  43                 	db	67	;'C'
   329  000238  45                 	db	69	;'E'
   330  000239  46                 	db	70	;'F'
   331  00023A  47                 	db	71	;'G'
   332  00023B  00                 	db	0
   333  00023C                     STR_7:
   334  00023C  41                 	db	65	;'A'
   335  00023D  43                 	db	67	;'C'
   336  00023E  44                 	db	68	;'D'
   337  00023F  45                 	db	69	;'E'
   338  000240  46                 	db	70	;'F'
   339  000241  47                 	db	71	;'G'
   340  000242  00                 	db	0
   341  000243                     STR_4:
   342  000243  41                 	db	65	;'A'
   343  000244  42                 	db	66	;'B'
   344  000245  43                 	db	67	;'C'
   345  000246  44                 	db	68	;'D'
   346  000247  47                 	db	71	;'G'
   347  000248  00                 	db	0
   348  000249                     STR_3:
   349  000249  41                 	db	65	;'A'
   350  00024A  42                 	db	66	;'B'
   351  00024B  44                 	db	68	;'D'
   352  00024C  45                 	db	69	;'E'
   353  00024D  47                 	db	71	;'G'
   354  00024E  00                 	db	0
   355  00024F                     STR_6:
   356  00024F  41                 	db	65	;'A'
   357  000250  43                 	db	67	;'C'
   358  000251  44                 	db	68	;'D'
   359  000252  46                 	db	70	;'F'
   360  000253  47                 	db	71	;'G'
   361  000254  00                 	db	0
   362  000255                     STR_16:
   363  000255  41                 	db	65	;'A'
   364  000256  42                 	db	66	;'B'
   365  000257  45                 	db	69	;'E'
   366  000258  46                 	db	70	;'F'
   367  000259  47                 	db	71	;'G'
   368  00025A  00                 	db	0
   369  00025B                     STR_13:
   370  00025B  41                 	db	65	;'A'
   371  00025C  44                 	db	68	;'D'
   372  00025D  45                 	db	69	;'E'
   373  00025E  46                 	db	70	;'F'
   374  00025F  47                 	db	71	;'G'
   375  000260  00                 	db	0
   376  000261                     STR_5:
   377  000261  42                 	db	66	;'B'
   378  000262  43                 	db	67	;'C'
   379  000263  46                 	db	70	;'F'
   380  000264  47                 	db	71	;'G'
   381  000265  00                 	db	0
   382  000266                     STR_8:
   383  000266  41                 	db	65	;'A'
   384  000267  42                 	db	66	;'B'
   385  000268  43                 	db	67	;'C'
   386  000269  00                 	db	0
   387  00026A                     STR_18:
   388  00026A  30                 	db	48	;'0'
   389  00026B  00                 	db	0
   390  0000                     
   391                           ; #config settings
   392  00026C  00                 	db	0	; dummy byte at the end
   393  0000                     
   394                           	psect	cinit
   395  001466                     __pcinit:
   396                           	opt stack 0
   397  001466                     start_initialization:
   398                           	opt stack 0
   399  001466                     __initialization:
   400                           	opt stack 0
   401                           
   402                           ; Clear objects allocated to BANK0 (11 bytes)
   403  001466  EE00  F07F         	lfsr	0,__pbssBANK0
   404  00146A  0E0B               	movlw	11
   405  00146C                     clear_0:
   406  00146C  6AEE               	clrf	postinc0,c
   407  00146E  06E8               	decf	wreg,f,c
   408  001470  E1FD               	bnz	clear_0
   409                           
   410                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   411  001472  6A41               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   412                           
   413                           ; Clear objects allocated to COMRAM (18 bytes)
   414  001474  EE00  F02F         	lfsr	0,__pbssCOMRAM
   415  001478  0E12               	movlw	18
   416  00147A                     clear_1:
   417  00147A  6AEE               	clrf	postinc0,c
   418  00147C  06E8               	decf	wreg,f,c
   419  00147E  E1FD               	bnz	clear_1
   420                           
   421                           ; Initialize objects allocated to BANK1 (180 bytes)
   422                           ; load TBLPTR registers with __pidataBANK1
   423  001480  0EE0               	movlw	low __pidataBANK1
   424  001482  6EF6               	movwf	tblptrl,c
   425  001484  0E0E               	movlw	high __pidataBANK1
   426  001486  6EF7               	movwf	tblptrh,c
   427  001488  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   428  00148A  6EF8               	movwf	tblptru,c
   429  00148C  EE01  F000         	lfsr	0,__pdataBANK1
   430  001490  EE10 F0B4          	lfsr	1,180
   431  001494                     copy_data0:
   432  001494  0009               	tblrd		*+
   433  001496  CFF5 FFEE          	movff	tablat,postinc0
   434  00149A  50E5               	movf	postdec1,w,c
   435  00149C  50E1               	movf	fsr1l,w,c
   436  00149E  E1FA               	bnz	copy_data0
   437  0014A0                     end_of_initialization:
   438                           	opt stack 0
   439  0014A0                     __end_of__initialization:
   440                           	opt stack 0
   441  0014A0  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   442  0014A2  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   443  0014A4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   444  0014A6  6EF8               	movwf	tblptru,c
   445  0014A8  0100               	movlb	0
   446  0014AA  EF3A  F00B         	goto	_main	;jump to C main() function
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           postdec1	equ	0xFE5
   454                           fsr1l	equ	0xFE1
   455                           
   456                           	psect	bitbssCOMRAM
   457  000208                     __pbitbssCOMRAM:
   458                           	opt stack 0
   459  000208                     _ignite_ready:
   460                           	opt stack 0
   461  000208                     	ds	1
   462  000209                     _master_addressed:
   463                           	opt stack 0
   464  000209                     	ds	1
   465  00020A                     _overrun:
   466                           	opt stack 0
   467  00020A                     	ds	1
   468  00020B                     _testflag:
   469                           	opt stack 0
   470  00020B                     	ds	1
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           postdec1	equ	0xFE5
   478                           fsr1l	equ	0xFE1
   479                           
   480                           	psect	bssCOMRAM
   481  00002F                     __pbssCOMRAM:
   482                           	opt stack 0
   483  00002F                     _received:
   484                           	opt stack 0
   485  00002F                     	ds	6
   486  000035                     _current_time:
   487                           	opt stack 0
   488  000035                     	ds	2
   489  000037                     _check_counter:
   490                           	opt stack 0
   491  000037                     	ds	1
   492  000038                     _receive_counter:
   493                           	opt stack 0
   494  000038                     	ds	1
   495  000039                     _pixels:
   496                           	opt stack 0
   497  000039                     	ds	8
   498                           tblptru	equ	0xFF8
   499                           tblptrh	equ	0xFF7
   500                           tblptrl	equ	0xFF6
   501                           tablat	equ	0xFF5
   502                           postinc0	equ	0xFEE
   503                           wreg	equ	0xFE8
   504                           postdec1	equ	0xFE5
   505                           fsr1l	equ	0xFE1
   506                           
   507                           	psect	bssBANK0
   508  00007F                     __pbssBANK0:
   509                           	opt stack 0
   510  00007F                     _pin_selected:
   511                           	opt stack 0
   512  00007F                     	ds	1
   513  000080                     _slave_selected:
   514                           	opt stack 0
   515  000080                     	ds	1
   516  000081                     _signs:
   517                           	opt stack 0
   518  000081                     	ds	3
   519  000084                     _string_delete:
   520                           	opt stack 0
   521  000084                     	ds	3
   522  000087                     _string_load:
   523                           	opt stack 0
   524  000087                     	ds	3
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           postdec1	equ	0xFE5
   532                           fsr1l	equ	0xFE1
   533                           
   534                           	psect	dataBANK1
   535  000100                     __pdataBANK1:
   536                           	opt stack 0
   537  000100                     _pin:
   538                           	opt stack 0
   539  000100                     	ds	180
   540                           tblptru	equ	0xFF8
   541                           tblptrh	equ	0xFF7
   542                           tblptrl	equ	0xFF6
   543                           tablat	equ	0xFF5
   544                           postinc0	equ	0xFEE
   545                           wreg	equ	0xFE8
   546                           postdec1	equ	0xFE5
   547                           fsr1l	equ	0xFE1
   548                           
   549                           	psect	cstackBANK0
   550  000060                     __pcstackBANK0:
   551                           	opt stack 0
   552  000060                     ??_Delay_Routine:
   553  000060                     ?_Read_Data:
   554                           	opt stack 0
   555  000060                     ?___lwdiv:
   556                           	opt stack 0
   557  000060                     ?___lwmod:
   558                           	opt stack 0
   559  000060                     Transmit@operation:
   560                           	opt stack 0
   561  000060                     Save_Data@store:
   562                           	opt stack 0
   563  000060                     Set_Bits@bits:
   564                           	opt stack 0
   565  000060                     Write_Display_Byte@write_data:
   566                           	opt stack 0
   567  000060                     ___lwdiv@dividend:
   568                           	opt stack 0
   569  000060                     ___lwmod@dividend:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0x0
   573  000060                     	ds	1
   574  000061                     Delay_Routine@delay_multiplyer:
   575                           	opt stack 0
   576  000061                     Transmit@port:
   577                           	opt stack 0
   578                           
   579                           ; 1 bytes @ 0x1
   580  000061                     	ds	1
   581  000062                     ??_Write_Display_Byte:
   582  000062                     ??_Set_Bits:
   583  000062                     Delay_Routine@delay_counter:
   584                           	opt stack 0
   585  000062                     Save_Data@store_address:
   586                           	opt stack 0
   587  000062                     Transmit@receiver:
   588                           	opt stack 0
   589  000062                     Read_Data@data_read:
   590                           	opt stack 0
   591  000062                     ___lwdiv@divisor:
   592                           	opt stack 0
   593  000062                     ___lwmod@divisor:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x2
   597  000062                     	ds	1
   598  000063                     
   599                           ; 0 bytes @ 0x3
   600  000063                     	ds	1
   601  000064                     Read_Data@read_address:
   602                           	opt stack 0
   603  000064                     ___lwdiv@counter:
   604                           	opt stack 0
   605  000064                     ___lwmod@counter:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x4
   609  000064                     	ds	1
   610  000065                     ___lwdiv@quotient:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x5
   614  000065                     	ds	1
   615  000066                     Set_Bits@bitcount:
   616                           	opt stack 0
   617  000066                     Write_Display_Byte@counter:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0x6
   621  000066                     	ds	1
   622  000067                     Set_Bits@Bitoutput:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x7
   626  000067                     	ds	1
   627  000068                     Evaluate_Display@evaluate:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x8
   631  000068                     	ds	2
   632  00006A                     ??_Evaluate_Display:
   633                           
   634                           ; 0 bytes @ 0xA
   635  00006A                     	ds	4
   636  00006E                     Evaluate_Display@size:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0xE
   640  00006E                     	ds	1
   641  00006F                     Evaluate_Signs@evaluation_value:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0xF
   645  00006F                     	ds	2
   646  000071                     ??_Evaluate_Signs:
   647                           
   648                           ; 0 bytes @ 0x11
   649  000071                     	ds	4
   650  000075                     Evaluate_Signs@valuecounter:
   651                           	opt stack 0
   652                           
   653                           ; 1 bytes @ 0x15
   654  000075                     	ds	1
   655  000076                     Set_Display@information:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x16
   659  000076                     	ds	1
   660  000077                     Set_Display@value:
   661                           	opt stack 0
   662                           
   663                           ; 2 bytes @ 0x17
   664  000077                     	ds	2
   665  000079                     Set_Display@type:
   666                           	opt stack 0
   667                           
   668                           ; 1 bytes @ 0x19
   669  000079                     	ds	1
   670  00007A                     ??_Load_Data:
   671                           
   672                           ; 0 bytes @ 0x1A
   673  00007A                     	ds	1
   674  00007B                     Load_Data@counter:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x1B
   678  00007B                     	ds	1
   679  00007C                     Del_Data@counter:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x1C
   683  00007C                     	ds	1
   684  00007D                     ??_Check_Buttons:
   685                           
   686                           ; 0 bytes @ 0x1D
   687  00007D                     	ds	2
   688  00007F                     tblptru	equ	0xFF8
   689                           tblptrh	equ	0xFF7
   690                           tblptrl	equ	0xFF6
   691                           tablat	equ	0xFF5
   692                           postinc0	equ	0xFEE
   693                           wreg	equ	0xFE8
   694                           postdec1	equ	0xFE5
   695                           fsr1l	equ	0xFE1
   696                           
   697                           ; 0 bytes @ 0x1F
   698                           
   699                           	psect	cstackCOMRAM
   700  000001                     __pcstackCOMRAM:
   701                           	opt stack 0
   702  000001                     ?___awdiv:
   703                           	opt stack 0
   704  000001                     ?i2___lwdiv:
   705                           	opt stack 0
   706  000001                     ?i2___lwmod:
   707                           	opt stack 0
   708  000001                     Receive_Dump@dump:
   709                           	opt stack 0
   710  000001                     i2Transmit@operation:
   711                           	opt stack 0
   712  000001                     ___awdiv@dividend:
   713                           	opt stack 0
   714  000001                     i2Set_Bits@bits:
   715                           	opt stack 0
   716  000001                     i2Write_Display_Byte@write_data:
   717                           	opt stack 0
   718  000001                     i2___lwdiv@dividend:
   719                           	opt stack 0
   720  000001                     i2___lwmod@dividend:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x0
   724  000001                     	ds	1
   725  000002                     i2Transmit@port:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x1
   729  000002                     	ds	1
   730  000003                     ??i2_Set_Bits:
   731  000003                     ??i2_Write_Display_Byte:
   732  000003                     i2Transmit@receiver:
   733                           	opt stack 0
   734  000003                     ___awdiv@divisor:
   735                           	opt stack 0
   736  000003                     i2___lwdiv@divisor:
   737                           	opt stack 0
   738  000003                     i2___lwmod@divisor:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x2
   742  000003                     	ds	1
   743  000004                     
   744                           ; 0 bytes @ 0x3
   745  000004                     	ds	1
   746  000005                     ___awdiv@counter:
   747                           	opt stack 0
   748  000005                     i2___lwmod@counter:
   749                           	opt stack 0
   750  000005                     i2___lwdiv@quotient:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x4
   754  000005                     	ds	1
   755  000006                     Ignite_Detonators@counter:
   756                           	opt stack 0
   757  000006                     ___awdiv@sign:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x5
   761  000006                     	ds	1
   762  000007                     i2Set_Bits@bitcount:
   763                           	opt stack 0
   764  000007                     i2Write_Display_Byte@counter:
   765                           	opt stack 0
   766  000007                     i2___lwdiv@counter:
   767                           	opt stack 0
   768  000007                     ___awdiv@quotient:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x6
   772  000007                     	ds	1
   773  000008                     i2Set_Bits@Bitoutput:
   774                           	opt stack 0
   775                           
   776                           ; 1 bytes @ 0x7
   777  000008                     	ds	1
   778  000009                     i2Evaluate_Display@evaluate:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x8
   782  000009                     	ds	2
   783  00000B                     ??i2_Evaluate_Display:
   784                           
   785                           ; 0 bytes @ 0xA
   786  00000B                     	ds	4
   787  00000F                     i2Evaluate_Display@size:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0xE
   791  00000F                     	ds	1
   792  000010                     i2Evaluate_Signs@evaluation_value:
   793                           	opt stack 0
   794                           
   795                           ; 2 bytes @ 0xF
   796  000010                     	ds	2
   797  000012                     ??i2_Evaluate_Signs:
   798                           
   799                           ; 0 bytes @ 0x11
   800  000012                     	ds	4
   801  000016                     i2Evaluate_Signs@valuecounter:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x15
   805  000016                     	ds	1
   806  000017                     i2Set_Display@information:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x16
   810  000017                     	ds	1
   811  000018                     i2Set_Display@value:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x17
   815  000018                     	ds	2
   816  00001A                     i2Set_Display@type:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x19
   820  00001A                     	ds	1
   821  00001B                     ??_Isr:
   822                           
   823                           ; 0 bytes @ 0x1A
   824  00001B                     	ds	17
   825  00002C                     Isr@pixel_index_array:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x2B
   829  00002C                     	ds	1
   830  00002D                     Isr@pixel_index_bit:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x2C
   834  00002D                     	ds	1
   835  00002E                     Isr@search_index:
   836                           	opt stack 0
   837                           
   838                           ; 1 bytes @ 0x2D
   839  00002E                     	ds	1
   840                           tblptru	equ	0xFF8
   841                           tblptrh	equ	0xFF7
   842                           tblptrl	equ	0xFF6
   843                           tablat	equ	0xFF5
   844                           postinc0	equ	0xFEE
   845                           wreg	equ	0xFE8
   846                           postdec1	equ	0xFE5
   847                           fsr1l	equ	0xFE1
   848                           
   849 ;;
   850 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   851 ;;
   852 ;; *************** function _main *****************
   853 ;; Defined at:
   854 ;;		line 86 in file "main.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;		None
   857 ;; Auto vars:     Size  Location     Type
   858 ;;		None
   859 ;; Return value:  Size  Location     Type
   860 ;;		None               void
   861 ;; Registers used:
   862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1
   868 ;;      Params:         0       0       0
   869 ;;      Locals:         0       0       0
   870 ;;      Temps:          0       0       0
   871 ;;      Totals:         0       0       0
   872 ;;Total ram usage:        0 bytes
   873 ;; Hardware stack levels required when called:   12
   874 ;; This function calls:
   875 ;;		_Check_Buttons
   876 ;;		_Check_Detonators
   877 ;;		_Init
   878 ;;		_Load_Data
   879 ;;		_Set_Display
   880 ;; This function is called by:
   881 ;;		Startup code after reset
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text0
   886  001674                     __ptext0:
   887                           	opt stack 0
   888  001674                     _main:
   889                           	opt stack 19
   890                           
   891                           ;main.c: 87: Init();
   892                           
   893                           ;incstack = 0
   894  001674  EC63  F00B         	call	_Init	;wreg free
   895                           
   896                           ;main.c: 88: Load_Data();
   897  001678  EC9C  F005         	call	_Load_Data	;wreg free
   898                           
   899                           ;main.c: 89: PORTAbits.RA0 = 1;
   900  00167C  8080               	bsf	3968,0,c	;volatile
   901  00167E                     l3429:
   902                           
   903                           ;main.c: 91: Check_Buttons();
   904  00167E  EC37  F001         	call	_Check_Buttons	;wreg free
   905                           
   906                           ;main.c: 92: if(testflag == 1) {
   907  001682  A641               	btfss	_testflag/(0+8),_testflag& (0+7),c
   908  001684  D7FC               	goto	l3429
   909                           
   910                           ;main.c: 93: Set_Display('7', 'T',0);
   911  001686  0E54               	movlw	84
   912  001688  0100               	movlb	0	; () banked
   913  00168A  6F76               	movwf	Set_Display@information& (0+255),b
   914  00168C  0E00               	movlw	0
   915  00168E  0100               	movlb	0	; () banked
   916  001690  6F78               	movwf	(Set_Display@value+1)& (0+255),b
   917  001692  0E00               	movlw	0
   918  001694  6F77               	movwf	Set_Display@value& (0+255),b
   919  001696  0E37               	movlw	55
   920  001698  ECCC  F008         	call	_Set_Display
   921                           
   922                           ;main.c: 94: Check_Detonators();
   923  00169C  EC99  F00A         	call	_Check_Detonators	;wreg free
   924  0016A0  D7EE               	goto	l3429
   925  0016A2                     __end_of_main:
   926                           	opt stack 0
   927                           tblptru	equ	0xFF8
   928                           tblptrh	equ	0xFF7
   929                           tblptrl	equ	0xFF6
   930                           tablat	equ	0xFF5
   931                           postinc0	equ	0xFEE
   932                           wreg	equ	0xFE8
   933                           postdec1	equ	0xFE5
   934                           fsr1l	equ	0xFE1
   935                           
   936 ;; *************** function _Init *****************
   937 ;; Defined at:
   938 ;;		line 3 in file "init.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;		None               void
   945 ;; Registers used:
   946 ;;		wreg, status,2, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1
   952 ;;      Params:         0       0       0
   953 ;;      Locals:         0       0       0
   954 ;;      Temps:          0       0       0
   955 ;;      Totals:         0       0       0
   956 ;;Total ram usage:        0 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    6
   959 ;; This function calls:
   960 ;;		_InitAnsel
   961 ;;		_InitInterrupt
   962 ;;		_InitMiscellaneous
   963 ;;		_InitPort
   964 ;;		_InitTimer
   965 ;;		_InitTransmission
   966 ;;		_InitTris
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text1
   973  0016C6                     __ptext1:
   974                           	opt stack 0
   975  0016C6                     _Init:
   976                           	opt stack 24
   977                           
   978                           ;init.c: 4: InitPort();
   979                           
   980                           ;incstack = 0
   981  0016C6  EC93  F00B         	call	_InitPort	;wreg free
   982                           
   983                           ;init.c: 5: InitTris();
   984  0016CA  EC8A  F00B         	call	_InitTris	;wreg free
   985                           
   986                           ;init.c: 6: InitAnsel();
   987  0016CE  EC80  F00B         	call	_InitAnsel	;wreg free
   988                           
   989                           ;init.c: 7: InitMiscellaneous();
   990  0016D2  ECB1  F00B         	call	_InitMiscellaneous	;wreg free
   991                           
   992                           ;init.c: 8: InitTransmission();
   993  0016D6  EC51  F00B         	call	_InitTransmission	;wreg free
   994                           
   995                           ;init.c: 9: InitTimer();
   996  0016DA  EC0A  F00B         	call	_InitTimer	;wreg free
   997                           
   998                           ;init.c: 10: InitInterrupt();
   999  0016DE  ECAB  F00B         	call	_InitInterrupt	;wreg free
  1000  0016E2  0012               	return		;funcret
  1001  0016E4                     __end_of_Init:
  1002                           	opt stack 0
  1003                           tblptru	equ	0xFF8
  1004                           tblptrh	equ	0xFF7
  1005                           tblptrl	equ	0xFF6
  1006                           tablat	equ	0xFF5
  1007                           postinc0	equ	0xFEE
  1008                           wreg	equ	0xFE8
  1009                           postdec1	equ	0xFE5
  1010                           fsr1l	equ	0xFE1
  1011                           
  1012 ;; *************** function _InitTris *****************
  1013 ;; Defined at:
  1014 ;;		line 20 in file "init.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;		None               void
  1021 ;; Registers used:
  1022 ;;		wreg, status,2
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1
  1028 ;;      Params:         0       0       0
  1029 ;;      Locals:         0       0       0
  1030 ;;      Temps:          0       0       0
  1031 ;;      Totals:         0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    5
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_Init
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text2
  1043  001714                     __ptext2:
  1044                           	opt stack 0
  1045  001714                     _InitTris:
  1046                           	opt stack 24
  1047                           
  1048                           ;init.c: 21: TRISA = 0b00000000;
  1049                           
  1050                           ;incstack = 0
  1051  001714  0E00               	movlw	0
  1052  001716  6E92               	movwf	3986,c	;volatile
  1053                           
  1054                           ;init.c: 22: TRISB = 0b00011111;
  1055  001718  0E1F               	movlw	31
  1056  00171A  6E93               	movwf	3987,c	;volatile
  1057                           
  1058                           ;init.c: 23: TRISC = 0b10000010;
  1059  00171C  0E82               	movlw	130
  1060  00171E  6E94               	movwf	3988,c	;volatile
  1061                           
  1062                           ;init.c: 24: TRISE = 0;
  1063  001720  0E00               	movlw	0
  1064  001722  6E96               	movwf	3990,c	;volatile
  1065  001724  0012               	return		;funcret
  1066  001726                     __end_of_InitTris:
  1067                           	opt stack 0
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           postinc0	equ	0xFEE
  1073                           wreg	equ	0xFE8
  1074                           postdec1	equ	0xFE5
  1075                           fsr1l	equ	0xFE1
  1076                           
  1077 ;; *************** function _InitTransmission *****************
  1078 ;; Defined at:
  1079 ;;		line 37 in file "init.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;		None               void
  1086 ;; Registers used:
  1087 ;;		wreg, status,2
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1
  1093 ;;      Params:         0       0       0
  1094 ;;      Locals:         0       0       0
  1095 ;;      Temps:          0       0       0
  1096 ;;      Totals:         0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    5
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_Init
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text3
  1108  0016A2                     __ptext3:
  1109                           	opt stack 0
  1110  0016A2                     _InitTransmission:
  1111                           	opt stack 24
  1112                           
  1113                           ;init.c: 39: SSP1STAT = 0b01000000;
  1114                           
  1115                           ;incstack = 0
  1116  0016A2  0E40               	movlw	64
  1117  0016A4  6EC7               	movwf	4039,c	;volatile
  1118                           
  1119                           ;init.c: 40: SSP1CON1 = 0b00100010;
  1120  0016A6  0E22               	movlw	34
  1121  0016A8  6EC6               	movwf	4038,c	;volatile
  1122                           
  1123                           ;init.c: 42: TXSTA1bits.SYNC = 0;
  1124  0016AA  98AC               	bcf	4012,4,c	;volatile
  1125                           
  1126                           ;init.c: 43: TXSTA1bits.BRGH = 1;
  1127  0016AC  84AC               	bsf	4012,2,c	;volatile
  1128                           
  1129                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
  1130  0016AE  96B8               	bcf	4024,3,c	;volatile
  1131                           
  1132                           ;init.c: 45: SPBRG1 = 25;
  1133  0016B0  0E19               	movlw	25
  1134  0016B2  6EAF               	movwf	4015,c	;volatile
  1135                           
  1136                           ;init.c: 46: TRISCbits.RC6 = 1;
  1137  0016B4  8C94               	bsf	3988,6,c	;volatile
  1138                           
  1139                           ;init.c: 47: TRISCbits.RC7 = 1;
  1140  0016B6  8E94               	bsf	3988,7,c	;volatile
  1141                           
  1142                           ;init.c: 48: RCSTA1bits.SPEN = 1;
  1143  0016B8  8EAB               	bsf	4011,7,c	;volatile
  1144                           
  1145                           ;init.c: 49: TXSTA1bits.TX9 = 1;
  1146  0016BA  8CAC               	bsf	4012,6,c	;volatile
  1147                           
  1148                           ;init.c: 50: TXSTA1bits.TXEN = 1;
  1149  0016BC  8AAC               	bsf	4012,5,c	;volatile
  1150                           
  1151                           ;init.c: 51: RCSTA1bits.RC9 = 1;
  1152  0016BE  8CAB               	bsf	4011,6,c	;volatile
  1153                           
  1154                           ;init.c: 52: RCSTA1bits.CREN = 1;
  1155  0016C0  88AB               	bsf	4011,4,c	;volatile
  1156                           
  1157                           ;init.c: 53: TRISCbits.RC6 = 0;
  1158  0016C2  9C94               	bcf	3988,6,c	;volatile
  1159  0016C4  0012               	return		;funcret
  1160  0016C6                     __end_of_InitTransmission:
  1161                           	opt stack 0
  1162                           tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           postdec1	equ	0xFE5
  1169                           fsr1l	equ	0xFE1
  1170                           
  1171 ;; *************** function _InitTimer *****************
  1172 ;; Defined at:
  1173 ;;		line 56 in file "init.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;		None               void
  1180 ;; Registers used:
  1181 ;;		wreg, status,2
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1
  1187 ;;      Params:         0       0       0
  1188 ;;      Locals:         0       0       0
  1189 ;;      Temps:          0       0       0
  1190 ;;      Totals:         0       0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    5
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_Init
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text4
  1202  001614                     __ptext4:
  1203                           	opt stack 0
  1204  001614                     _InitTimer:
  1205                           	opt stack 24
  1206                           
  1207                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
  1208                           
  1209                           ;incstack = 0
  1210  001614  0E3F               	movlw	-193
  1211  001616  16CD               	andwf	4045,f,c	;volatile
  1212                           
  1213                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
  1214  001618  0E30               	movlw	48
  1215  00161A  12CD               	iorwf	4045,f,c	;volatile
  1216                           
  1217                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
  1218  00161C  94CD               	bcf	4045,2,c	;volatile
  1219                           
  1220                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
  1221  00161E  0E3F               	movlw	-193
  1222  001620  16B1               	andwf	4017,f,c	;volatile
  1223                           
  1224                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
  1225  001622  0E30               	movlw	48
  1226  001624  12B1               	iorwf	4017,f,c	;volatile
  1227                           
  1228                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
  1229  001626  94B1               	bcf	4017,2,c	;volatile
  1230                           
  1231                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
  1232  001628  50BD               	movf	4029,w,c	;volatile
  1233  00162A  0BF0               	andlw	-16
  1234  00162C  090A               	iorlw	10
  1235  00162E  6EBD               	movwf	4029,c	;volatile
  1236                           
  1237                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
  1238  001630  010F               	movlb	15	; () banked
  1239  001632  5149               	movf	73,w,b	;volatile
  1240  001634  0BFC               	andlw	-4
  1241  001636  0901               	iorlw	1
  1242  001638  6F49               	movwf	73,b	;volatile
  1243                           
  1244                           ;init.c: 68: CCPR1L = 72;
  1245  00163A  0E48               	movlw	72
  1246  00163C  6EBE               	movwf	4030,c	;volatile
  1247                           
  1248                           ;init.c: 69: CCPR1H = 232;
  1249  00163E  0EE8               	movlw	232
  1250  001640  6EBF               	movwf	4031,c	;volatile
  1251                           
  1252                           ; BSR set to: 15
  1253  001642  0012               	return		;funcret
  1254  001644                     __end_of_InitTimer:
  1255                           	opt stack 0
  1256                           tblptru	equ	0xFF8
  1257                           tblptrh	equ	0xFF7
  1258                           tblptrl	equ	0xFF6
  1259                           tablat	equ	0xFF5
  1260                           postinc0	equ	0xFEE
  1261                           wreg	equ	0xFE8
  1262                           postdec1	equ	0xFE5
  1263                           fsr1l	equ	0xFE1
  1264                           
  1265 ;; *************** function _InitPort *****************
  1266 ;; Defined at:
  1267 ;;		line 13 in file "init.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;		None               void
  1274 ;; Registers used:
  1275 ;;		wreg, status,2
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1
  1281 ;;      Params:         0       0       0
  1282 ;;      Locals:         0       0       0
  1283 ;;      Temps:          0       0       0
  1284 ;;      Totals:         0       0       0
  1285 ;;Total ram usage:        0 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    5
  1288 ;; This function calls:
  1289 ;;		Nothing
  1290 ;; This function is called by:
  1291 ;;		_Init
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text5
  1296  001726                     __ptext5:
  1297                           	opt stack 0
  1298  001726                     _InitPort:
  1299                           	opt stack 24
  1300                           
  1301                           ;init.c: 14: PORTA = 0b00000000;
  1302                           
  1303                           ; BSR set to: 15
  1304                           ;incstack = 0
  1305  001726  0E00               	movlw	0
  1306  001728  6E80               	movwf	3968,c	;volatile
  1307                           
  1308                           ;init.c: 15: PORTB = 0b00000000;
  1309  00172A  0E00               	movlw	0
  1310  00172C  6E81               	movwf	3969,c	;volatile
  1311                           
  1312                           ;init.c: 16: PORTC = 0b00000100;
  1313  00172E  0E04               	movlw	4
  1314  001730  6E82               	movwf	3970,c	;volatile
  1315                           
  1316                           ;init.c: 17: PORTE = 0;
  1317  001732  0E00               	movlw	0
  1318  001734  6E84               	movwf	3972,c	;volatile
  1319  001736  0012               	return		;funcret
  1320  001738                     __end_of_InitPort:
  1321                           	opt stack 0
  1322                           tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           tblptrl	equ	0xFF6
  1325                           tablat	equ	0xFF5
  1326                           postinc0	equ	0xFEE
  1327                           wreg	equ	0xFE8
  1328                           postdec1	equ	0xFE5
  1329                           fsr1l	equ	0xFE1
  1330                           
  1331 ;; *************** function _InitMiscellaneous *****************
  1332 ;; Defined at:
  1333 ;;		line 33 in file "init.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;		None
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;		None
  1338 ;; Return value:  Size  Location     Type
  1339 ;;		None               void
  1340 ;; Registers used:
  1341 ;;		wreg, status,2
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1
  1347 ;;      Params:         0       0       0
  1348 ;;      Locals:         0       0       0
  1349 ;;      Temps:          0       0       0
  1350 ;;      Totals:         0       0       0
  1351 ;;Total ram usage:        0 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    5
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_Init
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text6
  1362  001762                     __ptext6:
  1363                           	opt stack 0
  1364  001762                     _InitMiscellaneous:
  1365                           	opt stack 24
  1366                           
  1367                           ;init.c: 34: OSCCON = 0b01010011;
  1368                           
  1369                           ;incstack = 0
  1370  001762  0E53               	movlw	83
  1371  001764  6ED3               	movwf	4051,c	;volatile
  1372  001766  0012               	return		;funcret
  1373  001768                     __end_of_InitMiscellaneous:
  1374                           	opt stack 0
  1375                           tblptru	equ	0xFF8
  1376                           tblptrh	equ	0xFF7
  1377                           tblptrl	equ	0xFF6
  1378                           tablat	equ	0xFF5
  1379                           postinc0	equ	0xFEE
  1380                           wreg	equ	0xFE8
  1381                           postdec1	equ	0xFE5
  1382                           fsr1l	equ	0xFE1
  1383                           
  1384 ;; *************** function _InitInterrupt *****************
  1385 ;; Defined at:
  1386 ;;		line 72 in file "init.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;		None               void
  1393 ;; Registers used:
  1394 ;;		None
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1
  1400 ;;      Params:         0       0       0
  1401 ;;      Locals:         0       0       0
  1402 ;;      Temps:          0       0       0
  1403 ;;      Totals:         0       0       0
  1404 ;;Total ram usage:        0 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    5
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_Init
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text7
  1415  001756                     __ptext7:
  1416                           	opt stack 0
  1417  001756                     _InitInterrupt:
  1418                           	opt stack 24
  1419                           
  1420                           ;init.c: 73: INTCONbits.GIE = 1;
  1421                           
  1422                           ;incstack = 0
  1423  001756  8EF2               	bsf	intcon,7,c	;volatile
  1424                           
  1425                           ;init.c: 74: INTCONbits.PEIE = 1;
  1426  001758  8CF2               	bsf	intcon,6,c	;volatile
  1427                           
  1428                           ;init.c: 75: PIE1bits.RCIE = 1;
  1429  00175A  8A9D               	bsf	3997,5,c	;volatile
  1430                           
  1431                           ;init.c: 76: PIE1bits.CCP1IE = 1;
  1432  00175C  849D               	bsf	3997,2,c	;volatile
  1433                           
  1434                           ;init.c: 77: PIE1bits.TMR1IE = 1;
  1435  00175E  809D               	bsf	3997,0,c	;volatile
  1436  001760  0012               	return		;funcret
  1437  001762                     __end_of_InitInterrupt:
  1438                           	opt stack 0
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           intcon	equ	0xFF2
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           postdec1	equ	0xFE5
  1447                           fsr1l	equ	0xFE1
  1448                           
  1449 ;; *************** function _InitAnsel *****************
  1450 ;; Defined at:
  1451 ;;		line 27 in file "init.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;		None               void
  1458 ;; Registers used:
  1459 ;;		wreg, status,2
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMRAM   BANK0   BANK1
  1465 ;;      Params:         0       0       0
  1466 ;;      Locals:         0       0       0
  1467 ;;      Temps:          0       0       0
  1468 ;;      Totals:         0       0       0
  1469 ;;Total ram usage:        0 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    5
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_Init
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text8
  1480  001700                     __ptext8:
  1481                           	opt stack 0
  1482  001700                     _InitAnsel:
  1483                           	opt stack 24
  1484                           
  1485                           ;init.c: 28: ANSELA = 0;
  1486                           
  1487                           ;incstack = 0
  1488  001700  0E00               	movlw	0
  1489  001702  010F               	movlb	15	; () banked
  1490  001704  6F38               	movwf	56,b	;volatile
  1491                           
  1492                           ;init.c: 29: ANSELB = 0;
  1493  001706  0E00               	movlw	0
  1494  001708  010F               	movlb	15	; () banked
  1495  00170A  6F39               	movwf	57,b	;volatile
  1496                           
  1497                           ;init.c: 30: ANSELC = 0;
  1498  00170C  0E00               	movlw	0
  1499  00170E  010F               	movlb	15	; () banked
  1500  001710  6F3A               	movwf	58,b	;volatile
  1501                           
  1502                           ; BSR set to: 15
  1503  001712  0012               	return		;funcret
  1504  001714                     __end_of_InitAnsel:
  1505                           	opt stack 0
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           intcon	equ	0xFF2
  1511                           postinc0	equ	0xFEE
  1512                           wreg	equ	0xFE8
  1513                           postdec1	equ	0xFE5
  1514                           fsr1l	equ	0xFE1
  1515                           
  1516 ;; *************** function _Check_Detonators *****************
  1517 ;; Defined at:
  1518 ;;		line 25 in file "ignition.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;		None               void
  1525 ;; Registers used:
  1526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1
  1532 ;;      Params:         0       0       0
  1533 ;;      Locals:         0       0       0
  1534 ;;      Temps:          0       0       0
  1535 ;;      Totals:         0       0       0
  1536 ;;Total ram usage:        0 bytes
  1537 ;; Hardware stack levels used:    1
  1538 ;; Hardware stack levels required when called:    6
  1539 ;; This function calls:
  1540 ;;		_Transmit
  1541 ;; This function is called by:
  1542 ;;		_main
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text9
  1547  001532                     __ptext9:
  1548                           	opt stack 0
  1549  001532                     _Check_Detonators:
  1550                           	opt stack 24
  1551                           
  1552                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  1553                           
  1554                           ; BSR set to: 15
  1555                           ;incstack = 0
  1556  001532  0E54               	movlw	84
  1557  001534  0100               	movlb	0	; () banked
  1558  001536  6F60               	movwf	Transmit@operation& (0+255),b
  1559  001538  5037               	movf	_check_counter,w,c
  1560  00153A  0D06               	mullw	6
  1561  00153C  0E01               	movlw	1
  1562  00153E  26F3               	addwf	prodl,f,c
  1563  001540  0E00               	movlw	0
  1564  001542  22F4               	addwfc	prodh,f,c
  1565  001544  0E00               	movlw	low _pin
  1566  001546  24F3               	addwf	prodl,w,c
  1567  001548  6ED9               	movwf	fsr2l,c
  1568  00154A  0E01               	movlw	high _pin
  1569  00154C  20F4               	addwfc	prodh,w,c
  1570  00154E  6EDA               	movwf	fsr2h,c
  1571  001550  50DF               	movf	indf2,w,c
  1572  001552  0100               	movlb	0	; () banked
  1573  001554  6F61               	movwf	Transmit@port& (0+255),b
  1574  001556  5037               	movf	_check_counter,w,c
  1575  001558  0D06               	mullw	6
  1576  00155A  0E00               	movlw	low _pin
  1577  00155C  24F3               	addwf	prodl,w,c
  1578  00155E  6ED9               	movwf	fsr2l,c
  1579  001560  0E01               	movlw	high _pin
  1580  001562  20F4               	addwfc	prodh,w,c
  1581  001564  6EDA               	movwf	fsr2h,c
  1582  001566  50DF               	movf	indf2,w,c
  1583  001568  ECB7  F00A         	call	_Transmit
  1584  00156C  0012               	return		;funcret
  1585  00156E                     __end_of_Check_Detonators:
  1586                           	opt stack 0
  1587                           tblptru	equ	0xFF8
  1588                           tblptrh	equ	0xFF7
  1589                           tblptrl	equ	0xFF6
  1590                           tablat	equ	0xFF5
  1591                           prodh	equ	0xFF4
  1592                           prodl	equ	0xFF3
  1593                           intcon	equ	0xFF2
  1594                           postinc0	equ	0xFEE
  1595                           wreg	equ	0xFE8
  1596                           postdec1	equ	0xFE5
  1597                           fsr1l	equ	0xFE1
  1598                           indf2	equ	0xFDF
  1599                           fsr2h	equ	0xFDA
  1600                           fsr2l	equ	0xFD9
  1601                           
  1602 ;; *************** function _Transmit *****************
  1603 ;; Defined at:
  1604 ;;		line 15 in file "communication.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  receiver        1    wreg     unsigned char 
  1607 ;;  operation       1    0[BANK0 ] unsigned char 
  1608 ;;  port            1    1[BANK0 ] unsigned char 
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;  receiver        1    2[BANK0 ] unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;		None               void
  1613 ;; Registers used:
  1614 ;;		wreg, status,2
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1
  1620 ;;      Params:         0       2       0
  1621 ;;      Locals:         0       1       0
  1622 ;;      Temps:          0       0       0
  1623 ;;      Totals:         0       3       0
  1624 ;;Total ram usage:        3 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    5
  1627 ;; This function calls:
  1628 ;;		Nothing
  1629 ;; This function is called by:
  1630 ;;		_Check_Detonators
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text10
  1635  00156E                     __ptext10:
  1636                           	opt stack 0
  1637  00156E                     _Transmit:
  1638                           	opt stack 24
  1639                           
  1640                           ;incstack = 0
  1641                           ;Transmit@receiver stored from wreg
  1642  00156E  0100               	movlb	0	; () banked
  1643  001570  6F62               	movwf	Transmit@receiver& (0+255),b
  1644                           
  1645                           ;communication.c: 17: PORTBbits.RB5 = 1;
  1646  001572  8A81               	bsf	3969,5,c	;volatile
  1647                           
  1648                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  1649  001574  98AB               	bcf	4011,4,c	;volatile
  1650                           
  1651                           ;communication.c: 20: __nop();
  1652  001576  F000               	nop	
  1653  001578                     l522:
  1654  001578  A89E               	btfss	3998,4,c	;volatile
  1655  00157A  D7FE               	goto	l522
  1656                           
  1657                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  1658  00157C  80AC               	bsf	4012,0,c	;volatile
  1659                           
  1660                           ;communication.c: 23: TXREG1 = receiver;
  1661  00157E  C062  FFAD         	movff	Transmit@receiver,4013	;volatile
  1662  001582                     l525:
  1663  001582  A89E               	btfss	3998,4,c	;volatile
  1664  001584  D7FE               	goto	l525
  1665                           
  1666                           ;communication.c: 25: TXREG1 = 0xAA;
  1667  001586  0EAA               	movlw	170
  1668  001588  6EAD               	movwf	4013,c	;volatile
  1669  00158A                     l528:
  1670  00158A  A89E               	btfss	3998,4,c	;volatile
  1671  00158C  D7FE               	goto	l528
  1672                           
  1673                           ;communication.c: 27: TXREG1 = operation;
  1674  00158E  C060  FFAD         	movff	Transmit@operation,4013	;volatile
  1675  001592                     l531:
  1676  001592  A89E               	btfss	3998,4,c	;volatile
  1677  001594  D7FE               	goto	l531
  1678                           
  1679                           ;communication.c: 29: TXREG1 = port;
  1680  001596  C061  FFAD         	movff	Transmit@port,4013	;volatile
  1681  00159A                     l534:
  1682  00159A  A2AC               	btfss	4012,1,c	;volatile
  1683  00159C  D7FE               	goto	l534
  1684                           
  1685                           ;communication.c: 31: PORTBbits.RB5 = 0;
  1686  00159E  9A81               	bcf	3969,5,c	;volatile
  1687                           
  1688                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  1689  0015A0  88AB               	bsf	4011,4,c	;volatile
  1690                           
  1691                           ;communication.c: 33: __nop();
  1692  0015A2  F000               	nop	
  1693  0015A4  0012               	return		;funcret
  1694  0015A6                     __end_of_Transmit:
  1695                           	opt stack 0
  1696                           tblptru	equ	0xFF8
  1697                           tblptrh	equ	0xFF7
  1698                           tblptrl	equ	0xFF6
  1699                           tablat	equ	0xFF5
  1700                           prodh	equ	0xFF4
  1701                           prodl	equ	0xFF3
  1702                           intcon	equ	0xFF2
  1703                           postinc0	equ	0xFEE
  1704                           wreg	equ	0xFE8
  1705                           postdec1	equ	0xFE5
  1706                           fsr1l	equ	0xFE1
  1707                           indf2	equ	0xFDF
  1708                           fsr2h	equ	0xFDA
  1709                           fsr2l	equ	0xFD9
  1710                           
  1711 ;; *************** function _Check_Buttons *****************
  1712 ;; Defined at:
  1713 ;;		line 26 in file "buttonchanges.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;		None               void
  1720 ;; Registers used:
  1721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1
  1727 ;;      Params:         0       0       0
  1728 ;;      Locals:         0       0       0
  1729 ;;      Temps:          0       2       0
  1730 ;;      Totals:         0       2       0
  1731 ;;Total ram usage:        2 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:   11
  1734 ;; This function calls:
  1735 ;;		_Del_Data
  1736 ;;		_Delay_Routine
  1737 ;;		_Read_Data
  1738 ;;		_Save_Data
  1739 ;;		_Set_Display
  1740 ;;		_Start_Timer
  1741 ;; This function is called by:
  1742 ;;		_main
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text11
  1747  00026E                     __ptext11:
  1748                           	opt stack 0
  1749  00026E                     _Check_Buttons:
  1750                           	opt stack 19
  1751                           
  1752                           ;buttonchanges.c: 27: if(PORTCbits.RC1 == 1) {
  1753                           
  1754                           ;incstack = 0
  1755  00026E  A282               	btfss	3970,1,c	;volatile
  1756  000270  D00B               	goto	l102
  1757                           
  1758                           ;buttonchanges.c: 28: Delay_Routine(3);
  1759  000272  0E03               	movlw	3
  1760  000274  EC22  F00B         	call	_Delay_Routine
  1761                           
  1762                           ;buttonchanges.c: 29: if(PORTCbits.RC1 == 1) {
  1763  000278  A282               	btfss	3970,1,c	;volatile
  1764  00027A  0012               	return	
  1765                           
  1766                           ;buttonchanges.c: 30: __nop();
  1767  00027C  F000               	nop	
  1768                           
  1769                           ;buttonchanges.c: 31: ignite_ready = 1;
  1770  00027E  8041               	bsf	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  1771                           
  1772                           ;buttonchanges.c: 32: Start_Timer();
  1773  000280  EC72  F00B         	call	_Start_Timer	;wreg free
  1774                           
  1775                           ;buttonchanges.c: 33: __nop();
  1776  000284  F000               	nop	
  1777                           
  1778                           ;buttonchanges.c: 37: }
  1779                           ;buttonchanges.c: 38: } else if(PORTBbits.RB2 == 1) {
  1780                           
  1781                           ;buttonchanges.c: 34: return;
  1782  000286  0012               	return	
  1783  000288                     l102:
  1784  000288  A481               	btfss	3969,2,c	;volatile
  1785  00028A  D061               	goto	l106
  1786                           
  1787                           ;buttonchanges.c: 39: Delay_Routine(3);
  1788  00028C  0E03               	movlw	3
  1789  00028E  EC22  F00B         	call	_Delay_Routine
  1790                           
  1791                           ;buttonchanges.c: 40: if(PORTBbits.RB2 == 1) {
  1792  000292  A481               	btfss	3969,2,c	;volatile
  1793  000294  0012               	return	
  1794                           
  1795                           ;buttonchanges.c: 41: __nop();
  1796  000296  F000               	nop	
  1797                           
  1798                           ;buttonchanges.c: 42: if(PORTBbits.RB3 == 1) {
  1799  000298  A681               	btfss	3969,3,c	;volatile
  1800  00029A  D008               	goto	l3285
  1801                           
  1802                           ;buttonchanges.c: 43: Delay_Routine(3);
  1803  00029C  0E03               	movlw	3
  1804  00029E  EC22  F00B         	call	_Delay_Routine
  1805                           
  1806                           ;buttonchanges.c: 44: if(PORTBbits.RB3 == 1) {
  1807  0002A2  A681               	btfss	3969,3,c	;volatile
  1808  0002A4  D003               	goto	l3285
  1809                           
  1810                           ;buttonchanges.c: 45: Del_Data();
  1811  0002A6  EC60  F009         	call	_Del_Data	;wreg free
  1812                           
  1813                           ;buttonchanges.c: 46: return;
  1814  0002AA  0012               	return	
  1815  0002AC                     l3285:
  1816                           
  1817                           ;buttonchanges.c: 48: }
  1818                           ;buttonchanges.c: 49: }
  1819                           ;buttonchanges.c: 50: pin[pin_selected].time++;
  1820  0002AC  0100               	movlb	0	; () banked
  1821  0002AE  517F               	movf	_pin_selected& (0+255),w,b
  1822  0002B0  0D06               	mullw	6
  1823  0002B2  0E04               	movlw	4
  1824  0002B4  26F3               	addwf	prodl,f,c
  1825  0002B6  0E00               	movlw	0
  1826  0002B8  22F4               	addwfc	prodh,f,c
  1827  0002BA  0E00               	movlw	low _pin
  1828  0002BC  24F3               	addwf	prodl,w,c
  1829  0002BE  6ED9               	movwf	fsr2l,c
  1830  0002C0  0E01               	movlw	high _pin
  1831  0002C2  20F4               	addwfc	prodh,w,c
  1832  0002C4  6EDA               	movwf	fsr2h,c
  1833  0002C6  2ADE               	incf	postinc2,f,c
  1834  0002C8  0E00               	movlw	0
  1835  0002CA  22DD               	addwfc	postdec2,f,c
  1836                           
  1837                           ;buttonchanges.c: 51: if(pin[pin_selected].time > 999) {
  1838  0002CC  0100               	movlb	0	; () banked
  1839  0002CE  517F               	movf	_pin_selected& (0+255),w,b
  1840  0002D0  0D06               	mullw	6
  1841  0002D2  0E04               	movlw	4
  1842  0002D4  26F3               	addwf	prodl,f,c
  1843  0002D6  0E00               	movlw	0
  1844  0002D8  22F4               	addwfc	prodh,f,c
  1845  0002DA  0E00               	movlw	low _pin
  1846  0002DC  24F3               	addwf	prodl,w,c
  1847  0002DE  6ED9               	movwf	fsr2l,c
  1848  0002E0  0E01               	movlw	high _pin
  1849  0002E2  20F4               	addwfc	prodh,w,c
  1850  0002E4  6EDA               	movwf	fsr2h,c
  1851  0002E6  0E01               	movlw	1
  1852  0002E8  BEDB               	btfsc	plusw2,7,c
  1853  0002EA  D017               	goto	l3289
  1854  0002EC  0EE8               	movlw	232
  1855  0002EE  5CDE               	subwf	postinc2,w,c
  1856  0002F0  0E03               	movlw	3
  1857  0002F2  58DE               	subwfb	postinc2,w,c
  1858  0002F4  A0D8               	btfss	status,0,c
  1859  0002F6  D011               	goto	l3289
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;buttonchanges.c: 52: pin[pin_selected].time = 0;
  1863  0002F8  0100               	movlb	0	; () banked
  1864  0002FA  517F               	movf	_pin_selected& (0+255),w,b
  1865  0002FC  0D06               	mullw	6
  1866  0002FE  0E04               	movlw	4
  1867  000300  26F3               	addwf	prodl,f,c
  1868  000302  0E00               	movlw	0
  1869  000304  22F4               	addwfc	prodh,f,c
  1870  000306  0E00               	movlw	low _pin
  1871  000308  24F3               	addwf	prodl,w,c
  1872  00030A  6ED9               	movwf	fsr2l,c
  1873  00030C  0E01               	movlw	high _pin
  1874  00030E  20F4               	addwfc	prodh,w,c
  1875  000310  6EDA               	movwf	fsr2h,c
  1876  000312  0E00               	movlw	0
  1877  000314  6EDE               	movwf	postinc2,c
  1878  000316  0E00               	movlw	0
  1879  000318  6EDD               	movwf	postdec2,c
  1880  00031A                     l3289:
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;buttonchanges.c: 53: }
  1884                           ;buttonchanges.c: 54: __nop();
  1885  00031A  F000               	nop	
  1886                           
  1887                           ;buttonchanges.c: 55: Set_Display('7', '-', pin[pin_selected].time);
  1888  00031C  0E2D               	movlw	45
  1889  00031E  0100               	movlb	0	; () banked
  1890  000320  6F76               	movwf	Set_Display@information& (0+255),b
  1891  000322  0100               	movlb	0	; () banked
  1892  000324  517F               	movf	_pin_selected& (0+255),w,b
  1893  000326  0D06               	mullw	6
  1894  000328  0E04               	movlw	4
  1895  00032A  26F3               	addwf	prodl,f,c
  1896  00032C  0E00               	movlw	0
  1897  00032E  22F4               	addwfc	prodh,f,c
  1898  000330  0E00               	movlw	low _pin
  1899  000332  24F3               	addwf	prodl,w,c
  1900  000334  6ED9               	movwf	fsr2l,c
  1901  000336  0E01               	movlw	high _pin
  1902  000338  20F4               	addwfc	prodh,w,c
  1903  00033A  6EDA               	movwf	fsr2h,c
  1904  00033C  CFDE F077          	movff	postinc2,Set_Display@value
  1905  000340  CFDD F078          	movff	postdec2,Set_Display@value+1
  1906  000344  0E37               	movlw	55
  1907  000346  ECCC  F008         	call	_Set_Display
  1908                           
  1909                           ;buttonchanges.c: 56: __nop();
  1910  00034A  F000               	nop	
  1911                           
  1912                           ;buttonchanges.c: 57: }
  1913                           ;buttonchanges.c: 58: } else if(PORTBbits.RB3 == 1) {
  1914  00034C  0012               	return	
  1915  00034E                     l106:
  1916  00034E  A681               	btfss	3969,3,c	;volatile
  1917  000350  D05B               	goto	l112
  1918                           
  1919                           ;buttonchanges.c: 59: Delay_Routine(3);
  1920  000352  0E03               	movlw	3
  1921  000354  EC22  F00B         	call	_Delay_Routine
  1922                           
  1923                           ;buttonchanges.c: 60: if(PORTBbits.RB3 == 1) {
  1924  000358  A681               	btfss	3969,3,c	;volatile
  1925  00035A  0012               	return	
  1926                           
  1927                           ;buttonchanges.c: 61: __nop();
  1928  00035C  F000               	nop	
  1929                           
  1930                           ;buttonchanges.c: 62: if(PORTBbits.RB2 == 1) {
  1931  00035E  A481               	btfss	3969,2,c	;volatile
  1932  000360  D008               	goto	l3309
  1933                           
  1934                           ;buttonchanges.c: 63: Delay_Routine(3);
  1935  000362  0E03               	movlw	3
  1936  000364  EC22  F00B         	call	_Delay_Routine
  1937                           
  1938                           ;buttonchanges.c: 64: if(PORTBbits.RB2 == 1) {
  1939  000368  A481               	btfss	3969,2,c	;volatile
  1940  00036A  D003               	goto	l3309
  1941                           
  1942                           ;buttonchanges.c: 65: Del_Data();
  1943  00036C  EC60  F009         	call	_Del_Data	;wreg free
  1944                           
  1945                           ;buttonchanges.c: 66: return;
  1946  000370  0012               	return	
  1947  000372                     l3309:
  1948                           
  1949                           ;buttonchanges.c: 68: }
  1950                           ;buttonchanges.c: 69: }
  1951                           ;buttonchanges.c: 70: pin[pin_selected].time--;
  1952  000372  0100               	movlb	0	; () banked
  1953  000374  517F               	movf	_pin_selected& (0+255),w,b
  1954  000376  0D06               	mullw	6
  1955  000378  0E04               	movlw	4
  1956  00037A  26F3               	addwf	prodl,f,c
  1957  00037C  0E00               	movlw	0
  1958  00037E  22F4               	addwfc	prodh,f,c
  1959  000380  0E00               	movlw	low _pin
  1960  000382  24F3               	addwf	prodl,w,c
  1961  000384  6ED9               	movwf	fsr2l,c
  1962  000386  0E01               	movlw	high _pin
  1963  000388  20F4               	addwfc	prodh,w,c
  1964  00038A  6EDA               	movwf	fsr2h,c
  1965  00038C  06DE               	decf	postinc2,f,c
  1966  00038E  0E00               	movlw	0
  1967  000390  5ADD               	subwfb	postdec2,f,c
  1968                           
  1969                           ;buttonchanges.c: 71: if(pin[pin_selected].time < 0) {
  1970  000392  0100               	movlb	0	; () banked
  1971  000394  517F               	movf	_pin_selected& (0+255),w,b
  1972  000396  0D06               	mullw	6
  1973  000398  0E04               	movlw	4
  1974  00039A  26F3               	addwf	prodl,f,c
  1975  00039C  0E00               	movlw	0
  1976  00039E  22F4               	addwfc	prodh,f,c
  1977  0003A0  0E00               	movlw	low _pin
  1978  0003A2  24F3               	addwf	prodl,w,c
  1979  0003A4  6ED9               	movwf	fsr2l,c
  1980  0003A6  0E01               	movlw	high _pin
  1981  0003A8  20F4               	addwfc	prodh,w,c
  1982  0003AA  6EDA               	movwf	fsr2h,c
  1983  0003AC  0E01               	movlw	1
  1984  0003AE  AEDB               	btfss	plusw2,7,c
  1985  0003B0  D011               	goto	l3313
  1986                           
  1987                           ; BSR set to: 0
  1988                           ;buttonchanges.c: 72: pin[pin_selected].time = 999;
  1989  0003B2  0100               	movlb	0	; () banked
  1990  0003B4  517F               	movf	_pin_selected& (0+255),w,b
  1991  0003B6  0D06               	mullw	6
  1992  0003B8  0E04               	movlw	4
  1993  0003BA  26F3               	addwf	prodl,f,c
  1994  0003BC  0E00               	movlw	0
  1995  0003BE  22F4               	addwfc	prodh,f,c
  1996  0003C0  0E00               	movlw	low _pin
  1997  0003C2  24F3               	addwf	prodl,w,c
  1998  0003C4  6ED9               	movwf	fsr2l,c
  1999  0003C6  0E01               	movlw	high _pin
  2000  0003C8  20F4               	addwfc	prodh,w,c
  2001  0003CA  6EDA               	movwf	fsr2h,c
  2002  0003CC  0EE7               	movlw	231
  2003  0003CE  6EDE               	movwf	postinc2,c
  2004  0003D0  0E03               	movlw	3
  2005  0003D2  6EDD               	movwf	postdec2,c
  2006  0003D4                     l3313:
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;buttonchanges.c: 73: }
  2010                           ;buttonchanges.c: 74: __nop();
  2011  0003D4  F000               	nop	
  2012                           
  2013                           ;buttonchanges.c: 75: Set_Display('7', '-', pin[pin_selected].time);
  2014  0003D6  0E2D               	movlw	45
  2015  0003D8  0100               	movlb	0	; () banked
  2016  0003DA  6F76               	movwf	Set_Display@information& (0+255),b
  2017  0003DC  0100               	movlb	0	; () banked
  2018  0003DE  517F               	movf	_pin_selected& (0+255),w,b
  2019  0003E0  0D06               	mullw	6
  2020  0003E2  0E04               	movlw	4
  2021  0003E4  26F3               	addwf	prodl,f,c
  2022  0003E6  0E00               	movlw	0
  2023  0003E8  22F4               	addwfc	prodh,f,c
  2024  0003EA  0E00               	movlw	low _pin
  2025  0003EC  24F3               	addwf	prodl,w,c
  2026  0003EE  6ED9               	movwf	fsr2l,c
  2027  0003F0  0E01               	movlw	high _pin
  2028  0003F2  20F4               	addwfc	prodh,w,c
  2029  0003F4  6EDA               	movwf	fsr2h,c
  2030  0003F6  CFDE F077          	movff	postinc2,Set_Display@value
  2031  0003FA  CFDD F078          	movff	postdec2,Set_Display@value+1
  2032  0003FE  0E37               	movlw	55
  2033  000400  ECCC  F008         	call	_Set_Display
  2034                           
  2035                           ;buttonchanges.c: 76: __nop();
  2036  000404  F000               	nop	
  2037                           
  2038                           ;buttonchanges.c: 77: }
  2039                           ;buttonchanges.c: 78: } else if(PORTBbits.RB4 == 1) {
  2040  000406  0012               	return	
  2041  000408                     l112:
  2042  000408  A881               	btfss	3969,4,c	;volatile
  2043  00040A  D058               	goto	l118
  2044                           
  2045                           ;buttonchanges.c: 79: Delay_Routine(3);
  2046  00040C  0E03               	movlw	3
  2047  00040E  EC22  F00B         	call	_Delay_Routine
  2048                           
  2049                           ;buttonchanges.c: 80: if(PORTBbits.RB4 == 1) {
  2050  000412  A881               	btfss	3969,4,c	;volatile
  2051  000414  0012               	return	
  2052                           
  2053                           ;buttonchanges.c: 81: __nop();
  2054  000416  F000               	nop	
  2055                           
  2056                           ;buttonchanges.c: 82: pin[pin_selected].time += 10;
  2057  000418  0100               	movlb	0	; () banked
  2058  00041A  517F               	movf	_pin_selected& (0+255),w,b
  2059  00041C  0D06               	mullw	6
  2060  00041E  0E04               	movlw	4
  2061  000420  26F3               	addwf	prodl,f,c
  2062  000422  0E00               	movlw	0
  2063  000424  22F4               	addwfc	prodh,f,c
  2064  000426  0E00               	movlw	low _pin
  2065  000428  24F3               	addwf	prodl,w,c
  2066  00042A  6ED9               	movwf	fsr2l,c
  2067  00042C  0E01               	movlw	high _pin
  2068  00042E  20F4               	addwfc	prodh,w,c
  2069  000430  6EDA               	movwf	fsr2h,c
  2070  000432  0E0A               	movlw	10
  2071  000434  26DE               	addwf	postinc2,f,c
  2072  000436  0E00               	movlw	0
  2073  000438  22DD               	addwfc	postdec2,f,c
  2074                           
  2075                           ;buttonchanges.c: 83: if(pin[pin_selected].time > 999) {
  2076  00043A  0100               	movlb	0	; () banked
  2077  00043C  517F               	movf	_pin_selected& (0+255),w,b
  2078  00043E  0D06               	mullw	6
  2079  000440  0E04               	movlw	4
  2080  000442  26F3               	addwf	prodl,f,c
  2081  000444  0E00               	movlw	0
  2082  000446  22F4               	addwfc	prodh,f,c
  2083  000448  0E00               	movlw	low _pin
  2084  00044A  24F3               	addwf	prodl,w,c
  2085  00044C  6ED9               	movwf	fsr2l,c
  2086  00044E  0E01               	movlw	high _pin
  2087  000450  20F4               	addwfc	prodh,w,c
  2088  000452  6EDA               	movwf	fsr2h,c
  2089  000454  0E01               	movlw	1
  2090  000456  BEDB               	btfsc	plusw2,7,c
  2091  000458  D017               	goto	l3329
  2092  00045A  0EE8               	movlw	232
  2093  00045C  5CDE               	subwf	postinc2,w,c
  2094  00045E  0E03               	movlw	3
  2095  000460  58DE               	subwfb	postinc2,w,c
  2096  000462  A0D8               	btfss	status,0,c
  2097  000464  D011               	goto	l3329
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;buttonchanges.c: 84: pin[pin_selected].time = 0;
  2101  000466  0100               	movlb	0	; () banked
  2102  000468  517F               	movf	_pin_selected& (0+255),w,b
  2103  00046A  0D06               	mullw	6
  2104  00046C  0E04               	movlw	4
  2105  00046E  26F3               	addwf	prodl,f,c
  2106  000470  0E00               	movlw	0
  2107  000472  22F4               	addwfc	prodh,f,c
  2108  000474  0E00               	movlw	low _pin
  2109  000476  24F3               	addwf	prodl,w,c
  2110  000478  6ED9               	movwf	fsr2l,c
  2111  00047A  0E01               	movlw	high _pin
  2112  00047C  20F4               	addwfc	prodh,w,c
  2113  00047E  6EDA               	movwf	fsr2h,c
  2114  000480  0E00               	movlw	0
  2115  000482  6EDE               	movwf	postinc2,c
  2116  000484  0E00               	movlw	0
  2117  000486  6EDD               	movwf	postdec2,c
  2118  000488                     l3329:
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;buttonchanges.c: 85: }
  2122                           ;buttonchanges.c: 86: __nop();
  2123  000488  F000               	nop	
  2124                           
  2125                           ;buttonchanges.c: 87: Set_Display('7', '-', pin[pin_selected].time);
  2126  00048A  0E2D               	movlw	45
  2127  00048C  0100               	movlb	0	; () banked
  2128  00048E  6F76               	movwf	Set_Display@information& (0+255),b
  2129  000490  0100               	movlb	0	; () banked
  2130  000492  517F               	movf	_pin_selected& (0+255),w,b
  2131  000494  0D06               	mullw	6
  2132  000496  0E04               	movlw	4
  2133  000498  26F3               	addwf	prodl,f,c
  2134  00049A  0E00               	movlw	0
  2135  00049C  22F4               	addwfc	prodh,f,c
  2136  00049E  0E00               	movlw	low _pin
  2137  0004A0  24F3               	addwf	prodl,w,c
  2138  0004A2  6ED9               	movwf	fsr2l,c
  2139  0004A4  0E01               	movlw	high _pin
  2140  0004A6  20F4               	addwfc	prodh,w,c
  2141  0004A8  6EDA               	movwf	fsr2h,c
  2142  0004AA  CFDE F077          	movff	postinc2,Set_Display@value
  2143  0004AE  CFDD F078          	movff	postdec2,Set_Display@value+1
  2144  0004B2  0E37               	movlw	55
  2145  0004B4  ECCC  F008         	call	_Set_Display
  2146                           
  2147                           ;buttonchanges.c: 88: __nop();
  2148  0004B8  F000               	nop	
  2149                           
  2150                           ;buttonchanges.c: 89: }
  2151                           ;buttonchanges.c: 90: } else if(PORTBbits.RB1 == 1) {
  2152  0004BA  0012               	return	
  2153  0004BC                     l118:
  2154  0004BC  A281               	btfss	3969,1,c	;volatile
  2155  0004BE  D0B2               	goto	l122
  2156                           
  2157                           ;buttonchanges.c: 91: Delay_Routine(3);
  2158  0004C0  0E03               	movlw	3
  2159  0004C2  EC22  F00B         	call	_Delay_Routine
  2160                           
  2161                           ;buttonchanges.c: 92: if(PORTBbits.RB1 == 1) {
  2162  0004C6  A281               	btfss	3969,1,c	;volatile
  2163  0004C8  0012               	return	
  2164                           
  2165                           ;buttonchanges.c: 93: __nop();
  2166  0004CA  F000               	nop	
  2167                           
  2168                           ;buttonchanges.c: 94: if(PORTBbits.RB0 == 1) {
  2169  0004CC  A081               	btfss	3969,0,c	;volatile
  2170  0004CE  D007               	goto	l3347
  2171                           
  2172                           ;buttonchanges.c: 95: Delay_Routine(3);
  2173  0004D0  0E03               	movlw	3
  2174  0004D2  EC22  F00B         	call	_Delay_Routine
  2175                           
  2176                           ;buttonchanges.c: 96: if(PORTBbits.RB0 == 1) {
  2177  0004D6  A081               	btfss	3969,0,c	;volatile
  2178  0004D8  D002               	goto	l3347
  2179                           
  2180                           ;buttonchanges.c: 97: testflag = 1;
  2181  0004DA  8641               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2182                           
  2183                           ;buttonchanges.c: 98: return;
  2184  0004DC  0012               	return	
  2185  0004DE                     l3347:
  2186                           
  2187                           ;buttonchanges.c: 100: }
  2188                           ;buttonchanges.c: 101: }
  2189                           ;buttonchanges.c: 102: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2190  0004DE  0100               	movlb	0	; () banked
  2191  0004E0  517F               	movf	_pin_selected& (0+255),w,b
  2192  0004E2  0D06               	mullw	6
  2193  0004E4  0E04               	movlw	4
  2194  0004E6  26F3               	addwf	prodl,f,c
  2195  0004E8  0E00               	movlw	0
  2196  0004EA  22F4               	addwfc	prodh,f,c
  2197  0004EC  0E00               	movlw	low _pin
  2198  0004EE  24F3               	addwf	prodl,w,c
  2199  0004F0  6ED9               	movwf	fsr2l,c
  2200  0004F2  0E01               	movlw	high _pin
  2201  0004F4  20F4               	addwfc	prodh,w,c
  2202  0004F6  6EDA               	movwf	fsr2h,c
  2203  0004F8  CFDE F060          	movff	postinc2,Save_Data@store
  2204  0004FC  CFDD F061          	movff	postdec2,Save_Data@store+1
  2205  000500  0100               	movlb	0	; () banked
  2206  000502  517F               	movf	_pin_selected& (0+255),w,b
  2207  000504  0D06               	mullw	6
  2208  000506  0E02               	movlw	2
  2209  000508  26F3               	addwf	prodl,f,c
  2210  00050A  0E00               	movlw	0
  2211  00050C  22F4               	addwfc	prodh,f,c
  2212  00050E  0E00               	movlw	low _pin
  2213  000510  24F3               	addwf	prodl,w,c
  2214  000512  6ED9               	movwf	fsr2l,c
  2215  000514  0E01               	movlw	high _pin
  2216  000516  20F4               	addwfc	prodh,w,c
  2217  000518  6EDA               	movwf	fsr2h,c
  2218  00051A  50DF               	movf	indf2,w,c
  2219  00051C  0100               	movlb	0	; () banked
  2220  00051E  6F62               	movwf	Save_Data@store_address& (0+255),b
  2221  000520  EC8D  F009         	call	_Save_Data	;wreg free
  2222                           
  2223                           ;buttonchanges.c: 103: pin_selected++;
  2224  000524  0100               	movlb	0	; () banked
  2225  000526  2B7F               	incf	_pin_selected& (0+255),f,b
  2226                           
  2227                           ;buttonchanges.c: 104: switch (slave_selected) {
  2228  000528  D014               	goto	l3365
  2229  00052A                     l3351:
  2230                           
  2231                           ; BSR set to: 0
  2232                           ;buttonchanges.c: 106: if(pin_selected > 9) {
  2233  00052A  0E09               	movlw	9
  2234  00052C  0100               	movlb	0	; () banked
  2235  00052E  657F               	cpfsgt	_pin_selected& (0+255),b
  2236  000530  D01B               	goto	l3367
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;buttonchanges.c: 107: pin_selected = 0;
  2240  000532  0E00               	movlw	0
  2241  000534  D00B               	goto	L2
  2242  000536                     l3355:
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;buttonchanges.c: 111: if(pin_selected > 19) {
  2246  000536  0E13               	movlw	19
  2247  000538  0100               	movlb	0	; () banked
  2248  00053A  657F               	cpfsgt	_pin_selected& (0+255),b
  2249  00053C  D015               	goto	l3367
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;buttonchanges.c: 112: pin_selected = 10;
  2253  00053E  0E0A               	movlw	10
  2254  000540  D005               	goto	L2
  2255  000542                     l3359:
  2256                           
  2257                           ; BSR set to: 0
  2258                           ;buttonchanges.c: 116: if(pin_selected > 29) {
  2259  000542  0E1D               	movlw	29
  2260  000544  0100               	movlb	0	; () banked
  2261  000546  657F               	cpfsgt	_pin_selected& (0+255),b
  2262  000548  D00F               	goto	l3367
  2263                           
  2264                           ; BSR set to: 0
  2265                           ;buttonchanges.c: 117: pin_selected = 20;
  2266  00054A  0E14               	movlw	20
  2267  00054C                     L2:
  2268  00054C  0100               	movlb	0	; () banked
  2269  00054E  6F7F               	movwf	_pin_selected& (0+255),b
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;buttonchanges.c: 120: }
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;buttonchanges.c: 118: }
  2276                           ;buttonchanges.c: 119: break;
  2277  000550  D00B               	goto	l3367
  2278  000552                     l3365:
  2279                           
  2280                           ; BSR set to: 0
  2281  000552  0100               	movlb	0	; () banked
  2282  000554  5180               	movf	_slave_selected& (0+255),w,b
  2283                           
  2284                           ; Switch size 1, requested type "space"
  2285                           ; Number of cases is 3, Range of values is 0 to 2
  2286                           ; switch strategies available:
  2287                           ; Name         Instructions Cycles
  2288                           ; simple_byte           10     6 (average)
  2289                           ;	Chosen strategy is simple_byte
  2290  000556  0A00               	xorlw	0	; case 0
  2291  000558  B4D8               	btfsc	status,2,c
  2292  00055A  D7E7               	goto	l3351
  2293  00055C  0A01               	xorlw	1	; case 1
  2294  00055E  B4D8               	btfsc	status,2,c
  2295  000560  D7EA               	goto	l3355
  2296  000562  0A03               	xorlw	3	; case 2
  2297  000564  B4D8               	btfsc	status,2,c
  2298  000566  D7ED               	goto	l3359
  2299  000568                     l3367:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;buttonchanges.c: 121: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2303  000568  0100               	movlb	0	; () banked
  2304  00056A  517F               	movf	_pin_selected& (0+255),w,b
  2305  00056C  0D06               	mullw	6
  2306  00056E  0E02               	movlw	2
  2307  000570  26F3               	addwf	prodl,f,c
  2308  000572  0E00               	movlw	0
  2309  000574  22F4               	addwfc	prodh,f,c
  2310  000576  0E00               	movlw	low _pin
  2311  000578  24F3               	addwf	prodl,w,c
  2312  00057A  6ED9               	movwf	fsr2l,c
  2313  00057C  0E01               	movlw	high _pin
  2314  00057E  20F4               	addwfc	prodh,w,c
  2315  000580  6EDA               	movwf	fsr2h,c
  2316  000582  50DF               	movf	indf2,w,c
  2317  000584  EC0C  F00A         	call	_Read_Data
  2318  000588  0100               	movlb	0	; () banked
  2319  00058A  517F               	movf	_pin_selected& (0+255),w,b
  2320  00058C  0D06               	mullw	6
  2321  00058E  0E04               	movlw	4
  2322  000590  26F3               	addwf	prodl,f,c
  2323  000592  0E00               	movlw	0
  2324  000594  22F4               	addwfc	prodh,f,c
  2325  000596  0E00               	movlw	low _pin
  2326  000598  24F3               	addwf	prodl,w,c
  2327  00059A  6ED9               	movwf	fsr2l,c
  2328  00059C  0E01               	movlw	high _pin
  2329  00059E  20F4               	addwfc	prodh,w,c
  2330  0005A0  6EDA               	movwf	fsr2h,c
  2331  0005A2  0100               	movlb	0	; () banked
  2332  0005A4  C060  FFDE         	movff	?_Read_Data,postinc2
  2333  0005A8  0100               	movlb	0	; () banked
  2334  0005AA  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2335                           
  2336                           ; BSR set to: 0
  2337                           ;buttonchanges.c: 122: __nop();
  2338  0005AE  F000               	nop	
  2339                           
  2340                           ;buttonchanges.c: 123: Set_Display('7', 'A', pin[pin_selected].output);
  2341  0005B0  0E41               	movlw	65
  2342  0005B2  0100               	movlb	0	; () banked
  2343  0005B4  6F76               	movwf	Set_Display@information& (0+255),b
  2344  0005B6  0100               	movlb	0	; () banked
  2345  0005B8  517F               	movf	_pin_selected& (0+255),w,b
  2346  0005BA  0D06               	mullw	6
  2347  0005BC  0E01               	movlw	1
  2348  0005BE  26F3               	addwf	prodl,f,c
  2349  0005C0  0E00               	movlw	0
  2350  0005C2  22F4               	addwfc	prodh,f,c
  2351  0005C4  0E00               	movlw	low _pin
  2352  0005C6  24F3               	addwf	prodl,w,c
  2353  0005C8  6ED9               	movwf	fsr2l,c
  2354  0005CA  0E01               	movlw	high _pin
  2355  0005CC  20F4               	addwfc	prodh,w,c
  2356  0005CE  6EDA               	movwf	fsr2h,c
  2357  0005D0  50DF               	movf	indf2,w,c
  2358  0005D2  0100               	movlb	0	; () banked
  2359  0005D4  6F7D               	movwf	??_Check_Buttons& (0+255),b
  2360  0005D6  0100               	movlb	0	; () banked
  2361  0005D8  517D               	movf	??_Check_Buttons& (0+255),w,b
  2362  0005DA  0100               	movlb	0	; () banked
  2363  0005DC  6F77               	movwf	Set_Display@value& (0+255),b
  2364  0005DE  6B78               	clrf	(Set_Display@value+1)& (0+255),b
  2365  0005E0  0E37               	movlw	55
  2366  0005E2  ECCC  F008         	call	_Set_Display
  2367                           
  2368                           ;buttonchanges.c: 124: Delay_Routine(30);
  2369  0005E6  0E1E               	movlw	30
  2370  0005E8  EC22  F00B         	call	_Delay_Routine
  2371                           
  2372                           ;buttonchanges.c: 125: Set_Display('7', '-', pin[pin_selected].time);
  2373  0005EC  0E2D               	movlw	45
  2374  0005EE  0100               	movlb	0	; () banked
  2375  0005F0  6F76               	movwf	Set_Display@information& (0+255),b
  2376  0005F2  0100               	movlb	0	; () banked
  2377  0005F4  517F               	movf	_pin_selected& (0+255),w,b
  2378  0005F6  0D06               	mullw	6
  2379  0005F8  0E04               	movlw	4
  2380  0005FA  26F3               	addwf	prodl,f,c
  2381  0005FC  0E00               	movlw	0
  2382  0005FE  22F4               	addwfc	prodh,f,c
  2383  000600  0E00               	movlw	low _pin
  2384  000602  24F3               	addwf	prodl,w,c
  2385  000604  6ED9               	movwf	fsr2l,c
  2386  000606  0E01               	movlw	high _pin
  2387  000608  20F4               	addwfc	prodh,w,c
  2388  00060A  6EDA               	movwf	fsr2h,c
  2389  00060C  CFDE F077          	movff	postinc2,Set_Display@value
  2390  000610  CFDD F078          	movff	postdec2,Set_Display@value+1
  2391  000614  0E37               	movlw	55
  2392  000616  ECCC  F008         	call	_Set_Display
  2393                           
  2394                           ;buttonchanges.c: 126: Delay_Routine(30);
  2395  00061A  0E1E               	movlw	30
  2396  00061C  EC22  F00B         	call	_Delay_Routine
  2397                           
  2398                           ;buttonchanges.c: 127: __nop();
  2399  000620  F000               	nop	
  2400                           
  2401                           ;buttonchanges.c: 128: }
  2402                           ;buttonchanges.c: 129: } else if(PORTBbits.RB0 == 1) {
  2403  000622  0012               	return	
  2404  000624                     l122:
  2405  000624  A081               	btfss	3969,0,c	;volatile
  2406  000626  D0B8               	goto	l135
  2407                           
  2408                           ;buttonchanges.c: 130: Delay_Routine(3);
  2409  000628  0E03               	movlw	3
  2410  00062A  EC22  F00B         	call	_Delay_Routine
  2411                           
  2412                           ;buttonchanges.c: 131: if(PORTBbits.RB0 == 1) {
  2413  00062E  A081               	btfss	3969,0,c	;volatile
  2414  000630  0012               	return	
  2415                           
  2416                           ;buttonchanges.c: 132: __nop();
  2417  000632  F000               	nop	
  2418                           
  2419                           ;buttonchanges.c: 133: if(PORTBbits.RB1 == 1) {
  2420  000634  A281               	btfss	3969,1,c	;volatile
  2421  000636  D007               	goto	l3393
  2422                           
  2423                           ;buttonchanges.c: 134: Delay_Routine(3);
  2424  000638  0E03               	movlw	3
  2425  00063A  EC22  F00B         	call	_Delay_Routine
  2426                           
  2427                           ;buttonchanges.c: 135: if(PORTBbits.RB1 == 1) {
  2428  00063E  A281               	btfss	3969,1,c	;volatile
  2429  000640  D002               	goto	l3393
  2430                           
  2431                           ;buttonchanges.c: 136: testflag = 1;
  2432  000642  8641               	bsf	_testflag/(0+8),_testflag& (0+7),c
  2433                           
  2434                           ;buttonchanges.c: 137: return;
  2435  000644  0012               	return	
  2436  000646                     l3393:
  2437                           
  2438                           ;buttonchanges.c: 139: }
  2439                           ;buttonchanges.c: 140: }
  2440                           ;buttonchanges.c: 141: Save_Data(pin[pin_selected].time, pin[pin_selected].address);
  2441  000646  0100               	movlb	0	; () banked
  2442  000648  517F               	movf	_pin_selected& (0+255),w,b
  2443  00064A  0D06               	mullw	6
  2444  00064C  0E04               	movlw	4
  2445  00064E  26F3               	addwf	prodl,f,c
  2446  000650  0E00               	movlw	0
  2447  000652  22F4               	addwfc	prodh,f,c
  2448  000654  0E00               	movlw	low _pin
  2449  000656  24F3               	addwf	prodl,w,c
  2450  000658  6ED9               	movwf	fsr2l,c
  2451  00065A  0E01               	movlw	high _pin
  2452  00065C  20F4               	addwfc	prodh,w,c
  2453  00065E  6EDA               	movwf	fsr2h,c
  2454  000660  CFDE F060          	movff	postinc2,Save_Data@store
  2455  000664  CFDD F061          	movff	postdec2,Save_Data@store+1
  2456  000668  0100               	movlb	0	; () banked
  2457  00066A  517F               	movf	_pin_selected& (0+255),w,b
  2458  00066C  0D06               	mullw	6
  2459  00066E  0E02               	movlw	2
  2460  000670  26F3               	addwf	prodl,f,c
  2461  000672  0E00               	movlw	0
  2462  000674  22F4               	addwfc	prodh,f,c
  2463  000676  0E00               	movlw	low _pin
  2464  000678  24F3               	addwf	prodl,w,c
  2465  00067A  6ED9               	movwf	fsr2l,c
  2466  00067C  0E01               	movlw	high _pin
  2467  00067E  20F4               	addwfc	prodh,w,c
  2468  000680  6EDA               	movwf	fsr2h,c
  2469  000682  50DF               	movf	indf2,w,c
  2470  000684  0100               	movlb	0	; () banked
  2471  000686  6F62               	movwf	Save_Data@store_address& (0+255),b
  2472  000688  EC8D  F009         	call	_Save_Data	;wreg free
  2473                           
  2474                           ;buttonchanges.c: 142: slave_selected++;
  2475  00068C  0100               	movlb	0	; () banked
  2476  00068E  2B80               	incf	_slave_selected& (0+255),f,b
  2477                           
  2478                           ; BSR set to: 0
  2479                           ;buttonchanges.c: 143: if(slave_selected > 2) {
  2480  000690  0E02               	movlw	2
  2481  000692  0100               	movlb	0	; () banked
  2482  000694  6580               	cpfsgt	_slave_selected& (0+255),b
  2483  000696  D003               	goto	l3401
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;buttonchanges.c: 144: slave_selected = 0;
  2487  000698  0E00               	movlw	0
  2488  00069A  0100               	movlb	0	; () banked
  2489  00069C  6F80               	movwf	_slave_selected& (0+255),b
  2490  00069E                     l3401:
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;buttonchanges.c: 145: }
  2494                           ;buttonchanges.c: 146: pin_selected = slave_selected * 10;
  2495  00069E  0100               	movlb	0	; () banked
  2496  0006A0  5180               	movf	_slave_selected& (0+255),w,b
  2497  0006A2  0D0A               	mullw	10
  2498  0006A4  CFF3 F07F          	movff	prodl,_pin_selected
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;buttonchanges.c: 147: pin[pin_selected].time = Read_Data(pin[pin_selected].address);
  2502  0006A8  0100               	movlb	0	; () banked
  2503  0006AA  517F               	movf	_pin_selected& (0+255),w,b
  2504  0006AC  0D06               	mullw	6
  2505  0006AE  0E02               	movlw	2
  2506  0006B0  26F3               	addwf	prodl,f,c
  2507  0006B2  0E00               	movlw	0
  2508  0006B4  22F4               	addwfc	prodh,f,c
  2509  0006B6  0E00               	movlw	low _pin
  2510  0006B8  24F3               	addwf	prodl,w,c
  2511  0006BA  6ED9               	movwf	fsr2l,c
  2512  0006BC  0E01               	movlw	high _pin
  2513  0006BE  20F4               	addwfc	prodh,w,c
  2514  0006C0  6EDA               	movwf	fsr2h,c
  2515  0006C2  50DF               	movf	indf2,w,c
  2516  0006C4  EC0C  F00A         	call	_Read_Data
  2517  0006C8  0100               	movlb	0	; () banked
  2518  0006CA  517F               	movf	_pin_selected& (0+255),w,b
  2519  0006CC  0D06               	mullw	6
  2520  0006CE  0E04               	movlw	4
  2521  0006D0  26F3               	addwf	prodl,f,c
  2522  0006D2  0E00               	movlw	0
  2523  0006D4  22F4               	addwfc	prodh,f,c
  2524  0006D6  0E00               	movlw	low _pin
  2525  0006D8  24F3               	addwf	prodl,w,c
  2526  0006DA  6ED9               	movwf	fsr2l,c
  2527  0006DC  0E01               	movlw	high _pin
  2528  0006DE  20F4               	addwfc	prodh,w,c
  2529  0006E0  6EDA               	movwf	fsr2h,c
  2530  0006E2  0100               	movlb	0	; () banked
  2531  0006E4  C060  FFDE         	movff	?_Read_Data,postinc2
  2532  0006E8  0100               	movlb	0	; () banked
  2533  0006EA  C061  FFDD         	movff	?_Read_Data+1,postdec2
  2534                           
  2535                           ; BSR set to: 0
  2536                           ;buttonchanges.c: 148: __nop();
  2537  0006EE  F000               	nop	
  2538                           
  2539                           ;buttonchanges.c: 149: Set_Display('7', 'E', pin[pin_selected].slave);
  2540  0006F0  0E45               	movlw	69
  2541  0006F2  0100               	movlb	0	; () banked
  2542  0006F4  6F76               	movwf	Set_Display@information& (0+255),b
  2543  0006F6  0100               	movlb	0	; () banked
  2544  0006F8  517F               	movf	_pin_selected& (0+255),w,b
  2545  0006FA  0D06               	mullw	6
  2546  0006FC  0E00               	movlw	low _pin
  2547  0006FE  24F3               	addwf	prodl,w,c
  2548  000700  6ED9               	movwf	fsr2l,c
  2549  000702  0E01               	movlw	high _pin
  2550  000704  20F4               	addwfc	prodh,w,c
  2551  000706  6EDA               	movwf	fsr2h,c
  2552  000708  50DF               	movf	indf2,w,c
  2553  00070A  0100               	movlb	0	; () banked
  2554  00070C  6F7D               	movwf	??_Check_Buttons& (0+255),b
  2555  00070E  0100               	movlb	0	; () banked
  2556  000710  517D               	movf	??_Check_Buttons& (0+255),w,b
  2557  000712  0100               	movlb	0	; () banked
  2558  000714  6F77               	movwf	Set_Display@value& (0+255),b
  2559  000716  6B78               	clrf	(Set_Display@value+1)& (0+255),b
  2560  000718  0E37               	movlw	55
  2561  00071A  ECCC  F008         	call	_Set_Display
  2562                           
  2563                           ;buttonchanges.c: 151: Delay_Routine(30);
  2564  00071E  0E1E               	movlw	30
  2565  000720  EC22  F00B         	call	_Delay_Routine
  2566                           
  2567                           ;buttonchanges.c: 152: Set_Display('7', 'A', pin[pin_selected].output);
  2568  000724  0E41               	movlw	65
  2569  000726  0100               	movlb	0	; () banked
  2570  000728  6F76               	movwf	Set_Display@information& (0+255),b
  2571  00072A  0100               	movlb	0	; () banked
  2572  00072C  517F               	movf	_pin_selected& (0+255),w,b
  2573  00072E  0D06               	mullw	6
  2574  000730  0E01               	movlw	1
  2575  000732  26F3               	addwf	prodl,f,c
  2576  000734  0E00               	movlw	0
  2577  000736  22F4               	addwfc	prodh,f,c
  2578  000738  0E00               	movlw	low _pin
  2579  00073A  24F3               	addwf	prodl,w,c
  2580  00073C  6ED9               	movwf	fsr2l,c
  2581  00073E  0E01               	movlw	high _pin
  2582  000740  20F4               	addwfc	prodh,w,c
  2583  000742  6EDA               	movwf	fsr2h,c
  2584  000744  50DF               	movf	indf2,w,c
  2585  000746  0100               	movlb	0	; () banked
  2586  000748  6F7D               	movwf	??_Check_Buttons& (0+255),b
  2587  00074A  0100               	movlb	0	; () banked
  2588  00074C  517D               	movf	??_Check_Buttons& (0+255),w,b
  2589  00074E  0100               	movlb	0	; () banked
  2590  000750  6F77               	movwf	Set_Display@value& (0+255),b
  2591  000752  6B78               	clrf	(Set_Display@value+1)& (0+255),b
  2592  000754  0E37               	movlw	55
  2593  000756  ECCC  F008         	call	_Set_Display
  2594                           
  2595                           ;buttonchanges.c: 153: Delay_Routine(30);
  2596  00075A  0E1E               	movlw	30
  2597  00075C  EC22  F00B         	call	_Delay_Routine
  2598                           
  2599                           ;buttonchanges.c: 154: Set_Display('7', '-', pin[pin_selected].time);
  2600  000760  0E2D               	movlw	45
  2601  000762  0100               	movlb	0	; () banked
  2602  000764  6F76               	movwf	Set_Display@information& (0+255),b
  2603  000766  0100               	movlb	0	; () banked
  2604  000768  517F               	movf	_pin_selected& (0+255),w,b
  2605  00076A  0D06               	mullw	6
  2606  00076C  0E04               	movlw	4
  2607  00076E  26F3               	addwf	prodl,f,c
  2608  000770  0E00               	movlw	0
  2609  000772  22F4               	addwfc	prodh,f,c
  2610  000774  0E00               	movlw	low _pin
  2611  000776  24F3               	addwf	prodl,w,c
  2612  000778  6ED9               	movwf	fsr2l,c
  2613  00077A  0E01               	movlw	high _pin
  2614  00077C  20F4               	addwfc	prodh,w,c
  2615  00077E  6EDA               	movwf	fsr2h,c
  2616  000780  CFDE F077          	movff	postinc2,Set_Display@value
  2617  000784  CFDD F078          	movff	postdec2,Set_Display@value+1
  2618  000788  0E37               	movlw	55
  2619  00078A  ECCC  F008         	call	_Set_Display
  2620                           
  2621                           ;buttonchanges.c: 155: Delay_Routine(30);
  2622  00078E  0E1E               	movlw	30
  2623  000790  EC22  F00B         	call	_Delay_Routine
  2624                           
  2625                           ;buttonchanges.c: 156: __nop();
  2626  000794  F000               	nop	
  2627                           
  2628                           ;buttonchanges.c: 157: }
  2629                           ;buttonchanges.c: 158: } else {
  2630  000796  0012               	return	
  2631  000798                     l135:
  2632                           
  2633                           ;buttonchanges.c: 159: __nop();
  2634  000798  F000               	nop	
  2635  00079A  0012               	return	
  2636  00079C                     __end_of_Check_Buttons:
  2637                           	opt stack 0
  2638                           tblptru	equ	0xFF8
  2639                           tblptrh	equ	0xFF7
  2640                           tblptrl	equ	0xFF6
  2641                           tablat	equ	0xFF5
  2642                           prodh	equ	0xFF4
  2643                           prodl	equ	0xFF3
  2644                           intcon	equ	0xFF2
  2645                           postinc0	equ	0xFEE
  2646                           wreg	equ	0xFE8
  2647                           postdec1	equ	0xFE5
  2648                           fsr1l	equ	0xFE1
  2649                           indf2	equ	0xFDF
  2650                           postinc2	equ	0xFDE
  2651                           postdec2	equ	0xFDD
  2652                           plusw2	equ	0xFDB
  2653                           fsr2h	equ	0xFDA
  2654                           fsr2l	equ	0xFD9
  2655                           status	equ	0xFD8
  2656                           
  2657 ;; *************** function _Start_Timer *****************
  2658 ;; Defined at:
  2659 ;;		line 12 in file "ignition.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;		None               void
  2666 ;; Registers used:
  2667 ;;		wreg, status,2
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1
  2673 ;;      Params:         0       0       0
  2674 ;;      Locals:         0       0       0
  2675 ;;      Temps:          0       0       0
  2676 ;;      Totals:         0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    5
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_Check_Buttons
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text12
  2688  0016E4                     __ptext12:
  2689                           	opt stack 0
  2690  0016E4                     _Start_Timer:
  2691                           	opt stack 24
  2692                           
  2693                           ;ignition.c: 13: if(ignite_ready == 1) {
  2694                           
  2695                           ;incstack = 0
  2696  0016E4  A041               	btfss	_ignite_ready/(0+8),_ignite_ready& (0+7),c
  2697  0016E6  0012               	return	
  2698                           
  2699                           ;ignition.c: 14: TMR1L = 0;
  2700  0016E8  0E00               	movlw	0
  2701  0016EA  6ECE               	movwf	4046,c	;volatile
  2702                           
  2703                           ;ignition.c: 15: TMR1H = 0;
  2704  0016EC  0E00               	movlw	0
  2705  0016EE  6ECF               	movwf	4047,c	;volatile
  2706                           
  2707                           ;ignition.c: 16: TMR3L = 0;
  2708  0016F0  0E00               	movlw	0
  2709  0016F2  6EB2               	movwf	4018,c	;volatile
  2710                           
  2711                           ;ignition.c: 17: TMR3H = 0;
  2712  0016F4  0E00               	movlw	0
  2713  0016F6  6EB3               	movwf	4019,c	;volatile
  2714                           
  2715                           ;ignition.c: 18: PIR1bits.TMR1IF = 0;
  2716  0016F8  909E               	bcf	3998,0,c	;volatile
  2717                           
  2718                           ;ignition.c: 19: PIR2bits.TMR3IF = 0;
  2719  0016FA  92A1               	bcf	4001,1,c	;volatile
  2720                           
  2721                           ;ignition.c: 20: T1CONbits.TMR1ON = 1;
  2722  0016FC  80CD               	bsf	4045,0,c	;volatile
  2723  0016FE  0012               	return	
  2724  001700                     __end_of_Start_Timer:
  2725                           	opt stack 0
  2726                           tblptru	equ	0xFF8
  2727                           tblptrh	equ	0xFF7
  2728                           tblptrl	equ	0xFF6
  2729                           tablat	equ	0xFF5
  2730                           prodh	equ	0xFF4
  2731                           prodl	equ	0xFF3
  2732                           intcon	equ	0xFF2
  2733                           postinc0	equ	0xFEE
  2734                           wreg	equ	0xFE8
  2735                           postdec1	equ	0xFE5
  2736                           fsr1l	equ	0xFE1
  2737                           indf2	equ	0xFDF
  2738                           postinc2	equ	0xFDE
  2739                           postdec2	equ	0xFDD
  2740                           plusw2	equ	0xFDB
  2741                           fsr2h	equ	0xFDA
  2742                           fsr2l	equ	0xFD9
  2743                           status	equ	0xFD8
  2744                           
  2745 ;; *************** function _Del_Data *****************
  2746 ;; Defined at:
  2747 ;;		line 90 in file "storage.c"
  2748 ;; Parameters:    Size  Location     Type
  2749 ;;		None
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  counter         1   28[BANK0 ] unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;		None               void
  2754 ;; Registers used:
  2755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1
  2761 ;;      Params:         0       0       0
  2762 ;;      Locals:         0       1       0
  2763 ;;      Temps:          0       0       0
  2764 ;;      Totals:         0       1       0
  2765 ;;Total ram usage:        1 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:   10
  2768 ;; This function calls:
  2769 ;;		_Delay_Routine
  2770 ;;		_Evaluate_Display
  2771 ;;		_Load_Data
  2772 ;;		_Save_Data
  2773 ;; This function is called by:
  2774 ;;		_Check_Buttons
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text13
  2779  0012C0                     __ptext13:
  2780                           	opt stack 0
  2781  0012C0                     _Del_Data:
  2782                           	opt stack 19
  2783                           
  2784                           ;storage.c: 91: string_delete[0] = 'D';
  2785                           
  2786                           ;incstack = 0
  2787  0012C0  0E44               	movlw	68
  2788  0012C2  0100               	movlb	0	; () banked
  2789  0012C4  6F84               	movwf	_string_delete& (0+255),b
  2790                           
  2791                           ;storage.c: 92: string_delete[1] = 'E';
  2792  0012C6  0E45               	movlw	69
  2793  0012C8  0100               	movlb	0	; () banked
  2794  0012CA  6F85               	movwf	(_string_delete+1)& (0+255),b
  2795                           
  2796                           ;storage.c: 93: string_delete[2] = 'L';
  2797  0012CC  0E4C               	movlw	76
  2798  0012CE  0100               	movlb	0	; () banked
  2799  0012D0  6F86               	movwf	(_string_delete+2)& (0+255),b
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;storage.c: 95: Evaluate_Display(3, string_delete);
  2803  0012D2  0E84               	movlw	low _string_delete
  2804  0012D4  0100               	movlb	0	; () banked
  2805  0012D6  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  2806  0012D8  0E00               	movlw	high _string_delete
  2807  0012DA  0100               	movlb	0	; () banked
  2808  0012DC  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  2809  0012DE  0E03               	movlw	3
  2810  0012E0  ECCE  F003         	call	_Evaluate_Display
  2811                           
  2812                           ;storage.c: 96: Delay_Routine(30);
  2813  0012E4  0E1E               	movlw	30
  2814  0012E6  EC22  F00B         	call	_Delay_Routine
  2815                           
  2816                           ;storage.c: 97: for(unsigned char counter = 0; counter < 30; counter++) {
  2817  0012EA  0E00               	movlw	0
  2818  0012EC  0100               	movlb	0	; () banked
  2819  0012EE  6F7C               	movwf	Del_Data@counter& (0+255),b
  2820  0012F0                     l3193:
  2821                           
  2822                           ; BSR set to: 0
  2823  0012F0  0E1D               	movlw	29
  2824  0012F2  0100               	movlb	0	; () banked
  2825  0012F4  657C               	cpfsgt	Del_Data@counter& (0+255),b
  2826  0012F6  D001               	goto	l3197
  2827  0012F8  D00C               	goto	l3203
  2828  0012FA                     l3197:
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;storage.c: 98: Save_Data(0, counter);
  2832  0012FA  0E00               	movlw	0
  2833  0012FC  0100               	movlb	0	; () banked
  2834  0012FE  6F61               	movwf	(Save_Data@store+1)& (0+255),b
  2835  001300  0E00               	movlw	0
  2836  001302  6F60               	movwf	Save_Data@store& (0+255),b
  2837  001304  C07C  F062         	movff	Del_Data@counter,Save_Data@store_address
  2838  001308  EC8D  F009         	call	_Save_Data	;wreg free
  2839  00130C  0100               	movlb	0	; () banked
  2840  00130E  2B7C               	incf	Del_Data@counter& (0+255),f,b
  2841  001310  D7EF               	goto	l3193
  2842  001312                     l3203:
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;storage.c: 99: }
  2846                           ;storage.c: 100: Load_Data();
  2847  001312  EC9C  F005         	call	_Load_Data	;wreg free
  2848                           
  2849                           ;storage.c: 101: __nop();
  2850  001316  F000               	nop	
  2851  001318  0012               	return		;funcret
  2852  00131A                     __end_of_Del_Data:
  2853                           	opt stack 0
  2854                           tblptru	equ	0xFF8
  2855                           tblptrh	equ	0xFF7
  2856                           tblptrl	equ	0xFF6
  2857                           tablat	equ	0xFF5
  2858                           prodh	equ	0xFF4
  2859                           prodl	equ	0xFF3
  2860                           intcon	equ	0xFF2
  2861                           postinc0	equ	0xFEE
  2862                           wreg	equ	0xFE8
  2863                           postdec1	equ	0xFE5
  2864                           fsr1l	equ	0xFE1
  2865                           indf2	equ	0xFDF
  2866                           postinc2	equ	0xFDE
  2867                           postdec2	equ	0xFDD
  2868                           plusw2	equ	0xFDB
  2869                           fsr2h	equ	0xFDA
  2870                           fsr2l	equ	0xFD9
  2871                           status	equ	0xFD8
  2872                           
  2873 ;; *************** function _Save_Data *****************
  2874 ;; Defined at:
  2875 ;;		line 8 in file "storage.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  store           2    0[BANK0 ] unsigned int 
  2878 ;;  store_addres    1    2[BANK0 ] unsigned char 
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;		None               void
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1
  2890 ;;      Params:         0       3       0
  2891 ;;      Locals:         0       0       0
  2892 ;;      Temps:          0       0       0
  2893 ;;      Totals:         0       3       0
  2894 ;;Total ram usage:        3 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    5
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_Check_Buttons
  2901 ;;		_Del_Data
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           	psect	text14
  2906  00131A                     __ptext14:
  2907                           	opt stack 0
  2908  00131A                     _Save_Data:
  2909                           	opt stack 24
  2910                           
  2911                           ;storage.c: 10: EEADR = store_address;
  2912                           
  2913                           ;incstack = 0
  2914  00131A  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2915                           
  2916                           ;storage.c: 11: EEDATA = store;
  2917  00131E  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2918                           
  2919                           ;storage.c: 12: EECON1bits.EEPGD = 0;
  2920  001322  9EA6               	bcf	4006,7,c	;volatile
  2921                           
  2922                           ;storage.c: 13: EECON1bits.CFGS = 0;
  2923  001324  9CA6               	bcf	4006,6,c	;volatile
  2924                           
  2925                           ;storage.c: 14: INTCONbits.GIE = 0;
  2926  001326  9EF2               	bcf	intcon,7,c	;volatile
  2927                           
  2928                           ;storage.c: 15: EECON1bits.WREN = 1;
  2929  001328  84A6               	bsf	4006,2,c	;volatile
  2930                           
  2931                           ;storage.c: 16: EECON2 = 0x55;
  2932  00132A  0E55               	movlw	85
  2933  00132C  6EA7               	movwf	4007,c	;volatile
  2934                           
  2935                           ;storage.c: 17: EECON2 = 0xAA;
  2936  00132E  0EAA               	movlw	170
  2937  001330  6EA7               	movwf	4007,c	;volatile
  2938                           
  2939                           ;storage.c: 18: EECON1bits.WR = 1;
  2940  001332  82A6               	bsf	4006,1,c	;volatile
  2941  001334                     l362:
  2942  001334  A8A1               	btfss	4001,4,c	;volatile
  2943  001336  D7FE               	goto	l362
  2944                           
  2945                           ;storage.c: 20: PIR2bits.EEIF = 0;
  2946  001338  98A1               	bcf	4001,4,c	;volatile
  2947                           
  2948                           ;storage.c: 21: store >>= 8;
  2949  00133A  0100               	movlb	0	; () banked
  2950  00133C  5161               	movf	(Save_Data@store+1)& (0+255),w,b
  2951  00133E  6F60               	movwf	Save_Data@store& (0+255),b
  2952  001340  6B61               	clrf	(Save_Data@store+1)& (0+255),b
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;storage.c: 22: store_address += 50;
  2956  001342  0E32               	movlw	50
  2957  001344  0100               	movlb	0	; () banked
  2958  001346  2762               	addwf	Save_Data@store_address& (0+255),f,b
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;storage.c: 23: EEADR = store_address;
  2962  001348  C062  FFA9         	movff	Save_Data@store_address,4009	;volatile
  2963                           
  2964                           ; BSR set to: 0
  2965                           ;storage.c: 24: EEDATA = store;
  2966  00134C  C060  FFA8         	movff	Save_Data@store,4008	;volatile
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;storage.c: 25: EECON1bits.EEPGD = 0;
  2970  001350  9EA6               	bcf	4006,7,c	;volatile
  2971                           
  2972                           ; BSR set to: 0
  2973                           ;storage.c: 26: EECON1bits.CFGS = 0;
  2974  001352  9CA6               	bcf	4006,6,c	;volatile
  2975                           
  2976                           ; BSR set to: 0
  2977                           ;storage.c: 27: EECON1bits.WREN = 1;
  2978  001354  84A6               	bsf	4006,2,c	;volatile
  2979                           
  2980                           ; BSR set to: 0
  2981                           ;storage.c: 28: INTCONbits.GIE = 0;
  2982  001356  9EF2               	bcf	intcon,7,c	;volatile
  2983                           
  2984                           ; BSR set to: 0
  2985                           ;storage.c: 29: EECON2 = 0x55;
  2986  001358  0E55               	movlw	85
  2987  00135A  6EA7               	movwf	4007,c	;volatile
  2988                           
  2989                           ; BSR set to: 0
  2990                           ;storage.c: 30: EECON2 = 0xAA;
  2991  00135C  0EAA               	movlw	170
  2992  00135E  6EA7               	movwf	4007,c	;volatile
  2993                           
  2994                           ; BSR set to: 0
  2995                           ;storage.c: 31: EECON1bits.WR = 1;
  2996  001360  82A6               	bsf	4006,1,c	;volatile
  2997  001362                     l365:
  2998  001362  A8A1               	btfss	4001,4,c	;volatile
  2999  001364  D7FE               	goto	l365
  3000                           
  3001                           ;storage.c: 33: PIR2bits.EEIF = 0;
  3002  001366  98A1               	bcf	4001,4,c	;volatile
  3003                           
  3004                           ;storage.c: 34: EECON1bits.WREN = 0;
  3005  001368  94A6               	bcf	4006,2,c	;volatile
  3006                           
  3007                           ;storage.c: 35: INTCONbits.GIE = 1;
  3008  00136A  8EF2               	bsf	intcon,7,c	;volatile
  3009                           
  3010                           ;storage.c: 36: __nop();
  3011  00136C  F000               	nop	
  3012  00136E  0012               	return		;funcret
  3013  001370                     __end_of_Save_Data:
  3014                           	opt stack 0
  3015                           tblptru	equ	0xFF8
  3016                           tblptrh	equ	0xFF7
  3017                           tblptrl	equ	0xFF6
  3018                           tablat	equ	0xFF5
  3019                           prodh	equ	0xFF4
  3020                           prodl	equ	0xFF3
  3021                           intcon	equ	0xFF2
  3022                           postinc0	equ	0xFEE
  3023                           wreg	equ	0xFE8
  3024                           postdec1	equ	0xFE5
  3025                           fsr1l	equ	0xFE1
  3026                           indf2	equ	0xFDF
  3027                           postinc2	equ	0xFDE
  3028                           postdec2	equ	0xFDD
  3029                           plusw2	equ	0xFDB
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           
  3034 ;; *************** function _Load_Data *****************
  3035 ;; Defined at:
  3036 ;;		line 66 in file "storage.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  counter         1   27[BANK0 ] unsigned char 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;		None               void
  3043 ;; Registers used:
  3044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1
  3050 ;;      Params:         0       0       0
  3051 ;;      Locals:         0       1       0
  3052 ;;      Temps:          0       1       0
  3053 ;;      Totals:         0       2       0
  3054 ;;Total ram usage:        2 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    9
  3057 ;; This function calls:
  3058 ;;		_Delay_Routine
  3059 ;;		_Evaluate_Display
  3060 ;;		_Read_Data
  3061 ;;		_Set_Display
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;;		_Del_Data
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text15
  3069  000B38                     __ptext15:
  3070                           	opt stack 0
  3071  000B38                     _Load_Data:
  3072                           	opt stack 21
  3073                           
  3074                           ;storage.c: 67: string_load[0] = 'L';
  3075                           
  3076                           ;incstack = 0
  3077  000B38  0E4C               	movlw	76
  3078  000B3A  0100               	movlb	0	; () banked
  3079  000B3C  6F87               	movwf	_string_load& (0+255),b
  3080                           
  3081                           ;storage.c: 68: string_load[1] = 'O';
  3082  000B3E  0E4F               	movlw	79
  3083  000B40  0100               	movlb	0	; () banked
  3084  000B42  6F88               	movwf	(_string_load+1)& (0+255),b
  3085                           
  3086                           ;storage.c: 69: string_load[2] = 'A';
  3087  000B44  0E41               	movlw	65
  3088  000B46  0100               	movlb	0	; () banked
  3089  000B48  6F89               	movwf	(_string_load+2)& (0+255),b
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;storage.c: 71: Evaluate_Display(3, string_load);
  3093  000B4A  0E87               	movlw	low _string_load
  3094  000B4C  0100               	movlb	0	; () banked
  3095  000B4E  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3096  000B50  0E00               	movlw	high _string_load
  3097  000B52  0100               	movlb	0	; () banked
  3098  000B54  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3099  000B56  0E03               	movlw	3
  3100  000B58  ECCE  F003         	call	_Evaluate_Display
  3101                           
  3102                           ;storage.c: 72: Delay_Routine(30);
  3103  000B5C  0E1E               	movlw	30
  3104  000B5E  EC22  F00B         	call	_Delay_Routine
  3105                           
  3106                           ;storage.c: 73: for(unsigned char counter = 0; counter < 30; counter++) {
  3107  000B62  0E00               	movlw	0
  3108  000B64  0100               	movlb	0	; () banked
  3109  000B66  6F7B               	movwf	Load_Data@counter& (0+255),b
  3110  000B68                     l3123:
  3111                           
  3112                           ; BSR set to: 0
  3113  000B68  0E1D               	movlw	29
  3114  000B6A  0100               	movlb	0	; () banked
  3115  000B6C  657B               	cpfsgt	Load_Data@counter& (0+255),b
  3116  000B6E  D001               	goto	l3127
  3117  000B70  D01A               	goto	l3133
  3118  000B72                     l3127:
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;storage.c: 74: pin[counter].time = Read_Data(counter);
  3122  000B72  0100               	movlb	0	; () banked
  3123  000B74  517B               	movf	Load_Data@counter& (0+255),w,b
  3124  000B76  EC0C  F00A         	call	_Read_Data
  3125  000B7A  0100               	movlb	0	; () banked
  3126  000B7C  517B               	movf	Load_Data@counter& (0+255),w,b
  3127  000B7E  0D06               	mullw	6
  3128  000B80  0E04               	movlw	4
  3129  000B82  26F3               	addwf	prodl,f,c
  3130  000B84  0E00               	movlw	0
  3131  000B86  22F4               	addwfc	prodh,f,c
  3132  000B88  0E00               	movlw	low _pin
  3133  000B8A  24F3               	addwf	prodl,w,c
  3134  000B8C  6ED9               	movwf	fsr2l,c
  3135  000B8E  0E01               	movlw	high _pin
  3136  000B90  20F4               	addwfc	prodh,w,c
  3137  000B92  6EDA               	movwf	fsr2h,c
  3138  000B94  0100               	movlb	0	; () banked
  3139  000B96  C060  FFDE         	movff	?_Read_Data,postinc2
  3140  000B9A  0100               	movlb	0	; () banked
  3141  000B9C  C061  FFDD         	movff	?_Read_Data+1,postdec2
  3142                           
  3143                           ; BSR set to: 0
  3144  000BA0  0100               	movlb	0	; () banked
  3145  000BA2  2B7B               	incf	Load_Data@counter& (0+255),f,b
  3146  000BA4  D7E1               	goto	l3123
  3147  000BA6                     l3133:
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;storage.c: 75: }
  3151                           ;storage.c: 76: slave_selected = 0;
  3152  000BA6  0E00               	movlw	0
  3153  000BA8  0100               	movlb	0	; () banked
  3154  000BAA  6F80               	movwf	_slave_selected& (0+255),b
  3155                           
  3156                           ;storage.c: 77: pin_selected = 0;
  3157  000BAC  0E00               	movlw	0
  3158  000BAE  0100               	movlb	0	; () banked
  3159  000BB0  6F7F               	movwf	_pin_selected& (0+255),b
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;storage.c: 78: Set_Display('7', 'E', pin[pin_selected].slave);
  3163  000BB2  0E45               	movlw	69
  3164  000BB4  0100               	movlb	0	; () banked
  3165  000BB6  6F76               	movwf	Set_Display@information& (0+255),b
  3166  000BB8  0100               	movlb	0	; () banked
  3167  000BBA  517F               	movf	_pin_selected& (0+255),w,b
  3168  000BBC  0D06               	mullw	6
  3169  000BBE  0E00               	movlw	low _pin
  3170  000BC0  24F3               	addwf	prodl,w,c
  3171  000BC2  6ED9               	movwf	fsr2l,c
  3172  000BC4  0E01               	movlw	high _pin
  3173  000BC6  20F4               	addwfc	prodh,w,c
  3174  000BC8  6EDA               	movwf	fsr2h,c
  3175  000BCA  50DF               	movf	indf2,w,c
  3176  000BCC  0100               	movlb	0	; () banked
  3177  000BCE  6F7A               	movwf	??_Load_Data& (0+255),b
  3178  000BD0  0100               	movlb	0	; () banked
  3179  000BD2  517A               	movf	??_Load_Data& (0+255),w,b
  3180  000BD4  0100               	movlb	0	; () banked
  3181  000BD6  6F77               	movwf	Set_Display@value& (0+255),b
  3182  000BD8  6B78               	clrf	(Set_Display@value+1)& (0+255),b
  3183  000BDA  0E37               	movlw	55
  3184  000BDC  ECCC  F008         	call	_Set_Display
  3185                           
  3186                           ;storage.c: 80: Delay_Routine(20);
  3187  000BE0  0E14               	movlw	20
  3188  000BE2  EC22  F00B         	call	_Delay_Routine
  3189                           
  3190                           ;storage.c: 81: Set_Display('7', 'A', pin[pin_selected].output);
  3191  000BE6  0E41               	movlw	65
  3192  000BE8  0100               	movlb	0	; () banked
  3193  000BEA  6F76               	movwf	Set_Display@information& (0+255),b
  3194  000BEC  0100               	movlb	0	; () banked
  3195  000BEE  517F               	movf	_pin_selected& (0+255),w,b
  3196  000BF0  0D06               	mullw	6
  3197  000BF2  0E01               	movlw	1
  3198  000BF4  26F3               	addwf	prodl,f,c
  3199  000BF6  0E00               	movlw	0
  3200  000BF8  22F4               	addwfc	prodh,f,c
  3201  000BFA  0E00               	movlw	low _pin
  3202  000BFC  24F3               	addwf	prodl,w,c
  3203  000BFE  6ED9               	movwf	fsr2l,c
  3204  000C00  0E01               	movlw	high _pin
  3205  000C02  20F4               	addwfc	prodh,w,c
  3206  000C04  6EDA               	movwf	fsr2h,c
  3207  000C06  50DF               	movf	indf2,w,c
  3208  000C08  0100               	movlb	0	; () banked
  3209  000C0A  6F7A               	movwf	??_Load_Data& (0+255),b
  3210  000C0C  0100               	movlb	0	; () banked
  3211  000C0E  517A               	movf	??_Load_Data& (0+255),w,b
  3212  000C10  0100               	movlb	0	; () banked
  3213  000C12  6F77               	movwf	Set_Display@value& (0+255),b
  3214  000C14  6B78               	clrf	(Set_Display@value+1)& (0+255),b
  3215  000C16  0E37               	movlw	55
  3216  000C18  ECCC  F008         	call	_Set_Display
  3217                           
  3218                           ;storage.c: 82: Delay_Routine(20);
  3219  000C1C  0E14               	movlw	20
  3220  000C1E  EC22  F00B         	call	_Delay_Routine
  3221                           
  3222                           ;storage.c: 83: Set_Display('7', '-', pin[pin_selected].time);
  3223  000C22  0E2D               	movlw	45
  3224  000C24  0100               	movlb	0	; () banked
  3225  000C26  6F76               	movwf	Set_Display@information& (0+255),b
  3226  000C28  0100               	movlb	0	; () banked
  3227  000C2A  517F               	movf	_pin_selected& (0+255),w,b
  3228  000C2C  0D06               	mullw	6
  3229  000C2E  0E04               	movlw	4
  3230  000C30  26F3               	addwf	prodl,f,c
  3231  000C32  0E00               	movlw	0
  3232  000C34  22F4               	addwfc	prodh,f,c
  3233  000C36  0E00               	movlw	low _pin
  3234  000C38  24F3               	addwf	prodl,w,c
  3235  000C3A  6ED9               	movwf	fsr2l,c
  3236  000C3C  0E01               	movlw	high _pin
  3237  000C3E  20F4               	addwfc	prodh,w,c
  3238  000C40  6EDA               	movwf	fsr2h,c
  3239  000C42  CFDE F077          	movff	postinc2,Set_Display@value
  3240  000C46  CFDD F078          	movff	postdec2,Set_Display@value+1
  3241  000C4A  0E37               	movlw	55
  3242  000C4C  ECCC  F008         	call	_Set_Display
  3243                           
  3244                           ;storage.c: 84: Delay_Routine(20);
  3245  000C50  0E14               	movlw	20
  3246  000C52  EC22  F00B         	call	_Delay_Routine
  3247  000C56  0012               	return		;funcret
  3248  000C58                     __end_of_Load_Data:
  3249                           	opt stack 0
  3250                           tblptru	equ	0xFF8
  3251                           tblptrh	equ	0xFF7
  3252                           tblptrl	equ	0xFF6
  3253                           tablat	equ	0xFF5
  3254                           prodh	equ	0xFF4
  3255                           prodl	equ	0xFF3
  3256                           intcon	equ	0xFF2
  3257                           postinc0	equ	0xFEE
  3258                           wreg	equ	0xFE8
  3259                           postdec1	equ	0xFE5
  3260                           fsr1l	equ	0xFE1
  3261                           indf2	equ	0xFDF
  3262                           postinc2	equ	0xFDE
  3263                           postdec2	equ	0xFDD
  3264                           plusw2	equ	0xFDB
  3265                           fsr2h	equ	0xFDA
  3266                           fsr2l	equ	0xFD9
  3267                           status	equ	0xFD8
  3268                           
  3269 ;; *************** function _Set_Display *****************
  3270 ;; Defined at:
  3271 ;;		line 139 in file "display.c"
  3272 ;; Parameters:    Size  Location     Type
  3273 ;;  type            1    wreg     unsigned char 
  3274 ;;  information     1   22[BANK0 ] unsigned char 
  3275 ;;  value           2   23[BANK0 ] unsigned int 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  type            1   25[BANK0 ] unsigned char 
  3278 ;; Return value:  Size  Location     Type
  3279 ;;		None               void
  3280 ;; Registers used:
  3281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1
  3287 ;;      Params:         0       3       0
  3288 ;;      Locals:         0       1       0
  3289 ;;      Temps:          0       0       0
  3290 ;;      Totals:         0       4       0
  3291 ;;Total ram usage:        4 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:    8
  3294 ;; This function calls:
  3295 ;;		_Evaluate_Display
  3296 ;;		_Evaluate_Signs
  3297 ;;		_Write_Display_Byte
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;;		_Check_Buttons
  3301 ;;		_Load_Data
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	text16
  3306  001198                     __ptext16:
  3307                           	opt stack 0
  3308  001198                     _Set_Display:
  3309                           	opt stack 22
  3310                           
  3311                           ;incstack = 0
  3312                           ;Set_Display@type stored from wreg
  3313  001198  0100               	movlb	0	; () banked
  3314  00119A  6F79               	movwf	Set_Display@type& (0+255),b
  3315                           
  3316                           ;display.c: 141: switch (type) {
  3317  00119C  D020               	goto	l3079
  3318  00119E                     l3063:
  3319                           
  3320                           ;display.c: 143: if(information != '-') {
  3321  00119E  0E2D               	movlw	45
  3322  0011A0  0100               	movlb	0	; () banked
  3323  0011A2  1976               	xorwf	Set_Display@information& (0+255),w,b
  3324  0011A4  B4D8               	btfsc	status,2,c
  3325  0011A6  D014               	goto	l3075
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;display.c: 144: signs[2] = value;
  3329  0011A8  C077  F083         	movff	Set_Display@value,_signs+2
  3330                           
  3331                           ; BSR set to: 0
  3332                           ;display.c: 145: signs[2] += 0x30;
  3333  0011AC  0E30               	movlw	48
  3334  0011AE  0100               	movlb	0	; () banked
  3335  0011B0  2783               	addwf	(_signs+2)& (0+255),f,b
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;display.c: 146: signs[1] = '-';
  3339  0011B2  0E2D               	movlw	45
  3340  0011B4  0100               	movlb	0	; () banked
  3341  0011B6  6F82               	movwf	(_signs+1)& (0+255),b
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;display.c: 147: signs[0] = information;
  3345  0011B8  C076  F081         	movff	Set_Display@information,_signs
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;display.c: 148: Evaluate_Display(sizeof(signs), signs);
  3349  0011BC  0E81               	movlw	low _signs
  3350  0011BE  0100               	movlb	0	; () banked
  3351  0011C0  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3352  0011C2  0E00               	movlw	high _signs
  3353  0011C4  0100               	movlb	0	; () banked
  3354  0011C6  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3355  0011C8  0E03               	movlw	3
  3356  0011CA  ECCE  F003         	call	_Evaluate_Display
  3357                           
  3358                           ;display.c: 149: } else {
  3359  0011CE  D00D               	goto	l3081
  3360  0011D0                     l3075:
  3361                           
  3362                           ;display.c: 150: Evaluate_Signs(value);
  3363  0011D0  C077  F06F         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  3364  0011D4  C078  F070         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  3365  0011D8  ECA5  F006         	call	_Evaluate_Signs	;wreg free
  3366                           
  3367                           ;display.c: 156: }
  3368                           
  3369                           ;display.c: 155: break;
  3370                           
  3371                           ;display.c: 153: case 'L':
  3372                           
  3373                           ;display.c: 151: }
  3374                           ;display.c: 152: break;
  3375  0011DC  D006               	goto	l3081
  3376  0011DE                     l3079:
  3377  0011DE  0100               	movlb	0	; () banked
  3378  0011E0  5179               	movf	Set_Display@type& (0+255),w,b
  3379                           
  3380                           ; Switch size 1, requested type "space"
  3381                           ; Number of cases is 2, Range of values is 55 to 76
  3382                           ; switch strategies available:
  3383                           ; Name         Instructions Cycles
  3384                           ; simple_byte            7     4 (average)
  3385                           ;	Chosen strategy is simple_byte
  3386  0011E2  0A37               	xorlw	55	; case 55
  3387  0011E4  B4D8               	btfsc	status,2,c
  3388  0011E6  D7DB               	goto	l3063
  3389  0011E8  0A7B               	xorlw	123	; case 76
  3390  0011EA                     l3081:
  3391                           
  3392                           ;display.c: 157: Write_Display_Byte(pixels);
  3393  0011EA  0E39               	movlw	low _pixels
  3394  0011EC  0100               	movlb	0	; () banked
  3395  0011EE  6F60               	movwf	Write_Display_Byte@write_data& (0+255),b
  3396  0011F0  0E00               	movlw	high _pixels
  3397  0011F2  0100               	movlb	0	; () banked
  3398  0011F4  6F61               	movwf	(Write_Display_Byte@write_data+1)& (0+255),b
  3399  0011F6  ECFE  F008         	call	_Write_Display_Byte	;wreg free
  3400  0011FA  0012               	return		;funcret
  3401  0011FC                     __end_of_Set_Display:
  3402                           	opt stack 0
  3403                           tblptru	equ	0xFF8
  3404                           tblptrh	equ	0xFF7
  3405                           tblptrl	equ	0xFF6
  3406                           tablat	equ	0xFF5
  3407                           prodh	equ	0xFF4
  3408                           prodl	equ	0xFF3
  3409                           intcon	equ	0xFF2
  3410                           postinc0	equ	0xFEE
  3411                           wreg	equ	0xFE8
  3412                           postdec1	equ	0xFE5
  3413                           fsr1l	equ	0xFE1
  3414                           indf2	equ	0xFDF
  3415                           postinc2	equ	0xFDE
  3416                           postdec2	equ	0xFDD
  3417                           plusw2	equ	0xFDB
  3418                           fsr2h	equ	0xFDA
  3419                           fsr2l	equ	0xFD9
  3420                           status	equ	0xFD8
  3421                           
  3422 ;; *************** function _Write_Display_Byte *****************
  3423 ;; Defined at:
  3424 ;;		line 56 in file "communication.c"
  3425 ;; Parameters:    Size  Location     Type
  3426 ;;  write_data      2    0[BANK0 ] PTR unsigned char 
  3427 ;;		 -> pixels(8), 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  counter         1    6[BANK0 ] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;		None               void
  3432 ;; Registers used:
  3433 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1
  3439 ;;      Params:         0       2       0
  3440 ;;      Locals:         0       1       0
  3441 ;;      Temps:          0       4       0
  3442 ;;      Totals:         0       7       0
  3443 ;;Total ram usage:        7 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:    5
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_Set_Display
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text17
  3454  0011FC                     __ptext17:
  3455                           	opt stack 0
  3456  0011FC                     _Write_Display_Byte:
  3457                           	opt stack 24
  3458                           
  3459                           ;communication.c: 57: for(unsigned char counter = sizeof(pixels); counter > 0;
  3460                           
  3461                           ;incstack = 0
  3462  0011FC  0E08               	movlw	8
  3463  0011FE  0100               	movlb	0	; () banked
  3464  001200  6F66               	movwf	Write_Display_Byte@counter& (0+255),b
  3465  001202                     
  3466                           ;communication.c: 58: counter--) {
  3467  001202  0100               	movlb	0	; () banked
  3468  001204  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3469  001206  0100               	movlb	0	; () banked
  3470  001208  B4D8               	btfsc	status,2,c
  3471  00120A  0012               	return	
  3472                           
  3473                           ; BSR set to: 0
  3474                           ;communication.c: 59: if(SSP1IF = 1) {
  3475                           
  3476                           ; BSR set to: 0
  3477  00120C  869E               	bsf	3998,3,c	;volatile
  3478  00120E  B69E               	btfsc	3998,3,c	;volatile
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;communication.c: 60: SSP1IF = 0;
  3482  001210  969E               	bcf	3998,3,c	;volatile
  3483                           
  3484                           ; BSR set to: 0
  3485                           ;communication.c: 61: }
  3486                           ;communication.c: 62: SSP1BUF = write_data[counter - 1];
  3487                           
  3488                           ; BSR set to: 0
  3489  001212  0EFF               	movlw	255
  3490  001214  0100               	movlb	0	; () banked
  3491  001216  6F62               	movwf	??_Write_Display_Byte& (0+255),b
  3492  001218  0EFF               	movlw	255
  3493  00121A  0100               	movlb	0	; () banked
  3494  00121C  6F63               	movwf	(??_Write_Display_Byte+1)& (0+255),b
  3495  00121E  0100               	movlb	0	; () banked
  3496  001220  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
  3497  001222  0100               	movlb	0	; () banked
  3498  001224  6F64               	movwf	(??_Write_Display_Byte+2)& (0+255),b
  3499  001226  6B65               	clrf	(??_Write_Display_Byte+3)& (0+255),b
  3500  001228  0100               	movlb	0	; () banked
  3501  00122A  5162               	movf	??_Write_Display_Byte& (0+255),w,b
  3502  00122C  0100               	movlb	0	; () banked
  3503  00122E  2764               	addwf	(??_Write_Display_Byte+2)& (0+255),f,b
  3504  001230  0100               	movlb	0	; () banked
  3505  001232  5163               	movf	(??_Write_Display_Byte+1)& (0+255),w,b
  3506  001234  0100               	movlb	0	; () banked
  3507  001236  2365               	addwfc	(??_Write_Display_Byte+3)& (0+255),f,b
  3508  001238  0100               	movlb	0	; () banked
  3509  00123A  5164               	movf	(??_Write_Display_Byte+2)& (0+255),w,b
  3510  00123C  0100               	movlb	0	; () banked
  3511  00123E  2560               	addwf	Write_Display_Byte@write_data& (0+255),w,b
  3512  001240  6ED9               	movwf	fsr2l,c
  3513  001242  0100               	movlb	0	; () banked
  3514  001244  5165               	movf	(??_Write_Display_Byte+3)& (0+255),w,b
  3515  001246  0100               	movlb	0	; () banked
  3516  001248  2161               	addwfc	(Write_Display_Byte@write_data+1)& (0+255),w,b
  3517  00124A  6EDA               	movwf	fsr2h,c
  3518  00124C  50DF               	movf	indf2,w,c
  3519  00124E  6EC9               	movwf	4041,c	;volatile
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;communication.c: 64: SSP1IF = 0;
  3523  001250  969E               	bcf	3998,3,c	;volatile
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;communication.c: 65: PORTCbits.RC0 = 0;
  3527  001252  9082               	bcf	3970,0,c	;volatile
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;communication.c: 66: PORTCbits.RC0 = 1;
  3531  001254  8082               	bsf	3970,0,c	;volatile
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;communication.c: 67: PORTCbits.RC0 = 0;
  3535  001256  9082               	bcf	3970,0,c	;volatile
  3536                           
  3537                           ; BSR set to: 0
  3538  001258  0100               	movlb	0	; () banked
  3539  00125A  0766               	decf	Write_Display_Byte@counter& (0+255),f,b
  3540  00125C  D7D2               	goto	L3
  3541  00125E                     __end_of_Write_Display_Byte:
  3542                           	opt stack 0
  3543                           tblptru	equ	0xFF8
  3544                           tblptrh	equ	0xFF7
  3545                           tblptrl	equ	0xFF6
  3546                           tablat	equ	0xFF5
  3547                           prodh	equ	0xFF4
  3548                           prodl	equ	0xFF3
  3549                           intcon	equ	0xFF2
  3550                           postinc0	equ	0xFEE
  3551                           wreg	equ	0xFE8
  3552                           postdec1	equ	0xFE5
  3553                           fsr1l	equ	0xFE1
  3554                           indf2	equ	0xFDF
  3555                           postinc2	equ	0xFDE
  3556                           postdec2	equ	0xFDD
  3557                           plusw2	equ	0xFDB
  3558                           fsr2h	equ	0xFDA
  3559                           fsr2l	equ	0xFD9
  3560                           status	equ	0xFD8
  3561                           
  3562 ;; *************** function _Evaluate_Signs *****************
  3563 ;; Defined at:
  3564 ;;		line 119 in file "display.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;  evaluation_v    2   15[BANK0 ] unsigned int 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;  valuecounter    1   21[BANK0 ] unsigned char 
  3569 ;; Return value:  Size  Location     Type
  3570 ;;		None               void
  3571 ;; Registers used:
  3572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1
  3578 ;;      Params:         0       2       0
  3579 ;;      Locals:         0       1       0
  3580 ;;      Temps:          0       4       0
  3581 ;;      Totals:         0       7       0
  3582 ;;Total ram usage:        7 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    7
  3585 ;; This function calls:
  3586 ;;		_Evaluate_Display
  3587 ;;		___lwdiv
  3588 ;;		___lwmod
  3589 ;; This function is called by:
  3590 ;;		_Set_Display
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text18
  3595  000D4A                     __ptext18:
  3596                           	opt stack 0
  3597  000D4A                     _Evaluate_Signs:
  3598                           	opt stack 22
  3599                           
  3600                           ;display.c: 120: for(unsigned char valuecounter = sizeof(signs); valuecounter > 0;
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;incstack = 0
  3604  000D4A  0E03               	movlw	3
  3605  000D4C  0100               	movlb	0	; () banked
  3606  000D4E  6F75               	movwf	Evaluate_Signs@valuecounter& (0+255),b
  3607  000D50                     
  3608                           ;display.c: 121: valuecounter--) {
  3609  000D50  0100               	movlb	0	; () banked
  3610  000D52  5175               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3611  000D54  0100               	movlb	0	; () banked
  3612  000D56  B4D8               	btfsc	status,2,c
  3613  000D58  D058               	goto	l457
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;display.c: 122: signs[(valuecounter - 1)] = evaluation_value % 10;
  3617                           
  3618                           ; BSR set to: 0
  3619                           
  3620                           ; BSR set to: 0
  3621  000D5A  0EFF               	movlw	255
  3622  000D5C  0100               	movlb	0	; () banked
  3623  000D5E  6F71               	movwf	??_Evaluate_Signs& (0+255),b
  3624  000D60  0EFF               	movlw	255
  3625  000D62  0100               	movlb	0	; () banked
  3626  000D64  6F72               	movwf	(??_Evaluate_Signs+1)& (0+255),b
  3627  000D66  0100               	movlb	0	; () banked
  3628  000D68  5175               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3629  000D6A  0100               	movlb	0	; () banked
  3630  000D6C  6F73               	movwf	(??_Evaluate_Signs+2)& (0+255),b
  3631  000D6E  6B74               	clrf	(??_Evaluate_Signs+3)& (0+255),b
  3632  000D70  0100               	movlb	0	; () banked
  3633  000D72  5171               	movf	??_Evaluate_Signs& (0+255),w,b
  3634  000D74  0100               	movlb	0	; () banked
  3635  000D76  2773               	addwf	(??_Evaluate_Signs+2)& (0+255),f,b
  3636  000D78  0100               	movlb	0	; () banked
  3637  000D7A  5172               	movf	(??_Evaluate_Signs+1)& (0+255),w,b
  3638  000D7C  0100               	movlb	0	; () banked
  3639  000D7E  2374               	addwfc	(??_Evaluate_Signs+3)& (0+255),f,b
  3640  000D80  0E81               	movlw	low _signs
  3641  000D82  0100               	movlb	0	; () banked
  3642  000D84  2573               	addwf	(??_Evaluate_Signs+2)& (0+255),w,b
  3643  000D86  6ED9               	movwf	fsr2l,c
  3644  000D88  0E00               	movlw	high _signs
  3645  000D8A  0100               	movlb	0	; () banked
  3646  000D8C  2174               	addwfc	(??_Evaluate_Signs+3)& (0+255),w,b
  3647  000D8E  6EDA               	movwf	fsr2h,c
  3648  000D90  C06F  F060         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  3649  000D94  C070  F061         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  3650  000D98  0E00               	movlw	0
  3651  000D9A  0100               	movlb	0	; () banked
  3652  000D9C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
  3653  000D9E  0E0A               	movlw	10
  3654  000DA0  6F62               	movwf	___lwmod@divisor& (0+255),b
  3655  000DA2  EC2F  F009         	call	___lwmod	;wreg free
  3656  000DA6  0100               	movlb	0	; () banked
  3657  000DA8  5160               	movf	?___lwmod& (0+255),w,b
  3658  000DAA  6EDF               	movwf	indf2,c
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;display.c: 123: signs[(valuecounter - 1)] += 0x30;
  3662  000DAC  0EFF               	movlw	255
  3663  000DAE  0100               	movlb	0	; () banked
  3664  000DB0  6F71               	movwf	??_Evaluate_Signs& (0+255),b
  3665  000DB2  0EFF               	movlw	255
  3666  000DB4  0100               	movlb	0	; () banked
  3667  000DB6  6F72               	movwf	(??_Evaluate_Signs+1)& (0+255),b
  3668  000DB8  0100               	movlb	0	; () banked
  3669  000DBA  5175               	movf	Evaluate_Signs@valuecounter& (0+255),w,b
  3670  000DBC  0100               	movlb	0	; () banked
  3671  000DBE  6F73               	movwf	(??_Evaluate_Signs+2)& (0+255),b
  3672  000DC0  6B74               	clrf	(??_Evaluate_Signs+3)& (0+255),b
  3673  000DC2  0100               	movlb	0	; () banked
  3674  000DC4  5171               	movf	??_Evaluate_Signs& (0+255),w,b
  3675  000DC6  0100               	movlb	0	; () banked
  3676  000DC8  2773               	addwf	(??_Evaluate_Signs+2)& (0+255),f,b
  3677  000DCA  0100               	movlb	0	; () banked
  3678  000DCC  5172               	movf	(??_Evaluate_Signs+1)& (0+255),w,b
  3679  000DCE  0100               	movlb	0	; () banked
  3680  000DD0  2374               	addwfc	(??_Evaluate_Signs+3)& (0+255),f,b
  3681  000DD2  0E81               	movlw	low _signs
  3682  000DD4  0100               	movlb	0	; () banked
  3683  000DD6  2573               	addwf	(??_Evaluate_Signs+2)& (0+255),w,b
  3684  000DD8  6ED9               	movwf	fsr2l,c
  3685  000DDA  0E00               	movlw	high _signs
  3686  000DDC  0100               	movlb	0	; () banked
  3687  000DDE  2174               	addwfc	(??_Evaluate_Signs+3)& (0+255),w,b
  3688  000DE0  6EDA               	movwf	fsr2h,c
  3689  000DE2  0E30               	movlw	48
  3690  000DE4  26DF               	addwf	indf2,f,c
  3691                           
  3692                           ; BSR set to: 0
  3693                           ;display.c: 124: evaluation_value = evaluation_value / 10;
  3694  000DE6  C06F  F060         	movff	Evaluate_Signs@evaluation_value,___lwdiv@dividend
  3695  000DEA  C070  F061         	movff	Evaluate_Signs@evaluation_value+1,___lwdiv@dividend+1
  3696  000DEE  0E00               	movlw	0
  3697  000DF0  0100               	movlb	0	; () banked
  3698  000DF2  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  3699  000DF4  0E0A               	movlw	10
  3700  000DF6  6F62               	movwf	___lwdiv@divisor& (0+255),b
  3701  000DF8  EC5A  F008         	call	___lwdiv	;wreg free
  3702  000DFC  C060  F06F         	movff	?___lwdiv,Evaluate_Signs@evaluation_value
  3703  000E00  C061  F070         	movff	?___lwdiv+1,Evaluate_Signs@evaluation_value+1
  3704  000E04  0100               	movlb	0	; () banked
  3705  000E06  0775               	decf	Evaluate_Signs@valuecounter& (0+255),f,b
  3706  000E08  D7A3               	goto	L4
  3707  000E0A                     l457:
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;display.c: 125: }
  3711                           ;display.c: 126: __nop();
  3712  000E0A  F000               	nop	
  3713                           
  3714                           ;display.c: 127: Evaluate_Display(sizeof(signs), signs);
  3715  000E0C  0E81               	movlw	low _signs
  3716  000E0E  0100               	movlb	0	; () banked
  3717  000E10  6F68               	movwf	Evaluate_Display@evaluate& (0+255),b
  3718  000E12  0E00               	movlw	high _signs
  3719  000E14  0100               	movlb	0	; () banked
  3720  000E16  6F69               	movwf	(Evaluate_Display@evaluate+1)& (0+255),b
  3721  000E18  0E03               	movlw	3
  3722  000E1A  ECCE  F003         	call	_Evaluate_Display
  3723  000E1E  0012               	return		;funcret
  3724  000E20                     __end_of_Evaluate_Signs:
  3725                           	opt stack 0
  3726                           tblptru	equ	0xFF8
  3727                           tblptrh	equ	0xFF7
  3728                           tblptrl	equ	0xFF6
  3729                           tablat	equ	0xFF5
  3730                           prodh	equ	0xFF4
  3731                           prodl	equ	0xFF3
  3732                           intcon	equ	0xFF2
  3733                           postinc0	equ	0xFEE
  3734                           wreg	equ	0xFE8
  3735                           postdec1	equ	0xFE5
  3736                           fsr1l	equ	0xFE1
  3737                           indf2	equ	0xFDF
  3738                           postinc2	equ	0xFDE
  3739                           postdec2	equ	0xFDD
  3740                           plusw2	equ	0xFDB
  3741                           fsr2h	equ	0xFDA
  3742                           fsr2l	equ	0xFD9
  3743                           status	equ	0xFD8
  3744                           
  3745 ;; *************** function ___lwmod *****************
  3746 ;; Defined at:
  3747 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  3748 ;; Parameters:    Size  Location     Type
  3749 ;;  dividend        2    0[BANK0 ] unsigned int 
  3750 ;;  divisor         2    2[BANK0 ] unsigned int 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  counter         1    4[BANK0 ] unsigned char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2    0[BANK0 ] unsigned int 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1
  3762 ;;      Params:         0       4       0
  3763 ;;      Locals:         0       1       0
  3764 ;;      Temps:          0       0       0
  3765 ;;      Totals:         0       5       0
  3766 ;;Total ram usage:        5 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    5
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_Evaluate_Signs
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text19
  3777  00125E                     __ptext19:
  3778                           	opt stack 0
  3779  00125E                     ___lwmod:
  3780                           	opt stack 23
  3781                           
  3782                           ;incstack = 0
  3783  00125E  0100               	movlb	0	; () banked
  3784  001260  5162               	movf	___lwmod@divisor& (0+255),w,b
  3785  001262  0100               	movlb	0	; () banked
  3786  001264  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3787  001266  B4D8               	btfsc	status,2,c
  3788  001268  D026               	goto	l1044
  3789                           
  3790                           ; BSR set to: 0
  3791  00126A  0E01               	movlw	1
  3792  00126C  0100               	movlb	0	; () banked
  3793  00126E  6F64               	movwf	___lwmod@counter& (0+255),b
  3794  001270  D006               	goto	l3007
  3795  001272                     l3005:
  3796                           
  3797                           ; BSR set to: 0
  3798  001272  0100               	movlb	0	; () banked
  3799  001274  90D8               	bcf	status,0,c
  3800  001276  3762               	rlcf	___lwmod@divisor& (0+255),f,b
  3801  001278  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3802  00127A  0100               	movlb	0	; () banked
  3803  00127C  2B64               	incf	___lwmod@counter& (0+255),f,b
  3804  00127E                     l3007:
  3805                           
  3806                           ; BSR set to: 0
  3807  00127E  0100               	movlb	0	; () banked
  3808  001280  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3809  001282  D7F7               	goto	l3005
  3810  001284                     l3009:
  3811                           
  3812                           ; BSR set to: 0
  3813  001284  0100               	movlb	0	; () banked
  3814  001286  5162               	movf	___lwmod@divisor& (0+255),w,b
  3815  001288  0100               	movlb	0	; () banked
  3816  00128A  5D60               	subwf	___lwmod@dividend& (0+255),w,b
  3817  00128C  0100               	movlb	0	; () banked
  3818  00128E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3819  001290  0100               	movlb	0	; () banked
  3820  001292  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3821  001294  A0D8               	btfss	status,0,c
  3822  001296  D008               	goto	l3013
  3823                           
  3824                           ; BSR set to: 0
  3825  001298  0100               	movlb	0	; () banked
  3826  00129A  5162               	movf	___lwmod@divisor& (0+255),w,b
  3827  00129C  0100               	movlb	0	; () banked
  3828  00129E  5F60               	subwf	___lwmod@dividend& (0+255),f,b
  3829  0012A0  0100               	movlb	0	; () banked
  3830  0012A2  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3831  0012A4  0100               	movlb	0	; () banked
  3832  0012A6  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3833  0012A8                     l3013:
  3834                           
  3835                           ; BSR set to: 0
  3836  0012A8  0100               	movlb	0	; () banked
  3837  0012AA  90D8               	bcf	status,0,c
  3838  0012AC  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3839  0012AE  3362               	rrcf	___lwmod@divisor& (0+255),f,b
  3840                           
  3841                           ; BSR set to: 0
  3842  0012B0  0100               	movlb	0	; () banked
  3843  0012B2  2F64               	decfsz	___lwmod@counter& (0+255),f,b
  3844  0012B4  D7E7               	goto	l3009
  3845  0012B6                     l1044:
  3846                           
  3847                           ; BSR set to: 0
  3848  0012B6  C060  F060         	movff	___lwmod@dividend,?___lwmod
  3849  0012BA  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
  3850                           
  3851                           ; BSR set to: 0
  3852  0012BE  0012               	return		;funcret
  3853  0012C0                     __end_of___lwmod:
  3854                           	opt stack 0
  3855                           tblptru	equ	0xFF8
  3856                           tblptrh	equ	0xFF7
  3857                           tblptrl	equ	0xFF6
  3858                           tablat	equ	0xFF5
  3859                           prodh	equ	0xFF4
  3860                           prodl	equ	0xFF3
  3861                           intcon	equ	0xFF2
  3862                           postinc0	equ	0xFEE
  3863                           wreg	equ	0xFE8
  3864                           postdec1	equ	0xFE5
  3865                           fsr1l	equ	0xFE1
  3866                           indf2	equ	0xFDF
  3867                           postinc2	equ	0xFDE
  3868                           postdec2	equ	0xFDD
  3869                           plusw2	equ	0xFDB
  3870                           fsr2h	equ	0xFDA
  3871                           fsr2l	equ	0xFD9
  3872                           status	equ	0xFD8
  3873                           
  3874 ;; *************** function ___lwdiv *****************
  3875 ;; Defined at:
  3876 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  dividend        2    0[BANK0 ] unsigned int 
  3879 ;;  divisor         2    2[BANK0 ] unsigned int 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;  quotient        2    5[BANK0 ] unsigned int 
  3882 ;;  counter         1    4[BANK0 ] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  2    0[BANK0 ] unsigned int 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1
  3892 ;;      Params:         0       4       0
  3893 ;;      Locals:         0       3       0
  3894 ;;      Temps:          0       0       0
  3895 ;;      Totals:         0       7       0
  3896 ;;Total ram usage:        7 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    5
  3899 ;; This function calls:
  3900 ;;		Nothing
  3901 ;; This function is called by:
  3902 ;;		_Evaluate_Signs
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           
  3906                           	psect	text20
  3907  0010B4                     __ptext20:
  3908                           	opt stack 0
  3909  0010B4                     ___lwdiv:
  3910                           	opt stack 23
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;incstack = 0
  3914  0010B4  0E00               	movlw	0
  3915  0010B6  0100               	movlb	0	; () banked
  3916  0010B8  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3917  0010BA  0E00               	movlw	0
  3918  0010BC  6F65               	movwf	___lwdiv@quotient& (0+255),b
  3919                           
  3920                           ; BSR set to: 0
  3921  0010BE  0100               	movlb	0	; () banked
  3922  0010C0  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3923  0010C2  0100               	movlb	0	; () banked
  3924  0010C4  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3925  0010C6  B4D8               	btfsc	status,2,c
  3926  0010C8  D02C               	goto	l1034
  3927                           
  3928                           ; BSR set to: 0
  3929  0010CA  0E01               	movlw	1
  3930  0010CC  0100               	movlb	0	; () banked
  3931  0010CE  6F64               	movwf	___lwdiv@counter& (0+255),b
  3932  0010D0  D006               	goto	l2987
  3933  0010D2                     l2985:
  3934                           
  3935                           ; BSR set to: 0
  3936  0010D2  0100               	movlb	0	; () banked
  3937  0010D4  90D8               	bcf	status,0,c
  3938  0010D6  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  3939  0010D8  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3940  0010DA  0100               	movlb	0	; () banked
  3941  0010DC  2B64               	incf	___lwdiv@counter& (0+255),f,b
  3942  0010DE                     l2987:
  3943                           
  3944                           ; BSR set to: 0
  3945  0010DE  0100               	movlb	0	; () banked
  3946  0010E0  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3947  0010E2  D7F7               	goto	l2985
  3948  0010E4                     l2989:
  3949                           
  3950                           ; BSR set to: 0
  3951  0010E4  0100               	movlb	0	; () banked
  3952  0010E6  90D8               	bcf	status,0,c
  3953  0010E8  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  3954  0010EA  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3955                           
  3956                           ; BSR set to: 0
  3957  0010EC  0100               	movlb	0	; () banked
  3958  0010EE  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3959  0010F0  0100               	movlb	0	; () banked
  3960  0010F2  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  3961  0010F4  0100               	movlb	0	; () banked
  3962  0010F6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3963  0010F8  0100               	movlb	0	; () banked
  3964  0010FA  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3965  0010FC  A0D8               	btfss	status,0,c
  3966  0010FE  D00A               	goto	l2997
  3967                           
  3968                           ; BSR set to: 0
  3969  001100  0100               	movlb	0	; () banked
  3970  001102  5162               	movf	___lwdiv@divisor& (0+255),w,b
  3971  001104  0100               	movlb	0	; () banked
  3972  001106  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  3973  001108  0100               	movlb	0	; () banked
  3974  00110A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3975  00110C  0100               	movlb	0	; () banked
  3976  00110E  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3977                           
  3978                           ; BSR set to: 0
  3979  001110  0100               	movlb	0	; () banked
  3980  001112  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  3981  001114                     l2997:
  3982                           
  3983                           ; BSR set to: 0
  3984  001114  0100               	movlb	0	; () banked
  3985  001116  90D8               	bcf	status,0,c
  3986  001118  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3987  00111A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  3988                           
  3989                           ; BSR set to: 0
  3990  00111C  0100               	movlb	0	; () banked
  3991  00111E  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  3992  001120  D7E1               	goto	l2989
  3993  001122                     l1034:
  3994                           
  3995                           ; BSR set to: 0
  3996  001122  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  3997  001126  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3998                           
  3999                           ; BSR set to: 0
  4000  00112A  0012               	return		;funcret
  4001  00112C                     __end_of___lwdiv:
  4002                           	opt stack 0
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           prodh	equ	0xFF4
  4008                           prodl	equ	0xFF3
  4009                           intcon	equ	0xFF2
  4010                           postinc0	equ	0xFEE
  4011                           wreg	equ	0xFE8
  4012                           postdec1	equ	0xFE5
  4013                           fsr1l	equ	0xFE1
  4014                           indf2	equ	0xFDF
  4015                           postinc2	equ	0xFDE
  4016                           postdec2	equ	0xFDD
  4017                           plusw2	equ	0xFDB
  4018                           fsr2h	equ	0xFDA
  4019                           fsr2l	equ	0xFD9
  4020                           status	equ	0xFD8
  4021                           
  4022 ;; *************** function _Evaluate_Display *****************
  4023 ;; Defined at:
  4024 ;;		line 52 in file "display.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;  size            1    wreg     unsigned char 
  4027 ;;  evaluate        2    8[BANK0 ] PTR unsigned char 
  4028 ;;		 -> signs(3), string_delete(3), string_load(3), 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  size            1   14[BANK0 ] unsigned char 
  4031 ;; Return value:  Size  Location     Type
  4032 ;;		None               void
  4033 ;; Registers used:
  4034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1
  4040 ;;      Params:         0       2       0
  4041 ;;      Locals:         0       1       0
  4042 ;;      Temps:          0       4       0
  4043 ;;      Totals:         0       7       0
  4044 ;;Total ram usage:        7 bytes
  4045 ;; Hardware stack levels used:    1
  4046 ;; Hardware stack levels required when called:    6
  4047 ;; This function calls:
  4048 ;;		_Set_Bits
  4049 ;; This function is called by:
  4050 ;;		_Load_Data
  4051 ;;		_Del_Data
  4052 ;;		_Evaluate_Signs
  4053 ;;		_Set_Display
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text21
  4058  00079C                     __ptext21:
  4059                           	opt stack 0
  4060  00079C                     _Evaluate_Display:
  4061                           	opt stack 22
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;incstack = 0
  4065                           ;Evaluate_Display@size stored from wreg
  4066  00079C  0100               	movlb	0	; () banked
  4067  00079E  6F6E               	movwf	Evaluate_Display@size& (0+255),b
  4068                           
  4069                           ;display.c: 53: for(display_counter = size; display_counter > 0;
  4070  0007A0  C06E  F042         	movff	Evaluate_Display@size,_display_counter
  4071                           
  4072                           ;display.c: 54: display_counter--) {
  4073  0007A4  D0F6               	goto	l2977
  4074  0007A6                     l431:
  4075                           
  4076                           ;display.c: 55: __nop();
  4077  0007A6  F000               	nop	
  4078                           
  4079                           ;display.c: 56: switch (evaluate[(display_counter - 1)]) {
  4080  0007A8  D0A2               	goto	l2973
  4081  0007AA                     l2937:
  4082                           
  4083                           ;display.c: 58: Set_Bits("ABCDEF");
  4084  0007AA  0E27               	movlw	low STR_1
  4085  0007AC  0100               	movlb	0	; () banked
  4086  0007AE  6F60               	movwf	Set_Bits@bits& (0+255),b
  4087  0007B0  0E02               	movlw	high STR_1
  4088  0007B2  0100               	movlb	0	; () banked
  4089  0007B4  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4090  0007B6  EC2C  F006         	call	_Set_Bits	;wreg free
  4091                           
  4092                           ;display.c: 59: break;
  4093  0007BA  D0EA               	goto	l2975
  4094  0007BC                     l2939:
  4095                           
  4096                           ;display.c: 61: Set_Bits("BC");
  4097  0007BC  0E67               	movlw	low (STR_8+1)
  4098  0007BE  0100               	movlb	0	; () banked
  4099  0007C0  6F60               	movwf	Set_Bits@bits& (0+255),b
  4100  0007C2  0E02               	movlw	high (STR_8+1)
  4101  0007C4  0100               	movlb	0	; () banked
  4102  0007C6  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4103  0007C8  EC2C  F006         	call	_Set_Bits	;wreg free
  4104                           
  4105                           ;display.c: 62: break;
  4106  0007CC  D0E1               	goto	l2975
  4107  0007CE                     l2941:
  4108                           
  4109                           ;display.c: 64: Set_Bits("ABDEG");
  4110  0007CE  0E49               	movlw	low STR_3
  4111  0007D0  0100               	movlb	0	; () banked
  4112  0007D2  6F60               	movwf	Set_Bits@bits& (0+255),b
  4113  0007D4  0E02               	movlw	high STR_3
  4114  0007D6  0100               	movlb	0	; () banked
  4115  0007D8  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4116  0007DA  EC2C  F006         	call	_Set_Bits	;wreg free
  4117                           
  4118                           ;display.c: 65: break;
  4119  0007DE  D0D8               	goto	l2975
  4120  0007E0                     l2943:
  4121                           
  4122                           ;display.c: 67: Set_Bits("ABCDG");
  4123  0007E0  0E43               	movlw	low STR_4
  4124  0007E2  0100               	movlb	0	; () banked
  4125  0007E4  6F60               	movwf	Set_Bits@bits& (0+255),b
  4126  0007E6  0E02               	movlw	high STR_4
  4127  0007E8  0100               	movlb	0	; () banked
  4128  0007EA  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4129  0007EC  EC2C  F006         	call	_Set_Bits	;wreg free
  4130                           
  4131                           ;display.c: 68: break;
  4132  0007F0  D0CF               	goto	l2975
  4133  0007F2                     l2945:
  4134                           
  4135                           ;display.c: 70: Set_Bits("BCFG");
  4136  0007F2  0E61               	movlw	low STR_5
  4137  0007F4  0100               	movlb	0	; () banked
  4138  0007F6  6F60               	movwf	Set_Bits@bits& (0+255),b
  4139  0007F8  0E02               	movlw	high STR_5
  4140  0007FA  0100               	movlb	0	; () banked
  4141  0007FC  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4142  0007FE  EC2C  F006         	call	_Set_Bits	;wreg free
  4143                           
  4144                           ;display.c: 71: break;
  4145  000802  D0C6               	goto	l2975
  4146  000804                     l2947:
  4147                           
  4148                           ;display.c: 73: Set_Bits("ACDFG");
  4149  000804  0E4F               	movlw	low STR_6
  4150  000806  0100               	movlb	0	; () banked
  4151  000808  6F60               	movwf	Set_Bits@bits& (0+255),b
  4152  00080A  0E02               	movlw	high STR_6
  4153  00080C  0100               	movlb	0	; () banked
  4154  00080E  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4155  000810  EC2C  F006         	call	_Set_Bits	;wreg free
  4156                           
  4157                           ;display.c: 74: break;
  4158  000814  D0BD               	goto	l2975
  4159  000816                     l2949:
  4160                           
  4161                           ;display.c: 76: Set_Bits("ACDEFG");
  4162  000816  0E3C               	movlw	low STR_7
  4163  000818  0100               	movlb	0	; () banked
  4164  00081A  6F60               	movwf	Set_Bits@bits& (0+255),b
  4165  00081C  0E02               	movlw	high STR_7
  4166  00081E  0100               	movlb	0	; () banked
  4167  000820  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4168  000822  EC2C  F006         	call	_Set_Bits	;wreg free
  4169                           
  4170                           ;display.c: 77: break;
  4171  000826  D0B4               	goto	l2975
  4172  000828                     l2951:
  4173                           
  4174                           ;display.c: 79: Set_Bits("ABC");
  4175  000828  0E66               	movlw	low STR_8
  4176  00082A  0100               	movlb	0	; () banked
  4177  00082C  6F60               	movwf	Set_Bits@bits& (0+255),b
  4178  00082E  0E02               	movlw	high STR_8
  4179  000830  0100               	movlb	0	; () banked
  4180  000832  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4181  000834  EC2C  F006         	call	_Set_Bits	;wreg free
  4182                           
  4183                           ;display.c: 80: break;
  4184  000838  D0AB               	goto	l2975
  4185  00083A                     l2953:
  4186                           
  4187                           ;display.c: 82: Set_Bits("ABCDEFG");
  4188  00083A  0E1F               	movlw	low STR_9
  4189  00083C  0100               	movlb	0	; () banked
  4190  00083E  6F60               	movwf	Set_Bits@bits& (0+255),b
  4191  000840  0E02               	movlw	high STR_9
  4192  000842  0100               	movlb	0	; () banked
  4193  000844  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4194  000846  EC2C  F006         	call	_Set_Bits	;wreg free
  4195                           
  4196                           ;display.c: 83: break;
  4197  00084A  D0A2               	goto	l2975
  4198  00084C                     l2955:
  4199                           
  4200                           ;display.c: 85: Set_Bits("ABCDFG");
  4201  00084C  0E2E               	movlw	low STR_10
  4202  00084E  0100               	movlb	0	; () banked
  4203  000850  6F60               	movwf	Set_Bits@bits& (0+255),b
  4204  000852  0E02               	movlw	high STR_10
  4205  000854  0100               	movlb	0	; () banked
  4206  000856  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4207  000858  EC2C  F006         	call	_Set_Bits	;wreg free
  4208                           
  4209                           ;display.c: 86: break;
  4210  00085C  D099               	goto	l2975
  4211  00085E                     l2957:
  4212                           
  4213                           ;display.c: 88: Set_Bits("ABCEFG");
  4214  00085E  0E35               	movlw	low STR_11
  4215  000860  0100               	movlb	0	; () banked
  4216  000862  6F60               	movwf	Set_Bits@bits& (0+255),b
  4217  000864  0E02               	movlw	high STR_11
  4218  000866  0100               	movlb	0	; () banked
  4219  000868  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4220  00086A  EC2C  F006         	call	_Set_Bits	;wreg free
  4221                           
  4222                           ;display.c: 89: break;
  4223  00086E  D090               	goto	l2975
  4224  000870                     l2959:
  4225                           
  4226                           ;display.c: 91: Set_Bits("ABCDEF");
  4227  000870  0E27               	movlw	low STR_1
  4228  000872  0100               	movlb	0	; () banked
  4229  000874  6F60               	movwf	Set_Bits@bits& (0+255),b
  4230  000876  0E02               	movlw	high STR_1
  4231  000878  0100               	movlb	0	; () banked
  4232  00087A  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4233  00087C  EC2C  F006         	call	_Set_Bits	;wreg free
  4234                           
  4235                           ;display.c: 92: break;
  4236  000880  D087               	goto	l2975
  4237  000882                     l2961:
  4238                           
  4239                           ;display.c: 94: Set_Bits("ADEFG");
  4240  000882  0E5B               	movlw	low STR_13
  4241  000884  0100               	movlb	0	; () banked
  4242  000886  6F60               	movwf	Set_Bits@bits& (0+255),b
  4243  000888  0E02               	movlw	high STR_13
  4244  00088A  0100               	movlb	0	; () banked
  4245  00088C  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4246  00088E  EC2C  F006         	call	_Set_Bits	;wreg free
  4247                           
  4248                           ;display.c: 95: break;
  4249  000892  D07E               	goto	l2975
  4250  000894                     l2963:
  4251                           
  4252                           ;display.c: 97: Set_Bits("DEF");
  4253  000894  0E2A               	movlw	low (STR_1+3)
  4254  000896  0100               	movlb	0	; () banked
  4255  000898  6F60               	movwf	Set_Bits@bits& (0+255),b
  4256  00089A  0E02               	movlw	high (STR_1+3)
  4257  00089C  0100               	movlb	0	; () banked
  4258  00089E  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4259  0008A0  EC2C  F006         	call	_Set_Bits	;wreg free
  4260                           
  4261                           ;display.c: 98: break;
  4262  0008A4  D075               	goto	l2975
  4263  0008A6                     l2965:
  4264                           
  4265                           ;display.c: 100: Set_Bits("ABCDEF");
  4266  0008A6  0E27               	movlw	low STR_1
  4267  0008A8  0100               	movlb	0	; () banked
  4268  0008AA  6F60               	movwf	Set_Bits@bits& (0+255),b
  4269  0008AC  0E02               	movlw	high STR_1
  4270  0008AE  0100               	movlb	0	; () banked
  4271  0008B0  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4272  0008B2  EC2C  F006         	call	_Set_Bits	;wreg free
  4273                           
  4274                           ;display.c: 101: break;
  4275  0008B6  D06C               	goto	l2975
  4276  0008B8                     l2967:
  4277                           
  4278                           ;display.c: 103: Set_Bits("ABEFG");
  4279  0008B8  0E55               	movlw	low STR_16
  4280  0008BA  0100               	movlb	0	; () banked
  4281  0008BC  6F60               	movwf	Set_Bits@bits& (0+255),b
  4282  0008BE  0E02               	movlw	high STR_16
  4283  0008C0  0100               	movlb	0	; () banked
  4284  0008C2  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4285  0008C4  EC2C  F006         	call	_Set_Bits	;wreg free
  4286                           
  4287                           ;display.c: 104: break;
  4288  0008C8  D063               	goto	l2975
  4289  0008CA                     l2969:
  4290                           
  4291                           ;display.c: 106: Set_Bits("G");
  4292  0008CA  0E47               	movlw	low (STR_4+4)
  4293  0008CC  0100               	movlb	0	; () banked
  4294  0008CE  6F60               	movwf	Set_Bits@bits& (0+255),b
  4295  0008D0  0E02               	movlw	high (STR_4+4)
  4296  0008D2  0100               	movlb	0	; () banked
  4297  0008D4  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4298  0008D6  EC2C  F006         	call	_Set_Bits	;wreg free
  4299                           
  4300                           ;display.c: 107: break;
  4301  0008DA  D05A               	goto	l2975
  4302  0008DC                     l2971:
  4303                           
  4304                           ;display.c: 109: Set_Bits("0");
  4305  0008DC  0E6A               	movlw	low STR_18
  4306  0008DE  0100               	movlb	0	; () banked
  4307  0008E0  6F60               	movwf	Set_Bits@bits& (0+255),b
  4308  0008E2  0E02               	movlw	high STR_18
  4309  0008E4  0100               	movlb	0	; () banked
  4310  0008E6  6F61               	movwf	(Set_Bits@bits+1)& (0+255),b
  4311  0008E8  EC2C  F006         	call	_Set_Bits	;wreg free
  4312                           
  4313                           ;display.c: 110: }
  4314  0008EC  D051               	goto	l2975
  4315  0008EE                     l2973:
  4316  0008EE  0EFF               	movlw	255
  4317  0008F0  0100               	movlb	0	; () banked
  4318  0008F2  6F6A               	movwf	??_Evaluate_Display& (0+255),b
  4319  0008F4  0EFF               	movlw	255
  4320  0008F6  0100               	movlb	0	; () banked
  4321  0008F8  6F6B               	movwf	(??_Evaluate_Display+1)& (0+255),b
  4322  0008FA  5042               	movf	_display_counter,w,c
  4323  0008FC  0100               	movlb	0	; () banked
  4324  0008FE  6F6C               	movwf	(??_Evaluate_Display+2)& (0+255),b
  4325  000900  6B6D               	clrf	(??_Evaluate_Display+3)& (0+255),b
  4326  000902  0100               	movlb	0	; () banked
  4327  000904  516A               	movf	??_Evaluate_Display& (0+255),w,b
  4328  000906  0100               	movlb	0	; () banked
  4329  000908  276C               	addwf	(??_Evaluate_Display+2)& (0+255),f,b
  4330  00090A  0100               	movlb	0	; () banked
  4331  00090C  516B               	movf	(??_Evaluate_Display+1)& (0+255),w,b
  4332  00090E  0100               	movlb	0	; () banked
  4333  000910  236D               	addwfc	(??_Evaluate_Display+3)& (0+255),f,b
  4334  000912  0100               	movlb	0	; () banked
  4335  000914  516C               	movf	(??_Evaluate_Display+2)& (0+255),w,b
  4336  000916  0100               	movlb	0	; () banked
  4337  000918  2568               	addwf	Evaluate_Display@evaluate& (0+255),w,b
  4338  00091A  6ED9               	movwf	fsr2l,c
  4339  00091C  0100               	movlb	0	; () banked
  4340  00091E  516D               	movf	(??_Evaluate_Display+3)& (0+255),w,b
  4341  000920  0100               	movlb	0	; () banked
  4342  000922  2169               	addwfc	(Evaluate_Display@evaluate+1)& (0+255),w,b
  4343  000924  6EDA               	movwf	fsr2h,c
  4344  000926  50DF               	movf	indf2,w,c
  4345                           
  4346                           ; Switch size 1, requested type "space"
  4347                           ; Number of cases is 17, Range of values is 45 to 80
  4348                           ; switch strategies available:
  4349                           ; Name         Instructions Cycles
  4350                           ; simple_byte           52    27 (average)
  4351                           ;	Chosen strategy is simple_byte
  4352  000928  0A2D               	xorlw	45	; case 45
  4353  00092A  B4D8               	btfsc	status,2,c
  4354  00092C  D7CE               	goto	l2969
  4355  00092E  0A1D               	xorlw	29	; case 48
  4356  000930  B4D8               	btfsc	status,2,c
  4357  000932  D73B               	goto	l2937
  4358  000934  0A01               	xorlw	1	; case 49
  4359  000936  B4D8               	btfsc	status,2,c
  4360  000938  D741               	goto	l2939
  4361  00093A  0A03               	xorlw	3	; case 50
  4362  00093C  B4D8               	btfsc	status,2,c
  4363  00093E  D747               	goto	l2941
  4364  000940  0A01               	xorlw	1	; case 51
  4365  000942  B4D8               	btfsc	status,2,c
  4366  000944  D74D               	goto	l2943
  4367  000946  0A07               	xorlw	7	; case 52
  4368  000948  B4D8               	btfsc	status,2,c
  4369  00094A  D753               	goto	l2945
  4370  00094C  0A01               	xorlw	1	; case 53
  4371  00094E  B4D8               	btfsc	status,2,c
  4372  000950  D759               	goto	l2947
  4373  000952  0A03               	xorlw	3	; case 54
  4374  000954  B4D8               	btfsc	status,2,c
  4375  000956  D75F               	goto	l2949
  4376  000958  0A01               	xorlw	1	; case 55
  4377  00095A  B4D8               	btfsc	status,2,c
  4378  00095C  D765               	goto	l2951
  4379  00095E  0A0F               	xorlw	15	; case 56
  4380  000960  B4D8               	btfsc	status,2,c
  4381  000962  D76B               	goto	l2953
  4382  000964  0A01               	xorlw	1	; case 57
  4383  000966  B4D8               	btfsc	status,2,c
  4384  000968  D771               	goto	l2955
  4385  00096A  0A78               	xorlw	120	; case 65
  4386  00096C  B4D8               	btfsc	status,2,c
  4387  00096E  D777               	goto	l2957
  4388  000970  0A05               	xorlw	5	; case 68
  4389  000972  B4D8               	btfsc	status,2,c
  4390  000974  D77D               	goto	l2959
  4391  000976  0A01               	xorlw	1	; case 69
  4392  000978  B4D8               	btfsc	status,2,c
  4393  00097A  D783               	goto	l2961
  4394  00097C  0A09               	xorlw	9	; case 76
  4395  00097E  B4D8               	btfsc	status,2,c
  4396  000980  D789               	goto	l2963
  4397  000982  0A03               	xorlw	3	; case 79
  4398  000984  B4D8               	btfsc	status,2,c
  4399  000986  D78F               	goto	l2965
  4400  000988  0A1F               	xorlw	31	; case 80
  4401  00098A  B4D8               	btfsc	status,2,c
  4402  00098C  D795               	goto	l2967
  4403  00098E  D7A6               	goto	l2971
  4404  000990                     l2975:
  4405  000990  0642               	decf	_display_counter,f,c
  4406  000992                     l2977:
  4407  000992  5042               	movf	_display_counter,w,c
  4408  000994  B4D8               	btfsc	status,2,c
  4409  000996  0012               	return	
  4410  000998  D706               	goto	l431
  4411  00099A                     __end_of_Evaluate_Display:
  4412                           	opt stack 0
  4413                           tblptru	equ	0xFF8
  4414                           tblptrh	equ	0xFF7
  4415                           tblptrl	equ	0xFF6
  4416                           tablat	equ	0xFF5
  4417                           prodh	equ	0xFF4
  4418                           prodl	equ	0xFF3
  4419                           intcon	equ	0xFF2
  4420                           postinc0	equ	0xFEE
  4421                           wreg	equ	0xFE8
  4422                           postdec1	equ	0xFE5
  4423                           fsr1l	equ	0xFE1
  4424                           indf2	equ	0xFDF
  4425                           postinc2	equ	0xFDE
  4426                           postdec2	equ	0xFDD
  4427                           plusw2	equ	0xFDB
  4428                           fsr2h	equ	0xFDA
  4429                           fsr2l	equ	0xFD9
  4430                           status	equ	0xFD8
  4431                           
  4432 ;; *************** function _Set_Bits *****************
  4433 ;; Defined at:
  4434 ;;		line 12 in file "display.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  bits            2    0[BANK0 ] PTR const unsigned char 
  4437 ;;		 -> STR_18(2), STR_17(2), STR_16(6), STR_15(7), 
  4438 ;;		 -> STR_14(4), STR_13(6), STR_12(7), STR_11(7), 
  4439 ;;		 -> STR_10(7), STR_9(8), STR_8(4), STR_7(7), 
  4440 ;;		 -> STR_6(6), STR_5(5), STR_4(6), STR_3(6), 
  4441 ;;		 -> STR_2(3), STR_1(7), 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  bitcount        1    6[BANK0 ] unsigned char 
  4444 ;;  Bitoutput       1    7[BANK0 ] unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;		None               void
  4447 ;; Registers used:
  4448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1
  4454 ;;      Params:         0       2       0
  4455 ;;      Locals:         0       2       0
  4456 ;;      Temps:          0       4       0
  4457 ;;      Totals:         0       8       0
  4458 ;;Total ram usage:        8 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    5
  4461 ;; This function calls:
  4462 ;;		Nothing
  4463 ;; This function is called by:
  4464 ;;		_Evaluate_Display
  4465 ;; This function uses a non-reentrant model
  4466 ;;
  4467                           
  4468                           	psect	text22
  4469  000C58                     __ptext22:
  4470                           	opt stack 0
  4471  000C58                     _Set_Bits:
  4472                           	opt stack 22
  4473                           
  4474                           ;display.c: 13: unsigned char Bitoutput = 0;
  4475                           
  4476                           ;incstack = 0
  4477  000C58  0E00               	movlw	0
  4478  000C5A  0100               	movlb	0	; () banked
  4479  000C5C  6F67               	movwf	Set_Bits@Bitoutput& (0+255),b
  4480                           
  4481                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  4482  000C5E  0E00               	movlw	0
  4483  000C60  0100               	movlb	0	; () banked
  4484  000C62  6F66               	movwf	Set_Bits@bitcount& (0+255),b
  4485                           
  4486                           ;display.c: 15: bitcount++) {
  4487  000C64  D03F               	goto	l2931
  4488  000C66                     l2911:
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;display.c: 18: Bitoutput |= 0b00000001;
  4492  000C66  0100               	movlb	0	; () banked
  4493  000C68  8167               	bsf	Set_Bits@Bitoutput& (0+255),0,b
  4494                           
  4495                           ;display.c: 19: break;
  4496  000C6A  D03A               	goto	l2929
  4497  000C6C                     l2913:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;display.c: 21: Bitoutput |= 0b00000010;
  4501  000C6C  0100               	movlb	0	; () banked
  4502  000C6E  8367               	bsf	Set_Bits@Bitoutput& (0+255),1,b
  4503                           
  4504                           ;display.c: 22: break;
  4505  000C70  D037               	goto	l2929
  4506  000C72                     l2915:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;display.c: 24: Bitoutput |= 0b00000100;
  4510  000C72  0100               	movlb	0	; () banked
  4511  000C74  8567               	bsf	Set_Bits@Bitoutput& (0+255),2,b
  4512                           
  4513                           ;display.c: 25: break;
  4514  000C76  D034               	goto	l2929
  4515  000C78                     l2917:
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;display.c: 27: Bitoutput |= 0b00001000;
  4519  000C78  0100               	movlb	0	; () banked
  4520  000C7A  8767               	bsf	Set_Bits@Bitoutput& (0+255),3,b
  4521                           
  4522                           ;display.c: 28: break;
  4523  000C7C  D031               	goto	l2929
  4524  000C7E                     l2919:
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;display.c: 30: Bitoutput |= 0b00010000;
  4528  000C7E  0100               	movlb	0	; () banked
  4529  000C80  8967               	bsf	Set_Bits@Bitoutput& (0+255),4,b
  4530                           
  4531                           ;display.c: 31: break;
  4532  000C82  D02E               	goto	l2929
  4533  000C84                     l2921:
  4534                           
  4535                           ; BSR set to: 0
  4536                           ;display.c: 33: Bitoutput |= 0b00100000;
  4537  000C84  0100               	movlb	0	; () banked
  4538  000C86  8B67               	bsf	Set_Bits@Bitoutput& (0+255),5,b
  4539                           
  4540                           ;display.c: 34: break;
  4541  000C88  D02B               	goto	l2929
  4542  000C8A                     l2923:
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;display.c: 36: Bitoutput |= 0b01000000;
  4546  000C8A  0100               	movlb	0	; () banked
  4547  000C8C  8D67               	bsf	Set_Bits@Bitoutput& (0+255),6,b
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;display.c: 40: }
  4551                           
  4552                           ; BSR set to: 0
  4553                           ;display.c: 39: break;
  4554                           
  4555                           ;display.c: 38: default:
  4556                           
  4557                           ;display.c: 37: break;
  4558  000C8E  D028               	goto	l2929
  4559  000C90                     l2927:
  4560                           
  4561                           ; BSR set to: 0
  4562  000C90  0100               	movlb	0	; () banked
  4563  000C92  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4564  000C94  0D01               	mullw	1
  4565  000C96  C060  F062         	movff	Set_Bits@bits,??_Set_Bits
  4566  000C9A  C061  F063         	movff	Set_Bits@bits+1,??_Set_Bits+1
  4567  000C9E  50F3               	movf	prodl,w,c
  4568  000CA0  0100               	movlb	0	; () banked
  4569  000CA2  2762               	addwf	??_Set_Bits& (0+255),f,b
  4570  000CA4  50F4               	movf	prodh,w,c
  4571  000CA6  0100               	movlb	0	; () banked
  4572  000CA8  2363               	addwfc	(??_Set_Bits+1)& (0+255),f,b
  4573  000CAA  C062  FFF6         	movff	??_Set_Bits,tblptrl
  4574  000CAE  C063  FFF7         	movff	??_Set_Bits+1,tblptrh
  4575  000CB2                     	if	0	;tblptru may be non-zero
  4576  000CB2                     	endif
  4577  000CB2                     	if	0	;tblptru may be non-zero
  4578  000CB2                     	endif
  4579  000CB2  0008               	tblrd		*
  4580  000CB4  50F5               	movf	tablat,w,c
  4581                           
  4582                           ; Switch size 1, requested type "space"
  4583                           ; Number of cases is 7, Range of values is 65 to 71
  4584                           ; switch strategies available:
  4585                           ; Name         Instructions Cycles
  4586                           ; simple_byte           22    12 (average)
  4587                           ;	Chosen strategy is simple_byte
  4588  000CB6  0A41               	xorlw	65	; case 65
  4589  000CB8  B4D8               	btfsc	status,2,c
  4590  000CBA  D7D5               	goto	l2911
  4591  000CBC  0A03               	xorlw	3	; case 66
  4592  000CBE  B4D8               	btfsc	status,2,c
  4593  000CC0  D7D5               	goto	l2913
  4594  000CC2  0A01               	xorlw	1	; case 67
  4595  000CC4  B4D8               	btfsc	status,2,c
  4596  000CC6  D7D5               	goto	l2915
  4597  000CC8  0A07               	xorlw	7	; case 68
  4598  000CCA  B4D8               	btfsc	status,2,c
  4599  000CCC  D7D5               	goto	l2917
  4600  000CCE  0A01               	xorlw	1	; case 69
  4601  000CD0  B4D8               	btfsc	status,2,c
  4602  000CD2  D7D5               	goto	l2919
  4603  000CD4  0A03               	xorlw	3	; case 70
  4604  000CD6  B4D8               	btfsc	status,2,c
  4605  000CD8  D7D5               	goto	l2921
  4606  000CDA  0A01               	xorlw	1	; case 71
  4607  000CDC  B4D8               	btfsc	status,2,c
  4608  000CDE  D7D5               	goto	l2923
  4609  000CE0                     l2929:
  4610                           
  4611                           ; BSR set to: 0
  4612  000CE0  0100               	movlb	0	; () banked
  4613  000CE2  2B66               	incf	Set_Bits@bitcount& (0+255),f,b
  4614  000CE4                     l2931:
  4615                           
  4616                           ; BSR set to: 0
  4617  000CE4  0100               	movlb	0	; () banked
  4618  000CE6  5166               	movf	Set_Bits@bitcount& (0+255),w,b
  4619  000CE8  0D01               	mullw	1
  4620  000CEA  C060  F062         	movff	Set_Bits@bits,??_Set_Bits
  4621  000CEE  C061  F063         	movff	Set_Bits@bits+1,??_Set_Bits+1
  4622  000CF2  50F3               	movf	prodl,w,c
  4623  000CF4  0100               	movlb	0	; () banked
  4624  000CF6  2762               	addwf	??_Set_Bits& (0+255),f,b
  4625  000CF8  50F4               	movf	prodh,w,c
  4626  000CFA  0100               	movlb	0	; () banked
  4627  000CFC  2363               	addwfc	(??_Set_Bits+1)& (0+255),f,b
  4628  000CFE  C062  FFF6         	movff	??_Set_Bits,tblptrl
  4629  000D02  C063  FFF7         	movff	??_Set_Bits+1,tblptrh
  4630  000D06                     	if	0	;tblptru may be non-zero
  4631  000D06                     	endif
  4632  000D06                     	if	0	;tblptru may be non-zero
  4633  000D06                     	endif
  4634  000D06  0008               	tblrd		*
  4635  000D08  50F5               	movf	tablat,w,c
  4636  000D0A  0900               	iorlw	0
  4637  000D0C  A4D8               	btfss	status,2,c
  4638  000D0E  D7C0               	goto	l2927
  4639                           
  4640                           ; BSR set to: 0
  4641                           ;display.c: 41: }
  4642                           ;display.c: 42: pixels[(display_counter - 1)] = Bitoutput;
  4643                           
  4644                           ; BSR set to: 0
  4645  000D10  0EFF               	movlw	255
  4646  000D12  0100               	movlb	0	; () banked
  4647  000D14  6F62               	movwf	??_Set_Bits& (0+255),b
  4648  000D16  0EFF               	movlw	255
  4649  000D18  0100               	movlb	0	; () banked
  4650  000D1A  6F63               	movwf	(??_Set_Bits+1)& (0+255),b
  4651  000D1C  5042               	movf	_display_counter,w,c
  4652  000D1E  0100               	movlb	0	; () banked
  4653  000D20  6F64               	movwf	(??_Set_Bits+2)& (0+255),b
  4654  000D22  6B65               	clrf	(??_Set_Bits+3)& (0+255),b
  4655  000D24  0100               	movlb	0	; () banked
  4656  000D26  5162               	movf	??_Set_Bits& (0+255),w,b
  4657  000D28  0100               	movlb	0	; () banked
  4658  000D2A  2764               	addwf	(??_Set_Bits+2)& (0+255),f,b
  4659  000D2C  0100               	movlb	0	; () banked
  4660  000D2E  5163               	movf	(??_Set_Bits+1)& (0+255),w,b
  4661  000D30  0100               	movlb	0	; () banked
  4662  000D32  2365               	addwfc	(??_Set_Bits+3)& (0+255),f,b
  4663  000D34  0E39               	movlw	low _pixels
  4664  000D36  0100               	movlb	0	; () banked
  4665  000D38  2564               	addwf	(??_Set_Bits+2)& (0+255),w,b
  4666  000D3A  6ED9               	movwf	fsr2l,c
  4667  000D3C  0E00               	movlw	high _pixels
  4668  000D3E  0100               	movlb	0	; () banked
  4669  000D40  2165               	addwfc	(??_Set_Bits+3)& (0+255),w,b
  4670  000D42  6EDA               	movwf	fsr2h,c
  4671  000D44  C067  FFDF         	movff	Set_Bits@Bitoutput,indf2
  4672                           
  4673                           ; BSR set to: 0
  4674  000D48  0012               	return		;funcret
  4675  000D4A                     __end_of_Set_Bits:
  4676                           	opt stack 0
  4677                           tblptru	equ	0xFF8
  4678                           tblptrh	equ	0xFF7
  4679                           tblptrl	equ	0xFF6
  4680                           tablat	equ	0xFF5
  4681                           prodh	equ	0xFF4
  4682                           prodl	equ	0xFF3
  4683                           intcon	equ	0xFF2
  4684                           postinc0	equ	0xFEE
  4685                           wreg	equ	0xFE8
  4686                           postdec1	equ	0xFE5
  4687                           fsr1l	equ	0xFE1
  4688                           indf2	equ	0xFDF
  4689                           postinc2	equ	0xFDE
  4690                           postdec2	equ	0xFDD
  4691                           plusw2	equ	0xFDB
  4692                           fsr2h	equ	0xFDA
  4693                           fsr2l	equ	0xFD9
  4694                           status	equ	0xFD8
  4695                           
  4696 ;; *************** function _Read_Data *****************
  4697 ;; Defined at:
  4698 ;;		line 45 in file "storage.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  read_address    1    wreg     unsigned char 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  read_address    1    4[BANK0 ] unsigned char 
  4703 ;;  data_read       2    2[BANK0 ] unsigned int 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  2    0[BANK0 ] unsigned int 
  4706 ;; Registers used:
  4707 ;;		wreg, status,2, status,0
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1
  4713 ;;      Params:         0       2       0
  4714 ;;      Locals:         0       3       0
  4715 ;;      Temps:          0       0       0
  4716 ;;      Totals:         0       5       0
  4717 ;;Total ram usage:        5 bytes
  4718 ;; Hardware stack levels used:    1
  4719 ;; Hardware stack levels required when called:    5
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_Check_Buttons
  4724 ;;		_Load_Data
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727                           
  4728                           	psect	text23
  4729  001418                     __ptext23:
  4730                           	opt stack 0
  4731  001418                     _Read_Data:
  4732                           	opt stack 24
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;incstack = 0
  4736                           ;Read_Data@read_address stored from wreg
  4737  001418  0100               	movlb	0	; () banked
  4738  00141A  6F64               	movwf	Read_Data@read_address& (0+255),b
  4739                           
  4740                           ;storage.c: 46: unsigned int data_read = 0;
  4741  00141C  0E00               	movlw	0
  4742  00141E  0100               	movlb	0	; () banked
  4743  001420  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4744  001422  0E00               	movlw	0
  4745  001424  6F62               	movwf	Read_Data@data_read& (0+255),b
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;storage.c: 47: read_address += 50;
  4749  001426  0E32               	movlw	50
  4750  001428  0100               	movlb	0	; () banked
  4751  00142A  2764               	addwf	Read_Data@read_address& (0+255),f,b
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;storage.c: 48: EEADR = read_address;
  4755  00142C  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;storage.c: 49: EECON1bits.EEPGD = 0;
  4759  001430  9EA6               	bcf	4006,7,c	;volatile
  4760                           
  4761                           ; BSR set to: 0
  4762                           ;storage.c: 50: EECON1bits.CFGS = 0;
  4763  001432  9CA6               	bcf	4006,6,c	;volatile
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;storage.c: 51: EECON1bits.RD = 1;
  4767  001434  80A6               	bsf	4006,0,c	;volatile
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;storage.c: 52: data_read = EEDATA;
  4771  001436  CFA8 F062          	movff	4008,Read_Data@data_read	;volatile
  4772  00143A  0100               	movlb	0	; () banked
  4773  00143C  6B63               	clrf	(Read_Data@data_read+1)& (0+255),b
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;storage.c: 53: read_address -= 50;
  4777  00143E  0E32               	movlw	50
  4778  001440  0100               	movlb	0	; () banked
  4779  001442  5F64               	subwf	Read_Data@read_address& (0+255),f,b
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;storage.c: 54: data_read <<= 8;
  4783  001444  0100               	movlb	0	; () banked
  4784  001446  5162               	movf	Read_Data@data_read& (0+255),w,b
  4785  001448  6F63               	movwf	(Read_Data@data_read+1)& (0+255),b
  4786  00144A  6B62               	clrf	Read_Data@data_read& (0+255),b
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;storage.c: 55: EEADR = read_address;
  4790  00144C  C064  FFA9         	movff	Read_Data@read_address,4009	;volatile
  4791                           
  4792                           ; BSR set to: 0
  4793                           ;storage.c: 56: EECON1bits.EEPGD = 0;
  4794  001450  9EA6               	bcf	4006,7,c	;volatile
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;storage.c: 57: EECON1bits.CFGS = 0;
  4798  001452  9CA6               	bcf	4006,6,c	;volatile
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;storage.c: 58: EECON1bits.RD = 1;
  4802  001454  80A6               	bsf	4006,0,c	;volatile
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;storage.c: 59: data_read |= EEDATA;
  4806  001456  50A8               	movf	4008,w,c	;volatile
  4807  001458  0100               	movlb	0	; () banked
  4808  00145A  1362               	iorwf	Read_Data@data_read& (0+255),f,b
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;storage.c: 60: return data_read;
  4812  00145C  C062  F060         	movff	Read_Data@data_read,?_Read_Data
  4813  001460  C063  F061         	movff	Read_Data@data_read+1,?_Read_Data+1
  4814  001464  0012               	return	
  4815  001466                     __end_of_Read_Data:
  4816                           	opt stack 0
  4817                           tblptru	equ	0xFF8
  4818                           tblptrh	equ	0xFF7
  4819                           tblptrl	equ	0xFF6
  4820                           tablat	equ	0xFF5
  4821                           prodh	equ	0xFF4
  4822                           prodl	equ	0xFF3
  4823                           intcon	equ	0xFF2
  4824                           postinc0	equ	0xFEE
  4825                           wreg	equ	0xFE8
  4826                           postdec1	equ	0xFE5
  4827                           fsr1l	equ	0xFE1
  4828                           indf2	equ	0xFDF
  4829                           postinc2	equ	0xFDE
  4830                           postdec2	equ	0xFDD
  4831                           plusw2	equ	0xFDB
  4832                           fsr2h	equ	0xFDA
  4833                           fsr2l	equ	0xFD9
  4834                           status	equ	0xFD8
  4835                           
  4836 ;; *************** function _Delay_Routine *****************
  4837 ;; Defined at:
  4838 ;;		line 78 in file "main.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  delay_multip    1    wreg     unsigned char 
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  delay_multip    1    1[BANK0 ] unsigned char 
  4843 ;;  delay_counte    1    2[BANK0 ] unsigned char 
  4844 ;; Return value:  Size  Location     Type
  4845 ;;		None               void
  4846 ;; Registers used:
  4847 ;;		wreg, status,2, status,0, cstack
  4848 ;; Tracked objects:
  4849 ;;		On entry : 0/0
  4850 ;;		On exit  : 0/0
  4851 ;;		Unchanged: 0/0
  4852 ;; Data sizes:     COMRAM   BANK0   BANK1
  4853 ;;      Params:         0       0       0
  4854 ;;      Locals:         0       2       0
  4855 ;;      Temps:          0       1       0
  4856 ;;      Totals:         0       3       0
  4857 ;;Total ram usage:        3 bytes
  4858 ;; Hardware stack levels used:    1
  4859 ;; Hardware stack levels required when called:    5
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_Check_Buttons
  4864 ;;		_Load_Data
  4865 ;;		_Del_Data
  4866 ;; This function uses a non-reentrant model
  4867 ;;
  4868                           
  4869                           	psect	text24
  4870  001644                     __ptext24:
  4871                           	opt stack 0
  4872  001644                     _Delay_Routine:
  4873                           	opt stack 24
  4874                           
  4875                           ; BSR set to: 0
  4876                           ;incstack = 0
  4877                           ;Delay_Routine@delay_multiplyer stored from wreg
  4878  001644  0100               	movlb	0	; () banked
  4879  001646  6F61               	movwf	Delay_Routine@delay_multiplyer& (0+255),b
  4880                           
  4881                           ;main.c: 79: for (unsigned char delay_counter = 0; delay_counter < delay_multiplyer;
  4882  001648  0E00               	movlw	0
  4883  00164A  0100               	movlb	0	; () banked
  4884  00164C  6F62               	movwf	Delay_Routine@delay_counter& (0+255),b
  4885                           
  4886                           ;main.c: 80: delay_counter++) {
  4887  00164E  D00A               	goto	l3059
  4888  001650                     l3055:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;main.c: 81: _delay((unsigned long)((100)*(4000000/4000.0)));
  4892  001650  0E82               	movlw	130
  4893  001652  0100               	movlb	0	; () banked
  4894  001654  6F60               	movwf	??_Delay_Routine& (0+255),b
  4895  001656  0EDE               	movlw	222
  4896  001658                     u2567:
  4897  001658  2EE8               	decfsz	wreg,f,c
  4898  00165A  D7FE               	goto	u2567
  4899  00165C  2F60               	decfsz	??_Delay_Routine& (0+255),f,b
  4900  00165E  D7FC               	goto	u2567
  4901  001660  0100               	movlb	0	; () banked
  4902  001662  2B62               	incf	Delay_Routine@delay_counter& (0+255),f,b
  4903  001664                     l3059:
  4904                           
  4905                           ; BSR set to: 0
  4906  001664  0100               	movlb	0	; () banked
  4907  001666  5161               	movf	Delay_Routine@delay_multiplyer& (0+255),w,b
  4908  001668  0100               	movlb	0	; () banked
  4909  00166A  5D62               	subwf	Delay_Routine@delay_counter& (0+255),w,b
  4910  00166C  A0D8               	btfss	status,0,c
  4911  00166E  D7F0               	goto	l3055
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;main.c: 82: }
  4915                           ;main.c: 83: __nop();
  4916  001670  F000               	nop	
  4917  001672  0012               	return		;funcret
  4918  001674                     __end_of_Delay_Routine:
  4919                           	opt stack 0
  4920                           tblptru	equ	0xFF8
  4921                           tblptrh	equ	0xFF7
  4922                           tblptrl	equ	0xFF6
  4923                           tablat	equ	0xFF5
  4924                           prodh	equ	0xFF4
  4925                           prodl	equ	0xFF3
  4926                           intcon	equ	0xFF2
  4927                           postinc0	equ	0xFEE
  4928                           wreg	equ	0xFE8
  4929                           postdec1	equ	0xFE5
  4930                           fsr1l	equ	0xFE1
  4931                           indf2	equ	0xFDF
  4932                           postinc2	equ	0xFDE
  4933                           postdec2	equ	0xFDD
  4934                           plusw2	equ	0xFDB
  4935                           fsr2h	equ	0xFDA
  4936                           fsr2l	equ	0xFD9
  4937                           status	equ	0xFD8
  4938                           
  4939 ;; *************** function _Isr *****************
  4940 ;; Defined at:
  4941 ;;		line 4 in file "interrupt.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;  search_index    1   45[COMRAM] unsigned char 
  4946 ;;  pixel_index_    1   44[COMRAM] unsigned char 
  4947 ;;  pixel_index_    1   43[COMRAM] unsigned char 
  4948 ;; Return value:  Size  Location     Type
  4949 ;;		None               void
  4950 ;; Registers used:
  4951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1
  4957 ;;      Params:         0       0       0
  4958 ;;      Locals:         3       0       0
  4959 ;;      Temps:         17       0       0
  4960 ;;      Totals:        20       0       0
  4961 ;;Total ram usage:       20 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:    4
  4964 ;; This function calls:
  4965 ;;		_Ignite_Detonators
  4966 ;;		_Receive
  4967 ;;		_Receive_Dump
  4968 ;;		___awdiv
  4969 ;;		i2_Check_Detonators
  4970 ;;		i2_Set_Display
  4971 ;; This function is called by:
  4972 ;;		Interrupt level 2
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	intcode
  4977  000008                     __pintcode:
  4978                           	opt stack 0
  4979  000008                     _Isr:
  4980                           	opt stack 19
  4981                           
  4982                           ;incstack = 0
  4983  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4984  00000A  CFFA F01E          	movff	pclath,??_Isr+3
  4985  00000E  CFFB F01F          	movff	pclatu,??_Isr+4
  4986  000012  CFE9 F020          	movff	fsr0l,??_Isr+5
  4987  000016  CFEA F021          	movff	fsr0h,??_Isr+6
  4988  00001A  CFE1 F022          	movff	fsr1l,??_Isr+7
  4989  00001E  CFE2 F023          	movff	fsr1h,??_Isr+8
  4990  000022  CFD9 F024          	movff	fsr2l,??_Isr+9
  4991  000026  CFDA F025          	movff	fsr2h,??_Isr+10
  4992  00002A  CFF3 F026          	movff	prodl,??_Isr+11
  4993  00002E  CFF4 F027          	movff	prodh,??_Isr+12
  4994  000032  CFF6 F028          	movff	tblptrl,??_Isr+13
  4995  000036  CFF7 F029          	movff	tblptrh,??_Isr+14
  4996  00003A  CFF8 F02A          	movff	tblptru,??_Isr+15
  4997  00003E  CFF5 F02B          	movff	tablat,??_Isr+16
  4998                           
  4999                           ;interrupt.c: 5: if(PIR1bits.CCP1IF == 1) {
  5000  000042  A49E               	btfss	3998,2,c	;volatile
  5001  000044  D00B               	goto	i2l2837
  5002                           
  5003                           ;interrupt.c: 7: PIR1bits.CCP1IF = 0;
  5004  000046  949E               	bcf	3998,2,c	;volatile
  5005                           
  5006                           ;interrupt.c: 8: T1CONbits.TMR1ON = 1;
  5007  000048  80CD               	bsf	4045,0,c	;volatile
  5008                           
  5009                           ;interrupt.c: 9: T3CONbits.TMR3ON = 0;
  5010  00004A  90B1               	bcf	4017,0,c	;volatile
  5011                           
  5012                           ;interrupt.c: 10: TMR3L = 0;
  5013  00004C  0E00               	movlw	0
  5014  00004E  6EB2               	movwf	4018,c	;volatile
  5015                           
  5016                           ;interrupt.c: 11: TMR3H = 0;
  5017  000050  0E00               	movlw	0
  5018  000052  6EB3               	movwf	4019,c	;volatile
  5019                           
  5020                           ;interrupt.c: 12: current_time++;
  5021  000054  4A35               	infsnz	_current_time,f,c
  5022  000056  2A36               	incf	_current_time+1,f,c
  5023                           
  5024                           ;interrupt.c: 13: Ignite_Detonators();
  5025  000058  EC96  F008         	call	_Ignite_Detonators	;wreg free
  5026  00005C                     i2l2837:
  5027                           
  5028                           ;interrupt.c: 14: }
  5029                           ;interrupt.c: 15: if(PIR1bits.TMR1IF == 1) {
  5030  00005C  A09E               	btfss	3998,0,c	;volatile
  5031  00005E  D007               	goto	i2l2843
  5032                           
  5033                           ;interrupt.c: 16: PIR1bits.TMR1IF = 0;
  5034  000060  909E               	bcf	3998,0,c	;volatile
  5035                           
  5036                           ;interrupt.c: 17: T3CONbits.TMR3ON = 1;
  5037  000062  80B1               	bsf	4017,0,c	;volatile
  5038                           
  5039                           ;interrupt.c: 18: T1CONbits.TMR1ON = 0;
  5040  000064  90CD               	bcf	4045,0,c	;volatile
  5041                           
  5042                           ;interrupt.c: 19: TMR1L = 0;
  5043  000066  0E00               	movlw	0
  5044  000068  6ECE               	movwf	4046,c	;volatile
  5045                           
  5046                           ;interrupt.c: 20: TMR1H = 0;
  5047  00006A  0E00               	movlw	0
  5048  00006C  6ECF               	movwf	4047,c	;volatile
  5049  00006E                     i2l2843:
  5050                           
  5051                           ;interrupt.c: 21: }
  5052                           ;interrupt.c: 22: if(PIR1bits.RCIF == 1) {
  5053  00006E  AA9E               	btfss	3998,5,c	;volatile
  5054  000070  D0B6               	goto	i2l631
  5055                           
  5056                           ;interrupt.c: 23: if(RCSTAbits.RX9D == 1) {
  5057  000072  A0AB               	btfss	4011,0,c	;volatile
  5058  000074  D016               	goto	i2l617
  5059                           
  5060                           ;interrupt.c: 24: receive_counter = 0;
  5061  000076  0E00               	movlw	0
  5062  000078  6E38               	movwf	_receive_counter,c
  5063                           
  5064                           ;interrupt.c: 26: received[receive_counter] =
  5065                           ;interrupt.c: 27: Receive();
  5066  00007A  5038               	movf	_receive_counter,w,c
  5067  00007C  0D01               	mullw	1
  5068  00007E  0E2F               	movlw	low _received
  5069  000080  24F3               	addwf	prodl,w,c
  5070  000082  6ED9               	movwf	fsr2l,c
  5071  000084  0E00               	movlw	high _received
  5072  000086  20F4               	addwfc	prodh,w,c
  5073  000088  6EDA               	movwf	fsr2h,c
  5074  00008A  ECA4  F00B         	call	_Receive	;wreg free
  5075  00008E  6EDF               	movwf	indf2,c
  5076                           
  5077                           ;interrupt.c: 28: receive_counter++;
  5078  000090  2A38               	incf	_receive_counter,f,c
  5079                           
  5080                           ;interrupt.c: 30: if(received[0] == 0xAA) {
  5081  000092  0EAA               	movlw	170
  5082  000094  182F               	xorwf	_received,w,c
  5083  000096  A4D8               	btfss	status,2,c
  5084  000098  D002               	goto	i2l618
  5085                           
  5086                           ;interrupt.c: 31: master_addressed = 1;
  5087  00009A  8241               	bsf	_master_addressed/(0+8),_master_addressed& (0+7),c
  5088                           
  5089                           ;interrupt.c: 32: } else {
  5090  00009C  D093               	goto	i2l2895
  5091  00009E                     i2l618:
  5092                           
  5093                           ;interrupt.c: 33: master_addressed = 0;
  5094  00009E  9241               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  5095                           
  5096                           ;interrupt.c: 34: }
  5097                           ;interrupt.c: 35: } else if(master_addressed == 1) {
  5098  0000A0  D091               	goto	i2l2895
  5099  0000A2                     i2l617:
  5100  0000A2  A241               	btfss	_master_addressed/(0+8),_master_addressed& (0+7),c
  5101  0000A4  D08D               	goto	i2l2893
  5102                           
  5103                           ;interrupt.c: 36: received[receive_counter] =
  5104                           ;interrupt.c: 37: Receive();
  5105  0000A6  5038               	movf	_receive_counter,w,c
  5106  0000A8  0D01               	mullw	1
  5107  0000AA  0E2F               	movlw	low _received
  5108  0000AC  24F3               	addwf	prodl,w,c
  5109  0000AE  6ED9               	movwf	fsr2l,c
  5110  0000B0  0E00               	movlw	high _received
  5111  0000B2  20F4               	addwfc	prodh,w,c
  5112  0000B4  6EDA               	movwf	fsr2h,c
  5113  0000B6  ECA4  F00B         	call	_Receive	;wreg free
  5114  0000BA  6EDF               	movwf	indf2,c
  5115                           
  5116                           ;interrupt.c: 38: receive_counter++;
  5117  0000BC  2A38               	incf	_receive_counter,f,c
  5118                           
  5119                           ;interrupt.c: 40: if(receive_counter > 5) {
  5120  0000BE  0E05               	movlw	5
  5121  0000C0  6438               	cpfsgt	_receive_counter,c
  5122  0000C2  D080               	goto	i2l2895
  5123                           
  5124                           ;interrupt.c: 41: receive_counter = 0;
  5125  0000C4  0E00               	movlw	0
  5126  0000C6  6E38               	movwf	_receive_counter,c
  5127                           
  5128                           ;interrupt.c: 42: master_addressed = 0;
  5129  0000C8  9241               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  5130                           
  5131                           ;interrupt.c: 44: if(received[2] == 'T') {
  5132  0000CA  0E54               	movlw	84
  5133  0000CC  1831               	xorwf	_received+2,w,c
  5134  0000CE  A4D8               	btfss	status,2,c
  5135  0000D0  D079               	goto	i2l2895
  5136                           
  5137                           ;interrupt.c: 45: unsigned char search_index = 0xFF;
  5138  0000D2  682E               	setf	Isr@search_index,c
  5139                           
  5140                           ;interrupt.c: 46: unsigned char pixel_index_array = 0;
  5141  0000D4  0E00               	movlw	0
  5142  0000D6  6E2C               	movwf	Isr@pixel_index_array,c
  5143                           
  5144                           ;interrupt.c: 47: unsigned char pixel_index_bit = 0;
  5145  0000D8  0E00               	movlw	0
  5146  0000DA  6E2D               	movwf	Isr@pixel_index_bit,c
  5147                           
  5148                           ;interrupt.c: 48: search_index = (received[1] * 10);
  5149  0000DC  5030               	movf	_received+1,w,c
  5150  0000DE  0D0A               	mullw	10
  5151  0000E0  CFF3 F02E          	movff	prodl,Isr@search_index
  5152                           
  5153                           ;interrupt.c: 50: search_index += received[3];
  5154  0000E4  5032               	movf	_received+3,w,c
  5155  0000E6  262E               	addwf	Isr@search_index,f,c
  5156                           
  5157                           ;interrupt.c: 52: pixel_index_array =
  5158                           ;interrupt.c: 53: pin[search_index].led_address / 8;
  5159  0000E8  502E               	movf	Isr@search_index,w,c
  5160  0000EA  0D06               	mullw	6
  5161  0000EC  0E03               	movlw	3
  5162  0000EE  26F3               	addwf	prodl,f,c
  5163  0000F0  0E00               	movlw	0
  5164  0000F2  22F4               	addwfc	prodh,f,c
  5165  0000F4  0E00               	movlw	low _pin
  5166  0000F6  24F3               	addwf	prodl,w,c
  5167  0000F8  6ED9               	movwf	fsr2l,c
  5168  0000FA  0E01               	movlw	high _pin
  5169  0000FC  20F4               	addwfc	prodh,w,c
  5170  0000FE  6EDA               	movwf	fsr2h,c
  5171  000100  50DF               	movf	indf2,w,c
  5172  000102  6E1B               	movwf	??_Isr& (0+255),c
  5173  000104  501B               	movf	??_Isr,w,c
  5174  000106  6E01               	movwf	___awdiv@dividend,c
  5175  000108  6A02               	clrf	___awdiv@dividend+1,c
  5176  00010A  0E00               	movlw	0
  5177  00010C  6E04               	movwf	___awdiv@divisor+1,c
  5178  00010E  0E08               	movlw	8
  5179  000110  6E03               	movwf	___awdiv@divisor,c
  5180  000112  EC18  F008         	call	___awdiv	;wreg free
  5181  000116  5001               	movf	?___awdiv,w,c
  5182  000118  6E2C               	movwf	Isr@pixel_index_array,c
  5183                           
  5184                           ;interrupt.c: 54: pixel_index_bit =
  5185                           ;interrupt.c: 55: pin[search_index].led_address % 8;
  5186  00011A  502E               	movf	Isr@search_index,w,c
  5187  00011C  0D06               	mullw	6
  5188  00011E  0E03               	movlw	3
  5189  000120  26F3               	addwf	prodl,f,c
  5190  000122  0E00               	movlw	0
  5191  000124  22F4               	addwfc	prodh,f,c
  5192  000126  0E00               	movlw	low _pin
  5193  000128  24F3               	addwf	prodl,w,c
  5194  00012A  6ED9               	movwf	fsr2l,c
  5195  00012C  0E01               	movlw	high _pin
  5196  00012E  20F4               	addwfc	prodh,w,c
  5197  000130  6EDA               	movwf	fsr2h,c
  5198  000132  50DF               	movf	indf2,w,c
  5199  000134  0B07               	andlw	7
  5200  000136  6E2D               	movwf	Isr@pixel_index_bit,c
  5201                           
  5202                           ;interrupt.c: 56: if(received[4] == '1'){
  5203  000138  0E31               	movlw	49
  5204  00013A  1833               	xorwf	_received+4,w,c
  5205  00013C  A4D8               	btfss	status,2,c
  5206  00013E  D015               	goto	i2l2885
  5207                           
  5208                           ;interrupt.c: 57: pixels[pixel_index_array] |=
  5209                           ;interrupt.c: 58: (1 << pixel_index_bit);
  5210  000140  C02D  F01B         	movff	Isr@pixel_index_bit,??_Isr
  5211  000144  0E01               	movlw	1
  5212  000146  6E1C               	movwf	(??_Isr+1)& (0+255),c
  5213  000148  2A1B               	incf	??_Isr,f,c
  5214  00014A  D002               	goto	i2u195_44
  5215  00014C                     i2u195_45:
  5216  00014C  90D8               	bcf	status,0,c
  5217  00014E  361C               	rlcf	??_Isr+1,f,c
  5218  000150                     i2u195_44:
  5219  000150  2E1B               	decfsz	??_Isr,f,c
  5220  000152  D7FC               	goto	i2u195_45
  5221  000154  502C               	movf	Isr@pixel_index_array,w,c
  5222  000156  0D01               	mullw	1
  5223  000158  0E39               	movlw	low _pixels
  5224  00015A  24F3               	addwf	prodl,w,c
  5225  00015C  6ED9               	movwf	fsr2l,c
  5226  00015E  0E00               	movlw	high _pixels
  5227  000160  20F4               	addwfc	prodh,w,c
  5228  000162  6EDA               	movwf	fsr2h,c
  5229  000164  501C               	movf	??_Isr+1,w,c
  5230  000166  12DF               	iorwf	indf2,f,c
  5231                           
  5232                           ;interrupt.c: 59: }else if(received[4] == '0') {
  5233  000168  D01B               	goto	i2l2889
  5234  00016A                     i2l2885:
  5235  00016A  0E30               	movlw	48
  5236  00016C  1833               	xorwf	_received+4,w,c
  5237  00016E  A4D8               	btfss	status,2,c
  5238  000170  D017               	goto	i2l2889
  5239                           
  5240                           ;interrupt.c: 60: pixels[pixel_index_array] &=
  5241                           ;interrupt.c: 61: ~(1 << pixel_index_bit);
  5242  000172  C02D  F01B         	movff	Isr@pixel_index_bit,??_Isr
  5243  000176  0E01               	movlw	1
  5244  000178  6E1C               	movwf	(??_Isr+1)& (0+255),c
  5245  00017A  2A1B               	incf	??_Isr,f,c
  5246  00017C  D002               	goto	i2u197_44
  5247  00017E                     i2u197_45:
  5248  00017E  90D8               	bcf	status,0,c
  5249  000180  361C               	rlcf	??_Isr+1,f,c
  5250  000182                     i2u197_44:
  5251  000182  2E1B               	decfsz	??_Isr,f,c
  5252  000184  D7FC               	goto	i2u197_45
  5253  000186  501C               	movf	??_Isr+1,w,c
  5254  000188  0AFF               	xorlw	255
  5255  00018A  6E1D               	movwf	(??_Isr+2)& (0+255),c
  5256  00018C  502C               	movf	Isr@pixel_index_array,w,c
  5257  00018E  0D01               	mullw	1
  5258  000190  0E39               	movlw	low _pixels
  5259  000192  24F3               	addwf	prodl,w,c
  5260  000194  6ED9               	movwf	fsr2l,c
  5261  000196  0E00               	movlw	high _pixels
  5262  000198  20F4               	addwfc	prodh,w,c
  5263  00019A  6EDA               	movwf	fsr2h,c
  5264  00019C  501D               	movf	??_Isr+2,w,c
  5265  00019E  16DF               	andwf	indf2,f,c
  5266  0001A0                     i2l2889:
  5267                           
  5268                           ;interrupt.c: 62: }
  5269                           ;interrupt.c: 63: if(received[5] == '1') {
  5270  0001A0  0E31               	movlw	49
  5271  0001A2  1834               	xorwf	_received+5,w,c
  5272  0001A4  A4D8               	btfss	status,2,c
  5273  0001A6  D00E               	goto	i2l2895
  5274                           
  5275                           ;interrupt.c: 64: Set_Display('7', 'P', (received[1] + 1));
  5276  0001A8  0E50               	movlw	80
  5277  0001AA  6E17               	movwf	i2Set_Display@information,c
  5278  0001AC  0E01               	movlw	1
  5279  0001AE  2430               	addwf	_received+1,w,c
  5280  0001B0  6E18               	movwf	i2Set_Display@value,c
  5281  0001B2  6A19               	clrf	i2Set_Display@value+1,c
  5282  0001B4  0E00               	movlw	0
  5283  0001B6  2219               	addwfc	i2Set_Display@value+1,f,c
  5284  0001B8  0E37               	movlw	55
  5285  0001BA  ECB8  F009         	call	i2_Set_Display
  5286                           
  5287                           ;interrupt.c: 65: }
  5288                           ;interrupt.c: 66: }
  5289                           ;interrupt.c: 67: }
  5290                           ;interrupt.c: 68: } else {
  5291  0001BE  D002               	goto	i2l2895
  5292  0001C0                     i2l2893:
  5293                           
  5294                           ;interrupt.c: 69: Receive_Dump();
  5295  0001C0  EC9C  F00B         	call	_Receive_Dump	;wreg free
  5296  0001C4                     i2l2895:
  5297                           
  5298                           ;interrupt.c: 70: }
  5299                           ;interrupt.c: 71: __nop();
  5300  0001C4  F000               	nop	
  5301                           
  5302                           ;interrupt.c: 72: if(check_counter < 30 && testflag == 1) {
  5303  0001C6  0E1E               	movlw	30
  5304  0001C8  6037               	cpfslt	_check_counter,c
  5305  0001CA  D006               	goto	i2l2905
  5306  0001CC  A641               	btfss	_testflag/(0+8),_testflag& (0+7),c
  5307  0001CE  D004               	goto	i2l2905
  5308                           
  5309                           ;interrupt.c: 73: check_counter++;
  5310  0001D0  2A37               	incf	_check_counter,f,c
  5311                           
  5312                           ;interrupt.c: 74: Check_Detonators();
  5313  0001D2  ECD3  F00A         	call	i2_Check_Detonators	;wreg free
  5314                           
  5315                           ;interrupt.c: 75: }else {
  5316  0001D6  D003               	goto	i2l631
  5317  0001D8                     i2l2905:
  5318                           
  5319                           ;interrupt.c: 76: check_counter = 0;
  5320  0001D8  0E00               	movlw	0
  5321  0001DA  6E37               	movwf	_check_counter,c
  5322                           
  5323                           ;interrupt.c: 77: testflag = 0;
  5324  0001DC  9641               	bcf	_testflag/(0+8),_testflag& (0+7),c
  5325  0001DE                     i2l631:
  5326  0001DE  C02B  FFF5         	movff	??_Isr+16,tablat
  5327  0001E2  C02A  FFF8         	movff	??_Isr+15,tblptru
  5328  0001E6  C029  FFF7         	movff	??_Isr+14,tblptrh
  5329  0001EA  C028  FFF6         	movff	??_Isr+13,tblptrl
  5330  0001EE  C027  FFF4         	movff	??_Isr+12,prodh
  5331  0001F2  C026  FFF3         	movff	??_Isr+11,prodl
  5332  0001F6  C025  FFDA         	movff	??_Isr+10,fsr2h
  5333  0001FA  C024  FFD9         	movff	??_Isr+9,fsr2l
  5334  0001FE  C023  FFE2         	movff	??_Isr+8,fsr1h
  5335  000202  C022  FFE1         	movff	??_Isr+7,fsr1l
  5336  000206  C021  FFEA         	movff	??_Isr+6,fsr0h
  5337  00020A  C020  FFE9         	movff	??_Isr+5,fsr0l
  5338  00020E  C01F  FFFB         	movff	??_Isr+4,pclatu
  5339  000212  C01E  FFFA         	movff	??_Isr+3,pclath
  5340  000216  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5341  000218  0011               	retfie		f
  5342  00021A                     __end_of_Isr:
  5343                           	opt stack 0
  5344                           pclatu	equ	0xFFB
  5345                           pclath	equ	0xFFA
  5346                           tblptru	equ	0xFF8
  5347                           tblptrh	equ	0xFF7
  5348                           tblptrl	equ	0xFF6
  5349                           tablat	equ	0xFF5
  5350                           prodh	equ	0xFF4
  5351                           prodl	equ	0xFF3
  5352                           intcon	equ	0xFF2
  5353                           postinc0	equ	0xFEE
  5354                           fsr0h	equ	0xFEA
  5355                           fsr0l	equ	0xFE9
  5356                           wreg	equ	0xFE8
  5357                           postdec1	equ	0xFE5
  5358                           fsr1h	equ	0xFE2
  5359                           fsr1l	equ	0xFE1
  5360                           indf2	equ	0xFDF
  5361                           postinc2	equ	0xFDE
  5362                           postdec2	equ	0xFDD
  5363                           plusw2	equ	0xFDB
  5364                           fsr2h	equ	0xFDA
  5365                           fsr2l	equ	0xFD9
  5366                           status	equ	0xFD8
  5367                           
  5368 ;; *************** function i2_Set_Display *****************
  5369 ;; Defined at:
  5370 ;;		line 139 in file "display.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;  type            1    wreg     unsigned char 
  5373 ;;  information     1   22[COMRAM] unsigned char 
  5374 ;;  value           2   23[COMRAM] unsigned int 
  5375 ;; Auto vars:     Size  Location     Type
  5376 ;;  type            1   25[COMRAM] unsigned char 
  5377 ;; Return value:  Size  Location     Type
  5378 ;;		None               void
  5379 ;; Registers used:
  5380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5381 ;; Tracked objects:
  5382 ;;		On entry : 0/0
  5383 ;;		On exit  : 0/0
  5384 ;;		Unchanged: 0/0
  5385 ;; Data sizes:     COMRAM   BANK0   BANK1
  5386 ;;      Params:         3       0       0
  5387 ;;      Locals:         1       0       0
  5388 ;;      Temps:          0       0       0
  5389 ;;      Totals:         4       0       0
  5390 ;;Total ram usage:        4 bytes
  5391 ;; Hardware stack levels used:    1
  5392 ;; Hardware stack levels required when called:    3
  5393 ;; This function calls:
  5394 ;;		i2_Evaluate_Display
  5395 ;;		i2_Evaluate_Signs
  5396 ;;		i2_Write_Display_Byte
  5397 ;; This function is called by:
  5398 ;;		_Isr
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text26
  5403  001370                     __ptext26:
  5404                           	opt stack 0
  5405  001370                     i2_Set_Display:
  5406                           	opt stack 19
  5407                           
  5408                           ;incstack = 0
  5409                           ;i2Set_Display@type stored from wreg
  5410  001370  6E1A               	movwf	i2Set_Display@type,c
  5411                           
  5412                           ;display.c: 141: switch (type) {
  5413  001372  D01D               	goto	i2l2809
  5414  001374                     i2l2793:
  5415                           
  5416                           ;display.c: 143: if(information != '-') {
  5417  001374  0E2D               	movlw	45
  5418  001376  1817               	xorwf	i2Set_Display@information,w,c
  5419  001378  B4D8               	btfsc	status,2,c
  5420  00137A  D012               	goto	i2l2805
  5421                           
  5422                           ;display.c: 144: signs[2] = value;
  5423  00137C  C018  F083         	movff	i2Set_Display@value,_signs+2
  5424                           
  5425                           ;display.c: 145: signs[2] += 0x30;
  5426  001380  0E30               	movlw	48
  5427  001382  0100               	movlb	0	; () banked
  5428  001384  2783               	addwf	(_signs+2)& (0+255),f,b
  5429                           
  5430                           ; BSR set to: 0
  5431                           ;display.c: 146: signs[1] = '-';
  5432  001386  0E2D               	movlw	45
  5433  001388  0100               	movlb	0	; () banked
  5434  00138A  6F82               	movwf	(_signs+1)& (0+255),b
  5435                           
  5436                           ; BSR set to: 0
  5437                           ;display.c: 147: signs[0] = information;
  5438  00138C  C017  F081         	movff	i2Set_Display@information,_signs
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;display.c: 148: Evaluate_Display(sizeof(signs), signs);
  5442  001390  0E81               	movlw	low _signs
  5443  001392  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5444  001394  0E00               	movlw	high _signs
  5445  001396  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5446  001398  0E03               	movlw	3
  5447  00139A  ECCD  F004         	call	i2_Evaluate_Display
  5448                           
  5449                           ;display.c: 149: } else {
  5450  00139E  D00C               	goto	i2l2811
  5451  0013A0                     i2l2805:
  5452                           
  5453                           ;display.c: 150: Evaluate_Signs(value);
  5454  0013A0  C018  F010         	movff	i2Set_Display@value,i2Evaluate_Signs@evaluation_value
  5455  0013A4  C019  F011         	movff	i2Set_Display@value+1,i2Evaluate_Signs@evaluation_value+1
  5456  0013A8  ECCA  F007         	call	i2_Evaluate_Signs	;wreg free
  5457                           
  5458                           ;display.c: 156: }
  5459                           
  5460                           ;display.c: 155: break;
  5461                           
  5462                           ;display.c: 153: case 'L':
  5463                           
  5464                           ;display.c: 151: }
  5465                           ;display.c: 152: break;
  5466  0013AC  D005               	goto	i2l2811
  5467  0013AE                     i2l2809:
  5468  0013AE  501A               	movf	i2Set_Display@type,w,c
  5469                           
  5470                           ; Switch size 1, requested type "space"
  5471                           ; Number of cases is 2, Range of values is 55 to 76
  5472                           ; switch strategies available:
  5473                           ; Name         Instructions Cycles
  5474                           ; simple_byte            7     4 (average)
  5475                           ;	Chosen strategy is simple_byte
  5476  0013B0  0A37               	xorlw	55	; case 55
  5477  0013B2  B4D8               	btfsc	status,2,c
  5478  0013B4  D7DF               	goto	i2l2793
  5479  0013B6  0A7B               	xorlw	123	; case 76
  5480  0013B8                     i2l2811:
  5481                           
  5482                           ;display.c: 157: Write_Display_Byte(pixels);
  5483  0013B8  0E39               	movlw	low _pixels
  5484  0013BA  6E01               	movwf	i2Write_Display_Byte@write_data,c
  5485  0013BC  0E00               	movlw	high _pixels
  5486  0013BE  6E02               	movwf	i2Write_Display_Byte@write_data+1,c
  5487  0013C0  EC57  F00A         	call	i2_Write_Display_Byte	;wreg free
  5488  0013C4  0012               	return		;funcret
  5489  0013C6                     __end_ofi2_Set_Display:
  5490                           	opt stack 0
  5491                           pclatu	equ	0xFFB
  5492                           pclath	equ	0xFFA
  5493                           tblptru	equ	0xFF8
  5494                           tblptrh	equ	0xFF7
  5495                           tblptrl	equ	0xFF6
  5496                           tablat	equ	0xFF5
  5497                           prodh	equ	0xFF4
  5498                           prodl	equ	0xFF3
  5499                           intcon	equ	0xFF2
  5500                           postinc0	equ	0xFEE
  5501                           fsr0h	equ	0xFEA
  5502                           fsr0l	equ	0xFE9
  5503                           wreg	equ	0xFE8
  5504                           postdec1	equ	0xFE5
  5505                           fsr1h	equ	0xFE2
  5506                           fsr1l	equ	0xFE1
  5507                           indf2	equ	0xFDF
  5508                           postinc2	equ	0xFDE
  5509                           postdec2	equ	0xFDD
  5510                           plusw2	equ	0xFDB
  5511                           fsr2h	equ	0xFDA
  5512                           fsr2l	equ	0xFD9
  5513                           status	equ	0xFD8
  5514                           
  5515 ;; *************** function i2_Write_Display_Byte *****************
  5516 ;; Defined at:
  5517 ;;		line 56 in file "communication.c"
  5518 ;; Parameters:    Size  Location     Type
  5519 ;;  write_data      2    0[COMRAM] PTR unsigned char 
  5520 ;;		 -> pixels(8), 
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;  Write_Displa    1    6[COMRAM] unsigned char 
  5523 ;; Return value:  Size  Location     Type
  5524 ;;		None               void
  5525 ;; Registers used:
  5526 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5527 ;; Tracked objects:
  5528 ;;		On entry : 0/0
  5529 ;;		On exit  : 0/0
  5530 ;;		Unchanged: 0/0
  5531 ;; Data sizes:     COMRAM   BANK0   BANK1
  5532 ;;      Params:         2       0       0
  5533 ;;      Locals:         1       0       0
  5534 ;;      Temps:          4       0       0
  5535 ;;      Totals:         7       0       0
  5536 ;;Total ram usage:        7 bytes
  5537 ;; Hardware stack levels used:    1
  5538 ;; This function calls:
  5539 ;;		Nothing
  5540 ;; This function is called by:
  5541 ;;		i2_Set_Display
  5542 ;; This function uses a non-reentrant model
  5543 ;;
  5544                           
  5545                           	psect	text27
  5546  0014AE                     __ptext27:
  5547                           	opt stack 0
  5548  0014AE                     i2_Write_Display_Byte:
  5549                           	opt stack 21
  5550                           
  5551                           ;communication.c: 57: for(unsigned char counter = sizeof(pixels); counter > 0;
  5552                           
  5553                           ;incstack = 0
  5554  0014AE  0E08               	movlw	8
  5555  0014B0  6E07               	movwf	i2Write_Display_Byte@counter,c
  5556  0014B2                     
  5557                           ;communication.c: 58: counter--) {
  5558  0014B2  5007               	movf	i2Write_Display_Byte@counter,w,c
  5559  0014B4  B4D8               	btfsc	status,2,c
  5560  0014B6  0012               	return	
  5561                           
  5562                           ;communication.c: 59: if(SSP1IF = 1) {
  5563  0014B8  869E               	bsf	3998,3,c	;volatile
  5564  0014BA  B69E               	btfsc	3998,3,c	;volatile
  5565                           
  5566                           ;communication.c: 60: SSP1IF = 0;
  5567  0014BC  969E               	bcf	3998,3,c	;volatile
  5568                           
  5569                           ;communication.c: 61: }
  5570                           ;communication.c: 62: SSP1BUF = write_data[counter - 1];
  5571  0014BE  0EFF               	movlw	255
  5572  0014C0  6E03               	movwf	??i2_Write_Display_Byte& (0+255),c
  5573  0014C2  0EFF               	movlw	255
  5574  0014C4  6E04               	movwf	(??i2_Write_Display_Byte+1)& (0+255),c
  5575  0014C6  5007               	movf	i2Write_Display_Byte@counter,w,c
  5576  0014C8  6E05               	movwf	(??i2_Write_Display_Byte+2)& (0+255),c
  5577  0014CA  6A06               	clrf	(??i2_Write_Display_Byte+3)& (0+255),c
  5578  0014CC  5003               	movf	??i2_Write_Display_Byte,w,c
  5579  0014CE  2605               	addwf	??i2_Write_Display_Byte+2,f,c
  5580  0014D0  5004               	movf	??i2_Write_Display_Byte+1,w,c
  5581  0014D2  2206               	addwfc	??i2_Write_Display_Byte+3,f,c
  5582  0014D4  5005               	movf	??i2_Write_Display_Byte+2,w,c
  5583  0014D6  2401               	addwf	i2Write_Display_Byte@write_data,w,c
  5584  0014D8  6ED9               	movwf	fsr2l,c
  5585  0014DA  5006               	movf	??i2_Write_Display_Byte+3,w,c
  5586  0014DC  2002               	addwfc	i2Write_Display_Byte@write_data+1,w,c
  5587  0014DE  6EDA               	movwf	fsr2h,c
  5588  0014E0  50DF               	movf	indf2,w,c
  5589  0014E2  6EC9               	movwf	4041,c	;volatile
  5590                           
  5591                           ;communication.c: 64: SSP1IF = 0;
  5592  0014E4  969E               	bcf	3998,3,c	;volatile
  5593                           
  5594                           ;communication.c: 65: PORTCbits.RC0 = 0;
  5595  0014E6  9082               	bcf	3970,0,c	;volatile
  5596                           
  5597                           ;communication.c: 66: PORTCbits.RC0 = 1;
  5598  0014E8  8082               	bsf	3970,0,c	;volatile
  5599                           
  5600                           ;communication.c: 67: PORTCbits.RC0 = 0;
  5601  0014EA  9082               	bcf	3970,0,c	;volatile
  5602  0014EC  0607               	decf	i2Write_Display_Byte@counter,f,c
  5603  0014EE  D7E1               	goto	L5
  5604  0014F0                     __end_ofi2_Write_Display_Byte:
  5605                           	opt stack 0
  5606                           pclatu	equ	0xFFB
  5607                           pclath	equ	0xFFA
  5608                           tblptru	equ	0xFF8
  5609                           tblptrh	equ	0xFF7
  5610                           tblptrl	equ	0xFF6
  5611                           tablat	equ	0xFF5
  5612                           prodh	equ	0xFF4
  5613                           prodl	equ	0xFF3
  5614                           intcon	equ	0xFF2
  5615                           postinc0	equ	0xFEE
  5616                           fsr0h	equ	0xFEA
  5617                           fsr0l	equ	0xFE9
  5618                           wreg	equ	0xFE8
  5619                           postdec1	equ	0xFE5
  5620                           fsr1h	equ	0xFE2
  5621                           fsr1l	equ	0xFE1
  5622                           indf2	equ	0xFDF
  5623                           postinc2	equ	0xFDE
  5624                           postdec2	equ	0xFDD
  5625                           plusw2	equ	0xFDB
  5626                           fsr2h	equ	0xFDA
  5627                           fsr2l	equ	0xFD9
  5628                           status	equ	0xFD8
  5629                           
  5630 ;; *************** function i2_Evaluate_Signs *****************
  5631 ;; Defined at:
  5632 ;;		line 119 in file "display.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  evaluation_v    2   15[COMRAM] unsigned int 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  Evaluate_Sig    1   21[COMRAM] unsigned char 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;		None               void
  5639 ;; Registers used:
  5640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1
  5646 ;;      Params:         2       0       0
  5647 ;;      Locals:         1       0       0
  5648 ;;      Temps:          4       0       0
  5649 ;;      Totals:         7       0       0
  5650 ;;Total ram usage:        7 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    2
  5653 ;; This function calls:
  5654 ;;		i2_Evaluate_Display
  5655 ;;		i2___lwdiv
  5656 ;;		i2___lwmod
  5657 ;; This function is called by:
  5658 ;;		i2_Set_Display
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           	psect	text28
  5663  000F94                     __ptext28:
  5664                           	opt stack 0
  5665  000F94                     i2_Evaluate_Signs:
  5666                           	opt stack 19
  5667                           
  5668                           ;display.c: 120: for(unsigned char valuecounter = sizeof(signs); valuecounter > 0;
  5669                           
  5670                           ;incstack = 0
  5671  000F94  0E03               	movlw	3
  5672  000F96  6E16               	movwf	i2Evaluate_Signs@valuecounter,c
  5673  000F98                     
  5674                           ;display.c: 121: valuecounter--) {
  5675  000F98  5016               	movf	i2Evaluate_Signs@valuecounter,w,c
  5676  000F9A  B4D8               	btfsc	status,2,c
  5677  000F9C  D040               	goto	i2l457
  5678                           
  5679                           ;display.c: 122: signs[(valuecounter - 1)] = evaluation_value % 10;
  5680  000F9E  0EFF               	movlw	255
  5681  000FA0  6E12               	movwf	??i2_Evaluate_Signs& (0+255),c
  5682  000FA2  0EFF               	movlw	255
  5683  000FA4  6E13               	movwf	(??i2_Evaluate_Signs+1)& (0+255),c
  5684  000FA6  5016               	movf	i2Evaluate_Signs@valuecounter,w,c
  5685  000FA8  6E14               	movwf	(??i2_Evaluate_Signs+2)& (0+255),c
  5686  000FAA  6A15               	clrf	(??i2_Evaluate_Signs+3)& (0+255),c
  5687  000FAC  5012               	movf	??i2_Evaluate_Signs,w,c
  5688  000FAE  2614               	addwf	??i2_Evaluate_Signs+2,f,c
  5689  000FB0  5013               	movf	??i2_Evaluate_Signs+1,w,c
  5690  000FB2  2215               	addwfc	??i2_Evaluate_Signs+3,f,c
  5691  000FB4  0E81               	movlw	low _signs
  5692  000FB6  2414               	addwf	??i2_Evaluate_Signs+2,w,c
  5693  000FB8  6ED9               	movwf	fsr2l,c
  5694  000FBA  0E00               	movlw	high _signs
  5695  000FBC  2015               	addwfc	??i2_Evaluate_Signs+3,w,c
  5696  000FBE  6EDA               	movwf	fsr2h,c
  5697  000FC0  C010  F001         	movff	i2Evaluate_Signs@evaluation_value,i2___lwmod@dividend
  5698  000FC4  C011  F002         	movff	i2Evaluate_Signs@evaluation_value+1,i2___lwmod@dividend+1
  5699  000FC8  0E00               	movlw	0
  5700  000FCA  6E04               	movwf	i2___lwmod@divisor+1,c
  5701  000FCC  0E0A               	movlw	10
  5702  000FCE  6E03               	movwf	i2___lwmod@divisor,c
  5703  000FD0  EC78  F00A         	call	i2___lwmod	;wreg free
  5704  000FD4  5001               	movf	?i2___lwmod,w,c
  5705  000FD6  6EDF               	movwf	indf2,c
  5706                           
  5707                           ;display.c: 123: signs[(valuecounter - 1)] += 0x30;
  5708  000FD8  0EFF               	movlw	255
  5709  000FDA  6E12               	movwf	??i2_Evaluate_Signs& (0+255),c
  5710  000FDC  0EFF               	movlw	255
  5711  000FDE  6E13               	movwf	(??i2_Evaluate_Signs+1)& (0+255),c
  5712  000FE0  5016               	movf	i2Evaluate_Signs@valuecounter,w,c
  5713  000FE2  6E14               	movwf	(??i2_Evaluate_Signs+2)& (0+255),c
  5714  000FE4  6A15               	clrf	(??i2_Evaluate_Signs+3)& (0+255),c
  5715  000FE6  5012               	movf	??i2_Evaluate_Signs,w,c
  5716  000FE8  2614               	addwf	??i2_Evaluate_Signs+2,f,c
  5717  000FEA  5013               	movf	??i2_Evaluate_Signs+1,w,c
  5718  000FEC  2215               	addwfc	??i2_Evaluate_Signs+3,f,c
  5719  000FEE  0E81               	movlw	low _signs
  5720  000FF0  2414               	addwf	??i2_Evaluate_Signs+2,w,c
  5721  000FF2  6ED9               	movwf	fsr2l,c
  5722  000FF4  0E00               	movlw	high _signs
  5723  000FF6  2015               	addwfc	??i2_Evaluate_Signs+3,w,c
  5724  000FF8  6EDA               	movwf	fsr2h,c
  5725  000FFA  0E30               	movlw	48
  5726  000FFC  26DF               	addwf	indf2,f,c
  5727                           
  5728                           ;display.c: 124: evaluation_value = evaluation_value / 10;
  5729  000FFE  C010  F001         	movff	i2Evaluate_Signs@evaluation_value,i2___lwdiv@dividend
  5730  001002  C011  F002         	movff	i2Evaluate_Signs@evaluation_value+1,i2___lwdiv@dividend+1
  5731  001006  0E00               	movlw	0
  5732  001008  6E04               	movwf	i2___lwdiv@divisor+1,c
  5733  00100A  0E0A               	movlw	10
  5734  00100C  6E03               	movwf	i2___lwdiv@divisor,c
  5735  00100E  ECE3  F009         	call	i2___lwdiv	;wreg free
  5736  001012  C001  F010         	movff	?i2___lwdiv,i2Evaluate_Signs@evaluation_value
  5737  001016  C002  F011         	movff	?i2___lwdiv+1,i2Evaluate_Signs@evaluation_value+1
  5738  00101A  0616               	decf	i2Evaluate_Signs@valuecounter,f,c
  5739  00101C  D7BD               	goto	L6
  5740  00101E                     i2l457:
  5741                           
  5742                           ;display.c: 125: }
  5743                           ;display.c: 126: __nop();
  5744  00101E  F000               	nop	
  5745                           
  5746                           ;display.c: 127: Evaluate_Display(sizeof(signs), signs);
  5747  001020  0E81               	movlw	low _signs
  5748  001022  6E09               	movwf	i2Evaluate_Display@evaluate,c
  5749  001024  0E00               	movlw	high _signs
  5750  001026  6E0A               	movwf	i2Evaluate_Display@evaluate+1,c
  5751  001028  0E03               	movlw	3
  5752  00102A  ECCD  F004         	call	i2_Evaluate_Display
  5753  00102E  0012               	return		;funcret
  5754  001030                     __end_ofi2_Evaluate_Signs:
  5755                           	opt stack 0
  5756                           pclatu	equ	0xFFB
  5757                           pclath	equ	0xFFA
  5758                           tblptru	equ	0xFF8
  5759                           tblptrh	equ	0xFF7
  5760                           tblptrl	equ	0xFF6
  5761                           tablat	equ	0xFF5
  5762                           prodh	equ	0xFF4
  5763                           prodl	equ	0xFF3
  5764                           intcon	equ	0xFF2
  5765                           postinc0	equ	0xFEE
  5766                           fsr0h	equ	0xFEA
  5767                           fsr0l	equ	0xFE9
  5768                           wreg	equ	0xFE8
  5769                           postdec1	equ	0xFE5
  5770                           fsr1h	equ	0xFE2
  5771                           fsr1l	equ	0xFE1
  5772                           indf2	equ	0xFDF
  5773                           postinc2	equ	0xFDE
  5774                           postdec2	equ	0xFDD
  5775                           plusw2	equ	0xFDB
  5776                           fsr2h	equ	0xFDA
  5777                           fsr2l	equ	0xFD9
  5778                           status	equ	0xFD8
  5779                           
  5780 ;; *************** function i2___lwmod *****************
  5781 ;; Defined at:
  5782 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  dividend        2    0[COMRAM] unsigned int 
  5785 ;;  divisor         2    2[COMRAM] unsigned int 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  __lwmod         1    4[COMRAM] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  2    0[COMRAM] unsigned int 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1
  5797 ;;      Params:         4       0       0
  5798 ;;      Locals:         1       0       0
  5799 ;;      Temps:          0       0       0
  5800 ;;      Totals:         5       0       0
  5801 ;;Total ram usage:        5 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		i2_Evaluate_Signs
  5807 ;; This function uses a non-reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text29
  5811  0014F0                     __ptext29:
  5812                           	opt stack 0
  5813  0014F0                     i2___lwmod:
  5814                           	opt stack 20
  5815                           
  5816                           ;incstack = 0
  5817  0014F0  5003               	movf	i2___lwmod@divisor,w,c
  5818  0014F2  1004               	iorwf	i2___lwmod@divisor+1,w,c
  5819  0014F4  B4D8               	btfsc	status,2,c
  5820  0014F6  D018               	goto	i2l1044
  5821  0014F8  0E01               	movlw	1
  5822  0014FA  6E05               	movwf	i2___lwmod@counter,c
  5823  0014FC  D004               	goto	i2l2463
  5824  0014FE                     i2l2461:
  5825  0014FE  90D8               	bcf	status,0,c
  5826  001500  3603               	rlcf	i2___lwmod@divisor,f,c
  5827  001502  3604               	rlcf	i2___lwmod@divisor+1,f,c
  5828  001504  2A05               	incf	i2___lwmod@counter,f,c
  5829  001506                     i2l2463:
  5830  001506  AE04               	btfss	i2___lwmod@divisor+1,7,c
  5831  001508  D7FA               	goto	i2l2461
  5832  00150A                     i2l2465:
  5833  00150A  5003               	movf	i2___lwmod@divisor,w,c
  5834  00150C  5C01               	subwf	i2___lwmod@dividend,w,c
  5835  00150E  5004               	movf	i2___lwmod@divisor+1,w,c
  5836  001510  5802               	subwfb	i2___lwmod@dividend+1,w,c
  5837  001512  A0D8               	btfss	status,0,c
  5838  001514  D004               	goto	i2l2469
  5839  001516  5003               	movf	i2___lwmod@divisor,w,c
  5840  001518  5E01               	subwf	i2___lwmod@dividend,f,c
  5841  00151A  5004               	movf	i2___lwmod@divisor+1,w,c
  5842  00151C  5A02               	subwfb	i2___lwmod@dividend+1,f,c
  5843  00151E                     i2l2469:
  5844  00151E  90D8               	bcf	status,0,c
  5845  001520  3204               	rrcf	i2___lwmod@divisor+1,f,c
  5846  001522  3203               	rrcf	i2___lwmod@divisor,f,c
  5847  001524  2E05               	decfsz	i2___lwmod@counter,f,c
  5848  001526  D7F1               	goto	i2l2465
  5849  001528                     i2l1044:
  5850  001528  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
  5851  00152C  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  5852  001530  0012               	return		;funcret
  5853  001532                     __end_ofi2___lwmod:
  5854                           	opt stack 0
  5855                           pclatu	equ	0xFFB
  5856                           pclath	equ	0xFFA
  5857                           tblptru	equ	0xFF8
  5858                           tblptrh	equ	0xFF7
  5859                           tblptrl	equ	0xFF6
  5860                           tablat	equ	0xFF5
  5861                           prodh	equ	0xFF4
  5862                           prodl	equ	0xFF3
  5863                           intcon	equ	0xFF2
  5864                           postinc0	equ	0xFEE
  5865                           fsr0h	equ	0xFEA
  5866                           fsr0l	equ	0xFE9
  5867                           wreg	equ	0xFE8
  5868                           postdec1	equ	0xFE5
  5869                           fsr1h	equ	0xFE2
  5870                           fsr1l	equ	0xFE1
  5871                           indf2	equ	0xFDF
  5872                           postinc2	equ	0xFDE
  5873                           postdec2	equ	0xFDD
  5874                           plusw2	equ	0xFDB
  5875                           fsr2h	equ	0xFDA
  5876                           fsr2l	equ	0xFD9
  5877                           status	equ	0xFD8
  5878                           
  5879 ;; *************** function i2___lwdiv *****************
  5880 ;; Defined at:
  5881 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  dividend        2    0[COMRAM] unsigned int 
  5884 ;;  divisor         2    2[COMRAM] unsigned int 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  5887 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  2    0[COMRAM] unsigned int 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1
  5897 ;;      Params:         4       0       0
  5898 ;;      Locals:         3       0       0
  5899 ;;      Temps:          0       0       0
  5900 ;;      Totals:         7       0       0
  5901 ;;Total ram usage:        7 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		i2_Evaluate_Signs
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           	psect	text30
  5911  0013C6                     __ptext30:
  5912                           	opt stack 0
  5913  0013C6                     i2___lwdiv:
  5914                           	opt stack 20
  5915                           
  5916                           ;incstack = 0
  5917  0013C6  0E00               	movlw	0
  5918  0013C8  6E06               	movwf	i2___lwdiv@quotient+1,c
  5919  0013CA  0E00               	movlw	0
  5920  0013CC  6E05               	movwf	i2___lwdiv@quotient,c
  5921  0013CE  5003               	movf	i2___lwdiv@divisor,w,c
  5922  0013D0  1004               	iorwf	i2___lwdiv@divisor+1,w,c
  5923  0013D2  B4D8               	btfsc	status,2,c
  5924  0013D4  D01C               	goto	i2l1034
  5925  0013D6  0E01               	movlw	1
  5926  0013D8  6E07               	movwf	i2___lwdiv@counter,c
  5927  0013DA  D004               	goto	i2l2443
  5928  0013DC                     i2l2441:
  5929  0013DC  90D8               	bcf	status,0,c
  5930  0013DE  3603               	rlcf	i2___lwdiv@divisor,f,c
  5931  0013E0  3604               	rlcf	i2___lwdiv@divisor+1,f,c
  5932  0013E2  2A07               	incf	i2___lwdiv@counter,f,c
  5933  0013E4                     i2l2443:
  5934  0013E4  AE04               	btfss	i2___lwdiv@divisor+1,7,c
  5935  0013E6  D7FA               	goto	i2l2441
  5936  0013E8                     i2l2445:
  5937  0013E8  90D8               	bcf	status,0,c
  5938  0013EA  3605               	rlcf	i2___lwdiv@quotient,f,c
  5939  0013EC  3606               	rlcf	i2___lwdiv@quotient+1,f,c
  5940  0013EE  5003               	movf	i2___lwdiv@divisor,w,c
  5941  0013F0  5C01               	subwf	i2___lwdiv@dividend,w,c
  5942  0013F2  5004               	movf	i2___lwdiv@divisor+1,w,c
  5943  0013F4  5802               	subwfb	i2___lwdiv@dividend+1,w,c
  5944  0013F6  A0D8               	btfss	status,0,c
  5945  0013F8  D005               	goto	i2l2453
  5946  0013FA  5003               	movf	i2___lwdiv@divisor,w,c
  5947  0013FC  5E01               	subwf	i2___lwdiv@dividend,f,c
  5948  0013FE  5004               	movf	i2___lwdiv@divisor+1,w,c
  5949  001400  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
  5950  001402  8005               	bsf	i2___lwdiv@quotient,0,c
  5951  001404                     i2l2453:
  5952  001404  90D8               	bcf	status,0,c
  5953  001406  3204               	rrcf	i2___lwdiv@divisor+1,f,c
  5954  001408  3203               	rrcf	i2___lwdiv@divisor,f,c
  5955  00140A  2E07               	decfsz	i2___lwdiv@counter,f,c
  5956  00140C  D7ED               	goto	i2l2445
  5957  00140E                     i2l1034:
  5958  00140E  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
  5959  001412  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  5960  001416  0012               	return		;funcret
  5961  001418                     __end_ofi2___lwdiv:
  5962                           	opt stack 0
  5963                           pclatu	equ	0xFFB
  5964                           pclath	equ	0xFFA
  5965                           tblptru	equ	0xFF8
  5966                           tblptrh	equ	0xFF7
  5967                           tblptrl	equ	0xFF6
  5968                           tablat	equ	0xFF5
  5969                           prodh	equ	0xFF4
  5970                           prodl	equ	0xFF3
  5971                           intcon	equ	0xFF2
  5972                           postinc0	equ	0xFEE
  5973                           fsr0h	equ	0xFEA
  5974                           fsr0l	equ	0xFE9
  5975                           wreg	equ	0xFE8
  5976                           postdec1	equ	0xFE5
  5977                           fsr1h	equ	0xFE2
  5978                           fsr1l	equ	0xFE1
  5979                           indf2	equ	0xFDF
  5980                           postinc2	equ	0xFDE
  5981                           postdec2	equ	0xFDD
  5982                           plusw2	equ	0xFDB
  5983                           fsr2h	equ	0xFDA
  5984                           fsr2l	equ	0xFD9
  5985                           status	equ	0xFD8
  5986                           
  5987 ;; *************** function i2_Evaluate_Display *****************
  5988 ;; Defined at:
  5989 ;;		line 52 in file "display.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  size            1    wreg     unsigned char 
  5992 ;;  evaluate        2    8[COMRAM] PTR unsigned char 
  5993 ;;		 -> signs(3), string_delete(3), string_load(3), 
  5994 ;; Auto vars:     Size  Location     Type
  5995 ;;  size            1   14[COMRAM] unsigned char 
  5996 ;; Return value:  Size  Location     Type
  5997 ;;		None               void
  5998 ;; Registers used:
  5999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6000 ;; Tracked objects:
  6001 ;;		On entry : 0/0
  6002 ;;		On exit  : 0/0
  6003 ;;		Unchanged: 0/0
  6004 ;; Data sizes:     COMRAM   BANK0   BANK1
  6005 ;;      Params:         2       0       0
  6006 ;;      Locals:         1       0       0
  6007 ;;      Temps:          4       0       0
  6008 ;;      Totals:         7       0       0
  6009 ;;Total ram usage:        7 bytes
  6010 ;; Hardware stack levels used:    1
  6011 ;; Hardware stack levels required when called:    1
  6012 ;; This function calls:
  6013 ;;		i2_Set_Bits
  6014 ;; This function is called by:
  6015 ;;		i2_Evaluate_Signs
  6016 ;;		i2_Set_Display
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text31
  6021  00099A                     __ptext31:
  6022                           	opt stack 0
  6023  00099A                     i2_Evaluate_Display:
  6024                           	opt stack 19
  6025                           
  6026                           ;incstack = 0
  6027                           ;i2Evaluate_Display@size stored from wreg
  6028  00099A  6E0F               	movwf	i2Evaluate_Display@size,c
  6029                           
  6030                           ;display.c: 53: for(display_counter = size; display_counter > 0;
  6031  00099C  C00F  F042         	movff	i2Evaluate_Display@size,_display_counter
  6032                           
  6033                           ;display.c: 54: display_counter--) {
  6034  0009A0  D0C7               	goto	i2l2433
  6035  0009A2                     i2l431:
  6036                           
  6037                           ;display.c: 55: __nop();
  6038  0009A2  F000               	nop	
  6039                           
  6040                           ;display.c: 56: switch (evaluate[(display_counter - 1)]) {
  6041  0009A4  D07E               	goto	i2l2429
  6042  0009A6                     i2l2393:
  6043                           
  6044                           ;display.c: 58: Set_Bits("ABCDEF");
  6045  0009A6  0E27               	movlw	low STR_1
  6046  0009A8  6E01               	movwf	i2Set_Bits@bits,c
  6047  0009AA  0E02               	movlw	high STR_1
  6048  0009AC  6E02               	movwf	i2Set_Bits@bits+1,c
  6049  0009AE  EC10  F007         	call	i2_Set_Bits	;wreg free
  6050                           
  6051                           ;display.c: 59: break;
  6052  0009B2  D0BD               	goto	i2l2431
  6053  0009B4                     i2l2395:
  6054                           
  6055                           ;display.c: 61: Set_Bits("BC");
  6056  0009B4  0E67               	movlw	low (STR_8+1)
  6057  0009B6  6E01               	movwf	i2Set_Bits@bits,c
  6058  0009B8  0E02               	movlw	high (STR_8+1)
  6059  0009BA  6E02               	movwf	i2Set_Bits@bits+1,c
  6060  0009BC  EC10  F007         	call	i2_Set_Bits	;wreg free
  6061                           
  6062                           ;display.c: 62: break;
  6063  0009C0  D0B6               	goto	i2l2431
  6064  0009C2                     i2l2397:
  6065                           
  6066                           ;display.c: 64: Set_Bits("ABDEG");
  6067  0009C2  0E49               	movlw	low STR_3
  6068  0009C4  6E01               	movwf	i2Set_Bits@bits,c
  6069  0009C6  0E02               	movlw	high STR_3
  6070  0009C8  6E02               	movwf	i2Set_Bits@bits+1,c
  6071  0009CA  EC10  F007         	call	i2_Set_Bits	;wreg free
  6072                           
  6073                           ;display.c: 65: break;
  6074  0009CE  D0AF               	goto	i2l2431
  6075  0009D0                     i2l2399:
  6076                           
  6077                           ;display.c: 67: Set_Bits("ABCDG");
  6078  0009D0  0E43               	movlw	low STR_4
  6079  0009D2  6E01               	movwf	i2Set_Bits@bits,c
  6080  0009D4  0E02               	movlw	high STR_4
  6081  0009D6  6E02               	movwf	i2Set_Bits@bits+1,c
  6082  0009D8  EC10  F007         	call	i2_Set_Bits	;wreg free
  6083                           
  6084                           ;display.c: 68: break;
  6085  0009DC  D0A8               	goto	i2l2431
  6086  0009DE                     i2l2401:
  6087                           
  6088                           ;display.c: 70: Set_Bits("BCFG");
  6089  0009DE  0E61               	movlw	low STR_5
  6090  0009E0  6E01               	movwf	i2Set_Bits@bits,c
  6091  0009E2  0E02               	movlw	high STR_5
  6092  0009E4  6E02               	movwf	i2Set_Bits@bits+1,c
  6093  0009E6  EC10  F007         	call	i2_Set_Bits	;wreg free
  6094                           
  6095                           ;display.c: 71: break;
  6096  0009EA  D0A1               	goto	i2l2431
  6097  0009EC                     i2l2403:
  6098                           
  6099                           ;display.c: 73: Set_Bits("ACDFG");
  6100  0009EC  0E4F               	movlw	low STR_6
  6101  0009EE  6E01               	movwf	i2Set_Bits@bits,c
  6102  0009F0  0E02               	movlw	high STR_6
  6103  0009F2  6E02               	movwf	i2Set_Bits@bits+1,c
  6104  0009F4  EC10  F007         	call	i2_Set_Bits	;wreg free
  6105                           
  6106                           ;display.c: 74: break;
  6107  0009F8  D09A               	goto	i2l2431
  6108  0009FA                     i2l2405:
  6109                           
  6110                           ;display.c: 76: Set_Bits("ACDEFG");
  6111  0009FA  0E3C               	movlw	low STR_7
  6112  0009FC  6E01               	movwf	i2Set_Bits@bits,c
  6113  0009FE  0E02               	movlw	high STR_7
  6114  000A00  6E02               	movwf	i2Set_Bits@bits+1,c
  6115  000A02  EC10  F007         	call	i2_Set_Bits	;wreg free
  6116                           
  6117                           ;display.c: 77: break;
  6118  000A06  D093               	goto	i2l2431
  6119  000A08                     i2l2407:
  6120                           
  6121                           ;display.c: 79: Set_Bits("ABC");
  6122  000A08  0E66               	movlw	low STR_8
  6123  000A0A  6E01               	movwf	i2Set_Bits@bits,c
  6124  000A0C  0E02               	movlw	high STR_8
  6125  000A0E  6E02               	movwf	i2Set_Bits@bits+1,c
  6126  000A10  EC10  F007         	call	i2_Set_Bits	;wreg free
  6127                           
  6128                           ;display.c: 80: break;
  6129  000A14  D08C               	goto	i2l2431
  6130  000A16                     i2l2409:
  6131                           
  6132                           ;display.c: 82: Set_Bits("ABCDEFG");
  6133  000A16  0E1F               	movlw	low STR_9
  6134  000A18  6E01               	movwf	i2Set_Bits@bits,c
  6135  000A1A  0E02               	movlw	high STR_9
  6136  000A1C  6E02               	movwf	i2Set_Bits@bits+1,c
  6137  000A1E  EC10  F007         	call	i2_Set_Bits	;wreg free
  6138                           
  6139                           ;display.c: 83: break;
  6140  000A22  D085               	goto	i2l2431
  6141  000A24                     i2l2411:
  6142                           
  6143                           ;display.c: 85: Set_Bits("ABCDFG");
  6144  000A24  0E2E               	movlw	low STR_10
  6145  000A26  6E01               	movwf	i2Set_Bits@bits,c
  6146  000A28  0E02               	movlw	high STR_10
  6147  000A2A  6E02               	movwf	i2Set_Bits@bits+1,c
  6148  000A2C  EC10  F007         	call	i2_Set_Bits	;wreg free
  6149                           
  6150                           ;display.c: 86: break;
  6151  000A30  D07E               	goto	i2l2431
  6152  000A32                     i2l2413:
  6153                           
  6154                           ;display.c: 88: Set_Bits("ABCEFG");
  6155  000A32  0E35               	movlw	low STR_11
  6156  000A34  6E01               	movwf	i2Set_Bits@bits,c
  6157  000A36  0E02               	movlw	high STR_11
  6158  000A38  6E02               	movwf	i2Set_Bits@bits+1,c
  6159  000A3A  EC10  F007         	call	i2_Set_Bits	;wreg free
  6160                           
  6161                           ;display.c: 89: break;
  6162  000A3E  D077               	goto	i2l2431
  6163  000A40                     i2l2415:
  6164                           
  6165                           ;display.c: 91: Set_Bits("ABCDEF");
  6166  000A40  0E27               	movlw	low STR_1
  6167  000A42  6E01               	movwf	i2Set_Bits@bits,c
  6168  000A44  0E02               	movlw	high STR_1
  6169  000A46  6E02               	movwf	i2Set_Bits@bits+1,c
  6170  000A48  EC10  F007         	call	i2_Set_Bits	;wreg free
  6171                           
  6172                           ;display.c: 92: break;
  6173  000A4C  D070               	goto	i2l2431
  6174  000A4E                     i2l2417:
  6175                           
  6176                           ;display.c: 94: Set_Bits("ADEFG");
  6177  000A4E  0E5B               	movlw	low STR_13
  6178  000A50  6E01               	movwf	i2Set_Bits@bits,c
  6179  000A52  0E02               	movlw	high STR_13
  6180  000A54  6E02               	movwf	i2Set_Bits@bits+1,c
  6181  000A56  EC10  F007         	call	i2_Set_Bits	;wreg free
  6182                           
  6183                           ;display.c: 95: break;
  6184  000A5A  D069               	goto	i2l2431
  6185  000A5C                     i2l2419:
  6186                           
  6187                           ;display.c: 97: Set_Bits("DEF");
  6188  000A5C  0E2A               	movlw	low (STR_1+3)
  6189  000A5E  6E01               	movwf	i2Set_Bits@bits,c
  6190  000A60  0E02               	movlw	high (STR_1+3)
  6191  000A62  6E02               	movwf	i2Set_Bits@bits+1,c
  6192  000A64  EC10  F007         	call	i2_Set_Bits	;wreg free
  6193                           
  6194                           ;display.c: 98: break;
  6195  000A68  D062               	goto	i2l2431
  6196  000A6A                     i2l2421:
  6197                           
  6198                           ;display.c: 100: Set_Bits("ABCDEF");
  6199  000A6A  0E27               	movlw	low STR_1
  6200  000A6C  6E01               	movwf	i2Set_Bits@bits,c
  6201  000A6E  0E02               	movlw	high STR_1
  6202  000A70  6E02               	movwf	i2Set_Bits@bits+1,c
  6203  000A72  EC10  F007         	call	i2_Set_Bits	;wreg free
  6204                           
  6205                           ;display.c: 101: break;
  6206  000A76  D05B               	goto	i2l2431
  6207  000A78                     i2l2423:
  6208                           
  6209                           ;display.c: 103: Set_Bits("ABEFG");
  6210  000A78  0E55               	movlw	low STR_16
  6211  000A7A  6E01               	movwf	i2Set_Bits@bits,c
  6212  000A7C  0E02               	movlw	high STR_16
  6213  000A7E  6E02               	movwf	i2Set_Bits@bits+1,c
  6214  000A80  EC10  F007         	call	i2_Set_Bits	;wreg free
  6215                           
  6216                           ;display.c: 104: break;
  6217  000A84  D054               	goto	i2l2431
  6218  000A86                     i2l2425:
  6219                           
  6220                           ;display.c: 106: Set_Bits("G");
  6221  000A86  0E47               	movlw	low (STR_4+4)
  6222  000A88  6E01               	movwf	i2Set_Bits@bits,c
  6223  000A8A  0E02               	movlw	high (STR_4+4)
  6224  000A8C  6E02               	movwf	i2Set_Bits@bits+1,c
  6225  000A8E  EC10  F007         	call	i2_Set_Bits	;wreg free
  6226                           
  6227                           ;display.c: 107: break;
  6228  000A92  D04D               	goto	i2l2431
  6229  000A94                     i2l2427:
  6230                           
  6231                           ;display.c: 109: Set_Bits("0");
  6232  000A94  0E6A               	movlw	low STR_18
  6233  000A96  6E01               	movwf	i2Set_Bits@bits,c
  6234  000A98  0E02               	movlw	high STR_18
  6235  000A9A  6E02               	movwf	i2Set_Bits@bits+1,c
  6236  000A9C  EC10  F007         	call	i2_Set_Bits	;wreg free
  6237                           
  6238                           ;display.c: 110: }
  6239  000AA0  D046               	goto	i2l2431
  6240  000AA2                     i2l2429:
  6241  000AA2  0EFF               	movlw	255
  6242  000AA4  6E0B               	movwf	??i2_Evaluate_Display& (0+255),c
  6243  000AA6  0EFF               	movlw	255
  6244  000AA8  6E0C               	movwf	(??i2_Evaluate_Display+1)& (0+255),c
  6245  000AAA  5042               	movf	_display_counter,w,c
  6246  000AAC  6E0D               	movwf	(??i2_Evaluate_Display+2)& (0+255),c
  6247  000AAE  6A0E               	clrf	(??i2_Evaluate_Display+3)& (0+255),c
  6248  000AB0  500B               	movf	??i2_Evaluate_Display,w,c
  6249  000AB2  260D               	addwf	??i2_Evaluate_Display+2,f,c
  6250  000AB4  500C               	movf	??i2_Evaluate_Display+1,w,c
  6251  000AB6  220E               	addwfc	??i2_Evaluate_Display+3,f,c
  6252  000AB8  500D               	movf	??i2_Evaluate_Display+2,w,c
  6253  000ABA  2409               	addwf	i2Evaluate_Display@evaluate,w,c
  6254  000ABC  6ED9               	movwf	fsr2l,c
  6255  000ABE  500E               	movf	??i2_Evaluate_Display+3,w,c
  6256  000AC0  200A               	addwfc	i2Evaluate_Display@evaluate+1,w,c
  6257  000AC2  6EDA               	movwf	fsr2h,c
  6258  000AC4  50DF               	movf	indf2,w,c
  6259                           
  6260                           ; Switch size 1, requested type "space"
  6261                           ; Number of cases is 17, Range of values is 45 to 80
  6262                           ; switch strategies available:
  6263                           ; Name         Instructions Cycles
  6264                           ; simple_byte           52    27 (average)
  6265                           ;	Chosen strategy is simple_byte
  6266  000AC6  0A2D               	xorlw	45	; case 45
  6267  000AC8  B4D8               	btfsc	status,2,c
  6268  000ACA  D7DD               	goto	i2l2425
  6269  000ACC  0A1D               	xorlw	29	; case 48
  6270  000ACE  B4D8               	btfsc	status,2,c
  6271  000AD0  D76A               	goto	i2l2393
  6272  000AD2  0A01               	xorlw	1	; case 49
  6273  000AD4  B4D8               	btfsc	status,2,c
  6274  000AD6  D76E               	goto	i2l2395
  6275  000AD8  0A03               	xorlw	3	; case 50
  6276  000ADA  B4D8               	btfsc	status,2,c
  6277  000ADC  D772               	goto	i2l2397
  6278  000ADE  0A01               	xorlw	1	; case 51
  6279  000AE0  B4D8               	btfsc	status,2,c
  6280  000AE2  D776               	goto	i2l2399
  6281  000AE4  0A07               	xorlw	7	; case 52
  6282  000AE6  B4D8               	btfsc	status,2,c
  6283  000AE8  D77A               	goto	i2l2401
  6284  000AEA  0A01               	xorlw	1	; case 53
  6285  000AEC  B4D8               	btfsc	status,2,c
  6286  000AEE  D77E               	goto	i2l2403
  6287  000AF0  0A03               	xorlw	3	; case 54
  6288  000AF2  B4D8               	btfsc	status,2,c
  6289  000AF4  D782               	goto	i2l2405
  6290  000AF6  0A01               	xorlw	1	; case 55
  6291  000AF8  B4D8               	btfsc	status,2,c
  6292  000AFA  D786               	goto	i2l2407
  6293  000AFC  0A0F               	xorlw	15	; case 56
  6294  000AFE  B4D8               	btfsc	status,2,c
  6295  000B00  D78A               	goto	i2l2409
  6296  000B02  0A01               	xorlw	1	; case 57
  6297  000B04  B4D8               	btfsc	status,2,c
  6298  000B06  D78E               	goto	i2l2411
  6299  000B08  0A78               	xorlw	120	; case 65
  6300  000B0A  B4D8               	btfsc	status,2,c
  6301  000B0C  D792               	goto	i2l2413
  6302  000B0E  0A05               	xorlw	5	; case 68
  6303  000B10  B4D8               	btfsc	status,2,c
  6304  000B12  D796               	goto	i2l2415
  6305  000B14  0A01               	xorlw	1	; case 69
  6306  000B16  B4D8               	btfsc	status,2,c
  6307  000B18  D79A               	goto	i2l2417
  6308  000B1A  0A09               	xorlw	9	; case 76
  6309  000B1C  B4D8               	btfsc	status,2,c
  6310  000B1E  D79E               	goto	i2l2419
  6311  000B20  0A03               	xorlw	3	; case 79
  6312  000B22  B4D8               	btfsc	status,2,c
  6313  000B24  D7A2               	goto	i2l2421
  6314  000B26  0A1F               	xorlw	31	; case 80
  6315  000B28  B4D8               	btfsc	status,2,c
  6316  000B2A  D7A6               	goto	i2l2423
  6317  000B2C  D7B3               	goto	i2l2427
  6318  000B2E                     i2l2431:
  6319  000B2E  0642               	decf	_display_counter,f,c
  6320  000B30                     i2l2433:
  6321  000B30  5042               	movf	_display_counter,w,c
  6322  000B32  B4D8               	btfsc	status,2,c
  6323  000B34  0012               	return	
  6324  000B36  D735               	goto	i2l431
  6325  000B38                     __end_ofi2_Evaluate_Display:
  6326                           	opt stack 0
  6327                           pclatu	equ	0xFFB
  6328                           pclath	equ	0xFFA
  6329                           tblptru	equ	0xFF8
  6330                           tblptrh	equ	0xFF7
  6331                           tblptrl	equ	0xFF6
  6332                           tablat	equ	0xFF5
  6333                           prodh	equ	0xFF4
  6334                           prodl	equ	0xFF3
  6335                           intcon	equ	0xFF2
  6336                           postinc0	equ	0xFEE
  6337                           fsr0h	equ	0xFEA
  6338                           fsr0l	equ	0xFE9
  6339                           wreg	equ	0xFE8
  6340                           postdec1	equ	0xFE5
  6341                           fsr1h	equ	0xFE2
  6342                           fsr1l	equ	0xFE1
  6343                           indf2	equ	0xFDF
  6344                           postinc2	equ	0xFDE
  6345                           postdec2	equ	0xFDD
  6346                           plusw2	equ	0xFDB
  6347                           fsr2h	equ	0xFDA
  6348                           fsr2l	equ	0xFD9
  6349                           status	equ	0xFD8
  6350                           
  6351 ;; *************** function i2_Set_Bits *****************
  6352 ;; Defined at:
  6353 ;;		line 12 in file "display.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;  bits            2    0[COMRAM] PTR const unsigned char 
  6356 ;;		 -> STR_18(2), STR_17(2), STR_16(6), STR_15(7), 
  6357 ;;		 -> STR_14(4), STR_13(6), STR_12(7), STR_11(7), 
  6358 ;;		 -> STR_10(7), STR_9(8), STR_8(4), STR_7(7), 
  6359 ;;		 -> STR_6(6), STR_5(5), STR_4(6), STR_3(6), 
  6360 ;;		 -> STR_2(3), STR_1(7), 
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;  Set_Bits        1    7[COMRAM] unsigned char 
  6363 ;;  Set_Bits        1    6[COMRAM] unsigned char 
  6364 ;; Return value:  Size  Location     Type
  6365 ;;		None               void
  6366 ;; Registers used:
  6367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMRAM   BANK0   BANK1
  6373 ;;      Params:         2       0       0
  6374 ;;      Locals:         2       0       0
  6375 ;;      Temps:          4       0       0
  6376 ;;      Totals:         8       0       0
  6377 ;;Total ram usage:        8 bytes
  6378 ;; Hardware stack levels used:    1
  6379 ;; This function calls:
  6380 ;;		Nothing
  6381 ;; This function is called by:
  6382 ;;		i2_Evaluate_Display
  6383 ;; This function uses a non-reentrant model
  6384 ;;
  6385                           
  6386                           	psect	text32
  6387  000E20                     __ptext32:
  6388                           	opt stack 0
  6389  000E20                     i2_Set_Bits:
  6390                           	opt stack 19
  6391                           
  6392                           ;display.c: 13: unsigned char Bitoutput = 0;
  6393                           
  6394                           ;incstack = 0
  6395  000E20  0E00               	movlw	0
  6396  000E22  6E08               	movwf	i2Set_Bits@Bitoutput,c
  6397                           
  6398                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  6399  000E24  0E00               	movlw	0
  6400  000E26  6E07               	movwf	i2Set_Bits@bitcount,c
  6401                           
  6402                           ;display.c: 15: bitcount++) {
  6403  000E28  D034               	goto	i2l2327
  6404  000E2A                     i2l2307:
  6405                           
  6406                           ;display.c: 18: Bitoutput |= 0b00000001;
  6407  000E2A  8008               	bsf	i2Set_Bits@Bitoutput,0,c
  6408                           
  6409                           ;display.c: 19: break;
  6410  000E2C  D031               	goto	i2l2325
  6411  000E2E                     i2l2309:
  6412                           
  6413                           ;display.c: 21: Bitoutput |= 0b00000010;
  6414  000E2E  8208               	bsf	i2Set_Bits@Bitoutput,1,c
  6415                           
  6416                           ;display.c: 22: break;
  6417  000E30  D02F               	goto	i2l2325
  6418  000E32                     i2l2311:
  6419                           
  6420                           ;display.c: 24: Bitoutput |= 0b00000100;
  6421  000E32  8408               	bsf	i2Set_Bits@Bitoutput,2,c
  6422                           
  6423                           ;display.c: 25: break;
  6424  000E34  D02D               	goto	i2l2325
  6425  000E36                     i2l2313:
  6426                           
  6427                           ;display.c: 27: Bitoutput |= 0b00001000;
  6428  000E36  8608               	bsf	i2Set_Bits@Bitoutput,3,c
  6429                           
  6430                           ;display.c: 28: break;
  6431  000E38  D02B               	goto	i2l2325
  6432  000E3A                     i2l2315:
  6433                           
  6434                           ;display.c: 30: Bitoutput |= 0b00010000;
  6435  000E3A  8808               	bsf	i2Set_Bits@Bitoutput,4,c
  6436                           
  6437                           ;display.c: 31: break;
  6438  000E3C  D029               	goto	i2l2325
  6439  000E3E                     i2l2317:
  6440                           
  6441                           ;display.c: 33: Bitoutput |= 0b00100000;
  6442  000E3E  8A08               	bsf	i2Set_Bits@Bitoutput,5,c
  6443                           
  6444                           ;display.c: 34: break;
  6445  000E40  D027               	goto	i2l2325
  6446  000E42                     i2l2319:
  6447                           
  6448                           ;display.c: 36: Bitoutput |= 0b01000000;
  6449  000E42  8C08               	bsf	i2Set_Bits@Bitoutput,6,c
  6450                           
  6451                           ;display.c: 40: }
  6452                           
  6453                           ;display.c: 39: break;
  6454                           
  6455                           ;display.c: 38: default:
  6456                           
  6457                           ;display.c: 37: break;
  6458  000E44  D025               	goto	i2l2325
  6459  000E46                     i2l2323:
  6460  000E46  5007               	movf	i2Set_Bits@bitcount,w,c
  6461  000E48  0D01               	mullw	1
  6462  000E4A  C001  F003         	movff	i2Set_Bits@bits,??i2_Set_Bits
  6463  000E4E  C002  F004         	movff	i2Set_Bits@bits+1,??i2_Set_Bits+1
  6464  000E52  50F3               	movf	prodl,w,c
  6465  000E54  2603               	addwf	??i2_Set_Bits,f,c
  6466  000E56  50F4               	movf	prodh,w,c
  6467  000E58  2204               	addwfc	??i2_Set_Bits+1,f,c
  6468  000E5A  C003  FFF6         	movff	??i2_Set_Bits,tblptrl
  6469  000E5E  C004  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6470  000E62                     	if	0	;tblptru may be non-zero
  6471  000E62                     	endif
  6472  000E62                     	if	0	;tblptru may be non-zero
  6473  000E62                     	endif
  6474  000E62  0008               	tblrd		*
  6475  000E64  50F5               	movf	tablat,w,c
  6476                           
  6477                           ; Switch size 1, requested type "space"
  6478                           ; Number of cases is 7, Range of values is 65 to 71
  6479                           ; switch strategies available:
  6480                           ; Name         Instructions Cycles
  6481                           ; simple_byte           22    12 (average)
  6482                           ;	Chosen strategy is simple_byte
  6483  000E66  0A41               	xorlw	65	; case 65
  6484  000E68  B4D8               	btfsc	status,2,c
  6485  000E6A  D7DF               	goto	i2l2307
  6486  000E6C  0A03               	xorlw	3	; case 66
  6487  000E6E  B4D8               	btfsc	status,2,c
  6488  000E70  D7DE               	goto	i2l2309
  6489  000E72  0A01               	xorlw	1	; case 67
  6490  000E74  B4D8               	btfsc	status,2,c
  6491  000E76  D7DD               	goto	i2l2311
  6492  000E78  0A07               	xorlw	7	; case 68
  6493  000E7A  B4D8               	btfsc	status,2,c
  6494  000E7C  D7DC               	goto	i2l2313
  6495  000E7E  0A01               	xorlw	1	; case 69
  6496  000E80  B4D8               	btfsc	status,2,c
  6497  000E82  D7DB               	goto	i2l2315
  6498  000E84  0A03               	xorlw	3	; case 70
  6499  000E86  B4D8               	btfsc	status,2,c
  6500  000E88  D7DA               	goto	i2l2317
  6501  000E8A  0A01               	xorlw	1	; case 71
  6502  000E8C  B4D8               	btfsc	status,2,c
  6503  000E8E  D7D9               	goto	i2l2319
  6504  000E90                     i2l2325:
  6505  000E90  2A07               	incf	i2Set_Bits@bitcount,f,c
  6506  000E92                     i2l2327:
  6507  000E92  5007               	movf	i2Set_Bits@bitcount,w,c
  6508  000E94  0D01               	mullw	1
  6509  000E96  C001  F003         	movff	i2Set_Bits@bits,??i2_Set_Bits
  6510  000E9A  C002  F004         	movff	i2Set_Bits@bits+1,??i2_Set_Bits+1
  6511  000E9E  50F3               	movf	prodl,w,c
  6512  000EA0  2603               	addwf	??i2_Set_Bits,f,c
  6513  000EA2  50F4               	movf	prodh,w,c
  6514  000EA4  2204               	addwfc	??i2_Set_Bits+1,f,c
  6515  000EA6  C003  FFF6         	movff	??i2_Set_Bits,tblptrl
  6516  000EAA  C004  FFF7         	movff	??i2_Set_Bits+1,tblptrh
  6517  000EAE                     	if	0	;tblptru may be non-zero
  6518  000EAE                     	endif
  6519  000EAE                     	if	0	;tblptru may be non-zero
  6520  000EAE                     	endif
  6521  000EAE  0008               	tblrd		*
  6522  000EB0  50F5               	movf	tablat,w,c
  6523  000EB2  0900               	iorlw	0
  6524  000EB4  A4D8               	btfss	status,2,c
  6525  000EB6  D7C7               	goto	i2l2323
  6526                           
  6527                           ;display.c: 41: }
  6528                           ;display.c: 42: pixels[(display_counter - 1)] = Bitoutput;
  6529  000EB8  0EFF               	movlw	255
  6530  000EBA  6E03               	movwf	??i2_Set_Bits& (0+255),c
  6531  000EBC  0EFF               	movlw	255
  6532  000EBE  6E04               	movwf	(??i2_Set_Bits+1)& (0+255),c
  6533  000EC0  5042               	movf	_display_counter,w,c
  6534  000EC2  6E05               	movwf	(??i2_Set_Bits+2)& (0+255),c
  6535  000EC4  6A06               	clrf	(??i2_Set_Bits+3)& (0+255),c
  6536  000EC6  5003               	movf	??i2_Set_Bits,w,c
  6537  000EC8  2605               	addwf	??i2_Set_Bits+2,f,c
  6538  000ECA  5004               	movf	??i2_Set_Bits+1,w,c
  6539  000ECC  2206               	addwfc	??i2_Set_Bits+3,f,c
  6540  000ECE  0E39               	movlw	low _pixels
  6541  000ED0  2405               	addwf	??i2_Set_Bits+2,w,c
  6542  000ED2  6ED9               	movwf	fsr2l,c
  6543  000ED4  0E00               	movlw	high _pixels
  6544  000ED6  2006               	addwfc	??i2_Set_Bits+3,w,c
  6545  000ED8  6EDA               	movwf	fsr2h,c
  6546  000EDA  C008  FFDF         	movff	i2Set_Bits@Bitoutput,indf2
  6547  000EDE  0012               	return		;funcret
  6548  000EE0                     __end_ofi2_Set_Bits:
  6549                           	opt stack 0
  6550                           pclatu	equ	0xFFB
  6551                           pclath	equ	0xFFA
  6552                           tblptru	equ	0xFF8
  6553                           tblptrh	equ	0xFF7
  6554                           tblptrl	equ	0xFF6
  6555                           tablat	equ	0xFF5
  6556                           prodh	equ	0xFF4
  6557                           prodl	equ	0xFF3
  6558                           intcon	equ	0xFF2
  6559                           postinc0	equ	0xFEE
  6560                           fsr0h	equ	0xFEA
  6561                           fsr0l	equ	0xFE9
  6562                           wreg	equ	0xFE8
  6563                           postdec1	equ	0xFE5
  6564                           fsr1h	equ	0xFE2
  6565                           fsr1l	equ	0xFE1
  6566                           indf2	equ	0xFDF
  6567                           postinc2	equ	0xFDE
  6568                           postdec2	equ	0xFDD
  6569                           plusw2	equ	0xFDB
  6570                           fsr2h	equ	0xFDA
  6571                           fsr2l	equ	0xFD9
  6572                           status	equ	0xFD8
  6573                           
  6574 ;; *************** function i2_Check_Detonators *****************
  6575 ;; Defined at:
  6576 ;;		line 25 in file "ignition.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;		None
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;		None
  6581 ;; Return value:  Size  Location     Type
  6582 ;;		None               void
  6583 ;; Registers used:
  6584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMRAM   BANK0   BANK1
  6590 ;;      Params:         0       0       0
  6591 ;;      Locals:         0       0       0
  6592 ;;      Temps:          0       0       0
  6593 ;;      Totals:         0       0       0
  6594 ;;Total ram usage:        0 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    1
  6597 ;; This function calls:
  6598 ;;		i2_Transmit
  6599 ;; This function is called by:
  6600 ;;		_Isr
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text33
  6605  0015A6                     __ptext33:
  6606                           	opt stack 0
  6607  0015A6                     i2_Check_Detonators:
  6608                           	opt stack 21
  6609                           
  6610                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  6611                           
  6612                           ;incstack = 0
  6613  0015A6  0E54               	movlw	84
  6614  0015A8  6E01               	movwf	i2Transmit@operation,c
  6615  0015AA  5037               	movf	_check_counter,w,c
  6616  0015AC  0D06               	mullw	6
  6617  0015AE  0E01               	movlw	1
  6618  0015B0  26F3               	addwf	prodl,f,c
  6619  0015B2  0E00               	movlw	0
  6620  0015B4  22F4               	addwfc	prodh,f,c
  6621  0015B6  0E00               	movlw	low _pin
  6622  0015B8  24F3               	addwf	prodl,w,c
  6623  0015BA  6ED9               	movwf	fsr2l,c
  6624  0015BC  0E01               	movlw	high _pin
  6625  0015BE  20F4               	addwfc	prodh,w,c
  6626  0015C0  6EDA               	movwf	fsr2h,c
  6627  0015C2  50DF               	movf	indf2,w,c
  6628  0015C4  6E02               	movwf	i2Transmit@port,c
  6629  0015C6  5037               	movf	_check_counter,w,c
  6630  0015C8  0D06               	mullw	6
  6631  0015CA  0E00               	movlw	low _pin
  6632  0015CC  24F3               	addwf	prodl,w,c
  6633  0015CE  6ED9               	movwf	fsr2l,c
  6634  0015D0  0E01               	movlw	high _pin
  6635  0015D2  20F4               	addwfc	prodh,w,c
  6636  0015D4  6EDA               	movwf	fsr2h,c
  6637  0015D6  50DF               	movf	indf2,w,c
  6638  0015D8  ECEF  F00A         	call	i2_Transmit
  6639  0015DC  0012               	return		;funcret
  6640  0015DE                     __end_ofi2_Check_Detonators:
  6641                           	opt stack 0
  6642                           pclatu	equ	0xFFB
  6643                           pclath	equ	0xFFA
  6644                           tblptru	equ	0xFF8
  6645                           tblptrh	equ	0xFF7
  6646                           tblptrl	equ	0xFF6
  6647                           tablat	equ	0xFF5
  6648                           prodh	equ	0xFF4
  6649                           prodl	equ	0xFF3
  6650                           intcon	equ	0xFF2
  6651                           postinc0	equ	0xFEE
  6652                           fsr0h	equ	0xFEA
  6653                           fsr0l	equ	0xFE9
  6654                           wreg	equ	0xFE8
  6655                           postdec1	equ	0xFE5
  6656                           fsr1h	equ	0xFE2
  6657                           fsr1l	equ	0xFE1
  6658                           indf2	equ	0xFDF
  6659                           postinc2	equ	0xFDE
  6660                           postdec2	equ	0xFDD
  6661                           plusw2	equ	0xFDB
  6662                           fsr2h	equ	0xFDA
  6663                           fsr2l	equ	0xFD9
  6664                           status	equ	0xFD8
  6665                           
  6666 ;; *************** function ___awdiv *****************
  6667 ;; Defined at:
  6668 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;  dividend        2    0[COMRAM] int 
  6671 ;;  divisor         2    2[COMRAM] int 
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;  quotient        2    6[COMRAM] int 
  6674 ;;  sign            1    5[COMRAM] unsigned char 
  6675 ;;  counter         1    4[COMRAM] unsigned char 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  2    0[COMRAM] int 
  6678 ;; Registers used:
  6679 ;;		wreg, status,2, status,0
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1
  6685 ;;      Params:         4       0       0
  6686 ;;      Locals:         4       0       0
  6687 ;;      Temps:          0       0       0
  6688 ;;      Totals:         8       0       0
  6689 ;;Total ram usage:        8 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_Isr
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text34
  6699  001030                     __ptext34:
  6700                           	opt stack 0
  6701  001030                     ___awdiv:
  6702                           	opt stack 22
  6703                           
  6704                           ;incstack = 0
  6705  001030  0E00               	movlw	0
  6706  001032  6E06               	movwf	___awdiv@sign,c
  6707  001034  AE04               	btfss	___awdiv@divisor+1,7,c
  6708  001036  D006               	goto	i2l2753
  6709  001038  6C03               	negf	___awdiv@divisor,c
  6710  00103A  1E04               	comf	___awdiv@divisor+1,f,c
  6711  00103C  B0D8               	btfsc	status,0,c
  6712  00103E  2A04               	incf	___awdiv@divisor+1,f,c
  6713  001040  0E01               	movlw	1
  6714  001042  6E06               	movwf	___awdiv@sign,c
  6715  001044                     i2l2753:
  6716  001044  AE02               	btfss	___awdiv@dividend+1,7,c
  6717  001046  D006               	goto	i2l2759
  6718  001048  6C01               	negf	___awdiv@dividend,c
  6719  00104A  1E02               	comf	___awdiv@dividend+1,f,c
  6720  00104C  B0D8               	btfsc	status,0,c
  6721  00104E  2A02               	incf	___awdiv@dividend+1,f,c
  6722  001050  0E01               	movlw	1
  6723  001052  1A06               	xorwf	___awdiv@sign,f,c
  6724  001054                     i2l2759:
  6725  001054  0E00               	movlw	0
  6726  001056  6E08               	movwf	___awdiv@quotient+1,c
  6727  001058  0E00               	movlw	0
  6728  00105A  6E07               	movwf	___awdiv@quotient,c
  6729  00105C  5003               	movf	___awdiv@divisor,w,c
  6730  00105E  1004               	iorwf	___awdiv@divisor+1,w,c
  6731  001060  B4D8               	btfsc	status,2,c
  6732  001062  D01C               	goto	i2l2781
  6733  001064  0E01               	movlw	1
  6734  001066  6E05               	movwf	___awdiv@counter,c
  6735  001068  D004               	goto	i2l2767
  6736  00106A                     i2l2765:
  6737  00106A  90D8               	bcf	status,0,c
  6738  00106C  3603               	rlcf	___awdiv@divisor,f,c
  6739  00106E  3604               	rlcf	___awdiv@divisor+1,f,c
  6740  001070  2A05               	incf	___awdiv@counter,f,c
  6741  001072                     i2l2767:
  6742  001072  AE04               	btfss	___awdiv@divisor+1,7,c
  6743  001074  D7FA               	goto	i2l2765
  6744  001076                     i2l2769:
  6745  001076  90D8               	bcf	status,0,c
  6746  001078  3607               	rlcf	___awdiv@quotient,f,c
  6747  00107A  3608               	rlcf	___awdiv@quotient+1,f,c
  6748  00107C  5003               	movf	___awdiv@divisor,w,c
  6749  00107E  5C01               	subwf	___awdiv@dividend,w,c
  6750  001080  5004               	movf	___awdiv@divisor+1,w,c
  6751  001082  5802               	subwfb	___awdiv@dividend+1,w,c
  6752  001084  A0D8               	btfss	status,0,c
  6753  001086  D005               	goto	i2l2777
  6754  001088  5003               	movf	___awdiv@divisor,w,c
  6755  00108A  5E01               	subwf	___awdiv@dividend,f,c
  6756  00108C  5004               	movf	___awdiv@divisor+1,w,c
  6757  00108E  5A02               	subwfb	___awdiv@dividend+1,f,c
  6758  001090  8007               	bsf	___awdiv@quotient,0,c
  6759  001092                     i2l2777:
  6760  001092  90D8               	bcf	status,0,c
  6761  001094  3204               	rrcf	___awdiv@divisor+1,f,c
  6762  001096  3203               	rrcf	___awdiv@divisor,f,c
  6763  001098  2E05               	decfsz	___awdiv@counter,f,c
  6764  00109A  D7ED               	goto	i2l2769
  6765  00109C                     i2l2781:
  6766  00109C  5006               	movf	___awdiv@sign,w,c
  6767  00109E  B4D8               	btfsc	status,2,c
  6768  0010A0  D004               	goto	i2l2785
  6769  0010A2  6C07               	negf	___awdiv@quotient,c
  6770  0010A4  1E08               	comf	___awdiv@quotient+1,f,c
  6771  0010A6  B0D8               	btfsc	status,0,c
  6772  0010A8  2A08               	incf	___awdiv@quotient+1,f,c
  6773  0010AA                     i2l2785:
  6774  0010AA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6775  0010AE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6776  0010B2  0012               	return	
  6777  0010B4                     __end_of___awdiv:
  6778                           	opt stack 0
  6779                           pclatu	equ	0xFFB
  6780                           pclath	equ	0xFFA
  6781                           tblptru	equ	0xFF8
  6782                           tblptrh	equ	0xFF7
  6783                           tblptrl	equ	0xFF6
  6784                           tablat	equ	0xFF5
  6785                           prodh	equ	0xFF4
  6786                           prodl	equ	0xFF3
  6787                           intcon	equ	0xFF2
  6788                           postinc0	equ	0xFEE
  6789                           fsr0h	equ	0xFEA
  6790                           fsr0l	equ	0xFE9
  6791                           wreg	equ	0xFE8
  6792                           postdec1	equ	0xFE5
  6793                           fsr1h	equ	0xFE2
  6794                           fsr1l	equ	0xFE1
  6795                           indf2	equ	0xFDF
  6796                           postinc2	equ	0xFDE
  6797                           postdec2	equ	0xFDD
  6798                           plusw2	equ	0xFDB
  6799                           fsr2h	equ	0xFDA
  6800                           fsr2l	equ	0xFD9
  6801                           status	equ	0xFD8
  6802                           
  6803 ;; *************** function _Receive_Dump *****************
  6804 ;; Defined at:
  6805 ;;		line 46 in file "communication.c"
  6806 ;; Parameters:    Size  Location     Type
  6807 ;;		None
  6808 ;; Auto vars:     Size  Location     Type
  6809 ;;  dump            1    0[COMRAM] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;		None               void
  6812 ;; Registers used:
  6813 ;;		None
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMRAM   BANK0   BANK1
  6819 ;;      Params:         0       0       0
  6820 ;;      Locals:         1       0       0
  6821 ;;      Temps:          0       0       0
  6822 ;;      Totals:         1       0       0
  6823 ;;Total ram usage:        1 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; This function calls:
  6826 ;;		Nothing
  6827 ;; This function is called by:
  6828 ;;		_Isr
  6829 ;; This function uses a non-reentrant model
  6830 ;;
  6831                           
  6832                           	psect	text35
  6833  001738                     __ptext35:
  6834                           	opt stack 0
  6835  001738                     _Receive_Dump:
  6836                           	opt stack 22
  6837                           
  6838                           ;communication.c: 47: unsigned char dump;
  6839                           ;communication.c: 48: if(RCSTA1bits.OERR == 1) {
  6840                           
  6841                           ;incstack = 0
  6842  001738  A2AB               	btfss	4011,1,c	;volatile
  6843  00173A  D003               	goto	i2l544
  6844                           
  6845                           ;communication.c: 49: RCSTA1bits.CREN = 0;
  6846  00173C  98AB               	bcf	4011,4,c	;volatile
  6847                           
  6848                           ;communication.c: 50: RCSTA1bits.CREN = 1;
  6849  00173E  88AB               	bsf	4011,4,c	;volatile
  6850                           
  6851                           ;communication.c: 51: overrun = 1;
  6852  001740  8441               	bsf	_overrun/(0+8),_overrun& (0+7),c
  6853  001742                     i2l544:
  6854                           
  6855                           ;communication.c: 52: }
  6856                           ;communication.c: 53: dump = RCREG1;
  6857  001742  CFAE F001          	movff	4014,Receive_Dump@dump	;volatile
  6858  001746  0012               	return		;funcret
  6859  001748                     __end_of_Receive_Dump:
  6860                           	opt stack 0
  6861                           pclatu	equ	0xFFB
  6862                           pclath	equ	0xFFA
  6863                           tblptru	equ	0xFF8
  6864                           tblptrh	equ	0xFF7
  6865                           tblptrl	equ	0xFF6
  6866                           tablat	equ	0xFF5
  6867                           prodh	equ	0xFF4
  6868                           prodl	equ	0xFF3
  6869                           intcon	equ	0xFF2
  6870                           postinc0	equ	0xFEE
  6871                           fsr0h	equ	0xFEA
  6872                           fsr0l	equ	0xFE9
  6873                           wreg	equ	0xFE8
  6874                           postdec1	equ	0xFE5
  6875                           fsr1h	equ	0xFE2
  6876                           fsr1l	equ	0xFE1
  6877                           indf2	equ	0xFDF
  6878                           postinc2	equ	0xFDE
  6879                           postdec2	equ	0xFDD
  6880                           plusw2	equ	0xFDB
  6881                           fsr2h	equ	0xFDA
  6882                           fsr2l	equ	0xFD9
  6883                           status	equ	0xFD8
  6884                           
  6885 ;; *************** function _Receive *****************
  6886 ;; Defined at:
  6887 ;;		line 37 in file "communication.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;		None
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;		None
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  1    wreg      unsigned char 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMRAM   BANK0   BANK1
  6901 ;;      Params:         0       0       0
  6902 ;;      Locals:         0       0       0
  6903 ;;      Temps:          0       0       0
  6904 ;;      Totals:         0       0       0
  6905 ;;Total ram usage:        0 bytes
  6906 ;; Hardware stack levels used:    1
  6907 ;; This function calls:
  6908 ;;		Nothing
  6909 ;; This function is called by:
  6910 ;;		_Isr
  6911 ;; This function uses a non-reentrant model
  6912 ;;
  6913                           
  6914                           	psect	text36
  6915  001748                     __ptext36:
  6916                           	opt stack 0
  6917  001748                     _Receive:
  6918                           	opt stack 22
  6919                           
  6920                           ;communication.c: 38: if(RCSTA1bits.OERR == 1) {
  6921                           
  6922                           ;incstack = 0
  6923  001748  A2AB               	btfss	4011,1,c	;volatile
  6924  00174A  D003               	goto	i2l2737
  6925                           
  6926                           ;communication.c: 39: RCSTA1bits.CREN = 0;
  6927  00174C  98AB               	bcf	4011,4,c	;volatile
  6928                           
  6929                           ;communication.c: 40: RCSTA1bits.CREN = 1;
  6930  00174E  88AB               	bsf	4011,4,c	;volatile
  6931                           
  6932                           ;communication.c: 41: overrun = 1;
  6933  001750  8441               	bsf	_overrun/(0+8),_overrun& (0+7),c
  6934  001752                     i2l2737:
  6935                           
  6936                           ;communication.c: 42: }
  6937                           ;communication.c: 43: return (RCREG1);
  6938  001752  50AE               	movf	4014,w,c	;volatile
  6939  001754  0012               	return	
  6940  001756                     __end_of_Receive:
  6941                           	opt stack 0
  6942                           pclatu	equ	0xFFB
  6943                           pclath	equ	0xFFA
  6944                           tblptru	equ	0xFF8
  6945                           tblptrh	equ	0xFF7
  6946                           tblptrl	equ	0xFF6
  6947                           tablat	equ	0xFF5
  6948                           prodh	equ	0xFF4
  6949                           prodl	equ	0xFF3
  6950                           intcon	equ	0xFF2
  6951                           postinc0	equ	0xFEE
  6952                           fsr0h	equ	0xFEA
  6953                           fsr0l	equ	0xFE9
  6954                           wreg	equ	0xFE8
  6955                           postdec1	equ	0xFE5
  6956                           fsr1h	equ	0xFE2
  6957                           fsr1l	equ	0xFE1
  6958                           indf2	equ	0xFDF
  6959                           postinc2	equ	0xFDE
  6960                           postdec2	equ	0xFDD
  6961                           plusw2	equ	0xFDB
  6962                           fsr2h	equ	0xFDA
  6963                           fsr2l	equ	0xFD9
  6964                           status	equ	0xFD8
  6965                           
  6966 ;; *************** function _Ignite_Detonators *****************
  6967 ;; Defined at:
  6968 ;;		line 29 in file "ignition.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;		None
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  counter         1    5[COMRAM] unsigned char 
  6973 ;; Return value:  Size  Location     Type
  6974 ;;		None               void
  6975 ;; Registers used:
  6976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMRAM   BANK0   BANK1
  6982 ;;      Params:         0       0       0
  6983 ;;      Locals:         1       0       0
  6984 ;;      Temps:          2       0       0
  6985 ;;      Totals:         3       0       0
  6986 ;;Total ram usage:        3 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    1
  6989 ;; This function calls:
  6990 ;;		i2_Transmit
  6991 ;; This function is called by:
  6992 ;;		_Isr
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text37
  6997  00112C                     __ptext37:
  6998                           	opt stack 0
  6999  00112C                     _Ignite_Detonators:
  7000                           	opt stack 21
  7001                           
  7002                           ;ignition.c: 30: for(unsigned char counter = 0; counter < 30; counter++) {
  7003                           
  7004                           ;incstack = 0
  7005  00112C  0E00               	movlw	0
  7006  00112E  6E06               	movwf	Ignite_Detonators@counter,c
  7007  001130                     i2l2721:
  7008  001130  0E1D               	movlw	29
  7009  001132  6406               	cpfsgt	Ignite_Detonators@counter,c
  7010  001134  D001               	goto	i2l2725
  7011  001136  0012               	return	
  7012  001138                     i2l2725:
  7013                           
  7014                           ;ignition.c: 31: if(pin[counter].time == current_time) {
  7015  001138  5006               	movf	Ignite_Detonators@counter,w,c
  7016  00113A  0D06               	mullw	6
  7017  00113C  0E04               	movlw	4
  7018  00113E  26F3               	addwf	prodl,f,c
  7019  001140  0E00               	movlw	0
  7020  001142  22F4               	addwfc	prodh,f,c
  7021  001144  0E00               	movlw	low _pin
  7022  001146  24F3               	addwf	prodl,w,c
  7023  001148  6ED9               	movwf	fsr2l,c
  7024  00114A  0E01               	movlw	high _pin
  7025  00114C  20F4               	addwfc	prodh,w,c
  7026  00114E  6EDA               	movwf	fsr2h,c
  7027  001150  5035               	movf	_current_time,w,c
  7028  001152  18DE               	xorwf	postinc2,w,c
  7029  001154  E11F               	bnz	i2l2729
  7030  001156  5036               	movf	_current_time+1,w,c
  7031  001158  18DE               	xorwf	postinc2,w,c
  7032  00115A  A4D8               	btfss	status,2,c
  7033  00115C  D01B               	goto	i2l2729
  7034                           
  7035                           ;ignition.c: 32: Transmit(pin[counter].slave, 'I', pin[counter].output);
  7036  00115E  0E49               	movlw	73
  7037  001160  6E01               	movwf	i2Transmit@operation,c
  7038  001162  5006               	movf	Ignite_Detonators@counter,w,c
  7039  001164  0D06               	mullw	6
  7040  001166  0E01               	movlw	1
  7041  001168  26F3               	addwf	prodl,f,c
  7042  00116A  0E00               	movlw	0
  7043  00116C  22F4               	addwfc	prodh,f,c
  7044  00116E  0E00               	movlw	low _pin
  7045  001170  24F3               	addwf	prodl,w,c
  7046  001172  6ED9               	movwf	fsr2l,c
  7047  001174  0E01               	movlw	high _pin
  7048  001176  20F4               	addwfc	prodh,w,c
  7049  001178  6EDA               	movwf	fsr2h,c
  7050  00117A  50DF               	movf	indf2,w,c
  7051  00117C  6E02               	movwf	i2Transmit@port,c
  7052  00117E  5006               	movf	Ignite_Detonators@counter,w,c
  7053  001180  0D06               	mullw	6
  7054  001182  0E00               	movlw	low _pin
  7055  001184  24F3               	addwf	prodl,w,c
  7056  001186  6ED9               	movwf	fsr2l,c
  7057  001188  0E01               	movlw	high _pin
  7058  00118A  20F4               	addwfc	prodh,w,c
  7059  00118C  6EDA               	movwf	fsr2h,c
  7060  00118E  50DF               	movf	indf2,w,c
  7061  001190  ECEF  F00A         	call	i2_Transmit
  7062  001194                     i2l2729:
  7063  001194  2A06               	incf	Ignite_Detonators@counter,f,c
  7064  001196  D7CC               	goto	i2l2721
  7065  001198                     __end_of_Ignite_Detonators:
  7066                           	opt stack 0
  7067                           pclatu	equ	0xFFB
  7068                           pclath	equ	0xFFA
  7069                           tblptru	equ	0xFF8
  7070                           tblptrh	equ	0xFF7
  7071                           tblptrl	equ	0xFF6
  7072                           tablat	equ	0xFF5
  7073                           prodh	equ	0xFF4
  7074                           prodl	equ	0xFF3
  7075                           intcon	equ	0xFF2
  7076                           postinc0	equ	0xFEE
  7077                           fsr0h	equ	0xFEA
  7078                           fsr0l	equ	0xFE9
  7079                           wreg	equ	0xFE8
  7080                           postdec1	equ	0xFE5
  7081                           fsr1h	equ	0xFE2
  7082                           fsr1l	equ	0xFE1
  7083                           indf2	equ	0xFDF
  7084                           postinc2	equ	0xFDE
  7085                           postdec2	equ	0xFDD
  7086                           plusw2	equ	0xFDB
  7087                           fsr2h	equ	0xFDA
  7088                           fsr2l	equ	0xFD9
  7089                           status	equ	0xFD8
  7090                           
  7091 ;; *************** function i2_Transmit *****************
  7092 ;; Defined at:
  7093 ;;		line 15 in file "communication.c"
  7094 ;; Parameters:    Size  Location     Type
  7095 ;;  receiver        1    wreg     unsigned char 
  7096 ;;  operation       1    0[COMRAM] unsigned char 
  7097 ;;  port            1    1[COMRAM] unsigned char 
  7098 ;; Auto vars:     Size  Location     Type
  7099 ;;  receiver        1    2[COMRAM] unsigned char 
  7100 ;; Return value:  Size  Location     Type
  7101 ;;		None               void
  7102 ;; Registers used:
  7103 ;;		wreg, status,2
  7104 ;; Tracked objects:
  7105 ;;		On entry : 0/0
  7106 ;;		On exit  : 0/0
  7107 ;;		Unchanged: 0/0
  7108 ;; Data sizes:     COMRAM   BANK0   BANK1
  7109 ;;      Params:         2       0       0
  7110 ;;      Locals:         1       0       0
  7111 ;;      Temps:          0       0       0
  7112 ;;      Totals:         3       0       0
  7113 ;;Total ram usage:        3 bytes
  7114 ;; Hardware stack levels used:    1
  7115 ;; This function calls:
  7116 ;;		Nothing
  7117 ;; This function is called by:
  7118 ;;		_Ignite_Detonators
  7119 ;;		i2_Check_Detonators
  7120 ;; This function uses a non-reentrant model
  7121 ;;
  7122                           
  7123                           	psect	text38
  7124  0015DE                     __ptext38:
  7125                           	opt stack 0
  7126  0015DE                     i2_Transmit:
  7127                           	opt stack 21
  7128                           
  7129                           ;incstack = 0
  7130                           ;i2Transmit@receiver stored from wreg
  7131  0015DE  6E03               	movwf	i2Transmit@receiver,c
  7132                           
  7133                           ;communication.c: 17: PORTBbits.RB5 = 1;
  7134  0015E0  8A81               	bsf	3969,5,c	;volatile
  7135                           
  7136                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  7137  0015E2  98AB               	bcf	4011,4,c	;volatile
  7138                           
  7139                           ;communication.c: 20: __nop();
  7140  0015E4  F000               	nop	
  7141  0015E6                     i2l522:
  7142  0015E6  A89E               	btfss	3998,4,c	;volatile
  7143  0015E8  D7FE               	goto	i2l522
  7144                           
  7145                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  7146  0015EA  80AC               	bsf	4012,0,c	;volatile
  7147                           
  7148                           ;communication.c: 23: TXREG1 = receiver;
  7149  0015EC  C003  FFAD         	movff	i2Transmit@receiver,4013	;volatile
  7150  0015F0                     i2l525:
  7151  0015F0  A89E               	btfss	3998,4,c	;volatile
  7152  0015F2  D7FE               	goto	i2l525
  7153                           
  7154                           ;communication.c: 25: TXREG1 = 0xAA;
  7155  0015F4  0EAA               	movlw	170
  7156  0015F6  6EAD               	movwf	4013,c	;volatile
  7157  0015F8                     i2l528:
  7158  0015F8  A89E               	btfss	3998,4,c	;volatile
  7159  0015FA  D7FE               	goto	i2l528
  7160                           
  7161                           ;communication.c: 27: TXREG1 = operation;
  7162  0015FC  C001  FFAD         	movff	i2Transmit@operation,4013	;volatile
  7163  001600                     i2l531:
  7164  001600  A89E               	btfss	3998,4,c	;volatile
  7165  001602  D7FE               	goto	i2l531
  7166                           
  7167                           ;communication.c: 29: TXREG1 = port;
  7168  001604  C002  FFAD         	movff	i2Transmit@port,4013	;volatile
  7169  001608                     i2l534:
  7170  001608  A2AC               	btfss	4012,1,c	;volatile
  7171  00160A  D7FE               	goto	i2l534
  7172                           
  7173                           ;communication.c: 31: PORTBbits.RB5 = 0;
  7174  00160C  9A81               	bcf	3969,5,c	;volatile
  7175                           
  7176                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  7177  00160E  88AB               	bsf	4011,4,c	;volatile
  7178                           
  7179                           ;communication.c: 33: __nop();
  7180  001610  F000               	nop	
  7181  001612  0012               	return		;funcret
  7182  001614                     __end_ofi2_Transmit:
  7183                           	opt stack 0
  7184                           pclatu	equ	0xFFB
  7185                           pclath	equ	0xFFA
  7186                           tblptru	equ	0xFF8
  7187                           tblptrh	equ	0xFF7
  7188                           tblptrl	equ	0xFF6
  7189                           tablat	equ	0xFF5
  7190                           prodh	equ	0xFF4
  7191                           prodl	equ	0xFF3
  7192                           intcon	equ	0xFF2
  7193                           postinc0	equ	0xFEE
  7194                           fsr0h	equ	0xFEA
  7195                           fsr0l	equ	0xFE9
  7196                           wreg	equ	0xFE8
  7197                           postdec1	equ	0xFE5
  7198                           fsr1h	equ	0xFE2
  7199                           fsr1l	equ	0xFE1
  7200                           indf2	equ	0xFDF
  7201                           postinc2	equ	0xFDE
  7202                           postdec2	equ	0xFDD
  7203                           plusw2	equ	0xFDB
  7204                           fsr2h	equ	0xFDA
  7205                           fsr2l	equ	0xFD9
  7206                           status	equ	0xFD8
  7207                           pclatu	equ	0xFFB
  7208                           pclath	equ	0xFFA
  7209                           tblptru	equ	0xFF8
  7210                           tblptrh	equ	0xFF7
  7211                           tblptrl	equ	0xFF6
  7212                           tablat	equ	0xFF5
  7213                           prodh	equ	0xFF4
  7214                           prodl	equ	0xFF3
  7215                           intcon	equ	0xFF2
  7216                           postinc0	equ	0xFEE
  7217                           fsr0h	equ	0xFEA
  7218                           fsr0l	equ	0xFE9
  7219                           wreg	equ	0xFE8
  7220                           postdec1	equ	0xFE5
  7221                           fsr1h	equ	0xFE2
  7222                           fsr1l	equ	0xFE1
  7223                           indf2	equ	0xFDF
  7224                           postinc2	equ	0xFDE
  7225                           postdec2	equ	0xFDD
  7226                           plusw2	equ	0xFDB
  7227                           fsr2h	equ	0xFDA
  7228                           fsr2l	equ	0xFD9
  7229                           status	equ	0xFD8
  7230                           
  7231                           	psect	rparam
  7232  0000                     pclatu	equ	0xFFB
  7233                           pclath	equ	0xFFA
  7234                           tblptru	equ	0xFF8
  7235                           tblptrh	equ	0xFF7
  7236                           tblptrl	equ	0xFF6
  7237                           tablat	equ	0xFF5
  7238                           prodh	equ	0xFF4
  7239                           prodl	equ	0xFF3
  7240                           intcon	equ	0xFF2
  7241                           postinc0	equ	0xFEE
  7242                           fsr0h	equ	0xFEA
  7243                           fsr0l	equ	0xFE9
  7244                           wreg	equ	0xFE8
  7245                           postdec1	equ	0xFE5
  7246                           fsr1h	equ	0xFE2
  7247                           fsr1l	equ	0xFE1
  7248                           indf2	equ	0xFDF
  7249                           postinc2	equ	0xFDE
  7250                           postdec2	equ	0xFDD
  7251                           plusw2	equ	0xFDB
  7252                           fsr2h	equ	0xFDA
  7253                           fsr2l	equ	0xFD9
  7254                           status	equ	0xFD8
  7255                           
  7256                           	psect	temp
  7257  000043                     btemp:
  7258                           	opt stack 0
  7259  000043                     	ds	1
  7260  0000                     int$flags	set	btemp
  7261                           pclatu	equ	0xFFB
  7262                           pclath	equ	0xFFA
  7263                           tblptru	equ	0xFF8
  7264                           tblptrh	equ	0xFF7
  7265                           tblptrl	equ	0xFF6
  7266                           tablat	equ	0xFF5
  7267                           prodh	equ	0xFF4
  7268                           prodl	equ	0xFF3
  7269                           intcon	equ	0xFF2
  7270                           postinc0	equ	0xFEE
  7271                           fsr0h	equ	0xFEA
  7272                           fsr0l	equ	0xFE9
  7273                           wreg	equ	0xFE8
  7274                           postdec1	equ	0xFE5
  7275                           fsr1h	equ	0xFE2
  7276                           fsr1l	equ	0xFE1
  7277                           indf2	equ	0xFDF
  7278                           postinc2	equ	0xFDE
  7279                           postdec2	equ	0xFDD
  7280                           plusw2	equ	0xFDB
  7281                           fsr2h	equ	0xFDA
  7282                           fsr2l	equ	0xFD9
  7283                           status	equ	0xFD8


Data Sizes:
    Strings     77
    Constant    0
    Data        180
    BSS         29
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      66
    BANK0           160     31      42
    BANK1           256      0     180

Pointer List with Targets:

    Write_Display_Byte@write_data	PTR unsigned char  size(2) Largest target is 8
		 -> pixels(COMRAM[8]), 

    Evaluate_Display@evaluate	PTR unsigned char  size(2) Largest target is 3
		 -> signs(BANK0[3]), string_delete(BANK0[3]), string_load(BANK0[3]), 

    Set_Bits@bits	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[6]), STR_15(CODE[7]), 
		 -> STR_14(CODE[4]), STR_13(CODE[6]), STR_12(CODE[7]), STR_11(CODE[7]), 
		 -> STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[4]), STR_7(CODE[7]), 
		 -> STR_6(CODE[6]), STR_5(CODE[5]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[3]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Isr->i2_Set_Display
    i2_Set_Display->i2_Evaluate_Signs
    i2_Evaluate_Signs->i2_Evaluate_Display
    i2_Evaluate_Display->i2_Set_Bits
    i2_Check_Detonators->i2_Transmit
    _Ignite_Detonators->i2_Transmit

Critical Paths under _main in BANK0

    _main->_Check_Buttons
    _Check_Detonators->_Transmit
    _Check_Buttons->_Del_Data
    _Del_Data->_Load_Data
    _Load_Data->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   37218
                      _Check_Buttons
                   _Check_Detonators
                               _Init
                          _Load_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Detonators                                     0     0      0     331
                           _Transmit
 ---------------------------------------------------------------------------------
 (2) _Transmit                                             3     1      2     331
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Check_Buttons                                        2     2      0   20179
                                             29 BANK0      2     2      0
                           _Del_Data
                      _Delay_Routine
                          _Read_Data
                          _Save_Data
                        _Set_Display
                        _Start_Timer
 ---------------------------------------------------------------------------------
 (2) _Start_Timer                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Del_Data                                             1     1      0   12179
                                             28 BANK0      1     1      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Load_Data
                          _Save_Data
 ---------------------------------------------------------------------------------
 (2) _Save_Data                                            3     0      3     592
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _Load_Data                                            2     2      0    9479
                                             26 BANK0      2     2      0
                      _Delay_Routine
                   _Evaluate_Display
                          _Read_Data
                        _Set_Display
 ---------------------------------------------------------------------------------
 (1) _Set_Display                                          4     1      3    7229
                                             22 BANK0      4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
                 _Write_Display_Byte
 ---------------------------------------------------------------------------------
 (2) _Write_Display_Byte                                   7     5      2     207
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _Evaluate_Signs                                       7     5      2    2994
                                             15 BANK0      7     5      2
                   _Evaluate_Display
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     386
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _Evaluate_Display                                     7     5      2    1941
                                              8 BANK0      7     5      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (4) _Set_Bits                                             8     6      2    1571
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _Read_Data                                            5     3      2     111
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _Delay_Routine                                        3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Isr                                                 20    20      0    3252
                                             26 COMRAM    20    20      0
                  _Ignite_Detonators
                            _Receive
                       _Receive_Dump
                            ___awdiv
                 i2_Check_Detonators
                      i2_Set_Display
 ---------------------------------------------------------------------------------
 (9) i2_Set_Display                                        4     1      3    2232
                                             22 COMRAM     4     1      3
                 i2_Evaluate_Display
                   i2_Evaluate_Signs
               i2_Write_Display_Byte
 ---------------------------------------------------------------------------------
 (10) i2_Write_Display_Byte                                7     5      2     116
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (10) i2_Evaluate_Signs                                    7     5      2    1270
                                             15 COMRAM     7     5      2
                 i2_Evaluate_Display
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (11) i2_Evaluate_Display                                  7     5      2     684
                                              8 COMRAM     7     5      2
                         i2_Set_Bits
 ---------------------------------------------------------------------------------
 (12) i2_Set_Bits                                          8     6      2     588
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (9) i2_Check_Detonators                                   0     0      0     170
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (9) _Receive_Dump                                         1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _Ignite_Detonators                                    3     3      0     282
                                              3 COMRAM     3     3      0
                         i2_Transmit
 ---------------------------------------------------------------------------------
 (10) i2_Transmit                                          3     1      2     170
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Buttons
     _Del_Data
       _Delay_Routine
       _Evaluate_Display
         _Set_Bits
       _Load_Data
         _Delay_Routine
         _Evaluate_Display
           _Set_Bits
         _Read_Data
         _Set_Display
           _Evaluate_Display
             _Set_Bits
           _Evaluate_Signs
             _Evaluate_Display
               _Set_Bits
             ___lwdiv
             ___lwmod
           _Write_Display_Byte
       _Save_Data
     _Delay_Routine
     _Read_Data
     _Save_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwdiv
         ___lwmod
       _Write_Display_Byte
     _Start_Timer
   _Check_Detonators
     _Transmit
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Load_Data
     _Delay_Routine
     _Evaluate_Display
       _Set_Bits
     _Read_Data
     _Set_Display
       _Evaluate_Display
         _Set_Bits
       _Evaluate_Signs
         _Evaluate_Display
           _Set_Bits
         ___lwdiv
         ___lwmod
       _Write_Display_Byte
   _Set_Display
     _Evaluate_Display
       _Set_Bits
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
       ___lwdiv
       ___lwmod
     _Write_Display_Byte

 _Isr (ROOT)
   _Ignite_Detonators
     i2_Transmit
   _Receive
   _Receive_Dump
   ___awdiv
   i2_Check_Detonators
     i2_Transmit
   i2_Set_Display
     i2_Evaluate_Display
       i2_Set_Bits
     i2_Evaluate_Signs
       i2_Evaluate_Display
         i2_Set_Bits
       i2___lwdiv
       i2___lwmod
     i2_Write_Display_Byte

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     1F      2A       4       26.3%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2E      42       1       70.2%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     120       6        0.0%
DATA                 0      0     120       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Feb 10 22:04:42 2017

        Evaluate_Display@evaluate 0068                        i2_Transmit 15DE  
                    ___awdiv@sign 0006                i2___lwdiv@dividend 0001  
                    __CFG_CP0$OFF 000000                      __CFG_CP1$OFF 000000  
                             l102 0288                               l112 0408  
                             l122 0624                               l106 034E  
                             l118 04BC                               l135 0798  
                             l431 07A6                               l362 1334  
                             l522 1578                               l531 1592  
                             l365 1362                               l525 1582  
                             l534 159A                               l528 158A  
                             l457 0E0A                    ?i2_Set_Display 0017  
                    __CFG_CPB$OFF 000000                      __CFG_CPD$OFF 000000  
                             _Isr 0008                               _pin 0100  
                  _Evaluate_Signs 0D4A                               prod 000FF3  
                             wreg 000FE8                 Set_Bits@Bitoutput 0067  
                      _TXSTA1bits 000FAC                      __CFG_LVP$OFF 000000  
                            ?_Isr 0001                              l1034 1122  
                            l1044 12B6                              l3013 12A8  
                            l3005 1272                              l3007 127E  
                            l3009 1284                              l3123 0B68  
                            l3203 1312                              l3133 0BA6  
                            l3055 1650                              l3063 119E  
                            l3127 0B72                              l3081 11EA  
                            l3401 069E                              l3313 03D4  
                            l3059 1664                              l3075 11D0  
                            l3309 0372                              l3079 11DE  
                            l3351 052A                              l3193 12F0  
                            l3329 0488                              l3355 0536  
                            l3347 04DE                              l3197 12FA  
                            l3365 0552                              l3285 02AC  
                            l3429 167E                              l2911 0C66  
                            l3359 0542                              l3367 0568  
                            l2921 0C84                              l2913 0C6C  
                            l3393 0646                              l3289 031A  
                            l2923 0C8A                              l2915 0C72  
                            l2931 0CE4                              l2917 0C78  
                            l2941 07CE                              l2919 0C7E  
                            l2927 0C90                              l2951 0828  
                            l2943 07E0                              l2929 0CE0  
                            l2961 0882                              l2953 083A  
                            l2945 07F2                              l2937 07AA  
                            l2971 08DC                              l2963 0894  
                            l2955 084C                              l2947 0804  
                            l2939 07BC                              l2965 08A6  
                            l2957 085E                              l2949 0816  
                            l2973 08EE                              l2967 08B8  
                            l2959 0870                              l2975 0990  
                            l2969 08CA                              l2977 0992  
                            l2985 10D2                              l2987 10DE  
                            l2997 1114                              l2989 10E4  
                            STR_1 0227                              STR_2 0267  
                            STR_3 0249                              STR_4 0243  
                            STR_5 0261                              STR_6 024F  
                            STR_7 023C                              STR_8 0266  
                            STR_9 021F                              u2567 1658  
                            _Init 16C6                              _main 1674  
                            fsr0h 000FEA                              fsr1h 000FE2  
              i2___lwdiv@quotient 0005                              fsr0l 000FE9  
                            fsr2h 000FDA                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 0043                     __CFG_BORV$190 000000  
                    Transmit@port 0061                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 021A                     __CFG_IESO$OFF 000000  
                  Save_Data@store 0060                _Write_Display_Byte 11FC  
                    ___param_bank 000010                     _InitInterrupt 1756  
                     _string_load 0087                             ??_Isr 001B  
                 __end_of_Receive 1756               ?_Write_Display_Byte 0060  
                    _BAUDCON1bits 000FB8                             ?_Init 0001  
                           ?_main 0001                   __end_of___awdiv 10B4  
                           _EEADR 000FA9                             STR_10 022E  
                           STR_11 0235                             STR_12 0227  
                           STR_13 025B                             STR_14 022A  
                           STR_15 0227                             STR_16 0255  
                           STR_17 0247                             STR_18 026A  
          __end_of_Evaluate_Signs 0E20                   ___awdiv@divisor 0003  
               _InitMiscellaneous 1762                   __end_of___lwdiv 112C  
                 __end_of___lwmod 12C0                             i2l431 09A2  
                           i2l522 15E6                             i2l531 1600  
                           i2l525 15F0                             i2l534 1608  
                           i2l631 01DE                             i2l528 15F8  
                           i2l544 1742                             i2l457 101E  
                           i2l617 00A2                             i2l618 009E  
                 ___awdiv@counter 0005                 _Ignite_Detonators 112C  
                           _TMR1H 000FCF                             _TMR3H 000FB3  
                           _TMR1L 000FCE                             _TMR3L 000FB2  
                           _PORTA 000F80                             _PORTB 000F81  
                           _PORTC 000F82                             _PORTE 000F84  
                           _TRISA 000F92                             _TRISB 000F93  
                           _TRISC 000F94                             _TRISE 000F96  
                   __CFG_WRT0$OFF 000000          __end_of_InitTransmission 16C6  
                   __CFG_WRT1$OFF 000000                ?_InitMiscellaneous 0001  
                  __CFG_EBTR0$OFF 000000                    __CFG_FCMEN$OFF 000000  
                  __CFG_EBTR1$OFF 000000                ?_Ignite_Detonators 0001  
               i2Set_Display@type 001A          __end_ofi2_Evaluate_Signs 1030  
                   __CFG_WRTB$OFF 000000                     __CFG_WRTC$OFF 000000  
                   __CFG_WRTD$OFF 000000                  _Evaluate_Display 079C  
                  __CFG_EBTRB$OFF 000000                             _signs 0081  
              __CFG_MCLRE$EXTMCLR 000000              ??_Write_Display_Byte 0062  
                  __pbitbssCOMRAM 0208                    __CFG_BOREN$OFF 000000  
             ??_InitMiscellaneous 0060                             tablat 000FF5  
             ??_Ignite_Detonators 0004                             plusw2 000FDB  
                __end_of_Del_Data 131A                             status 000FD8  
                     ?i2_Set_Bits 0001                __size_ofi2___lwdiv 0052  
              __size_ofi2___lwmod 0042                    ?_InitInterrupt 0001  
                 __initialization 1466                      __end_of_Init 16E4  
                    __end_of_main 16A2                       ?i2_Transmit 0001  
                __end_of_InitPort 1738                  __end_of_InitTris 1726  
          Set_Display@information 0076         __end_of_InitMiscellaneous 1768  
                 ??i2_Set_Display 001A                            ??_Init 0060  
       __end_of_Ignite_Detonators 1198                     ??_Set_Display 0079  
                          ??_main 007F                  __end_of_Set_Bits 0D4A  
                 ?_Evaluate_Signs 006F                     __activetblptr 000002  
      __end_ofi2_Evaluate_Display 0B38                     ?_Receive_Dump 0001  
                __end_of_Transmit 15A6                            _EEDATA 000FA8  
                          _CCPR1H 000FBF                            _CCPR1L 000FBE  
                          _EECON2 000FA7                  ___awdiv@dividend 0001  
                          _ANSELA 000F38                            _ANSELB 000F39  
                          _ANSELC 000F3A                            i2l1034 140E  
                          i2l1044 1528                            i2l2311 0E32  
                          i2l2313 0E36                            i2l2401 09DE  
                          i2l2315 0E3A                            i2l2307 0E2A  
                          i2l2323 0E46                            i2l2411 0A24  
                          i2l2403 09EC                            i2l2317 0E3E  
                          i2l2309 0E2E                            i2l2325 0E90  
                          i2l2421 0A6A                            i2l2413 0A32  
                          i2l2405 09FA                            i2l2319 0E42  
                          i2l2327 0E92                            i2l2423 0A78  
                          i2l2415 0A40                            i2l2407 0A08  
                          i2l2431 0B2E                            i2l2425 0A86  
                          i2l2417 0A4E                            i2l2409 0A16  
                          i2l2433 0B30                            i2l2441 13DC  
                          i2l2427 0A94                            i2l2419 0A5C  
                          i2l2443 13E4                            i2l2429 0AA2  
                          i2l2453 1404                            i2l2445 13E8  
                          i2l2461 14FE                    __CFG_WDTEN$OFF 000000  
                          i2l2463 1506                            i2l2721 1130  
                          i2l2393 09A6                            i2l2465 150A  
                          i2l2395 09B4                            i2l2811 13B8  
                          i2l2725 1138                            i2l2397 09C2  
                          i2l2469 151E                            i2l2805 13A0  
                          i2l2399 09D0                            i2l2729 1194  
                          i2l2737 1752                            i2l2753 1044  
                          i2l2809 13AE                            i2l2905 01D8  
                          i2l2843 006E                            i2l2765 106A  
                          i2l2781 109C                            i2l2837 005C  
                          i2l2767 1072                            i2l2759 1054  
                          i2l2785 10AA                            i2l2777 1092  
                          i2l2769 1076                            i2l2793 1374  
                          i2l2885 016A                            i2l2893 01C0  
                          i2l2895 01C4                            i2l2889 01A0  
                          _RCREG1 000FAE                __size_of_Load_Data 0120  
                          _OSCCON 000FD3                __size_of_InitAnsel 0014  
                          _SPBRG1 000FAF                            _SSP1IF 007CF3  
              __size_of_Read_Data 004E                __size_of_InitTimer 0030  
                          _TXREG1 000FAD                         ??_Receive 0001  
              i2Set_Display@value 0018                    __CFG_XINST$OFF 000000  
                    _CCPTMRS0bits 000F49       __size_ofi2_Check_Detonators 0038  
              __size_of_Save_Data 0056                         ??___awdiv 0005  
                       ??___lwdiv 0064                         ??___lwmod 0064  
                          clear_0 146C                            clear_1 147A  
                ___awdiv@quotient 0007                            _pixels 0039  
          __size_of_Check_Buttons 052E  i2Evaluate_Signs@evaluation_value 0010  
  Evaluate_Signs@evaluation_value 006F                    ??_Receive_Dump 0001  
               __end_ofi2___lwdiv 1418                      __mediumconst 0000  
               __end_ofi2___lwmod 1532               __size_ofi2_Set_Bits 00C0  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                i2Transmit@receiver 0003  
             __end_of_Set_Display 11FC                   __CFG_HFOFST$OFF 000000  
             __size_ofi2_Transmit 0036              Isr@pixel_index_array 002C  
                      __accesstop 0060           __end_of__initialization 14A0  
                 __CFG_PBADEN$OFF 000000                   ??_InitInterrupt 0060  
                   ___rparam_used 000001                    i2Transmit@port 0002  
              i2___lwmod@dividend 0001                    __pcstackCOMRAM 0001  
       __size_of_Check_Detonators 003C                      __pidataBANK1 0EE0  
                   ??_Start_Timer 0060        __size_of_InitMiscellaneous 0006  
      __size_of_Ignite_Detonators 006C                 __end_of_Load_Data 0C58  
               __end_of_InitAnsel 1714                 __end_of_Read_Data 1466  
               __end_of_InitTimer 1644                     _string_delete 0084  
                       ?_Del_Data 0001      __end_ofi2_Write_Display_Byte 14F0  
               __end_of_Save_Data 1370                        __pbssBANK0 007F  
              Isr@pixel_index_bit 002D                   __CFG_PLLCFG$OFF 000000  
                   _Check_Buttons 026E                         ?_InitPort 0001  
                       ?_InitTris 0001                        __pnvCOMRAM 0042  
                       ?_Set_Bits 0060                __CFG_CCP2MX$PORTC1 000000  
        __end_of_Evaluate_Display 099A                __CFG_CCP3MX$PORTB5 000000  
                       ?_Transmit 0060                       _Set_Display 1198  
                      ??_Del_Data 007C            __size_of_Delay_Routine 0030  
             __end_of_Start_Timer 1700                 ?_InitTransmission 0001  
               __CFG_PRICLKEN$OFF 000000                           _SSP1BUF 000FC9  
               ?i2_Evaluate_Signs 0010                ??_InitTransmission 0060  
              ??i2_Evaluate_Signs 0012                    ?_Check_Buttons 0001  
                      ??_InitPort 0060                        ??_InitTris 0060  
     i2Write_Display_Byte@counter 0007                      ??i2_Set_Bits 0003  
                      ??_Set_Bits 0062                   __CFG_PWRTEN$OFF 000000  
                         _Receive 1748                           __Hparam 0000  
            __end_of_Receive_Dump 1748                           __Lparam 0000  
                Load_Data@counter 007B                           ___awdiv 1030  
                ??_Evaluate_Signs 0071                      ??i2_Transmit 0003  
                Receive_Dump@dump 0001                           ___lwdiv 10B4  
                      ??_Transmit 0062                           ___lwmod 125E  
                    __psmallconst 021E                   __CFG_STVREN$OFF 000000  
                         __pcinit 1466                           __ramtop 0200  
                         __ptext0 1674                           __ptext1 16C6  
                         __ptext2 1714                           __ptext3 16A2  
                         __ptext4 1614                           __ptext5 1726  
                         __ptext6 1762                           __ptext7 1756  
                         __ptext8 1700                           __ptext9 1532  
                       _T1CONbits 000FCD                      __size_of_Isr 0212  
                 Set_Display@type 0079                         _T3CONbits 000FB1  
              __end_ofi2_Set_Bits 0EE0                           _overrun 020A  
            end_of_initialization 14A0       __size_of_Write_Display_Byte 0062  
              __end_ofi2_Transmit 1614                     __Lmediumconst 0000  
              i2_Evaluate_Display 099A                     _Delay_Routine 1644  
            i2_Write_Display_Byte 14AE               ?i2_Evaluate_Display 0009  
                       _RCSTAbits 000FAB                  _Check_Detonators 1532  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc2 000FDE  
          i2Evaluate_Display@size 000F                       _Start_Timer 16E4  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                       _PORTCbits 000F82               i2Transmit@operation 0001  
           __end_ofi2_Set_Display 13C6                         _TRISCbits 000F94  
            ??i2_Evaluate_Display 000B                   ??_Check_Buttons 007D  
        Ignite_Detonators@counter 0006                 i2___lwdiv@divisor 0003  
                       i2___lwdiv 13C6                         i2___lwmod 14F0  
               i2___lwdiv@counter 0007                     _check_counter 0037  
                  ?_Delay_Routine 0001                       _CCP1CONbits 000FBD  
           ?i2_Write_Display_Byte 0001        __end_ofi2_Check_Detonators 15DE  
        i2Set_Display@information 0017                      Set_Bits@bits 0060  
             start_initialization 1466                         _Load_Data 0B38  
                       _InitAnsel 1700                      _ignite_ready 0208  
               __size_of_Del_Data 005A                       __end_of_Isr 021A  
                       _Read_Data 1418                         _InitTimer 1614  
                      ?i2___lwdiv 0001                        ?i2___lwmod 0001  
                Set_Bits@bitcount 0066             __size_of_Receive_Dump 0010  
                       _Save_Data 131A    i2Write_Display_Byte@write_data 0001  
               __size_of_InitPort 0012                 __size_of_InitTris 0012  
           __end_of_InitInterrupt 1762                 __size_of_Set_Bits 00F2  
               ?_Evaluate_Display 0068                       __pdataBANK1 0100  
              ??_Evaluate_Display 006A                    _slave_selected 0080  
               __size_of_Transmit 0038                      ?_Set_Display 0076  
          Save_Data@store_address 0062                       __pbssCOMRAM 002F  
                      ?_Load_Data 0001                        ?_InitAnsel 0001  
                   __pcstackBANK0 0060                      _Receive_Dump 1738  
                      ?_Read_Data 0060                        ?_InitTimer 0001  
               i2___lwmod@divisor 0003                 i2___lwmod@counter 0005  
                 ??_Delay_Routine 0060                        ?_Save_Data 0060  
          ??i2_Write_Display_Byte 0003                      _current_time 0035  
                _master_addressed 0209                          ?_Receive 0001  
       __size_of_InitTransmission 0024                  ___lwdiv@dividend 0060  
       __size_ofi2_Evaluate_Signs 009C             Read_Data@read_address 0064  
                       __pintcode 0008                          ?___awdiv 0001  
                        ?___lwdiv 0060                          ?___lwmod 0060  
                     __smallconst 021E                  ___lwdiv@quotient 0065  
        __end_of_Check_Detonators 156E                       ??i2___lwdiv 0005  
                     ??i2___lwmod 0005                          _PIE1bits 000F9D  
             i2Set_Bits@Bitoutput 0008                          _PIR1bits 000F9E  
                        _PIR2bits 000FA1                          i2u195_44 0150  
                        i2u195_45 014C                          i2u197_44 0182  
                        i2u197_45 017E                  __CFG_WDTPS$32768 000000  
      i2Evaluate_Display@evaluate 0009                          _SSP1CON1 000FC6  
                        _SSP1STAT 000FC7                      ?_Start_Timer 0001  
                  i2Set_Bits@bits 0001                          _Del_Data 12C0  
                     ??_Load_Data 007A                       ??_InitAnsel 0060  
                 _receive_counter 0038                       ??_Read_Data 0062  
                     ??_InitTimer 0060        __end_of_Write_Display_Byte 125E  
                       copy_data0 1494                          _InitPort 1726  
                        _InitTris 1714                       ??_Save_Data 0063  
               Transmit@operation 0060                        _EECON1bits 000FA6  
                 Isr@search_index 002E                          _Set_Bits 0C58  
                    _pin_selected 007F                          __Hrparam 0000  
                __size_of_Receive 000E                          __Lrparam 0000  
               __CFG_P2BMX$PORTB5 000000                          _Transmit 156E  
                __size_of___awdiv 0084                  __size_of___lwdiv 0078  
                __size_of___lwmod 0062      i2Evaluate_Signs@valuecounter 0016  
              i2_Check_Detonators 15A6              __size_of_Set_Display 0064  
         __size_of_Evaluate_Signs 00D6                   ___lwdiv@divisor 0062  
                 ___lwdiv@counter 0064       __size_ofi2_Evaluate_Display 019E  
             ?i2_Check_Detonators 0001                          __ptext10 156E  
                        __ptext11 026E                          __ptext20 10B4  
                        __ptext12 16E4                          __ptext21 079C  
                        __ptext13 12C0                          __ptext30 13C6  
                        __ptext22 0C58                          __ptext14 131A  
                        __ptext31 099A                          __ptext23 1418  
                        __ptext15 0B38                          __ptext32 0E20  
                        __ptext24 1644                          __ptext16 1198  
                        __ptext33 15A6                          __ptext17 11FC  
                        __ptext34 1030                          __ptext26 1370  
                        __ptext18 0D4A                          __ptext35 1738  
                        __ptext27 14AE                          __ptext19 125E  
                        __ptext36 1748                          __ptext28 0F94  
                        __ptext37 112C                          __ptext29 14F0  
                        __ptext38 15DE             __end_of_Check_Buttons 079C  
                Set_Display@value 0077                     __size_of_Init 001E  
                   __size_of_main 002E                          _received 002F  
          __size_ofi2_Set_Display 0056                  _InitTransmission 16A2  
      Delay_Routine@delay_counter 0062                  i2_Evaluate_Signs 0F94  
            ??i2_Check_Detonators 0004                          _testflag 020B  
                        int$flags 0043              Evaluate_Display@size 006E  
                Transmit@receiver 0062      Write_Display_Byte@write_data 0060  
      Evaluate_Signs@valuecounter 0075                        _INTCONbits 000FF2  
       __size_of_Evaluate_Display 01FE                Read_Data@data_read 0062  
                        intlevel2 0000                  ___lwmod@dividend 0060  
       Write_Display_Byte@counter 0066                        _RCSTA1bits 000FAB  
                 _display_counter 0042                i2Set_Bits@bitcount 0007  
                 Del_Data@counter 007C              __size_of_Start_Timer 001C  
                   i2_Set_Display 1370                   ___lwmod@divisor 0062  
   Delay_Routine@delay_multiplyer 0061                   ___lwmod@counter 0064  
               __CFG_T3CMX$PORTC0 000000            __size_of_InitInterrupt 000C  
               ?_Check_Detonators 0001                ??_Check_Detonators 0063  
           __end_of_Delay_Routine 1674                 __CFG_FOSC$INTIO67 000000  
                      i2_Set_Bits 0E20     __size_ofi2_Write_Display_Byte 0042  
