

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Feb 03 18:03:19 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           	psect	idataBANK1
    39  000584                     __pidataBANK1:
    40                           	opt stack 0
    41                           
    42                           ;initializer for _pin
    43  000584  00                 	db	0
    44  000585  00                 	db	0
    45  000586  00                 	db	0
    46  000587  1F                 	db	31
    47  000588  00                 	db	0
    48  000589  00                 	db	0
    49  00058A  00                 	db	0
    50  00058B  01                 	db	1
    51  00058C  01                 	db	1
    52  00058D  1E                 	db	30
    53  00058E  00                 	db	0
    54  00058F  00                 	db	0
    55  000590  00                 	db	0
    56  000591  02                 	db	2
    57  000592  02                 	db	2
    58  000593  1D                 	db	29
    59  000594  00                 	db	0
    60  000595  00                 	db	0
    61  000596  00                 	db	0
    62  000597  03                 	db	3
    63  000598  03                 	db	3
    64  000599  1C                 	db	28
    65  00059A  00                 	db	0
    66  00059B  00                 	db	0
    67  00059C  00                 	db	0
    68  00059D  04                 	db	4
    69  00059E  04                 	db	4
    70  00059F  1B                 	db	27
    71  0005A0  00                 	db	0
    72  0005A1  00                 	db	0
    73  0005A2  00                 	db	0
    74  0005A3  05                 	db	5
    75  0005A4  05                 	db	5
    76  0005A5  1A                 	db	26
    77  0005A6  00                 	db	0
    78  0005A7  00                 	db	0
    79  0005A8  00                 	db	0
    80  0005A9  06                 	db	6
    81  0005AA  06                 	db	6
    82  0005AB  19                 	db	25
    83  0005AC  00                 	db	0
    84  0005AD  00                 	db	0
    85  0005AE  00                 	db	0
    86  0005AF  07                 	db	7
    87  0005B0  07                 	db	7
    88  0005B1  18                 	db	24
    89  0005B2  00                 	db	0
    90  0005B3  00                 	db	0
    91  0005B4  00                 	db	0
    92  0005B5  08                 	db	8
    93  0005B6  08                 	db	8
    94  0005B7  27                 	db	39
    95  0005B8  00                 	db	0
    96  0005B9  00                 	db	0
    97  0005BA  00                 	db	0
    98  0005BB  09                 	db	9
    99  0005BC  09                 	db	9
   100  0005BD  26                 	db	38
   101  0005BE  00                 	db	0
   102  0005BF  00                 	db	0
   103  0005C0  01                 	db	1
   104  0005C1  00                 	db	0
   105  0005C2  0A                 	db	10
   106  0005C3  25                 	db	37
   107  0005C4  00                 	db	0
   108  0005C5  00                 	db	0
   109  0005C6  01                 	db	1
   110  0005C7  01                 	db	1
   111  0005C8  0B                 	db	11
   112  0005C9  24                 	db	36
   113  0005CA  00                 	db	0
   114  0005CB  00                 	db	0
   115  0005CC  01                 	db	1
   116  0005CD  02                 	db	2
   117  0005CE  0C                 	db	12
   118  0005CF  23                 	db	35
   119  0005D0  00                 	db	0
   120  0005D1  00                 	db	0
   121  0005D2  01                 	db	1
   122  0005D3  03                 	db	3
   123  0005D4  0D                 	db	13
   124  0005D5  22                 	db	34
   125  0005D6  00                 	db	0
   126  0005D7  00                 	db	0
   127  0005D8  01                 	db	1
   128  0005D9  04                 	db	4
   129  0005DA  0E                 	db	14
   130  0005DB  21                 	db	33
   131  0005DC  00                 	db	0
   132  0005DD  00                 	db	0
   133  0005DE  01                 	db	1
   134  0005DF  05                 	db	5
   135  0005E0  0F                 	db	15
   136  0005E1  20                 	db	32
   137  0005E2  00                 	db	0
   138  0005E3  00                 	db	0
   139  0005E4  01                 	db	1
   140  0005E5  06                 	db	6
   141  0005E6  10                 	db	16
   142  0005E7  2F                 	db	47
   143  0005E8  00                 	db	0
   144  0005E9  00                 	db	0
   145  0005EA  01                 	db	1
   146  0005EB  07                 	db	7
   147  0005EC  11                 	db	17
   148  0005ED  2E                 	db	46
   149  0005EE  00                 	db	0
   150  0005EF  00                 	db	0
   151  0005F0  01                 	db	1
   152  0005F1  08                 	db	8
   153  0005F2  12                 	db	18
   154  0005F3  2D                 	db	45
   155  0005F4  00                 	db	0
   156  0005F5  00                 	db	0
   157  0005F6  01                 	db	1
   158  0005F7  09                 	db	9
   159  0005F8  13                 	db	19
   160  0005F9  2C                 	db	44
   161  0005FA  00                 	db	0
   162  0005FB  00                 	db	0
   163  0005FC  02                 	db	2
   164  0005FD  00                 	db	0
   165  0005FE  14                 	db	20
   166  0005FF  2B                 	db	43
   167  000600  00                 	db	0
   168  000601  00                 	db	0
   169  000602  02                 	db	2
   170  000603  01                 	db	1
   171  000604  15                 	db	21
   172  000605  2A                 	db	42
   173  000606  00                 	db	0
   174  000607  00                 	db	0
   175  000608  02                 	db	2
   176  000609  02                 	db	2
   177  00060A  16                 	db	22
   178  00060B  29                 	db	41
   179  00060C  00                 	db	0
   180  00060D  00                 	db	0
   181  00060E  02                 	db	2
   182  00060F  03                 	db	3
   183  000610  17                 	db	23
   184  000611  28                 	db	40
   185  000612  00                 	db	0
   186  000613  00                 	db	0
   187  000614  02                 	db	2
   188  000615  04                 	db	4
   189  000616  18                 	db	24
   190  000617  35                 	db	53
   191  000618  00                 	db	0
   192  000619  00                 	db	0
   193  00061A  02                 	db	2
   194  00061B  05                 	db	5
   195  00061C  19                 	db	25
   196  00061D  34                 	db	52
   197  00061E  00                 	db	0
   198  00061F  00                 	db	0
   199  000620  02                 	db	2
   200  000621  06                 	db	6
   201  000622  1A                 	db	26
   202  000623  33                 	db	51
   203  000624  00                 	db	0
   204  000625  00                 	db	0
   205  000626  02                 	db	2
   206  000627  07                 	db	7
   207  000628  1B                 	db	27
   208  000629  32                 	db	50
   209  00062A  00                 	db	0
   210  00062B  00                 	db	0
   211  00062C  02                 	db	2
   212  00062D  08                 	db	8
   213  00062E  1C                 	db	28
   214  00062F  31                 	db	49
   215  000630  00                 	db	0
   216  000631  00                 	db	0
   217  000632  02                 	db	2
   218  000633  09                 	db	9
   219  000634  1D                 	db	29
   220  000635  30                 	db	48
   221  000636  00                 	db	0
   222  000637  00                 	db	0
   223  0000                     _ANSELA	set	3896
   224  0000                     _ANSELB	set	3897
   225  0000                     _ANSELC	set	3898
   226  0000                     _CCPTMRS0bits	set	3913
   227  0000                     _BAUDCON1bits	set	4024
   228  0000                     _CCP1CONbits	set	4029
   229  0000                     _CCPR1H	set	4031
   230  0000                     _CCPR1L	set	4030
   231  0000                     _EEADR	set	4009
   232  0000                     _EECON1bits	set	4006
   233  0000                     _EECON2	set	4007
   234  0000                     _EEDATA	set	4008
   235  0000                     _INTCONbits	set	4082
   236  0000                     _OSCCON	set	4051
   237  0000                     _PIE1bits	set	3997
   238  0000                     _PIR1bits	set	3998
   239  0000                     _PIR2bits	set	4001
   240  0000                     _PORTA	set	3968
   241  0000                     _PORTB	set	3969
   242  0000                     _PORTBbits	set	3969
   243  0000                     _PORTC	set	3970
   244  0000                     _PORTCbits	set	3970
   245  0000                     _PORTE	set	3972
   246  0000                     _RCREG1	set	4014
   247  0000                     _RCSTA1bits	set	4011
   248  0000                     _RCSTAbits	set	4011
   249  0000                     _SPBRG1	set	4015
   250  0000                     _SSP1BUF	set	4041
   251  0000                     _SSP1CON1	set	4038
   252  0000                     _SSP1STAT	set	4039
   253  0000                     _T1CONbits	set	4045
   254  0000                     _T3CONbits	set	4017
   255  0000                     _TMR1H	set	4047
   256  0000                     _TMR1L	set	4046
   257  0000                     _TMR3H	set	4019
   258  0000                     _TMR3L	set	4018
   259  0000                     _TRISA	set	3986
   260  0000                     _TRISB	set	3987
   261  0000                     _TRISC	set	3988
   262  0000                     _TRISCbits	set	3988
   263  0000                     _TRISE	set	3990
   264  0000                     _TXREG1	set	4013
   265  0000                     _TXSTA1bits	set	4012
   266  0000                     _SSP1IF	set	31987
   267                           
   268                           	psect	smallconst
   269  00021A                     __psmallconst:
   270                           	opt stack 0
   271  00021A  00                 	db	0
   272  00021B                     STR_11:
   273  00021B  41                 	db	65	;'A'
   274  00021C  42                 	db	66	;'B'
   275  00021D  43                 	db	67	;'C'
   276  00021E  44                 	db	68	;'D'
   277  00021F  45                 	db	69	;'E'
   278  000220  46                 	db	70	;'F'
   279  000221  47                 	db	71	;'G'
   280  000222  00                 	db	0
   281  000223                     STR_3:
   282  000223  41                 	db	65	;'A'
   283  000224  42                 	db	66	;'B'
   284  000225  43                 	db	67	;'C'
   285  000226  44                 	db	68	;'D'
   286  000227  45                 	db	69	;'E'
   287  000228  46                 	db	70	;'F'
   288  000229  00                 	db	0
   289  00022A                     STR_12:
   290  00022A  41                 	db	65	;'A'
   291  00022B  42                 	db	66	;'B'
   292  00022C  43                 	db	67	;'C'
   293  00022D  44                 	db	68	;'D'
   294  00022E  46                 	db	70	;'F'
   295  00022F  47                 	db	71	;'G'
   296  000230  00                 	db	0
   297  000231                     STR_13:
   298  000231  41                 	db	65	;'A'
   299  000232  42                 	db	66	;'B'
   300  000233  43                 	db	67	;'C'
   301  000234  45                 	db	69	;'E'
   302  000235  46                 	db	70	;'F'
   303  000236  47                 	db	71	;'G'
   304  000237  00                 	db	0
   305  000238                     STR_9:
   306  000238  41                 	db	65	;'A'
   307  000239  43                 	db	67	;'C'
   308  00023A  44                 	db	68	;'D'
   309  00023B  45                 	db	69	;'E'
   310  00023C  46                 	db	70	;'F'
   311  00023D  47                 	db	71	;'G'
   312  00023E  00                 	db	0
   313  00023F                     STR_6:
   314  00023F  41                 	db	65	;'A'
   315  000240  42                 	db	66	;'B'
   316  000241  43                 	db	67	;'C'
   317  000242  44                 	db	68	;'D'
   318  000243  47                 	db	71	;'G'
   319  000244  00                 	db	0
   320  000245                     STR_5:
   321  000245  41                 	db	65	;'A'
   322  000246  42                 	db	66	;'B'
   323  000247  44                 	db	68	;'D'
   324  000248  45                 	db	69	;'E'
   325  000249  47                 	db	71	;'G'
   326  00024A  00                 	db	0
   327  00024B                     STR_8:
   328  00024B  41                 	db	65	;'A'
   329  00024C  43                 	db	67	;'C'
   330  00024D  44                 	db	68	;'D'
   331  00024E  46                 	db	70	;'F'
   332  00024F  47                 	db	71	;'G'
   333  000250  00                 	db	0
   334  000251                     STR_18:
   335  000251  41                 	db	65	;'A'
   336  000252  42                 	db	66	;'B'
   337  000253  45                 	db	69	;'E'
   338  000254  46                 	db	70	;'F'
   339  000255  47                 	db	71	;'G'
   340  000256  00                 	db	0
   341  000257                     STR_15:
   342  000257  41                 	db	65	;'A'
   343  000258  44                 	db	68	;'D'
   344  000259  45                 	db	69	;'E'
   345  00025A  46                 	db	70	;'F'
   346  00025B  47                 	db	71	;'G'
   347  00025C  00                 	db	0
   348  00025D                     STR_7:
   349  00025D  42                 	db	66	;'B'
   350  00025E  43                 	db	67	;'C'
   351  00025F  46                 	db	70	;'F'
   352  000260  47                 	db	71	;'G'
   353  000261  00                 	db	0
   354  000262                     STR_10:
   355  000262  41                 	db	65	;'A'
   356  000263  42                 	db	66	;'B'
   357  000264  43                 	db	67	;'C'
   358  000265  00                 	db	0
   359  000266  4C                 	db	76	;'L'
   360  000267  4F                 	db	79	;'O'
   361  000268  41                 	db	65	;'A'
   362  000269  00                 	db	0
   363  00026A  44                 	db	68	;'D'
   364  00026B  45                 	db	69	;'E'
   365  00026C  4C                 	db	76	;'L'
   366  00026D  00                 	db	0
   367  0000                     
   368                           ; #config settings
   369  00026E  00                 	db	0	; dummy byte at the end
   370  0000                     
   371                           	psect	cinit
   372  0008CC                     __pcinit:
   373                           	opt stack 0
   374  0008CC                     start_initialization:
   375                           	opt stack 0
   376  0008CC                     __initialization:
   377                           	opt stack 0
   378                           
   379                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   380  0008CC  6A40               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   381                           
   382                           ; Clear objects allocated to COMRAM (23 bytes)
   383  0008CE  EE00  F029         	lfsr	0,__pbssCOMRAM
   384  0008D2  0E17               	movlw	23
   385  0008D4                     clear_0:
   386  0008D4  6AEE               	clrf	postinc0,c
   387  0008D6  06E8               	decf	wreg,f,c
   388  0008D8  E1FD               	bnz	clear_0
   389                           
   390                           ; Initialize objects allocated to BANK1 (180 bytes)
   391                           ; load TBLPTR registers with __pidataBANK1
   392  0008DA  0E84               	movlw	low __pidataBANK1
   393  0008DC  6EF6               	movwf	tblptrl,c
   394  0008DE  0E05               	movlw	high __pidataBANK1
   395  0008E0  6EF7               	movwf	tblptrh,c
   396  0008E2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   397  0008E4  6EF8               	movwf	tblptru,c
   398  0008E6  EE01  F000         	lfsr	0,__pdataBANK1
   399  0008EA  EE10 F0B4          	lfsr	1,180
   400  0008EE                     copy_data0:
   401  0008EE  0009               	tblrd		*+
   402  0008F0  CFF5 FFEE          	movff	tablat,postinc0
   403  0008F4  50E5               	movf	postdec1,w,c
   404  0008F6  50E1               	movf	fsr1l,w,c
   405  0008F8  E1FA               	bnz	copy_data0
   406  0008FA                     end_of_initialization:
   407                           	opt stack 0
   408  0008FA                     __end_of__initialization:
   409                           	opt stack 0
   410  0008FA  9041               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   411  0008FC  9241               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   412  0008FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   413  000900  6EF8               	movwf	tblptru,c
   414  000902  0100               	movlb	0
   415  000904  EFF2  F004         	goto	_main	;jump to C main() function
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec1	equ	0xFE5
   423                           fsr1l	equ	0xFE1
   424                           
   425                           	psect	bitbssCOMRAM
   426  000200                     __pbitbssCOMRAM:
   427                           	opt stack 0
   428  000200                     _ignite_ready:
   429                           	opt stack 0
   430  000200                     	ds	1
   431  000201                     _master_addressed:
   432                           	opt stack 0
   433  000201                     	ds	1
   434  000202                     _overrun:
   435                           	opt stack 0
   436  000202                     	ds	1
   437  000203                     _testflag:
   438                           	opt stack 0
   439  000203                     	ds	1
   440                           tblptru	equ	0xFF8
   441                           tblptrh	equ	0xFF7
   442                           tblptrl	equ	0xFF6
   443                           tablat	equ	0xFF5
   444                           postinc0	equ	0xFEE
   445                           wreg	equ	0xFE8
   446                           postdec1	equ	0xFE5
   447                           fsr1l	equ	0xFE1
   448                           
   449                           	psect	bssCOMRAM
   450  000029                     __pbssCOMRAM:
   451                           	opt stack 0
   452  000029                     _received:
   453                           	opt stack 0
   454  000029                     	ds	6
   455  00002F                     _current_time:
   456                           	opt stack 0
   457  00002F                     	ds	2
   458  000031                     _check_counter:
   459                           	opt stack 0
   460  000031                     	ds	1
   461  000032                     _display_counter:
   462                           	opt stack 0
   463  000032                     	ds	1
   464  000033                     _pin_selected:
   465                           	opt stack 0
   466  000033                     	ds	1
   467  000034                     _receive_counter:
   468                           	opt stack 0
   469  000034                     	ds	1
   470  000035                     _slave_selected:
   471                           	opt stack 0
   472  000035                     	ds	1
   473  000036                     _pixels:
   474                           	opt stack 0
   475  000036                     	ds	7
   476  00003D                     _signs:
   477                           	opt stack 0
   478  00003D                     	ds	3
   479                           tblptru	equ	0xFF8
   480                           tblptrh	equ	0xFF7
   481                           tblptrl	equ	0xFF6
   482                           tablat	equ	0xFF5
   483                           postinc0	equ	0xFEE
   484                           wreg	equ	0xFE8
   485                           postdec1	equ	0xFE5
   486                           fsr1l	equ	0xFE1
   487                           
   488                           	psect	dataBANK1
   489  000100                     __pdataBANK1:
   490                           	opt stack 0
   491  000100                     _pin:
   492                           	opt stack 0
   493  000100                     	ds	180
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           postdec1	equ	0xFE5
   501                           fsr1l	equ	0xFE1
   502                           
   503                           	psect	cstackBANK0
   504  000060                     __pcstackBANK0:
   505                           	opt stack 0
   506  000060                     Write_Display_Byte@write_data:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x0
   510  000060                     	ds	2
   511  000062                     ??_Write_Display_Byte:
   512                           
   513                           ; 0 bytes @ 0x2
   514  000062                     	ds	4
   515  000066                     Write_Display_Byte@counter:
   516                           	opt stack 0
   517                           
   518                           ; 1 bytes @ 0x6
   519  000066                     	ds	1
   520  000067                     tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           postdec1	equ	0xFE5
   527                           fsr1l	equ	0xFE1
   528                           
   529                           ; 0 bytes @ 0x7
   530                           
   531                           	psect	cstackCOMRAM
   532  000001                     __pcstackCOMRAM:
   533                           	opt stack 0
   534  000001                     ?___awdiv:
   535                           	opt stack 0
   536  000001                     ?___lwmod:
   537                           	opt stack 0
   538  000001                     Transmit@operation:
   539                           	opt stack 0
   540  000001                     ___awdiv@dividend:
   541                           	opt stack 0
   542  000001                     ___lwmod@dividend:
   543                           	opt stack 0
   544  000001                     i2Write_Display_Byte@write_data:
   545                           	opt stack 0
   546  000001                     Set_Bits@bits:
   547                           	opt stack 0
   548                           
   549                           ; 3 bytes @ 0x0
   550  000001                     	ds	1
   551  000002                     Transmit@port:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x1
   555  000002                     	ds	1
   556  000003                     ??i2_Write_Display_Byte:
   557  000003                     Transmit@receiver:
   558                           	opt stack 0
   559  000003                     ___awdiv@divisor:
   560                           	opt stack 0
   561  000003                     ___lwmod@divisor:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x2
   565  000003                     	ds	1
   566  000004                     ??_Set_Bits:
   567                           
   568                           ; 0 bytes @ 0x3
   569  000004                     	ds	1
   570  000005                     ___awdiv@counter:
   571                           	opt stack 0
   572  000005                     ___lwmod@counter:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x4
   576  000005                     	ds	1
   577  000006                     Ignite_Detonators@counter:
   578                           	opt stack 0
   579  000006                     ___awdiv@sign:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x5
   583  000006                     	ds	1
   584  000007                     Set_Bits@bitcount:
   585                           	opt stack 0
   586  000007                     i2Write_Display_Byte@counter:
   587                           	opt stack 0
   588  000007                     ___awdiv@quotient:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x6
   592  000007                     	ds	1
   593  000008                     Set_Bits@Bitoutput:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x7
   597  000008                     	ds	1
   598  000009                     Evaluate_Display@evaluate:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x8
   602  000009                     	ds	2
   603  00000B                     ??_Evaluate_Display:
   604                           
   605                           ; 0 bytes @ 0xA
   606  00000B                     	ds	2
   607  00000D                     Evaluate_Display@size:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0xC
   611  00000D                     	ds	1
   612  00000E                     Evaluate_Signs@evaluation_value:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0xD
   616  00000E                     	ds	2
   617  000010                     Evaluate_Signs@valuecounter:
   618                           	opt stack 0
   619                           
   620                           ; 1 bytes @ 0xF
   621  000010                     	ds	1
   622  000011                     Set_Display@information:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x10
   626  000011                     	ds	1
   627  000012                     Set_Display@value:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x11
   631  000012                     	ds	2
   632  000014                     Set_Display@type:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x13
   636  000014                     	ds	1
   637  000015                     ??_Isr:
   638                           
   639                           ; 0 bytes @ 0x14
   640  000015                     	ds	17
   641  000026                     Isr@pixel_index_array:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x25
   645  000026                     	ds	1
   646  000027                     Isr@pixel_index_bit:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x26
   650  000027                     	ds	1
   651  000028                     Isr@search_index:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x27
   655  000028                     	ds	1
   656                           tblptru	equ	0xFF8
   657                           tblptrh	equ	0xFF7
   658                           tblptrl	equ	0xFF6
   659                           tablat	equ	0xFF5
   660                           postinc0	equ	0xFEE
   661                           wreg	equ	0xFE8
   662                           postdec1	equ	0xFE5
   663                           fsr1l	equ	0xFE1
   664                           
   665 ;;
   666 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   667 ;;
   668 ;; *************** function _main *****************
   669 ;; Defined at:
   670 ;;		line 86 in file "main.c"
   671 ;; Parameters:    Size  Location     Type
   672 ;;		None
   673 ;; Auto vars:     Size  Location     Type
   674 ;;		None
   675 ;; Return value:  Size  Location     Type
   676 ;;		None               void
   677 ;; Registers used:
   678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMRAM   BANK0   BANK1
   684 ;;      Params:         0       0       0
   685 ;;      Locals:         0       0       0
   686 ;;      Temps:          0       0       0
   687 ;;      Totals:         0       0       0
   688 ;;Total ram usage:        0 bytes
   689 ;; Hardware stack levels required when called:    7
   690 ;; This function calls:
   691 ;;		_Init
   692 ;;		_Write_Display_Byte
   693 ;; This function is called by:
   694 ;;		Startup code after reset
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           	psect	text0
   699  0009E4                     __ptext0:
   700                           	opt stack 0
   701  0009E4                     _main:
   702                           	opt stack 24
   703                           
   704                           ;main.c: 87: Init();
   705                           
   706                           ;incstack = 0
   707  0009E4  ECE5  F004         	call	_Init	;wreg free
   708  0009E8                     l2483:
   709                           
   710                           ;main.c: 90: Write_Display_Byte(0b01010011);
   711  0009E8  0E53               	movlw	83
   712  0009EA  0100               	movlb	0	; () banked
   713  0009EC  6F60               	movwf	Write_Display_Byte@write_data& (0+255),b
   714  0009EE  0E00               	movlw	0
   715  0009F0  0100               	movlb	0	; () banked
   716  0009F2  6F61               	movwf	(Write_Display_Byte@write_data+1)& (0+255),b
   717  0009F4  EC94  F003         	call	_Write_Display_Byte	;wreg free
   718  0009F8  D7F7               	goto	l2483
   719  0009FA                     __end_of_main:
   720                           	opt stack 0
   721                           tblptru	equ	0xFF8
   722                           tblptrh	equ	0xFF7
   723                           tblptrl	equ	0xFF6
   724                           tablat	equ	0xFF5
   725                           postinc0	equ	0xFEE
   726                           wreg	equ	0xFE8
   727                           postdec1	equ	0xFE5
   728                           fsr1l	equ	0xFE1
   729                           
   730 ;; *************** function _Write_Display_Byte *****************
   731 ;; Defined at:
   732 ;;		line 49 in file "communication.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  write_data      2    0[BANK0 ] PTR unsigned char 
   735 ;;		 -> pixels(7), RAM(511), 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  counter         1    6[BANK0 ] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;		None               void
   740 ;; Registers used:
   741 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1
   747 ;;      Params:         0       2       0
   748 ;;      Locals:         0       1       0
   749 ;;      Temps:          0       4       0
   750 ;;      Totals:         0       7       0
   751 ;;Total ram usage:        7 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    5
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_main
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	text1
   762  000728                     __ptext1:
   763                           	opt stack 0
   764  000728                     _Write_Display_Byte:
   765                           	opt stack 25
   766                           
   767                           ;communication.c: 50: for(unsigned char counter = sizeof(pixels); counter > 0;
   768                           
   769                           ;incstack = 0
   770  000728  0E07               	movlw	7
   771  00072A  0100               	movlb	0	; () banked
   772  00072C  6F66               	movwf	Write_Display_Byte@counter& (0+255),b
   773  00072E                     
   774                           ;communication.c: 51: counter--) {
   775  00072E  0100               	movlb	0	; () banked
   776  000730  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
   777  000732  0100               	movlb	0	; () banked
   778  000734  B4D8               	btfsc	status,2,c
   779  000736  0012               	return	
   780                           
   781                           ; BSR set to: 0
   782                           ;communication.c: 52: if(SSP1IF = 1) {
   783                           
   784                           ; BSR set to: 0
   785  000738  869E               	bsf	3998,3,c	;volatile
   786  00073A  B69E               	btfsc	3998,3,c	;volatile
   787                           
   788                           ; BSR set to: 0
   789                           ;communication.c: 53: SSP1IF = 0;
   790  00073C  969E               	bcf	3998,3,c	;volatile
   791                           
   792                           ; BSR set to: 0
   793                           ;communication.c: 54: }
   794                           ;communication.c: 55: SSP1BUF = write_data[counter - 1];
   795                           
   796                           ; BSR set to: 0
   797  00073E  0EFF               	movlw	255
   798  000740  0100               	movlb	0	; () banked
   799  000742  6F62               	movwf	??_Write_Display_Byte& (0+255),b
   800  000744  0EFF               	movlw	255
   801  000746  0100               	movlb	0	; () banked
   802  000748  6F63               	movwf	(??_Write_Display_Byte+1)& (0+255),b
   803  00074A  0100               	movlb	0	; () banked
   804  00074C  5166               	movf	Write_Display_Byte@counter& (0+255),w,b
   805  00074E  0100               	movlb	0	; () banked
   806  000750  6F64               	movwf	(??_Write_Display_Byte+2)& (0+255),b
   807  000752  6B65               	clrf	(??_Write_Display_Byte+3)& (0+255),b
   808  000754  0100               	movlb	0	; () banked
   809  000756  5162               	movf	??_Write_Display_Byte& (0+255),w,b
   810  000758  0100               	movlb	0	; () banked
   811  00075A  2764               	addwf	(??_Write_Display_Byte+2)& (0+255),f,b
   812  00075C  0100               	movlb	0	; () banked
   813  00075E  5163               	movf	(??_Write_Display_Byte+1)& (0+255),w,b
   814  000760  0100               	movlb	0	; () banked
   815  000762  2365               	addwfc	(??_Write_Display_Byte+3)& (0+255),f,b
   816  000764  0100               	movlb	0	; () banked
   817  000766  5164               	movf	(??_Write_Display_Byte+2)& (0+255),w,b
   818  000768  0100               	movlb	0	; () banked
   819  00076A  2560               	addwf	Write_Display_Byte@write_data& (0+255),w,b
   820  00076C  6ED9               	movwf	fsr2l,c
   821  00076E  0100               	movlb	0	; () banked
   822  000770  5165               	movf	(??_Write_Display_Byte+3)& (0+255),w,b
   823  000772  0100               	movlb	0	; () banked
   824  000774  2161               	addwfc	(Write_Display_Byte@write_data+1)& (0+255),w,b
   825  000776  6EDA               	movwf	fsr2h,c
   826  000778  50DF               	movf	indf2,w,c
   827  00077A  6EC9               	movwf	4041,c	;volatile
   828  00077C                     l505:
   829  00077C  A69E               	btfss	3998,3,c	;volatile
   830  00077E  D7FE               	goto	l505
   831                           
   832                           ;communication.c: 57: SSP1IF = 0;
   833  000780  969E               	bcf	3998,3,c	;volatile
   834                           
   835                           ;communication.c: 58: PORTCbits.RC0 = 0;
   836  000782  9082               	bcf	3970,0,c	;volatile
   837                           
   838                           ;communication.c: 59: PORTCbits.RC0 = 1;
   839  000784  8082               	bsf	3970,0,c	;volatile
   840                           
   841                           ;communication.c: 60: PORTCbits.RC0 = 0;
   842  000786  9082               	bcf	3970,0,c	;volatile
   843  000788  0100               	movlb	0	; () banked
   844  00078A  0766               	decf	Write_Display_Byte@counter& (0+255),f,b
   845  00078C  D7D0               	goto	L1
   846  00078E                     __end_of_Write_Display_Byte:
   847                           	opt stack 0
   848                           tblptru	equ	0xFF8
   849                           tblptrh	equ	0xFF7
   850                           tblptrl	equ	0xFF6
   851                           tablat	equ	0xFF5
   852                           postinc0	equ	0xFEE
   853                           wreg	equ	0xFE8
   854                           postdec1	equ	0xFE5
   855                           fsr1l	equ	0xFE1
   856                           indf2	equ	0xFDF
   857                           fsr2h	equ	0xFDA
   858                           fsr2l	equ	0xFD9
   859                           status	equ	0xFD8
   860                           
   861 ;; *************** function _Init *****************
   862 ;; Defined at:
   863 ;;		line 3 in file "init.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;		None               void
   870 ;; Registers used:
   871 ;;		wreg, status,2, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1
   877 ;;      Params:         0       0       0
   878 ;;      Locals:         0       0       0
   879 ;;      Temps:          0       0       0
   880 ;;      Totals:         0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    6
   884 ;; This function calls:
   885 ;;		_InitAnsel
   886 ;;		_InitMiscellaneous
   887 ;;		_InitPort
   888 ;;		_InitTimer
   889 ;;		_InitTransmission
   890 ;;		_InitTris
   891 ;; This function is called by:
   892 ;;		_main
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896                           	psect	text2
   897  0009CA                     __ptext2:
   898                           	opt stack 0
   899  0009CA                     _Init:
   900                           	opt stack 24
   901                           
   902                           ;init.c: 4: InitPort();
   903                           
   904                           ; BSR set to: 0
   905                           ;incstack = 0
   906  0009CA  EC10  F005         	call	_InitPort	;wreg free
   907                           
   908                           ;init.c: 5: InitTris();
   909  0009CE  EC07  F005         	call	_InitTris	;wreg free
   910                           
   911                           ;init.c: 6: InitAnsel();
   912  0009D2  ECFD  F004         	call	_InitAnsel	;wreg free
   913                           
   914                           ;init.c: 7: InitMiscellaneous();
   915  0009D6  EC20  F005         	call	_InitMiscellaneous	;wreg free
   916                           
   917                           ;init.c: 8: InitTransmission();
   918  0009DA  ECD3  F004         	call	_InitTransmission	;wreg free
   919                           
   920                           ;init.c: 9: InitTimer();
   921  0009DE  ECBB  F004         	call	_InitTimer	;wreg free
   922  0009E2  0012               	return		;funcret
   923  0009E4                     __end_of_Init:
   924                           	opt stack 0
   925                           tblptru	equ	0xFF8
   926                           tblptrh	equ	0xFF7
   927                           tblptrl	equ	0xFF6
   928                           tablat	equ	0xFF5
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           postdec1	equ	0xFE5
   932                           fsr1l	equ	0xFE1
   933                           indf2	equ	0xFDF
   934                           fsr2h	equ	0xFDA
   935                           fsr2l	equ	0xFD9
   936                           status	equ	0xFD8
   937                           
   938 ;; *************** function _InitTris *****************
   939 ;; Defined at:
   940 ;;		line 20 in file "init.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;		None               void
   947 ;; Registers used:
   948 ;;		wreg, status,2
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1
   954 ;;      Params:         0       0       0
   955 ;;      Locals:         0       0       0
   956 ;;      Temps:          0       0       0
   957 ;;      Totals:         0       0       0
   958 ;;Total ram usage:        0 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    5
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_Init
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text3
   969  000A0E                     __ptext3:
   970                           	opt stack 0
   971  000A0E                     _InitTris:
   972                           	opt stack 24
   973                           
   974                           ;init.c: 21: TRISA = 0b00000000;
   975                           
   976                           ;incstack = 0
   977  000A0E  0E00               	movlw	0
   978  000A10  6E92               	movwf	3986,c	;volatile
   979                           
   980                           ;init.c: 22: TRISB = 0b00011111;
   981  000A12  0E1F               	movlw	31
   982  000A14  6E93               	movwf	3987,c	;volatile
   983                           
   984                           ;init.c: 23: TRISC = 0b10000010;
   985  000A16  0E82               	movlw	130
   986  000A18  6E94               	movwf	3988,c	;volatile
   987                           
   988                           ;init.c: 24: TRISE = 0;
   989  000A1A  0E00               	movlw	0
   990  000A1C  6E96               	movwf	3990,c	;volatile
   991  000A1E  0012               	return		;funcret
   992  000A20                     __end_of_InitTris:
   993                           	opt stack 0
   994                           tblptru	equ	0xFF8
   995                           tblptrh	equ	0xFF7
   996                           tblptrl	equ	0xFF6
   997                           tablat	equ	0xFF5
   998                           postinc0	equ	0xFEE
   999                           wreg	equ	0xFE8
  1000                           postdec1	equ	0xFE5
  1001                           fsr1l	equ	0xFE1
  1002                           indf2	equ	0xFDF
  1003                           fsr2h	equ	0xFDA
  1004                           fsr2l	equ	0xFD9
  1005                           status	equ	0xFD8
  1006                           
  1007 ;; *************** function _InitTransmission *****************
  1008 ;; Defined at:
  1009 ;;		line 37 in file "init.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;		None               void
  1016 ;; Registers used:
  1017 ;;		wreg, status,2
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1
  1023 ;;      Params:         0       0       0
  1024 ;;      Locals:         0       0       0
  1025 ;;      Temps:          0       0       0
  1026 ;;      Totals:         0       0       0
  1027 ;;Total ram usage:        0 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; Hardware stack levels required when called:    5
  1030 ;; This function calls:
  1031 ;;		Nothing
  1032 ;; This function is called by:
  1033 ;;		_Init
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           	psect	text4
  1038  0009A6                     __ptext4:
  1039                           	opt stack 0
  1040  0009A6                     _InitTransmission:
  1041                           	opt stack 24
  1042                           
  1043                           ;init.c: 39: SSP1STAT = 0b01000000;
  1044                           
  1045                           ;incstack = 0
  1046  0009A6  0E40               	movlw	64
  1047  0009A8  6EC7               	movwf	4039,c	;volatile
  1048                           
  1049                           ;init.c: 40: SSP1CON1 = 0b00100010;
  1050  0009AA  0E22               	movlw	34
  1051  0009AC  6EC6               	movwf	4038,c	;volatile
  1052                           
  1053                           ;init.c: 42: TXSTA1bits.SYNC = 0;
  1054  0009AE  98AC               	bcf	4012,4,c	;volatile
  1055                           
  1056                           ;init.c: 43: TXSTA1bits.BRGH = 1;
  1057  0009B0  84AC               	bsf	4012,2,c	;volatile
  1058                           
  1059                           ;init.c: 44: BAUDCON1bits.BRG16 = 0;
  1060  0009B2  96B8               	bcf	4024,3,c	;volatile
  1061                           
  1062                           ;init.c: 45: SPBRG1 = 25;
  1063  0009B4  0E19               	movlw	25
  1064  0009B6  6EAF               	movwf	4015,c	;volatile
  1065                           
  1066                           ;init.c: 46: TRISCbits.RC6 = 1;
  1067  0009B8  8C94               	bsf	3988,6,c	;volatile
  1068                           
  1069                           ;init.c: 47: TRISCbits.RC7 = 1;
  1070  0009BA  8E94               	bsf	3988,7,c	;volatile
  1071                           
  1072                           ;init.c: 48: RCSTA1bits.SPEN = 1;
  1073  0009BC  8EAB               	bsf	4011,7,c	;volatile
  1074                           
  1075                           ;init.c: 49: TXSTA1bits.TX9 = 1;
  1076  0009BE  8CAC               	bsf	4012,6,c	;volatile
  1077                           
  1078                           ;init.c: 50: TXSTA1bits.TXEN = 1;
  1079  0009C0  8AAC               	bsf	4012,5,c	;volatile
  1080                           
  1081                           ;init.c: 51: RCSTA1bits.RC9 = 1;
  1082  0009C2  8CAB               	bsf	4011,6,c	;volatile
  1083                           
  1084                           ;init.c: 52: RCSTA1bits.CREN = 1;
  1085  0009C4  88AB               	bsf	4011,4,c	;volatile
  1086                           
  1087                           ;init.c: 53: TRISCbits.RC6 = 0;
  1088  0009C6  9C94               	bcf	3988,6,c	;volatile
  1089  0009C8  0012               	return		;funcret
  1090  0009CA                     __end_of_InitTransmission:
  1091                           	opt stack 0
  1092                           tblptru	equ	0xFF8
  1093                           tblptrh	equ	0xFF7
  1094                           tblptrl	equ	0xFF6
  1095                           tablat	equ	0xFF5
  1096                           postinc0	equ	0xFEE
  1097                           wreg	equ	0xFE8
  1098                           postdec1	equ	0xFE5
  1099                           fsr1l	equ	0xFE1
  1100                           indf2	equ	0xFDF
  1101                           fsr2h	equ	0xFDA
  1102                           fsr2l	equ	0xFD9
  1103                           status	equ	0xFD8
  1104                           
  1105 ;; *************** function _InitTimer *****************
  1106 ;; Defined at:
  1107 ;;		line 56 in file "init.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;		None               void
  1114 ;; Registers used:
  1115 ;;		wreg, status,2
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1
  1121 ;;      Params:         0       0       0
  1122 ;;      Locals:         0       0       0
  1123 ;;      Temps:          0       0       0
  1124 ;;      Totals:         0       0       0
  1125 ;;Total ram usage:        0 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    5
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_Init
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text5
  1136  000976                     __ptext5:
  1137                           	opt stack 0
  1138  000976                     _InitTimer:
  1139                           	opt stack 24
  1140                           
  1141                           ;init.c: 58: T1CONbits.TMR1CS = 0b00;
  1142                           
  1143                           ;incstack = 0
  1144  000976  0E3F               	movlw	-193
  1145  000978  16CD               	andwf	4045,f,c	;volatile
  1146                           
  1147                           ;init.c: 59: T1CONbits.T1CKPS = 0b11;
  1148  00097A  0E30               	movlw	48
  1149  00097C  12CD               	iorwf	4045,f,c	;volatile
  1150                           
  1151                           ;init.c: 60: T1CONbits.nT1SYNC = 0;
  1152  00097E  94CD               	bcf	4045,2,c	;volatile
  1153                           
  1154                           ;init.c: 62: T3CONbits.TMR3CS = 0b00;
  1155  000980  0E3F               	movlw	-193
  1156  000982  16B1               	andwf	4017,f,c	;volatile
  1157                           
  1158                           ;init.c: 63: T3CONbits.T3CKPS = 0b11;
  1159  000984  0E30               	movlw	48
  1160  000986  12B1               	iorwf	4017,f,c	;volatile
  1161                           
  1162                           ;init.c: 64: T3CONbits.nT3SYNC = 0;
  1163  000988  94B1               	bcf	4017,2,c	;volatile
  1164                           
  1165                           ;init.c: 66: CCP1CONbits.CCP1M = 0b1010;
  1166  00098A  50BD               	movf	4029,w,c	;volatile
  1167  00098C  0BF0               	andlw	-16
  1168  00098E  090A               	iorlw	10
  1169  000990  6EBD               	movwf	4029,c	;volatile
  1170                           
  1171                           ;init.c: 67: CCPTMRS0bits.C1TSEL = 0b01;
  1172  000992  010F               	movlb	15	; () banked
  1173  000994  5149               	movf	73,w,b	;volatile
  1174  000996  0BFC               	andlw	-4
  1175  000998  0901               	iorlw	1
  1176  00099A  6F49               	movwf	73,b	;volatile
  1177                           
  1178                           ;init.c: 68: CCPR1L = 72;
  1179  00099C  0E48               	movlw	72
  1180  00099E  6EBE               	movwf	4030,c	;volatile
  1181                           
  1182                           ;init.c: 69: CCPR1H = 232;
  1183  0009A0  0EE8               	movlw	232
  1184  0009A2  6EBF               	movwf	4031,c	;volatile
  1185                           
  1186                           ; BSR set to: 15
  1187  0009A4  0012               	return		;funcret
  1188  0009A6                     __end_of_InitTimer:
  1189                           	opt stack 0
  1190                           tblptru	equ	0xFF8
  1191                           tblptrh	equ	0xFF7
  1192                           tblptrl	equ	0xFF6
  1193                           tablat	equ	0xFF5
  1194                           postinc0	equ	0xFEE
  1195                           wreg	equ	0xFE8
  1196                           postdec1	equ	0xFE5
  1197                           fsr1l	equ	0xFE1
  1198                           indf2	equ	0xFDF
  1199                           fsr2h	equ	0xFDA
  1200                           fsr2l	equ	0xFD9
  1201                           status	equ	0xFD8
  1202                           
  1203 ;; *************** function _InitPort *****************
  1204 ;; Defined at:
  1205 ;;		line 13 in file "init.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;		None               void
  1212 ;; Registers used:
  1213 ;;		wreg, status,2
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1
  1219 ;;      Params:         0       0       0
  1220 ;;      Locals:         0       0       0
  1221 ;;      Temps:          0       0       0
  1222 ;;      Totals:         0       0       0
  1223 ;;Total ram usage:        0 bytes
  1224 ;; Hardware stack levels used:    1
  1225 ;; Hardware stack levels required when called:    5
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_Init
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text6
  1234  000A20                     __ptext6:
  1235                           	opt stack 0
  1236  000A20                     _InitPort:
  1237                           	opt stack 24
  1238                           
  1239                           ;init.c: 14: PORTA = 0b00000000;
  1240                           
  1241                           ; BSR set to: 15
  1242                           ;incstack = 0
  1243  000A20  0E00               	movlw	0
  1244  000A22  6E80               	movwf	3968,c	;volatile
  1245                           
  1246                           ;init.c: 15: PORTB = 0b00000000;
  1247  000A24  0E00               	movlw	0
  1248  000A26  6E81               	movwf	3969,c	;volatile
  1249                           
  1250                           ;init.c: 16: PORTC = 0b00000000;
  1251  000A28  0E00               	movlw	0
  1252  000A2A  6E82               	movwf	3970,c	;volatile
  1253                           
  1254                           ;init.c: 17: PORTE = 0;
  1255  000A2C  0E00               	movlw	0
  1256  000A2E  6E84               	movwf	3972,c	;volatile
  1257  000A30  0012               	return		;funcret
  1258  000A32                     __end_of_InitPort:
  1259                           	opt stack 0
  1260                           tblptru	equ	0xFF8
  1261                           tblptrh	equ	0xFF7
  1262                           tblptrl	equ	0xFF6
  1263                           tablat	equ	0xFF5
  1264                           postinc0	equ	0xFEE
  1265                           wreg	equ	0xFE8
  1266                           postdec1	equ	0xFE5
  1267                           fsr1l	equ	0xFE1
  1268                           indf2	equ	0xFDF
  1269                           fsr2h	equ	0xFDA
  1270                           fsr2l	equ	0xFD9
  1271                           status	equ	0xFD8
  1272                           
  1273 ;; *************** function _InitMiscellaneous *****************
  1274 ;; Defined at:
  1275 ;;		line 33 in file "init.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;		None               void
  1282 ;; Registers used:
  1283 ;;		wreg, status,2
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1
  1289 ;;      Params:         0       0       0
  1290 ;;      Locals:         0       0       0
  1291 ;;      Temps:          0       0       0
  1292 ;;      Totals:         0       0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    5
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_Init
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text7
  1304  000A40                     __ptext7:
  1305                           	opt stack 0
  1306  000A40                     _InitMiscellaneous:
  1307                           	opt stack 24
  1308                           
  1309                           ;init.c: 34: OSCCON = 0b01010011;
  1310                           
  1311                           ;incstack = 0
  1312  000A40  0E53               	movlw	83
  1313  000A42  6ED3               	movwf	4051,c	;volatile
  1314  000A44  0012               	return		;funcret
  1315  000A46                     __end_of_InitMiscellaneous:
  1316                           	opt stack 0
  1317                           tblptru	equ	0xFF8
  1318                           tblptrh	equ	0xFF7
  1319                           tblptrl	equ	0xFF6
  1320                           tablat	equ	0xFF5
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           postdec1	equ	0xFE5
  1324                           fsr1l	equ	0xFE1
  1325                           indf2	equ	0xFDF
  1326                           fsr2h	equ	0xFDA
  1327                           fsr2l	equ	0xFD9
  1328                           status	equ	0xFD8
  1329                           
  1330 ;; *************** function _InitAnsel *****************
  1331 ;; Defined at:
  1332 ;;		line 27 in file "init.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;		None               void
  1339 ;; Registers used:
  1340 ;;		wreg, status,2
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1
  1346 ;;      Params:         0       0       0
  1347 ;;      Locals:         0       0       0
  1348 ;;      Temps:          0       0       0
  1349 ;;      Totals:         0       0       0
  1350 ;;Total ram usage:        0 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    5
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_Init
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text8
  1361  0009FA                     __ptext8:
  1362                           	opt stack 0
  1363  0009FA                     _InitAnsel:
  1364                           	opt stack 24
  1365                           
  1366                           ;init.c: 28: ANSELA = 0;
  1367                           
  1368                           ;incstack = 0
  1369  0009FA  0E00               	movlw	0
  1370  0009FC  010F               	movlb	15	; () banked
  1371  0009FE  6F38               	movwf	56,b	;volatile
  1372                           
  1373                           ;init.c: 29: ANSELB = 0;
  1374  000A00  0E00               	movlw	0
  1375  000A02  010F               	movlb	15	; () banked
  1376  000A04  6F39               	movwf	57,b	;volatile
  1377                           
  1378                           ;init.c: 30: ANSELC = 0;
  1379  000A06  0E00               	movlw	0
  1380  000A08  010F               	movlb	15	; () banked
  1381  000A0A  6F3A               	movwf	58,b	;volatile
  1382                           
  1383                           ; BSR set to: 15
  1384  000A0C  0012               	return		;funcret
  1385  000A0E                     __end_of_InitAnsel:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           postinc0	equ	0xFEE
  1392                           wreg	equ	0xFE8
  1393                           postdec1	equ	0xFE5
  1394                           fsr1l	equ	0xFE1
  1395                           indf2	equ	0xFDF
  1396                           fsr2h	equ	0xFDA
  1397                           fsr2l	equ	0xFD9
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function _Isr *****************
  1401 ;; Defined at:
  1402 ;;		line 4 in file "interrupt.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  search_index    1   39[COMRAM] unsigned char 
  1407 ;;  pixel_index_    1   38[COMRAM] unsigned char 
  1408 ;;  pixel_index_    1   37[COMRAM] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;		None               void
  1411 ;; Registers used:
  1412 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1
  1418 ;;      Params:         0       0       0
  1419 ;;      Locals:         3       0       0
  1420 ;;      Temps:         17       0       0
  1421 ;;      Totals:        20       0       0
  1422 ;;Total ram usage:       20 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; Hardware stack levels required when called:    4
  1425 ;; This function calls:
  1426 ;;		_Check_Detonators
  1427 ;;		_Ignite_Detonators
  1428 ;;		_Receive
  1429 ;;		_Set_Display
  1430 ;;		___awdiv
  1431 ;; This function is called by:
  1432 ;;		Interrupt level 2
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	intcode
  1437  000008                     __pintcode:
  1438                           	opt stack 0
  1439  000008                     _Isr:
  1440                           	opt stack 24
  1441                           
  1442                           ; BSR set to: 15
  1443                           ;incstack = 0
  1444  000008  8241               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1445  00000A  CFFA F018          	movff	pclath,??_Isr+3
  1446  00000E  CFFB F019          	movff	pclatu,??_Isr+4
  1447  000012  CFE9 F01A          	movff	fsr0l,??_Isr+5
  1448  000016  CFEA F01B          	movff	fsr0h,??_Isr+6
  1449  00001A  CFE1 F01C          	movff	fsr1l,??_Isr+7
  1450  00001E  CFE2 F01D          	movff	fsr1h,??_Isr+8
  1451  000022  CFD9 F01E          	movff	fsr2l,??_Isr+9
  1452  000026  CFDA F01F          	movff	fsr2h,??_Isr+10
  1453  00002A  CFF3 F020          	movff	prodl,??_Isr+11
  1454  00002E  CFF4 F021          	movff	prodh,??_Isr+12
  1455  000032  CFF6 F022          	movff	tblptrl,??_Isr+13
  1456  000036  CFF7 F023          	movff	tblptrh,??_Isr+14
  1457  00003A  CFF8 F024          	movff	tblptru,??_Isr+15
  1458  00003E  CFF5 F025          	movff	tablat,??_Isr+16
  1459                           
  1460                           ;interrupt.c: 5: if(PIR1bits.CCP1IF == 1) {
  1461  000042  A49E               	btfss	3998,2,c	;volatile
  1462  000044  D00B               	goto	i2l2359
  1463                           
  1464                           ;interrupt.c: 7: PIR1bits.CCP1IF = 0;
  1465  000046  949E               	bcf	3998,2,c	;volatile
  1466                           
  1467                           ;interrupt.c: 8: T1CONbits.TMR1ON = 1;
  1468  000048  80CD               	bsf	4045,0,c	;volatile
  1469                           
  1470                           ;interrupt.c: 9: T3CONbits.TMR3ON = 0;
  1471  00004A  90B1               	bcf	4017,0,c	;volatile
  1472                           
  1473                           ;interrupt.c: 10: TMR3L = 0;
  1474  00004C  0E00               	movlw	0
  1475  00004E  6EB2               	movwf	4018,c	;volatile
  1476                           
  1477                           ;interrupt.c: 11: TMR3H = 0;
  1478  000050  0E00               	movlw	0
  1479  000052  6EB3               	movwf	4019,c	;volatile
  1480                           
  1481                           ;interrupt.c: 12: current_time++;
  1482  000054  4A2F               	infsnz	_current_time,f,c
  1483  000056  2A30               	incf	_current_time+1,f,c
  1484                           
  1485                           ;interrupt.c: 13: Ignite_Detonators();
  1486  000058  EC5E  F003         	call	_Ignite_Detonators	;wreg free
  1487  00005C                     i2l2359:
  1488                           
  1489                           ;interrupt.c: 14: }
  1490                           ;interrupt.c: 15: if(PIR1bits.TMR1IF == 1) {
  1491  00005C  A09E               	btfss	3998,0,c	;volatile
  1492  00005E  D007               	goto	i2l2365
  1493                           
  1494                           ;interrupt.c: 16: PIR1bits.TMR1IF = 0;
  1495  000060  909E               	bcf	3998,0,c	;volatile
  1496                           
  1497                           ;interrupt.c: 17: T3CONbits.TMR3ON = 1;
  1498  000062  80B1               	bsf	4017,0,c	;volatile
  1499                           
  1500                           ;interrupt.c: 18: T1CONbits.TMR1ON = 0;
  1501  000064  90CD               	bcf	4045,0,c	;volatile
  1502                           
  1503                           ;interrupt.c: 19: TMR1L = 0;
  1504  000066  0E00               	movlw	0
  1505  000068  6ECE               	movwf	4046,c	;volatile
  1506                           
  1507                           ;interrupt.c: 20: TMR1H = 0;
  1508  00006A  0E00               	movlw	0
  1509  00006C  6ECF               	movwf	4047,c	;volatile
  1510  00006E                     i2l2365:
  1511                           
  1512                           ;interrupt.c: 21: }
  1513                           ;interrupt.c: 22: if(PIR1bits.RCIF == 1) {
  1514  00006E  AA9E               	btfss	3998,5,c	;volatile
  1515  000070  D0B4               	goto	i2l581
  1516                           
  1517                           ;interrupt.c: 23: PIR1bits.RCIF = 0;
  1518  000072  9A9E               	bcf	3998,5,c	;volatile
  1519                           
  1520                           ;interrupt.c: 24: if(RCSTAbits.RX9D == 1) {
  1521  000074  A0AB               	btfss	4011,0,c	;volatile
  1522  000076  D016               	goto	i2l568
  1523                           
  1524                           ;interrupt.c: 25: receive_counter = 0;
  1525  000078  0E00               	movlw	0
  1526  00007A  6E34               	movwf	_receive_counter,c
  1527                           
  1528                           ;interrupt.c: 27: received[receive_counter] =
  1529                           ;interrupt.c: 28: Receive();
  1530  00007C  5034               	movf	_receive_counter,w,c
  1531  00007E  0D01               	mullw	1
  1532  000080  0E29               	movlw	low _received
  1533  000082  24F3               	addwf	prodl,w,c
  1534  000084  6ED9               	movwf	fsr2l,c
  1535  000086  0E00               	movlw	high _received
  1536  000088  20F4               	addwfc	prodh,w,c
  1537  00008A  6EDA               	movwf	fsr2h,c
  1538  00008C  EC19  F005         	call	_Receive	;wreg free
  1539  000090  6EDF               	movwf	indf2,c
  1540                           
  1541                           ;interrupt.c: 29: receive_counter++;
  1542  000092  2A34               	incf	_receive_counter,f,c
  1543                           
  1544                           ;interrupt.c: 31: if(received[0] == 0xAA) {
  1545  000094  0EAA               	movlw	170
  1546  000096  1829               	xorwf	_received,w,c
  1547  000098  A4D8               	btfss	status,2,c
  1548  00009A  D002               	goto	i2l569
  1549                           
  1550                           ;interrupt.c: 32: master_addressed = 1;
  1551  00009C  8240               	bsf	_master_addressed/(0+8),_master_addressed& (0+7),c
  1552                           
  1553                           ;interrupt.c: 33: } else {
  1554  00009E  D090               	goto	i2l2415
  1555  0000A0                     i2l569:
  1556                           
  1557                           ;interrupt.c: 34: master_addressed = 0;
  1558  0000A0  9240               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  1559                           
  1560                           ;interrupt.c: 35: }
  1561                           ;interrupt.c: 36: } else if(master_addressed == 1) {
  1562  0000A2  D08E               	goto	i2l2415
  1563  0000A4                     i2l568:
  1564  0000A4  A240               	btfss	_master_addressed/(0+8),_master_addressed& (0+7),c
  1565  0000A6  D08C               	goto	i2l2415
  1566                           
  1567                           ;interrupt.c: 37: received[receive_counter] =
  1568                           ;interrupt.c: 38: Receive();
  1569  0000A8  5034               	movf	_receive_counter,w,c
  1570  0000AA  0D01               	mullw	1
  1571  0000AC  0E29               	movlw	low _received
  1572  0000AE  24F3               	addwf	prodl,w,c
  1573  0000B0  6ED9               	movwf	fsr2l,c
  1574  0000B2  0E00               	movlw	high _received
  1575  0000B4  20F4               	addwfc	prodh,w,c
  1576  0000B6  6EDA               	movwf	fsr2h,c
  1577  0000B8  EC19  F005         	call	_Receive	;wreg free
  1578  0000BC  6EDF               	movwf	indf2,c
  1579                           
  1580                           ;interrupt.c: 39: receive_counter++;
  1581  0000BE  2A34               	incf	_receive_counter,f,c
  1582                           
  1583                           ;interrupt.c: 41: if(receive_counter > 5) {
  1584  0000C0  0E05               	movlw	5
  1585  0000C2  6434               	cpfsgt	_receive_counter,c
  1586  0000C4  D07D               	goto	i2l2415
  1587                           
  1588                           ;interrupt.c: 42: receive_counter = 0;
  1589  0000C6  0E00               	movlw	0
  1590  0000C8  6E34               	movwf	_receive_counter,c
  1591                           
  1592                           ;interrupt.c: 43: master_addressed = 0;
  1593  0000CA  9240               	bcf	_master_addressed/(0+8),_master_addressed& (0+7),c
  1594                           
  1595                           ;interrupt.c: 45: if(received[2] == 'T') {
  1596  0000CC  0E54               	movlw	84
  1597  0000CE  182B               	xorwf	_received+2,w,c
  1598  0000D0  A4D8               	btfss	status,2,c
  1599  0000D2  D076               	goto	i2l2415
  1600                           
  1601                           ;interrupt.c: 46: unsigned char search_index = 0xFF;
  1602  0000D4  6828               	setf	Isr@search_index,c
  1603                           
  1604                           ;interrupt.c: 47: unsigned char pixel_index_array = 0;
  1605  0000D6  0E00               	movlw	0
  1606  0000D8  6E26               	movwf	Isr@pixel_index_array,c
  1607                           
  1608                           ;interrupt.c: 48: unsigned char pixel_index_bit = 0;
  1609  0000DA  0E00               	movlw	0
  1610  0000DC  6E27               	movwf	Isr@pixel_index_bit,c
  1611                           
  1612                           ;interrupt.c: 49: search_index = (received[1] * 10);
  1613  0000DE  502A               	movf	_received+1,w,c
  1614  0000E0  0D0A               	mullw	10
  1615  0000E2  CFF3 F028          	movff	prodl,Isr@search_index
  1616                           
  1617                           ;interrupt.c: 51: search_index += received[3];
  1618  0000E6  502C               	movf	_received+3,w,c
  1619  0000E8  2628               	addwf	Isr@search_index,f,c
  1620                           
  1621                           ;interrupt.c: 53: pixel_index_array =
  1622                           ;interrupt.c: 54: pin[search_index].led_address / 8;
  1623  0000EA  5028               	movf	Isr@search_index,w,c
  1624  0000EC  0D06               	mullw	6
  1625  0000EE  0E03               	movlw	3
  1626  0000F0  26F3               	addwf	prodl,f,c
  1627  0000F2  0E00               	movlw	0
  1628  0000F4  22F4               	addwfc	prodh,f,c
  1629  0000F6  0E00               	movlw	low _pin
  1630  0000F8  24F3               	addwf	prodl,w,c
  1631  0000FA  6ED9               	movwf	fsr2l,c
  1632  0000FC  0E01               	movlw	high _pin
  1633  0000FE  20F4               	addwfc	prodh,w,c
  1634  000100  6EDA               	movwf	fsr2h,c
  1635  000102  50DF               	movf	indf2,w,c
  1636  000104  6E15               	movwf	??_Isr& (0+255),c
  1637  000106  5015               	movf	??_Isr,w,c
  1638  000108  6E01               	movwf	___awdiv@dividend,c
  1639  00010A  6A02               	clrf	___awdiv@dividend+1,c
  1640  00010C  0E00               	movlw	0
  1641  00010E  6E04               	movwf	___awdiv@divisor+1,c
  1642  000110  0E08               	movlw	8
  1643  000112  6E03               	movwf	___awdiv@divisor,c
  1644  000114  EC1C  F003         	call	___awdiv	;wreg free
  1645  000118  5001               	movf	?___awdiv,w,c
  1646  00011A  6E26               	movwf	Isr@pixel_index_array,c
  1647                           
  1648                           ;interrupt.c: 55: pixel_index_bit =
  1649                           ;interrupt.c: 56: pin[search_index].led_address % 8;
  1650  00011C  5028               	movf	Isr@search_index,w,c
  1651  00011E  0D06               	mullw	6
  1652  000120  0E03               	movlw	3
  1653  000122  26F3               	addwf	prodl,f,c
  1654  000124  0E00               	movlw	0
  1655  000126  22F4               	addwfc	prodh,f,c
  1656  000128  0E00               	movlw	low _pin
  1657  00012A  24F3               	addwf	prodl,w,c
  1658  00012C  6ED9               	movwf	fsr2l,c
  1659  00012E  0E01               	movlw	high _pin
  1660  000130  20F4               	addwfc	prodh,w,c
  1661  000132  6EDA               	movwf	fsr2h,c
  1662  000134  50DF               	movf	indf2,w,c
  1663  000136  0B07               	andlw	7
  1664  000138  6E27               	movwf	Isr@pixel_index_bit,c
  1665                           
  1666                           ;interrupt.c: 57: if(received[4] == '1'){
  1667  00013A  0E31               	movlw	49
  1668  00013C  182D               	xorwf	_received+4,w,c
  1669  00013E  A4D8               	btfss	status,2,c
  1670  000140  D015               	goto	i2l2407
  1671                           
  1672                           ;interrupt.c: 58: pixels[pixel_index_array] |=
  1673                           ;interrupt.c: 59: (1 << pixel_index_bit);
  1674  000142  C027  F015         	movff	Isr@pixel_index_bit,??_Isr
  1675  000146  0E01               	movlw	1
  1676  000148  6E16               	movwf	(??_Isr+1)& (0+255),c
  1677  00014A  2A15               	incf	??_Isr,f,c
  1678  00014C  D002               	goto	i2u159_44
  1679  00014E                     i2u159_45:
  1680  00014E  90D8               	bcf	status,0,c
  1681  000150  3616               	rlcf	??_Isr+1,f,c
  1682  000152                     i2u159_44:
  1683  000152  2E15               	decfsz	??_Isr,f,c
  1684  000154  D7FC               	goto	i2u159_45
  1685  000156  5026               	movf	Isr@pixel_index_array,w,c
  1686  000158  0D01               	mullw	1
  1687  00015A  0E36               	movlw	low _pixels
  1688  00015C  24F3               	addwf	prodl,w,c
  1689  00015E  6ED9               	movwf	fsr2l,c
  1690  000160  0E00               	movlw	high _pixels
  1691  000162  20F4               	addwfc	prodh,w,c
  1692  000164  6EDA               	movwf	fsr2h,c
  1693  000166  5016               	movf	??_Isr+1,w,c
  1694  000168  12DF               	iorwf	indf2,f,c
  1695                           
  1696                           ;interrupt.c: 60: }else if(received[4] == '0') {
  1697  00016A  D01B               	goto	i2l2411
  1698  00016C                     i2l2407:
  1699  00016C  0E30               	movlw	48
  1700  00016E  182D               	xorwf	_received+4,w,c
  1701  000170  A4D8               	btfss	status,2,c
  1702  000172  D017               	goto	i2l2411
  1703                           
  1704                           ;interrupt.c: 61: pixels[pixel_index_array] &=
  1705                           ;interrupt.c: 62: ~(1 << pixel_index_bit);
  1706  000174  C027  F015         	movff	Isr@pixel_index_bit,??_Isr
  1707  000178  0E01               	movlw	1
  1708  00017A  6E16               	movwf	(??_Isr+1)& (0+255),c
  1709  00017C  2A15               	incf	??_Isr,f,c
  1710  00017E  D002               	goto	i2u161_44
  1711  000180                     i2u161_45:
  1712  000180  90D8               	bcf	status,0,c
  1713  000182  3616               	rlcf	??_Isr+1,f,c
  1714  000184                     i2u161_44:
  1715  000184  2E15               	decfsz	??_Isr,f,c
  1716  000186  D7FC               	goto	i2u161_45
  1717  000188  5016               	movf	??_Isr+1,w,c
  1718  00018A  0AFF               	xorlw	255
  1719  00018C  6E17               	movwf	(??_Isr+2)& (0+255),c
  1720  00018E  5026               	movf	Isr@pixel_index_array,w,c
  1721  000190  0D01               	mullw	1
  1722  000192  0E36               	movlw	low _pixels
  1723  000194  24F3               	addwf	prodl,w,c
  1724  000196  6ED9               	movwf	fsr2l,c
  1725  000198  0E00               	movlw	high _pixels
  1726  00019A  20F4               	addwfc	prodh,w,c
  1727  00019C  6EDA               	movwf	fsr2h,c
  1728  00019E  5017               	movf	??_Isr+2,w,c
  1729  0001A0  16DF               	andwf	indf2,f,c
  1730  0001A2                     i2l2411:
  1731                           
  1732                           ;interrupt.c: 63: }
  1733                           ;interrupt.c: 64: if(received[5] == '1') {
  1734  0001A2  0E31               	movlw	49
  1735  0001A4  182E               	xorwf	_received+5,w,c
  1736  0001A6  A4D8               	btfss	status,2,c
  1737  0001A8  D00B               	goto	i2l2415
  1738                           
  1739                           ;interrupt.c: 65: Set_Display('7', 'P', (received[1] + 1));
  1740  0001AA  0E50               	movlw	80
  1741  0001AC  6E11               	movwf	Set_Display@information,c
  1742  0001AE  0E01               	movlw	1
  1743  0001B0  242A               	addwf	_received+1,w,c
  1744  0001B2  6E12               	movwf	Set_Display@value,c
  1745  0001B4  6A13               	clrf	Set_Display@value+1,c
  1746  0001B6  0E00               	movlw	0
  1747  0001B8  2213               	addwfc	Set_Display@value+1,f,c
  1748  0001BA  0E37               	movlw	55
  1749  0001BC  ECF9  F003         	call	_Set_Display
  1750  0001C0                     i2l2415:
  1751                           
  1752                           ;interrupt.c: 66: }
  1753                           ;interrupt.c: 67: }
  1754                           ;interrupt.c: 68: }
  1755                           ;interrupt.c: 69: }
  1756                           ;interrupt.c: 70: __nop();
  1757  0001C0  F000               	nop	
  1758                           
  1759                           ;interrupt.c: 71: if(check_counter < 30 && testflag == 1) {
  1760  0001C2  0E1E               	movlw	30
  1761  0001C4  6031               	cpfslt	_check_counter,c
  1762  0001C6  D006               	goto	i2l2425
  1763  0001C8  A640               	btfss	_testflag/(0+8),_testflag& (0+7),c
  1764  0001CA  D004               	goto	i2l2425
  1765                           
  1766                           ;interrupt.c: 72: check_counter++;
  1767  0001CC  2A31               	incf	_check_counter,f,c
  1768                           
  1769                           ;interrupt.c: 73: Check_Detonators();
  1770  0001CE  EC84  F004         	call	_Check_Detonators	;wreg free
  1771                           
  1772                           ;interrupt.c: 74: }else {
  1773  0001D2  D003               	goto	i2l581
  1774  0001D4                     i2l2425:
  1775                           
  1776                           ;interrupt.c: 75: check_counter = 0;
  1777  0001D4  0E00               	movlw	0
  1778  0001D6  6E31               	movwf	_check_counter,c
  1779                           
  1780                           ;interrupt.c: 76: testflag = 0;
  1781  0001D8  9640               	bcf	_testflag/(0+8),_testflag& (0+7),c
  1782  0001DA                     i2l581:
  1783  0001DA  C025  FFF5         	movff	??_Isr+16,tablat
  1784  0001DE  C024  FFF8         	movff	??_Isr+15,tblptru
  1785  0001E2  C023  FFF7         	movff	??_Isr+14,tblptrh
  1786  0001E6  C022  FFF6         	movff	??_Isr+13,tblptrl
  1787  0001EA  C021  FFF4         	movff	??_Isr+12,prodh
  1788  0001EE  C020  FFF3         	movff	??_Isr+11,prodl
  1789  0001F2  C01F  FFDA         	movff	??_Isr+10,fsr2h
  1790  0001F6  C01E  FFD9         	movff	??_Isr+9,fsr2l
  1791  0001FA  C01D  FFE2         	movff	??_Isr+8,fsr1h
  1792  0001FE  C01C  FFE1         	movff	??_Isr+7,fsr1l
  1793  000202  C01B  FFEA         	movff	??_Isr+6,fsr0h
  1794  000206  C01A  FFE9         	movff	??_Isr+5,fsr0l
  1795  00020A  C019  FFFB         	movff	??_Isr+4,pclatu
  1796  00020E  C018  FFFA         	movff	??_Isr+3,pclath
  1797  000212  9241               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1798  000214  0011               	retfie		f
  1799  000216                     __end_of_Isr:
  1800                           	opt stack 0
  1801                           pclatu	equ	0xFFB
  1802                           pclath	equ	0xFFA
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           prodh	equ	0xFF4
  1808                           prodl	equ	0xFF3
  1809                           postinc0	equ	0xFEE
  1810                           fsr0h	equ	0xFEA
  1811                           fsr0l	equ	0xFE9
  1812                           wreg	equ	0xFE8
  1813                           postdec1	equ	0xFE5
  1814                           fsr1h	equ	0xFE2
  1815                           fsr1l	equ	0xFE1
  1816                           indf2	equ	0xFDF
  1817                           fsr2h	equ	0xFDA
  1818                           fsr2l	equ	0xFD9
  1819                           status	equ	0xFD8
  1820                           
  1821 ;; *************** function ___awdiv *****************
  1822 ;; Defined at:
  1823 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  dividend        2    0[COMRAM] int 
  1826 ;;  divisor         2    2[COMRAM] int 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  quotient        2    6[COMRAM] int 
  1829 ;;  sign            1    5[COMRAM] unsigned char 
  1830 ;;  counter         1    4[COMRAM] unsigned char 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  2    0[COMRAM] int 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1
  1840 ;;      Params:         4       0       0
  1841 ;;      Locals:         4       0       0
  1842 ;;      Temps:          0       0       0
  1843 ;;      Totals:         8       0       0
  1844 ;;Total ram usage:        8 bytes
  1845 ;; Hardware stack levels used:    1
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_Isr
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text10
  1854  000638                     __ptext10:
  1855                           	opt stack 0
  1856  000638                     ___awdiv:
  1857                           	opt stack 27
  1858                           
  1859                           ;incstack = 0
  1860  000638  0E00               	movlw	0
  1861  00063A  6E06               	movwf	___awdiv@sign,c
  1862  00063C  AE04               	btfss	___awdiv@divisor+1,7,c
  1863  00063E  D006               	goto	i2l2119
  1864  000640  6C03               	negf	___awdiv@divisor,c
  1865  000642  1E04               	comf	___awdiv@divisor+1,f,c
  1866  000644  B0D8               	btfsc	status,0,c
  1867  000646  2A04               	incf	___awdiv@divisor+1,f,c
  1868  000648  0E01               	movlw	1
  1869  00064A  6E06               	movwf	___awdiv@sign,c
  1870  00064C                     i2l2119:
  1871  00064C  AE02               	btfss	___awdiv@dividend+1,7,c
  1872  00064E  D006               	goto	i2l2125
  1873  000650  6C01               	negf	___awdiv@dividend,c
  1874  000652  1E02               	comf	___awdiv@dividend+1,f,c
  1875  000654  B0D8               	btfsc	status,0,c
  1876  000656  2A02               	incf	___awdiv@dividend+1,f,c
  1877  000658  0E01               	movlw	1
  1878  00065A  1A06               	xorwf	___awdiv@sign,f,c
  1879  00065C                     i2l2125:
  1880  00065C  0E00               	movlw	0
  1881  00065E  6E08               	movwf	___awdiv@quotient+1,c
  1882  000660  0E00               	movlw	0
  1883  000662  6E07               	movwf	___awdiv@quotient,c
  1884  000664  5003               	movf	___awdiv@divisor,w,c
  1885  000666  1004               	iorwf	___awdiv@divisor+1,w,c
  1886  000668  B4D8               	btfsc	status,2,c
  1887  00066A  D01C               	goto	i2l2147
  1888  00066C  0E01               	movlw	1
  1889  00066E  6E05               	movwf	___awdiv@counter,c
  1890  000670  D004               	goto	i2l2133
  1891  000672                     i2l2131:
  1892  000672  90D8               	bcf	status,0,c
  1893  000674  3603               	rlcf	___awdiv@divisor,f,c
  1894  000676  3604               	rlcf	___awdiv@divisor+1,f,c
  1895  000678  2A05               	incf	___awdiv@counter,f,c
  1896  00067A                     i2l2133:
  1897  00067A  AE04               	btfss	___awdiv@divisor+1,7,c
  1898  00067C  D7FA               	goto	i2l2131
  1899  00067E                     i2l2135:
  1900  00067E  90D8               	bcf	status,0,c
  1901  000680  3607               	rlcf	___awdiv@quotient,f,c
  1902  000682  3608               	rlcf	___awdiv@quotient+1,f,c
  1903  000684  5003               	movf	___awdiv@divisor,w,c
  1904  000686  5C01               	subwf	___awdiv@dividend,w,c
  1905  000688  5004               	movf	___awdiv@divisor+1,w,c
  1906  00068A  5802               	subwfb	___awdiv@dividend+1,w,c
  1907  00068C  A0D8               	btfss	status,0,c
  1908  00068E  D005               	goto	i2l2143
  1909  000690  5003               	movf	___awdiv@divisor,w,c
  1910  000692  5E01               	subwf	___awdiv@dividend,f,c
  1911  000694  5004               	movf	___awdiv@divisor+1,w,c
  1912  000696  5A02               	subwfb	___awdiv@dividend+1,f,c
  1913  000698  8007               	bsf	___awdiv@quotient,0,c
  1914  00069A                     i2l2143:
  1915  00069A  90D8               	bcf	status,0,c
  1916  00069C  3204               	rrcf	___awdiv@divisor+1,f,c
  1917  00069E  3203               	rrcf	___awdiv@divisor,f,c
  1918  0006A0  2E05               	decfsz	___awdiv@counter,f,c
  1919  0006A2  D7ED               	goto	i2l2135
  1920  0006A4                     i2l2147:
  1921  0006A4  5006               	movf	___awdiv@sign,w,c
  1922  0006A6  B4D8               	btfsc	status,2,c
  1923  0006A8  D004               	goto	i2l2151
  1924  0006AA  6C07               	negf	___awdiv@quotient,c
  1925  0006AC  1E08               	comf	___awdiv@quotient+1,f,c
  1926  0006AE  B0D8               	btfsc	status,0,c
  1927  0006B0  2A08               	incf	___awdiv@quotient+1,f,c
  1928  0006B2                     i2l2151:
  1929  0006B2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1930  0006B6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1931  0006BA  0012               	return	
  1932  0006BC                     __end_of___awdiv:
  1933                           	opt stack 0
  1934                           pclatu	equ	0xFFB
  1935                           pclath	equ	0xFFA
  1936                           tblptru	equ	0xFF8
  1937                           tblptrh	equ	0xFF7
  1938                           tblptrl	equ	0xFF6
  1939                           tablat	equ	0xFF5
  1940                           prodh	equ	0xFF4
  1941                           prodl	equ	0xFF3
  1942                           postinc0	equ	0xFEE
  1943                           fsr0h	equ	0xFEA
  1944                           fsr0l	equ	0xFE9
  1945                           wreg	equ	0xFE8
  1946                           postdec1	equ	0xFE5
  1947                           fsr1h	equ	0xFE2
  1948                           fsr1l	equ	0xFE1
  1949                           indf2	equ	0xFDF
  1950                           fsr2h	equ	0xFDA
  1951                           fsr2l	equ	0xFD9
  1952                           status	equ	0xFD8
  1953                           
  1954 ;; *************** function _Set_Display *****************
  1955 ;; Defined at:
  1956 ;;		line 138 in file "display.c"
  1957 ;; Parameters:    Size  Location     Type
  1958 ;;  type            1    wreg     unsigned char 
  1959 ;;  information     1   16[COMRAM] unsigned char 
  1960 ;;  value           2   17[COMRAM] unsigned int 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  type            1   19[COMRAM] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;		None               void
  1965 ;; Registers used:
  1966 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1
  1972 ;;      Params:         3       0       0
  1973 ;;      Locals:         1       0       0
  1974 ;;      Temps:          0       0       0
  1975 ;;      Totals:         4       0       0
  1976 ;;Total ram usage:        4 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    3
  1979 ;; This function calls:
  1980 ;;		_Evaluate_Display
  1981 ;;		_Evaluate_Signs
  1982 ;;		i2_Write_Display_Byte
  1983 ;; This function is called by:
  1984 ;;		_Isr
  1985 ;;		_Check_Buttons
  1986 ;;		_Load_Data
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text11
  1991  0007F2                     __ptext11:
  1992                           	opt stack 0
  1993  0007F2                     _Set_Display:
  1994                           	opt stack 24
  1995                           
  1996                           ;incstack = 0
  1997                           ;Set_Display@type stored from wreg
  1998  0007F2  6E14               	movwf	Set_Display@type,c
  1999                           
  2000                           ;display.c: 140: switch (type) {
  2001  0007F4  D01B               	goto	i2l2025
  2002  0007F6                     i2l2009:
  2003                           
  2004                           ;display.c: 142: if(information != '-') {
  2005  0007F6  0E2D               	movlw	45
  2006  0007F8  1811               	xorwf	Set_Display@information,w,c
  2007  0007FA  B4D8               	btfsc	status,2,c
  2008  0007FC  D010               	goto	i2l2021
  2009                           
  2010                           ;display.c: 143: signs[0] = value;
  2011  0007FE  C012  F03D         	movff	Set_Display@value,_signs
  2012                           
  2013                           ;display.c: 144: signs[0] += 0x30;
  2014  000802  0E30               	movlw	48
  2015  000804  263D               	addwf	_signs,f,c
  2016                           
  2017                           ;display.c: 145: signs[1] = '-';
  2018  000806  0E2D               	movlw	45
  2019  000808  6E3E               	movwf	_signs+1,c
  2020                           
  2021                           ;display.c: 146: signs[2] = information;
  2022  00080A  C011  F03F         	movff	Set_Display@information,_signs+2
  2023                           
  2024                           ;display.c: 147: Evaluate_Display(sizeof(signs), signs);
  2025  00080E  0E3D               	movlw	low _signs
  2026  000810  6E09               	movwf	Evaluate_Display@evaluate,c
  2027  000812  0E00               	movlw	high _signs
  2028  000814  6E0A               	movwf	Evaluate_Display@evaluate+1,c
  2029  000816  0E03               	movlw	3
  2030  000818  EC38  F001         	call	_Evaluate_Display
  2031                           
  2032                           ;display.c: 148: } else {
  2033  00081C  D00C               	goto	i2l2027
  2034  00081E                     i2l2021:
  2035                           
  2036                           ;display.c: 149: Evaluate_Signs(value);
  2037  00081E  C012  F00E         	movff	Set_Display@value,Evaluate_Signs@evaluation_value
  2038  000822  C013  F00F         	movff	Set_Display@value+1,Evaluate_Signs@evaluation_value+1
  2039  000826  ECC7  F003         	call	_Evaluate_Signs	;wreg free
  2040                           
  2041                           ;display.c: 155: }
  2042                           
  2043                           ;display.c: 154: break;
  2044                           
  2045                           ;display.c: 152: case 'L':
  2046                           
  2047                           ;display.c: 150: }
  2048                           ;display.c: 151: break;
  2049  00082A  D005               	goto	i2l2027
  2050  00082C                     i2l2025:
  2051  00082C  5014               	movf	Set_Display@type,w,c
  2052                           
  2053                           ; Switch size 1, requested type "space"
  2054                           ; Number of cases is 2, Range of values is 55 to 76
  2055                           ; switch strategies available:
  2056                           ; Name         Instructions Cycles
  2057                           ; simple_byte            7     4 (average)
  2058                           ;	Chosen strategy is simple_byte
  2059  00082E  0A37               	xorlw	55	; case 55
  2060  000830  B4D8               	btfsc	status,2,c
  2061  000832  D7E1               	goto	i2l2009
  2062  000834  0A7B               	xorlw	123	; case 76
  2063  000836                     i2l2027:
  2064                           
  2065                           ;display.c: 156: Write_Display_Byte(pixels);
  2066  000836  0E36               	movlw	low _pixels
  2067  000838  6E01               	movwf	i2Write_Display_Byte@write_data,c
  2068  00083A  0E00               	movlw	high _pixels
  2069  00083C  6E02               	movwf	i2Write_Display_Byte@write_data+1,c
  2070  00083E  EC22  F004         	call	i2_Write_Display_Byte	;wreg free
  2071  000842  0012               	return		;funcret
  2072  000844                     __end_of_Set_Display:
  2073                           	opt stack 0
  2074                           pclatu	equ	0xFFB
  2075                           pclath	equ	0xFFA
  2076                           tblptru	equ	0xFF8
  2077                           tblptrh	equ	0xFF7
  2078                           tblptrl	equ	0xFF6
  2079                           tablat	equ	0xFF5
  2080                           prodh	equ	0xFF4
  2081                           prodl	equ	0xFF3
  2082                           postinc0	equ	0xFEE
  2083                           fsr0h	equ	0xFEA
  2084                           fsr0l	equ	0xFE9
  2085                           wreg	equ	0xFE8
  2086                           postdec1	equ	0xFE5
  2087                           fsr1h	equ	0xFE2
  2088                           fsr1l	equ	0xFE1
  2089                           indf2	equ	0xFDF
  2090                           fsr2h	equ	0xFDA
  2091                           fsr2l	equ	0xFD9
  2092                           status	equ	0xFD8
  2093                           
  2094 ;; *************** function i2_Write_Display_Byte *****************
  2095 ;; Defined at:
  2096 ;;		line 49 in file "communication.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  write_data      2    0[COMRAM] PTR unsigned char 
  2099 ;;		 -> pixels(7), RAM(511), 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  Write_Displa    1    6[COMRAM] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;		None               void
  2104 ;; Registers used:
  2105 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1
  2111 ;;      Params:         2       0       0
  2112 ;;      Locals:         1       0       0
  2113 ;;      Temps:          4       0       0
  2114 ;;      Totals:         7       0       0
  2115 ;;Total ram usage:        7 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_Set_Display
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text12
  2125  000844                     __ptext12:
  2126                           	opt stack 0
  2127  000844                     i2_Write_Display_Byte:
  2128                           	opt stack 26
  2129                           
  2130                           ;communication.c: 50: for(unsigned char counter = sizeof(pixels); counter > 0;
  2131                           
  2132                           ;incstack = 0
  2133  000844  0E07               	movlw	7
  2134  000846  6E07               	movwf	i2Write_Display_Byte@counter,c
  2135  000848                     
  2136                           ;communication.c: 51: counter--) {
  2137  000848  5007               	movf	i2Write_Display_Byte@counter,w,c
  2138  00084A  B4D8               	btfsc	status,2,c
  2139  00084C  0012               	return	
  2140                           
  2141                           ;communication.c: 52: if(SSP1IF = 1) {
  2142  00084E  869E               	bsf	3998,3,c	;volatile
  2143  000850  B69E               	btfsc	3998,3,c	;volatile
  2144                           
  2145                           ;communication.c: 53: SSP1IF = 0;
  2146  000852  969E               	bcf	3998,3,c	;volatile
  2147                           
  2148                           ;communication.c: 54: }
  2149                           ;communication.c: 55: SSP1BUF = write_data[counter - 1];
  2150  000854  0EFF               	movlw	255
  2151  000856  6E03               	movwf	??i2_Write_Display_Byte& (0+255),c
  2152  000858  0EFF               	movlw	255
  2153  00085A  6E04               	movwf	(??i2_Write_Display_Byte+1)& (0+255),c
  2154  00085C  5007               	movf	i2Write_Display_Byte@counter,w,c
  2155  00085E  6E05               	movwf	(??i2_Write_Display_Byte+2)& (0+255),c
  2156  000860  6A06               	clrf	(??i2_Write_Display_Byte+3)& (0+255),c
  2157  000862  5003               	movf	??i2_Write_Display_Byte,w,c
  2158  000864  2605               	addwf	??i2_Write_Display_Byte+2,f,c
  2159  000866  5004               	movf	??i2_Write_Display_Byte+1,w,c
  2160  000868  2206               	addwfc	??i2_Write_Display_Byte+3,f,c
  2161  00086A  5005               	movf	??i2_Write_Display_Byte+2,w,c
  2162  00086C  2401               	addwf	i2Write_Display_Byte@write_data,w,c
  2163  00086E  6ED9               	movwf	fsr2l,c
  2164  000870  5006               	movf	??i2_Write_Display_Byte+3,w,c
  2165  000872  2002               	addwfc	i2Write_Display_Byte@write_data+1,w,c
  2166  000874  6EDA               	movwf	fsr2h,c
  2167  000876  50DF               	movf	indf2,w,c
  2168  000878  6EC9               	movwf	4041,c	;volatile
  2169  00087A                     i2l505:
  2170  00087A  A69E               	btfss	3998,3,c	;volatile
  2171  00087C  D7FE               	goto	i2l505
  2172                           
  2173                           ;communication.c: 57: SSP1IF = 0;
  2174  00087E  969E               	bcf	3998,3,c	;volatile
  2175                           
  2176                           ;communication.c: 58: PORTCbits.RC0 = 0;
  2177  000880  9082               	bcf	3970,0,c	;volatile
  2178                           
  2179                           ;communication.c: 59: PORTCbits.RC0 = 1;
  2180  000882  8082               	bsf	3970,0,c	;volatile
  2181                           
  2182                           ;communication.c: 60: PORTCbits.RC0 = 0;
  2183  000884  9082               	bcf	3970,0,c	;volatile
  2184  000886  0607               	decf	i2Write_Display_Byte@counter,f,c
  2185  000888  D7DF               	goto	L2
  2186  00088A                     __end_ofi2_Write_Display_Byte:
  2187                           	opt stack 0
  2188                           pclatu	equ	0xFFB
  2189                           pclath	equ	0xFFA
  2190                           tblptru	equ	0xFF8
  2191                           tblptrh	equ	0xFF7
  2192                           tblptrl	equ	0xFF6
  2193                           tablat	equ	0xFF5
  2194                           prodh	equ	0xFF4
  2195                           prodl	equ	0xFF3
  2196                           postinc0	equ	0xFEE
  2197                           fsr0h	equ	0xFEA
  2198                           fsr0l	equ	0xFE9
  2199                           wreg	equ	0xFE8
  2200                           postdec1	equ	0xFE5
  2201                           fsr1h	equ	0xFE2
  2202                           fsr1l	equ	0xFE1
  2203                           indf2	equ	0xFDF
  2204                           fsr2h	equ	0xFDA
  2205                           fsr2l	equ	0xFD9
  2206                           status	equ	0xFD8
  2207                           
  2208 ;; *************** function _Evaluate_Signs *****************
  2209 ;; Defined at:
  2210 ;;		line 118 in file "display.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  evaluation_v    2   13[COMRAM] unsigned int 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  valuecounter    1   15[COMRAM] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;		None               void
  2217 ;; Registers used:
  2218 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1
  2224 ;;      Params:         2       0       0
  2225 ;;      Locals:         1       0       0
  2226 ;;      Temps:          0       0       0
  2227 ;;      Totals:         3       0       0
  2228 ;;Total ram usage:        3 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    2
  2231 ;; This function calls:
  2232 ;;		_Evaluate_Display
  2233 ;;		___lwmod
  2234 ;; This function is called by:
  2235 ;;		_Set_Display
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text13
  2240  00078E                     __ptext13:
  2241                           	opt stack 0
  2242  00078E                     _Evaluate_Signs:
  2243                           	opt stack 24
  2244                           
  2245                           ;display.c: 119: for(unsigned char valuecounter = 0; valuecounter < sizeof(signs);
  2246                           
  2247                           ;incstack = 0
  2248  00078E  0E00               	movlw	0
  2249  000790  6E10               	movwf	Evaluate_Signs@valuecounter,c
  2250  000792                     i2l1967:
  2251                           
  2252                           ;display.c: 120: valuecounter++) {
  2253  000792  0E02               	movlw	2
  2254  000794  6410               	cpfsgt	Evaluate_Signs@valuecounter,c
  2255  000796  D001               	goto	i2l1971
  2256  000798  D023               	goto	i2l419
  2257  00079A                     i2l1971:
  2258                           
  2259                           ;display.c: 121: signs[valuecounter] = evaluation_value % 10;
  2260  00079A  5010               	movf	Evaluate_Signs@valuecounter,w,c
  2261  00079C  0D01               	mullw	1
  2262  00079E  0E3D               	movlw	low _signs
  2263  0007A0  24F3               	addwf	prodl,w,c
  2264  0007A2  6ED9               	movwf	fsr2l,c
  2265  0007A4  0E00               	movlw	high _signs
  2266  0007A6  20F4               	addwfc	prodh,w,c
  2267  0007A8  6EDA               	movwf	fsr2h,c
  2268  0007AA  C00E  F001         	movff	Evaluate_Signs@evaluation_value,___lwmod@dividend
  2269  0007AE  C00F  F002         	movff	Evaluate_Signs@evaluation_value+1,___lwmod@dividend+1
  2270  0007B2  0E00               	movlw	0
  2271  0007B4  6E04               	movwf	___lwmod@divisor+1,c
  2272  0007B6  0E0A               	movlw	10
  2273  0007B8  6E03               	movwf	___lwmod@divisor,c
  2274  0007BA  EC45  F004         	call	___lwmod	;wreg free
  2275  0007BE  5001               	movf	?___lwmod,w,c
  2276  0007C0  6EDF               	movwf	indf2,c
  2277                           
  2278                           ;display.c: 122: signs[valuecounter] += 0x30;
  2279  0007C2  5010               	movf	Evaluate_Signs@valuecounter,w,c
  2280  0007C4  0D01               	mullw	1
  2281  0007C6  0E3D               	movlw	low _signs
  2282  0007C8  24F3               	addwf	prodl,w,c
  2283  0007CA  6ED9               	movwf	fsr2l,c
  2284  0007CC  0E00               	movlw	high _signs
  2285  0007CE  20F4               	addwfc	prodh,w,c
  2286  0007D0  6EDA               	movwf	fsr2h,c
  2287  0007D2  0E30               	movlw	48
  2288  0007D4  26DF               	addwf	indf2,f,c
  2289                           
  2290                           ;display.c: 123: evaluation_value >>= 1;
  2291  0007D6  90D8               	bcf	status,0,c
  2292  0007D8  320F               	rrcf	Evaluate_Signs@evaluation_value+1,f,c
  2293  0007DA  320E               	rrcf	Evaluate_Signs@evaluation_value,f,c
  2294  0007DC  2A10               	incf	Evaluate_Signs@valuecounter,f,c
  2295  0007DE  D7D9               	goto	i2l1967
  2296  0007E0                     i2l419:
  2297                           
  2298                           ;display.c: 124: }
  2299                           ;display.c: 125: __nop();
  2300  0007E0  F000               	nop	
  2301                           
  2302                           ;display.c: 126: Evaluate_Display(sizeof(signs), signs);
  2303  0007E2  0E3D               	movlw	low _signs
  2304  0007E4  6E09               	movwf	Evaluate_Display@evaluate,c
  2305  0007E6  0E00               	movlw	high _signs
  2306  0007E8  6E0A               	movwf	Evaluate_Display@evaluate+1,c
  2307  0007EA  0E03               	movlw	3
  2308  0007EC  EC38  F001         	call	_Evaluate_Display
  2309  0007F0  0012               	return		;funcret
  2310  0007F2                     __end_of_Evaluate_Signs:
  2311                           	opt stack 0
  2312                           pclatu	equ	0xFFB
  2313                           pclath	equ	0xFFA
  2314                           tblptru	equ	0xFF8
  2315                           tblptrh	equ	0xFF7
  2316                           tblptrl	equ	0xFF6
  2317                           tablat	equ	0xFF5
  2318                           prodh	equ	0xFF4
  2319                           prodl	equ	0xFF3
  2320                           postinc0	equ	0xFEE
  2321                           fsr0h	equ	0xFEA
  2322                           fsr0l	equ	0xFE9
  2323                           wreg	equ	0xFE8
  2324                           postdec1	equ	0xFE5
  2325                           fsr1h	equ	0xFE2
  2326                           fsr1l	equ	0xFE1
  2327                           indf2	equ	0xFDF
  2328                           fsr2h	equ	0xFDA
  2329                           fsr2l	equ	0xFD9
  2330                           status	equ	0xFD8
  2331                           
  2332 ;; *************** function ___lwmod *****************
  2333 ;; Defined at:
  2334 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  dividend        2    0[COMRAM] unsigned int 
  2337 ;;  divisor         2    2[COMRAM] unsigned int 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  counter         1    4[COMRAM] unsigned char 
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  2    0[COMRAM] unsigned int 
  2342 ;; Registers used:
  2343 ;;		wreg, status,2, status,0
  2344 ;; Tracked objects:
  2345 ;;		On entry : 0/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMRAM   BANK0   BANK1
  2349 ;;      Params:         4       0       0
  2350 ;;      Locals:         1       0       0
  2351 ;;      Temps:          0       0       0
  2352 ;;      Totals:         5       0       0
  2353 ;;Total ram usage:        5 bytes
  2354 ;; Hardware stack levels used:    1
  2355 ;; This function calls:
  2356 ;;		Nothing
  2357 ;; This function is called by:
  2358 ;;		_Evaluate_Signs
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362                           	psect	text14
  2363  00088A                     __ptext14:
  2364                           	opt stack 0
  2365  00088A                     ___lwmod:
  2366                           	opt stack 25
  2367                           
  2368                           ;incstack = 0
  2369  00088A  5003               	movf	___lwmod@divisor,w,c
  2370  00088C  1004               	iorwf	___lwmod@divisor+1,w,c
  2371  00088E  B4D8               	btfsc	status,2,c
  2372  000890  D018               	goto	i2l994
  2373  000892  0E01               	movlw	1
  2374  000894  6E05               	movwf	___lwmod@counter,c
  2375  000896  D004               	goto	i2l1909
  2376  000898                     i2l1907:
  2377  000898  90D8               	bcf	status,0,c
  2378  00089A  3603               	rlcf	___lwmod@divisor,f,c
  2379  00089C  3604               	rlcf	___lwmod@divisor+1,f,c
  2380  00089E  2A05               	incf	___lwmod@counter,f,c
  2381  0008A0                     i2l1909:
  2382  0008A0  AE04               	btfss	___lwmod@divisor+1,7,c
  2383  0008A2  D7FA               	goto	i2l1907
  2384  0008A4                     i2l1911:
  2385  0008A4  5003               	movf	___lwmod@divisor,w,c
  2386  0008A6  5C01               	subwf	___lwmod@dividend,w,c
  2387  0008A8  5004               	movf	___lwmod@divisor+1,w,c
  2388  0008AA  5802               	subwfb	___lwmod@dividend+1,w,c
  2389  0008AC  A0D8               	btfss	status,0,c
  2390  0008AE  D004               	goto	i2l1915
  2391  0008B0  5003               	movf	___lwmod@divisor,w,c
  2392  0008B2  5E01               	subwf	___lwmod@dividend,f,c
  2393  0008B4  5004               	movf	___lwmod@divisor+1,w,c
  2394  0008B6  5A02               	subwfb	___lwmod@dividend+1,f,c
  2395  0008B8                     i2l1915:
  2396  0008B8  90D8               	bcf	status,0,c
  2397  0008BA  3204               	rrcf	___lwmod@divisor+1,f,c
  2398  0008BC  3203               	rrcf	___lwmod@divisor,f,c
  2399  0008BE  2E05               	decfsz	___lwmod@counter,f,c
  2400  0008C0  D7F1               	goto	i2l1911
  2401  0008C2                     i2l994:
  2402  0008C2  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2403  0008C6  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2404  0008CA  0012               	return		;funcret
  2405  0008CC                     __end_of___lwmod:
  2406                           	opt stack 0
  2407                           pclatu	equ	0xFFB
  2408                           pclath	equ	0xFFA
  2409                           tblptru	equ	0xFF8
  2410                           tblptrh	equ	0xFF7
  2411                           tblptrl	equ	0xFF6
  2412                           tablat	equ	0xFF5
  2413                           prodh	equ	0xFF4
  2414                           prodl	equ	0xFF3
  2415                           postinc0	equ	0xFEE
  2416                           fsr0h	equ	0xFEA
  2417                           fsr0l	equ	0xFE9
  2418                           wreg	equ	0xFE8
  2419                           postdec1	equ	0xFE5
  2420                           fsr1h	equ	0xFE2
  2421                           fsr1l	equ	0xFE1
  2422                           indf2	equ	0xFDF
  2423                           fsr2h	equ	0xFDA
  2424                           fsr2l	equ	0xFD9
  2425                           status	equ	0xFD8
  2426                           
  2427 ;; *************** function _Evaluate_Display *****************
  2428 ;; Defined at:
  2429 ;;		line 52 in file "display.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  size            1    wreg     unsigned char 
  2432 ;;  evaluate        2    8[COMRAM] PTR const unsigned char 
  2433 ;;		 -> signs(3), STR_2(4), STR_1(4), 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  size            1   12[COMRAM] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;		None               void
  2438 ;; Registers used:
  2439 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1
  2445 ;;      Params:         2       0       0
  2446 ;;      Locals:         1       0       0
  2447 ;;      Temps:          2       0       0
  2448 ;;      Totals:         5       0       0
  2449 ;;Total ram usage:        5 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; Hardware stack levels required when called:    1
  2452 ;; This function calls:
  2453 ;;		_Set_Bits
  2454 ;; This function is called by:
  2455 ;;		_Evaluate_Signs
  2456 ;;		_Set_Display
  2457 ;;		_Load_Data
  2458 ;;		_Del_Data
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text15
  2463  000270                     __ptext15:
  2464                           	opt stack 0
  2465  000270                     _Evaluate_Display:
  2466                           	opt stack 24
  2467                           
  2468                           ;incstack = 0
  2469                           ;Evaluate_Display@size stored from wreg
  2470  000270  6E0D               	movwf	Evaluate_Display@size,c
  2471                           
  2472                           ;display.c: 53: for(display_counter = 0; display_counter < size;
  2473  000272  0E00               	movlw	0
  2474  000274  6E32               	movwf	_display_counter,c
  2475                           
  2476                           ;display.c: 54: display_counter++) {
  2477  000276  D124               	goto	i2l1901
  2478  000278                     i2l1861:
  2479                           
  2480                           ;display.c: 57: Set_Bits("ABCDEF");
  2481  000278  0E23               	movlw	low STR_3
  2482  00027A  6E01               	movwf	Set_Bits@bits,c
  2483  00027C  0E02               	movlw	high STR_3
  2484  00027E  6E02               	movwf	Set_Bits@bits+1,c
  2485  000280  5001               	movf	Set_Bits@bits,w,c
  2486  000282  1002               	iorwf	Set_Bits@bits+1,w,c
  2487  000284  A4D8               	btfss	status,2,c
  2488  000286  0E00               	movlw	low (__mediumconst shr (0+16))
  2489  000288  6E03               	movwf	Set_Bits@bits+2,c
  2490  00028A  EC65  F002         	call	_Set_Bits	;wreg free
  2491                           
  2492                           ;display.c: 58: break;
  2493  00028E  D117               	goto	i2l1899
  2494  000290                     i2l1863:
  2495                           
  2496                           ;display.c: 60: Set_Bits("BC");
  2497  000290  0E63               	movlw	low (STR_10+1)
  2498  000292  6E01               	movwf	Set_Bits@bits,c
  2499  000294  0E02               	movlw	high (STR_10+1)
  2500  000296  6E02               	movwf	Set_Bits@bits+1,c
  2501  000298  5001               	movf	Set_Bits@bits,w,c
  2502  00029A  1002               	iorwf	Set_Bits@bits+1,w,c
  2503  00029C  A4D8               	btfss	status,2,c
  2504  00029E  0E00               	movlw	low (__mediumconst shr (0+16))
  2505  0002A0  6E03               	movwf	Set_Bits@bits+2,c
  2506  0002A2  EC65  F002         	call	_Set_Bits	;wreg free
  2507                           
  2508                           ;display.c: 61: break;
  2509  0002A6  D10B               	goto	i2l1899
  2510  0002A8                     i2l1865:
  2511                           
  2512                           ;display.c: 63: Set_Bits("ABDEG");
  2513  0002A8  0E45               	movlw	low STR_5
  2514  0002AA  6E01               	movwf	Set_Bits@bits,c
  2515  0002AC  0E02               	movlw	high STR_5
  2516  0002AE  6E02               	movwf	Set_Bits@bits+1,c
  2517  0002B0  5001               	movf	Set_Bits@bits,w,c
  2518  0002B2  1002               	iorwf	Set_Bits@bits+1,w,c
  2519  0002B4  A4D8               	btfss	status,2,c
  2520  0002B6  0E00               	movlw	low (__mediumconst shr (0+16))
  2521  0002B8  6E03               	movwf	Set_Bits@bits+2,c
  2522  0002BA  EC65  F002         	call	_Set_Bits	;wreg free
  2523                           
  2524                           ;display.c: 64: break;
  2525  0002BE  D0FF               	goto	i2l1899
  2526  0002C0                     i2l1867:
  2527                           
  2528                           ;display.c: 66: Set_Bits("ABCDG");
  2529  0002C0  0E3F               	movlw	low STR_6
  2530  0002C2  6E01               	movwf	Set_Bits@bits,c
  2531  0002C4  0E02               	movlw	high STR_6
  2532  0002C6  6E02               	movwf	Set_Bits@bits+1,c
  2533  0002C8  5001               	movf	Set_Bits@bits,w,c
  2534  0002CA  1002               	iorwf	Set_Bits@bits+1,w,c
  2535  0002CC  A4D8               	btfss	status,2,c
  2536  0002CE  0E00               	movlw	low (__mediumconst shr (0+16))
  2537  0002D0  6E03               	movwf	Set_Bits@bits+2,c
  2538  0002D2  EC65  F002         	call	_Set_Bits	;wreg free
  2539                           
  2540                           ;display.c: 67: break;
  2541  0002D6  D0F3               	goto	i2l1899
  2542  0002D8                     i2l1869:
  2543                           
  2544                           ;display.c: 69: Set_Bits("BCFG");
  2545  0002D8  0E5D               	movlw	low STR_7
  2546  0002DA  6E01               	movwf	Set_Bits@bits,c
  2547  0002DC  0E02               	movlw	high STR_7
  2548  0002DE  6E02               	movwf	Set_Bits@bits+1,c
  2549  0002E0  5001               	movf	Set_Bits@bits,w,c
  2550  0002E2  1002               	iorwf	Set_Bits@bits+1,w,c
  2551  0002E4  A4D8               	btfss	status,2,c
  2552  0002E6  0E00               	movlw	low (__mediumconst shr (0+16))
  2553  0002E8  6E03               	movwf	Set_Bits@bits+2,c
  2554  0002EA  EC65  F002         	call	_Set_Bits	;wreg free
  2555                           
  2556                           ;display.c: 70: break;
  2557  0002EE  D0E7               	goto	i2l1899
  2558  0002F0                     i2l1871:
  2559                           
  2560                           ;display.c: 72: Set_Bits("ACDFG");
  2561  0002F0  0E4B               	movlw	low STR_8
  2562  0002F2  6E01               	movwf	Set_Bits@bits,c
  2563  0002F4  0E02               	movlw	high STR_8
  2564  0002F6  6E02               	movwf	Set_Bits@bits+1,c
  2565  0002F8  5001               	movf	Set_Bits@bits,w,c
  2566  0002FA  1002               	iorwf	Set_Bits@bits+1,w,c
  2567  0002FC  A4D8               	btfss	status,2,c
  2568  0002FE  0E00               	movlw	low (__mediumconst shr (0+16))
  2569  000300  6E03               	movwf	Set_Bits@bits+2,c
  2570  000302  EC65  F002         	call	_Set_Bits	;wreg free
  2571                           
  2572                           ;display.c: 73: break;
  2573  000306  D0DB               	goto	i2l1899
  2574  000308                     i2l1873:
  2575                           
  2576                           ;display.c: 75: Set_Bits("ACDEFG");
  2577  000308  0E38               	movlw	low STR_9
  2578  00030A  6E01               	movwf	Set_Bits@bits,c
  2579  00030C  0E02               	movlw	high STR_9
  2580  00030E  6E02               	movwf	Set_Bits@bits+1,c
  2581  000310  5001               	movf	Set_Bits@bits,w,c
  2582  000312  1002               	iorwf	Set_Bits@bits+1,w,c
  2583  000314  A4D8               	btfss	status,2,c
  2584  000316  0E00               	movlw	low (__mediumconst shr (0+16))
  2585  000318  6E03               	movwf	Set_Bits@bits+2,c
  2586  00031A  EC65  F002         	call	_Set_Bits	;wreg free
  2587                           
  2588                           ;display.c: 76: break;
  2589  00031E  D0CF               	goto	i2l1899
  2590  000320                     i2l1875:
  2591                           
  2592                           ;display.c: 78: Set_Bits("ABC");
  2593  000320  0E62               	movlw	low STR_10
  2594  000322  6E01               	movwf	Set_Bits@bits,c
  2595  000324  0E02               	movlw	high STR_10
  2596  000326  6E02               	movwf	Set_Bits@bits+1,c
  2597  000328  5001               	movf	Set_Bits@bits,w,c
  2598  00032A  1002               	iorwf	Set_Bits@bits+1,w,c
  2599  00032C  A4D8               	btfss	status,2,c
  2600  00032E  0E00               	movlw	low (__mediumconst shr (0+16))
  2601  000330  6E03               	movwf	Set_Bits@bits+2,c
  2602  000332  EC65  F002         	call	_Set_Bits	;wreg free
  2603                           
  2604                           ;display.c: 79: break;
  2605  000336  D0C3               	goto	i2l1899
  2606  000338                     i2l1877:
  2607                           
  2608                           ;display.c: 81: Set_Bits("ABCDEFG");
  2609  000338  0E1B               	movlw	low STR_11
  2610  00033A  6E01               	movwf	Set_Bits@bits,c
  2611  00033C  0E02               	movlw	high STR_11
  2612  00033E  6E02               	movwf	Set_Bits@bits+1,c
  2613  000340  5001               	movf	Set_Bits@bits,w,c
  2614  000342  1002               	iorwf	Set_Bits@bits+1,w,c
  2615  000344  A4D8               	btfss	status,2,c
  2616  000346  0E00               	movlw	low (__mediumconst shr (0+16))
  2617  000348  6E03               	movwf	Set_Bits@bits+2,c
  2618  00034A  EC65  F002         	call	_Set_Bits	;wreg free
  2619                           
  2620                           ;display.c: 82: break;
  2621  00034E  D0B7               	goto	i2l1899
  2622  000350                     i2l1879:
  2623                           
  2624                           ;display.c: 84: Set_Bits("ABCDFG");
  2625  000350  0E2A               	movlw	low STR_12
  2626  000352  6E01               	movwf	Set_Bits@bits,c
  2627  000354  0E02               	movlw	high STR_12
  2628  000356  6E02               	movwf	Set_Bits@bits+1,c
  2629  000358  5001               	movf	Set_Bits@bits,w,c
  2630  00035A  1002               	iorwf	Set_Bits@bits+1,w,c
  2631  00035C  A4D8               	btfss	status,2,c
  2632  00035E  0E00               	movlw	low (__mediumconst shr (0+16))
  2633  000360  6E03               	movwf	Set_Bits@bits+2,c
  2634  000362  EC65  F002         	call	_Set_Bits	;wreg free
  2635                           
  2636                           ;display.c: 85: break;
  2637  000366  D0AB               	goto	i2l1899
  2638  000368                     i2l1881:
  2639                           
  2640                           ;display.c: 87: Set_Bits("ABCEFG");
  2641  000368  0E31               	movlw	low STR_13
  2642  00036A  6E01               	movwf	Set_Bits@bits,c
  2643  00036C  0E02               	movlw	high STR_13
  2644  00036E  6E02               	movwf	Set_Bits@bits+1,c
  2645  000370  5001               	movf	Set_Bits@bits,w,c
  2646  000372  1002               	iorwf	Set_Bits@bits+1,w,c
  2647  000374  A4D8               	btfss	status,2,c
  2648  000376  0E00               	movlw	low (__mediumconst shr (0+16))
  2649  000378  6E03               	movwf	Set_Bits@bits+2,c
  2650  00037A  EC65  F002         	call	_Set_Bits	;wreg free
  2651                           
  2652                           ;display.c: 88: break;
  2653  00037E  D09F               	goto	i2l1899
  2654  000380                     i2l1883:
  2655                           
  2656                           ;display.c: 90: Set_Bits("ABCDEF");
  2657  000380  0E23               	movlw	low STR_3
  2658  000382  6E01               	movwf	Set_Bits@bits,c
  2659  000384  0E02               	movlw	high STR_3
  2660  000386  6E02               	movwf	Set_Bits@bits+1,c
  2661  000388  5001               	movf	Set_Bits@bits,w,c
  2662  00038A  1002               	iorwf	Set_Bits@bits+1,w,c
  2663  00038C  A4D8               	btfss	status,2,c
  2664  00038E  0E00               	movlw	low (__mediumconst shr (0+16))
  2665  000390  6E03               	movwf	Set_Bits@bits+2,c
  2666  000392  EC65  F002         	call	_Set_Bits	;wreg free
  2667                           
  2668                           ;display.c: 91: break;
  2669  000396  D093               	goto	i2l1899
  2670  000398                     i2l1885:
  2671                           
  2672                           ;display.c: 93: Set_Bits("ADEFG");
  2673  000398  0E57               	movlw	low STR_15
  2674  00039A  6E01               	movwf	Set_Bits@bits,c
  2675  00039C  0E02               	movlw	high STR_15
  2676  00039E  6E02               	movwf	Set_Bits@bits+1,c
  2677  0003A0  5001               	movf	Set_Bits@bits,w,c
  2678  0003A2  1002               	iorwf	Set_Bits@bits+1,w,c
  2679  0003A4  A4D8               	btfss	status,2,c
  2680  0003A6  0E00               	movlw	low (__mediumconst shr (0+16))
  2681  0003A8  6E03               	movwf	Set_Bits@bits+2,c
  2682  0003AA  EC65  F002         	call	_Set_Bits	;wreg free
  2683                           
  2684                           ;display.c: 94: break;
  2685  0003AE  D087               	goto	i2l1899
  2686  0003B0                     i2l1887:
  2687                           
  2688                           ;display.c: 96: Set_Bits("DEF");
  2689  0003B0  0E26               	movlw	low (STR_3+3)
  2690  0003B2  6E01               	movwf	Set_Bits@bits,c
  2691  0003B4  0E02               	movlw	high (STR_3+3)
  2692  0003B6  6E02               	movwf	Set_Bits@bits+1,c
  2693  0003B8  5001               	movf	Set_Bits@bits,w,c
  2694  0003BA  1002               	iorwf	Set_Bits@bits+1,w,c
  2695  0003BC  A4D8               	btfss	status,2,c
  2696  0003BE  0E00               	movlw	low (__mediumconst shr (0+16))
  2697  0003C0  6E03               	movwf	Set_Bits@bits+2,c
  2698  0003C2  EC65  F002         	call	_Set_Bits	;wreg free
  2699                           
  2700                           ;display.c: 97: break;
  2701  0003C6  D07B               	goto	i2l1899
  2702  0003C8                     i2l1889:
  2703                           
  2704                           ;display.c: 99: Set_Bits("ABCDEF");
  2705  0003C8  0E23               	movlw	low STR_3
  2706  0003CA  6E01               	movwf	Set_Bits@bits,c
  2707  0003CC  0E02               	movlw	high STR_3
  2708  0003CE  6E02               	movwf	Set_Bits@bits+1,c
  2709  0003D0  5001               	movf	Set_Bits@bits,w,c
  2710  0003D2  1002               	iorwf	Set_Bits@bits+1,w,c
  2711  0003D4  A4D8               	btfss	status,2,c
  2712  0003D6  0E00               	movlw	low (__mediumconst shr (0+16))
  2713  0003D8  6E03               	movwf	Set_Bits@bits+2,c
  2714  0003DA  EC65  F002         	call	_Set_Bits	;wreg free
  2715                           
  2716                           ;display.c: 100: break;
  2717  0003DE  D06F               	goto	i2l1899
  2718  0003E0                     i2l1891:
  2719                           
  2720                           ;display.c: 102: Set_Bits("ABEFG");
  2721  0003E0  0E51               	movlw	low STR_18
  2722  0003E2  6E01               	movwf	Set_Bits@bits,c
  2723  0003E4  0E02               	movlw	high STR_18
  2724  0003E6  6E02               	movwf	Set_Bits@bits+1,c
  2725  0003E8  5001               	movf	Set_Bits@bits,w,c
  2726  0003EA  1002               	iorwf	Set_Bits@bits+1,w,c
  2727  0003EC  A4D8               	btfss	status,2,c
  2728  0003EE  0E00               	movlw	low (__mediumconst shr (0+16))
  2729  0003F0  6E03               	movwf	Set_Bits@bits+2,c
  2730  0003F2  EC65  F002         	call	_Set_Bits	;wreg free
  2731                           
  2732                           ;display.c: 103: break;
  2733  0003F6  D063               	goto	i2l1899
  2734  0003F8                     i2l1893:
  2735                           
  2736                           ;display.c: 105: Set_Bits("G");
  2737  0003F8  0E43               	movlw	low (STR_6+4)
  2738  0003FA  6E01               	movwf	Set_Bits@bits,c
  2739  0003FC  0E02               	movlw	high (STR_6+4)
  2740  0003FE  6E02               	movwf	Set_Bits@bits+1,c
  2741  000400  5001               	movf	Set_Bits@bits,w,c
  2742  000402  1002               	iorwf	Set_Bits@bits+1,w,c
  2743  000404  A4D8               	btfss	status,2,c
  2744  000406  0E00               	movlw	low (__mediumconst shr (0+16))
  2745  000408  6E03               	movwf	Set_Bits@bits+2,c
  2746  00040A  EC65  F002         	call	_Set_Bits	;wreg free
  2747                           
  2748                           ;display.c: 106: break;
  2749  00040E  D057               	goto	i2l1899
  2750  000410                     i2l1895:
  2751                           
  2752                           ;display.c: 108: Set_Bits(0);
  2753  000410  0E00               	movlw	0
  2754  000412  6E01               	movwf	Set_Bits@bits,c
  2755  000414  0E00               	movlw	0
  2756  000416  6E02               	movwf	Set_Bits@bits+1,c
  2757  000418  0E00               	movlw	0
  2758  00041A  6E03               	movwf	Set_Bits@bits+2,c
  2759  00041C  EC65  F002         	call	_Set_Bits	;wreg free
  2760                           
  2761                           ;display.c: 109: }
  2762  000420  D04E               	goto	i2l1899
  2763  000422                     i2l1897:
  2764  000422  5032               	movf	_display_counter,w,c
  2765  000424  0D01               	mullw	1
  2766  000426  C009  F00B         	movff	Evaluate_Display@evaluate,??_Evaluate_Display
  2767  00042A  C00A  F00C         	movff	Evaluate_Display@evaluate+1,??_Evaluate_Display+1
  2768  00042E  50F3               	movf	prodl,w,c
  2769  000430  260B               	addwf	??_Evaluate_Display,f,c
  2770  000432  50F4               	movf	prodh,w,c
  2771  000434  220C               	addwfc	??_Evaluate_Display+1,f,c
  2772  000436  C00B  FFF6         	movff	??_Evaluate_Display,tblptrl
  2773  00043A  C00C  FFF7         	movff	??_Evaluate_Display+1,tblptrh
  2774  00043E  6AF8               	clrf	tblptru,c
  2775  000440  0E01               	movlw	(high __ramtop+-1)
  2776  000442  64F7               	cpfsgt	tblptrh,c
  2777  000444  D003               	bra	i2u84_47
  2778  000446  0008               	tblrd		*
  2779  000448  50F5               	movf	tablat,w,c
  2780  00044A  D005               	bra	i2u84_40
  2781  00044C                     i2u84_47:
  2782  00044C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2783  000450  CFF7 FFEA          	movff	tblptrh,fsr0h
  2784  000454  50EF               	movf	indf0,w,c
  2785  000456                     i2u84_40:
  2786                           
  2787                           ; Switch size 1, requested type "space"
  2788                           ; Number of cases is 17, Range of values is 45 to 80
  2789                           ; switch strategies available:
  2790                           ; Name         Instructions Cycles
  2791                           ; simple_byte           52    27 (average)
  2792                           ;	Chosen strategy is simple_byte
  2793  000456  0A2D               	xorlw	45	; case 45
  2794  000458  B4D8               	btfsc	status,2,c
  2795  00045A  D7CE               	goto	i2l1893
  2796  00045C  0A1D               	xorlw	29	; case 48
  2797  00045E  B4D8               	btfsc	status,2,c
  2798  000460  D70B               	goto	i2l1861
  2799  000462  0A01               	xorlw	1	; case 49
  2800  000464  B4D8               	btfsc	status,2,c
  2801  000466  D714               	goto	i2l1863
  2802  000468  0A03               	xorlw	3	; case 50
  2803  00046A  B4D8               	btfsc	status,2,c
  2804  00046C  D71D               	goto	i2l1865
  2805  00046E  0A01               	xorlw	1	; case 51
  2806  000470  B4D8               	btfsc	status,2,c
  2807  000472  D726               	goto	i2l1867
  2808  000474  0A07               	xorlw	7	; case 52
  2809  000476  B4D8               	btfsc	status,2,c
  2810  000478  D72F               	goto	i2l1869
  2811  00047A  0A01               	xorlw	1	; case 53
  2812  00047C  B4D8               	btfsc	status,2,c
  2813  00047E  D738               	goto	i2l1871
  2814  000480  0A03               	xorlw	3	; case 54
  2815  000482  B4D8               	btfsc	status,2,c
  2816  000484  D741               	goto	i2l1873
  2817  000486  0A01               	xorlw	1	; case 55
  2818  000488  B4D8               	btfsc	status,2,c
  2819  00048A  D74A               	goto	i2l1875
  2820  00048C  0A0F               	xorlw	15	; case 56
  2821  00048E  B4D8               	btfsc	status,2,c
  2822  000490  D753               	goto	i2l1877
  2823  000492  0A01               	xorlw	1	; case 57
  2824  000494  B4D8               	btfsc	status,2,c
  2825  000496  D75C               	goto	i2l1879
  2826  000498  0A78               	xorlw	120	; case 65
  2827  00049A  B4D8               	btfsc	status,2,c
  2828  00049C  D765               	goto	i2l1881
  2829  00049E  0A05               	xorlw	5	; case 68
  2830  0004A0  B4D8               	btfsc	status,2,c
  2831  0004A2  D76E               	goto	i2l1883
  2832  0004A4  0A01               	xorlw	1	; case 69
  2833  0004A6  B4D8               	btfsc	status,2,c
  2834  0004A8  D777               	goto	i2l1885
  2835  0004AA  0A09               	xorlw	9	; case 76
  2836  0004AC  B4D8               	btfsc	status,2,c
  2837  0004AE  D780               	goto	i2l1887
  2838  0004B0  0A03               	xorlw	3	; case 79
  2839  0004B2  B4D8               	btfsc	status,2,c
  2840  0004B4  D789               	goto	i2l1889
  2841  0004B6  0A1F               	xorlw	31	; case 80
  2842  0004B8  B4D8               	btfsc	status,2,c
  2843  0004BA  D792               	goto	i2l1891
  2844  0004BC  D7A9               	goto	i2l1895
  2845  0004BE                     i2l1899:
  2846  0004BE  2A32               	incf	_display_counter,f,c
  2847  0004C0                     i2l1901:
  2848  0004C0  500D               	movf	Evaluate_Display@size,w,c
  2849  0004C2  5C32               	subwf	_display_counter,w,c
  2850  0004C4  B0D8               	btfsc	status,0,c
  2851  0004C6  0012               	return	
  2852  0004C8  D7AC               	goto	i2l1897
  2853  0004CA                     __end_of_Evaluate_Display:
  2854                           	opt stack 0
  2855                           pclatu	equ	0xFFB
  2856                           pclath	equ	0xFFA
  2857                           tblptru	equ	0xFF8
  2858                           tblptrh	equ	0xFF7
  2859                           tblptrl	equ	0xFF6
  2860                           tablat	equ	0xFF5
  2861                           prodh	equ	0xFF4
  2862                           prodl	equ	0xFF3
  2863                           indf0	equ	0xFEF
  2864                           postinc0	equ	0xFEE
  2865                           fsr0h	equ	0xFEA
  2866                           fsr0l	equ	0xFE9
  2867                           wreg	equ	0xFE8
  2868                           postdec1	equ	0xFE5
  2869                           fsr1h	equ	0xFE2
  2870                           fsr1l	equ	0xFE1
  2871                           indf2	equ	0xFDF
  2872                           fsr2h	equ	0xFDA
  2873                           fsr2l	equ	0xFD9
  2874                           status	equ	0xFD8
  2875                           
  2876 ;; *************** function _Set_Bits *****************
  2877 ;; Defined at:
  2878 ;;		line 12 in file "display.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  bits            3    0[COMRAM] PTR const unsigned char 
  2881 ;;		 -> ROM(8191), STR_19(2), STR_18(6), STR_17(7), 
  2882 ;;		 -> STR_16(4), STR_15(6), STR_14(7), STR_13(7), 
  2883 ;;		 -> STR_12(7), STR_11(8), STR_10(4), STR_9(7), 
  2884 ;;		 -> STR_8(6), STR_7(5), STR_6(6), STR_5(6), 
  2885 ;;		 -> STR_4(3), STR_3(7), 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  bitcount        1    6[COMRAM] unsigned char 
  2888 ;;  Bitoutput       1    7[COMRAM] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;		None               void
  2891 ;; Registers used:
  2892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1
  2898 ;;      Params:         3       0       0
  2899 ;;      Locals:         2       0       0
  2900 ;;      Temps:          3       0       0
  2901 ;;      Totals:         8       0       0
  2902 ;;Total ram usage:        8 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_Evaluate_Display
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text16
  2912  0004CA                     __ptext16:
  2913                           	opt stack 0
  2914  0004CA                     _Set_Bits:
  2915                           	opt stack 24
  2916                           
  2917                           ;display.c: 13: unsigned char Bitoutput = 0;
  2918                           
  2919                           ;incstack = 0
  2920  0004CA  0E00               	movlw	0
  2921  0004CC  6E08               	movwf	Set_Bits@Bitoutput,c
  2922                           
  2923                           ;display.c: 14: for(unsigned char bitcount = 0; bits[bitcount] != '\0';
  2924  0004CE  0E00               	movlw	0
  2925  0004D0  6E07               	movwf	Set_Bits@bitcount,c
  2926                           
  2927                           ;display.c: 15: bitcount++) {
  2928  0004D2  D037               	goto	i2l1855
  2929  0004D4                     i2l1835:
  2930                           
  2931                           ;display.c: 18: Bitoutput |= 0b00000001;
  2932  0004D4  8008               	bsf	Set_Bits@Bitoutput,0,c
  2933                           
  2934                           ;display.c: 19: break;
  2935  0004D6  D034               	goto	i2l1853
  2936  0004D8                     i2l1837:
  2937                           
  2938                           ;display.c: 21: Bitoutput |= 0b00000010;
  2939  0004D8  8208               	bsf	Set_Bits@Bitoutput,1,c
  2940                           
  2941                           ;display.c: 22: break;
  2942  0004DA  D032               	goto	i2l1853
  2943  0004DC                     i2l1839:
  2944                           
  2945                           ;display.c: 24: Bitoutput |= 0b00000100;
  2946  0004DC  8408               	bsf	Set_Bits@Bitoutput,2,c
  2947                           
  2948                           ;display.c: 25: break;
  2949  0004DE  D030               	goto	i2l1853
  2950  0004E0                     i2l1841:
  2951                           
  2952                           ;display.c: 27: Bitoutput |= 0b00001000;
  2953  0004E0  8608               	bsf	Set_Bits@Bitoutput,3,c
  2954                           
  2955                           ;display.c: 28: break;
  2956  0004E2  D02E               	goto	i2l1853
  2957  0004E4                     i2l1843:
  2958                           
  2959                           ;display.c: 30: Bitoutput |= 0b00010000;
  2960  0004E4  8808               	bsf	Set_Bits@Bitoutput,4,c
  2961                           
  2962                           ;display.c: 31: break;
  2963  0004E6  D02C               	goto	i2l1853
  2964  0004E8                     i2l1845:
  2965                           
  2966                           ;display.c: 33: Bitoutput |= 0b00100000;
  2967  0004E8  8A08               	bsf	Set_Bits@Bitoutput,5,c
  2968                           
  2969                           ;display.c: 34: break;
  2970  0004EA  D02A               	goto	i2l1853
  2971  0004EC                     i2l1847:
  2972                           
  2973                           ;display.c: 36: Bitoutput |= 0b01000000;
  2974  0004EC  8C08               	bsf	Set_Bits@Bitoutput,6,c
  2975                           
  2976                           ;display.c: 40: }
  2977                           
  2978                           ;display.c: 39: break;
  2979                           
  2980                           ;display.c: 38: default:
  2981                           
  2982                           ;display.c: 37: break;
  2983  0004EE  D028               	goto	i2l1853
  2984  0004F0                     i2l1851:
  2985  0004F0  5007               	movf	Set_Bits@bitcount,w,c
  2986  0004F2  0D01               	mullw	1
  2987  0004F4  50F3               	movf	prodl,w,c
  2988  0004F6  2401               	addwf	Set_Bits@bits,w,c
  2989  0004F8  6E04               	movwf	??_Set_Bits& (0+255),c
  2990  0004FA  50F4               	movf	prodh,w,c
  2991  0004FC  2002               	addwfc	Set_Bits@bits+1,w,c
  2992  0004FE  6E05               	movwf	(??_Set_Bits+1)& (0+255),c
  2993  000500  0E00               	movlw	0
  2994  000502  2003               	addwfc	Set_Bits@bits+2,w,c
  2995  000504  6E06               	movwf	(??_Set_Bits+2)& (0+255),c
  2996  000506  C004  FFF6         	movff	??_Set_Bits,tblptrl
  2997  00050A  C005  FFF7         	movff	??_Set_Bits+1,tblptrh
  2998  00050E  C006  FFF8         	movff	??_Set_Bits+2,tblptru
  2999  000512  0008               	tblrd		*
  3000  000514  50F5               	movf	tablat,w,c
  3001                           
  3002                           ; Switch size 1, requested type "space"
  3003                           ; Number of cases is 7, Range of values is 65 to 71
  3004                           ; switch strategies available:
  3005                           ; Name         Instructions Cycles
  3006                           ; simple_byte           22    12 (average)
  3007                           ;	Chosen strategy is simple_byte
  3008  000516  0A41               	xorlw	65	; case 65
  3009  000518  B4D8               	btfsc	status,2,c
  3010  00051A  D7DC               	goto	i2l1835
  3011  00051C  0A03               	xorlw	3	; case 66
  3012  00051E  B4D8               	btfsc	status,2,c
  3013  000520  D7DB               	goto	i2l1837
  3014  000522  0A01               	xorlw	1	; case 67
  3015  000524  B4D8               	btfsc	status,2,c
  3016  000526  D7DA               	goto	i2l1839
  3017  000528  0A07               	xorlw	7	; case 68
  3018  00052A  B4D8               	btfsc	status,2,c
  3019  00052C  D7D9               	goto	i2l1841
  3020  00052E  0A01               	xorlw	1	; case 69
  3021  000530  B4D8               	btfsc	status,2,c
  3022  000532  D7D8               	goto	i2l1843
  3023  000534  0A03               	xorlw	3	; case 70
  3024  000536  B4D8               	btfsc	status,2,c
  3025  000538  D7D7               	goto	i2l1845
  3026  00053A  0A01               	xorlw	1	; case 71
  3027  00053C  B4D8               	btfsc	status,2,c
  3028  00053E  D7D6               	goto	i2l1847
  3029  000540                     i2l1853:
  3030  000540  2A07               	incf	Set_Bits@bitcount,f,c
  3031  000542                     i2l1855:
  3032  000542  5007               	movf	Set_Bits@bitcount,w,c
  3033  000544  0D01               	mullw	1
  3034  000546  50F3               	movf	prodl,w,c
  3035  000548  2401               	addwf	Set_Bits@bits,w,c
  3036  00054A  6E04               	movwf	??_Set_Bits& (0+255),c
  3037  00054C  50F4               	movf	prodh,w,c
  3038  00054E  2002               	addwfc	Set_Bits@bits+1,w,c
  3039  000550  6E05               	movwf	(??_Set_Bits+1)& (0+255),c
  3040  000552  0E00               	movlw	0
  3041  000554  2003               	addwfc	Set_Bits@bits+2,w,c
  3042  000556  6E06               	movwf	(??_Set_Bits+2)& (0+255),c
  3043  000558  C004  FFF6         	movff	??_Set_Bits,tblptrl
  3044  00055C  C005  FFF7         	movff	??_Set_Bits+1,tblptrh
  3045  000560  C006  FFF8         	movff	??_Set_Bits+2,tblptru
  3046  000564  0008               	tblrd		*
  3047  000566  50F5               	movf	tablat,w,c
  3048  000568  0900               	iorlw	0
  3049  00056A  A4D8               	btfss	status,2,c
  3050  00056C  D7C1               	goto	i2l1851
  3051                           
  3052                           ;display.c: 41: }
  3053                           ;display.c: 42: pixels[display_counter] = Bitoutput;
  3054  00056E  5032               	movf	_display_counter,w,c
  3055  000570  0D01               	mullw	1
  3056  000572  0E36               	movlw	low _pixels
  3057  000574  24F3               	addwf	prodl,w,c
  3058  000576  6ED9               	movwf	fsr2l,c
  3059  000578  0E00               	movlw	high _pixels
  3060  00057A  20F4               	addwfc	prodh,w,c
  3061  00057C  6EDA               	movwf	fsr2h,c
  3062  00057E  C008  FFDF         	movff	Set_Bits@Bitoutput,indf2
  3063  000582  0012               	return		;funcret
  3064  000584                     __end_of_Set_Bits:
  3065                           	opt stack 0
  3066                           pclatu	equ	0xFFB
  3067                           pclath	equ	0xFFA
  3068                           tblptru	equ	0xFF8
  3069                           tblptrh	equ	0xFF7
  3070                           tblptrl	equ	0xFF6
  3071                           tablat	equ	0xFF5
  3072                           prodh	equ	0xFF4
  3073                           prodl	equ	0xFF3
  3074                           indf0	equ	0xFEF
  3075                           postinc0	equ	0xFEE
  3076                           fsr0h	equ	0xFEA
  3077                           fsr0l	equ	0xFE9
  3078                           wreg	equ	0xFE8
  3079                           postdec1	equ	0xFE5
  3080                           fsr1h	equ	0xFE2
  3081                           fsr1l	equ	0xFE1
  3082                           indf2	equ	0xFDF
  3083                           fsr2h	equ	0xFDA
  3084                           fsr2l	equ	0xFD9
  3085                           status	equ	0xFD8
  3086                           
  3087 ;; *************** function _Receive *****************
  3088 ;; Defined at:
  3089 ;;		line 37 in file "communication.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      unsigned char 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1
  3103 ;;      Params:         0       0       0
  3104 ;;      Locals:         0       0       0
  3105 ;;      Temps:          0       0       0
  3106 ;;      Totals:         0       0       0
  3107 ;;Total ram usage:        0 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_Isr
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text17
  3117  000A32                     __ptext17:
  3118                           	opt stack 0
  3119  000A32                     _Receive:
  3120                           	opt stack 27
  3121                           
  3122                           ;communication.c: 38: if(RCSTA1bits.OERR == 1) {
  3123                           
  3124                           ;incstack = 0
  3125  000A32  A2AB               	btfss	4011,1,c	;volatile
  3126  000A34  D003               	goto	i2l2107
  3127                           
  3128                           ;communication.c: 39: RCSTA1bits.CREN = 0;
  3129  000A36  98AB               	bcf	4011,4,c	;volatile
  3130                           
  3131                           ;communication.c: 40: RCSTA1bits.CREN = 1;
  3132  000A38  88AB               	bsf	4011,4,c	;volatile
  3133                           
  3134                           ;communication.c: 41: overrun = 1;
  3135  000A3A  8440               	bsf	_overrun/(0+8),_overrun& (0+7),c
  3136  000A3C                     i2l2107:
  3137                           
  3138                           ;communication.c: 42: }
  3139                           ;communication.c: 43: return (RCREG1);
  3140  000A3C  50AE               	movf	4014,w,c	;volatile
  3141  000A3E  0012               	return	
  3142  000A40                     __end_of_Receive:
  3143                           	opt stack 0
  3144                           pclatu	equ	0xFFB
  3145                           pclath	equ	0xFFA
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           prodh	equ	0xFF4
  3151                           prodl	equ	0xFF3
  3152                           indf0	equ	0xFEF
  3153                           postinc0	equ	0xFEE
  3154                           fsr0h	equ	0xFEA
  3155                           fsr0l	equ	0xFE9
  3156                           wreg	equ	0xFE8
  3157                           postdec1	equ	0xFE5
  3158                           fsr1h	equ	0xFE2
  3159                           fsr1l	equ	0xFE1
  3160                           indf2	equ	0xFDF
  3161                           fsr2h	equ	0xFDA
  3162                           fsr2l	equ	0xFD9
  3163                           status	equ	0xFD8
  3164                           
  3165 ;; *************** function _Ignite_Detonators *****************
  3166 ;; Defined at:
  3167 ;;		line 29 in file "ignition.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  counter         1    5[COMRAM] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;		None               void
  3174 ;; Registers used:
  3175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1
  3181 ;;      Params:         0       0       0
  3182 ;;      Locals:         1       0       0
  3183 ;;      Temps:          2       0       0
  3184 ;;      Totals:         3       0       0
  3185 ;;Total ram usage:        3 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:    1
  3188 ;; This function calls:
  3189 ;;		_Transmit
  3190 ;; This function is called by:
  3191 ;;		_Isr
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text18
  3196  0006BC                     __ptext18:
  3197                           	opt stack 0
  3198  0006BC                     _Ignite_Detonators:
  3199                           	opt stack 26
  3200                           
  3201                           ;ignition.c: 30: for(unsigned char counter = 0; counter < 30; counter++) {
  3202                           
  3203                           ;incstack = 0
  3204  0006BC  0E00               	movlw	0
  3205  0006BE  6E06               	movwf	Ignite_Detonators@counter,c
  3206  0006C0                     i2l2061:
  3207  0006C0  0E1D               	movlw	29
  3208  0006C2  6406               	cpfsgt	Ignite_Detonators@counter,c
  3209  0006C4  D001               	goto	i2l2065
  3210  0006C6  0012               	return	
  3211  0006C8                     i2l2065:
  3212                           
  3213                           ;ignition.c: 31: if(pin[counter].time == current_time) {
  3214  0006C8  5006               	movf	Ignite_Detonators@counter,w,c
  3215  0006CA  0D06               	mullw	6
  3216  0006CC  0E04               	movlw	4
  3217  0006CE  26F3               	addwf	prodl,f,c
  3218  0006D0  0E00               	movlw	0
  3219  0006D2  22F4               	addwfc	prodh,f,c
  3220  0006D4  0E00               	movlw	low _pin
  3221  0006D6  24F3               	addwf	prodl,w,c
  3222  0006D8  6ED9               	movwf	fsr2l,c
  3223  0006DA  0E01               	movlw	high _pin
  3224  0006DC  20F4               	addwfc	prodh,w,c
  3225  0006DE  6EDA               	movwf	fsr2h,c
  3226  0006E0  502F               	movf	_current_time,w,c
  3227  0006E2  18DE               	xorwf	postinc2,w,c
  3228  0006E4  E11F               	bnz	i2l2069
  3229  0006E6  5030               	movf	_current_time+1,w,c
  3230  0006E8  18DE               	xorwf	postinc2,w,c
  3231  0006EA  A4D8               	btfss	status,2,c
  3232  0006EC  D01B               	goto	i2l2069
  3233                           
  3234                           ;ignition.c: 32: Transmit(pin[counter].slave, 'I', pin[counter].output);
  3235  0006EE  0E49               	movlw	73
  3236  0006F0  6E01               	movwf	Transmit@operation,c
  3237  0006F2  5006               	movf	Ignite_Detonators@counter,w,c
  3238  0006F4  0D06               	mullw	6
  3239  0006F6  0E01               	movlw	1
  3240  0006F8  26F3               	addwf	prodl,f,c
  3241  0006FA  0E00               	movlw	0
  3242  0006FC  22F4               	addwfc	prodh,f,c
  3243  0006FE  0E00               	movlw	low _pin
  3244  000700  24F3               	addwf	prodl,w,c
  3245  000702  6ED9               	movwf	fsr2l,c
  3246  000704  0E01               	movlw	high _pin
  3247  000706  20F4               	addwfc	prodh,w,c
  3248  000708  6EDA               	movwf	fsr2h,c
  3249  00070A  50DF               	movf	indf2,w,c
  3250  00070C  6E02               	movwf	Transmit@port,c
  3251  00070E  5006               	movf	Ignite_Detonators@counter,w,c
  3252  000710  0D06               	mullw	6
  3253  000712  0E00               	movlw	low _pin
  3254  000714  24F3               	addwf	prodl,w,c
  3255  000716  6ED9               	movwf	fsr2l,c
  3256  000718  0E01               	movlw	high _pin
  3257  00071A  20F4               	addwfc	prodh,w,c
  3258  00071C  6EDA               	movwf	fsr2h,c
  3259  00071E  50DF               	movf	indf2,w,c
  3260  000720  ECA0  F004         	call	_Transmit
  3261  000724                     i2l2069:
  3262  000724  2A06               	incf	Ignite_Detonators@counter,f,c
  3263  000726  D7CC               	goto	i2l2061
  3264  000728                     __end_of_Ignite_Detonators:
  3265                           	opt stack 0
  3266                           pclatu	equ	0xFFB
  3267                           pclath	equ	0xFFA
  3268                           tblptru	equ	0xFF8
  3269                           tblptrh	equ	0xFF7
  3270                           tblptrl	equ	0xFF6
  3271                           tablat	equ	0xFF5
  3272                           prodh	equ	0xFF4
  3273                           prodl	equ	0xFF3
  3274                           indf0	equ	0xFEF
  3275                           postinc0	equ	0xFEE
  3276                           fsr0h	equ	0xFEA
  3277                           fsr0l	equ	0xFE9
  3278                           wreg	equ	0xFE8
  3279                           postdec1	equ	0xFE5
  3280                           fsr1h	equ	0xFE2
  3281                           fsr1l	equ	0xFE1
  3282                           indf2	equ	0xFDF
  3283                           postinc2	equ	0xFDE
  3284                           fsr2h	equ	0xFDA
  3285                           fsr2l	equ	0xFD9
  3286                           status	equ	0xFD8
  3287                           
  3288 ;; *************** function _Check_Detonators *****************
  3289 ;; Defined at:
  3290 ;;		line 25 in file "ignition.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;		None
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;		None               void
  3297 ;; Registers used:
  3298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1
  3304 ;;      Params:         0       0       0
  3305 ;;      Locals:         0       0       0
  3306 ;;      Temps:          0       0       0
  3307 ;;      Totals:         0       0       0
  3308 ;;Total ram usage:        0 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; Hardware stack levels required when called:    1
  3311 ;; This function calls:
  3312 ;;		_Transmit
  3313 ;; This function is called by:
  3314 ;;		_Isr
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text19
  3319  000908                     __ptext19:
  3320                           	opt stack 0
  3321  000908                     _Check_Detonators:
  3322                           	opt stack 26
  3323                           
  3324                           ;ignition.c: 26: Transmit(pin[check_counter].slave, 'T', pin[check_counter].output);
  3325                           
  3326                           ;incstack = 0
  3327  000908  0E54               	movlw	84
  3328  00090A  6E01               	movwf	Transmit@operation,c
  3329  00090C  5031               	movf	_check_counter,w,c
  3330  00090E  0D06               	mullw	6
  3331  000910  0E01               	movlw	1
  3332  000912  26F3               	addwf	prodl,f,c
  3333  000914  0E00               	movlw	0
  3334  000916  22F4               	addwfc	prodh,f,c
  3335  000918  0E00               	movlw	low _pin
  3336  00091A  24F3               	addwf	prodl,w,c
  3337  00091C  6ED9               	movwf	fsr2l,c
  3338  00091E  0E01               	movlw	high _pin
  3339  000920  20F4               	addwfc	prodh,w,c
  3340  000922  6EDA               	movwf	fsr2h,c
  3341  000924  50DF               	movf	indf2,w,c
  3342  000926  6E02               	movwf	Transmit@port,c
  3343  000928  5031               	movf	_check_counter,w,c
  3344  00092A  0D06               	mullw	6
  3345  00092C  0E00               	movlw	low _pin
  3346  00092E  24F3               	addwf	prodl,w,c
  3347  000930  6ED9               	movwf	fsr2l,c
  3348  000932  0E01               	movlw	high _pin
  3349  000934  20F4               	addwfc	prodh,w,c
  3350  000936  6EDA               	movwf	fsr2h,c
  3351  000938  50DF               	movf	indf2,w,c
  3352  00093A  ECA0  F004         	call	_Transmit
  3353  00093E  0012               	return		;funcret
  3354  000940                     __end_of_Check_Detonators:
  3355                           	opt stack 0
  3356                           pclatu	equ	0xFFB
  3357                           pclath	equ	0xFFA
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           prodh	equ	0xFF4
  3363                           prodl	equ	0xFF3
  3364                           indf0	equ	0xFEF
  3365                           postinc0	equ	0xFEE
  3366                           fsr0h	equ	0xFEA
  3367                           fsr0l	equ	0xFE9
  3368                           wreg	equ	0xFE8
  3369                           postdec1	equ	0xFE5
  3370                           fsr1h	equ	0xFE2
  3371                           fsr1l	equ	0xFE1
  3372                           indf2	equ	0xFDF
  3373                           postinc2	equ	0xFDE
  3374                           fsr2h	equ	0xFDA
  3375                           fsr2l	equ	0xFD9
  3376                           status	equ	0xFD8
  3377                           
  3378 ;; *************** function _Transmit *****************
  3379 ;; Defined at:
  3380 ;;		line 15 in file "communication.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;  receiver        1    wreg     unsigned char 
  3383 ;;  operation       1    0[COMRAM] unsigned char 
  3384 ;;  port            1    1[COMRAM] unsigned char 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;  receiver        1    2[COMRAM] unsigned char 
  3387 ;; Return value:  Size  Location     Type
  3388 ;;		None               void
  3389 ;; Registers used:
  3390 ;;		wreg, status,2
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1
  3396 ;;      Params:         2       0       0
  3397 ;;      Locals:         1       0       0
  3398 ;;      Temps:          0       0       0
  3399 ;;      Totals:         3       0       0
  3400 ;;Total ram usage:        3 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_Check_Detonators
  3406 ;;		_Ignite_Detonators
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           	psect	text20
  3411  000940                     __ptext20:
  3412                           	opt stack 0
  3413  000940                     _Transmit:
  3414                           	opt stack 26
  3415                           
  3416                           ;incstack = 0
  3417                           ;Transmit@receiver stored from wreg
  3418  000940  6E03               	movwf	Transmit@receiver,c
  3419                           
  3420                           ;communication.c: 17: PORTBbits.RB5 = 1;
  3421  000942  8A81               	bsf	3969,5,c	;volatile
  3422                           
  3423                           ;communication.c: 18: RCSTA1bits.CREN = 0;
  3424  000944  98AB               	bcf	4011,4,c	;volatile
  3425                           
  3426                           ;communication.c: 20: __nop();
  3427  000946  F000               	nop	
  3428  000948                     i2l480:
  3429  000948  A89E               	btfss	3998,4,c	;volatile
  3430  00094A  D7FE               	goto	i2l480
  3431                           
  3432                           ;communication.c: 22: TXSTA1bits.TX9D = 1;
  3433  00094C  80AC               	bsf	4012,0,c	;volatile
  3434                           
  3435                           ;communication.c: 23: TXREG1 = receiver;
  3436  00094E  C003  FFAD         	movff	Transmit@receiver,4013	;volatile
  3437  000952                     i2l483:
  3438  000952  A89E               	btfss	3998,4,c	;volatile
  3439  000954  D7FE               	goto	i2l483
  3440                           
  3441                           ;communication.c: 25: TXREG1 = 0xAA;
  3442  000956  0EAA               	movlw	170
  3443  000958  6EAD               	movwf	4013,c	;volatile
  3444  00095A                     i2l486:
  3445  00095A  A89E               	btfss	3998,4,c	;volatile
  3446  00095C  D7FE               	goto	i2l486
  3447                           
  3448                           ;communication.c: 27: TXREG1 = operation;
  3449  00095E  C001  FFAD         	movff	Transmit@operation,4013	;volatile
  3450  000962                     i2l489:
  3451  000962  A89E               	btfss	3998,4,c	;volatile
  3452  000964  D7FE               	goto	i2l489
  3453                           
  3454                           ;communication.c: 29: TXREG1 = port;
  3455  000966  C002  FFAD         	movff	Transmit@port,4013	;volatile
  3456  00096A                     i2l492:
  3457  00096A  A2AC               	btfss	4012,1,c	;volatile
  3458  00096C  D7FE               	goto	i2l492
  3459                           
  3460                           ;communication.c: 31: PORTBbits.RB5 = 0;
  3461  00096E  9A81               	bcf	3969,5,c	;volatile
  3462                           
  3463                           ;communication.c: 32: RCSTA1bits.CREN = 1;
  3464  000970  88AB               	bsf	4011,4,c	;volatile
  3465                           
  3466                           ;communication.c: 33: __nop();
  3467  000972  F000               	nop	
  3468  000974  0012               	return		;funcret
  3469  000976                     __end_of_Transmit:
  3470                           	opt stack 0
  3471                           pclatu	equ	0xFFB
  3472                           pclath	equ	0xFFA
  3473                           tblptru	equ	0xFF8
  3474                           tblptrh	equ	0xFF7
  3475                           tblptrl	equ	0xFF6
  3476                           tablat	equ	0xFF5
  3477                           prodh	equ	0xFF4
  3478                           prodl	equ	0xFF3
  3479                           indf0	equ	0xFEF
  3480                           postinc0	equ	0xFEE
  3481                           fsr0h	equ	0xFEA
  3482                           fsr0l	equ	0xFE9
  3483                           wreg	equ	0xFE8
  3484                           postdec1	equ	0xFE5
  3485                           fsr1h	equ	0xFE2
  3486                           fsr1l	equ	0xFE1
  3487                           indf2	equ	0xFDF
  3488                           postinc2	equ	0xFDE
  3489                           fsr2h	equ	0xFDA
  3490                           fsr2l	equ	0xFD9
  3491                           status	equ	0xFD8
  3492                           pclatu	equ	0xFFB
  3493                           pclath	equ	0xFFA
  3494                           tblptru	equ	0xFF8
  3495                           tblptrh	equ	0xFF7
  3496                           tblptrl	equ	0xFF6
  3497                           tablat	equ	0xFF5
  3498                           prodh	equ	0xFF4
  3499                           prodl	equ	0xFF3
  3500                           indf0	equ	0xFEF
  3501                           postinc0	equ	0xFEE
  3502                           fsr0h	equ	0xFEA
  3503                           fsr0l	equ	0xFE9
  3504                           wreg	equ	0xFE8
  3505                           postdec1	equ	0xFE5
  3506                           fsr1h	equ	0xFE2
  3507                           fsr1l	equ	0xFE1
  3508                           indf2	equ	0xFDF
  3509                           postinc2	equ	0xFDE
  3510                           fsr2h	equ	0xFDA
  3511                           fsr2l	equ	0xFD9
  3512                           status	equ	0xFD8
  3513                           
  3514                           	psect	rparam
  3515  0000                     pclatu	equ	0xFFB
  3516                           pclath	equ	0xFFA
  3517                           tblptru	equ	0xFF8
  3518                           tblptrh	equ	0xFF7
  3519                           tblptrl	equ	0xFF6
  3520                           tablat	equ	0xFF5
  3521                           prodh	equ	0xFF4
  3522                           prodl	equ	0xFF3
  3523                           indf0	equ	0xFEF
  3524                           postinc0	equ	0xFEE
  3525                           fsr0h	equ	0xFEA
  3526                           fsr0l	equ	0xFE9
  3527                           wreg	equ	0xFE8
  3528                           postdec1	equ	0xFE5
  3529                           fsr1h	equ	0xFE2
  3530                           fsr1l	equ	0xFE1
  3531                           indf2	equ	0xFDF
  3532                           postinc2	equ	0xFDE
  3533                           fsr2h	equ	0xFDA
  3534                           fsr2l	equ	0xFD9
  3535                           status	equ	0xFD8
  3536                           
  3537                           	psect	temp
  3538  000041                     btemp:
  3539                           	opt stack 0
  3540  000041                     	ds	1
  3541  0000                     int$flags	set	btemp
  3542                           pclatu	equ	0xFFB
  3543                           pclath	equ	0xFFA
  3544                           tblptru	equ	0xFF8
  3545                           tblptrh	equ	0xFF7
  3546                           tblptrl	equ	0xFF6
  3547                           tablat	equ	0xFF5
  3548                           prodh	equ	0xFF4
  3549                           prodl	equ	0xFF3
  3550                           indf0	equ	0xFEF
  3551                           postinc0	equ	0xFEE
  3552                           fsr0h	equ	0xFEA
  3553                           fsr0l	equ	0xFE9
  3554                           wreg	equ	0xFE8
  3555                           postdec1	equ	0xFE5
  3556                           fsr1h	equ	0xFE2
  3557                           fsr1l	equ	0xFE1
  3558                           indf2	equ	0xFDF
  3559                           postinc2	equ	0xFDE
  3560                           fsr2h	equ	0xFDA
  3561                           fsr2l	equ	0xFD9
  3562                           status	equ	0xFD8


Data Sizes:
    Strings     83
    Constant    0
    Data        180
    BSS         23
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      64
    BANK0           160      7       7
    BANK1           256      0     180

Pointer List with Targets:

    Write_Display_Byte@write_data	PTR unsigned char  size(2) Largest target is 511
		 -> pixels(COMRAM[7]), RAM(DATA[511]), 

    Evaluate_Display@evaluate	PTR const unsigned char  size(2) Largest target is 4
		 -> signs(COMRAM[3]), STR_2(CODE[4]), STR_1(CODE[4]), 

    Set_Bits@bits	PTR const unsigned char  size(3) Largest target is 8191
		 -> ROM(CODE[8191]), STR_19(CODE[2]), STR_18(CODE[6]), STR_17(CODE[7]), 
		 -> STR_16(CODE[4]), STR_15(CODE[6]), STR_14(CODE[7]), STR_13(CODE[7]), 
		 -> STR_12(CODE[7]), STR_11(CODE[8]), STR_10(CODE[4]), STR_9(CODE[7]), 
		 -> STR_8(CODE[6]), STR_7(CODE[5]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[3]), STR_3(CODE[7]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Isr->_Set_Display
    _Set_Display->_Evaluate_Signs
    _Evaluate_Signs->_Evaluate_Display
    _Evaluate_Display->_Set_Bits
    _Ignite_Detonators->_Transmit
    _Check_Detonators->_Transmit

Critical Paths under _main in BANK0

    _main->_Write_Display_Byte

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     249
                               _Init
                 _Write_Display_Byte
 ---------------------------------------------------------------------------------
 (1) _Write_Display_Byte                                   7     5      2     249
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0       0
                          _InitAnsel
                  _InitMiscellaneous
                           _InitPort
                          _InitTimer
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 20    20      0    6693
                                             20 COMRAM    20    20      0
                   _Check_Detonators
                  _Ignite_Detonators
                            _Receive
                        _Set_Display
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _Set_Display                                          4     1      3    5370
                                             16 COMRAM     4     1      3
                   _Evaluate_Display
                     _Evaluate_Signs
               i2_Write_Display_Byte
 ---------------------------------------------------------------------------------
 (5) i2_Write_Display_Byte                                 7     5      2     116
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _Evaluate_Signs                                       3     1      2    2036
                                             13 COMRAM     3     1      2
                   _Evaluate_Display
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _Evaluate_Display                                     5     3      2    1572
                                              8 COMRAM     5     3      2
                           _Set_Bits
 ---------------------------------------------------------------------------------
 (7) _Set_Bits                                             8     5      3    1272
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (4) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Ignite_Detonators                                    3     3      0     434
                                              3 COMRAM     3     3      0
                           _Transmit
 ---------------------------------------------------------------------------------
 (4) _Check_Detonators                                     0     0      0     322
                           _Transmit
 ---------------------------------------------------------------------------------
 (5) _Transmit                                             3     1      2     322
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init
     _InitAnsel
     _InitMiscellaneous
     _InitPort
     _InitTimer
     _InitTransmission
     _InitTris
   _Write_Display_Byte

 _Isr (ROOT)
   _Check_Detonators
     _Transmit
   _Ignite_Detonators
     _Transmit
   _Receive
   _Set_Display
     _Evaluate_Display
       _Set_Bits
     _Evaluate_Signs
       _Evaluate_Display
         _Set_Bits
       ___lwmod
     i2_Write_Display_Byte
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      B4       5       70.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      7       7       4        4.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     28      40       1       68.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB       6        0.0%
DATA                 0      0      FB       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Feb 03 18:03:19 2017

      Evaluate_Display@evaluate 0009                    ___awdiv@sign 0006                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000                             l505 077C                    __CFG_CPB$OFF 000000  
                  __CFG_CPD$OFF 000000                             _Isr 0008                             _pin 0100  
                _Evaluate_Signs 078E                             prod 000FF3                             wreg 000FE8  
             Set_Bits@Bitoutput 0008                      _TXSTA1bits 000FAC                    __CFG_LVP$OFF 000000  
                          ?_Isr 0001                            l2483 09E8                            STR_1 0266  
                          STR_2 026A                            STR_3 0223                            STR_4 0263  
                          STR_5 0245                            STR_6 023F                            STR_7 025D  
                          STR_8 024B                            STR_9 0238                            _Init 09CA  
                          _main 09E4                            fsr0h 000FEA                            fsr1h 000FE2  
                          indf0 000FEF                            fsr0l 000FE9                            fsr2h 000FDA  
                          fsr1l 000FE1                            indf2 000FDF                            fsr2l 000FD9  
                          btemp 0041                   __CFG_BORV$190 000000                    Transmit@port 0002  
                          pclat 000FFA                            prodh 000FF4                            prodl 000FF3  
                          start 0216                   __CFG_IESO$OFF 000000              _Write_Display_Byte 0728  
                  ___param_bank 000010                           ??_Isr 0015                 __end_of_Receive 0A40  
           ?_Write_Display_Byte 0060                    _BAUDCON1bits 000FB8                           ?_Init 0001  
                         ?_main 0001                 __end_of___awdiv 06BC                           _EEADR 000FA9  
                         STR_10 0262                           STR_11 021B                           STR_12 022A  
                         STR_13 0231                           STR_14 0223                           STR_15 0257  
                         STR_16 0226                           STR_17 0223                           STR_18 0251  
                         STR_19 0243          __end_of_Evaluate_Signs 07F2                 ___awdiv@divisor 0003  
             _InitMiscellaneous 0A40                 __end_of___lwmod 08CC                           i2l505 087A  
                         i2l419 07E0                           i2l480 0948                           i2l483 0952  
                         i2l492 096A                           i2l581 01DA                           i2l486 095A  
                         i2l568 00A4                           i2l489 0962                           i2l569 00A0  
               ___awdiv@counter 0005                           i2l994 08C2               _Ignite_Detonators 06BC  
                         _TMR1H 000FCF                           _TMR3H 000FB3                           _TMR1L 000FCE  
                         _TMR3L 000FB2                           _PORTA 000F80                           _PORTB 000F81  
                         _PORTC 000F82                           _PORTE 000F84                           _TRISA 000F92  
                         _TRISB 000F93                           _TRISC 000F94                           _TRISE 000F96  
                 __CFG_WRT0$OFF 000000        __end_of_InitTransmission 09CA                   __CFG_WRT1$OFF 000000  
            ?_InitMiscellaneous 0001                  __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000  
                __CFG_EBTR1$OFF 000000              ?_Ignite_Detonators 0001                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                _Evaluate_Display 0270  
                __CFG_EBTRB$OFF 000000                           _signs 003D              __CFG_MCLRE$EXTMCLR 000000  
          ??_Write_Display_Byte 0062                  __pbitbssCOMRAM 0200                  __CFG_BOREN$OFF 000000  
           ??_InitMiscellaneous 0060                           tablat 000FF5             ??_Ignite_Detonators 0004  
                         status 000FD8                 __initialization 08CC                    __end_of_Init 09E4  
                  __end_of_main 09FA                __end_of_InitPort 0A32                __end_of_InitTris 0A20  
        Set_Display@information 0011       __end_of_InitMiscellaneous 0A46                          ??_Init 0060  
     __end_of_Ignite_Detonators 0728                   ??_Set_Display 0014                          ??_main 0067  
              __end_of_Set_Bits 0584                 ?_Evaluate_Signs 000E                   __activetblptr 000002  
              __end_of_Transmit 0976                          _EEDATA 000FA8                          _CCPR1H 000FBF  
                        _CCPR1L 000FBE                          _EECON2 000FA7                ___awdiv@dividend 0001  
                        _ANSELA 000F38                          _ANSELB 000F39                          _ANSELC 000F3A  
                        i2l2021 081E                          i2l2009 07F6                          i2l2025 082C  
                        i2l2107 0A3C                          i2l2027 0836                          i2l2131 0672  
                        i2l2061 06C0                          i2l2133 067A                          i2l2125 065C  
                        i2l2151 06B2                          i2l2143 069A                          i2l2135 067E  
                        i2l2119 064C                          i2l2065 06C8                          i2l2147 06A4  
                        i2l2411 01A2                          i2l2069 0724                          i2l2407 016C  
                        i2l2415 01C0                          i2l2425 01D4                          i2l1901 04C0  
                        i2l2365 006E                  __CFG_WDTEN$OFF 000000                          i2l1911 08A4  
                        i2l2359 005C                          i2l1841 04E0                          i2l1843 04E4  
                        i2l1835 04D4                          i2l1851 04F0                          i2l1915 08B8  
                        i2l1907 0898                          i2l1845 04E8                          i2l1837 04D8  
                        i2l1853 0540                          i2l1861 0278                          i2l1909 08A0  
                        i2l1847 04EC                          i2l1839 04DC                          i2l1855 0542  
                        i2l1871 02F0                          i2l1863 0290                          i2l1881 0368  
                        i2l1873 0308                          i2l1865 02A8                          i2l1891 03E0  
                        i2l1883 0380                          i2l1875 0320                          i2l1867 02C0  
                        i2l1971 079A                          i2l1893 03F8                          i2l1885 0398  
                        i2l1877 0338                          i2l1869 02D8                          i2l1895 0410  
                        i2l1887 03B0                          i2l1879 0350                          i2l1967 0792  
                        i2l1889 03C8                          i2l1897 0422                          i2l1899 04BE  
                        _RCREG1 000FAE                          _OSCCON 000FD3              __size_of_InitAnsel 0014  
                        _SPBRG1 000FAF                          _SSP1IF 007CF3              __size_of_InitTimer 0030  
                        _TXREG1 000FAD                       ??_Receive 0001                  __CFG_XINST$OFF 000000  
                  _CCPTMRS0bits 000F49                       ??___awdiv 0005                       ??___lwmod 0005  
                        clear_0 08D4                ___awdiv@quotient 0007                          _pixels 0036  
Evaluate_Signs@evaluation_value 000E                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8             __end_of_Set_Display 0844  
               __CFG_HFOFST$OFF 000000            Isr@pixel_index_array 0026                      __accesstop 0060  
       __end_of__initialization 08FA                 __CFG_PBADEN$OFF 000000                   ___rparam_used 000001  
                __pcstackCOMRAM 0001       __size_of_Check_Detonators 0038                    __pidataBANK1 0584  
    __size_of_InitMiscellaneous 0006      __size_of_Ignite_Detonators 006C               __end_of_InitAnsel 0A0E  
             __end_of_InitTimer 09A6    __end_ofi2_Write_Display_Byte 088A              Isr@pixel_index_bit 0027  
               __CFG_PLLCFG$OFF 000000                       ?_InitPort 0001                       ?_InitTris 0001  
                     ?_Set_Bits 0001              __CFG_CCP2MX$PORTC1 000000        __end_of_Evaluate_Display 04CA  
            __CFG_CCP3MX$PORTB5 000000                       ?_Transmit 0001                     _Set_Display 07F2  
             ?_InitTransmission 0001               __CFG_PRICLKEN$OFF 000000                         i2u84_40 0456  
                       i2u84_47 044C                         _SSP1BUF 000FC9              ??_InitTransmission 0060  
                    ??_InitPort 0060                      ??_InitTris 0060     i2Write_Display_Byte@counter 0007  
                    ??_Set_Bits 0004                 __CFG_PWRTEN$OFF 000000                         _Receive 0A32  
                       __Hparam 0000                         __Lparam 0000                         ___awdiv 0638  
              ??_Evaluate_Signs 0010                      ??_Transmit 0003                         ___lwmod 088A  
                  __psmallconst 021A                 __CFG_STVREN$OFF 000000                         __pcinit 08CC  
                       __ramtop 0200                         __ptext0 09E4                         __ptext1 0728  
                       __ptext2 09CA                         __ptext3 0A0E                         __ptext4 09A6  
                       __ptext5 0976                         __ptext6 0A20                         __ptext7 0A40  
                       __ptext8 09FA                       _T1CONbits 000FCD                    __size_of_Isr 020E  
               Set_Display@type 0014                       _T3CONbits 000FB1                         _overrun 0202  
          end_of_initialization 08FA     __size_of_Write_Display_Byte 0066                   __Lmediumconst 0000  
          i2_Write_Display_Byte 0844                       _RCSTAbits 000FAB                _Check_Detonators 0908  
                       postdec1 000FE5                         postinc0 000FEE                         postinc2 000FDE  
                     _PORTBbits 000F81                       _PORTCbits 000F82                       _TRISCbits 000F94  
      Ignite_Detonators@counter 0006                   _check_counter 0031                     _CCP1CONbits 000FBD  
         ?i2_Write_Display_Byte 0001                    Set_Bits@bits 0001             start_initialization 08CC  
                     _InitAnsel 09FA                    _ignite_ready 0200                     __end_of_Isr 0216  
                     _InitTimer 0976                Set_Bits@bitcount 0007  i2Write_Display_Byte@write_data 0001  
             __size_of_InitPort 0012               __size_of_InitTris 0012               __size_of_Set_Bits 00BA  
             ?_Evaluate_Display 0009                     __pdataBANK1 0100              ??_Evaluate_Display 000B  
                _slave_selected 0035               __size_of_Transmit 0036                    ?_Set_Display 0011  
                   __pbssCOMRAM 0029                      ?_InitAnsel 0001                   __pcstackBANK0 0060  
                    ?_InitTimer 0001          ??i2_Write_Display_Byte 0003                    _current_time 002F  
              _master_addressed 0201                        ?_Receive 0001       __size_of_InitTransmission 0024  
                     __pintcode 0008                        ?___awdiv 0001                        ?___lwmod 0001  
                   __smallconst 021A        __end_of_Check_Detonators 0940                        _PIE1bits 000F9D  
                      i2u161_44 0184                        i2u161_45 0180                        i2u159_44 0152  
                      i2u159_45 014E                        _PIR1bits 000F9E                        _PIR2bits 000FA1  
              __CFG_WDTPS$32768 000000                        _SSP1CON1 000FC6                        _SSP1STAT 000FC7  
                   ??_InitAnsel 0060                 _receive_counter 0034                     ??_InitTimer 0060  
    __end_of_Write_Display_Byte 078E                       copy_data0 08EE                        _InitPort 0A20  
                      _InitTris 0A0E               Transmit@operation 0001                      _EECON1bits 000FA6  
               Isr@search_index 0028                        _Set_Bits 04CA                    _pin_selected 0033  
                      __Hrparam 0000                __size_of_Receive 000E                        __Lrparam 0000  
             __CFG_P2BMX$PORTB5 000000                        _Transmit 0940                __size_of___awdiv 0084  
              __size_of___lwmod 0042            __size_of_Set_Display 0052         __size_of_Evaluate_Signs 0064  
                      __ptext10 0638                        __ptext11 07F2                        __ptext20 0940  
                      __ptext12 0844                        __ptext13 078E                        __ptext14 088A  
                      __ptext15 0270                        __ptext16 04CA                        __ptext17 0A32  
                      __ptext18 06BC                        __ptext19 0908                Set_Display@value 0012  
                 __size_of_Init 001A                   __size_of_main 0016                        _received 0029  
              _InitTransmission 09A6                        _testflag 0203                        int$flags 0041  
          Evaluate_Display@size 000D                Transmit@receiver 0003    Write_Display_Byte@write_data 0060  
    Evaluate_Signs@valuecounter 0010                      _INTCONbits 000FF2       __size_of_Evaluate_Display 025A  
                      intlevel2 0000                ___lwmod@dividend 0001       Write_Display_Byte@counter 0066  
                    _RCSTA1bits 000FAB                 _display_counter 0032                 ___lwmod@divisor 0003  
               ___lwmod@counter 0005               __CFG_T3CMX$PORTC0 000000               ?_Check_Detonators 0001  
            ??_Check_Detonators 0004               __CFG_FOSC$INTIO67 000000   __size_ofi2_Write_Display_Byte 0046  
