

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 18 16:09:24 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  000AFE                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _p_status
    49  000AFE  30                 	db	48
    50  0000                     _ANSELA	set	3896
    51  0000                     _ANSELB	set	3897
    52  0000                     _ANSELC	set	3898
    53  0000                     _ANSELD	set	3899
    54  0000                     _ANSELE	set	3900
    55  0000                     _CCPTMRS0bits	set	3913
    56  0000                     _VREFCON0	set	3906
    57  0000                     _VREFCON1	set	3905
    58  0000                     _VREFCON2bits	set	3904
    59  0000                     _ADCON0	set	4034
    60  0000                     _ADCON0bits	set	4034
    61  0000                     _ADCON1	set	4033
    62  0000                     _ADCON2	set	4032
    63  0000                     _ADRESH	set	4036
    64  0000                     _BAUDCON1bits	set	4024
    65  0000                     _CCP1CON	set	4029
    66  0000                     _CCPR1H	set	4031
    67  0000                     _CCPR1L	set	4030
    68  0000                     _INTCONbits	set	4082
    69  0000                     _OSCCON	set	4051
    70  0000                     _PIE1bits	set	3997
    71  0000                     _PIR1bits	set	3998
    72  0000                     _PORTA	set	3968
    73  0000                     _PORTAbits	set	3968
    74  0000                     _PORTB	set	3969
    75  0000                     _PORTBbits	set	3969
    76  0000                     _PORTC	set	3970
    77  0000                     _PORTCbits	set	3970
    78  0000                     _PORTD	set	3971
    79  0000                     _PORTDbits	set	3971
    80  0000                     _PORTE	set	3972
    81  0000                     _PORTEbits	set	3972
    82  0000                     _RCREG1	set	4014
    83  0000                     _RCSTA1bits	set	4011
    84  0000                     _SPBRG1	set	4015
    85  0000                     _T1CON	set	4045
    86  0000                     _T1CONbits	set	4045
    87  0000                     _TMR1H	set	4047
    88  0000                     _TMR1L	set	4046
    89  0000                     _TRISA	set	3986
    90  0000                     _TRISB	set	3987
    91  0000                     _TRISC	set	3988
    92  0000                     _TRISCbits	set	3988
    93  0000                     _TRISD	set	3989
    94  0000                     _TRISE	set	3990
    95  0000                     _TXREG1	set	4013
    96  0000                     _TXSTA1bits	set	4012
    97                           
    98                           ; #config settings
    99  0000                     
   100                           	psect	cinit
   101  000948                     __pcinit:
   102                           	opt stack 0
   103  000948                     start_initialization:
   104                           	opt stack 0
   105  000948                     __initialization:
   106                           	opt stack 0
   107                           
   108                           ; Clear objects allocated to BANK0 (10 bytes)
   109  000948  EE00  F060         	lfsr	0,__pbssBANK0
   110  00094C  0E0A               	movlw	10
   111  00094E                     clear_0:
   112  00094E  6AEE               	clrf	postinc0,c
   113  000950  06E8               	decf	wreg,f,c
   114  000952  E1FD               	bnz	clear_0
   115                           
   116                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   117  000954  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   118                           
   119                           ; Clear objects allocated to COMRAM (5 bytes)
   120  000956  6A4A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   121  000958  6A49               	clrf	(__pbssCOMRAM+3)& (0+255),c
   122  00095A  6A48               	clrf	(__pbssCOMRAM+2)& (0+255),c
   123  00095C  6A47               	clrf	(__pbssCOMRAM+1)& (0+255),c
   124  00095E  6A46               	clrf	__pbssCOMRAM& (0+255),c
   125                           
   126                           ; Initialize objects allocated to COMRAM (1 bytes)
   127                           ; load TBLPTR registers with __pidataCOMRAM
   128  000960  0EFE               	movlw	low __pidataCOMRAM
   129  000962  6EF6               	movwf	tblptrl,c
   130  000964  0E0A               	movlw	high __pidataCOMRAM
   131  000966  6EF7               	movwf	tblptrh,c
   132  000968  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   133  00096A  6EF8               	movwf	tblptru,c
   134  00096C  0009               	tblrd		*+	;fetch initializer
   135  00096E  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   136  000972                     end_of_initialization:
   137                           	opt stack 0
   138  000972                     __end_of__initialization:
   139                           	opt stack 0
   140  000972  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   141  000974  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   142  000976  0E00               	movlw	low (__Lmediumconst shr (0+16))
   143  000978  6EF8               	movwf	tblptru,c
   144  00097A  0100               	movlb	0
   145  00097C  EF6B  F005         	goto	_main	;jump to C main() function
   146                           tblptru	equ	0xFF8
   147                           tblptrh	equ	0xFF7
   148                           tblptrl	equ	0xFF6
   149                           tablat	equ	0xFF5
   150                           postinc0	equ	0xFEE
   151                           wreg	equ	0xFE8
   152                           
   153                           	psect	bitbssCOMRAM
   154  000258                     __pbitbssCOMRAM:
   155                           	opt stack 0
   156  000258                     _overrun:
   157                           	opt stack 0
   158  000258                     	ds	1
   159  000259                     _slave_addressed:
   160                           	opt stack 0
   161  000259                     	ds	1
   162                           tblptru	equ	0xFF8
   163                           tblptrh	equ	0xFF7
   164                           tblptrl	equ	0xFF6
   165                           tablat	equ	0xFF5
   166                           postinc0	equ	0xFEE
   167                           wreg	equ	0xFE8
   168                           
   169                           	psect	bssCOMRAM
   170  000046                     __pbssCOMRAM:
   171                           	opt stack 0
   172  000046                     _received:
   173                           	opt stack 0
   174  000046                     	ds	4
   175  00004A                     _receive_counter:
   176                           	opt stack 0
   177  00004A                     	ds	1
   178                           tblptru	equ	0xFF8
   179                           tblptrh	equ	0xFF7
   180                           tblptrl	equ	0xFF6
   181                           tablat	equ	0xFF5
   182                           postinc0	equ	0xFEE
   183                           wreg	equ	0xFE8
   184                           
   185                           	psect	dataCOMRAM
   186  00004C                     __pdataCOMRAM:
   187                           	opt stack 0
   188  00004C                     _p_status:
   189                           	opt stack 0
   190  00004C                     	ds	1
   191                           tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           
   198                           	psect	bssBANK0
   199  000060                     __pbssBANK0:
   200                           	opt stack 0
   201  000060                     _Marker:
   202                           	opt stack 0
   203  000060                     	ds	10
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211                           	psect	cstackBANK0
   212  00006A                     __pcstackBANK0:
   213                           	opt stack 0
   214  00006A                     InitVar@c:
   215                           	opt stack 0
   216  00006A                     Ignite_Port@ignite_number:
   217                           	opt stack 0
   218  00006A                     Disable_Port@disable_number:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0x0
   222  00006A                     	ds	1
   223  00006B                     
   224                           ; 0 bytes @ 0x1
   225  00006B                     	ds	1
   226  00006C                     Check_Ignition@c:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x2
   230  00006C                     	ds	1
   231  00006D                     tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           
   238                           ; 0 bytes @ 0x3
   239                           
   240                           	psect	cstackCOMRAM
   241  000001                     __pcstackCOMRAM:
   242                           	opt stack 0
   243  000001                     ?___ftpack:
   244                           	opt stack 0
   245  000001                     Transmit@operation:
   246                           	opt stack 0
   247  000001                     Receive_Dump@dump:
   248                           	opt stack 0
   249  000001                     ___ftpack@arg:
   250                           	opt stack 0
   251  000001                     ___ftge@ff1:
   252                           	opt stack 0
   253                           
   254                           ; 3 bytes @ 0x0
   255  000001                     	ds	1
   256  000002                     Transmit@port:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x1
   260  000002                     	ds	1
   261  000003                     Transmit@con_status:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x2
   265  000003                     	ds	1
   266  000004                     Transmit@receiver:
   267                           	opt stack 0
   268  000004                     ___ftpack@exp:
   269                           	opt stack 0
   270  000004                     ___ftge@ff2:
   271                           	opt stack 0
   272                           
   273                           ; 3 bytes @ 0x3
   274  000004                     	ds	1
   275  000005                     ___ftpack@sign:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x4
   279  000005                     	ds	1
   280  000006                     ??___ftpack:
   281                           
   282                           ; 0 bytes @ 0x5
   283  000006                     	ds	1
   284  000007                     ??___ftge:
   285                           
   286                           ; 0 bytes @ 0x6
   287  000007                     	ds	2
   288  000009                     ?___lbtoft:
   289                           	opt stack 0
   290                           
   291                           ; 3 bytes @ 0x8
   292  000009                     	ds	3
   293  00000C                     ___lbtoft@c:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0xB
   297  00000C                     	ds	1
   298  00000D                     ?___ftmul:
   299                           	opt stack 0
   300  00000D                     ___ftmul@f1:
   301                           	opt stack 0
   302                           
   303                           ; 3 bytes @ 0xC
   304  00000D                     	ds	3
   305  000010                     ___ftmul@f2:
   306                           	opt stack 0
   307                           
   308                           ; 3 bytes @ 0xF
   309  000010                     	ds	3
   310  000013                     ??___ftmul:
   311                           
   312                           ; 0 bytes @ 0x12
   313  000013                     	ds	3
   314  000016                     ___ftmul@exp:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x15
   318  000016                     	ds	1
   319  000017                     ___ftmul@f3_as_product:
   320                           	opt stack 0
   321                           
   322                           ; 3 bytes @ 0x16
   323  000017                     	ds	3
   324  00001A                     ___ftmul@cntr:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x19
   328  00001A                     	ds	1
   329  00001B                     ___ftmul@sign:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x1A
   333  00001B                     	ds	1
   334  00001C                     ?___ftdiv:
   335                           	opt stack 0
   336  00001C                     ___ftdiv@f1:
   337                           	opt stack 0
   338                           
   339                           ; 3 bytes @ 0x1B
   340  00001C                     	ds	3
   341  00001F                     ___ftdiv@f2:
   342                           	opt stack 0
   343                           
   344                           ; 3 bytes @ 0x1E
   345  00001F                     	ds	3
   346  000022                     ??___ftdiv:
   347                           
   348                           ; 0 bytes @ 0x21
   349  000022                     	ds	3
   350  000025                     ___ftdiv@cntr:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x24
   354  000025                     	ds	1
   355  000026                     ___ftdiv@f3:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0x25
   359  000026                     	ds	3
   360  000029                     ___ftdiv@exp:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x28
   364  000029                     	ds	1
   365  00002A                     ___ftdiv@sign:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x29
   369  00002A                     	ds	1
   370  00002B                     Check_Power@DAC_out:
   371                           	opt stack 0
   372                           
   373                           ; 3 bytes @ 0x2A
   374  00002B                     	ds	3
   375  00002E                     Check_Power@voltage:
   376                           	opt stack 0
   377                           
   378                           ; 3 bytes @ 0x2D
   379  00002E                     	ds	3
   380  000031                     Check_Power@supply:
   381                           	opt stack 0
   382                           
   383                           ; 3 bytes @ 0x30
   384  000031                     	ds	3
   385  000034                     Check_Power@source_power:
   386                           	opt stack 0
   387                           
   388                           ; 3 bytes @ 0x33
   389  000034                     	ds	3
   390  000037                     ??_Isr:
   391                           
   392                           ; 0 bytes @ 0x36
   393  000037                     	ds	14
   394  000045                     Isr@c:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x44
   398  000045                     	ds	1
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 74 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;		None               void
   418 ;; Registers used:
   419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   425 ;;      Params:         0       0       0       0
   426 ;;      Locals:         0       0       0       0
   427 ;;      Temps:          0       0       0       0
   428 ;;      Totals:         0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels required when called:    7
   431 ;; This function calls:
   432 ;;		_Check_Ignition
   433 ;;		_Init
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text0
   440  000AD6                     __ptext0:
   441                           	opt stack 0
   442  000AD6                     _main:
   443                           	opt stack 24
   444                           
   445                           ;main.c: 75: Init();
   446                           
   447                           ;incstack = 0
   448  000AD6  ECFB  F004         	call	_Init	;wreg free
   449  000ADA                     l21:
   450                           
   451                           ;main.c: 77: Check_Ignition();
   452  000ADA  EC82  F004         	call	_Check_Ignition	;wreg free
   453                           
   454                           ;main.c: 78: __nop();
   455  000ADE  F000               	nop	
   456  000AE0  D7FC               	goto	l21
   457  000AE2                     __end_of_main:
   458                           	opt stack 0
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           postinc0	equ	0xFEE
   464                           wreg	equ	0xFE8
   465                           
   466 ;; *************** function _Init *****************
   467 ;; Defined at:
   468 ;;		line 5 in file "init.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;		None               void
   475 ;; Registers used:
   476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   482 ;;      Params:         0       0       0       0
   483 ;;      Locals:         0       0       0       0
   484 ;;      Temps:          0       0       0       0
   485 ;;      Totals:         0       0       0       0
   486 ;;Total ram usage:        0 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; Hardware stack levels required when called:    6
   489 ;; This function calls:
   490 ;;		_InitADC
   491 ;;		_InitAnsel
   492 ;;		_InitInterrupt
   493 ;;		_InitMiscellaneous
   494 ;;		_InitPort
   495 ;;		_InitTransmission
   496 ;;		_InitTris
   497 ;;		_InitVar
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text1
   504  0009F6                     __ptext1:
   505                           	opt stack 0
   506  0009F6                     _Init:
   507                           	opt stack 24
   508                           
   509                           ;init.c: 6: InitPort();
   510                           
   511                           ;incstack = 0
   512  0009F6  EC46  F005         	call	_InitPort	;wreg free
   513                           
   514                           ;init.c: 7: InitTris();
   515  0009FA  EC3B  F005         	call	_InitTris	;wreg free
   516                           
   517                           ;init.c: 8: InitAnsel();
   518  0009FE  EC1D  F005         	call	_InitAnsel	;wreg free
   519                           
   520                           ;init.c: 9: InitMiscellaneous();
   521  000A02  EC7C  F005         	call	_InitMiscellaneous	;wreg free
   522                           
   523                           ;init.c: 10: InitTransmission();
   524  000A06  EC2D  F005         	call	_InitTransmission	;wreg free
   525                           
   526                           ;init.c: 11: InitADC();
   527  000A0A  ECD6  F004         	call	_InitADC	;wreg free
   528                           
   529                           ;init.c: 12: InitVar();
   530  000A0E  ECC0  F004         	call	_InitVar	;wreg free
   531                           
   532                           ;init.c: 13: InitInterrupt();
   533  000A12  EC77  F005         	call	_InitInterrupt	;wreg free
   534  000A16  0012               	return		;funcret
   535  000A18                     __end_of_Init:
   536                           	opt stack 0
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           
   544 ;; *************** function _InitVar *****************
   545 ;; Defined at:
   546 ;;		line 88 in file "init.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;  c               1    0[BANK0 ] unsigned char 
   551 ;; Return value:  Size  Location     Type
   552 ;;		None               void
   553 ;; Registers used:
   554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   560 ;;      Params:         0       0       0       0
   561 ;;      Locals:         0       1       0       0
   562 ;;      Temps:          0       0       0       0
   563 ;;      Totals:         0       1       0       0
   564 ;;Total ram usage:        1 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; Hardware stack levels required when called:    5
   567 ;; This function calls:
   568 ;;		Nothing
   569 ;; This function is called by:
   570 ;;		_Init
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text2
   575  000980                     __ptext2:
   576                           	opt stack 0
   577  000980                     _InitVar:
   578                           	opt stack 24
   579                           
   580                           ;init.c: 89: for(unsigned char c = 0; c < 10; c++) {
   581                           
   582                           ;incstack = 0
   583  000980  0E00               	movlw	0
   584  000982  0100               	movlb	0	; () banked
   585  000984  6F6A               	movwf	InitVar@c& (0+255),b
   586  000986                     l1644:
   587                           
   588                           ; BSR set to: 0
   589  000986  0E09               	movlw	9
   590  000988  0100               	movlb	0	; () banked
   591  00098A  656A               	cpfsgt	InitVar@c& (0+255),b
   592  00098C  D001               	goto	l1648
   593  00098E  0012               	return	
   594  000990                     l1648:
   595                           
   596                           ; BSR set to: 0
   597                           ;init.c: 90: Marker[c] = 0;
   598  000990  0100               	movlb	0	; () banked
   599  000992  516A               	movf	InitVar@c& (0+255),w,b
   600  000994  0D01               	mullw	1
   601  000996  0E60               	movlw	low _Marker
   602  000998  24F3               	addwf	prodl,w,c
   603  00099A  6ED9               	movwf	fsr2l,c
   604  00099C  0E00               	movlw	high _Marker
   605  00099E  20F4               	addwfc	prodh,w,c
   606  0009A0  6EDA               	movwf	fsr2h,c
   607  0009A2  0E00               	movlw	0
   608  0009A4  6EDF               	movwf	indf2,c
   609                           
   610                           ; BSR set to: 0
   611  0009A6  0100               	movlb	0	; () banked
   612  0009A8  2B6A               	incf	InitVar@c& (0+255),f,b
   613  0009AA  D7ED               	goto	l1644
   614  0009AC                     __end_of_InitVar:
   615                           	opt stack 0
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           prodh	equ	0xFF4
   621                           prodl	equ	0xFF3
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           indf2	equ	0xFDF
   625                           fsr2h	equ	0xFDA
   626                           fsr2l	equ	0xFD9
   627                           
   628 ;; *************** function _InitTris *****************
   629 ;; Defined at:
   630 ;;		line 24 in file "init.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;		None               void
   637 ;; Registers used:
   638 ;;		wreg, status,2
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   644 ;;      Params:         0       0       0       0
   645 ;;      Locals:         0       0       0       0
   646 ;;      Temps:          0       0       0       0
   647 ;;      Totals:         0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    5
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_Init
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text3
   659  000A76                     __ptext3:
   660                           	opt stack 0
   661  000A76                     _InitTris:
   662                           	opt stack 24
   663                           
   664                           ;init.c: 25: TRISA = 0b00010101;
   665                           
   666                           ; BSR set to: 0
   667                           ;incstack = 0
   668  000A76  0E15               	movlw	21
   669  000A78  6E92               	movwf	3986,c	;volatile
   670                           
   671                           ;init.c: 26: TRISB = 0b00010001;
   672  000A7A  0E11               	movlw	17
   673  000A7C  6E93               	movwf	3987,c	;volatile
   674                           
   675                           ;init.c: 27: TRISC = 0b00010100;
   676  000A7E  0E14               	movlw	20
   677  000A80  6E94               	movwf	3988,c	;volatile
   678                           
   679                           ;init.c: 28: TRISD = 0b00000101;
   680  000A82  0E05               	movlw	5
   681  000A84  6E95               	movwf	3989,c	;volatile
   682                           
   683                           ;init.c: 29: TRISE = 0b00000101;
   684  000A86  0E05               	movlw	5
   685  000A88  6E96               	movwf	3990,c	;volatile
   686  000A8A  0012               	return		;funcret
   687  000A8C                     __end_of_InitTris:
   688                           	opt stack 0
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           prodh	equ	0xFF4
   694                           prodl	equ	0xFF3
   695                           postinc0	equ	0xFEE
   696                           wreg	equ	0xFE8
   697                           indf2	equ	0xFDF
   698                           fsr2h	equ	0xFDA
   699                           fsr2l	equ	0xFD9
   700                           
   701 ;; *************** function _InitTransmission *****************
   702 ;; Defined at:
   703 ;;		line 44 in file "init.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;		None               void
   710 ;; Registers used:
   711 ;;		wreg, status,2
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   717 ;;      Params:         0       0       0       0
   718 ;;      Locals:         0       0       0       0
   719 ;;      Temps:          0       0       0       0
   720 ;;      Totals:         0       0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; Hardware stack levels required when called:    5
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_Init
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text4
   732  000A5A                     __ptext4:
   733                           	opt stack 0
   734  000A5A                     _InitTransmission:
   735                           	opt stack 24
   736                           
   737                           ;init.c: 46: TXSTA1bits.SYNC = 0;
   738                           
   739                           ;incstack = 0
   740  000A5A  98AC               	bcf	4012,4,c	;volatile
   741                           
   742                           ;init.c: 47: TXSTA1bits.BRGH = 1;
   743  000A5C  84AC               	bsf	4012,2,c	;volatile
   744                           
   745                           ;init.c: 48: BAUDCON1bits.BRG16 = 0;
   746  000A5E  96B8               	bcf	4024,3,c	;volatile
   747                           
   748                           ;init.c: 49: SPBRG1 = 25;
   749  000A60  0E19               	movlw	25
   750  000A62  6EAF               	movwf	4015,c	;volatile
   751                           
   752                           ;init.c: 50: TRISCbits.RC6 = 1;
   753  000A64  8C94               	bsf	3988,6,c	;volatile
   754                           
   755                           ;init.c: 51: TRISCbits.RC7 = 1;
   756  000A66  8E94               	bsf	3988,7,c	;volatile
   757                           
   758                           ;init.c: 52: RCSTA1bits.SPEN = 1;
   759  000A68  8EAB               	bsf	4011,7,c	;volatile
   760                           
   761                           ;init.c: 53: TXSTA1bits.TX9 = 1;
   762  000A6A  8CAC               	bsf	4012,6,c	;volatile
   763                           
   764                           ;init.c: 54: TXSTA1bits.TXEN = 1;
   765  000A6C  8AAC               	bsf	4012,5,c	;volatile
   766                           
   767                           ;init.c: 55: RCSTA1bits.RC9 = 1;
   768  000A6E  8CAB               	bsf	4011,6,c	;volatile
   769                           
   770                           ;init.c: 56: RCSTA1bits.CREN = 1;
   771  000A70  88AB               	bsf	4011,4,c	;volatile
   772                           
   773                           ;init.c: 57: TRISCbits.RC6 = 0;
   774  000A72  9C94               	bcf	3988,6,c	;volatile
   775  000A74  0012               	return		;funcret
   776  000A76                     __end_of_InitTransmission:
   777                           	opt stack 0
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           prodh	equ	0xFF4
   783                           prodl	equ	0xFF3
   784                           postinc0	equ	0xFEE
   785                           wreg	equ	0xFE8
   786                           indf2	equ	0xFDF
   787                           fsr2h	equ	0xFDA
   788                           fsr2l	equ	0xFD9
   789                           
   790 ;; *************** function _InitPort *****************
   791 ;; Defined at:
   792 ;;		line 16 in file "init.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;		None               void
   799 ;; Registers used:
   800 ;;		wreg, status,2
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   806 ;;      Params:         0       0       0       0
   807 ;;      Locals:         0       0       0       0
   808 ;;      Temps:          0       0       0       0
   809 ;;      Totals:         0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    5
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_Init
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text5
   821  000A8C                     __ptext5:
   822                           	opt stack 0
   823  000A8C                     _InitPort:
   824                           	opt stack 24
   825                           
   826                           ;init.c: 17: PORTA = 0b00000000;
   827                           
   828                           ;incstack = 0
   829  000A8C  0E00               	movlw	0
   830  000A8E  6E80               	movwf	3968,c	;volatile
   831                           
   832                           ;init.c: 18: PORTB = 0b00000000;
   833  000A90  0E00               	movlw	0
   834  000A92  6E81               	movwf	3969,c	;volatile
   835                           
   836                           ;init.c: 19: PORTC = 0b00000000;
   837  000A94  0E00               	movlw	0
   838  000A96  6E82               	movwf	3970,c	;volatile
   839                           
   840                           ;init.c: 20: PORTD = 0b00000000;
   841  000A98  0E00               	movlw	0
   842  000A9A  6E83               	movwf	3971,c	;volatile
   843                           
   844                           ;init.c: 21: PORTE = 0b00000000;
   845  000A9C  0E00               	movlw	0
   846  000A9E  6E84               	movwf	3972,c	;volatile
   847  000AA0  0012               	return		;funcret
   848  000AA2                     __end_of_InitPort:
   849                           	opt stack 0
   850                           tblptru	equ	0xFF8
   851                           tblptrh	equ	0xFF7
   852                           tblptrl	equ	0xFF6
   853                           tablat	equ	0xFF5
   854                           prodh	equ	0xFF4
   855                           prodl	equ	0xFF3
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           indf2	equ	0xFDF
   859                           fsr2h	equ	0xFDA
   860                           fsr2l	equ	0xFD9
   861                           
   862 ;; *************** function _InitMiscellaneous *****************
   863 ;; Defined at:
   864 ;;		line 40 in file "init.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;		None               void
   871 ;; Registers used:
   872 ;;		wreg, status,2
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   878 ;;      Params:         0       0       0       0
   879 ;;      Locals:         0       0       0       0
   880 ;;      Temps:          0       0       0       0
   881 ;;      Totals:         0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    5
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_Init
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text6
   893  000AF8                     __ptext6:
   894                           	opt stack 0
   895  000AF8                     _InitMiscellaneous:
   896                           	opt stack 24
   897                           
   898                           ;init.c: 41: OSCCON = 0b01010011;
   899                           
   900                           ;incstack = 0
   901  000AF8  0E53               	movlw	83
   902  000AFA  6ED3               	movwf	4051,c	;volatile
   903  000AFC  0012               	return		;funcret
   904  000AFE                     __end_of_InitMiscellaneous:
   905                           	opt stack 0
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           prodh	equ	0xFF4
   911                           prodl	equ	0xFF3
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           indf2	equ	0xFDF
   915                           fsr2h	equ	0xFDA
   916                           fsr2l	equ	0xFD9
   917                           
   918 ;; *************** function _InitInterrupt *****************
   919 ;; Defined at:
   920 ;;		line 81 in file "init.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;		None               void
   927 ;; Registers used:
   928 ;;		None
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   934 ;;      Params:         0       0       0       0
   935 ;;      Locals:         0       0       0       0
   936 ;;      Temps:          0       0       0       0
   937 ;;      Totals:         0       0       0       0
   938 ;;Total ram usage:        0 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    5
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_Init
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text7
   949  000AEE                     __ptext7:
   950                           	opt stack 0
   951  000AEE                     _InitInterrupt:
   952                           	opt stack 24
   953                           
   954                           ;init.c: 82: INTCONbits.GIE = 1;
   955                           
   956                           ;incstack = 0
   957  000AEE  8EF2               	bsf	intcon,7,c	;volatile
   958                           
   959                           ;init.c: 83: INTCONbits.PEIE = 1;
   960  000AF0  8CF2               	bsf	intcon,6,c	;volatile
   961                           
   962                           ;init.c: 84: PIE1bits.RCIE = 1;
   963  000AF2  8A9D               	bsf	3997,5,c	;volatile
   964                           
   965                           ;init.c: 85: PIE1bits.CCP1IE = 1;
   966  000AF4  849D               	bsf	3997,2,c	;volatile
   967  000AF6  0012               	return		;funcret
   968  000AF8                     __end_of_InitInterrupt:
   969                           	opt stack 0
   970                           tblptru	equ	0xFF8
   971                           tblptrh	equ	0xFF7
   972                           tblptrl	equ	0xFF6
   973                           tablat	equ	0xFF5
   974                           prodh	equ	0xFF4
   975                           prodl	equ	0xFF3
   976                           intcon	equ	0xFF2
   977                           postinc0	equ	0xFEE
   978                           wreg	equ	0xFE8
   979                           indf2	equ	0xFDF
   980                           fsr2h	equ	0xFDA
   981                           fsr2l	equ	0xFD9
   982                           
   983 ;; *************** function _InitAnsel *****************
   984 ;; Defined at:
   985 ;;		line 32 in file "init.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;		None               void
   992 ;; Registers used:
   993 ;;		wreg, status,2
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   999 ;;      Params:         0       0       0       0
  1000 ;;      Locals:         0       0       0       0
  1001 ;;      Temps:          0       0       0       0
  1002 ;;      Totals:         0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    5
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_Init
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text8
  1014  000A3A                     __ptext8:
  1015                           	opt stack 0
  1016  000A3A                     _InitAnsel:
  1017                           	opt stack 24
  1018                           
  1019                           ;init.c: 33: ANSELA = 0b00000000;
  1020                           
  1021                           ;incstack = 0
  1022  000A3A  0E00               	movlw	0
  1023  000A3C  010F               	movlb	15	; () banked
  1024  000A3E  6F38               	movwf	56,b	;volatile
  1025                           
  1026                           ;init.c: 34: ANSELB = 0b00000001;
  1027  000A40  0E01               	movlw	1
  1028  000A42  010F               	movlb	15	; () banked
  1029  000A44  6F39               	movwf	57,b	;volatile
  1030                           
  1031                           ;init.c: 35: ANSELC = 0b00000000;
  1032  000A46  0E00               	movlw	0
  1033  000A48  010F               	movlb	15	; () banked
  1034  000A4A  6F3A               	movwf	58,b	;volatile
  1035                           
  1036                           ;init.c: 36: ANSELD = 0b00000000;
  1037  000A4C  0E00               	movlw	0
  1038  000A4E  010F               	movlb	15	; () banked
  1039  000A50  6F3B               	movwf	59,b	;volatile
  1040                           
  1041                           ;init.c: 37: ANSELE = 0b00000000;
  1042  000A52  0E00               	movlw	0
  1043  000A54  010F               	movlb	15	; () banked
  1044  000A56  6F3C               	movwf	60,b	;volatile
  1045                           
  1046                           ; BSR set to: 15
  1047  000A58  0012               	return		;funcret
  1048  000A5A                     __end_of_InitAnsel:
  1049                           	opt stack 0
  1050                           tblptru	equ	0xFF8
  1051                           tblptrh	equ	0xFF7
  1052                           tblptrl	equ	0xFF6
  1053                           tablat	equ	0xFF5
  1054                           prodh	equ	0xFF4
  1055                           prodl	equ	0xFF3
  1056                           intcon	equ	0xFF2
  1057                           postinc0	equ	0xFEE
  1058                           wreg	equ	0xFE8
  1059                           indf2	equ	0xFDF
  1060                           fsr2h	equ	0xFDA
  1061                           fsr2l	equ	0xFD9
  1062                           
  1063 ;; *************** function _InitADC *****************
  1064 ;; Defined at:
  1065 ;;		line 60 in file "init.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;		None               void
  1072 ;; Registers used:
  1073 ;;		wreg, status,2
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1079 ;;      Params:         0       0       0       0
  1080 ;;      Locals:         0       0       0       0
  1081 ;;      Temps:          0       0       0       0
  1082 ;;      Totals:         0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    5
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_Init
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text9
  1094  0009AC                     __ptext9:
  1095                           	opt stack 0
  1096  0009AC                     _InitADC:
  1097                           	opt stack 24
  1098                           
  1099                           ;init.c: 62: VREFCON0 = 0b10100000;
  1100                           
  1101                           ; BSR set to: 15
  1102                           ;incstack = 0
  1103  0009AC  0EA0               	movlw	160
  1104  0009AE  010F               	movlb	15	; () banked
  1105  0009B0  6F42               	movwf	66,b	;volatile
  1106                           
  1107                           ;init.c: 64: VREFCON1 = 0b10001000;
  1108  0009B2  0E88               	movlw	136
  1109  0009B4  010F               	movlb	15	; () banked
  1110  0009B6  6F41               	movwf	65,b	;volatile
  1111                           
  1112                           ; BSR set to: 15
  1113                           ;init.c: 65: VREFCON2bits.DACR = 16;
  1114  0009B8  010F               	movlb	15	; () banked
  1115  0009BA  9140               	bcf	64,0,b	;volatile
  1116  0009BC  9340               	bcf	64,1,b	;volatile
  1117  0009BE  9540               	bcf	64,2,b	;volatile
  1118  0009C0  9740               	bcf	64,3,b	;volatile
  1119  0009C2  8940               	bsf	64,4,b	;volatile
  1120                           
  1121                           ;init.c: 67: ADCON1 = 0b00000000;
  1122  0009C4  0E00               	movlw	0
  1123  0009C6  6EC1               	movwf	4033,c	;volatile
  1124                           
  1125                           ;init.c: 68: ADCON2 = 0b00000011;
  1126  0009C8  0E03               	movlw	3
  1127  0009CA  6EC0               	movwf	4032,c	;volatile
  1128                           
  1129                           ;init.c: 69: ADCON0 = 0b01111001;
  1130  0009CC  0E79               	movlw	121
  1131  0009CE  6EC2               	movwf	4034,c	;volatile
  1132                           
  1133                           ; BSR set to: 15
  1134  0009D0  0012               	return		;funcret
  1135  0009D2                     __end_of_InitADC:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           prodh	equ	0xFF4
  1142                           prodl	equ	0xFF3
  1143                           intcon	equ	0xFF2
  1144                           postinc0	equ	0xFEE
  1145                           wreg	equ	0xFE8
  1146                           indf2	equ	0xFDF
  1147                           fsr2h	equ	0xFDA
  1148                           fsr2l	equ	0xFD9
  1149                           
  1150 ;; *************** function _Check_Ignition *****************
  1151 ;; Defined at:
  1152 ;;		line 156 in file "ignition.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  c               1    2[BANK0 ] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;		None               void
  1159 ;; Registers used:
  1160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1166 ;;      Params:         0       0       0       0
  1167 ;;      Locals:         0       1       0       0
  1168 ;;      Temps:          0       1       0       0
  1169 ;;      Totals:         0       2       0       0
  1170 ;;Total ram usage:        2 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    6
  1173 ;; This function calls:
  1174 ;;		_Disable_Port
  1175 ;;		_Ignite_Port
  1176 ;;		_On_Timer
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text10
  1183  000904                     __ptext10:
  1184                           	opt stack 0
  1185  000904                     _Check_Ignition:
  1186                           	opt stack 24
  1187                           
  1188                           ;ignition.c: 157: for(unsigned char c = 0; c < 10; c++) {
  1189                           
  1190                           ; BSR set to: 15
  1191                           ;incstack = 0
  1192  000904  0E00               	movlw	0
  1193  000906  0100               	movlb	0	; () banked
  1194  000908  6F6C               	movwf	Check_Ignition@c& (0+255),b
  1195  00090A                     l1748:
  1196                           
  1197                           ; BSR set to: 0
  1198  00090A  0E09               	movlw	9
  1199  00090C  0100               	movlb	0	; () banked
  1200  00090E  656C               	cpfsgt	Check_Ignition@c& (0+255),b
  1201  000910  D001               	goto	l1752
  1202  000912  0012               	return	
  1203  000914                     l1752:
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;ignition.c: 158: if(Marker[c] == 1) {
  1207  000914  0100               	movlb	0	; () banked
  1208  000916  516C               	movf	Check_Ignition@c& (0+255),w,b
  1209  000918  0D01               	mullw	1
  1210  00091A  0E60               	movlw	low _Marker
  1211  00091C  24F3               	addwf	prodl,w,c
  1212  00091E  6ED9               	movwf	fsr2l,c
  1213  000920  0E00               	movlw	high _Marker
  1214  000922  20F4               	addwfc	prodh,w,c
  1215  000924  6EDA               	movwf	fsr2h,c
  1216  000926  04DE               	decf	postinc2,w,c
  1217  000928  A4D8               	btfss	status,2,c
  1218  00092A  D007               	goto	l1758
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;ignition.c: 159: Ignite_Port(c);
  1222  00092C  0100               	movlb	0	; () banked
  1223  00092E  516C               	movf	Check_Ignition@c& (0+255),w,b
  1224  000930  ECDA  F003         	call	_Ignite_Port
  1225                           
  1226                           ;ignition.c: 160: On_Timer();
  1227  000934  EC71  F005         	call	_On_Timer	;wreg free
  1228                           
  1229                           ;ignition.c: 161: } else {
  1230  000938  D004               	goto	l1760
  1231  00093A                     l1758:
  1232                           
  1233                           ;ignition.c: 162: Disable_Port(c);
  1234  00093A  0100               	movlb	0	; () banked
  1235  00093C  516C               	movf	Check_Ignition@c& (0+255),w,b
  1236  00093E  EC12  F004         	call	_Disable_Port
  1237  000942                     l1760:
  1238  000942  0100               	movlb	0	; () banked
  1239  000944  2B6C               	incf	Check_Ignition@c& (0+255),f,b
  1240  000946  D7E1               	goto	l1748
  1241  000948                     __end_of_Check_Ignition:
  1242                           	opt stack 0
  1243                           tblptru	equ	0xFF8
  1244                           tblptrh	equ	0xFF7
  1245                           tblptrl	equ	0xFF6
  1246                           tablat	equ	0xFF5
  1247                           prodh	equ	0xFF4
  1248                           prodl	equ	0xFF3
  1249                           intcon	equ	0xFF2
  1250                           postinc0	equ	0xFEE
  1251                           wreg	equ	0xFE8
  1252                           indf2	equ	0xFDF
  1253                           postinc2	equ	0xFDE
  1254                           fsr2h	equ	0xFDA
  1255                           fsr2l	equ	0xFD9
  1256                           status	equ	0xFD8
  1257                           
  1258 ;; *************** function _On_Timer *****************
  1259 ;; Defined at:
  1260 ;;		line 5 in file "ignition.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;		None               void
  1267 ;; Registers used:
  1268 ;;		wreg, status,2
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1274 ;;      Params:         0       0       0       0
  1275 ;;      Locals:         0       0       0       0
  1276 ;;      Temps:          0       0       0       0
  1277 ;;      Totals:         0       0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    5
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_Check_Ignition
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text11
  1289  000AE2                     __ptext11:
  1290                           	opt stack 0
  1291  000AE2                     _On_Timer:
  1292                           	opt stack 24
  1293                           
  1294                           ;ignition.c: 6: TMR1L = 0;
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;incstack = 0
  1298  000AE2  0E00               	movlw	0
  1299  000AE4  6ECE               	movwf	4046,c	;volatile
  1300                           
  1301                           ;ignition.c: 7: TMR1H = 0;
  1302  000AE6  0E00               	movlw	0
  1303  000AE8  6ECF               	movwf	4047,c	;volatile
  1304                           
  1305                           ;ignition.c: 8: T1CONbits.TMR1ON = 1;
  1306  000AEA  80CD               	bsf	4045,0,c	;volatile
  1307  000AEC  0012               	return		;funcret
  1308  000AEE                     __end_of_On_Timer:
  1309                           	opt stack 0
  1310                           tblptru	equ	0xFF8
  1311                           tblptrh	equ	0xFF7
  1312                           tblptrl	equ	0xFF6
  1313                           tablat	equ	0xFF5
  1314                           prodh	equ	0xFF4
  1315                           prodl	equ	0xFF3
  1316                           intcon	equ	0xFF2
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           indf2	equ	0xFDF
  1320                           postinc2	equ	0xFDE
  1321                           fsr2h	equ	0xFDA
  1322                           fsr2l	equ	0xFD9
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function _Ignite_Port *****************
  1326 ;; Defined at:
  1327 ;;		line 86 in file "ignition.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  ignite_numbe    1    wreg     unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  ignite_numbe    1    0[BANK0 ] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;		None               void
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1341 ;;      Params:         0       0       0       0
  1342 ;;      Locals:         0       1       0       0
  1343 ;;      Temps:          0       0       0       0
  1344 ;;      Totals:         0       1       0       0
  1345 ;;Total ram usage:        1 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    5
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_Check_Ignition
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text12
  1356  0007B4                     __ptext12:
  1357                           	opt stack 0
  1358  0007B4                     _Ignite_Port:
  1359                           	opt stack 24
  1360                           
  1361                           ;incstack = 0
  1362                           ;Ignite_Port@ignite_number stored from wreg
  1363  0007B4  0100               	movlb	0	; () banked
  1364  0007B6  6F6A               	movwf	Ignite_Port@ignite_number& (0+255),b
  1365                           
  1366                           ;ignition.c: 87: switch(ignite_number) {
  1367  0007B8  D014               	goto	l1710
  1368  0007BA                     l300:
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;ignition.c: 89: PORTCbits.RC5 = 1;
  1372  0007BA  8A82               	bsf	3970,5,c	;volatile
  1373                           
  1374                           ;ignition.c: 90: break;
  1375  0007BC  0012               	return	
  1376  0007BE                     l302:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;ignition.c: 92: PORTDbits.RD3 = 1;
  1380  0007BE  8683               	bsf	3971,3,c	;volatile
  1381                           
  1382                           ;ignition.c: 93: break;
  1383  0007C0  0012               	return	
  1384  0007C2                     l303:
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;ignition.c: 95: PORTDbits.RD1 = 1;
  1388  0007C2  8283               	bsf	3971,1,c	;volatile
  1389                           
  1390                           ;ignition.c: 96: break;
  1391  0007C4  0012               	return	
  1392  0007C6                     l304:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;ignition.c: 98: PORTCbits.RC3 = 1;
  1396  0007C6  8682               	bsf	3970,3,c	;volatile
  1397                           
  1398                           ;ignition.c: 99: break;
  1399  0007C8  0012               	return	
  1400  0007CA                     l305:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;ignition.c: 101: PORTCbits.RC1 = 1;
  1404  0007CA  8282               	bsf	3970,1,c	;volatile
  1405                           
  1406                           ;ignition.c: 102: break;
  1407  0007CC  0012               	return	
  1408  0007CE                     l306:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;ignition.c: 104: PORTEbits.RE1 = 1;
  1412  0007CE  8284               	bsf	3972,1,c	;volatile
  1413                           
  1414                           ;ignition.c: 105: break;
  1415  0007D0  0012               	return	
  1416  0007D2                     l307:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;ignition.c: 107: PORTAbits.RA5 = 1;
  1420  0007D2  8A80               	bsf	3968,5,c	;volatile
  1421                           
  1422                           ;ignition.c: 108: break;
  1423  0007D4  0012               	return	
  1424  0007D6                     l308:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;ignition.c: 110: PORTBbits.RB5 = 1;
  1428  0007D6  8A81               	bsf	3969,5,c	;volatile
  1429                           
  1430                           ;ignition.c: 111: break;
  1431  0007D8  0012               	return	
  1432  0007DA                     l309:
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;ignition.c: 113: PORTAbits.RA3 = 1;
  1436  0007DA  8680               	bsf	3968,3,c	;volatile
  1437                           
  1438                           ;ignition.c: 114: break;
  1439  0007DC  0012               	return	
  1440  0007DE                     l310:
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;ignition.c: 116: PORTAbits.RA1 = 1;
  1444  0007DE  8280               	bsf	3968,1,c	;volatile
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;ignition.c: 118: }
  1448                           
  1449                           ;ignition.c: 117: break;
  1450  0007E0  0012               	return	
  1451  0007E2                     l1710:
  1452  0007E2  0100               	movlb	0	; () banked
  1453  0007E4  516A               	movf	Ignite_Port@ignite_number& (0+255),w,b
  1454                           
  1455                           ; Switch size 1, requested type "space"
  1456                           ; Number of cases is 10, Range of values is 0 to 9
  1457                           ; switch strategies available:
  1458                           ; Name         Instructions Cycles
  1459                           ; simple_byte           31    16 (average)
  1460                           ;	Chosen strategy is simple_byte
  1461  0007E6  0A00               	xorlw	0	; case 0
  1462  0007E8  B4D8               	btfsc	status,2,c
  1463  0007EA  D7E7               	goto	l300
  1464  0007EC  0A01               	xorlw	1	; case 1
  1465  0007EE  B4D8               	btfsc	status,2,c
  1466  0007F0  D7E6               	goto	l302
  1467  0007F2  0A03               	xorlw	3	; case 2
  1468  0007F4  B4D8               	btfsc	status,2,c
  1469  0007F6  D7E5               	goto	l303
  1470  0007F8  0A01               	xorlw	1	; case 3
  1471  0007FA  B4D8               	btfsc	status,2,c
  1472  0007FC  D7E4               	goto	l304
  1473  0007FE  0A07               	xorlw	7	; case 4
  1474  000800  B4D8               	btfsc	status,2,c
  1475  000802  D7E3               	goto	l305
  1476  000804  0A01               	xorlw	1	; case 5
  1477  000806  B4D8               	btfsc	status,2,c
  1478  000808  D7E2               	goto	l306
  1479  00080A  0A03               	xorlw	3	; case 6
  1480  00080C  B4D8               	btfsc	status,2,c
  1481  00080E  D7E1               	goto	l307
  1482  000810  0A01               	xorlw	1	; case 7
  1483  000812  B4D8               	btfsc	status,2,c
  1484  000814  D7E0               	goto	l308
  1485  000816  0A0F               	xorlw	15	; case 8
  1486  000818  B4D8               	btfsc	status,2,c
  1487  00081A  D7DF               	goto	l309
  1488  00081C  0A01               	xorlw	1	; case 9
  1489  00081E  A4D8               	btfss	status,2,c
  1490  000820  0012               	return	
  1491  000822  D7DD               	goto	l310
  1492  000824                     __end_of_Ignite_Port:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           prodh	equ	0xFF4
  1499                           prodl	equ	0xFF3
  1500                           intcon	equ	0xFF2
  1501                           postinc0	equ	0xFEE
  1502                           wreg	equ	0xFE8
  1503                           indf2	equ	0xFDF
  1504                           postinc2	equ	0xFDE
  1505                           fsr2h	equ	0xFDA
  1506                           fsr2l	equ	0xFD9
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _Disable_Port *****************
  1510 ;; Defined at:
  1511 ;;		line 121 in file "ignition.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  disable_numb    1    wreg     unsigned char 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  disable_numb    1    0[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;		None               void
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1525 ;;      Params:         0       0       0       0
  1526 ;;      Locals:         0       1       0       0
  1527 ;;      Temps:          0       0       0       0
  1528 ;;      Totals:         0       1       0       0
  1529 ;;Total ram usage:        1 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    5
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_Check_Ignition
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text13
  1540  000824                     __ptext13:
  1541                           	opt stack 0
  1542  000824                     _Disable_Port:
  1543                           	opt stack 24
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;incstack = 0
  1547                           ;Disable_Port@disable_number stored from wreg
  1548  000824  0100               	movlb	0	; () banked
  1549  000826  6F6A               	movwf	Disable_Port@disable_number& (0+255),b
  1550                           
  1551                           ;ignition.c: 122: switch(disable_number) {
  1552  000828  D014               	goto	l1716
  1553  00082A                     l315:
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;ignition.c: 124: PORTCbits.RC5 = 0;
  1557  00082A  9A82               	bcf	3970,5,c	;volatile
  1558                           
  1559                           ;ignition.c: 125: break;
  1560  00082C  0012               	return	
  1561  00082E                     l317:
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;ignition.c: 127: PORTDbits.RD3 = 0;
  1565  00082E  9683               	bcf	3971,3,c	;volatile
  1566                           
  1567                           ;ignition.c: 128: break;
  1568  000830  0012               	return	
  1569  000832                     l318:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;ignition.c: 130: PORTDbits.RD1 = 0;
  1573  000832  9283               	bcf	3971,1,c	;volatile
  1574                           
  1575                           ;ignition.c: 131: break;
  1576  000834  0012               	return	
  1577  000836                     l319:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;ignition.c: 133: PORTCbits.RC3 = 0;
  1581  000836  9682               	bcf	3970,3,c	;volatile
  1582                           
  1583                           ;ignition.c: 134: break;
  1584  000838  0012               	return	
  1585  00083A                     l320:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;ignition.c: 136: PORTCbits.RC1 = 0;
  1589  00083A  9282               	bcf	3970,1,c	;volatile
  1590                           
  1591                           ;ignition.c: 137: break;
  1592  00083C  0012               	return	
  1593  00083E                     l321:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;ignition.c: 139: PORTEbits.RE1 = 0;
  1597  00083E  9284               	bcf	3972,1,c	;volatile
  1598                           
  1599                           ;ignition.c: 140: break;
  1600  000840  0012               	return	
  1601  000842                     l322:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;ignition.c: 142: PORTAbits.RA5 = 0;
  1605  000842  9A80               	bcf	3968,5,c	;volatile
  1606                           
  1607                           ;ignition.c: 143: break;
  1608  000844  0012               	return	
  1609  000846                     l323:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;ignition.c: 145: PORTBbits.RB5 = 0;
  1613  000846  9A81               	bcf	3969,5,c	;volatile
  1614                           
  1615                           ;ignition.c: 146: break;
  1616  000848  0012               	return	
  1617  00084A                     l324:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;ignition.c: 148: PORTAbits.RA3 = 0;
  1621  00084A  9680               	bcf	3968,3,c	;volatile
  1622                           
  1623                           ;ignition.c: 149: break;
  1624  00084C  0012               	return	
  1625  00084E                     l325:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;ignition.c: 151: PORTAbits.RA1 = 0;
  1629  00084E  9280               	bcf	3968,1,c	;volatile
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;ignition.c: 153: }
  1633                           
  1634                           ;ignition.c: 152: break;
  1635  000850  0012               	return	
  1636  000852                     l1716:
  1637  000852  0100               	movlb	0	; () banked
  1638  000854  516A               	movf	Disable_Port@disable_number& (0+255),w,b
  1639                           
  1640                           ; Switch size 1, requested type "space"
  1641                           ; Number of cases is 10, Range of values is 0 to 9
  1642                           ; switch strategies available:
  1643                           ; Name         Instructions Cycles
  1644                           ; simple_byte           31    16 (average)
  1645                           ;	Chosen strategy is simple_byte
  1646  000856  0A00               	xorlw	0	; case 0
  1647  000858  B4D8               	btfsc	status,2,c
  1648  00085A  D7E7               	goto	l315
  1649  00085C  0A01               	xorlw	1	; case 1
  1650  00085E  B4D8               	btfsc	status,2,c
  1651  000860  D7E6               	goto	l317
  1652  000862  0A03               	xorlw	3	; case 2
  1653  000864  B4D8               	btfsc	status,2,c
  1654  000866  D7E5               	goto	l318
  1655  000868  0A01               	xorlw	1	; case 3
  1656  00086A  B4D8               	btfsc	status,2,c
  1657  00086C  D7E4               	goto	l319
  1658  00086E  0A07               	xorlw	7	; case 4
  1659  000870  B4D8               	btfsc	status,2,c
  1660  000872  D7E3               	goto	l320
  1661  000874  0A01               	xorlw	1	; case 5
  1662  000876  B4D8               	btfsc	status,2,c
  1663  000878  D7E2               	goto	l321
  1664  00087A  0A03               	xorlw	3	; case 6
  1665  00087C  B4D8               	btfsc	status,2,c
  1666  00087E  D7E1               	goto	l322
  1667  000880  0A01               	xorlw	1	; case 7
  1668  000882  B4D8               	btfsc	status,2,c
  1669  000884  D7E0               	goto	l323
  1670  000886  0A0F               	xorlw	15	; case 8
  1671  000888  B4D8               	btfsc	status,2,c
  1672  00088A  D7DF               	goto	l324
  1673  00088C  0A01               	xorlw	1	; case 9
  1674  00088E  A4D8               	btfss	status,2,c
  1675  000890  0012               	return	
  1676  000892  D7DD               	goto	l325
  1677  000894                     __end_of_Disable_Port:
  1678                           	opt stack 0
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           prodh	equ	0xFF4
  1684                           prodl	equ	0xFF3
  1685                           intcon	equ	0xFF2
  1686                           postinc0	equ	0xFEE
  1687                           wreg	equ	0xFE8
  1688                           indf2	equ	0xFDF
  1689                           postinc2	equ	0xFDE
  1690                           fsr2h	equ	0xFDA
  1691                           fsr2l	equ	0xFD9
  1692                           status	equ	0xFD8
  1693                           
  1694 ;; *************** function _Isr *****************
  1695 ;; Defined at:
  1696 ;;		line 3 in file "interrupt.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  c               1   68[COMRAM] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;		None               void
  1703 ;; Registers used:
  1704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1710 ;;      Params:         0       0       0       0
  1711 ;;      Locals:         1       0       0       0
  1712 ;;      Temps:         14       0       0       0
  1713 ;;      Totals:        15       0       0       0
  1714 ;;Total ram usage:       15 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    4
  1717 ;; This function calls:
  1718 ;;		_Evaluate_Reception
  1719 ;;		_Receive
  1720 ;;		_Receive_Dump
  1721 ;; This function is called by:
  1722 ;;		Interrupt level 2
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	intcode
  1727  000008                     __pintcode:
  1728                           	opt stack 0
  1729  000008                     _Isr:
  1730                           	opt stack 24
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;incstack = 0
  1734  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1735  00000A  CFFA F037          	movff	pclath,??_Isr
  1736  00000E  CFFB F038          	movff	pclatu,??_Isr+1
  1737  000012  CFE9 F039          	movff	fsr0l,??_Isr+2
  1738  000016  CFEA F03A          	movff	fsr0h,??_Isr+3
  1739  00001A  CFE1 F03B          	movff	fsr1l,??_Isr+4
  1740  00001E  CFE2 F03C          	movff	fsr1h,??_Isr+5
  1741  000022  CFD9 F03D          	movff	fsr2l,??_Isr+6
  1742  000026  CFDA F03E          	movff	fsr2h,??_Isr+7
  1743  00002A  CFF3 F03F          	movff	prodl,??_Isr+8
  1744  00002E  CFF4 F040          	movff	prodh,??_Isr+9
  1745  000032  CFF6 F041          	movff	tblptrl,??_Isr+10
  1746  000036  CFF7 F042          	movff	tblptrh,??_Isr+11
  1747  00003A  CFF8 F043          	movff	tblptru,??_Isr+12
  1748  00003E  CFF5 F044          	movff	tablat,??_Isr+13
  1749                           
  1750                           ;interrupt.c: 4: __nop();
  1751  000042  F000               	nop	
  1752                           
  1753                           ;interrupt.c: 5: if(PIR1bits.RCIF == 1) {
  1754  000044  AA9E               	btfss	3998,5,c	;volatile
  1755  000046  D033               	goto	i2l1822
  1756                           
  1757                           ;interrupt.c: 6: if(RCSTA1bits.RX9D == 1) {
  1758  000048  A0AB               	btfss	4011,0,c	;volatile
  1759  00004A  D016               	goto	i2l388
  1760                           
  1761                           ;interrupt.c: 7: __nop();
  1762  00004C  F000               	nop	
  1763                           
  1764                           ;interrupt.c: 13: receive_counter = 0;
  1765  00004E  0E00               	movlw	0
  1766  000050  6E4A               	movwf	_receive_counter,c
  1767                           
  1768                           ;interrupt.c: 15: received[receive_counter] =
  1769                           ;interrupt.c: 16: Receive();
  1770  000052  504A               	movf	_receive_counter,w,c
  1771  000054  0D01               	mullw	1
  1772  000056  0E46               	movlw	low _received
  1773  000058  24F3               	addwf	prodl,w,c
  1774  00005A  6ED9               	movwf	fsr2l,c
  1775  00005C  0E00               	movlw	high _received
  1776  00005E  20F4               	addwfc	prodh,w,c
  1777  000060  6EDA               	movwf	fsr2h,c
  1778  000062  EC64  F005         	call	_Receive	;wreg free
  1779  000066  6EDF               	movwf	indf2,c
  1780                           
  1781                           ;interrupt.c: 17: receive_counter++;
  1782  000068  2A4A               	incf	_receive_counter,f,c
  1783                           
  1784                           ;interrupt.c: 19: if(received[0] == 0x00) {
  1785  00006A  5046               	movf	_received,w,c
  1786  00006C  A4D8               	btfss	status,2,c
  1787  00006E  D002               	goto	i2l389
  1788                           
  1789                           ;interrupt.c: 20: slave_addressed = 1;
  1790  000070  824B               	bsf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1791                           
  1792                           ;interrupt.c: 21: } else {
  1793  000072  D01D               	goto	i2l1822
  1794  000074                     i2l389:
  1795                           
  1796                           ;interrupt.c: 22: slave_addressed = 0;
  1797  000074  924B               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1798                           
  1799                           ;interrupt.c: 23: }
  1800                           ;interrupt.c: 24: } else if(slave_addressed == 1) {
  1801  000076  D01B               	goto	i2l1822
  1802  000078                     i2l388:
  1803  000078  A24B               	btfss	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1804  00007A  D016               	goto	i2l392
  1805                           
  1806                           ;interrupt.c: 25: __nop();
  1807  00007C  F000               	nop	
  1808                           
  1809                           ;interrupt.c: 26: received[receive_counter] =
  1810                           ;interrupt.c: 27: Receive();
  1811  00007E  504A               	movf	_receive_counter,w,c
  1812  000080  0D01               	mullw	1
  1813  000082  0E46               	movlw	low _received
  1814  000084  24F3               	addwf	prodl,w,c
  1815  000086  6ED9               	movwf	fsr2l,c
  1816  000088  0E00               	movlw	high _received
  1817  00008A  20F4               	addwfc	prodh,w,c
  1818  00008C  6EDA               	movwf	fsr2h,c
  1819  00008E  EC64  F005         	call	_Receive	;wreg free
  1820  000092  6EDF               	movwf	indf2,c
  1821                           
  1822                           ;interrupt.c: 28: receive_counter++;
  1823  000094  2A4A               	incf	_receive_counter,f,c
  1824                           
  1825                           ;interrupt.c: 30: if(receive_counter > 3) {
  1826  000096  0E03               	movlw	3
  1827  000098  644A               	cpfsgt	_receive_counter,c
  1828  00009A  D009               	goto	i2l1822
  1829                           
  1830                           ;interrupt.c: 31: receive_counter = 0;
  1831  00009C  0E00               	movlw	0
  1832  00009E  6E4A               	movwf	_receive_counter,c
  1833                           
  1834                           ;interrupt.c: 32: slave_addressed = 0;
  1835  0000A0  924B               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1836                           
  1837                           ;interrupt.c: 34: Evaluate_Reception();
  1838  0000A2  EC0C  F005         	call	_Evaluate_Reception	;wreg free
  1839                           
  1840                           ;interrupt.c: 35: }
  1841                           ;interrupt.c: 36: } else {
  1842  0000A6  D003               	goto	i2l1822
  1843  0000A8                     i2l392:
  1844                           
  1845                           ;interrupt.c: 37: __nop();
  1846  0000A8  F000               	nop	
  1847                           
  1848                           ;interrupt.c: 38: Receive_Dump();
  1849  0000AA  EC5C  F005         	call	_Receive_Dump	;wreg free
  1850  0000AE                     i2l1822:
  1851                           
  1852                           ;interrupt.c: 39: }
  1853                           ;interrupt.c: 40: }
  1854                           ;interrupt.c: 41: if (PIR1bits.CCP1IF == 1) {
  1855  0000AE  A49E               	btfss	3998,2,c	;volatile
  1856  0000B0  D018               	goto	i2l398
  1857                           
  1858                           ;interrupt.c: 42: PIR1bits.CCP1IF = 0;
  1859  0000B2  949E               	bcf	3998,2,c	;volatile
  1860                           
  1861                           ;interrupt.c: 43: T1CONbits.TMR1ON = 0;
  1862  0000B4  90CD               	bcf	4045,0,c	;volatile
  1863                           
  1864                           ;interrupt.c: 44: TMR1H = 0;
  1865  0000B6  0E00               	movlw	0
  1866  0000B8  6ECF               	movwf	4047,c	;volatile
  1867                           
  1868                           ;interrupt.c: 45: TMR1L = 0;
  1869  0000BA  0E00               	movlw	0
  1870  0000BC  6ECE               	movwf	4046,c	;volatile
  1871                           
  1872                           ;interrupt.c: 46: for (unsigned char c = 0; c < 10; c++) {
  1873  0000BE  0E00               	movlw	0
  1874  0000C0  6E45               	movwf	Isr@c,c
  1875  0000C2                     i2l1828:
  1876  0000C2  0E09               	movlw	9
  1877  0000C4  6445               	cpfsgt	Isr@c,c
  1878  0000C6  D001               	goto	i2l1832
  1879  0000C8  D00C               	goto	i2l398
  1880  0000CA                     i2l1832:
  1881                           
  1882                           ;interrupt.c: 47: Marker[c] = 0;
  1883  0000CA  5045               	movf	Isr@c,w,c
  1884  0000CC  0D01               	mullw	1
  1885  0000CE  0E60               	movlw	low _Marker
  1886  0000D0  24F3               	addwf	prodl,w,c
  1887  0000D2  6ED9               	movwf	fsr2l,c
  1888  0000D4  0E00               	movlw	high _Marker
  1889  0000D6  20F4               	addwfc	prodh,w,c
  1890  0000D8  6EDA               	movwf	fsr2h,c
  1891  0000DA  0E00               	movlw	0
  1892  0000DC  6EDF               	movwf	indf2,c
  1893  0000DE  2A45               	incf	Isr@c,f,c
  1894  0000E0  D7F0               	goto	i2l1828
  1895  0000E2                     i2l398:
  1896  0000E2  C044  FFF5         	movff	??_Isr+13,tablat
  1897  0000E6  C043  FFF8         	movff	??_Isr+12,tblptru
  1898  0000EA  C042  FFF7         	movff	??_Isr+11,tblptrh
  1899  0000EE  C041  FFF6         	movff	??_Isr+10,tblptrl
  1900  0000F2  C040  FFF4         	movff	??_Isr+9,prodh
  1901  0000F6  C03F  FFF3         	movff	??_Isr+8,prodl
  1902  0000FA  C03E  FFDA         	movff	??_Isr+7,fsr2h
  1903  0000FE  C03D  FFD9         	movff	??_Isr+6,fsr2l
  1904  000102  C03C  FFE2         	movff	??_Isr+5,fsr1h
  1905  000106  C03B  FFE1         	movff	??_Isr+4,fsr1l
  1906  00010A  C03A  FFEA         	movff	??_Isr+3,fsr0h
  1907  00010E  C039  FFE9         	movff	??_Isr+2,fsr0l
  1908  000112  C038  FFFB         	movff	??_Isr+1,pclatu
  1909  000116  C037  FFFA         	movff	??_Isr,pclath
  1910  00011A  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1911  00011C  0011               	retfie		f
  1912  00011E                     __end_of_Isr:
  1913                           	opt stack 0
  1914                           pclatu	equ	0xFFB
  1915                           pclath	equ	0xFFA
  1916                           tblptru	equ	0xFF8
  1917                           tblptrh	equ	0xFF7
  1918                           tblptrl	equ	0xFF6
  1919                           tablat	equ	0xFF5
  1920                           prodh	equ	0xFF4
  1921                           prodl	equ	0xFF3
  1922                           intcon	equ	0xFF2
  1923                           postinc0	equ	0xFEE
  1924                           fsr0h	equ	0xFEA
  1925                           fsr0l	equ	0xFE9
  1926                           wreg	equ	0xFE8
  1927                           fsr1h	equ	0xFE2
  1928                           fsr1l	equ	0xFE1
  1929                           indf2	equ	0xFDF
  1930                           postinc2	equ	0xFDE
  1931                           fsr2h	equ	0xFDA
  1932                           fsr2l	equ	0xFD9
  1933                           status	equ	0xFD8
  1934                           
  1935 ;; *************** function _Receive_Dump *****************
  1936 ;; Defined at:
  1937 ;;		line 59 in file "communication.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;		None
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  dump            1    0[COMRAM] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;		None               void
  1944 ;; Registers used:
  1945 ;;		None
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1951 ;;      Params:         0       0       0       0
  1952 ;;      Locals:         1       0       0       0
  1953 ;;      Temps:          0       0       0       0
  1954 ;;      Totals:         1       0       0       0
  1955 ;;Total ram usage:        1 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_Isr
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text15
  1965  000AB8                     __ptext15:
  1966                           	opt stack 0
  1967  000AB8                     _Receive_Dump:
  1968                           	opt stack 27
  1969                           
  1970                           ;communication.c: 60: unsigned char dump;
  1971                           ;communication.c: 61: if(RCSTA1bits.OERR == 1) {
  1972                           
  1973                           ;incstack = 0
  1974  000AB8  A2AB               	btfss	4011,1,c	;volatile
  1975  000ABA  D003               	goto	i2l83
  1976                           
  1977                           ;communication.c: 62: RCSTA1bits.CREN = 0;
  1978  000ABC  98AB               	bcf	4011,4,c	;volatile
  1979                           
  1980                           ;communication.c: 63: RCSTA1bits.CREN = 1;
  1981  000ABE  88AB               	bsf	4011,4,c	;volatile
  1982                           
  1983                           ;communication.c: 64: overrun = 1;
  1984  000AC0  804B               	bsf	_overrun/(0+8),_overrun& (0+7),c
  1985  000AC2                     i2l83:
  1986                           
  1987                           ;communication.c: 65: }
  1988                           ;communication.c: 66: dump = RCREG1;
  1989  000AC2  CFAE F001          	movff	4014,Receive_Dump@dump	;volatile
  1990  000AC6  0012               	return		;funcret
  1991  000AC8                     __end_of_Receive_Dump:
  1992                           	opt stack 0
  1993                           pclatu	equ	0xFFB
  1994                           pclath	equ	0xFFA
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           prodh	equ	0xFF4
  2000                           prodl	equ	0xFF3
  2001                           intcon	equ	0xFF2
  2002                           postinc0	equ	0xFEE
  2003                           fsr0h	equ	0xFEA
  2004                           fsr0l	equ	0xFE9
  2005                           wreg	equ	0xFE8
  2006                           fsr1h	equ	0xFE2
  2007                           fsr1l	equ	0xFE1
  2008                           indf2	equ	0xFDF
  2009                           postinc2	equ	0xFDE
  2010                           fsr2h	equ	0xFDA
  2011                           fsr2l	equ	0xFD9
  2012                           status	equ	0xFD8
  2013                           
  2014 ;; *************** function _Receive *****************
  2015 ;; Defined at:
  2016 ;;		line 50 in file "communication.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      unsigned char 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2030 ;;      Params:         0       0       0       0
  2031 ;;      Locals:         0       0       0       0
  2032 ;;      Temps:          0       0       0       0
  2033 ;;      Totals:         0       0       0       0
  2034 ;;Total ram usage:        0 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_Isr
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text16
  2044  000AC8                     __ptext16:
  2045                           	opt stack 0
  2046  000AC8                     _Receive:
  2047                           	opt stack 27
  2048                           
  2049                           ;communication.c: 51: if(RCSTA1bits.OERR == 1) {
  2050                           
  2051                           ;incstack = 0
  2052  000AC8  A2AB               	btfss	4011,1,c	;volatile
  2053  000ACA  D003               	goto	i2l1768
  2054                           
  2055                           ;communication.c: 52: RCSTA1bits.CREN = 0;
  2056  000ACC  98AB               	bcf	4011,4,c	;volatile
  2057                           
  2058                           ;communication.c: 53: RCSTA1bits.CREN = 1;
  2059  000ACE  88AB               	bsf	4011,4,c	;volatile
  2060                           
  2061                           ;communication.c: 54: overrun = 1;
  2062  000AD0  804B               	bsf	_overrun/(0+8),_overrun& (0+7),c
  2063  000AD2                     i2l1768:
  2064                           
  2065                           ;communication.c: 55: }
  2066                           ;communication.c: 56: return (RCREG1);
  2067  000AD2  50AE               	movf	4014,w,c	;volatile
  2068  000AD4  0012               	return	
  2069  000AD6                     __end_of_Receive:
  2070                           	opt stack 0
  2071                           pclatu	equ	0xFFB
  2072                           pclath	equ	0xFFA
  2073                           tblptru	equ	0xFF8
  2074                           tblptrh	equ	0xFF7
  2075                           tblptrl	equ	0xFF6
  2076                           tablat	equ	0xFF5
  2077                           prodh	equ	0xFF4
  2078                           prodl	equ	0xFF3
  2079                           intcon	equ	0xFF2
  2080                           postinc0	equ	0xFEE
  2081                           fsr0h	equ	0xFEA
  2082                           fsr0l	equ	0xFE9
  2083                           wreg	equ	0xFE8
  2084                           fsr1h	equ	0xFE2
  2085                           fsr1l	equ	0xFE1
  2086                           indf2	equ	0xFDF
  2087                           postinc2	equ	0xFDE
  2088                           fsr2h	equ	0xFDA
  2089                           fsr2l	equ	0xFD9
  2090                           status	equ	0xFD8
  2091                           
  2092 ;; *************** function _Evaluate_Reception *****************
  2093 ;; Defined at:
  2094 ;;		line 200 in file "ignition.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;		None               void
  2101 ;; Registers used:
  2102 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2108 ;;      Params:         0       0       0       0
  2109 ;;      Locals:         0       0       0       0
  2110 ;;      Temps:          0       0       0       0
  2111 ;;      Totals:         0       0       0       0
  2112 ;;Total ram usage:        0 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    3
  2115 ;; This function calls:
  2116 ;;		_Check_Power
  2117 ;;		_Mark_Ignite
  2118 ;;		_Test_Port
  2119 ;; This function is called by:
  2120 ;;		_Isr
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text17
  2125  000A18                     __ptext17:
  2126                           	opt stack 0
  2127  000A18                     _Evaluate_Reception:
  2128                           	opt stack 24
  2129                           
  2130                           ;ignition.c: 206: __nop();
  2131                           
  2132                           ;incstack = 0
  2133  000A18  F000               	nop	
  2134                           
  2135                           ;ignition.c: 207: if (received[2] == 'T') {
  2136  000A1A  0E54               	movlw	84
  2137  000A1C  1848               	xorwf	_received+2,w,c
  2138  000A1E  A4D8               	btfss	status,2,c
  2139  000A20  D005               	goto	i2l1782
  2140                           
  2141                           ;ignition.c: 208: Check_Power();
  2142  000A22  ECA2  F001         	call	_Check_Power	;wreg free
  2143                           
  2144                           ;ignition.c: 209: Test_Port();
  2145  000A26  EC91  F000         	call	_Test_Port	;wreg free
  2146                           
  2147                           ;ignition.c: 210: } else if (received[2] == 'I') {
  2148  000A2A  0012               	return	
  2149  000A2C                     i2l1782:
  2150  000A2C  0E49               	movlw	73
  2151  000A2E  1848               	xorwf	_received+2,w,c
  2152  000A30  A4D8               	btfss	status,2,c
  2153  000A32  0012               	return	
  2154                           
  2155                           ;ignition.c: 211: Mark_Ignite();
  2156  000A34  EC51  F005         	call	_Mark_Ignite	;wreg free
  2157  000A38  0012               	return	
  2158  000A3A                     __end_of_Evaluate_Reception:
  2159                           	opt stack 0
  2160                           pclatu	equ	0xFFB
  2161                           pclath	equ	0xFFA
  2162                           tblptru	equ	0xFF8
  2163                           tblptrh	equ	0xFF7
  2164                           tblptrl	equ	0xFF6
  2165                           tablat	equ	0xFF5
  2166                           prodh	equ	0xFF4
  2167                           prodl	equ	0xFF3
  2168                           intcon	equ	0xFF2
  2169                           postinc0	equ	0xFEE
  2170                           fsr0h	equ	0xFEA
  2171                           fsr0l	equ	0xFE9
  2172                           wreg	equ	0xFE8
  2173                           fsr1h	equ	0xFE2
  2174                           fsr1l	equ	0xFE1
  2175                           indf2	equ	0xFDF
  2176                           postinc2	equ	0xFDE
  2177                           fsr2h	equ	0xFDA
  2178                           fsr2l	equ	0xFD9
  2179                           status	equ	0xFD8
  2180                           
  2181 ;; *************** function _Test_Port *****************
  2182 ;; Defined at:
  2183 ;;		line 11 in file "ignition.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;		None               void
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2197 ;;      Params:         0       0       0       0
  2198 ;;      Locals:         0       0       0       0
  2199 ;;      Temps:          0       0       0       0
  2200 ;;      Totals:         0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    1
  2204 ;; This function calls:
  2205 ;;		_Transmit
  2206 ;; This function is called by:
  2207 ;;		_Evaluate_Reception
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text18
  2212  000122                     __ptext18:
  2213                           	opt stack 0
  2214  000122                     _Test_Port:
  2215                           	opt stack 25
  2216                           
  2217                           ;ignition.c: 12: switch(received[3]) {
  2218                           
  2219                           ;incstack = 0
  2220  000122  D0F0               	goto	i2l1704
  2221  000124                     i2l255:
  2222                           
  2223                           ;ignition.c: 14: if(PORTCbits.RC4 == 1) {
  2224  000124  A882               	btfss	3970,4,c	;volatile
  2225  000126  D00A               	goto	i2l256
  2226                           
  2227                           ;ignition.c: 15: Transmit(0xAA, 'T', 0, '1');
  2228  000128  0E54               	movlw	84
  2229  00012A  6E01               	movwf	Transmit@operation,c
  2230  00012C  0E00               	movlw	0
  2231  00012E  6E02               	movwf	Transmit@port,c
  2232  000130  0E31               	movlw	49
  2233  000132  6E03               	movwf	Transmit@con_status,c
  2234  000134  0EAA               	movlw	170
  2235  000136  EC4A  F004         	call	_Transmit
  2236                           
  2237                           ;ignition.c: 16: }else if(PORTCbits.RC4 == 0) {
  2238  00013A  0012               	return	
  2239  00013C                     i2l256:
  2240  00013C  B882               	btfsc	3970,4,c	;volatile
  2241  00013E  0012               	return	
  2242                           
  2243                           ;ignition.c: 17: Transmit(0xAA, 'T', 0, '0');
  2244  000140  0E54               	movlw	84
  2245  000142  6E01               	movwf	Transmit@operation,c
  2246  000144  0E00               	movlw	0
  2247  000146  6E02               	movwf	Transmit@port,c
  2248  000148  0E30               	movlw	48
  2249  00014A  6E03               	movwf	Transmit@con_status,c
  2250  00014C  0EAA               	movlw	170
  2251  00014E  EC4A  F004         	call	_Transmit
  2252                           
  2253                           ;ignition.c: 18: }
  2254                           ;ignition.c: 19: break;
  2255  000152  0012               	return	
  2256  000154                     i2l260:
  2257                           
  2258                           ;ignition.c: 21: if(PORTDbits.RD2 == 1) {
  2259  000154  A483               	btfss	3971,2,c	;volatile
  2260  000156  D00A               	goto	i2l261
  2261                           
  2262                           ;ignition.c: 22: Transmit(0xAA, 'T', 1, '1');
  2263  000158  0E54               	movlw	84
  2264  00015A  6E01               	movwf	Transmit@operation,c
  2265  00015C  0E01               	movlw	1
  2266  00015E  6E02               	movwf	Transmit@port,c
  2267  000160  0E31               	movlw	49
  2268  000162  6E03               	movwf	Transmit@con_status,c
  2269  000164  0EAA               	movlw	170
  2270  000166  EC4A  F004         	call	_Transmit
  2271                           
  2272                           ;ignition.c: 23: }else if(PORTCbits.RC4 == 0) {
  2273  00016A  0012               	return	
  2274  00016C                     i2l261:
  2275  00016C  B882               	btfsc	3970,4,c	;volatile
  2276  00016E  0012               	return	
  2277                           
  2278                           ;ignition.c: 24: Transmit(0xAA, 'T', 1, '0');
  2279  000170  0E54               	movlw	84
  2280  000172  6E01               	movwf	Transmit@operation,c
  2281  000174  0E01               	movlw	1
  2282  000176  6E02               	movwf	Transmit@port,c
  2283  000178  0E30               	movlw	48
  2284  00017A  6E03               	movwf	Transmit@con_status,c
  2285  00017C  0EAA               	movlw	170
  2286  00017E  EC4A  F004         	call	_Transmit
  2287                           
  2288                           ;ignition.c: 25: }
  2289                           ;ignition.c: 26: break;
  2290  000182  0012               	return	
  2291  000184                     i2l264:
  2292                           
  2293                           ;ignition.c: 28: if(PORTDbits.RD0 == 1) {
  2294  000184  A083               	btfss	3971,0,c	;volatile
  2295  000186  D00A               	goto	i2l265
  2296                           
  2297                           ;ignition.c: 29: Transmit(0xAA, 'T', 2, '1');
  2298  000188  0E54               	movlw	84
  2299  00018A  6E01               	movwf	Transmit@operation,c
  2300  00018C  0E02               	movlw	2
  2301  00018E  6E02               	movwf	Transmit@port,c
  2302  000190  0E31               	movlw	49
  2303  000192  6E03               	movwf	Transmit@con_status,c
  2304  000194  0EAA               	movlw	170
  2305  000196  EC4A  F004         	call	_Transmit
  2306                           
  2307                           ;ignition.c: 30: }else if(PORTCbits.RC4 == 0) {
  2308  00019A  0012               	return	
  2309  00019C                     i2l265:
  2310  00019C  B882               	btfsc	3970,4,c	;volatile
  2311  00019E  0012               	return	
  2312                           
  2313                           ;ignition.c: 31: Transmit(0xAA, 'T', 2, '0');
  2314  0001A0  0E54               	movlw	84
  2315  0001A2  6E01               	movwf	Transmit@operation,c
  2316  0001A4  0E02               	movlw	2
  2317  0001A6  6E02               	movwf	Transmit@port,c
  2318  0001A8  0E30               	movlw	48
  2319  0001AA  6E03               	movwf	Transmit@con_status,c
  2320  0001AC  0EAA               	movlw	170
  2321  0001AE  EC4A  F004         	call	_Transmit
  2322                           
  2323                           ;ignition.c: 32: }
  2324                           ;ignition.c: 33: break;
  2325  0001B2  0012               	return	
  2326  0001B4                     i2l268:
  2327                           
  2328                           ;ignition.c: 35: if(PORTCbits.RC2 == 1) {
  2329  0001B4  A482               	btfss	3970,2,c	;volatile
  2330  0001B6  D00A               	goto	i2l269
  2331                           
  2332                           ;ignition.c: 36: Transmit(0xAA, 'T', 3, '1');
  2333  0001B8  0E54               	movlw	84
  2334  0001BA  6E01               	movwf	Transmit@operation,c
  2335  0001BC  0E03               	movlw	3
  2336  0001BE  6E02               	movwf	Transmit@port,c
  2337  0001C0  0E31               	movlw	49
  2338  0001C2  6E03               	movwf	Transmit@con_status,c
  2339  0001C4  0EAA               	movlw	170
  2340  0001C6  EC4A  F004         	call	_Transmit
  2341                           
  2342                           ;ignition.c: 37: }else if(PORTCbits.RC4 == 0) {
  2343  0001CA  0012               	return	
  2344  0001CC                     i2l269:
  2345  0001CC  B882               	btfsc	3970,4,c	;volatile
  2346  0001CE  0012               	return	
  2347                           
  2348                           ;ignition.c: 38: Transmit(0xAA, 'T', 3, '0');
  2349  0001D0  0E54               	movlw	84
  2350  0001D2  6E01               	movwf	Transmit@operation,c
  2351  0001D4  0E03               	movlw	3
  2352  0001D6  6E02               	movwf	Transmit@port,c
  2353  0001D8  0E30               	movlw	48
  2354  0001DA  6E03               	movwf	Transmit@con_status,c
  2355  0001DC  0EAA               	movlw	170
  2356  0001DE  EC4A  F004         	call	_Transmit
  2357                           
  2358                           ;ignition.c: 39: }
  2359                           ;ignition.c: 40: break;
  2360  0001E2  0012               	return	
  2361  0001E4                     i2l272:
  2362                           
  2363                           ;ignition.c: 42: if(PORTEbits.RE2 == 1) {
  2364  0001E4  A484               	btfss	3972,2,c	;volatile
  2365  0001E6  D00A               	goto	i2l273
  2366                           
  2367                           ;ignition.c: 43: Transmit(0xAA, 'T', 4, '1');
  2368  0001E8  0E54               	movlw	84
  2369  0001EA  6E01               	movwf	Transmit@operation,c
  2370  0001EC  0E04               	movlw	4
  2371  0001EE  6E02               	movwf	Transmit@port,c
  2372  0001F0  0E31               	movlw	49
  2373  0001F2  6E03               	movwf	Transmit@con_status,c
  2374  0001F4  0EAA               	movlw	170
  2375  0001F6  EC4A  F004         	call	_Transmit
  2376                           
  2377                           ;ignition.c: 44: }else if(PORTCbits.RC4 == 0) {
  2378  0001FA  0012               	return	
  2379  0001FC                     i2l273:
  2380  0001FC  B882               	btfsc	3970,4,c	;volatile
  2381  0001FE  0012               	return	
  2382                           
  2383                           ;ignition.c: 45: Transmit(0xAA, 'T', 4, '0');
  2384  000200  0E54               	movlw	84
  2385  000202  6E01               	movwf	Transmit@operation,c
  2386  000204  0E04               	movlw	4
  2387  000206  6E02               	movwf	Transmit@port,c
  2388  000208  0E30               	movlw	48
  2389  00020A  6E03               	movwf	Transmit@con_status,c
  2390  00020C  0EAA               	movlw	170
  2391  00020E  EC4A  F004         	call	_Transmit
  2392                           
  2393                           ;ignition.c: 46: }
  2394                           ;ignition.c: 47: break;
  2395  000212  0012               	return	
  2396  000214                     i2l276:
  2397                           
  2398                           ;ignition.c: 49: if(PORTEbits.RE0 == 1) {
  2399  000214  A084               	btfss	3972,0,c	;volatile
  2400  000216  D00A               	goto	i2l277
  2401                           
  2402                           ;ignition.c: 50: Transmit(0xAA, 'T', 5, '1');
  2403  000218  0E54               	movlw	84
  2404  00021A  6E01               	movwf	Transmit@operation,c
  2405  00021C  0E05               	movlw	5
  2406  00021E  6E02               	movwf	Transmit@port,c
  2407  000220  0E31               	movlw	49
  2408  000222  6E03               	movwf	Transmit@con_status,c
  2409  000224  0EAA               	movlw	170
  2410  000226  EC4A  F004         	call	_Transmit
  2411                           
  2412                           ;ignition.c: 51: }else if(PORTCbits.RC4 == 0) {
  2413  00022A  0012               	return	
  2414  00022C                     i2l277:
  2415  00022C  B882               	btfsc	3970,4,c	;volatile
  2416  00022E  0012               	return	
  2417                           
  2418                           ;ignition.c: 52: Transmit(0xAA, 'T', 5, '0');
  2419  000230  0E54               	movlw	84
  2420  000232  6E01               	movwf	Transmit@operation,c
  2421  000234  0E05               	movlw	5
  2422  000236  6E02               	movwf	Transmit@port,c
  2423  000238  0E30               	movlw	48
  2424  00023A  6E03               	movwf	Transmit@con_status,c
  2425  00023C  0EAA               	movlw	170
  2426  00023E  EC4A  F004         	call	_Transmit
  2427                           
  2428                           ;ignition.c: 53: }
  2429                           ;ignition.c: 54: break;
  2430  000242  0012               	return	
  2431  000244                     i2l280:
  2432                           
  2433                           ;ignition.c: 56: if(PORTAbits.RA4 == 1) {
  2434  000244  A880               	btfss	3968,4,c	;volatile
  2435  000246  D00A               	goto	i2l281
  2436                           
  2437                           ;ignition.c: 57: Transmit(0xAA, 'T', 6, '1');
  2438  000248  0E54               	movlw	84
  2439  00024A  6E01               	movwf	Transmit@operation,c
  2440  00024C  0E06               	movlw	6
  2441  00024E  6E02               	movwf	Transmit@port,c
  2442  000250  0E31               	movlw	49
  2443  000252  6E03               	movwf	Transmit@con_status,c
  2444  000254  0EAA               	movlw	170
  2445  000256  EC4A  F004         	call	_Transmit
  2446                           
  2447                           ;ignition.c: 58: }else if(PORTCbits.RC4 == 0) {
  2448  00025A  0012               	return	
  2449  00025C                     i2l281:
  2450  00025C  B882               	btfsc	3970,4,c	;volatile
  2451  00025E  0012               	return	
  2452                           
  2453                           ;ignition.c: 59: Transmit(0xAA, 'T', 6, '0');
  2454  000260  0E54               	movlw	84
  2455  000262  6E01               	movwf	Transmit@operation,c
  2456  000264  0E06               	movlw	6
  2457  000266  6E02               	movwf	Transmit@port,c
  2458  000268  0E30               	movlw	48
  2459  00026A  6E03               	movwf	Transmit@con_status,c
  2460  00026C  0EAA               	movlw	170
  2461  00026E  EC4A  F004         	call	_Transmit
  2462                           
  2463                           ;ignition.c: 60: }
  2464                           ;ignition.c: 61: break;
  2465  000272  0012               	return	
  2466  000274                     i2l284:
  2467                           
  2468                           ;ignition.c: 63: if(PORTBbits.RB4 == 1) {
  2469  000274  A881               	btfss	3969,4,c	;volatile
  2470  000276  D00A               	goto	i2l285
  2471                           
  2472                           ;ignition.c: 64: Transmit(0xAA, 'T', 7, '1');
  2473  000278  0E54               	movlw	84
  2474  00027A  6E01               	movwf	Transmit@operation,c
  2475  00027C  0E07               	movlw	7
  2476  00027E  6E02               	movwf	Transmit@port,c
  2477  000280  0E31               	movlw	49
  2478  000282  6E03               	movwf	Transmit@con_status,c
  2479  000284  0EAA               	movlw	170
  2480  000286  EC4A  F004         	call	_Transmit
  2481                           
  2482                           ;ignition.c: 65: }else if(PORTCbits.RC4 == 0) {
  2483  00028A  0012               	return	
  2484  00028C                     i2l285:
  2485  00028C  B882               	btfsc	3970,4,c	;volatile
  2486  00028E  0012               	return	
  2487                           
  2488                           ;ignition.c: 66: Transmit(0xAA, 'T', 7, '0');
  2489  000290  0E54               	movlw	84
  2490  000292  6E01               	movwf	Transmit@operation,c
  2491  000294  0E07               	movlw	7
  2492  000296  6E02               	movwf	Transmit@port,c
  2493  000298  0E30               	movlw	48
  2494  00029A  6E03               	movwf	Transmit@con_status,c
  2495  00029C  0EAA               	movlw	170
  2496  00029E  EC4A  F004         	call	_Transmit
  2497                           
  2498                           ;ignition.c: 67: }
  2499                           ;ignition.c: 68: break;
  2500  0002A2  0012               	return	
  2501  0002A4                     i2l288:
  2502                           
  2503                           ;ignition.c: 70: if(PORTAbits.RA2 == 1) {
  2504  0002A4  A480               	btfss	3968,2,c	;volatile
  2505  0002A6  D00A               	goto	i2l289
  2506                           
  2507                           ;ignition.c: 71: Transmit(0xAA, 'T', 8, '1');
  2508  0002A8  0E54               	movlw	84
  2509  0002AA  6E01               	movwf	Transmit@operation,c
  2510  0002AC  0E08               	movlw	8
  2511  0002AE  6E02               	movwf	Transmit@port,c
  2512  0002B0  0E31               	movlw	49
  2513  0002B2  6E03               	movwf	Transmit@con_status,c
  2514  0002B4  0EAA               	movlw	170
  2515  0002B6  EC4A  F004         	call	_Transmit
  2516                           
  2517                           ;ignition.c: 72: }else if(PORTCbits.RC4 == 0) {
  2518  0002BA  0012               	return	
  2519  0002BC                     i2l289:
  2520  0002BC  B882               	btfsc	3970,4,c	;volatile
  2521  0002BE  0012               	return	
  2522                           
  2523                           ;ignition.c: 73: Transmit(0xAA, 'T', 8, '0');
  2524  0002C0  0E54               	movlw	84
  2525  0002C2  6E01               	movwf	Transmit@operation,c
  2526  0002C4  0E08               	movlw	8
  2527  0002C6  6E02               	movwf	Transmit@port,c
  2528  0002C8  0E30               	movlw	48
  2529  0002CA  6E03               	movwf	Transmit@con_status,c
  2530  0002CC  0EAA               	movlw	170
  2531  0002CE  EC4A  F004         	call	_Transmit
  2532                           
  2533                           ;ignition.c: 74: }
  2534                           ;ignition.c: 75: break;
  2535  0002D2  0012               	return	
  2536  0002D4                     i2l292:
  2537                           
  2538                           ;ignition.c: 77: if(PORTAbits.RA0 == 1) {
  2539  0002D4  A080               	btfss	3968,0,c	;volatile
  2540  0002D6  D00A               	goto	i2l293
  2541                           
  2542                           ;ignition.c: 78: Transmit(0xAA, 'T', 9, '1');
  2543  0002D8  0E54               	movlw	84
  2544  0002DA  6E01               	movwf	Transmit@operation,c
  2545  0002DC  0E09               	movlw	9
  2546  0002DE  6E02               	movwf	Transmit@port,c
  2547  0002E0  0E31               	movlw	49
  2548  0002E2  6E03               	movwf	Transmit@con_status,c
  2549  0002E4  0EAA               	movlw	170
  2550  0002E6  EC4A  F004         	call	_Transmit
  2551                           
  2552                           ;ignition.c: 79: }else if(PORTCbits.RC4 == 0) {
  2553  0002EA  0012               	return	
  2554  0002EC                     i2l293:
  2555  0002EC  B882               	btfsc	3970,4,c	;volatile
  2556  0002EE  0012               	return	
  2557                           
  2558                           ;ignition.c: 80: Transmit(0xAA, 'T', 9, '0');
  2559  0002F0  0E54               	movlw	84
  2560  0002F2  6E01               	movwf	Transmit@operation,c
  2561  0002F4  0E09               	movlw	9
  2562  0002F6  6E02               	movwf	Transmit@port,c
  2563  0002F8  0E30               	movlw	48
  2564  0002FA  6E03               	movwf	Transmit@con_status,c
  2565  0002FC  0EAA               	movlw	170
  2566  0002FE  EC4A  F004         	call	_Transmit
  2567                           
  2568                           ;ignition.c: 83: }
  2569                           
  2570                           ;ignition.c: 81: }
  2571                           ;ignition.c: 82: break;
  2572  000302  0012               	return	
  2573  000304                     i2l1704:
  2574  000304  5049               	movf	_received+3,w,c
  2575                           
  2576                           ; Switch size 1, requested type "space"
  2577                           ; Number of cases is 10, Range of values is 0 to 9
  2578                           ; switch strategies available:
  2579                           ; Name         Instructions Cycles
  2580                           ; simple_byte           31    16 (average)
  2581                           ;	Chosen strategy is simple_byte
  2582  000306  0A00               	xorlw	0	; case 0
  2583  000308  B4D8               	btfsc	status,2,c
  2584  00030A  D70C               	goto	i2l255
  2585  00030C  0A01               	xorlw	1	; case 1
  2586  00030E  B4D8               	btfsc	status,2,c
  2587  000310  D721               	goto	i2l260
  2588  000312  0A03               	xorlw	3	; case 2
  2589  000314  B4D8               	btfsc	status,2,c
  2590  000316  D736               	goto	i2l264
  2591  000318  0A01               	xorlw	1	; case 3
  2592  00031A  B4D8               	btfsc	status,2,c
  2593  00031C  D74B               	goto	i2l268
  2594  00031E  0A07               	xorlw	7	; case 4
  2595  000320  B4D8               	btfsc	status,2,c
  2596  000322  D760               	goto	i2l272
  2597  000324  0A01               	xorlw	1	; case 5
  2598  000326  B4D8               	btfsc	status,2,c
  2599  000328  D775               	goto	i2l276
  2600  00032A  0A03               	xorlw	3	; case 6
  2601  00032C  B4D8               	btfsc	status,2,c
  2602  00032E  D78A               	goto	i2l280
  2603  000330  0A01               	xorlw	1	; case 7
  2604  000332  B4D8               	btfsc	status,2,c
  2605  000334  D79F               	goto	i2l284
  2606  000336  0A0F               	xorlw	15	; case 8
  2607  000338  B4D8               	btfsc	status,2,c
  2608  00033A  D7B4               	goto	i2l288
  2609  00033C  0A01               	xorlw	1	; case 9
  2610  00033E  A4D8               	btfss	status,2,c
  2611  000340  0012               	return	
  2612  000342  D7C8               	goto	i2l292
  2613  000344                     __end_of_Test_Port:
  2614                           	opt stack 0
  2615                           pclatu	equ	0xFFB
  2616                           pclath	equ	0xFFA
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           prodh	equ	0xFF4
  2622                           prodl	equ	0xFF3
  2623                           intcon	equ	0xFF2
  2624                           postinc0	equ	0xFEE
  2625                           fsr0h	equ	0xFEA
  2626                           fsr0l	equ	0xFE9
  2627                           wreg	equ	0xFE8
  2628                           fsr1h	equ	0xFE2
  2629                           fsr1l	equ	0xFE1
  2630                           indf2	equ	0xFDF
  2631                           postinc2	equ	0xFDE
  2632                           fsr2h	equ	0xFDA
  2633                           fsr2l	equ	0xFD9
  2634                           status	equ	0xFD8
  2635                           
  2636 ;; *************** function _Transmit *****************
  2637 ;; Defined at:
  2638 ;;		line 18 in file "communication.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  receiver        1    wreg     unsigned char 
  2641 ;;  operation       1    0[COMRAM] unsigned char 
  2642 ;;  port            1    1[COMRAM] unsigned char 
  2643 ;;  con_status      1    2[COMRAM] unsigned char 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  receiver        1    3[COMRAM] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;		None               void
  2648 ;; Registers used:
  2649 ;;		wreg, status,2
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2655 ;;      Params:         3       0       0       0
  2656 ;;      Locals:         1       0       0       0
  2657 ;;      Temps:          0       0       0       0
  2658 ;;      Totals:         4       0       0       0
  2659 ;;Total ram usage:        4 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_Test_Port
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text19
  2669  000894                     __ptext19:
  2670                           	opt stack 0
  2671  000894                     _Transmit:
  2672                           	opt stack 25
  2673                           
  2674                           ;incstack = 0
  2675                           ;Transmit@receiver stored from wreg
  2676  000894  6E04               	movwf	Transmit@receiver,c
  2677                           
  2678                           ;communication.c: 20: PORTDbits.RD4 = 1;
  2679  000896  8883               	bsf	3971,4,c	;volatile
  2680                           
  2681                           ;communication.c: 21: RCSTA1bits.CREN = 0;
  2682  000898  98AB               	bcf	4011,4,c	;volatile
  2683                           
  2684                           ;communication.c: 23: __nop();
  2685  00089A  F000               	nop	
  2686  00089C                     i2l55:
  2687  00089C  A89E               	btfss	3998,4,c	;volatile
  2688  00089E  D7FE               	goto	i2l55
  2689                           
  2690                           ;communication.c: 25: TXSTA1bits.TX9D = 1;
  2691  0008A0  80AC               	bsf	4012,0,c	;volatile
  2692                           
  2693                           ;communication.c: 26: TXREG1 = receiver;
  2694  0008A2  C004  FFAD         	movff	Transmit@receiver,4013	;volatile
  2695  0008A6                     i2l58:
  2696  0008A6  A89E               	btfss	3998,4,c	;volatile
  2697  0008A8  D7FE               	goto	i2l58
  2698                           
  2699                           ;communication.c: 28: TXSTA1bits.TX9D = 0;
  2700  0008AA  90AC               	bcf	4012,0,c	;volatile
  2701                           
  2702                           ;communication.c: 29: _delay((unsigned long)((1)*(4000000/4000.0)));
  2703  0008AC  0EFA               	movlw	250
  2704  0008AE                     i2u141_47:
  2705  0008AE  F000               	nop	
  2706  0008B0  2EE8               	decfsz	wreg,f,c
  2707  0008B2  D7FD               	goto	i2u141_47
  2708                           
  2709                           ;communication.c: 30: TXREG1 = 0x00;
  2710  0008B4  0E00               	movlw	0
  2711  0008B6  6EAD               	movwf	4013,c	;volatile
  2712  0008B8                     i2l61:
  2713  0008B8  A89E               	btfss	3998,4,c	;volatile
  2714  0008BA  D7FE               	goto	i2l61
  2715                           
  2716                           ;communication.c: 32: _delay((unsigned long)((1)*(4000000/4000.0)));
  2717  0008BC  0EFA               	movlw	250
  2718  0008BE                     i2u142_47:
  2719  0008BE  F000               	nop	
  2720  0008C0  2EE8               	decfsz	wreg,f,c
  2721  0008C2  D7FD               	goto	i2u142_47
  2722                           
  2723                           ;communication.c: 33: TXREG1 = operation;
  2724  0008C4  C001  FFAD         	movff	Transmit@operation,4013	;volatile
  2725  0008C8                     i2l64:
  2726  0008C8  A89E               	btfss	3998,4,c	;volatile
  2727  0008CA  D7FE               	goto	i2l64
  2728                           
  2729                           ;communication.c: 35: _delay((unsigned long)((1)*(4000000/4000.0)));
  2730  0008CC  0EFA               	movlw	250
  2731  0008CE                     i2u143_47:
  2732  0008CE  F000               	nop	
  2733  0008D0  2EE8               	decfsz	wreg,f,c
  2734  0008D2  D7FD               	goto	i2u143_47
  2735                           
  2736                           ;communication.c: 36: TXREG1 = port;
  2737  0008D4  C002  FFAD         	movff	Transmit@port,4013	;volatile
  2738  0008D8                     i2l67:
  2739  0008D8  A89E               	btfss	3998,4,c	;volatile
  2740  0008DA  D7FE               	goto	i2l67
  2741                           
  2742                           ;communication.c: 38: _delay((unsigned long)((1)*(4000000/4000.0)));
  2743  0008DC  0EFA               	movlw	250
  2744  0008DE                     i2u144_47:
  2745  0008DE  F000               	nop	
  2746  0008E0  2EE8               	decfsz	wreg,f,c
  2747  0008E2  D7FD               	goto	i2u144_47
  2748                           
  2749                           ;communication.c: 39: TXREG1 = con_status;
  2750  0008E4  C003  FFAD         	movff	Transmit@con_status,4013	;volatile
  2751  0008E8                     i2l70:
  2752  0008E8  A89E               	btfss	3998,4,c	;volatile
  2753  0008EA  D7FE               	goto	i2l70
  2754                           
  2755                           ;communication.c: 41: _delay((unsigned long)((1)*(4000000/4000.0)));
  2756  0008EC  0EFA               	movlw	250
  2757  0008EE                     i2u145_47:
  2758  0008EE  F000               	nop	
  2759  0008F0  2EE8               	decfsz	wreg,f,c
  2760  0008F2  D7FD               	goto	i2u145_47
  2761                           
  2762                           ;communication.c: 42: TXREG1 = p_status;
  2763  0008F4  C04C  FFAD         	movff	_p_status,4013	;volatile
  2764  0008F8                     i2l73:
  2765  0008F8  A2AC               	btfss	4012,1,c	;volatile
  2766  0008FA  D7FE               	goto	i2l73
  2767                           
  2768                           ;communication.c: 44: PORTDbits.RD4 = 0;
  2769  0008FC  9883               	bcf	3971,4,c	;volatile
  2770                           
  2771                           ;communication.c: 45: RCSTA1bits.CREN = 1;
  2772  0008FE  88AB               	bsf	4011,4,c	;volatile
  2773                           
  2774                           ;communication.c: 46: __nop();
  2775  000900  F000               	nop	
  2776  000902  0012               	return		;funcret
  2777  000904                     __end_of_Transmit:
  2778                           	opt stack 0
  2779                           pclatu	equ	0xFFB
  2780                           pclath	equ	0xFFA
  2781                           tblptru	equ	0xFF8
  2782                           tblptrh	equ	0xFF7
  2783                           tblptrl	equ	0xFF6
  2784                           tablat	equ	0xFF5
  2785                           prodh	equ	0xFF4
  2786                           prodl	equ	0xFF3
  2787                           intcon	equ	0xFF2
  2788                           postinc0	equ	0xFEE
  2789                           fsr0h	equ	0xFEA
  2790                           fsr0l	equ	0xFE9
  2791                           wreg	equ	0xFE8
  2792                           fsr1h	equ	0xFE2
  2793                           fsr1l	equ	0xFE1
  2794                           indf2	equ	0xFDF
  2795                           postinc2	equ	0xFDE
  2796                           fsr2h	equ	0xFDA
  2797                           fsr2l	equ	0xFD9
  2798                           status	equ	0xFD8
  2799                           
  2800 ;; *************** function _Mark_Ignite *****************
  2801 ;; Defined at:
  2802 ;;		line 167 in file "ignition.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;		None               void
  2809 ;; Registers used:
  2810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2816 ;;      Params:         0       0       0       0
  2817 ;;      Locals:         0       0       0       0
  2818 ;;      Temps:          0       0       0       0
  2819 ;;      Totals:         0       0       0       0
  2820 ;;Total ram usage:        0 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_Evaluate_Reception
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text20
  2830  000AA2                     __ptext20:
  2831                           	opt stack 0
  2832  000AA2                     _Mark_Ignite:
  2833                           	opt stack 26
  2834                           
  2835                           ;ignition.c: 168: Marker[received[3]] = 1;
  2836                           
  2837                           ;incstack = 0
  2838  000AA2  5049               	movf	_received+3,w,c
  2839  000AA4  0D01               	mullw	1
  2840  000AA6  0E60               	movlw	low _Marker
  2841  000AA8  24F3               	addwf	prodl,w,c
  2842  000AAA  6ED9               	movwf	fsr2l,c
  2843  000AAC  0E00               	movlw	high _Marker
  2844  000AAE  20F4               	addwfc	prodh,w,c
  2845  000AB0  6EDA               	movwf	fsr2h,c
  2846  000AB2  0E01               	movlw	1
  2847  000AB4  6EDF               	movwf	indf2,c
  2848  000AB6  0012               	return		;funcret
  2849  000AB8                     __end_of_Mark_Ignite:
  2850                           	opt stack 0
  2851                           pclatu	equ	0xFFB
  2852                           pclath	equ	0xFFA
  2853                           tblptru	equ	0xFF8
  2854                           tblptrh	equ	0xFF7
  2855                           tblptrl	equ	0xFF6
  2856                           tablat	equ	0xFF5
  2857                           prodh	equ	0xFF4
  2858                           prodl	equ	0xFF3
  2859                           intcon	equ	0xFF2
  2860                           postinc0	equ	0xFEE
  2861                           fsr0h	equ	0xFEA
  2862                           fsr0l	equ	0xFE9
  2863                           wreg	equ	0xFE8
  2864                           fsr1h	equ	0xFE2
  2865                           fsr1l	equ	0xFE1
  2866                           indf2	equ	0xFDF
  2867                           postinc2	equ	0xFDE
  2868                           fsr2h	equ	0xFDA
  2869                           fsr2l	equ	0xFD9
  2870                           status	equ	0xFD8
  2871                           
  2872 ;; *************** function _Check_Power *****************
  2873 ;; Defined at:
  2874 ;;		line 171 in file "ignition.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;		None
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  source_power    3   51[COMRAM] float 
  2879 ;;  supply          3   48[COMRAM] float 
  2880 ;;  voltage         3   45[COMRAM] float 
  2881 ;;  DAC_out         3   42[COMRAM] float 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;		None               void
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2891 ;;      Params:         0       0       0       0
  2892 ;;      Locals:        12       0       0       0
  2893 ;;      Temps:          0       0       0       0
  2894 ;;      Totals:        12       0       0       0
  2895 ;;Total ram usage:       12 bytes
  2896 ;; Hardware stack levels used:    1
  2897 ;; Hardware stack levels required when called:    2
  2898 ;; This function calls:
  2899 ;;		___ftdiv
  2900 ;;		___ftge
  2901 ;;		___ftmul
  2902 ;;		___lbtoft
  2903 ;; This function is called by:
  2904 ;;		_Evaluate_Reception
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text21
  2909  000344                     __ptext21:
  2910                           	opt stack 0
  2911  000344                     _Check_Power:
  2912                           	opt stack 24
  2913                           
  2914                           ;ignition.c: 175: float source_power = 0;
  2915                           
  2916                           ;incstack = 0
  2917  000344  0E00               	movlw	0
  2918  000346  6E34               	movwf	Check_Power@source_power,c
  2919  000348  0E00               	movlw	0
  2920  00034A  6E35               	movwf	Check_Power@source_power+1,c
  2921  00034C  0E00               	movlw	0
  2922  00034E  6E36               	movwf	Check_Power@source_power+2,c
  2923                           
  2924                           ;ignition.c: 176: float voltage = 0;
  2925  000350  0E00               	movlw	0
  2926  000352  6E2E               	movwf	Check_Power@voltage,c
  2927  000354  0E00               	movlw	0
  2928  000356  6E2F               	movwf	Check_Power@voltage+1,c
  2929  000358  0E00               	movlw	0
  2930  00035A  6E30               	movwf	Check_Power@voltage+2,c
  2931                           
  2932                           ;ignition.c: 177: float DAC_out = 1.024;
  2933  00035C  0E12               	movlw	18
  2934  00035E  6E2B               	movwf	Check_Power@DAC_out,c
  2935  000360  0E83               	movlw	131
  2936  000362  6E2C               	movwf	Check_Power@DAC_out+1,c
  2937  000364  0E3F               	movlw	63
  2938  000366  6E2D               	movwf	Check_Power@DAC_out+2,c
  2939                           
  2940                           ;ignition.c: 178: float supply = 0;
  2941  000368  0E00               	movlw	0
  2942  00036A  6E31               	movwf	Check_Power@supply,c
  2943  00036C  0E00               	movlw	0
  2944  00036E  6E32               	movwf	Check_Power@supply+1,c
  2945  000370  0E00               	movlw	0
  2946  000372  6E33               	movwf	Check_Power@supply+2,c
  2947                           
  2948                           ;ignition.c: 181: ADCON0bits.CHS = 0b11110;
  2949  000374  94C2               	bcf	4034,2,c	;volatile
  2950  000376  86C2               	bsf	4034,3,c	;volatile
  2951  000378  88C2               	bsf	4034,4,c	;volatile
  2952  00037A  8AC2               	bsf	4034,5,c	;volatile
  2953  00037C  8CC2               	bsf	4034,6,c	;volatile
  2954                           
  2955                           ;ignition.c: 182: ADCON0bits.GO_nDONE = 1;
  2956  00037E  82C2               	bsf	4034,1,c	;volatile
  2957  000380                     i2l339:
  2958  000380  B2C2               	btfsc	4034,1,c	;volatile
  2959  000382  D7FE               	goto	i2l339
  2960                           
  2961                           ;ignition.c: 184: supply = ((DAC_out * 255) / ADRESH);
  2962  000384  0E00               	movlw	0
  2963  000386  6E10               	movwf	___ftmul@f2,c
  2964  000388  0E7F               	movlw	127
  2965  00038A  6E11               	movwf	___ftmul@f2+1,c
  2966  00038C  0E43               	movlw	67
  2967  00038E  6E12               	movwf	___ftmul@f2+2,c
  2968  000390  C02B  F00D         	movff	Check_Power@DAC_out,___ftmul@f1
  2969  000394  C02C  F00E         	movff	Check_Power@DAC_out+1,___ftmul@f1+1
  2970  000398  C02D  F00F         	movff	Check_Power@DAC_out+2,___ftmul@f1+2
  2971  00039C  EC4E  F002         	call	___ftmul	;wreg free
  2972  0003A0  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2973  0003A4  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2974  0003A8  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2975  0003AC  50C4               	movf	4036,w,c	;volatile
  2976  0003AE  ECE9  F004         	call	___lbtoft
  2977  0003B2  C009  F01F         	movff	?___lbtoft,___ftdiv@f2
  2978  0003B6  C00A  F020         	movff	?___lbtoft+1,___ftdiv@f2+1
  2979  0003BA  C00B  F021         	movff	?___lbtoft+2,___ftdiv@f2+2
  2980  0003BE  ECC8  F002         	call	___ftdiv	;wreg free
  2981  0003C2  C01C  F031         	movff	?___ftdiv,Check_Power@supply
  2982  0003C6  C01D  F032         	movff	?___ftdiv+1,Check_Power@supply+1
  2983  0003CA  C01E  F033         	movff	?___ftdiv+2,Check_Power@supply+2
  2984                           
  2985                           ;ignition.c: 187: ADCON0bits.CHS = 0b01100;
  2986  0003CE  94C2               	bcf	4034,2,c	;volatile
  2987  0003D0  96C2               	bcf	4034,3,c	;volatile
  2988  0003D2  88C2               	bsf	4034,4,c	;volatile
  2989  0003D4  8AC2               	bsf	4034,5,c	;volatile
  2990  0003D6  9CC2               	bcf	4034,6,c	;volatile
  2991                           
  2992                           ;ignition.c: 188: ADCON0bits.GO_nDONE = 1;
  2993  0003D8  82C2               	bsf	4034,1,c	;volatile
  2994  0003DA                     i2l342:
  2995  0003DA  B2C2               	btfsc	4034,1,c	;volatile
  2996  0003DC  D7FE               	goto	i2l342
  2997                           
  2998                           ;ignition.c: 190: voltage = ((ADRESH * supply) / 255);
  2999  0003DE  C031  F010         	movff	Check_Power@supply,___ftmul@f2
  3000  0003E2  C032  F011         	movff	Check_Power@supply+1,___ftmul@f2+1
  3001  0003E6  C033  F012         	movff	Check_Power@supply+2,___ftmul@f2+2
  3002  0003EA  50C4               	movf	4036,w,c	;volatile
  3003  0003EC  ECE9  F004         	call	___lbtoft
  3004  0003F0  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  3005  0003F4  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  3006  0003F8  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  3007  0003FC  EC4E  F002         	call	___ftmul	;wreg free
  3008  000400  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  3009  000404  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  3010  000408  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  3011  00040C  0E00               	movlw	0
  3012  00040E  6E1F               	movwf	___ftdiv@f2,c
  3013  000410  0E7F               	movlw	127
  3014  000412  6E20               	movwf	___ftdiv@f2+1,c
  3015  000414  0E43               	movlw	67
  3016  000416  6E21               	movwf	___ftdiv@f2+2,c
  3017  000418  ECC8  F002         	call	___ftdiv	;wreg free
  3018  00041C  C01C  F02E         	movff	?___ftdiv,Check_Power@voltage
  3019  000420  C01D  F02F         	movff	?___ftdiv+1,Check_Power@voltage+1
  3020  000424  C01E  F030         	movff	?___ftdiv+2,Check_Power@voltage+2
  3021                           
  3022                           ;ignition.c: 191: source_power = (4.2353 * voltage);
  3023  000428  C02E  F00D         	movff	Check_Power@voltage,___ftmul@f1
  3024  00042C  C02F  F00E         	movff	Check_Power@voltage+1,___ftmul@f1+1
  3025  000430  C030  F00F         	movff	Check_Power@voltage+2,___ftmul@f1+2
  3026  000434  0E88               	movlw	136
  3027  000436  6E10               	movwf	___ftmul@f2,c
  3028  000438  0E87               	movlw	135
  3029  00043A  6E11               	movwf	___ftmul@f2+1,c
  3030  00043C  0E40               	movlw	64
  3031  00043E  6E12               	movwf	___ftmul@f2+2,c
  3032  000440  EC4E  F002         	call	___ftmul	;wreg free
  3033  000444  C00D  F034         	movff	?___ftmul,Check_Power@source_power
  3034  000448  C00E  F035         	movff	?___ftmul+1,Check_Power@source_power+1
  3035  00044C  C00F  F036         	movff	?___ftmul+2,Check_Power@source_power+2
  3036                           
  3037                           ;ignition.c: 193: if (source_power < 16.8) {
  3038  000450  C034  F001         	movff	Check_Power@source_power,___ftge@ff1
  3039  000454  C035  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  3040  000458  C036  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  3041  00045C  0E66               	movlw	102
  3042  00045E  6E04               	movwf	___ftge@ff2,c
  3043  000460  0E86               	movlw	134
  3044  000462  6E05               	movwf	___ftge@ff2+1,c
  3045  000464  0E41               	movlw	65
  3046  000466  6E06               	movwf	___ftge@ff2+2,c
  3047  000468  EC92  F003         	call	___ftge	;wreg free
  3048  00046C  B0D8               	btfsc	status,0,c
  3049  00046E  D003               	goto	i2l1736
  3050                           
  3051                           ;ignition.c: 194: p_status = '0';
  3052  000470  0E30               	movlw	48
  3053  000472  6E4C               	movwf	_p_status,c
  3054                           
  3055                           ;ignition.c: 195: } else if (source_power >= 16.8) {
  3056  000474  0012               	return	
  3057  000476                     i2l1736:
  3058  000476  C034  F001         	movff	Check_Power@source_power,___ftge@ff1
  3059  00047A  C035  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  3060  00047E  C036  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  3061  000482  0E66               	movlw	102
  3062  000484  6E04               	movwf	___ftge@ff2,c
  3063  000486  0E86               	movlw	134
  3064  000488  6E05               	movwf	___ftge@ff2+1,c
  3065  00048A  0E41               	movlw	65
  3066  00048C  6E06               	movwf	___ftge@ff2+2,c
  3067  00048E  EC92  F003         	call	___ftge	;wreg free
  3068  000492  A0D8               	btfss	status,0,c
  3069  000494  0012               	return	
  3070                           
  3071                           ;ignition.c: 196: p_status = '1';
  3072  000496  0E31               	movlw	49
  3073  000498  6E4C               	movwf	_p_status,c
  3074  00049A  0012               	return	
  3075  00049C                     __end_of_Check_Power:
  3076                           	opt stack 0
  3077                           pclatu	equ	0xFFB
  3078                           pclath	equ	0xFFA
  3079                           tblptru	equ	0xFF8
  3080                           tblptrh	equ	0xFF7
  3081                           tblptrl	equ	0xFF6
  3082                           tablat	equ	0xFF5
  3083                           prodh	equ	0xFF4
  3084                           prodl	equ	0xFF3
  3085                           intcon	equ	0xFF2
  3086                           postinc0	equ	0xFEE
  3087                           fsr0h	equ	0xFEA
  3088                           fsr0l	equ	0xFE9
  3089                           wreg	equ	0xFE8
  3090                           fsr1h	equ	0xFE2
  3091                           fsr1l	equ	0xFE1
  3092                           indf2	equ	0xFDF
  3093                           postinc2	equ	0xFDE
  3094                           fsr2h	equ	0xFDA
  3095                           fsr2l	equ	0xFD9
  3096                           status	equ	0xFD8
  3097                           
  3098 ;; *************** function ___lbtoft *****************
  3099 ;; Defined at:
  3100 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbtoft.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;  c               1    wreg     unsigned char 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  c               1   11[COMRAM] unsigned char 
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  3    8[COMRAM] float 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3114 ;;      Params:         3       0       0       0
  3115 ;;      Locals:         1       0       0       0
  3116 ;;      Temps:          0       0       0       0
  3117 ;;      Totals:         4       0       0       0
  3118 ;;Total ram usage:        4 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    1
  3121 ;; This function calls:
  3122 ;;		___ftpack
  3123 ;; This function is called by:
  3124 ;;		_Check_Power
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text22
  3129  0009D2                     __ptext22:
  3130                           	opt stack 0
  3131  0009D2                     ___lbtoft:
  3132                           	opt stack 24
  3133                           
  3134                           ;incstack = 0
  3135                           ;___lbtoft@c stored from wreg
  3136  0009D2  6E0C               	movwf	___lbtoft@c,c
  3137  0009D4  500C               	movf	___lbtoft@c,w,c
  3138  0009D6  6E01               	movwf	___ftpack@arg,c
  3139  0009D8  6A02               	clrf	___ftpack@arg+1,c
  3140  0009DA  6A03               	clrf	___ftpack@arg+2,c
  3141  0009DC  0E8E               	movlw	142
  3142  0009DE  6E04               	movwf	___ftpack@exp,c
  3143  0009E0  0E00               	movlw	0
  3144  0009E2  6E05               	movwf	___ftpack@sign,c
  3145  0009E4  EC3B  F003         	call	___ftpack	;wreg free
  3146  0009E8  C001  F009         	movff	?___ftpack,?___lbtoft
  3147  0009EC  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  3148  0009F0  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  3149  0009F4  0012               	return	
  3150  0009F6                     __end_of___lbtoft:
  3151                           	opt stack 0
  3152                           pclatu	equ	0xFFB
  3153                           pclath	equ	0xFFA
  3154                           tblptru	equ	0xFF8
  3155                           tblptrh	equ	0xFF7
  3156                           tblptrl	equ	0xFF6
  3157                           tablat	equ	0xFF5
  3158                           prodh	equ	0xFF4
  3159                           prodl	equ	0xFF3
  3160                           intcon	equ	0xFF2
  3161                           postinc0	equ	0xFEE
  3162                           fsr0h	equ	0xFEA
  3163                           fsr0l	equ	0xFE9
  3164                           wreg	equ	0xFE8
  3165                           fsr1h	equ	0xFE2
  3166                           fsr1l	equ	0xFE1
  3167                           indf2	equ	0xFDF
  3168                           postinc2	equ	0xFDE
  3169                           fsr2h	equ	0xFDA
  3170                           fsr2l	equ	0xFD9
  3171                           status	equ	0xFD8
  3172                           
  3173 ;; *************** function ___ftmul *****************
  3174 ;; Defined at:
  3175 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  f1              3   12[COMRAM] float 
  3178 ;;  f2              3   15[COMRAM] float 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3181 ;;  sign            1   26[COMRAM] unsigned char 
  3182 ;;  cntr            1   25[COMRAM] unsigned char 
  3183 ;;  exp             1   21[COMRAM] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  3   12[COMRAM] float 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3193 ;;      Params:         6       0       0       0
  3194 ;;      Locals:         6       0       0       0
  3195 ;;      Temps:          3       0       0       0
  3196 ;;      Totals:        15       0       0       0
  3197 ;;Total ram usage:       15 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    1
  3200 ;; This function calls:
  3201 ;;		___ftpack
  3202 ;; This function is called by:
  3203 ;;		_Check_Power
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207                           	psect	text23
  3208  00049C                     __ptext23:
  3209                           	opt stack 0
  3210  00049C                     ___ftmul:
  3211                           	opt stack 24
  3212                           
  3213                           ;incstack = 0
  3214  00049C  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3215  0004A0  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3216  0004A2  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3217  0004A4  340E               	rlcf	___ftmul@f1+1,w,c
  3218  0004A6  3613               	rlcf	??___ftmul& (0+255),f,c
  3219  0004A8  E301               	bnc	u91_41
  3220  0004AA  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3221  0004AC                     u91_41:
  3222  0004AC  5013               	movf	??___ftmul,w,c
  3223  0004AE  6E16               	movwf	___ftmul@exp,c
  3224  0004B0  5016               	movf	___ftmul@exp,w,c
  3225  0004B2  A4D8               	btfss	status,2,c
  3226  0004B4  D007               	goto	i2l1546
  3227  0004B6  0E00               	movlw	0
  3228  0004B8  6E0D               	movwf	?___ftmul,c
  3229  0004BA  0E00               	movlw	0
  3230  0004BC  6E0E               	movwf	?___ftmul+1,c
  3231  0004BE  0E00               	movlw	0
  3232  0004C0  6E0F               	movwf	?___ftmul+2,c
  3233  0004C2  0012               	return	
  3234  0004C4                     i2l1546:
  3235  0004C4  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3236  0004C8  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3237  0004CA  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3238  0004CC  3411               	rlcf	___ftmul@f2+1,w,c
  3239  0004CE  3613               	rlcf	??___ftmul& (0+255),f,c
  3240  0004D0  E301               	bnc	u93_41
  3241  0004D2  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3242  0004D4                     u93_41:
  3243  0004D4  5013               	movf	??___ftmul,w,c
  3244  0004D6  6E1B               	movwf	___ftmul@sign,c
  3245  0004D8  501B               	movf	___ftmul@sign,w,c
  3246  0004DA  A4D8               	btfss	status,2,c
  3247  0004DC  D007               	goto	i2l1552
  3248  0004DE  0E00               	movlw	0
  3249  0004E0  6E0D               	movwf	?___ftmul,c
  3250  0004E2  0E00               	movlw	0
  3251  0004E4  6E0E               	movwf	?___ftmul+1,c
  3252  0004E6  0E00               	movlw	0
  3253  0004E8  6E0F               	movwf	?___ftmul+2,c
  3254  0004EA  0012               	return	
  3255  0004EC                     i2l1552:
  3256  0004EC  501B               	movf	___ftmul@sign,w,c
  3257  0004EE  0F7B               	addlw	123
  3258  0004F0  2616               	addwf	___ftmul@exp,f,c
  3259  0004F2  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3260  0004F6  5012               	movf	___ftmul@f2+2,w,c
  3261  0004F8  1A1B               	xorwf	___ftmul@sign,f,c
  3262  0004FA  0E80               	movlw	128
  3263  0004FC  161B               	andwf	___ftmul@sign,f,c
  3264  0004FE  8E0E               	bsf	___ftmul@f1+1,7,c
  3265  000500  8E11               	bsf	___ftmul@f2+1,7,c
  3266  000502  0EFF               	movlw	255
  3267  000504  1610               	andwf	___ftmul@f2,f,c
  3268  000506  0EFF               	movlw	255
  3269  000508  1611               	andwf	___ftmul@f2+1,f,c
  3270  00050A  0E00               	movlw	0
  3271  00050C  1612               	andwf	___ftmul@f2+2,f,c
  3272  00050E  0E00               	movlw	0
  3273  000510  6E17               	movwf	___ftmul@f3_as_product,c
  3274  000512  0E00               	movlw	0
  3275  000514  6E18               	movwf	___ftmul@f3_as_product+1,c
  3276  000516  0E00               	movlw	0
  3277  000518  6E19               	movwf	___ftmul@f3_as_product+2,c
  3278  00051A  0E07               	movlw	7
  3279  00051C  6E1A               	movwf	___ftmul@cntr,c
  3280  00051E                     i2l1566:
  3281  00051E  A00D               	btfss	___ftmul@f1,0,c
  3282  000520  D006               	goto	i2l1570
  3283  000522  5010               	movf	___ftmul@f2,w,c
  3284  000524  2617               	addwf	___ftmul@f3_as_product,f,c
  3285  000526  5011               	movf	___ftmul@f2+1,w,c
  3286  000528  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3287  00052A  5012               	movf	___ftmul@f2+2,w,c
  3288  00052C  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3289  00052E                     i2l1570:
  3290  00052E  90D8               	bcf	status,0,c
  3291  000530  320F               	rrcf	___ftmul@f1+2,f,c
  3292  000532  320E               	rrcf	___ftmul@f1+1,f,c
  3293  000534  320D               	rrcf	___ftmul@f1,f,c
  3294  000536  90D8               	bcf	status,0,c
  3295  000538  3610               	rlcf	___ftmul@f2,f,c
  3296  00053A  3611               	rlcf	___ftmul@f2+1,f,c
  3297  00053C  3612               	rlcf	___ftmul@f2+2,f,c
  3298  00053E  2E1A               	decfsz	___ftmul@cntr,f,c
  3299  000540  D7EE               	goto	i2l1566
  3300  000542  0E09               	movlw	9
  3301  000544  6E1A               	movwf	___ftmul@cntr,c
  3302  000546                     i2l1576:
  3303  000546  A00D               	btfss	___ftmul@f1,0,c
  3304  000548  D006               	goto	i2l1580
  3305  00054A  5010               	movf	___ftmul@f2,w,c
  3306  00054C  2617               	addwf	___ftmul@f3_as_product,f,c
  3307  00054E  5011               	movf	___ftmul@f2+1,w,c
  3308  000550  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3309  000552  5012               	movf	___ftmul@f2+2,w,c
  3310  000554  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3311  000556                     i2l1580:
  3312  000556  90D8               	bcf	status,0,c
  3313  000558  320F               	rrcf	___ftmul@f1+2,f,c
  3314  00055A  320E               	rrcf	___ftmul@f1+1,f,c
  3315  00055C  320D               	rrcf	___ftmul@f1,f,c
  3316  00055E  90D8               	bcf	status,0,c
  3317  000560  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  3318  000562  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  3319  000564  3217               	rrcf	___ftmul@f3_as_product,f,c
  3320  000566  2E1A               	decfsz	___ftmul@cntr,f,c
  3321  000568  D7EE               	goto	i2l1576
  3322  00056A  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3323  00056E  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3324  000572  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3325  000576  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3326  00057A  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3327  00057E  EC3B  F003         	call	___ftpack	;wreg free
  3328  000582  C001  F00D         	movff	?___ftpack,?___ftmul
  3329  000586  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3330  00058A  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3331  00058E  0012               	return	
  3332  000590                     __end_of___ftmul:
  3333                           	opt stack 0
  3334                           pclatu	equ	0xFFB
  3335                           pclath	equ	0xFFA
  3336                           tblptru	equ	0xFF8
  3337                           tblptrh	equ	0xFF7
  3338                           tblptrl	equ	0xFF6
  3339                           tablat	equ	0xFF5
  3340                           prodh	equ	0xFF4
  3341                           prodl	equ	0xFF3
  3342                           intcon	equ	0xFF2
  3343                           postinc0	equ	0xFEE
  3344                           fsr0h	equ	0xFEA
  3345                           fsr0l	equ	0xFE9
  3346                           wreg	equ	0xFE8
  3347                           fsr1h	equ	0xFE2
  3348                           fsr1l	equ	0xFE1
  3349                           indf2	equ	0xFDF
  3350                           postinc2	equ	0xFDE
  3351                           fsr2h	equ	0xFDA
  3352                           fsr2l	equ	0xFD9
  3353                           status	equ	0xFD8
  3354                           
  3355 ;; *************** function ___ftge *****************
  3356 ;; Defined at:
  3357 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  ff1             3    0[COMRAM] float 
  3360 ;;  ff2             3    3[COMRAM] float 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;		None               void
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3372 ;;      Params:         6       0       0       0
  3373 ;;      Locals:         0       0       0       0
  3374 ;;      Temps:          3       0       0       0
  3375 ;;      Totals:         9       0       0       0
  3376 ;;Total ram usage:        9 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_Check_Power
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	text24
  3386  000724                     __ptext24:
  3387                           	opt stack 0
  3388  000724                     ___ftge:
  3389                           	opt stack 25
  3390                           
  3391                           ;incstack = 0
  3392  000724  AE03               	btfss	___ftge@ff1+2,7,c
  3393  000726  D016               	goto	i2l1592
  3394  000728  C001  F007         	movff	___ftge@ff1,??___ftge
  3395  00072C  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3396  000730  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3397  000734  1E07               	comf	??___ftge,f,c
  3398  000736  1E08               	comf	??___ftge+1,f,c
  3399  000738  1E09               	comf	??___ftge+2,f,c
  3400  00073A  2A07               	incf	??___ftge,f,c
  3401  00073C  0E00               	movlw	0
  3402  00073E  2208               	addwfc	??___ftge+1,f,c
  3403  000740  2209               	addwfc	??___ftge+2,f,c
  3404  000742  0E00               	movlw	0
  3405  000744  2407               	addwf	??___ftge,w,c
  3406  000746  6E01               	movwf	___ftge@ff1,c
  3407  000748  0E00               	movlw	0
  3408  00074A  2008               	addwfc	??___ftge+1,w,c
  3409  00074C  6E02               	movwf	___ftge@ff1+1,c
  3410  00074E  0E80               	movlw	128
  3411  000750  2009               	addwfc	??___ftge+2,w,c
  3412  000752  6E03               	movwf	___ftge@ff1+2,c
  3413  000754                     i2l1592:
  3414  000754  AE06               	btfss	___ftge@ff2+2,7,c
  3415  000756  D016               	goto	i2l1596
  3416  000758  C004  F007         	movff	___ftge@ff2,??___ftge
  3417  00075C  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3418  000760  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3419  000764  1E07               	comf	??___ftge,f,c
  3420  000766  1E08               	comf	??___ftge+1,f,c
  3421  000768  1E09               	comf	??___ftge+2,f,c
  3422  00076A  2A07               	incf	??___ftge,f,c
  3423  00076C  0E00               	movlw	0
  3424  00076E  2208               	addwfc	??___ftge+1,f,c
  3425  000770  2209               	addwfc	??___ftge+2,f,c
  3426  000772  0E00               	movlw	0
  3427  000774  2407               	addwf	??___ftge,w,c
  3428  000776  6E04               	movwf	___ftge@ff2,c
  3429  000778  0E00               	movlw	0
  3430  00077A  2008               	addwfc	??___ftge+1,w,c
  3431  00077C  6E05               	movwf	___ftge@ff2+1,c
  3432  00077E  0E80               	movlw	128
  3433  000780  2009               	addwfc	??___ftge+2,w,c
  3434  000782  6E06               	movwf	___ftge@ff2+2,c
  3435  000784                     i2l1596:
  3436  000784  0E00               	movlw	0
  3437  000786  1A01               	xorwf	___ftge@ff1,f,c
  3438  000788  0E00               	movlw	0
  3439  00078A  1A02               	xorwf	___ftge@ff1+1,f,c
  3440  00078C  0E80               	movlw	128
  3441  00078E  1A03               	xorwf	___ftge@ff1+2,f,c
  3442  000790  0E00               	movlw	0
  3443  000792  1A04               	xorwf	___ftge@ff2,f,c
  3444  000794  0E00               	movlw	0
  3445  000796  1A05               	xorwf	___ftge@ff2+1,f,c
  3446  000798  0E80               	movlw	128
  3447  00079A  1A06               	xorwf	___ftge@ff2+2,f,c
  3448  00079C  5004               	movf	___ftge@ff2,w,c
  3449  00079E  5C01               	subwf	___ftge@ff1,w,c
  3450  0007A0  5005               	movf	___ftge@ff2+1,w,c
  3451  0007A2  5802               	subwfb	___ftge@ff1+1,w,c
  3452  0007A4  5006               	movf	___ftge@ff2+2,w,c
  3453  0007A6  5803               	subwfb	___ftge@ff1+2,w,c
  3454  0007A8  B0D8               	btfsc	status,0,c
  3455  0007AA  D002               	goto	i2l1602
  3456  0007AC  90D8               	bcf	status,0,c
  3457  0007AE  0012               	return	
  3458  0007B0                     i2l1602:
  3459  0007B0  80D8               	bsf	status,0,c
  3460  0007B2  0012               	return	
  3461  0007B4                     __end_of___ftge:
  3462                           	opt stack 0
  3463                           pclatu	equ	0xFFB
  3464                           pclath	equ	0xFFA
  3465                           tblptru	equ	0xFF8
  3466                           tblptrh	equ	0xFF7
  3467                           tblptrl	equ	0xFF6
  3468                           tablat	equ	0xFF5
  3469                           prodh	equ	0xFF4
  3470                           prodl	equ	0xFF3
  3471                           intcon	equ	0xFF2
  3472                           postinc0	equ	0xFEE
  3473                           fsr0h	equ	0xFEA
  3474                           fsr0l	equ	0xFE9
  3475                           wreg	equ	0xFE8
  3476                           fsr1h	equ	0xFE2
  3477                           fsr1l	equ	0xFE1
  3478                           indf2	equ	0xFDF
  3479                           postinc2	equ	0xFDE
  3480                           fsr2h	equ	0xFDA
  3481                           fsr2l	equ	0xFD9
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function ___ftdiv *****************
  3485 ;; Defined at:
  3486 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  f1              3   27[COMRAM] float 
  3489 ;;  f2              3   30[COMRAM] float 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  f3              3   37[COMRAM] float 
  3492 ;;  sign            1   41[COMRAM] unsigned char 
  3493 ;;  exp             1   40[COMRAM] unsigned char 
  3494 ;;  cntr            1   36[COMRAM] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  3   27[COMRAM] float 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3504 ;;      Params:         6       0       0       0
  3505 ;;      Locals:         6       0       0       0
  3506 ;;      Temps:          3       0       0       0
  3507 ;;      Totals:        15       0       0       0
  3508 ;;Total ram usage:       15 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    1
  3511 ;; This function calls:
  3512 ;;		___ftpack
  3513 ;; This function is called by:
  3514 ;;		_Check_Power
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text25
  3519  000590                     __ptext25:
  3520                           	opt stack 0
  3521  000590                     ___ftdiv:
  3522                           	opt stack 24
  3523                           
  3524                           ;incstack = 0
  3525  000590  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  3526  000594  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3527  000596  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3528  000598  341D               	rlcf	___ftdiv@f1+1,w,c
  3529  00059A  3622               	rlcf	??___ftdiv& (0+255),f,c
  3530  00059C  E301               	bnc	u86_41
  3531  00059E  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3532  0005A0                     u86_41:
  3533  0005A0  5022               	movf	??___ftdiv,w,c
  3534  0005A2  6E29               	movwf	___ftdiv@exp,c
  3535  0005A4  5029               	movf	___ftdiv@exp,w,c
  3536  0005A6  A4D8               	btfss	status,2,c
  3537  0005A8  D007               	goto	i2l1500
  3538  0005AA  0E00               	movlw	0
  3539  0005AC  6E1C               	movwf	?___ftdiv,c
  3540  0005AE  0E00               	movlw	0
  3541  0005B0  6E1D               	movwf	?___ftdiv+1,c
  3542  0005B2  0E00               	movlw	0
  3543  0005B4  6E1E               	movwf	?___ftdiv+2,c
  3544  0005B6  0012               	return	
  3545  0005B8                     i2l1500:
  3546  0005B8  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  3547  0005BC  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3548  0005BE  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3549  0005C0  3420               	rlcf	___ftdiv@f2+1,w,c
  3550  0005C2  3622               	rlcf	??___ftdiv& (0+255),f,c
  3551  0005C4  E301               	bnc	u88_41
  3552  0005C6  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3553  0005C8                     u88_41:
  3554  0005C8  5022               	movf	??___ftdiv,w,c
  3555  0005CA  6E2A               	movwf	___ftdiv@sign,c
  3556  0005CC  502A               	movf	___ftdiv@sign,w,c
  3557  0005CE  A4D8               	btfss	status,2,c
  3558  0005D0  D007               	goto	i2l1506
  3559  0005D2  0E00               	movlw	0
  3560  0005D4  6E1C               	movwf	?___ftdiv,c
  3561  0005D6  0E00               	movlw	0
  3562  0005D8  6E1D               	movwf	?___ftdiv+1,c
  3563  0005DA  0E00               	movlw	0
  3564  0005DC  6E1E               	movwf	?___ftdiv+2,c
  3565  0005DE  0012               	return	
  3566  0005E0                     i2l1506:
  3567  0005E0  0E00               	movlw	0
  3568  0005E2  6E26               	movwf	___ftdiv@f3,c
  3569  0005E4  0E00               	movlw	0
  3570  0005E6  6E27               	movwf	___ftdiv@f3+1,c
  3571  0005E8  0E00               	movlw	0
  3572  0005EA  6E28               	movwf	___ftdiv@f3+2,c
  3573  0005EC  502A               	movf	___ftdiv@sign,w,c
  3574  0005EE  0F89               	addlw	137
  3575  0005F0  5E29               	subwf	___ftdiv@exp,f,c
  3576  0005F2  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3577  0005F6  5021               	movf	___ftdiv@f2+2,w,c
  3578  0005F8  1A2A               	xorwf	___ftdiv@sign,f,c
  3579  0005FA  0E80               	movlw	128
  3580  0005FC  162A               	andwf	___ftdiv@sign,f,c
  3581  0005FE  8E1D               	bsf	___ftdiv@f1+1,7,c
  3582  000600  0EFF               	movlw	255
  3583  000602  161C               	andwf	___ftdiv@f1,f,c
  3584  000604  0EFF               	movlw	255
  3585  000606  161D               	andwf	___ftdiv@f1+1,f,c
  3586  000608  0E00               	movlw	0
  3587  00060A  161E               	andwf	___ftdiv@f1+2,f,c
  3588  00060C  8E20               	bsf	___ftdiv@f2+1,7,c
  3589  00060E  0EFF               	movlw	255
  3590  000610  161F               	andwf	___ftdiv@f2,f,c
  3591  000612  0EFF               	movlw	255
  3592  000614  1620               	andwf	___ftdiv@f2+1,f,c
  3593  000616  0E00               	movlw	0
  3594  000618  1621               	andwf	___ftdiv@f2+2,f,c
  3595  00061A  0E18               	movlw	24
  3596  00061C  6E25               	movwf	___ftdiv@cntr,c
  3597  00061E                     i2l1526:
  3598  00061E  90D8               	bcf	status,0,c
  3599  000620  3626               	rlcf	___ftdiv@f3,f,c
  3600  000622  3627               	rlcf	___ftdiv@f3+1,f,c
  3601  000624  3628               	rlcf	___ftdiv@f3+2,f,c
  3602  000626  501F               	movf	___ftdiv@f2,w,c
  3603  000628  5C1C               	subwf	___ftdiv@f1,w,c
  3604  00062A  5020               	movf	___ftdiv@f2+1,w,c
  3605  00062C  581D               	subwfb	___ftdiv@f1+1,w,c
  3606  00062E  5021               	movf	___ftdiv@f2+2,w,c
  3607  000630  581E               	subwfb	___ftdiv@f1+2,w,c
  3608  000632  A0D8               	btfss	status,0,c
  3609  000634  D007               	goto	i2l681
  3610  000636  501F               	movf	___ftdiv@f2,w,c
  3611  000638  5E1C               	subwf	___ftdiv@f1,f,c
  3612  00063A  5020               	movf	___ftdiv@f2+1,w,c
  3613  00063C  5A1D               	subwfb	___ftdiv@f1+1,f,c
  3614  00063E  5021               	movf	___ftdiv@f2+2,w,c
  3615  000640  5A1E               	subwfb	___ftdiv@f1+2,f,c
  3616  000642  8026               	bsf	___ftdiv@f3,0,c
  3617  000644                     i2l681:
  3618  000644  90D8               	bcf	status,0,c
  3619  000646  361C               	rlcf	___ftdiv@f1,f,c
  3620  000648  361D               	rlcf	___ftdiv@f1+1,f,c
  3621  00064A  361E               	rlcf	___ftdiv@f1+2,f,c
  3622  00064C  2E25               	decfsz	___ftdiv@cntr,f,c
  3623  00064E  D7E7               	goto	i2l1526
  3624  000650  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  3625  000654  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3626  000658  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3627  00065C  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  3628  000660  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  3629  000664  EC3B  F003         	call	___ftpack	;wreg free
  3630  000668  C001  F01C         	movff	?___ftpack,?___ftdiv
  3631  00066C  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  3632  000670  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  3633  000674  0012               	return	
  3634  000676                     __end_of___ftdiv:
  3635                           	opt stack 0
  3636                           pclatu	equ	0xFFB
  3637                           pclath	equ	0xFFA
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           intcon	equ	0xFF2
  3645                           postinc0	equ	0xFEE
  3646                           fsr0h	equ	0xFEA
  3647                           fsr0l	equ	0xFE9
  3648                           wreg	equ	0xFE8
  3649                           fsr1h	equ	0xFE2
  3650                           fsr1l	equ	0xFE1
  3651                           indf2	equ	0xFDF
  3652                           postinc2	equ	0xFDE
  3653                           fsr2h	equ	0xFDA
  3654                           fsr2l	equ	0xFD9
  3655                           status	equ	0xFD8
  3656                           
  3657 ;; *************** function ___ftpack *****************
  3658 ;; Defined at:
  3659 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;  arg             3    0[COMRAM] unsigned um
  3662 ;;  exp             1    3[COMRAM] unsigned char 
  3663 ;;  sign            1    4[COMRAM] unsigned char 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  3    0[COMRAM] float 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3675 ;;      Params:         5       0       0       0
  3676 ;;      Locals:         0       0       0       0
  3677 ;;      Temps:          3       0       0       0
  3678 ;;      Totals:         8       0       0       0
  3679 ;;Total ram usage:        8 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		___ftdiv
  3685 ;;		___ftmul
  3686 ;;		___lbtoft
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text26
  3691  000676                     __ptext26:
  3692                           	opt stack 0
  3693  000676                     ___ftpack:
  3694                           	opt stack 24
  3695                           
  3696                           ;incstack = 0
  3697  000676  5004               	movf	___ftpack@exp,w,c
  3698  000678  B4D8               	btfsc	status,2,c
  3699  00067A  D005               	goto	i2l1438
  3700  00067C  5001               	movf	___ftpack@arg,w,c
  3701  00067E  1002               	iorwf	___ftpack@arg+1,w,c
  3702  000680  1003               	iorwf	___ftpack@arg+2,w,c
  3703  000682  A4D8               	btfss	status,2,c
  3704  000684  D00C               	goto	i2l1444
  3705  000686                     i2l1438:
  3706  000686  0E00               	movlw	0
  3707  000688  6E01               	movwf	?___ftpack,c
  3708  00068A  0E00               	movlw	0
  3709  00068C  6E02               	movwf	?___ftpack+1,c
  3710  00068E  0E00               	movlw	0
  3711  000690  6E03               	movwf	?___ftpack+2,c
  3712  000692  0012               	return	
  3713  000694                     i2l1442:
  3714  000694  2A04               	incf	___ftpack@exp,f,c
  3715  000696  90D8               	bcf	status,0,c
  3716  000698  3203               	rrcf	___ftpack@arg+2,f,c
  3717  00069A  3202               	rrcf	___ftpack@arg+1,f,c
  3718  00069C  3201               	rrcf	___ftpack@arg,f,c
  3719  00069E                     i2l1444:
  3720  00069E  0E00               	movlw	0
  3721  0006A0  1401               	andwf	___ftpack@arg,w,c
  3722  0006A2  6E06               	movwf	??___ftpack& (0+255),c
  3723  0006A4  0E00               	movlw	0
  3724  0006A6  1402               	andwf	___ftpack@arg+1,w,c
  3725  0006A8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3726  0006AA  0EFE               	movlw	254
  3727  0006AC  1403               	andwf	___ftpack@arg+2,w,c
  3728  0006AE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3729  0006B0  5006               	movf	??___ftpack,w,c
  3730  0006B2  1007               	iorwf	??___ftpack+1,w,c
  3731  0006B4  1008               	iorwf	??___ftpack+2,w,c
  3732  0006B6  B4D8               	btfsc	status,2,c
  3733  0006B8  D00C               	goto	i2l1450
  3734  0006BA  D7EC               	goto	i2l1442
  3735  0006BC                     i2l1446:
  3736  0006BC  2A04               	incf	___ftpack@exp,f,c
  3737  0006BE  0E01               	movlw	1
  3738  0006C0  2601               	addwf	___ftpack@arg,f,c
  3739  0006C2  0E00               	movlw	0
  3740  0006C4  2202               	addwfc	___ftpack@arg+1,f,c
  3741  0006C6  0E00               	movlw	0
  3742  0006C8  2203               	addwfc	___ftpack@arg+2,f,c
  3743  0006CA  90D8               	bcf	status,0,c
  3744  0006CC  3203               	rrcf	___ftpack@arg+2,f,c
  3745  0006CE  3202               	rrcf	___ftpack@arg+1,f,c
  3746  0006D0  3201               	rrcf	___ftpack@arg,f,c
  3747  0006D2                     i2l1450:
  3748  0006D2  0E00               	movlw	0
  3749  0006D4  1401               	andwf	___ftpack@arg,w,c
  3750  0006D6  6E06               	movwf	??___ftpack& (0+255),c
  3751  0006D8  0E00               	movlw	0
  3752  0006DA  1402               	andwf	___ftpack@arg+1,w,c
  3753  0006DC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3754  0006DE  0EFF               	movlw	255
  3755  0006E0  1403               	andwf	___ftpack@arg+2,w,c
  3756  0006E2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3757  0006E4  5006               	movf	??___ftpack,w,c
  3758  0006E6  1007               	iorwf	??___ftpack+1,w,c
  3759  0006E8  1008               	iorwf	??___ftpack+2,w,c
  3760  0006EA  B4D8               	btfsc	status,2,c
  3761  0006EC  D006               	goto	i2l1454
  3762  0006EE  D7E6               	goto	i2l1446
  3763  0006F0                     i2l1452:
  3764  0006F0  0604               	decf	___ftpack@exp,f,c
  3765  0006F2  90D8               	bcf	status,0,c
  3766  0006F4  3601               	rlcf	___ftpack@arg,f,c
  3767  0006F6  3602               	rlcf	___ftpack@arg+1,f,c
  3768  0006F8  3603               	rlcf	___ftpack@arg+2,f,c
  3769  0006FA                     i2l1454:
  3770  0006FA  BE02               	btfsc	___ftpack@arg+1,7,c
  3771  0006FC  D003               	goto	i2l623
  3772  0006FE  0E02               	movlw	2
  3773  000700  6004               	cpfslt	___ftpack@exp,c
  3774  000702  D7F6               	goto	i2l1452
  3775  000704                     i2l623:
  3776  000704  A004               	btfss	___ftpack@exp,0,c
  3777  000706  9E02               	bcf	___ftpack@arg+1,7,c
  3778  000708  90D8               	bcf	status,0,c
  3779  00070A  3204               	rrcf	___ftpack@exp,f,c
  3780  00070C  5004               	movf	___ftpack@exp,w,c
  3781  00070E  1203               	iorwf	___ftpack@arg+2,f,c
  3782  000710  5005               	movf	___ftpack@sign,w,c
  3783  000712  A4D8               	btfss	status,2,c
  3784  000714  8E03               	bsf	___ftpack@arg+2,7,c
  3785  000716  C001  F001         	movff	___ftpack@arg,?___ftpack
  3786  00071A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3787  00071E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3788  000722  0012               	return	
  3789  000724                     __end_of___ftpack:
  3790                           	opt stack 0
  3791  0000                     pclatu	equ	0xFFB
  3792                           pclath	equ	0xFFA
  3793                           tblptru	equ	0xFF8
  3794                           tblptrh	equ	0xFF7
  3795                           tblptrl	equ	0xFF6
  3796                           tablat	equ	0xFF5
  3797                           prodh	equ	0xFF4
  3798                           prodl	equ	0xFF3
  3799                           intcon	equ	0xFF2
  3800                           postinc0	equ	0xFEE
  3801                           fsr0h	equ	0xFEA
  3802                           fsr0l	equ	0xFE9
  3803                           wreg	equ	0xFE8
  3804                           fsr1h	equ	0xFE2
  3805                           fsr1l	equ	0xFE1
  3806                           indf2	equ	0xFDF
  3807                           postinc2	equ	0xFDE
  3808                           fsr2h	equ	0xFDA
  3809                           fsr2l	equ	0xFD9
  3810                           status	equ	0xFD8
  3811                           pclatu	equ	0xFFB
  3812                           pclath	equ	0xFFA
  3813                           tblptru	equ	0xFF8
  3814                           tblptrh	equ	0xFF7
  3815                           tblptrl	equ	0xFF6
  3816                           tablat	equ	0xFF5
  3817                           prodh	equ	0xFF4
  3818                           prodl	equ	0xFF3
  3819                           intcon	equ	0xFF2
  3820                           postinc0	equ	0xFEE
  3821                           fsr0h	equ	0xFEA
  3822                           fsr0l	equ	0xFE9
  3823                           wreg	equ	0xFE8
  3824                           fsr1h	equ	0xFE2
  3825                           fsr1l	equ	0xFE1
  3826                           indf2	equ	0xFDF
  3827                           postinc2	equ	0xFDE
  3828                           fsr2h	equ	0xFDA
  3829                           fsr2l	equ	0xFD9
  3830                           status	equ	0xFD8
  3831                           
  3832                           	psect	rparam
  3833  0000                     pclatu	equ	0xFFB
  3834                           pclath	equ	0xFFA
  3835                           tblptru	equ	0xFF8
  3836                           tblptrh	equ	0xFF7
  3837                           tblptrl	equ	0xFF6
  3838                           tablat	equ	0xFF5
  3839                           prodh	equ	0xFF4
  3840                           prodl	equ	0xFF3
  3841                           intcon	equ	0xFF2
  3842                           postinc0	equ	0xFEE
  3843                           fsr0h	equ	0xFEA
  3844                           fsr0l	equ	0xFE9
  3845                           wreg	equ	0xFE8
  3846                           fsr1h	equ	0xFE2
  3847                           fsr1l	equ	0xFE1
  3848                           indf2	equ	0xFDF
  3849                           postinc2	equ	0xFDE
  3850                           fsr2h	equ	0xFDA
  3851                           fsr2l	equ	0xFD9
  3852                           status	equ	0xFD8
  3853                           
  3854                           	psect	temp
  3855  00004D                     btemp:
  3856                           	opt stack 0
  3857  00004D                     	ds	1
  3858  0000                     int$flags	set	btemp
  3859                           pclatu	equ	0xFFB
  3860                           pclath	equ	0xFFA
  3861                           tblptru	equ	0xFF8
  3862                           tblptrh	equ	0xFF7
  3863                           tblptrl	equ	0xFF6
  3864                           tablat	equ	0xFF5
  3865                           prodh	equ	0xFF4
  3866                           prodl	equ	0xFF3
  3867                           intcon	equ	0xFF2
  3868                           postinc0	equ	0xFEE
  3869                           fsr0h	equ	0xFEA
  3870                           fsr0l	equ	0xFE9
  3871                           wreg	equ	0xFE8
  3872                           fsr1h	equ	0xFE2
  3873                           fsr1l	equ	0xFE1
  3874                           indf2	equ	0xFDF
  3875                           postinc2	equ	0xFDE
  3876                           fsr2h	equ	0xFDA
  3877                           fsr2l	equ	0xFD9
  3878                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      76
    BANK0           160      3      13
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Evaluate_Reception->_Check_Power
    _Test_Port->_Transmit
    _Check_Power->___ftdiv
    ___lbtoft->___ftpack
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    _main->_Check_Ignition
    _Init->_InitVar
    _Check_Ignition->_Disable_Port
    _Check_Ignition->_Ignite_Port

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     224
                     _Check_Ignition
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0      68
                            _InitADC
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                   _InitTransmission
                           _InitTris
                            _InitVar
 ---------------------------------------------------------------------------------
 (2) _InitVar                                              1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Ignition                                       2     2      0     156
                                              1 BANK0      2     2      0
                       _Disable_Port
                        _Ignite_Port
                           _On_Timer
 ---------------------------------------------------------------------------------
 (2) _On_Timer                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ignite_Port                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Disable_Port                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 15    15      0   12071
                                             54 COMRAM    15    15      0
                 _Evaluate_Reception
                            _Receive
                       _Receive_Dump
 ---------------------------------------------------------------------------------
 (4) _Receive_Dump                                         1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Evaluate_Reception                                   0     0      0   12002
                        _Check_Power
                        _Mark_Ignite
                          _Test_Port
 ---------------------------------------------------------------------------------
 (5) _Test_Port                                            0     0      0    3928
                           _Transmit
 ---------------------------------------------------------------------------------
 (6) _Transmit                                             4     1      3    3928
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _Mark_Ignite                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Check_Power                                         12    12      0    8074
                                             42 COMRAM    12    12      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (6) ___lbtoft                                             4     1      3    2053
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    2843
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     392
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             15     9      6    2669
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Ignition
     _Disable_Port
     _Ignite_Port
     _On_Timer
   _Init
     _InitADC
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTransmission
     _InitTris
     _InitVar

 _Isr (ROOT)
   _Evaluate_Reception
     _Check_Power
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftge
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _Mark_Ignite
     _Test_Port
       _Transmit
   _Receive
   _Receive_Dump

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      3       D       4        8.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     45      4C       1       80.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      59       9        0.0%
DATA                 0      0      59      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 18 16:09:24 2017

           ??_Check_Ignition 006B                           l21 0ADA                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                          l300 07BA                          l310 07DE  
                        l302 07BE                          l303 07C2                          l320 083A  
                        l304 07C6                          l321 083E                          l305 07CA  
                        l322 0842                          l306 07CE                          l323 0846  
                        l315 082A                          l307 07D2                          l324 084A  
                        l308 07D6                          l325 084E                          l317 082E  
                        l309 07DA                          l318 0832                          l319 0836  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000                          _Isr 0008  
                        prod 000FF3                          wreg 000FE8                   _TXSTA1bits 000FAC  
              ??_Ignite_Port 006A                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0025  
                       ?_Isr 0001                ??_Mark_Ignite 0001                 ___ftdiv@sign 002A  
                       l1710 07E2                         l1716 0852                         l1644 0986  
                       l1760 0942                         l1752 0914                         l1648 0990  
                       l1748 090A                         l1758 093A                         i2l61 08B8  
                       i2l70 08E8                         i2l55 089C                         i2l64 08C8  
                       i2l73 08F8                         i2l58 08A6                         i2l67 08D8  
                       i2l83 0AC2                         Isr@c 0045                         _Init 09F6  
                       _main 0AD6                 ___ftpack@arg 0001                 ___ftpack@exp 0004  
                       fsr0h 000FEA                         fsr1h 000FE2                         fsr0l 000FE9  
                       fsr2h 000FDA                         fsr1l 000FE1                         indf2 000FDF  
                       fsr2l 000FD9                         btemp 004D                __CFG_BORV$190 000000  
               Transmit@port 0002                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 011E                __CFG_IESO$OFF 000000  
               ___ftmul@cntr 001A                 ___param_bank 000010                 ___ftmul@sign 001B  
            __end_of_InitADC 09D2                _InitInterrupt 0AEE              __end_of_InitVar 09AC  
                      ??_Isr 0037              __end_of_Receive 0AD6                 _BAUDCON1bits 000FB8  
                _Check_Power 0344                        ?_Init 0001         __end_of_Disable_Port 0894  
                      ?_main 0001              __end_of___ftdiv 0676              __end_of___ftmul 0590  
                      _T1CON 000FCD            _InitMiscellaneous 0AF8                        i2l260 0154  
                      i2l261 016C                        i2l342 03DA                        i2l255 0124  
                      i2l280 0244                        i2l272 01E4                        i2l264 0184  
                      i2l256 013C                        i2l281 025C                        i2l273 01FC  
                      i2l265 019C                        i2l339 0380                        i2l292 02D4  
                      i2l284 0274                        i2l276 0214                        i2l268 01B4  
                      i2l293 02EC                        i2l285 028C                        i2l277 022C  
                      i2l269 01CC                        i2l623 0704                        i2l288 02A4  
                      i2l392 00A8                        i2l289 02BC                        i2l388 0078  
                      i2l389 0074                        i2l398 00E2                        i2l681 0644  
                      _TMR1H 000FCF                        _TMR1L 000FCE                        _PORTA 000F80  
                      _PORTB 000F81                        _PORTC 000F82                        _PORTD 000F83  
                      _PORTE 000F84                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
                      u91_41 04AC                        u93_41 04D4                        u86_41 05A0  
                      u88_41 05C8                __CFG_WRT0$OFF 000000     __end_of_InitTransmission 0A76  
              __CFG_WRT1$OFF 000000           ?_InitMiscellaneous 0001               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
         __CFG_MCLRE$EXTMCLR 000000                ___ftpack@sign 0005               __pbitbssCOMRAM 0258  
             __CFG_BOREN$OFF 000000          ??_InitMiscellaneous 006A                        tablat 000FF5  
                      status 000FD8          __end_of_Ignite_Port 0824          __end_of_Mark_Ignite 0AB8  
             ?_InitInterrupt 0001              __initialization 0948                 __end_of_Init 0A18  
               __end_of_main 0AE2             __end_of_InitPort 0AA2             __end_of_InitTris 0A8C  
           __end_of_On_Timer 0AEE    __end_of_InitMiscellaneous 0AFE                       ??_Init 006B  
 __end_of_Evaluate_Reception 0A3A                       ??_main 006D              _slave_addressed 0259  
              __activetblptr 000002                ?_Receive_Dump 0001             __end_of_Transmit 0904  
                     _ADCON0 000FC2                       _ADCON1 000FC1                       _ADCON2 000FC0  
                     _ADRESH 000FC4                       _CCPR1H 000FBF                       _CCPR1L 000FBE  
                     _ANSELA 000F38                       _ANSELB 000F39                       _ANSELC 000F3A  
                     _ANSELD 000F3B                       _ANSELE 000F3C             __end_of___ftpack 0724  
           __end_of___lbtoft 09F6                       i2l1500 05B8                       i2l1450 06D2  
                     i2l1442 0694                       i2l1506 05E0                       i2l1602 07B0  
                     i2l1452 06F0                       i2l1444 069E                       i2l1454 06FA  
                     i2l1446 06BC                       i2l1438 0686                       i2l1526 061E  
                     i2l1552 04EC                       i2l1704 0304                       i2l1570 052E  
                     i2l1546 04C4                       i2l1580 0556                       i2l1566 051E  
                     i2l1822 00AE               __CFG_WDTEN$OFF 000000                       i2l1592 0754  
                     i2l1576 0546                       i2l1736 0476                       i2l1832 00CA  
                     i2l1596 0784                       i2l1828 00C2                       i2l1782 0A2C  
                     i2l1768 0AD2                       _RCREG1 000FAE                       _OSCCON 000FD3  
         __size_of_InitAnsel 0020                       _SPBRG1 000FAF                       _TXREG1 000FAD  
                  ??_InitADC 006A      Check_Power@source_power 0034                    ??_InitVar 006A  
                  ??_Receive 0001                       _Marker 0060               __CFG_XINST$OFF 000000  
               _CCPTMRS0bits 000F49                       ___ftge 0724                    ??___ftdiv 0022  
                  ??___ftmul 0013                       clear_0 094E        ___ftmul@f3_as_product 0017  
         __size_of_Test_Port 0222                 __pdataCOMRAM 004C               ??_Receive_Dump 0001  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                _Ignite_Port 07B4              __CFG_HFOFST$OFF 000000                  _Mark_Ignite 0AA2  
                 __accesstop 0060      __end_of__initialization 0972              __CFG_PBADEN$OFF 000000  
                 ___ftge@ff1 0001                   ___ftge@ff2 0004              ??_InitInterrupt 006A  
              ___rparam_used 000001                   ___ftdiv@f1 001C                   ___ftdiv@f2 001F  
                 ___ftdiv@f3 0026                   ___lbtoft@c 000C                   ___ftmul@f1 000D  
                 ___ftmul@f2 0010               __pcstackCOMRAM 0001        __size_of_Disable_Port 0070  
 __size_of_InitMiscellaneous 0006            __end_of_InitAnsel 0A5A                   __pbssBANK0 0060  
            __CFG_PLLCFG$OFF 000000                    ?_InitPort 0001                    ?_InitTris 0001  
                  ?_On_Timer 0001                 _Disable_Port 0824            __end_of_Test_Port 0344  
         __CFG_CCP2MX$PORTC1 000000                      ?___ftge 0001           __CFG_CCP3MX$PORTB5 000000  
                  ?_Transmit 0001                      _CCP1CON 000FBD                 ?_Check_Power 0001  
                  ?___ftpack 0001                    ?___lbtoft 0009            ?_InitTransmission 0001  
          __CFG_PRICLKEN$OFF 000000           ??_InitTransmission 006A                   ??_InitPort 006A  
                 ??_InitTris 006A                   ??_On_Timer 006A           Check_Power@DAC_out 002B  
                    _InitADC 09AC                      _InitVar 0980              __CFG_PWRTEN$OFF 000000  
                    _Receive 0AC8                      __Hparam 0000         __end_of_Receive_Dump 0AC8  
                    __Lparam 0000              __size_of___ftge 0090                      ___ftdiv 0590  
                    ___ftmul 049C             Receive_Dump@dump 0001                   ??_Transmit 0004  
            __CFG_STVREN$OFF 000000                      __pcinit 0948                   ??___ftpack 0006  
                 ??___lbtoft 000C                      __ramtop 0300                      __ptext0 0AD6  
                    __ptext1 09F6                      __ptext2 0980                      __ptext3 0A76  
                    __ptext4 0A5A                      __ptext5 0A8C                      __ptext6 0AF8  
                    __ptext7 0AEE                      __ptext8 0A3A                      __ptext9 09AC  
                  _T1CONbits 000FCD                 __size_of_Isr 0116      __size_of_Check_Ignition 0044  
                    _overrun 0258         end_of_initialization 0972           _Evaluate_Reception 0A18  
              __Lmediumconst 0000          ?_Evaluate_Reception 0001     Ignite_Port@ignite_number 006A  
                    postinc0 000FEE                      postinc2 000FDE           Check_Power@voltage 002E  
         Transmit@con_status 0003                    _PORTAbits 000F80                    _PORTBbits 000F81  
                  _PORTCbits 000F82                    _PORTDbits 000F83                    _PORTEbits 000F84  
       ??_Evaluate_Reception 0037                    _TRISCbits 000F94                 ?_Ignite_Port 0001  
               ?_Mark_Ignite 0001                  ___ftdiv@exp 0029                  ___ftmul@exp 0016  
             __end_of___ftge 07B4                __pidataCOMRAM 0AFE         __size_of_Check_Power 0158  
        start_initialization 0948                    _InitAnsel 0A3A                  __end_of_Isr 011E  
      __size_of_Receive_Dump 0010              Check_Ignition@c 006C            __size_of_InitPort 0016  
          __size_of_InitTris 0016            __size_of_On_Timer 000C        __end_of_InitInterrupt 0AF8  
                   ??___ftge 0007                    _Test_Port 0122            __size_of_Transmit 0070  
          __size_of___ftpack 00AE            __size_of___lbtoft 0024               _Check_Ignition 0904  
                __pbssCOMRAM 0046                   ?_InitAnsel 0001                __pcstackBANK0 006A  
               _Receive_Dump 0AB8                     ?_InitADC 0001                     ?_InitVar 0001  
                   ?_Receive 0001    __size_of_InitTransmission 001C                    __pintcode 0008  
                 ?_Test_Port 0001                     ?___ftdiv 001C                     ?___ftmul 000D  
     __end_of_Check_Ignition 0948         __size_of_Ignite_Port 0070         __size_of_Mark_Ignite 0016  
                   _PIE1bits 000F9D                     i2u141_47 08AE                     i2u142_47 08BE  
                   i2u143_47 08CE                     i2u144_47 08DE                     i2u145_47 08EE  
                   _PIR1bits 000F9E             __CFG_WDTPS$32768 000000            Check_Power@supply 0031  
                   _VREFCON0 000F42                     _VREFCON1 000F41                   _ADCON0bits 000FC2  
            ?_Check_Ignition 0001                     InitVar@c 006A                  ??_InitAnsel 006A  
            _receive_counter 004A                     _InitPort 0A8C                     _InitTris 0A76  
                   _On_Timer 0AE2            Transmit@operation 0001             __size_of_InitADC 0026  
                   __Hrparam 0000             __size_of_InitVar 002C             __size_of_Receive 000E  
                   __Lrparam 0000            __CFG_P2BMX$PORTD2 000000                  ??_Test_Port 0005  
                   _Transmit 0894             __size_of___ftdiv 00E6             __size_of___ftmul 00F4  
                   ___ftpack 0676                     ___lbtoft 09D2  __size_of_Evaluate_Reception 0022  
                   __ptext10 0904                     __ptext11 0AE2                     __ptext20 0AA2  
                   __ptext12 07B4                     __ptext21 0344                     __ptext13 0824  
                   __ptext22 09D2                     __ptext23 049C                     __ptext15 0AB8  
                   __ptext24 0724                     __ptext16 0AC8                     __ptext25 0590  
                   __ptext17 0A18                     __ptext26 0676                     __ptext18 0122  
                   __ptext19 0894                __size_of_Init 0022                ?_Disable_Port 0001  
              __size_of_main 000C                     _received 0046                     _p_status 004C  
           _InitTransmission 0A5A                     int$flags 004D                ??_Check_Power 002B  
           Transmit@receiver 0004   Disable_Port@disable_number 006A                   _INTCONbits 000FF2  
                   intlevel2 0000               ??_Disable_Port 006A                 _VREFCON2bits 000F40  
                 _RCSTA1bits 000FAB          __end_of_Check_Power 049C            __CFG_T3CMX$PORTC0 000000  
     __size_of_InitInterrupt 000A            __CFG_FOSC$INTIO67 000000  
