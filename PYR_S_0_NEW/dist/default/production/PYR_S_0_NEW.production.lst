

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 18 22:05:26 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  000A70                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _p_status
    49  000A70  30                 	db	48
    50  0000                     _ANSELA	set	3896
    51  0000                     _ANSELB	set	3897
    52  0000                     _ANSELC	set	3898
    53  0000                     _ANSELD	set	3899
    54  0000                     _ANSELE	set	3900
    55  0000                     _CCPTMRS0bits	set	3913
    56  0000                     _VREFCON0	set	3906
    57  0000                     _ADCON0	set	4034
    58  0000                     _ADCON0bits	set	4034
    59  0000                     _ADCON1	set	4033
    60  0000                     _ADCON2	set	4032
    61  0000                     _ADRESH	set	4036
    62  0000                     _BAUDCON1bits	set	4024
    63  0000                     _CCP1CON	set	4029
    64  0000                     _CCPR1H	set	4031
    65  0000                     _CCPR1L	set	4030
    66  0000                     _INTCONbits	set	4082
    67  0000                     _OSCCON	set	4051
    68  0000                     _PIE1bits	set	3997
    69  0000                     _PIR1bits	set	3998
    70  0000                     _PORTA	set	3968
    71  0000                     _PORTAbits	set	3968
    72  0000                     _PORTB	set	3969
    73  0000                     _PORTBbits	set	3969
    74  0000                     _PORTC	set	3970
    75  0000                     _PORTCbits	set	3970
    76  0000                     _PORTD	set	3971
    77  0000                     _PORTDbits	set	3971
    78  0000                     _PORTE	set	3972
    79  0000                     _PORTEbits	set	3972
    80  0000                     _RCREG1	set	4014
    81  0000                     _RCSTA1bits	set	4011
    82  0000                     _SPBRG1	set	4015
    83  0000                     _T1CON	set	4045
    84  0000                     _T1CONbits	set	4045
    85  0000                     _TMR1H	set	4047
    86  0000                     _TMR1L	set	4046
    87  0000                     _TRISA	set	3986
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISC	set	3988
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISE	set	3990
    93  0000                     _TXREG1	set	4013
    94  0000                     _TXSTA1bits	set	4012
    95                           
    96                           ; #config settings
    97  0000                     
    98                           	psect	cinit
    99  0008CC                     __pcinit:
   100                           	opt stack 0
   101  0008CC                     start_initialization:
   102                           	opt stack 0
   103  0008CC                     __initialization:
   104                           	opt stack 0
   105                           
   106                           ; Clear objects allocated to BANK0 (10 bytes)
   107  0008CC  EE00  F060         	lfsr	0,__pbssBANK0
   108  0008D0  0E0A               	movlw	10
   109  0008D2                     clear_0:
   110  0008D2  6AEE               	clrf	postinc0,c
   111  0008D4  06E8               	decf	wreg,f,c
   112  0008D6  E1FD               	bnz	clear_0
   113                           
   114                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   115  0008D8  6A45               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   116                           
   117                           ; Clear objects allocated to COMRAM (5 bytes)
   118  0008DA  6A44               	clrf	(__pbssCOMRAM+4)& (0+255),c
   119  0008DC  6A43               	clrf	(__pbssCOMRAM+3)& (0+255),c
   120  0008DE  6A42               	clrf	(__pbssCOMRAM+2)& (0+255),c
   121  0008E0  6A41               	clrf	(__pbssCOMRAM+1)& (0+255),c
   122  0008E2  6A40               	clrf	__pbssCOMRAM& (0+255),c
   123                           
   124                           ; Initialize objects allocated to COMRAM (1 bytes)
   125                           ; load TBLPTR registers with __pidataCOMRAM
   126  0008E4  0E70               	movlw	low __pidataCOMRAM
   127  0008E6  6EF6               	movwf	tblptrl,c
   128  0008E8  0E0A               	movlw	high __pidataCOMRAM
   129  0008EA  6EF7               	movwf	tblptrh,c
   130  0008EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   131  0008EE  6EF8               	movwf	tblptru,c
   132  0008F0  0009               	tblrd		*+	;fetch initializer
   133  0008F2  CFF5 F046          	movff	tablat,__pdataCOMRAM
   134  0008F6                     end_of_initialization:
   135                           	opt stack 0
   136  0008F6                     __end_of__initialization:
   137                           	opt stack 0
   138  0008F6  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   139  0008F8  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   140  0008FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   141  0008FC  6EF8               	movwf	tblptru,c
   142  0008FE  0100               	movlb	0
   143  000900  EF24  F005         	goto	_main	;jump to C main() function
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           
   151                           	psect	bitbssCOMRAM
   152  000228                     __pbitbssCOMRAM:
   153                           	opt stack 0
   154  000228                     _overrun:
   155                           	opt stack 0
   156  000228                     	ds	1
   157  000229                     _slave_addressed:
   158                           	opt stack 0
   159  000229                     	ds	1
   160                           tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           tblptrl	equ	0xFF6
   163                           tablat	equ	0xFF5
   164                           postinc0	equ	0xFEE
   165                           wreg	equ	0xFE8
   166                           
   167                           	psect	bssCOMRAM
   168  000040                     __pbssCOMRAM:
   169                           	opt stack 0
   170  000040                     _received:
   171                           	opt stack 0
   172  000040                     	ds	4
   173  000044                     _receive_counter:
   174                           	opt stack 0
   175  000044                     	ds	1
   176                           tblptru	equ	0xFF8
   177                           tblptrh	equ	0xFF7
   178                           tblptrl	equ	0xFF6
   179                           tablat	equ	0xFF5
   180                           postinc0	equ	0xFEE
   181                           wreg	equ	0xFE8
   182                           
   183                           	psect	dataCOMRAM
   184  000046                     __pdataCOMRAM:
   185                           	opt stack 0
   186  000046                     _p_status:
   187                           	opt stack 0
   188  000046                     	ds	1
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196                           	psect	bssBANK0
   197  000060                     __pbssBANK0:
   198                           	opt stack 0
   199  000060                     _Marker:
   200                           	opt stack 0
   201  000060                     	ds	10
   202                           tblptru	equ	0xFF8
   203                           tblptrh	equ	0xFF7
   204                           tblptrl	equ	0xFF6
   205                           tablat	equ	0xFF5
   206                           postinc0	equ	0xFEE
   207                           wreg	equ	0xFE8
   208                           
   209                           	psect	cstackBANK0
   210  00006A                     __pcstackBANK0:
   211                           	opt stack 0
   212  00006A                     InitVar@c:
   213                           	opt stack 0
   214  00006A                     Ignite_Port@ignite_number:
   215                           	opt stack 0
   216  00006A                     Disable_Port@disable_number:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x0
   220  00006A                     	ds	1
   221  00006B                     
   222                           ; 0 bytes @ 0x1
   223  00006B                     	ds	1
   224  00006C                     Check_Ignition@c:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0x2
   228  00006C                     	ds	1
   229  00006D                     tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236                           ; 0 bytes @ 0x3
   237                           
   238                           	psect	cstackCOMRAM
   239  000001                     __pcstackCOMRAM:
   240                           	opt stack 0
   241  000001                     ?___ftpack:
   242                           	opt stack 0
   243  000001                     Transmit@operation:
   244                           	opt stack 0
   245  000001                     Receive_Dump@dump:
   246                           	opt stack 0
   247  000001                     ___ftpack@arg:
   248                           	opt stack 0
   249  000001                     ___ftge@ff1:
   250                           	opt stack 0
   251                           
   252                           ; 3 bytes @ 0x0
   253  000001                     	ds	1
   254  000002                     Transmit@port:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x1
   258  000002                     	ds	1
   259  000003                     Transmit@con_status:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x2
   263  000003                     	ds	1
   264  000004                     Transmit@receiver:
   265                           	opt stack 0
   266  000004                     ___ftpack@exp:
   267                           	opt stack 0
   268  000004                     ___ftge@ff2:
   269                           	opt stack 0
   270                           
   271                           ; 3 bytes @ 0x3
   272  000004                     	ds	1
   273  000005                     ___ftpack@sign:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x4
   277  000005                     	ds	1
   278  000006                     ??___ftpack:
   279                           
   280                           ; 0 bytes @ 0x5
   281  000006                     	ds	1
   282  000007                     ??___ftge:
   283                           
   284                           ; 0 bytes @ 0x6
   285  000007                     	ds	2
   286  000009                     ?___lbtoft:
   287                           	opt stack 0
   288                           
   289                           ; 3 bytes @ 0x8
   290  000009                     	ds	3
   291  00000C                     ___lbtoft@c:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0xB
   295  00000C                     	ds	1
   296  00000D                     ?___ftmul:
   297                           	opt stack 0
   298  00000D                     ___ftmul@f1:
   299                           	opt stack 0
   300                           
   301                           ; 3 bytes @ 0xC
   302  00000D                     	ds	3
   303  000010                     ___ftmul@f2:
   304                           	opt stack 0
   305                           
   306                           ; 3 bytes @ 0xF
   307  000010                     	ds	3
   308  000013                     ??___ftmul:
   309                           
   310                           ; 0 bytes @ 0x12
   311  000013                     	ds	3
   312  000016                     ___ftmul@exp:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x15
   316  000016                     	ds	1
   317  000017                     ___ftmul@f3_as_product:
   318                           	opt stack 0
   319                           
   320                           ; 3 bytes @ 0x16
   321  000017                     	ds	3
   322  00001A                     ___ftmul@cntr:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x19
   326  00001A                     	ds	1
   327  00001B                     ___ftmul@sign:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x1A
   331  00001B                     	ds	1
   332  00001C                     ?___ftdiv:
   333                           	opt stack 0
   334  00001C                     ___ftdiv@f1:
   335                           	opt stack 0
   336                           
   337                           ; 3 bytes @ 0x1B
   338  00001C                     	ds	3
   339  00001F                     ___ftdiv@f2:
   340                           	opt stack 0
   341                           
   342                           ; 3 bytes @ 0x1E
   343  00001F                     	ds	3
   344  000022                     ??___ftdiv:
   345                           
   346                           ; 0 bytes @ 0x21
   347  000022                     	ds	3
   348  000025                     ___ftdiv@cntr:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x24
   352  000025                     	ds	1
   353  000026                     ___ftdiv@f3:
   354                           	opt stack 0
   355                           
   356                           ; 3 bytes @ 0x25
   357  000026                     	ds	3
   358  000029                     ___ftdiv@exp:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x28
   362  000029                     	ds	1
   363  00002A                     ___ftdiv@sign:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x29
   367  00002A                     	ds	1
   368  00002B                     Check_Power@voltage:
   369                           	opt stack 0
   370                           
   371                           ; 3 bytes @ 0x2A
   372  00002B                     	ds	3
   373  00002E                     Check_Power@source_power:
   374                           	opt stack 0
   375                           
   376                           ; 3 bytes @ 0x2D
   377  00002E                     	ds	3
   378  000031                     ??_Isr:
   379                           
   380                           ; 0 bytes @ 0x30
   381  000031                     	ds	14
   382  00003F                     Isr@c:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x3E
   386  00003F                     	ds	1
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 74 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;		None               void
   406 ;; Registers used:
   407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   413 ;;      Params:         0       0       0       0
   414 ;;      Locals:         0       0       0       0
   415 ;;      Temps:          0       0       0       0
   416 ;;      Totals:         0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels required when called:    7
   419 ;; This function calls:
   420 ;;		_Check_Ignition
   421 ;;		_Init
   422 ;; This function is called by:
   423 ;;		Startup code after reset
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text0
   428  000A48                     __ptext0:
   429                           	opt stack 0
   430  000A48                     _main:
   431                           	opt stack 24
   432                           
   433                           ;main.c: 75: Init();
   434                           
   435                           ;incstack = 0
   436  000A48  ECAA  F004         	call	_Init	;wreg free
   437  000A4C                     l21:
   438                           
   439                           ;main.c: 77: Check_Ignition();
   440  000A4C  EC44  F004         	call	_Check_Ignition	;wreg free
   441                           
   442                           ;main.c: 78: __nop();
   443  000A50  F000               	nop	
   444  000A52  D7FC               	goto	l21
   445  000A54                     __end_of_main:
   446                           	opt stack 0
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           
   454 ;; *************** function _Init *****************
   455 ;; Defined at:
   456 ;;		line 5 in file "init.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;		None               void
   463 ;; Registers used:
   464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   470 ;;      Params:         0       0       0       0
   471 ;;      Locals:         0       0       0       0
   472 ;;      Temps:          0       0       0       0
   473 ;;      Totals:         0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    6
   477 ;; This function calls:
   478 ;;		_InitADC
   479 ;;		_InitAnsel
   480 ;;		_InitInterrupt
   481 ;;		_InitMiscellaneous
   482 ;;		_InitPort
   483 ;;		_InitTransmission
   484 ;;		_InitTris
   485 ;;		_InitVar
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text1
   492  000954                     __ptext1:
   493                           	opt stack 0
   494  000954                     _Init:
   495                           	opt stack 24
   496                           
   497                           ;init.c: 6: InitPort();
   498                           
   499                           ;incstack = 0
   500  000954  ECF5  F004         	call	_InitPort	;wreg free
   501                           
   502                           ;init.c: 7: InitTris();
   503  000958  ECEA  F004         	call	_InitTris	;wreg free
   504                           
   505                           ;init.c: 8: InitAnsel();
   506  00095C  ECCC  F004         	call	_InitAnsel	;wreg free
   507                           
   508                           ;init.c: 9: InitMiscellaneous();
   509  000960  EC35  F005         	call	_InitMiscellaneous	;wreg free
   510                           
   511                           ;init.c: 10: InitTransmission();
   512  000964  ECDC  F004         	call	_InitTransmission	;wreg free
   513                           
   514                           ;init.c: 11: InitADC();
   515  000968  EC0B  F005         	call	_InitADC	;wreg free
   516                           
   517                           ;init.c: 12: InitVar();
   518  00096C  EC82  F004         	call	_InitVar	;wreg free
   519                           
   520                           ;init.c: 13: InitInterrupt();
   521  000970  EC30  F005         	call	_InitInterrupt	;wreg free
   522  000974  0012               	return		;funcret
   523  000976                     __end_of_Init:
   524                           	opt stack 0
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           
   532 ;; *************** function _InitVar *****************
   533 ;; Defined at:
   534 ;;		line 85 in file "init.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  c               1    0[BANK0 ] unsigned char 
   539 ;; Return value:  Size  Location     Type
   540 ;;		None               void
   541 ;; Registers used:
   542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   548 ;;      Params:         0       0       0       0
   549 ;;      Locals:         0       1       0       0
   550 ;;      Temps:          0       0       0       0
   551 ;;      Totals:         0       1       0       0
   552 ;;Total ram usage:        1 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    5
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_Init
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text2
   563  000904                     __ptext2:
   564                           	opt stack 0
   565  000904                     _InitVar:
   566                           	opt stack 24
   567                           
   568                           ;init.c: 86: for(unsigned char c = 0; c < 10; c++) {
   569                           
   570                           ;incstack = 0
   571  000904  0E00               	movlw	0
   572  000906  0100               	movlb	0	; () banked
   573  000908  6F6A               	movwf	InitVar@c& (0+255),b
   574  00090A                     l1625:
   575                           
   576                           ; BSR set to: 0
   577  00090A  0E09               	movlw	9
   578  00090C  0100               	movlb	0	; () banked
   579  00090E  656A               	cpfsgt	InitVar@c& (0+255),b
   580  000910  D001               	goto	l1629
   581  000912  0012               	return	
   582  000914                     l1629:
   583                           
   584                           ; BSR set to: 0
   585                           ;init.c: 87: Marker[c] = 0;
   586  000914  0100               	movlb	0	; () banked
   587  000916  516A               	movf	InitVar@c& (0+255),w,b
   588  000918  0D01               	mullw	1
   589  00091A  0E60               	movlw	low _Marker
   590  00091C  24F3               	addwf	prodl,w,c
   591  00091E  6ED9               	movwf	fsr2l,c
   592  000920  0E00               	movlw	high _Marker
   593  000922  20F4               	addwfc	prodh,w,c
   594  000924  6EDA               	movwf	fsr2h,c
   595  000926  0E00               	movlw	0
   596  000928  6EDF               	movwf	indf2,c
   597                           
   598                           ; BSR set to: 0
   599  00092A  0100               	movlb	0	; () banked
   600  00092C  2B6A               	incf	InitVar@c& (0+255),f,b
   601  00092E  D7ED               	goto	l1625
   602  000930                     __end_of_InitVar:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           prodh	equ	0xFF4
   609                           prodl	equ	0xFF3
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           indf2	equ	0xFDF
   613                           fsr2h	equ	0xFDA
   614                           fsr2l	equ	0xFD9
   615                           
   616 ;; *************** function _InitTris *****************
   617 ;; Defined at:
   618 ;;		line 24 in file "init.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;		None               void
   625 ;; Registers used:
   626 ;;		wreg, status,2
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   632 ;;      Params:         0       0       0       0
   633 ;;      Locals:         0       0       0       0
   634 ;;      Temps:          0       0       0       0
   635 ;;      Totals:         0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    5
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_Init
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text3
   647  0009D4                     __ptext3:
   648                           	opt stack 0
   649  0009D4                     _InitTris:
   650                           	opt stack 24
   651                           
   652                           ;init.c: 25: TRISA = 0b00000101;
   653                           
   654                           ; BSR set to: 0
   655                           ;incstack = 0
   656  0009D4  0E05               	movlw	5
   657  0009D6  6E92               	movwf	3986,c	;volatile
   658                           
   659                           ;init.c: 26: TRISB = 0b00010101;
   660  0009D8  0E15               	movlw	21
   661  0009DA  6E93               	movwf	3987,c	;volatile
   662                           
   663                           ;init.c: 27: TRISC = 0b00010100;
   664  0009DC  0E14               	movlw	20
   665  0009DE  6E94               	movwf	3988,c	;volatile
   666                           
   667                           ;init.c: 28: TRISD = 0b00000101;
   668  0009E0  0E05               	movlw	5
   669  0009E2  6E95               	movwf	3989,c	;volatile
   670                           
   671                           ;init.c: 29: TRISE = 0b00000101;
   672  0009E4  0E05               	movlw	5
   673  0009E6  6E96               	movwf	3990,c	;volatile
   674  0009E8  0012               	return		;funcret
   675  0009EA                     __end_of_InitTris:
   676                           	opt stack 0
   677                           tblptru	equ	0xFF8
   678                           tblptrh	equ	0xFF7
   679                           tblptrl	equ	0xFF6
   680                           tablat	equ	0xFF5
   681                           prodh	equ	0xFF4
   682                           prodl	equ	0xFF3
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           indf2	equ	0xFDF
   686                           fsr2h	equ	0xFDA
   687                           fsr2l	equ	0xFD9
   688                           
   689 ;; *************** function _InitTransmission *****************
   690 ;; Defined at:
   691 ;;		line 44 in file "init.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;		None               void
   698 ;; Registers used:
   699 ;;		wreg, status,2
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   705 ;;      Params:         0       0       0       0
   706 ;;      Locals:         0       0       0       0
   707 ;;      Temps:          0       0       0       0
   708 ;;      Totals:         0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    5
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_Init
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text4
   720  0009B8                     __ptext4:
   721                           	opt stack 0
   722  0009B8                     _InitTransmission:
   723                           	opt stack 24
   724                           
   725                           ;init.c: 46: TXSTA1bits.SYNC = 0;
   726                           
   727                           ;incstack = 0
   728  0009B8  98AC               	bcf	4012,4,c	;volatile
   729                           
   730                           ;init.c: 47: TXSTA1bits.BRGH = 1;
   731  0009BA  84AC               	bsf	4012,2,c	;volatile
   732                           
   733                           ;init.c: 48: BAUDCON1bits.BRG16 = 0;
   734  0009BC  96B8               	bcf	4024,3,c	;volatile
   735                           
   736                           ;init.c: 49: SPBRG1 = 25;
   737  0009BE  0E19               	movlw	25
   738  0009C0  6EAF               	movwf	4015,c	;volatile
   739                           
   740                           ;init.c: 50: TRISCbits.RC6 = 1;
   741  0009C2  8C94               	bsf	3988,6,c	;volatile
   742                           
   743                           ;init.c: 51: TRISCbits.RC7 = 1;
   744  0009C4  8E94               	bsf	3988,7,c	;volatile
   745                           
   746                           ;init.c: 52: RCSTA1bits.SPEN = 1;
   747  0009C6  8EAB               	bsf	4011,7,c	;volatile
   748                           
   749                           ;init.c: 53: TXSTA1bits.TX9 = 1;
   750  0009C8  8CAC               	bsf	4012,6,c	;volatile
   751                           
   752                           ;init.c: 54: TXSTA1bits.TXEN = 1;
   753  0009CA  8AAC               	bsf	4012,5,c	;volatile
   754                           
   755                           ;init.c: 55: RCSTA1bits.RC9 = 1;
   756  0009CC  8CAB               	bsf	4011,6,c	;volatile
   757                           
   758                           ;init.c: 56: RCSTA1bits.CREN = 1;
   759  0009CE  88AB               	bsf	4011,4,c	;volatile
   760                           
   761                           ;init.c: 57: TRISCbits.RC6 = 0;
   762  0009D0  9C94               	bcf	3988,6,c	;volatile
   763  0009D2  0012               	return		;funcret
   764  0009D4                     __end_of_InitTransmission:
   765                           	opt stack 0
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           prodh	equ	0xFF4
   771                           prodl	equ	0xFF3
   772                           postinc0	equ	0xFEE
   773                           wreg	equ	0xFE8
   774                           indf2	equ	0xFDF
   775                           fsr2h	equ	0xFDA
   776                           fsr2l	equ	0xFD9
   777                           
   778 ;; *************** function _InitPort *****************
   779 ;; Defined at:
   780 ;;		line 16 in file "init.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;		None               void
   787 ;; Registers used:
   788 ;;		wreg, status,2
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   794 ;;      Params:         0       0       0       0
   795 ;;      Locals:         0       0       0       0
   796 ;;      Temps:          0       0       0       0
   797 ;;      Totals:         0       0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    5
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_Init
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text5
   809  0009EA                     __ptext5:
   810                           	opt stack 0
   811  0009EA                     _InitPort:
   812                           	opt stack 24
   813                           
   814                           ;init.c: 17: PORTA = 0b00000000;
   815                           
   816                           ;incstack = 0
   817  0009EA  0E00               	movlw	0
   818  0009EC  6E80               	movwf	3968,c	;volatile
   819                           
   820                           ;init.c: 18: PORTB = 0b00000000;
   821  0009EE  0E00               	movlw	0
   822  0009F0  6E81               	movwf	3969,c	;volatile
   823                           
   824                           ;init.c: 19: PORTC = 0b00000000;
   825  0009F2  0E00               	movlw	0
   826  0009F4  6E82               	movwf	3970,c	;volatile
   827                           
   828                           ;init.c: 20: PORTD = 0b00000000;
   829  0009F6  0E00               	movlw	0
   830  0009F8  6E83               	movwf	3971,c	;volatile
   831                           
   832                           ;init.c: 21: PORTE = 0b00000000;
   833  0009FA  0E00               	movlw	0
   834  0009FC  6E84               	movwf	3972,c	;volatile
   835  0009FE  0012               	return		;funcret
   836  000A00                     __end_of_InitPort:
   837                           	opt stack 0
   838                           tblptru	equ	0xFF8
   839                           tblptrh	equ	0xFF7
   840                           tblptrl	equ	0xFF6
   841                           tablat	equ	0xFF5
   842                           prodh	equ	0xFF4
   843                           prodl	equ	0xFF3
   844                           postinc0	equ	0xFEE
   845                           wreg	equ	0xFE8
   846                           indf2	equ	0xFDF
   847                           fsr2h	equ	0xFDA
   848                           fsr2l	equ	0xFD9
   849                           
   850 ;; *************** function _InitMiscellaneous *****************
   851 ;; Defined at:
   852 ;;		line 40 in file "init.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;		None               void
   859 ;; Registers used:
   860 ;;		wreg, status,2
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   866 ;;      Params:         0       0       0       0
   867 ;;      Locals:         0       0       0       0
   868 ;;      Temps:          0       0       0       0
   869 ;;      Totals:         0       0       0       0
   870 ;;Total ram usage:        0 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    5
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_Init
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text6
   881  000A6A                     __ptext6:
   882                           	opt stack 0
   883  000A6A                     _InitMiscellaneous:
   884                           	opt stack 24
   885                           
   886                           ;init.c: 41: OSCCON = 0b01010011;
   887                           
   888                           ;incstack = 0
   889  000A6A  0E53               	movlw	83
   890  000A6C  6ED3               	movwf	4051,c	;volatile
   891  000A6E  0012               	return		;funcret
   892  000A70                     __end_of_InitMiscellaneous:
   893                           	opt stack 0
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           prodh	equ	0xFF4
   899                           prodl	equ	0xFF3
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           indf2	equ	0xFDF
   903                           fsr2h	equ	0xFDA
   904                           fsr2l	equ	0xFD9
   905                           
   906 ;; *************** function _InitInterrupt *****************
   907 ;; Defined at:
   908 ;;		line 78 in file "init.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;		None               void
   915 ;; Registers used:
   916 ;;		None
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   922 ;;      Params:         0       0       0       0
   923 ;;      Locals:         0       0       0       0
   924 ;;      Temps:          0       0       0       0
   925 ;;      Totals:         0       0       0       0
   926 ;;Total ram usage:        0 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    5
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_Init
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text7
   937  000A60                     __ptext7:
   938                           	opt stack 0
   939  000A60                     _InitInterrupt:
   940                           	opt stack 24
   941                           
   942                           ;init.c: 79: INTCONbits.GIE = 1;
   943                           
   944                           ;incstack = 0
   945  000A60  8EF2               	bsf	intcon,7,c	;volatile
   946                           
   947                           ;init.c: 80: INTCONbits.PEIE = 1;
   948  000A62  8CF2               	bsf	intcon,6,c	;volatile
   949                           
   950                           ;init.c: 81: PIE1bits.RCIE = 1;
   951  000A64  8A9D               	bsf	3997,5,c	;volatile
   952                           
   953                           ;init.c: 82: PIE1bits.CCP1IE = 1;
   954  000A66  849D               	bsf	3997,2,c	;volatile
   955  000A68  0012               	return		;funcret
   956  000A6A                     __end_of_InitInterrupt:
   957                           	opt stack 0
   958                           tblptru	equ	0xFF8
   959                           tblptrh	equ	0xFF7
   960                           tblptrl	equ	0xFF6
   961                           tablat	equ	0xFF5
   962                           prodh	equ	0xFF4
   963                           prodl	equ	0xFF3
   964                           intcon	equ	0xFF2
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           indf2	equ	0xFDF
   968                           fsr2h	equ	0xFDA
   969                           fsr2l	equ	0xFD9
   970                           
   971 ;; *************** function _InitAnsel *****************
   972 ;; Defined at:
   973 ;;		line 32 in file "init.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;		None               void
   980 ;; Registers used:
   981 ;;		wreg, status,2
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   987 ;;      Params:         0       0       0       0
   988 ;;      Locals:         0       0       0       0
   989 ;;      Temps:          0       0       0       0
   990 ;;      Totals:         0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    5
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_Init
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text8
  1002  000998                     __ptext8:
  1003                           	opt stack 0
  1004  000998                     _InitAnsel:
  1005                           	opt stack 24
  1006                           
  1007                           ;init.c: 33: ANSELA = 0b00000000;
  1008                           
  1009                           ;incstack = 0
  1010  000998  0E00               	movlw	0
  1011  00099A  010F               	movlb	15	; () banked
  1012  00099C  6F38               	movwf	56,b	;volatile
  1013                           
  1014                           ;init.c: 34: ANSELB = 0b00000001;
  1015  00099E  0E01               	movlw	1
  1016  0009A0  010F               	movlb	15	; () banked
  1017  0009A2  6F39               	movwf	57,b	;volatile
  1018                           
  1019                           ;init.c: 35: ANSELC = 0b00000000;
  1020  0009A4  0E00               	movlw	0
  1021  0009A6  010F               	movlb	15	; () banked
  1022  0009A8  6F3A               	movwf	58,b	;volatile
  1023                           
  1024                           ;init.c: 36: ANSELD = 0b00000000;
  1025  0009AA  0E00               	movlw	0
  1026  0009AC  010F               	movlb	15	; () banked
  1027  0009AE  6F3B               	movwf	59,b	;volatile
  1028                           
  1029                           ;init.c: 37: ANSELE = 0b00000000;
  1030  0009B0  0E00               	movlw	0
  1031  0009B2  010F               	movlb	15	; () banked
  1032  0009B4  6F3C               	movwf	60,b	;volatile
  1033                           
  1034                           ; BSR set to: 15
  1035  0009B6  0012               	return		;funcret
  1036  0009B8                     __end_of_InitAnsel:
  1037                           	opt stack 0
  1038                           tblptru	equ	0xFF8
  1039                           tblptrh	equ	0xFF7
  1040                           tblptrl	equ	0xFF6
  1041                           tablat	equ	0xFF5
  1042                           prodh	equ	0xFF4
  1043                           prodl	equ	0xFF3
  1044                           intcon	equ	0xFF2
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           indf2	equ	0xFDF
  1048                           fsr2h	equ	0xFDA
  1049                           fsr2l	equ	0xFD9
  1050                           
  1051 ;; *************** function _InitADC *****************
  1052 ;; Defined at:
  1053 ;;		line 60 in file "init.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;		None               void
  1060 ;; Registers used:
  1061 ;;		wreg, status,2
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1067 ;;      Params:         0       0       0       0
  1068 ;;      Locals:         0       0       0       0
  1069 ;;      Temps:          0       0       0       0
  1070 ;;      Totals:         0       0       0       0
  1071 ;;Total ram usage:        0 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    5
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_Init
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text9
  1082  000A16                     __ptext9:
  1083                           	opt stack 0
  1084  000A16                     _InitADC:
  1085                           	opt stack 24
  1086                           
  1087                           ;init.c: 62: VREFCON0 = 0b10110000;
  1088                           
  1089                           ; BSR set to: 15
  1090                           ;incstack = 0
  1091  000A16  0EB0               	movlw	176
  1092  000A18  010F               	movlb	15	; () banked
  1093  000A1A  6F42               	movwf	66,b	;volatile
  1094                           
  1095                           ;init.c: 64: ADCON1 = 0b00001000;
  1096  000A1C  0E08               	movlw	8
  1097  000A1E  6EC1               	movwf	4033,c	;volatile
  1098                           
  1099                           ;init.c: 65: ADCON2 = 0b00000011;
  1100  000A20  0E03               	movlw	3
  1101  000A22  6EC0               	movwf	4032,c	;volatile
  1102                           
  1103                           ;init.c: 66: ADCON0 = 0b00110001;
  1104  000A24  0E31               	movlw	49
  1105  000A26  6EC2               	movwf	4034,c	;volatile
  1106                           
  1107                           ; BSR set to: 15
  1108  000A28  0012               	return		;funcret
  1109  000A2A                     __end_of_InitADC:
  1110                           	opt stack 0
  1111                           tblptru	equ	0xFF8
  1112                           tblptrh	equ	0xFF7
  1113                           tblptrl	equ	0xFF6
  1114                           tablat	equ	0xFF5
  1115                           prodh	equ	0xFF4
  1116                           prodl	equ	0xFF3
  1117                           intcon	equ	0xFF2
  1118                           postinc0	equ	0xFEE
  1119                           wreg	equ	0xFE8
  1120                           indf2	equ	0xFDF
  1121                           fsr2h	equ	0xFDA
  1122                           fsr2l	equ	0xFD9
  1123                           
  1124 ;; *************** function _Check_Ignition *****************
  1125 ;; Defined at:
  1126 ;;		line 156 in file "ignition.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  c               1    2[BANK0 ] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;		None               void
  1133 ;; Registers used:
  1134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1140 ;;      Params:         0       0       0       0
  1141 ;;      Locals:         0       1       0       0
  1142 ;;      Temps:          0       1       0       0
  1143 ;;      Totals:         0       2       0       0
  1144 ;;Total ram usage:        2 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    6
  1147 ;; This function calls:
  1148 ;;		_Disable_Port
  1149 ;;		_Ignite_Port
  1150 ;;		_On_Timer
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text10
  1157  000888                     __ptext10:
  1158                           	opt stack 0
  1159  000888                     _Check_Ignition:
  1160                           	opt stack 24
  1161                           
  1162                           ;ignition.c: 157: for(unsigned char c = 0; c < 10; c++) {
  1163                           
  1164                           ; BSR set to: 15
  1165                           ;incstack = 0
  1166  000888  0E00               	movlw	0
  1167  00088A  0100               	movlb	0	; () banked
  1168  00088C  6F6C               	movwf	Check_Ignition@c& (0+255),b
  1169  00088E                     l1721:
  1170                           
  1171                           ; BSR set to: 0
  1172  00088E  0E09               	movlw	9
  1173  000890  0100               	movlb	0	; () banked
  1174  000892  656C               	cpfsgt	Check_Ignition@c& (0+255),b
  1175  000894  D001               	goto	l1725
  1176  000896  0012               	return	
  1177  000898                     l1725:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;ignition.c: 158: if(Marker[c] == 1) {
  1181  000898  0100               	movlb	0	; () banked
  1182  00089A  516C               	movf	Check_Ignition@c& (0+255),w,b
  1183  00089C  0D01               	mullw	1
  1184  00089E  0E60               	movlw	low _Marker
  1185  0008A0  24F3               	addwf	prodl,w,c
  1186  0008A2  6ED9               	movwf	fsr2l,c
  1187  0008A4  0E00               	movlw	high _Marker
  1188  0008A6  20F4               	addwfc	prodh,w,c
  1189  0008A8  6EDA               	movwf	fsr2h,c
  1190  0008AA  04DE               	decf	postinc2,w,c
  1191  0008AC  A4D8               	btfss	status,2,c
  1192  0008AE  D007               	goto	l1731
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;ignition.c: 159: Ignite_Port(c);
  1196  0008B0  0100               	movlb	0	; () banked
  1197  0008B2  516C               	movf	Check_Ignition@c& (0+255),w,b
  1198  0008B4  EC9C  F003         	call	_Ignite_Port
  1199                           
  1200                           ;ignition.c: 160: On_Timer();
  1201  0008B8  EC2A  F005         	call	_On_Timer	;wreg free
  1202                           
  1203                           ;ignition.c: 161: } else {
  1204  0008BC  D004               	goto	l1733
  1205  0008BE                     l1731:
  1206                           
  1207                           ;ignition.c: 162: Disable_Port(c);
  1208  0008BE  0100               	movlb	0	; () banked
  1209  0008C0  516C               	movf	Check_Ignition@c& (0+255),w,b
  1210  0008C2  ECD4  F003         	call	_Disable_Port
  1211  0008C6                     l1733:
  1212  0008C6  0100               	movlb	0	; () banked
  1213  0008C8  2B6C               	incf	Check_Ignition@c& (0+255),f,b
  1214  0008CA  D7E1               	goto	l1721
  1215  0008CC                     __end_of_Check_Ignition:
  1216                           	opt stack 0
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           prodh	equ	0xFF4
  1222                           prodl	equ	0xFF3
  1223                           intcon	equ	0xFF2
  1224                           postinc0	equ	0xFEE
  1225                           wreg	equ	0xFE8
  1226                           indf2	equ	0xFDF
  1227                           postinc2	equ	0xFDE
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           status	equ	0xFD8
  1231                           
  1232 ;; *************** function _On_Timer *****************
  1233 ;; Defined at:
  1234 ;;		line 5 in file "ignition.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;		None               void
  1241 ;; Registers used:
  1242 ;;		wreg, status,2
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1248 ;;      Params:         0       0       0       0
  1249 ;;      Locals:         0       0       0       0
  1250 ;;      Temps:          0       0       0       0
  1251 ;;      Totals:         0       0       0       0
  1252 ;;Total ram usage:        0 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    5
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_Check_Ignition
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text11
  1263  000A54                     __ptext11:
  1264                           	opt stack 0
  1265  000A54                     _On_Timer:
  1266                           	opt stack 24
  1267                           
  1268                           ;ignition.c: 6: TMR1L = 0;
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;incstack = 0
  1272  000A54  0E00               	movlw	0
  1273  000A56  6ECE               	movwf	4046,c	;volatile
  1274                           
  1275                           ;ignition.c: 7: TMR1H = 0;
  1276  000A58  0E00               	movlw	0
  1277  000A5A  6ECF               	movwf	4047,c	;volatile
  1278                           
  1279                           ;ignition.c: 8: T1CONbits.TMR1ON = 1;
  1280  000A5C  80CD               	bsf	4045,0,c	;volatile
  1281  000A5E  0012               	return		;funcret
  1282  000A60                     __end_of_On_Timer:
  1283                           	opt stack 0
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           prodh	equ	0xFF4
  1289                           prodl	equ	0xFF3
  1290                           intcon	equ	0xFF2
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           indf2	equ	0xFDF
  1294                           postinc2	equ	0xFDE
  1295                           fsr2h	equ	0xFDA
  1296                           fsr2l	equ	0xFD9
  1297                           status	equ	0xFD8
  1298                           
  1299 ;; *************** function _Ignite_Port *****************
  1300 ;; Defined at:
  1301 ;;		line 86 in file "ignition.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  ignite_numbe    1    wreg     unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  ignite_numbe    1    0[BANK0 ] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;		None               void
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1315 ;;      Params:         0       0       0       0
  1316 ;;      Locals:         0       1       0       0
  1317 ;;      Temps:          0       0       0       0
  1318 ;;      Totals:         0       1       0       0
  1319 ;;Total ram usage:        1 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    5
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_Check_Ignition
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text12
  1330  000738                     __ptext12:
  1331                           	opt stack 0
  1332  000738                     _Ignite_Port:
  1333                           	opt stack 24
  1334                           
  1335                           ;incstack = 0
  1336                           ;Ignite_Port@ignite_number stored from wreg
  1337  000738  0100               	movlb	0	; () banked
  1338  00073A  6F6A               	movwf	Ignite_Port@ignite_number& (0+255),b
  1339                           
  1340                           ;ignition.c: 87: switch(ignite_number) {
  1341  00073C  D014               	goto	l1691
  1342  00073E                     l296:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;ignition.c: 89: PORTCbits.RC5 = 1;
  1346  00073E  8A82               	bsf	3970,5,c	;volatile
  1347                           
  1348                           ;ignition.c: 90: break;
  1349  000740  0012               	return	
  1350  000742                     l298:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;ignition.c: 92: PORTDbits.RD3 = 1;
  1354  000742  8683               	bsf	3971,3,c	;volatile
  1355                           
  1356                           ;ignition.c: 93: break;
  1357  000744  0012               	return	
  1358  000746                     l299:
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;ignition.c: 95: PORTDbits.RD1 = 1;
  1362  000746  8283               	bsf	3971,1,c	;volatile
  1363                           
  1364                           ;ignition.c: 96: break;
  1365  000748  0012               	return	
  1366  00074A                     l300:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;ignition.c: 98: PORTCbits.RC3 = 1;
  1370  00074A  8682               	bsf	3970,3,c	;volatile
  1371                           
  1372                           ;ignition.c: 99: break;
  1373  00074C  0012               	return	
  1374  00074E                     l301:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;ignition.c: 101: PORTCbits.RC1 = 1;
  1378  00074E  8282               	bsf	3970,1,c	;volatile
  1379                           
  1380                           ;ignition.c: 102: break;
  1381  000750  0012               	return	
  1382  000752                     l302:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;ignition.c: 104: PORTEbits.RE1 = 1;
  1386  000752  8284               	bsf	3972,1,c	;volatile
  1387                           
  1388                           ;ignition.c: 105: break;
  1389  000754  0012               	return	
  1390  000756                     l303:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;ignition.c: 107: PORTAbits.RA5 = 1;
  1394  000756  8A80               	bsf	3968,5,c	;volatile
  1395                           
  1396                           ;ignition.c: 108: break;
  1397  000758  0012               	return	
  1398  00075A                     l304:
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;ignition.c: 110: PORTBbits.RB5 = 1;
  1402  00075A  8A81               	bsf	3969,5,c	;volatile
  1403                           
  1404                           ;ignition.c: 111: break;
  1405  00075C  0012               	return	
  1406  00075E                     l305:
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;ignition.c: 113: PORTAbits.RA3 = 1;
  1410  00075E  8680               	bsf	3968,3,c	;volatile
  1411                           
  1412                           ;ignition.c: 114: break;
  1413  000760  0012               	return	
  1414  000762                     l306:
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;ignition.c: 116: PORTAbits.RA1 = 1;
  1418  000762  8280               	bsf	3968,1,c	;volatile
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;ignition.c: 118: }
  1422                           
  1423                           ;ignition.c: 117: break;
  1424  000764  0012               	return	
  1425  000766                     l1691:
  1426  000766  0100               	movlb	0	; () banked
  1427  000768  516A               	movf	Ignite_Port@ignite_number& (0+255),w,b
  1428                           
  1429                           ; Switch size 1, requested type "space"
  1430                           ; Number of cases is 10, Range of values is 0 to 9
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte           31    16 (average)
  1434                           ;	Chosen strategy is simple_byte
  1435  00076A  0A00               	xorlw	0	; case 0
  1436  00076C  B4D8               	btfsc	status,2,c
  1437  00076E  D7E7               	goto	l296
  1438  000770  0A01               	xorlw	1	; case 1
  1439  000772  B4D8               	btfsc	status,2,c
  1440  000774  D7E6               	goto	l298
  1441  000776  0A03               	xorlw	3	; case 2
  1442  000778  B4D8               	btfsc	status,2,c
  1443  00077A  D7E5               	goto	l299
  1444  00077C  0A01               	xorlw	1	; case 3
  1445  00077E  B4D8               	btfsc	status,2,c
  1446  000780  D7E4               	goto	l300
  1447  000782  0A07               	xorlw	7	; case 4
  1448  000784  B4D8               	btfsc	status,2,c
  1449  000786  D7E3               	goto	l301
  1450  000788  0A01               	xorlw	1	; case 5
  1451  00078A  B4D8               	btfsc	status,2,c
  1452  00078C  D7E2               	goto	l302
  1453  00078E  0A03               	xorlw	3	; case 6
  1454  000790  B4D8               	btfsc	status,2,c
  1455  000792  D7E1               	goto	l303
  1456  000794  0A01               	xorlw	1	; case 7
  1457  000796  B4D8               	btfsc	status,2,c
  1458  000798  D7E0               	goto	l304
  1459  00079A  0A0F               	xorlw	15	; case 8
  1460  00079C  B4D8               	btfsc	status,2,c
  1461  00079E  D7DF               	goto	l305
  1462  0007A0  0A01               	xorlw	1	; case 9
  1463  0007A2  A4D8               	btfss	status,2,c
  1464  0007A4  0012               	return	
  1465  0007A6  D7DD               	goto	l306
  1466  0007A8                     __end_of_Ignite_Port:
  1467                           	opt stack 0
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           prodh	equ	0xFF4
  1473                           prodl	equ	0xFF3
  1474                           intcon	equ	0xFF2
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           indf2	equ	0xFDF
  1478                           postinc2	equ	0xFDE
  1479                           fsr2h	equ	0xFDA
  1480                           fsr2l	equ	0xFD9
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function _Disable_Port *****************
  1484 ;; Defined at:
  1485 ;;		line 121 in file "ignition.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  disable_numb    1    wreg     unsigned char 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  disable_numb    1    0[BANK0 ] unsigned char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;		None               void
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1499 ;;      Params:         0       0       0       0
  1500 ;;      Locals:         0       1       0       0
  1501 ;;      Temps:          0       0       0       0
  1502 ;;      Totals:         0       1       0       0
  1503 ;;Total ram usage:        1 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    5
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_Check_Ignition
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text13
  1514  0007A8                     __ptext13:
  1515                           	opt stack 0
  1516  0007A8                     _Disable_Port:
  1517                           	opt stack 24
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;incstack = 0
  1521                           ;Disable_Port@disable_number stored from wreg
  1522  0007A8  0100               	movlb	0	; () banked
  1523  0007AA  6F6A               	movwf	Disable_Port@disable_number& (0+255),b
  1524                           
  1525                           ;ignition.c: 122: switch(disable_number) {
  1526  0007AC  D014               	goto	l1697
  1527  0007AE                     l311:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;ignition.c: 124: PORTCbits.RC5 = 0;
  1531  0007AE  9A82               	bcf	3970,5,c	;volatile
  1532                           
  1533                           ;ignition.c: 125: break;
  1534  0007B0  0012               	return	
  1535  0007B2                     l313:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;ignition.c: 127: PORTDbits.RD3 = 0;
  1539  0007B2  9683               	bcf	3971,3,c	;volatile
  1540                           
  1541                           ;ignition.c: 128: break;
  1542  0007B4  0012               	return	
  1543  0007B6                     l314:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;ignition.c: 130: PORTDbits.RD1 = 0;
  1547  0007B6  9283               	bcf	3971,1,c	;volatile
  1548                           
  1549                           ;ignition.c: 131: break;
  1550  0007B8  0012               	return	
  1551  0007BA                     l315:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;ignition.c: 133: PORTCbits.RC3 = 0;
  1555  0007BA  9682               	bcf	3970,3,c	;volatile
  1556                           
  1557                           ;ignition.c: 134: break;
  1558  0007BC  0012               	return	
  1559  0007BE                     l316:
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;ignition.c: 136: PORTCbits.RC1 = 0;
  1563  0007BE  9282               	bcf	3970,1,c	;volatile
  1564                           
  1565                           ;ignition.c: 137: break;
  1566  0007C0  0012               	return	
  1567  0007C2                     l317:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;ignition.c: 139: PORTEbits.RE1 = 0;
  1571  0007C2  9284               	bcf	3972,1,c	;volatile
  1572                           
  1573                           ;ignition.c: 140: break;
  1574  0007C4  0012               	return	
  1575  0007C6                     l318:
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;ignition.c: 142: PORTAbits.RA5 = 0;
  1579  0007C6  9A80               	bcf	3968,5,c	;volatile
  1580                           
  1581                           ;ignition.c: 143: break;
  1582  0007C8  0012               	return	
  1583  0007CA                     l319:
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;ignition.c: 145: PORTBbits.RB5 = 0;
  1587  0007CA  9A81               	bcf	3969,5,c	;volatile
  1588                           
  1589                           ;ignition.c: 146: break;
  1590  0007CC  0012               	return	
  1591  0007CE                     l320:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;ignition.c: 148: PORTAbits.RA3 = 0;
  1595  0007CE  9680               	bcf	3968,3,c	;volatile
  1596                           
  1597                           ;ignition.c: 149: break;
  1598  0007D0  0012               	return	
  1599  0007D2                     l321:
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;ignition.c: 151: PORTAbits.RA1 = 0;
  1603  0007D2  9280               	bcf	3968,1,c	;volatile
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;ignition.c: 153: }
  1607                           
  1608                           ;ignition.c: 152: break;
  1609  0007D4  0012               	return	
  1610  0007D6                     l1697:
  1611  0007D6  0100               	movlb	0	; () banked
  1612  0007D8  516A               	movf	Disable_Port@disable_number& (0+255),w,b
  1613                           
  1614                           ; Switch size 1, requested type "space"
  1615                           ; Number of cases is 10, Range of values is 0 to 9
  1616                           ; switch strategies available:
  1617                           ; Name         Instructions Cycles
  1618                           ; simple_byte           31    16 (average)
  1619                           ;	Chosen strategy is simple_byte
  1620  0007DA  0A00               	xorlw	0	; case 0
  1621  0007DC  B4D8               	btfsc	status,2,c
  1622  0007DE  D7E7               	goto	l311
  1623  0007E0  0A01               	xorlw	1	; case 1
  1624  0007E2  B4D8               	btfsc	status,2,c
  1625  0007E4  D7E6               	goto	l313
  1626  0007E6  0A03               	xorlw	3	; case 2
  1627  0007E8  B4D8               	btfsc	status,2,c
  1628  0007EA  D7E5               	goto	l314
  1629  0007EC  0A01               	xorlw	1	; case 3
  1630  0007EE  B4D8               	btfsc	status,2,c
  1631  0007F0  D7E4               	goto	l315
  1632  0007F2  0A07               	xorlw	7	; case 4
  1633  0007F4  B4D8               	btfsc	status,2,c
  1634  0007F6  D7E3               	goto	l316
  1635  0007F8  0A01               	xorlw	1	; case 5
  1636  0007FA  B4D8               	btfsc	status,2,c
  1637  0007FC  D7E2               	goto	l317
  1638  0007FE  0A03               	xorlw	3	; case 6
  1639  000800  B4D8               	btfsc	status,2,c
  1640  000802  D7E1               	goto	l318
  1641  000804  0A01               	xorlw	1	; case 7
  1642  000806  B4D8               	btfsc	status,2,c
  1643  000808  D7E0               	goto	l319
  1644  00080A  0A0F               	xorlw	15	; case 8
  1645  00080C  B4D8               	btfsc	status,2,c
  1646  00080E  D7DF               	goto	l320
  1647  000810  0A01               	xorlw	1	; case 9
  1648  000812  A4D8               	btfss	status,2,c
  1649  000814  0012               	return	
  1650  000816  D7DD               	goto	l321
  1651  000818                     __end_of_Disable_Port:
  1652                           	opt stack 0
  1653                           tblptru	equ	0xFF8
  1654                           tblptrh	equ	0xFF7
  1655                           tblptrl	equ	0xFF6
  1656                           tablat	equ	0xFF5
  1657                           prodh	equ	0xFF4
  1658                           prodl	equ	0xFF3
  1659                           intcon	equ	0xFF2
  1660                           postinc0	equ	0xFEE
  1661                           wreg	equ	0xFE8
  1662                           indf2	equ	0xFDF
  1663                           postinc2	equ	0xFDE
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _Isr *****************
  1669 ;; Defined at:
  1670 ;;		line 3 in file "interrupt.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  c               1   62[COMRAM] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;		None               void
  1677 ;; Registers used:
  1678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1684 ;;      Params:         0       0       0       0
  1685 ;;      Locals:         1       0       0       0
  1686 ;;      Temps:         14       0       0       0
  1687 ;;      Totals:        15       0       0       0
  1688 ;;Total ram usage:       15 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    4
  1691 ;; This function calls:
  1692 ;;		_Evaluate_Reception
  1693 ;;		_Receive
  1694 ;;		_Receive_Dump
  1695 ;; This function is called by:
  1696 ;;		Interrupt level 2
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	intcode
  1701  000008                     __pintcode:
  1702                           	opt stack 0
  1703  000008                     _Isr:
  1704                           	opt stack 24
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;incstack = 0
  1708  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1709  00000A  CFFA F031          	movff	pclath,??_Isr
  1710  00000E  CFFB F032          	movff	pclatu,??_Isr+1
  1711  000012  CFE9 F033          	movff	fsr0l,??_Isr+2
  1712  000016  CFEA F034          	movff	fsr0h,??_Isr+3
  1713  00001A  CFE1 F035          	movff	fsr1l,??_Isr+4
  1714  00001E  CFE2 F036          	movff	fsr1h,??_Isr+5
  1715  000022  CFD9 F037          	movff	fsr2l,??_Isr+6
  1716  000026  CFDA F038          	movff	fsr2h,??_Isr+7
  1717  00002A  CFF3 F039          	movff	prodl,??_Isr+8
  1718  00002E  CFF4 F03A          	movff	prodh,??_Isr+9
  1719  000032  CFF6 F03B          	movff	tblptrl,??_Isr+10
  1720  000036  CFF7 F03C          	movff	tblptrh,??_Isr+11
  1721  00003A  CFF8 F03D          	movff	tblptru,??_Isr+12
  1722  00003E  CFF5 F03E          	movff	tablat,??_Isr+13
  1723                           
  1724                           ;interrupt.c: 4: __nop();
  1725  000042  F000               	nop	
  1726                           
  1727                           ;interrupt.c: 5: if(PIR1bits.RCIF == 1) {
  1728  000044  AA9E               	btfss	3998,5,c	;volatile
  1729  000046  D033               	goto	i2l1795
  1730                           
  1731                           ;interrupt.c: 6: if(RCSTA1bits.RX9D == 1) {
  1732  000048  A0AB               	btfss	4011,0,c	;volatile
  1733  00004A  D016               	goto	i2l381
  1734                           
  1735                           ;interrupt.c: 7: __nop();
  1736  00004C  F000               	nop	
  1737                           
  1738                           ;interrupt.c: 13: receive_counter = 0;
  1739  00004E  0E00               	movlw	0
  1740  000050  6E44               	movwf	_receive_counter,c
  1741                           
  1742                           ;interrupt.c: 15: received[receive_counter] =
  1743                           ;interrupt.c: 16: Receive();
  1744  000052  5044               	movf	_receive_counter,w,c
  1745  000054  0D01               	mullw	1
  1746  000056  0E40               	movlw	low _received
  1747  000058  24F3               	addwf	prodl,w,c
  1748  00005A  6ED9               	movwf	fsr2l,c
  1749  00005C  0E00               	movlw	high _received
  1750  00005E  20F4               	addwfc	prodh,w,c
  1751  000060  6EDA               	movwf	fsr2h,c
  1752  000062  EC1D  F005         	call	_Receive	;wreg free
  1753  000066  6EDF               	movwf	indf2,c
  1754                           
  1755                           ;interrupt.c: 17: receive_counter++;
  1756  000068  2A44               	incf	_receive_counter,f,c
  1757                           
  1758                           ;interrupt.c: 19: if(received[0] == 0x00) {
  1759  00006A  5040               	movf	_received,w,c
  1760  00006C  A4D8               	btfss	status,2,c
  1761  00006E  D002               	goto	i2l382
  1762                           
  1763                           ;interrupt.c: 20: slave_addressed = 1;
  1764  000070  8245               	bsf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1765                           
  1766                           ;interrupt.c: 21: } else {
  1767  000072  D01D               	goto	i2l1795
  1768  000074                     i2l382:
  1769                           
  1770                           ;interrupt.c: 22: slave_addressed = 0;
  1771  000074  9245               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1772                           
  1773                           ;interrupt.c: 23: }
  1774                           ;interrupt.c: 24: } else if(slave_addressed == 1) {
  1775  000076  D01B               	goto	i2l1795
  1776  000078                     i2l381:
  1777  000078  A245               	btfss	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1778  00007A  D016               	goto	i2l385
  1779                           
  1780                           ;interrupt.c: 25: __nop();
  1781  00007C  F000               	nop	
  1782                           
  1783                           ;interrupt.c: 26: received[receive_counter] =
  1784                           ;interrupt.c: 27: Receive();
  1785  00007E  5044               	movf	_receive_counter,w,c
  1786  000080  0D01               	mullw	1
  1787  000082  0E40               	movlw	low _received
  1788  000084  24F3               	addwf	prodl,w,c
  1789  000086  6ED9               	movwf	fsr2l,c
  1790  000088  0E00               	movlw	high _received
  1791  00008A  20F4               	addwfc	prodh,w,c
  1792  00008C  6EDA               	movwf	fsr2h,c
  1793  00008E  EC1D  F005         	call	_Receive	;wreg free
  1794  000092  6EDF               	movwf	indf2,c
  1795                           
  1796                           ;interrupt.c: 28: receive_counter++;
  1797  000094  2A44               	incf	_receive_counter,f,c
  1798                           
  1799                           ;interrupt.c: 30: if(receive_counter > 3) {
  1800  000096  0E03               	movlw	3
  1801  000098  6444               	cpfsgt	_receive_counter,c
  1802  00009A  D009               	goto	i2l1795
  1803                           
  1804                           ;interrupt.c: 31: receive_counter = 0;
  1805  00009C  0E00               	movlw	0
  1806  00009E  6E44               	movwf	_receive_counter,c
  1807                           
  1808                           ;interrupt.c: 32: slave_addressed = 0;
  1809  0000A0  9245               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1810                           
  1811                           ;interrupt.c: 34: Evaluate_Reception();
  1812  0000A2  ECBB  F004         	call	_Evaluate_Reception	;wreg free
  1813                           
  1814                           ;interrupt.c: 35: }
  1815                           ;interrupt.c: 36: } else {
  1816  0000A6  D003               	goto	i2l1795
  1817  0000A8                     i2l385:
  1818                           
  1819                           ;interrupt.c: 37: __nop();
  1820  0000A8  F000               	nop	
  1821                           
  1822                           ;interrupt.c: 38: Receive_Dump();
  1823  0000AA  EC15  F005         	call	_Receive_Dump	;wreg free
  1824  0000AE                     i2l1795:
  1825                           
  1826                           ;interrupt.c: 39: }
  1827                           ;interrupt.c: 40: }
  1828                           ;interrupt.c: 41: if (PIR1bits.CCP1IF == 1) {
  1829  0000AE  A49E               	btfss	3998,2,c	;volatile
  1830  0000B0  D018               	goto	i2l391
  1831                           
  1832                           ;interrupt.c: 42: PIR1bits.CCP1IF = 0;
  1833  0000B2  949E               	bcf	3998,2,c	;volatile
  1834                           
  1835                           ;interrupt.c: 43: T1CONbits.TMR1ON = 0;
  1836  0000B4  90CD               	bcf	4045,0,c	;volatile
  1837                           
  1838                           ;interrupt.c: 44: TMR1H = 0;
  1839  0000B6  0E00               	movlw	0
  1840  0000B8  6ECF               	movwf	4047,c	;volatile
  1841                           
  1842                           ;interrupt.c: 45: TMR1L = 0;
  1843  0000BA  0E00               	movlw	0
  1844  0000BC  6ECE               	movwf	4046,c	;volatile
  1845                           
  1846                           ;interrupt.c: 46: for (unsigned char c = 0; c < 10; c++) {
  1847  0000BE  0E00               	movlw	0
  1848  0000C0  6E3F               	movwf	Isr@c,c
  1849  0000C2                     i2l1801:
  1850  0000C2  0E09               	movlw	9
  1851  0000C4  643F               	cpfsgt	Isr@c,c
  1852  0000C6  D001               	goto	i2l1805
  1853  0000C8  D00C               	goto	i2l391
  1854  0000CA                     i2l1805:
  1855                           
  1856                           ;interrupt.c: 47: Marker[c] = 0;
  1857  0000CA  503F               	movf	Isr@c,w,c
  1858  0000CC  0D01               	mullw	1
  1859  0000CE  0E60               	movlw	low _Marker
  1860  0000D0  24F3               	addwf	prodl,w,c
  1861  0000D2  6ED9               	movwf	fsr2l,c
  1862  0000D4  0E00               	movlw	high _Marker
  1863  0000D6  20F4               	addwfc	prodh,w,c
  1864  0000D8  6EDA               	movwf	fsr2h,c
  1865  0000DA  0E00               	movlw	0
  1866  0000DC  6EDF               	movwf	indf2,c
  1867  0000DE  2A3F               	incf	Isr@c,f,c
  1868  0000E0  D7F0               	goto	i2l1801
  1869  0000E2                     i2l391:
  1870  0000E2  C03E  FFF5         	movff	??_Isr+13,tablat
  1871  0000E6  C03D  FFF8         	movff	??_Isr+12,tblptru
  1872  0000EA  C03C  FFF7         	movff	??_Isr+11,tblptrh
  1873  0000EE  C03B  FFF6         	movff	??_Isr+10,tblptrl
  1874  0000F2  C03A  FFF4         	movff	??_Isr+9,prodh
  1875  0000F6  C039  FFF3         	movff	??_Isr+8,prodl
  1876  0000FA  C038  FFDA         	movff	??_Isr+7,fsr2h
  1877  0000FE  C037  FFD9         	movff	??_Isr+6,fsr2l
  1878  000102  C036  FFE2         	movff	??_Isr+5,fsr1h
  1879  000106  C035  FFE1         	movff	??_Isr+4,fsr1l
  1880  00010A  C034  FFEA         	movff	??_Isr+3,fsr0h
  1881  00010E  C033  FFE9         	movff	??_Isr+2,fsr0l
  1882  000112  C032  FFFB         	movff	??_Isr+1,pclatu
  1883  000116  C031  FFFA         	movff	??_Isr,pclath
  1884  00011A  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1885  00011C  0011               	retfie		f
  1886  00011E                     __end_of_Isr:
  1887                           	opt stack 0
  1888                           pclatu	equ	0xFFB
  1889                           pclath	equ	0xFFA
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           intcon	equ	0xFF2
  1897                           postinc0	equ	0xFEE
  1898                           fsr0h	equ	0xFEA
  1899                           fsr0l	equ	0xFE9
  1900                           wreg	equ	0xFE8
  1901                           fsr1h	equ	0xFE2
  1902                           fsr1l	equ	0xFE1
  1903                           indf2	equ	0xFDF
  1904                           postinc2	equ	0xFDE
  1905                           fsr2h	equ	0xFDA
  1906                           fsr2l	equ	0xFD9
  1907                           status	equ	0xFD8
  1908                           
  1909 ;; *************** function _Receive_Dump *****************
  1910 ;; Defined at:
  1911 ;;		line 59 in file "communication.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  dump            1    0[COMRAM] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;		None               void
  1918 ;; Registers used:
  1919 ;;		None
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1925 ;;      Params:         0       0       0       0
  1926 ;;      Locals:         1       0       0       0
  1927 ;;      Temps:          0       0       0       0
  1928 ;;      Totals:         1       0       0       0
  1929 ;;Total ram usage:        1 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_Isr
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text15
  1939  000A2A                     __ptext15:
  1940                           	opt stack 0
  1941  000A2A                     _Receive_Dump:
  1942                           	opt stack 27
  1943                           
  1944                           ;communication.c: 60: unsigned char dump;
  1945                           ;communication.c: 61: if(RCSTA1bits.OERR == 1) {
  1946                           
  1947                           ;incstack = 0
  1948  000A2A  A2AB               	btfss	4011,1,c	;volatile
  1949  000A2C  D003               	goto	i2l83
  1950                           
  1951                           ;communication.c: 62: RCSTA1bits.CREN = 0;
  1952  000A2E  98AB               	bcf	4011,4,c	;volatile
  1953                           
  1954                           ;communication.c: 63: RCSTA1bits.CREN = 1;
  1955  000A30  88AB               	bsf	4011,4,c	;volatile
  1956                           
  1957                           ;communication.c: 64: overrun = 1;
  1958  000A32  8045               	bsf	_overrun/(0+8),_overrun& (0+7),c
  1959  000A34                     i2l83:
  1960                           
  1961                           ;communication.c: 65: }
  1962                           ;communication.c: 66: dump = RCREG1;
  1963  000A34  CFAE F001          	movff	4014,Receive_Dump@dump	;volatile
  1964  000A38  0012               	return		;funcret
  1965  000A3A                     __end_of_Receive_Dump:
  1966                           	opt stack 0
  1967                           pclatu	equ	0xFFB
  1968                           pclath	equ	0xFFA
  1969                           tblptru	equ	0xFF8
  1970                           tblptrh	equ	0xFF7
  1971                           tblptrl	equ	0xFF6
  1972                           tablat	equ	0xFF5
  1973                           prodh	equ	0xFF4
  1974                           prodl	equ	0xFF3
  1975                           intcon	equ	0xFF2
  1976                           postinc0	equ	0xFEE
  1977                           fsr0h	equ	0xFEA
  1978                           fsr0l	equ	0xFE9
  1979                           wreg	equ	0xFE8
  1980                           fsr1h	equ	0xFE2
  1981                           fsr1l	equ	0xFE1
  1982                           indf2	equ	0xFDF
  1983                           postinc2	equ	0xFDE
  1984                           fsr2h	equ	0xFDA
  1985                           fsr2l	equ	0xFD9
  1986                           status	equ	0xFD8
  1987                           
  1988 ;; *************** function _Receive *****************
  1989 ;; Defined at:
  1990 ;;		line 50 in file "communication.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;		None
  1993 ;; Auto vars:     Size  Location     Type
  1994 ;;		None
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      unsigned char 
  1997 ;; Registers used:
  1998 ;;		wreg, status,2
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2004 ;;      Params:         0       0       0       0
  2005 ;;      Locals:         0       0       0       0
  2006 ;;      Temps:          0       0       0       0
  2007 ;;      Totals:         0       0       0       0
  2008 ;;Total ram usage:        0 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_Isr
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text16
  2018  000A3A                     __ptext16:
  2019                           	opt stack 0
  2020  000A3A                     _Receive:
  2021                           	opt stack 27
  2022                           
  2023                           ;communication.c: 51: if(RCSTA1bits.OERR == 1) {
  2024                           
  2025                           ;incstack = 0
  2026  000A3A  A2AB               	btfss	4011,1,c	;volatile
  2027  000A3C  D003               	goto	i2l1741
  2028                           
  2029                           ;communication.c: 52: RCSTA1bits.CREN = 0;
  2030  000A3E  98AB               	bcf	4011,4,c	;volatile
  2031                           
  2032                           ;communication.c: 53: RCSTA1bits.CREN = 1;
  2033  000A40  88AB               	bsf	4011,4,c	;volatile
  2034                           
  2035                           ;communication.c: 54: overrun = 1;
  2036  000A42  8045               	bsf	_overrun/(0+8),_overrun& (0+7),c
  2037  000A44                     i2l1741:
  2038                           
  2039                           ;communication.c: 55: }
  2040                           ;communication.c: 56: return (RCREG1);
  2041  000A44  50AE               	movf	4014,w,c	;volatile
  2042  000A46  0012               	return	
  2043  000A48                     __end_of_Receive:
  2044                           	opt stack 0
  2045                           pclatu	equ	0xFFB
  2046                           pclath	equ	0xFFA
  2047                           tblptru	equ	0xFF8
  2048                           tblptrh	equ	0xFF7
  2049                           tblptrl	equ	0xFF6
  2050                           tablat	equ	0xFF5
  2051                           prodh	equ	0xFF4
  2052                           prodl	equ	0xFF3
  2053                           intcon	equ	0xFF2
  2054                           postinc0	equ	0xFEE
  2055                           fsr0h	equ	0xFEA
  2056                           fsr0l	equ	0xFE9
  2057                           wreg	equ	0xFE8
  2058                           fsr1h	equ	0xFE2
  2059                           fsr1l	equ	0xFE1
  2060                           indf2	equ	0xFDF
  2061                           postinc2	equ	0xFDE
  2062                           fsr2h	equ	0xFDA
  2063                           fsr2l	equ	0xFD9
  2064                           status	equ	0xFD8
  2065                           
  2066 ;; *************** function _Evaluate_Reception *****************
  2067 ;; Defined at:
  2068 ;;		line 189 in file "ignition.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;		None               void
  2075 ;; Registers used:
  2076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2082 ;;      Params:         0       0       0       0
  2083 ;;      Locals:         0       0       0       0
  2084 ;;      Temps:          0       0       0       0
  2085 ;;      Totals:         0       0       0       0
  2086 ;;Total ram usage:        0 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    3
  2089 ;; This function calls:
  2090 ;;		_Check_Power
  2091 ;;		_Mark_Ignite
  2092 ;;		_Test_Port
  2093 ;; This function is called by:
  2094 ;;		_Isr
  2095 ;; This function uses a non-reentrant model
  2096 ;;
  2097                           
  2098                           	psect	text17
  2099  000976                     __ptext17:
  2100                           	opt stack 0
  2101  000976                     _Evaluate_Reception:
  2102                           	opt stack 24
  2103                           
  2104                           ;ignition.c: 195: __nop();
  2105                           
  2106                           ;incstack = 0
  2107  000976  F000               	nop	
  2108                           
  2109                           ;ignition.c: 196: if (received[2] == 'T') {
  2110  000978  0E54               	movlw	84
  2111  00097A  1842               	xorwf	_received+2,w,c
  2112  00097C  A4D8               	btfss	status,2,c
  2113  00097E  D005               	goto	i2l1755
  2114                           
  2115                           ;ignition.c: 197: Check_Power();
  2116  000980  EC8F  F002         	call	_Check_Power	;wreg free
  2117                           
  2118                           ;ignition.c: 198: Test_Port();
  2119  000984  EC91  F000         	call	_Test_Port	;wreg free
  2120                           
  2121                           ;ignition.c: 199: } else if (received[2] == 'I') {
  2122  000988  0012               	return	
  2123  00098A                     i2l1755:
  2124  00098A  0E49               	movlw	73
  2125  00098C  1842               	xorwf	_received+2,w,c
  2126  00098E  A4D8               	btfss	status,2,c
  2127  000990  0012               	return	
  2128                           
  2129                           ;ignition.c: 200: Mark_Ignite();
  2130  000992  EC00  F005         	call	_Mark_Ignite	;wreg free
  2131  000996  0012               	return	
  2132  000998                     __end_of_Evaluate_Reception:
  2133                           	opt stack 0
  2134                           pclatu	equ	0xFFB
  2135                           pclath	equ	0xFFA
  2136                           tblptru	equ	0xFF8
  2137                           tblptrh	equ	0xFF7
  2138                           tblptrl	equ	0xFF6
  2139                           tablat	equ	0xFF5
  2140                           prodh	equ	0xFF4
  2141                           prodl	equ	0xFF3
  2142                           intcon	equ	0xFF2
  2143                           postinc0	equ	0xFEE
  2144                           fsr0h	equ	0xFEA
  2145                           fsr0l	equ	0xFE9
  2146                           wreg	equ	0xFE8
  2147                           fsr1h	equ	0xFE2
  2148                           fsr1l	equ	0xFE1
  2149                           indf2	equ	0xFDF
  2150                           postinc2	equ	0xFDE
  2151                           fsr2h	equ	0xFDA
  2152                           fsr2l	equ	0xFD9
  2153                           status	equ	0xFD8
  2154                           
  2155 ;; *************** function _Test_Port *****************
  2156 ;; Defined at:
  2157 ;;		line 11 in file "ignition.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;		None               void
  2164 ;; Registers used:
  2165 ;;		wreg, status,2, status,0, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2171 ;;      Params:         0       0       0       0
  2172 ;;      Locals:         0       0       0       0
  2173 ;;      Temps:          0       0       0       0
  2174 ;;      Totals:         0       0       0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    1
  2178 ;; This function calls:
  2179 ;;		_Transmit
  2180 ;; This function is called by:
  2181 ;;		_Evaluate_Reception
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text18
  2186  000122                     __ptext18:
  2187                           	opt stack 0
  2188  000122                     _Test_Port:
  2189                           	opt stack 25
  2190                           
  2191                           ;ignition.c: 12: switch(received[3]) {
  2192                           
  2193                           ;incstack = 0
  2194  000122  D0F0               	goto	i2l1685
  2195  000124                     i2l251:
  2196                           
  2197                           ;ignition.c: 14: if(PORTCbits.RC4 == 1) {
  2198  000124  A882               	btfss	3970,4,c	;volatile
  2199  000126  D00A               	goto	i2l252
  2200                           
  2201                           ;ignition.c: 15: Transmit(0xAA, 'T', 0, '1');
  2202  000128  0E54               	movlw	84
  2203  00012A  6E01               	movwf	Transmit@operation,c
  2204  00012C  0E00               	movlw	0
  2205  00012E  6E02               	movwf	Transmit@port,c
  2206  000130  0E31               	movlw	49
  2207  000132  6E03               	movwf	Transmit@con_status,c
  2208  000134  0EAA               	movlw	170
  2209  000136  EC0C  F004         	call	_Transmit
  2210                           
  2211                           ;ignition.c: 16: }else if(PORTCbits.RC4 == 0) {
  2212  00013A  0012               	return	
  2213  00013C                     i2l252:
  2214  00013C  B882               	btfsc	3970,4,c	;volatile
  2215  00013E  0012               	return	
  2216                           
  2217                           ;ignition.c: 17: Transmit(0xAA, 'T', 0, '0');
  2218  000140  0E54               	movlw	84
  2219  000142  6E01               	movwf	Transmit@operation,c
  2220  000144  0E00               	movlw	0
  2221  000146  6E02               	movwf	Transmit@port,c
  2222  000148  0E30               	movlw	48
  2223  00014A  6E03               	movwf	Transmit@con_status,c
  2224  00014C  0EAA               	movlw	170
  2225  00014E  EC0C  F004         	call	_Transmit
  2226                           
  2227                           ;ignition.c: 18: }
  2228                           ;ignition.c: 19: break;
  2229  000152  0012               	return	
  2230  000154                     i2l256:
  2231                           
  2232                           ;ignition.c: 21: if(PORTDbits.RD2 == 1) {
  2233  000154  A483               	btfss	3971,2,c	;volatile
  2234  000156  D00A               	goto	i2l257
  2235                           
  2236                           ;ignition.c: 22: Transmit(0xAA, 'T', 1, '1');
  2237  000158  0E54               	movlw	84
  2238  00015A  6E01               	movwf	Transmit@operation,c
  2239  00015C  0E01               	movlw	1
  2240  00015E  6E02               	movwf	Transmit@port,c
  2241  000160  0E31               	movlw	49
  2242  000162  6E03               	movwf	Transmit@con_status,c
  2243  000164  0EAA               	movlw	170
  2244  000166  EC0C  F004         	call	_Transmit
  2245                           
  2246                           ;ignition.c: 23: }else if(PORTDbits.RD2 == 0) {
  2247  00016A  0012               	return	
  2248  00016C                     i2l257:
  2249  00016C  B483               	btfsc	3971,2,c	;volatile
  2250  00016E  0012               	return	
  2251                           
  2252                           ;ignition.c: 24: Transmit(0xAA, 'T', 1, '0');
  2253  000170  0E54               	movlw	84
  2254  000172  6E01               	movwf	Transmit@operation,c
  2255  000174  0E01               	movlw	1
  2256  000176  6E02               	movwf	Transmit@port,c
  2257  000178  0E30               	movlw	48
  2258  00017A  6E03               	movwf	Transmit@con_status,c
  2259  00017C  0EAA               	movlw	170
  2260  00017E  EC0C  F004         	call	_Transmit
  2261                           
  2262                           ;ignition.c: 25: }
  2263                           ;ignition.c: 26: break;
  2264  000182  0012               	return	
  2265  000184                     i2l260:
  2266                           
  2267                           ;ignition.c: 28: if(PORTDbits.RD0 == 1) {
  2268  000184  A083               	btfss	3971,0,c	;volatile
  2269  000186  D00A               	goto	i2l261
  2270                           
  2271                           ;ignition.c: 29: Transmit(0xAA, 'T', 2, '1');
  2272  000188  0E54               	movlw	84
  2273  00018A  6E01               	movwf	Transmit@operation,c
  2274  00018C  0E02               	movlw	2
  2275  00018E  6E02               	movwf	Transmit@port,c
  2276  000190  0E31               	movlw	49
  2277  000192  6E03               	movwf	Transmit@con_status,c
  2278  000194  0EAA               	movlw	170
  2279  000196  EC0C  F004         	call	_Transmit
  2280                           
  2281                           ;ignition.c: 30: }else if(PORTDbits.RD0 == 0) {
  2282  00019A  0012               	return	
  2283  00019C                     i2l261:
  2284  00019C  B083               	btfsc	3971,0,c	;volatile
  2285  00019E  0012               	return	
  2286                           
  2287                           ;ignition.c: 31: Transmit(0xAA, 'T', 2, '0');
  2288  0001A0  0E54               	movlw	84
  2289  0001A2  6E01               	movwf	Transmit@operation,c
  2290  0001A4  0E02               	movlw	2
  2291  0001A6  6E02               	movwf	Transmit@port,c
  2292  0001A8  0E30               	movlw	48
  2293  0001AA  6E03               	movwf	Transmit@con_status,c
  2294  0001AC  0EAA               	movlw	170
  2295  0001AE  EC0C  F004         	call	_Transmit
  2296                           
  2297                           ;ignition.c: 32: }
  2298                           ;ignition.c: 33: break;
  2299  0001B2  0012               	return	
  2300  0001B4                     i2l264:
  2301                           
  2302                           ;ignition.c: 35: if(PORTCbits.RC2 == 1) {
  2303  0001B4  A482               	btfss	3970,2,c	;volatile
  2304  0001B6  D00A               	goto	i2l265
  2305                           
  2306                           ;ignition.c: 36: Transmit(0xAA, 'T', 3, '1');
  2307  0001B8  0E54               	movlw	84
  2308  0001BA  6E01               	movwf	Transmit@operation,c
  2309  0001BC  0E03               	movlw	3
  2310  0001BE  6E02               	movwf	Transmit@port,c
  2311  0001C0  0E31               	movlw	49
  2312  0001C2  6E03               	movwf	Transmit@con_status,c
  2313  0001C4  0EAA               	movlw	170
  2314  0001C6  EC0C  F004         	call	_Transmit
  2315                           
  2316                           ;ignition.c: 37: }else if(PORTCbits.RC2 == 0) {
  2317  0001CA  0012               	return	
  2318  0001CC                     i2l265:
  2319  0001CC  B482               	btfsc	3970,2,c	;volatile
  2320  0001CE  0012               	return	
  2321                           
  2322                           ;ignition.c: 38: Transmit(0xAA, 'T', 3, '0');
  2323  0001D0  0E54               	movlw	84
  2324  0001D2  6E01               	movwf	Transmit@operation,c
  2325  0001D4  0E03               	movlw	3
  2326  0001D6  6E02               	movwf	Transmit@port,c
  2327  0001D8  0E30               	movlw	48
  2328  0001DA  6E03               	movwf	Transmit@con_status,c
  2329  0001DC  0EAA               	movlw	170
  2330  0001DE  EC0C  F004         	call	_Transmit
  2331                           
  2332                           ;ignition.c: 39: }
  2333                           ;ignition.c: 40: break;
  2334  0001E2  0012               	return	
  2335  0001E4                     i2l268:
  2336                           
  2337                           ;ignition.c: 42: if(PORTEbits.RE2 == 1) {
  2338  0001E4  A484               	btfss	3972,2,c	;volatile
  2339  0001E6  D00A               	goto	i2l269
  2340                           
  2341                           ;ignition.c: 43: Transmit(0xAA, 'T', 4, '1');
  2342  0001E8  0E54               	movlw	84
  2343  0001EA  6E01               	movwf	Transmit@operation,c
  2344  0001EC  0E04               	movlw	4
  2345  0001EE  6E02               	movwf	Transmit@port,c
  2346  0001F0  0E31               	movlw	49
  2347  0001F2  6E03               	movwf	Transmit@con_status,c
  2348  0001F4  0EAA               	movlw	170
  2349  0001F6  EC0C  F004         	call	_Transmit
  2350                           
  2351                           ;ignition.c: 44: }else if(PORTEbits.RE2 == 0) {
  2352  0001FA  0012               	return	
  2353  0001FC                     i2l269:
  2354  0001FC  B484               	btfsc	3972,2,c	;volatile
  2355  0001FE  0012               	return	
  2356                           
  2357                           ;ignition.c: 45: Transmit(0xAA, 'T', 4, '0');
  2358  000200  0E54               	movlw	84
  2359  000202  6E01               	movwf	Transmit@operation,c
  2360  000204  0E04               	movlw	4
  2361  000206  6E02               	movwf	Transmit@port,c
  2362  000208  0E30               	movlw	48
  2363  00020A  6E03               	movwf	Transmit@con_status,c
  2364  00020C  0EAA               	movlw	170
  2365  00020E  EC0C  F004         	call	_Transmit
  2366                           
  2367                           ;ignition.c: 46: }
  2368                           ;ignition.c: 47: break;
  2369  000212  0012               	return	
  2370  000214                     i2l272:
  2371                           
  2372                           ;ignition.c: 49: if(PORTEbits.RE0 == 1) {
  2373  000214  A084               	btfss	3972,0,c	;volatile
  2374  000216  D00A               	goto	i2l273
  2375                           
  2376                           ;ignition.c: 50: Transmit(0xAA, 'T', 5, '1');
  2377  000218  0E54               	movlw	84
  2378  00021A  6E01               	movwf	Transmit@operation,c
  2379  00021C  0E05               	movlw	5
  2380  00021E  6E02               	movwf	Transmit@port,c
  2381  000220  0E31               	movlw	49
  2382  000222  6E03               	movwf	Transmit@con_status,c
  2383  000224  0EAA               	movlw	170
  2384  000226  EC0C  F004         	call	_Transmit
  2385                           
  2386                           ;ignition.c: 51: }else if(PORTEbits.RE0 == 0) {
  2387  00022A  0012               	return	
  2388  00022C                     i2l273:
  2389  00022C  B084               	btfsc	3972,0,c	;volatile
  2390  00022E  0012               	return	
  2391                           
  2392                           ;ignition.c: 52: Transmit(0xAA, 'T', 5, '0');
  2393  000230  0E54               	movlw	84
  2394  000232  6E01               	movwf	Transmit@operation,c
  2395  000234  0E05               	movlw	5
  2396  000236  6E02               	movwf	Transmit@port,c
  2397  000238  0E30               	movlw	48
  2398  00023A  6E03               	movwf	Transmit@con_status,c
  2399  00023C  0EAA               	movlw	170
  2400  00023E  EC0C  F004         	call	_Transmit
  2401                           
  2402                           ;ignition.c: 53: }
  2403                           ;ignition.c: 54: break;
  2404  000242  0012               	return	
  2405  000244                     i2l276:
  2406                           
  2407                           ;ignition.c: 56: if(PORTBbits.RB2 == 1) {
  2408  000244  A481               	btfss	3969,2,c	;volatile
  2409  000246  D00A               	goto	i2l277
  2410                           
  2411                           ;ignition.c: 57: Transmit(0xAA, 'T', 6, '1');
  2412  000248  0E54               	movlw	84
  2413  00024A  6E01               	movwf	Transmit@operation,c
  2414  00024C  0E06               	movlw	6
  2415  00024E  6E02               	movwf	Transmit@port,c
  2416  000250  0E31               	movlw	49
  2417  000252  6E03               	movwf	Transmit@con_status,c
  2418  000254  0EAA               	movlw	170
  2419  000256  EC0C  F004         	call	_Transmit
  2420                           
  2421                           ;ignition.c: 58: }else if(PORTBbits.RB2 == 0) {
  2422  00025A  0012               	return	
  2423  00025C                     i2l277:
  2424  00025C  B481               	btfsc	3969,2,c	;volatile
  2425  00025E  0012               	return	
  2426                           
  2427                           ;ignition.c: 59: Transmit(0xAA, 'T', 6, '0');
  2428  000260  0E54               	movlw	84
  2429  000262  6E01               	movwf	Transmit@operation,c
  2430  000264  0E06               	movlw	6
  2431  000266  6E02               	movwf	Transmit@port,c
  2432  000268  0E30               	movlw	48
  2433  00026A  6E03               	movwf	Transmit@con_status,c
  2434  00026C  0EAA               	movlw	170
  2435  00026E  EC0C  F004         	call	_Transmit
  2436                           
  2437                           ;ignition.c: 60: }
  2438                           ;ignition.c: 61: break;
  2439  000272  0012               	return	
  2440  000274                     i2l280:
  2441                           
  2442                           ;ignition.c: 63: if(PORTBbits.RB4 == 1) {
  2443  000274  A881               	btfss	3969,4,c	;volatile
  2444  000276  D00A               	goto	i2l281
  2445                           
  2446                           ;ignition.c: 64: Transmit(0xAA, 'T', 7, '1');
  2447  000278  0E54               	movlw	84
  2448  00027A  6E01               	movwf	Transmit@operation,c
  2449  00027C  0E07               	movlw	7
  2450  00027E  6E02               	movwf	Transmit@port,c
  2451  000280  0E31               	movlw	49
  2452  000282  6E03               	movwf	Transmit@con_status,c
  2453  000284  0EAA               	movlw	170
  2454  000286  EC0C  F004         	call	_Transmit
  2455                           
  2456                           ;ignition.c: 65: }else if(PORTBbits.RB4 == 0) {
  2457  00028A  0012               	return	
  2458  00028C                     i2l281:
  2459  00028C  B881               	btfsc	3969,4,c	;volatile
  2460  00028E  0012               	return	
  2461                           
  2462                           ;ignition.c: 66: Transmit(0xAA, 'T', 7, '0');
  2463  000290  0E54               	movlw	84
  2464  000292  6E01               	movwf	Transmit@operation,c
  2465  000294  0E07               	movlw	7
  2466  000296  6E02               	movwf	Transmit@port,c
  2467  000298  0E30               	movlw	48
  2468  00029A  6E03               	movwf	Transmit@con_status,c
  2469  00029C  0EAA               	movlw	170
  2470  00029E  EC0C  F004         	call	_Transmit
  2471                           
  2472                           ;ignition.c: 67: }
  2473                           ;ignition.c: 68: break;
  2474  0002A2  0012               	return	
  2475  0002A4                     i2l284:
  2476                           
  2477                           ;ignition.c: 70: if(PORTAbits.RA2 == 1) {
  2478  0002A4  A480               	btfss	3968,2,c	;volatile
  2479  0002A6  D00A               	goto	i2l285
  2480                           
  2481                           ;ignition.c: 71: Transmit(0xAA, 'T', 8, '1');
  2482  0002A8  0E54               	movlw	84
  2483  0002AA  6E01               	movwf	Transmit@operation,c
  2484  0002AC  0E08               	movlw	8
  2485  0002AE  6E02               	movwf	Transmit@port,c
  2486  0002B0  0E31               	movlw	49
  2487  0002B2  6E03               	movwf	Transmit@con_status,c
  2488  0002B4  0EAA               	movlw	170
  2489  0002B6  EC0C  F004         	call	_Transmit
  2490                           
  2491                           ;ignition.c: 72: }else if(PORTAbits.RA2 == 0) {
  2492  0002BA  0012               	return	
  2493  0002BC                     i2l285:
  2494  0002BC  B480               	btfsc	3968,2,c	;volatile
  2495  0002BE  0012               	return	
  2496                           
  2497                           ;ignition.c: 73: Transmit(0xAA, 'T', 8, '0');
  2498  0002C0  0E54               	movlw	84
  2499  0002C2  6E01               	movwf	Transmit@operation,c
  2500  0002C4  0E08               	movlw	8
  2501  0002C6  6E02               	movwf	Transmit@port,c
  2502  0002C8  0E30               	movlw	48
  2503  0002CA  6E03               	movwf	Transmit@con_status,c
  2504  0002CC  0EAA               	movlw	170
  2505  0002CE  EC0C  F004         	call	_Transmit
  2506                           
  2507                           ;ignition.c: 74: }
  2508                           ;ignition.c: 75: break;
  2509  0002D2  0012               	return	
  2510  0002D4                     i2l288:
  2511                           
  2512                           ;ignition.c: 77: if(PORTAbits.RA0 == 1) {
  2513  0002D4  A080               	btfss	3968,0,c	;volatile
  2514  0002D6  D00A               	goto	i2l289
  2515                           
  2516                           ;ignition.c: 78: Transmit(0xAA, 'T', 9, '1');
  2517  0002D8  0E54               	movlw	84
  2518  0002DA  6E01               	movwf	Transmit@operation,c
  2519  0002DC  0E09               	movlw	9
  2520  0002DE  6E02               	movwf	Transmit@port,c
  2521  0002E0  0E31               	movlw	49
  2522  0002E2  6E03               	movwf	Transmit@con_status,c
  2523  0002E4  0EAA               	movlw	170
  2524  0002E6  EC0C  F004         	call	_Transmit
  2525                           
  2526                           ;ignition.c: 79: }else if(PORTAbits.RA0 == 0) {
  2527  0002EA  0012               	return	
  2528  0002EC                     i2l289:
  2529  0002EC  B080               	btfsc	3968,0,c	;volatile
  2530  0002EE  0012               	return	
  2531                           
  2532                           ;ignition.c: 80: Transmit(0xAA, 'T', 9, '0');
  2533  0002F0  0E54               	movlw	84
  2534  0002F2  6E01               	movwf	Transmit@operation,c
  2535  0002F4  0E09               	movlw	9
  2536  0002F6  6E02               	movwf	Transmit@port,c
  2537  0002F8  0E30               	movlw	48
  2538  0002FA  6E03               	movwf	Transmit@con_status,c
  2539  0002FC  0EAA               	movlw	170
  2540  0002FE  EC0C  F004         	call	_Transmit
  2541                           
  2542                           ;ignition.c: 83: }
  2543                           
  2544                           ;ignition.c: 81: }
  2545                           ;ignition.c: 82: break;
  2546  000302  0012               	return	
  2547  000304                     i2l1685:
  2548  000304  5043               	movf	_received+3,w,c
  2549                           
  2550                           ; Switch size 1, requested type "space"
  2551                           ; Number of cases is 10, Range of values is 0 to 9
  2552                           ; switch strategies available:
  2553                           ; Name         Instructions Cycles
  2554                           ; simple_byte           31    16 (average)
  2555                           ;	Chosen strategy is simple_byte
  2556  000306  0A00               	xorlw	0	; case 0
  2557  000308  B4D8               	btfsc	status,2,c
  2558  00030A  D70C               	goto	i2l251
  2559  00030C  0A01               	xorlw	1	; case 1
  2560  00030E  B4D8               	btfsc	status,2,c
  2561  000310  D721               	goto	i2l256
  2562  000312  0A03               	xorlw	3	; case 2
  2563  000314  B4D8               	btfsc	status,2,c
  2564  000316  D736               	goto	i2l260
  2565  000318  0A01               	xorlw	1	; case 3
  2566  00031A  B4D8               	btfsc	status,2,c
  2567  00031C  D74B               	goto	i2l264
  2568  00031E  0A07               	xorlw	7	; case 4
  2569  000320  B4D8               	btfsc	status,2,c
  2570  000322  D760               	goto	i2l268
  2571  000324  0A01               	xorlw	1	; case 5
  2572  000326  B4D8               	btfsc	status,2,c
  2573  000328  D775               	goto	i2l272
  2574  00032A  0A03               	xorlw	3	; case 6
  2575  00032C  B4D8               	btfsc	status,2,c
  2576  00032E  D78A               	goto	i2l276
  2577  000330  0A01               	xorlw	1	; case 7
  2578  000332  B4D8               	btfsc	status,2,c
  2579  000334  D79F               	goto	i2l280
  2580  000336  0A0F               	xorlw	15	; case 8
  2581  000338  B4D8               	btfsc	status,2,c
  2582  00033A  D7B4               	goto	i2l284
  2583  00033C  0A01               	xorlw	1	; case 9
  2584  00033E  A4D8               	btfss	status,2,c
  2585  000340  0012               	return	
  2586  000342  D7C8               	goto	i2l288
  2587  000344                     __end_of_Test_Port:
  2588                           	opt stack 0
  2589                           pclatu	equ	0xFFB
  2590                           pclath	equ	0xFFA
  2591                           tblptru	equ	0xFF8
  2592                           tblptrh	equ	0xFF7
  2593                           tblptrl	equ	0xFF6
  2594                           tablat	equ	0xFF5
  2595                           prodh	equ	0xFF4
  2596                           prodl	equ	0xFF3
  2597                           intcon	equ	0xFF2
  2598                           postinc0	equ	0xFEE
  2599                           fsr0h	equ	0xFEA
  2600                           fsr0l	equ	0xFE9
  2601                           wreg	equ	0xFE8
  2602                           fsr1h	equ	0xFE2
  2603                           fsr1l	equ	0xFE1
  2604                           indf2	equ	0xFDF
  2605                           postinc2	equ	0xFDE
  2606                           fsr2h	equ	0xFDA
  2607                           fsr2l	equ	0xFD9
  2608                           status	equ	0xFD8
  2609                           
  2610 ;; *************** function _Transmit *****************
  2611 ;; Defined at:
  2612 ;;		line 18 in file "communication.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  receiver        1    wreg     unsigned char 
  2615 ;;  operation       1    0[COMRAM] unsigned char 
  2616 ;;  port            1    1[COMRAM] unsigned char 
  2617 ;;  con_status      1    2[COMRAM] unsigned char 
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;  receiver        1    3[COMRAM] unsigned char 
  2620 ;; Return value:  Size  Location     Type
  2621 ;;		None               void
  2622 ;; Registers used:
  2623 ;;		wreg, status,2
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2629 ;;      Params:         3       0       0       0
  2630 ;;      Locals:         1       0       0       0
  2631 ;;      Temps:          0       0       0       0
  2632 ;;      Totals:         4       0       0       0
  2633 ;;Total ram usage:        4 bytes
  2634 ;; Hardware stack levels used:    1
  2635 ;; This function calls:
  2636 ;;		Nothing
  2637 ;; This function is called by:
  2638 ;;		_Test_Port
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text19
  2643  000818                     __ptext19:
  2644                           	opt stack 0
  2645  000818                     _Transmit:
  2646                           	opt stack 25
  2647                           
  2648                           ;incstack = 0
  2649                           ;Transmit@receiver stored from wreg
  2650  000818  6E04               	movwf	Transmit@receiver,c
  2651                           
  2652                           ;communication.c: 20: PORTDbits.RD4 = 1;
  2653  00081A  8883               	bsf	3971,4,c	;volatile
  2654                           
  2655                           ;communication.c: 21: RCSTA1bits.CREN = 0;
  2656  00081C  98AB               	bcf	4011,4,c	;volatile
  2657                           
  2658                           ;communication.c: 23: __nop();
  2659  00081E  F000               	nop	
  2660  000820                     i2l55:
  2661  000820  A89E               	btfss	3998,4,c	;volatile
  2662  000822  D7FE               	goto	i2l55
  2663                           
  2664                           ;communication.c: 25: TXSTA1bits.TX9D = 1;
  2665  000824  80AC               	bsf	4012,0,c	;volatile
  2666                           
  2667                           ;communication.c: 26: TXREG1 = receiver;
  2668  000826  C004  FFAD         	movff	Transmit@receiver,4013	;volatile
  2669  00082A                     i2l58:
  2670  00082A  A89E               	btfss	3998,4,c	;volatile
  2671  00082C  D7FE               	goto	i2l58
  2672                           
  2673                           ;communication.c: 28: TXSTA1bits.TX9D = 0;
  2674  00082E  90AC               	bcf	4012,0,c	;volatile
  2675                           
  2676                           ;communication.c: 29: _delay((unsigned long)((1)*(4000000/4000.0)));
  2677  000830  0EFA               	movlw	250
  2678  000832                     i2u139_47:
  2679  000832  F000               	nop	
  2680  000834  2EE8               	decfsz	wreg,f,c
  2681  000836  D7FD               	goto	i2u139_47
  2682                           
  2683                           ;communication.c: 30: TXREG1 = 0x00;
  2684  000838  0E00               	movlw	0
  2685  00083A  6EAD               	movwf	4013,c	;volatile
  2686  00083C                     i2l61:
  2687  00083C  A89E               	btfss	3998,4,c	;volatile
  2688  00083E  D7FE               	goto	i2l61
  2689                           
  2690                           ;communication.c: 32: _delay((unsigned long)((1)*(4000000/4000.0)));
  2691  000840  0EFA               	movlw	250
  2692  000842                     i2u140_47:
  2693  000842  F000               	nop	
  2694  000844  2EE8               	decfsz	wreg,f,c
  2695  000846  D7FD               	goto	i2u140_47
  2696                           
  2697                           ;communication.c: 33: TXREG1 = operation;
  2698  000848  C001  FFAD         	movff	Transmit@operation,4013	;volatile
  2699  00084C                     i2l64:
  2700  00084C  A89E               	btfss	3998,4,c	;volatile
  2701  00084E  D7FE               	goto	i2l64
  2702                           
  2703                           ;communication.c: 35: _delay((unsigned long)((1)*(4000000/4000.0)));
  2704  000850  0EFA               	movlw	250
  2705  000852                     i2u141_47:
  2706  000852  F000               	nop	
  2707  000854  2EE8               	decfsz	wreg,f,c
  2708  000856  D7FD               	goto	i2u141_47
  2709                           
  2710                           ;communication.c: 36: TXREG1 = port;
  2711  000858  C002  FFAD         	movff	Transmit@port,4013	;volatile
  2712  00085C                     i2l67:
  2713  00085C  A89E               	btfss	3998,4,c	;volatile
  2714  00085E  D7FE               	goto	i2l67
  2715                           
  2716                           ;communication.c: 38: _delay((unsigned long)((1)*(4000000/4000.0)));
  2717  000860  0EFA               	movlw	250
  2718  000862                     i2u142_47:
  2719  000862  F000               	nop	
  2720  000864  2EE8               	decfsz	wreg,f,c
  2721  000866  D7FD               	goto	i2u142_47
  2722                           
  2723                           ;communication.c: 39: TXREG1 = con_status;
  2724  000868  C003  FFAD         	movff	Transmit@con_status,4013	;volatile
  2725  00086C                     i2l70:
  2726  00086C  A89E               	btfss	3998,4,c	;volatile
  2727  00086E  D7FE               	goto	i2l70
  2728                           
  2729                           ;communication.c: 41: _delay((unsigned long)((1)*(4000000/4000.0)));
  2730  000870  0EFA               	movlw	250
  2731  000872                     i2u143_47:
  2732  000872  F000               	nop	
  2733  000874  2EE8               	decfsz	wreg,f,c
  2734  000876  D7FD               	goto	i2u143_47
  2735                           
  2736                           ;communication.c: 42: TXREG1 = p_status;
  2737  000878  C046  FFAD         	movff	_p_status,4013	;volatile
  2738  00087C                     i2l73:
  2739  00087C  A2AC               	btfss	4012,1,c	;volatile
  2740  00087E  D7FE               	goto	i2l73
  2741                           
  2742                           ;communication.c: 44: PORTDbits.RD4 = 0;
  2743  000880  9883               	bcf	3971,4,c	;volatile
  2744                           
  2745                           ;communication.c: 45: RCSTA1bits.CREN = 1;
  2746  000882  88AB               	bsf	4011,4,c	;volatile
  2747                           
  2748                           ;communication.c: 46: __nop();
  2749  000884  F000               	nop	
  2750  000886  0012               	return		;funcret
  2751  000888                     __end_of_Transmit:
  2752                           	opt stack 0
  2753                           pclatu	equ	0xFFB
  2754                           pclath	equ	0xFFA
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           prodh	equ	0xFF4
  2760                           prodl	equ	0xFF3
  2761                           intcon	equ	0xFF2
  2762                           postinc0	equ	0xFEE
  2763                           fsr0h	equ	0xFEA
  2764                           fsr0l	equ	0xFE9
  2765                           wreg	equ	0xFE8
  2766                           fsr1h	equ	0xFE2
  2767                           fsr1l	equ	0xFE1
  2768                           indf2	equ	0xFDF
  2769                           postinc2	equ	0xFDE
  2770                           fsr2h	equ	0xFDA
  2771                           fsr2l	equ	0xFD9
  2772                           status	equ	0xFD8
  2773                           
  2774 ;; *************** function _Mark_Ignite *****************
  2775 ;; Defined at:
  2776 ;;		line 167 in file "ignition.c"
  2777 ;; Parameters:    Size  Location     Type
  2778 ;;		None
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;		None               void
  2783 ;; Registers used:
  2784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2790 ;;      Params:         0       0       0       0
  2791 ;;      Locals:         0       0       0       0
  2792 ;;      Temps:          0       0       0       0
  2793 ;;      Totals:         0       0       0       0
  2794 ;;Total ram usage:        0 bytes
  2795 ;; Hardware stack levels used:    1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_Evaluate_Reception
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text20
  2804  000A00                     __ptext20:
  2805                           	opt stack 0
  2806  000A00                     _Mark_Ignite:
  2807                           	opt stack 26
  2808                           
  2809                           ;ignition.c: 168: Marker[received[3]] = 1;
  2810                           
  2811                           ;incstack = 0
  2812  000A00  5043               	movf	_received+3,w,c
  2813  000A02  0D01               	mullw	1
  2814  000A04  0E60               	movlw	low _Marker
  2815  000A06  24F3               	addwf	prodl,w,c
  2816  000A08  6ED9               	movwf	fsr2l,c
  2817  000A0A  0E00               	movlw	high _Marker
  2818  000A0C  20F4               	addwfc	prodh,w,c
  2819  000A0E  6EDA               	movwf	fsr2h,c
  2820  000A10  0E01               	movlw	1
  2821  000A12  6EDF               	movwf	indf2,c
  2822  000A14  0012               	return		;funcret
  2823  000A16                     __end_of_Mark_Ignite:
  2824                           	opt stack 0
  2825                           pclatu	equ	0xFFB
  2826                           pclath	equ	0xFFA
  2827                           tblptru	equ	0xFF8
  2828                           tblptrh	equ	0xFF7
  2829                           tblptrl	equ	0xFF6
  2830                           tablat	equ	0xFF5
  2831                           prodh	equ	0xFF4
  2832                           prodl	equ	0xFF3
  2833                           intcon	equ	0xFF2
  2834                           postinc0	equ	0xFEE
  2835                           fsr0h	equ	0xFEA
  2836                           fsr0l	equ	0xFE9
  2837                           wreg	equ	0xFE8
  2838                           fsr1h	equ	0xFE2
  2839                           fsr1l	equ	0xFE1
  2840                           indf2	equ	0xFDF
  2841                           postinc2	equ	0xFDE
  2842                           fsr2h	equ	0xFDA
  2843                           fsr2l	equ	0xFD9
  2844                           status	equ	0xFD8
  2845                           
  2846 ;; *************** function _Check_Power *****************
  2847 ;; Defined at:
  2848 ;;		line 171 in file "ignition.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;  source_power    3   45[COMRAM] float 
  2853 ;;  voltage         3   42[COMRAM] float 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;		None               void
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2863 ;;      Params:         0       0       0       0
  2864 ;;      Locals:         6       0       0       0
  2865 ;;      Temps:          0       0       0       0
  2866 ;;      Totals:         6       0       0       0
  2867 ;;Total ram usage:        6 bytes
  2868 ;; Hardware stack levels used:    1
  2869 ;; Hardware stack levels required when called:    2
  2870 ;; This function calls:
  2871 ;;		___ftdiv
  2872 ;;		___ftge
  2873 ;;		___ftmul
  2874 ;;		___lbtoft
  2875 ;; This function is called by:
  2876 ;;		_Evaluate_Reception
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text21
  2881  00051E                     __ptext21:
  2882                           	opt stack 0
  2883  00051E                     _Check_Power:
  2884                           	opt stack 24
  2885                           
  2886                           ;ignition.c: 174: float source_power = 0;
  2887                           
  2888                           ;incstack = 0
  2889  00051E  0E00               	movlw	0
  2890  000520  6E2E               	movwf	Check_Power@source_power,c
  2891  000522  0E00               	movlw	0
  2892  000524  6E2F               	movwf	Check_Power@source_power+1,c
  2893  000526  0E00               	movlw	0
  2894  000528  6E30               	movwf	Check_Power@source_power+2,c
  2895                           
  2896                           ;ignition.c: 175: float voltage = 0;
  2897  00052A  0E00               	movlw	0
  2898  00052C  6E2B               	movwf	Check_Power@voltage,c
  2899  00052E  0E00               	movlw	0
  2900  000530  6E2C               	movwf	Check_Power@voltage+1,c
  2901  000532  0E00               	movlw	0
  2902  000534  6E2D               	movwf	Check_Power@voltage+2,c
  2903                           
  2904                           ;ignition.c: 177: ADCON0bits.GO_nDONE = 1;
  2905  000536  82C2               	bsf	4034,1,c	;volatile
  2906  000538                     i2l335:
  2907  000538  B2C2               	btfsc	4034,1,c	;volatile
  2908  00053A  D7FE               	goto	i2l335
  2909                           
  2910                           ;ignition.c: 179: voltage = ((ADRESH * 4.096) / 255);
  2911  00053C  0E12               	movlw	18
  2912  00053E  6E10               	movwf	___ftmul@f2,c
  2913  000540  0E83               	movlw	131
  2914  000542  6E11               	movwf	___ftmul@f2+1,c
  2915  000544  0E40               	movlw	64
  2916  000546  6E12               	movwf	___ftmul@f2+2,c
  2917  000548  50C4               	movf	4036,w,c	;volatile
  2918  00054A  EC98  F004         	call	___lbtoft
  2919  00054E  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  2920  000552  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  2921  000556  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  2922  00055A  ECA2  F001         	call	___ftmul	;wreg free
  2923  00055E  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2924  000562  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2925  000566  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2926  00056A  0E00               	movlw	0
  2927  00056C  6E1F               	movwf	___ftdiv@f2,c
  2928  00056E  0E7F               	movlw	127
  2929  000570  6E20               	movwf	___ftdiv@f2+1,c
  2930  000572  0E43               	movlw	67
  2931  000574  6E21               	movwf	___ftdiv@f2+2,c
  2932  000576  EC1C  F002         	call	___ftdiv	;wreg free
  2933  00057A  C01C  F02B         	movff	?___ftdiv,Check_Power@voltage
  2934  00057E  C01D  F02C         	movff	?___ftdiv+1,Check_Power@voltage+1
  2935  000582  C01E  F02D         	movff	?___ftdiv+2,Check_Power@voltage+2
  2936                           
  2937                           ;ignition.c: 180: source_power = (4.9286 * voltage);
  2938  000586  C02B  F00D         	movff	Check_Power@voltage,___ftmul@f1
  2939  00058A  C02C  F00E         	movff	Check_Power@voltage+1,___ftmul@f1+1
  2940  00058E  C02D  F00F         	movff	Check_Power@voltage+2,___ftmul@f1+2
  2941  000592  0EB7               	movlw	183
  2942  000594  6E10               	movwf	___ftmul@f2,c
  2943  000596  0E9D               	movlw	157
  2944  000598  6E11               	movwf	___ftmul@f2+1,c
  2945  00059A  0E40               	movlw	64
  2946  00059C  6E12               	movwf	___ftmul@f2+2,c
  2947  00059E  ECA2  F001         	call	___ftmul	;wreg free
  2948  0005A2  C00D  F02E         	movff	?___ftmul,Check_Power@source_power
  2949  0005A6  C00E  F02F         	movff	?___ftmul+1,Check_Power@source_power+1
  2950  0005AA  C00F  F030         	movff	?___ftmul+2,Check_Power@source_power+2
  2951                           
  2952                           ;ignition.c: 182: if (source_power < 16.8) {
  2953  0005AE  C02E  F001         	movff	Check_Power@source_power,___ftge@ff1
  2954  0005B2  C02F  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  2955  0005B6  C030  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  2956  0005BA  0E66               	movlw	102
  2957  0005BC  6E04               	movwf	___ftge@ff2,c
  2958  0005BE  0E86               	movlw	134
  2959  0005C0  6E05               	movwf	___ftge@ff2+1,c
  2960  0005C2  0E41               	movlw	65
  2961  0005C4  6E06               	movwf	___ftge@ff2+2,c
  2962  0005C6  EC54  F003         	call	___ftge	;wreg free
  2963  0005CA  B0D8               	btfsc	status,0,c
  2964  0005CC  D003               	goto	i2l1709
  2965                           
  2966                           ;ignition.c: 183: p_status = '0';
  2967  0005CE  0E30               	movlw	48
  2968  0005D0  6E46               	movwf	_p_status,c
  2969                           
  2970                           ;ignition.c: 184: } else if (source_power >= 16.8) {
  2971  0005D2  0012               	return	
  2972  0005D4                     i2l1709:
  2973  0005D4  C02E  F001         	movff	Check_Power@source_power,___ftge@ff1
  2974  0005D8  C02F  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  2975  0005DC  C030  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  2976  0005E0  0E66               	movlw	102
  2977  0005E2  6E04               	movwf	___ftge@ff2,c
  2978  0005E4  0E86               	movlw	134
  2979  0005E6  6E05               	movwf	___ftge@ff2+1,c
  2980  0005E8  0E41               	movlw	65
  2981  0005EA  6E06               	movwf	___ftge@ff2+2,c
  2982  0005EC  EC54  F003         	call	___ftge	;wreg free
  2983  0005F0  A0D8               	btfss	status,0,c
  2984  0005F2  0012               	return	
  2985                           
  2986                           ;ignition.c: 185: p_status = '1';
  2987  0005F4  0E31               	movlw	49
  2988  0005F6  6E46               	movwf	_p_status,c
  2989  0005F8  0012               	return	
  2990  0005FA                     __end_of_Check_Power:
  2991                           	opt stack 0
  2992                           pclatu	equ	0xFFB
  2993                           pclath	equ	0xFFA
  2994                           tblptru	equ	0xFF8
  2995                           tblptrh	equ	0xFF7
  2996                           tblptrl	equ	0xFF6
  2997                           tablat	equ	0xFF5
  2998                           prodh	equ	0xFF4
  2999                           prodl	equ	0xFF3
  3000                           intcon	equ	0xFF2
  3001                           postinc0	equ	0xFEE
  3002                           fsr0h	equ	0xFEA
  3003                           fsr0l	equ	0xFE9
  3004                           wreg	equ	0xFE8
  3005                           fsr1h	equ	0xFE2
  3006                           fsr1l	equ	0xFE1
  3007                           indf2	equ	0xFDF
  3008                           postinc2	equ	0xFDE
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           status	equ	0xFD8
  3012                           
  3013 ;; *************** function ___lbtoft *****************
  3014 ;; Defined at:
  3015 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbtoft.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  c               1    wreg     unsigned char 
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;  c               1   11[COMRAM] unsigned char 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  3    8[COMRAM] float 
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3029 ;;      Params:         3       0       0       0
  3030 ;;      Locals:         1       0       0       0
  3031 ;;      Temps:          0       0       0       0
  3032 ;;      Totals:         4       0       0       0
  3033 ;;Total ram usage:        4 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    1
  3036 ;; This function calls:
  3037 ;;		___ftpack
  3038 ;; This function is called by:
  3039 ;;		_Check_Power
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text22
  3044  000930                     __ptext22:
  3045                           	opt stack 0
  3046  000930                     ___lbtoft:
  3047                           	opt stack 24
  3048                           
  3049                           ;incstack = 0
  3050                           ;___lbtoft@c stored from wreg
  3051  000930  6E0C               	movwf	___lbtoft@c,c
  3052  000932  500C               	movf	___lbtoft@c,w,c
  3053  000934  6E01               	movwf	___ftpack@arg,c
  3054  000936  6A02               	clrf	___ftpack@arg+1,c
  3055  000938  6A03               	clrf	___ftpack@arg+2,c
  3056  00093A  0E8E               	movlw	142
  3057  00093C  6E04               	movwf	___ftpack@exp,c
  3058  00093E  0E00               	movlw	0
  3059  000940  6E05               	movwf	___ftpack@sign,c
  3060  000942  ECFD  F002         	call	___ftpack	;wreg free
  3061  000946  C001  F009         	movff	?___ftpack,?___lbtoft
  3062  00094A  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  3063  00094E  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  3064  000952  0012               	return	
  3065  000954                     __end_of___lbtoft:
  3066                           	opt stack 0
  3067                           pclatu	equ	0xFFB
  3068                           pclath	equ	0xFFA
  3069                           tblptru	equ	0xFF8
  3070                           tblptrh	equ	0xFF7
  3071                           tblptrl	equ	0xFF6
  3072                           tablat	equ	0xFF5
  3073                           prodh	equ	0xFF4
  3074                           prodl	equ	0xFF3
  3075                           intcon	equ	0xFF2
  3076                           postinc0	equ	0xFEE
  3077                           fsr0h	equ	0xFEA
  3078                           fsr0l	equ	0xFE9
  3079                           wreg	equ	0xFE8
  3080                           fsr1h	equ	0xFE2
  3081                           fsr1l	equ	0xFE1
  3082                           indf2	equ	0xFDF
  3083                           postinc2	equ	0xFDE
  3084                           fsr2h	equ	0xFDA
  3085                           fsr2l	equ	0xFD9
  3086                           status	equ	0xFD8
  3087                           
  3088 ;; *************** function ___ftmul *****************
  3089 ;; Defined at:
  3090 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  f1              3   12[COMRAM] float 
  3093 ;;  f2              3   15[COMRAM] float 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3096 ;;  sign            1   26[COMRAM] unsigned char 
  3097 ;;  cntr            1   25[COMRAM] unsigned char 
  3098 ;;  exp             1   21[COMRAM] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  3   12[COMRAM] float 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3108 ;;      Params:         6       0       0       0
  3109 ;;      Locals:         6       0       0       0
  3110 ;;      Temps:          3       0       0       0
  3111 ;;      Totals:        15       0       0       0
  3112 ;;Total ram usage:       15 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    1
  3115 ;; This function calls:
  3116 ;;		___ftpack
  3117 ;; This function is called by:
  3118 ;;		_Check_Power
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text23
  3123  000344                     __ptext23:
  3124                           	opt stack 0
  3125  000344                     ___ftmul:
  3126                           	opt stack 24
  3127                           
  3128                           ;incstack = 0
  3129  000344  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3130  000348  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3131  00034A  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3132  00034C  340E               	rlcf	___ftmul@f1+1,w,c
  3133  00034E  3613               	rlcf	??___ftmul& (0+255),f,c
  3134  000350  E301               	bnc	u90_41
  3135  000352  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3136  000354                     u90_41:
  3137  000354  5013               	movf	??___ftmul,w,c
  3138  000356  6E16               	movwf	___ftmul@exp,c
  3139  000358  5016               	movf	___ftmul@exp,w,c
  3140  00035A  A4D8               	btfss	status,2,c
  3141  00035C  D007               	goto	i2l1529
  3142  00035E  0E00               	movlw	0
  3143  000360  6E0D               	movwf	?___ftmul,c
  3144  000362  0E00               	movlw	0
  3145  000364  6E0E               	movwf	?___ftmul+1,c
  3146  000366  0E00               	movlw	0
  3147  000368  6E0F               	movwf	?___ftmul+2,c
  3148  00036A  0012               	return	
  3149  00036C                     i2l1529:
  3150  00036C  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3151  000370  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3152  000372  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3153  000374  3411               	rlcf	___ftmul@f2+1,w,c
  3154  000376  3613               	rlcf	??___ftmul& (0+255),f,c
  3155  000378  E301               	bnc	u92_41
  3156  00037A  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3157  00037C                     u92_41:
  3158  00037C  5013               	movf	??___ftmul,w,c
  3159  00037E  6E1B               	movwf	___ftmul@sign,c
  3160  000380  501B               	movf	___ftmul@sign,w,c
  3161  000382  A4D8               	btfss	status,2,c
  3162  000384  D007               	goto	i2l1535
  3163  000386  0E00               	movlw	0
  3164  000388  6E0D               	movwf	?___ftmul,c
  3165  00038A  0E00               	movlw	0
  3166  00038C  6E0E               	movwf	?___ftmul+1,c
  3167  00038E  0E00               	movlw	0
  3168  000390  6E0F               	movwf	?___ftmul+2,c
  3169  000392  0012               	return	
  3170  000394                     i2l1535:
  3171  000394  501B               	movf	___ftmul@sign,w,c
  3172  000396  0F7B               	addlw	123
  3173  000398  2616               	addwf	___ftmul@exp,f,c
  3174  00039A  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3175  00039E  5012               	movf	___ftmul@f2+2,w,c
  3176  0003A0  1A1B               	xorwf	___ftmul@sign,f,c
  3177  0003A2  0E80               	movlw	128
  3178  0003A4  161B               	andwf	___ftmul@sign,f,c
  3179  0003A6  8E0E               	bsf	___ftmul@f1+1,7,c
  3180  0003A8  8E11               	bsf	___ftmul@f2+1,7,c
  3181  0003AA  0EFF               	movlw	255
  3182  0003AC  1610               	andwf	___ftmul@f2,f,c
  3183  0003AE  0EFF               	movlw	255
  3184  0003B0  1611               	andwf	___ftmul@f2+1,f,c
  3185  0003B2  0E00               	movlw	0
  3186  0003B4  1612               	andwf	___ftmul@f2+2,f,c
  3187  0003B6  0E00               	movlw	0
  3188  0003B8  6E17               	movwf	___ftmul@f3_as_product,c
  3189  0003BA  0E00               	movlw	0
  3190  0003BC  6E18               	movwf	___ftmul@f3_as_product+1,c
  3191  0003BE  0E00               	movlw	0
  3192  0003C0  6E19               	movwf	___ftmul@f3_as_product+2,c
  3193  0003C2  0E07               	movlw	7
  3194  0003C4  6E1A               	movwf	___ftmul@cntr,c
  3195  0003C6                     i2l1549:
  3196  0003C6  A00D               	btfss	___ftmul@f1,0,c
  3197  0003C8  D006               	goto	i2l1553
  3198  0003CA  5010               	movf	___ftmul@f2,w,c
  3199  0003CC  2617               	addwf	___ftmul@f3_as_product,f,c
  3200  0003CE  5011               	movf	___ftmul@f2+1,w,c
  3201  0003D0  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3202  0003D2  5012               	movf	___ftmul@f2+2,w,c
  3203  0003D4  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3204  0003D6                     i2l1553:
  3205  0003D6  90D8               	bcf	status,0,c
  3206  0003D8  320F               	rrcf	___ftmul@f1+2,f,c
  3207  0003DA  320E               	rrcf	___ftmul@f1+1,f,c
  3208  0003DC  320D               	rrcf	___ftmul@f1,f,c
  3209  0003DE  90D8               	bcf	status,0,c
  3210  0003E0  3610               	rlcf	___ftmul@f2,f,c
  3211  0003E2  3611               	rlcf	___ftmul@f2+1,f,c
  3212  0003E4  3612               	rlcf	___ftmul@f2+2,f,c
  3213  0003E6  2E1A               	decfsz	___ftmul@cntr,f,c
  3214  0003E8  D7EE               	goto	i2l1549
  3215  0003EA  0E09               	movlw	9
  3216  0003EC  6E1A               	movwf	___ftmul@cntr,c
  3217  0003EE                     i2l1559:
  3218  0003EE  A00D               	btfss	___ftmul@f1,0,c
  3219  0003F0  D006               	goto	i2l1563
  3220  0003F2  5010               	movf	___ftmul@f2,w,c
  3221  0003F4  2617               	addwf	___ftmul@f3_as_product,f,c
  3222  0003F6  5011               	movf	___ftmul@f2+1,w,c
  3223  0003F8  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3224  0003FA  5012               	movf	___ftmul@f2+2,w,c
  3225  0003FC  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3226  0003FE                     i2l1563:
  3227  0003FE  90D8               	bcf	status,0,c
  3228  000400  320F               	rrcf	___ftmul@f1+2,f,c
  3229  000402  320E               	rrcf	___ftmul@f1+1,f,c
  3230  000404  320D               	rrcf	___ftmul@f1,f,c
  3231  000406  90D8               	bcf	status,0,c
  3232  000408  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  3233  00040A  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  3234  00040C  3217               	rrcf	___ftmul@f3_as_product,f,c
  3235  00040E  2E1A               	decfsz	___ftmul@cntr,f,c
  3236  000410  D7EE               	goto	i2l1559
  3237  000412  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3238  000416  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3239  00041A  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3240  00041E  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3241  000422  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3242  000426  ECFD  F002         	call	___ftpack	;wreg free
  3243  00042A  C001  F00D         	movff	?___ftpack,?___ftmul
  3244  00042E  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3245  000432  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3246  000436  0012               	return	
  3247  000438                     __end_of___ftmul:
  3248                           	opt stack 0
  3249                           pclatu	equ	0xFFB
  3250                           pclath	equ	0xFFA
  3251                           tblptru	equ	0xFF8
  3252                           tblptrh	equ	0xFF7
  3253                           tblptrl	equ	0xFF6
  3254                           tablat	equ	0xFF5
  3255                           prodh	equ	0xFF4
  3256                           prodl	equ	0xFF3
  3257                           intcon	equ	0xFF2
  3258                           postinc0	equ	0xFEE
  3259                           fsr0h	equ	0xFEA
  3260                           fsr0l	equ	0xFE9
  3261                           wreg	equ	0xFE8
  3262                           fsr1h	equ	0xFE2
  3263                           fsr1l	equ	0xFE1
  3264                           indf2	equ	0xFDF
  3265                           postinc2	equ	0xFDE
  3266                           fsr2h	equ	0xFDA
  3267                           fsr2l	equ	0xFD9
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function ___ftge *****************
  3271 ;; Defined at:
  3272 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;  ff1             3    0[COMRAM] float 
  3275 ;;  ff2             3    3[COMRAM] float 
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;		None
  3278 ;; Return value:  Size  Location     Type
  3279 ;;		None               void
  3280 ;; Registers used:
  3281 ;;		wreg, status,2, status,0
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3287 ;;      Params:         6       0       0       0
  3288 ;;      Locals:         0       0       0       0
  3289 ;;      Temps:          3       0       0       0
  3290 ;;      Totals:         9       0       0       0
  3291 ;;Total ram usage:        9 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_Check_Power
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text24
  3301  0006A8                     __ptext24:
  3302                           	opt stack 0
  3303  0006A8                     ___ftge:
  3304                           	opt stack 25
  3305                           
  3306                           ;incstack = 0
  3307  0006A8  AE03               	btfss	___ftge@ff1+2,7,c
  3308  0006AA  D016               	goto	i2l1575
  3309  0006AC  C001  F007         	movff	___ftge@ff1,??___ftge
  3310  0006B0  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3311  0006B4  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3312  0006B8  1E07               	comf	??___ftge,f,c
  3313  0006BA  1E08               	comf	??___ftge+1,f,c
  3314  0006BC  1E09               	comf	??___ftge+2,f,c
  3315  0006BE  2A07               	incf	??___ftge,f,c
  3316  0006C0  0E00               	movlw	0
  3317  0006C2  2208               	addwfc	??___ftge+1,f,c
  3318  0006C4  2209               	addwfc	??___ftge+2,f,c
  3319  0006C6  0E00               	movlw	0
  3320  0006C8  2407               	addwf	??___ftge,w,c
  3321  0006CA  6E01               	movwf	___ftge@ff1,c
  3322  0006CC  0E00               	movlw	0
  3323  0006CE  2008               	addwfc	??___ftge+1,w,c
  3324  0006D0  6E02               	movwf	___ftge@ff1+1,c
  3325  0006D2  0E80               	movlw	128
  3326  0006D4  2009               	addwfc	??___ftge+2,w,c
  3327  0006D6  6E03               	movwf	___ftge@ff1+2,c
  3328  0006D8                     i2l1575:
  3329  0006D8  AE06               	btfss	___ftge@ff2+2,7,c
  3330  0006DA  D016               	goto	i2l1579
  3331  0006DC  C004  F007         	movff	___ftge@ff2,??___ftge
  3332  0006E0  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3333  0006E4  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3334  0006E8  1E07               	comf	??___ftge,f,c
  3335  0006EA  1E08               	comf	??___ftge+1,f,c
  3336  0006EC  1E09               	comf	??___ftge+2,f,c
  3337  0006EE  2A07               	incf	??___ftge,f,c
  3338  0006F0  0E00               	movlw	0
  3339  0006F2  2208               	addwfc	??___ftge+1,f,c
  3340  0006F4  2209               	addwfc	??___ftge+2,f,c
  3341  0006F6  0E00               	movlw	0
  3342  0006F8  2407               	addwf	??___ftge,w,c
  3343  0006FA  6E04               	movwf	___ftge@ff2,c
  3344  0006FC  0E00               	movlw	0
  3345  0006FE  2008               	addwfc	??___ftge+1,w,c
  3346  000700  6E05               	movwf	___ftge@ff2+1,c
  3347  000702  0E80               	movlw	128
  3348  000704  2009               	addwfc	??___ftge+2,w,c
  3349  000706  6E06               	movwf	___ftge@ff2+2,c
  3350  000708                     i2l1579:
  3351  000708  0E00               	movlw	0
  3352  00070A  1A01               	xorwf	___ftge@ff1,f,c
  3353  00070C  0E00               	movlw	0
  3354  00070E  1A02               	xorwf	___ftge@ff1+1,f,c
  3355  000710  0E80               	movlw	128
  3356  000712  1A03               	xorwf	___ftge@ff1+2,f,c
  3357  000714  0E00               	movlw	0
  3358  000716  1A04               	xorwf	___ftge@ff2,f,c
  3359  000718  0E00               	movlw	0
  3360  00071A  1A05               	xorwf	___ftge@ff2+1,f,c
  3361  00071C  0E80               	movlw	128
  3362  00071E  1A06               	xorwf	___ftge@ff2+2,f,c
  3363  000720  5004               	movf	___ftge@ff2,w,c
  3364  000722  5C01               	subwf	___ftge@ff1,w,c
  3365  000724  5005               	movf	___ftge@ff2+1,w,c
  3366  000726  5802               	subwfb	___ftge@ff1+1,w,c
  3367  000728  5006               	movf	___ftge@ff2+2,w,c
  3368  00072A  5803               	subwfb	___ftge@ff1+2,w,c
  3369  00072C  B0D8               	btfsc	status,0,c
  3370  00072E  D002               	goto	i2l1585
  3371  000730  90D8               	bcf	status,0,c
  3372  000732  0012               	return	
  3373  000734                     i2l1585:
  3374  000734  80D8               	bsf	status,0,c
  3375  000736  0012               	return	
  3376  000738                     __end_of___ftge:
  3377                           	opt stack 0
  3378                           pclatu	equ	0xFFB
  3379                           pclath	equ	0xFFA
  3380                           tblptru	equ	0xFF8
  3381                           tblptrh	equ	0xFF7
  3382                           tblptrl	equ	0xFF6
  3383                           tablat	equ	0xFF5
  3384                           prodh	equ	0xFF4
  3385                           prodl	equ	0xFF3
  3386                           intcon	equ	0xFF2
  3387                           postinc0	equ	0xFEE
  3388                           fsr0h	equ	0xFEA
  3389                           fsr0l	equ	0xFE9
  3390                           wreg	equ	0xFE8
  3391                           fsr1h	equ	0xFE2
  3392                           fsr1l	equ	0xFE1
  3393                           indf2	equ	0xFDF
  3394                           postinc2	equ	0xFDE
  3395                           fsr2h	equ	0xFDA
  3396                           fsr2l	equ	0xFD9
  3397                           status	equ	0xFD8
  3398                           
  3399 ;; *************** function ___ftdiv *****************
  3400 ;; Defined at:
  3401 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  f1              3   27[COMRAM] float 
  3404 ;;  f2              3   30[COMRAM] float 
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;  f3              3   37[COMRAM] float 
  3407 ;;  sign            1   41[COMRAM] unsigned char 
  3408 ;;  exp             1   40[COMRAM] unsigned char 
  3409 ;;  cntr            1   36[COMRAM] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  3   27[COMRAM] float 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3419 ;;      Params:         6       0       0       0
  3420 ;;      Locals:         6       0       0       0
  3421 ;;      Temps:          3       0       0       0
  3422 ;;      Totals:        15       0       0       0
  3423 ;;Total ram usage:       15 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    1
  3426 ;; This function calls:
  3427 ;;		___ftpack
  3428 ;; This function is called by:
  3429 ;;		_Check_Power
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text25
  3434  000438                     __ptext25:
  3435                           	opt stack 0
  3436  000438                     ___ftdiv:
  3437                           	opt stack 24
  3438                           
  3439                           ;incstack = 0
  3440  000438  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  3441  00043C  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3442  00043E  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3443  000440  341D               	rlcf	___ftdiv@f1+1,w,c
  3444  000442  3622               	rlcf	??___ftdiv& (0+255),f,c
  3445  000444  E301               	bnc	u85_41
  3446  000446  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3447  000448                     u85_41:
  3448  000448  5022               	movf	??___ftdiv,w,c
  3449  00044A  6E29               	movwf	___ftdiv@exp,c
  3450  00044C  5029               	movf	___ftdiv@exp,w,c
  3451  00044E  A4D8               	btfss	status,2,c
  3452  000450  D007               	goto	i2l1483
  3453  000452  0E00               	movlw	0
  3454  000454  6E1C               	movwf	?___ftdiv,c
  3455  000456  0E00               	movlw	0
  3456  000458  6E1D               	movwf	?___ftdiv+1,c
  3457  00045A  0E00               	movlw	0
  3458  00045C  6E1E               	movwf	?___ftdiv+2,c
  3459  00045E  0012               	return	
  3460  000460                     i2l1483:
  3461  000460  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  3462  000464  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3463  000466  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3464  000468  3420               	rlcf	___ftdiv@f2+1,w,c
  3465  00046A  3622               	rlcf	??___ftdiv& (0+255),f,c
  3466  00046C  E301               	bnc	u87_41
  3467  00046E  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3468  000470                     u87_41:
  3469  000470  5022               	movf	??___ftdiv,w,c
  3470  000472  6E2A               	movwf	___ftdiv@sign,c
  3471  000474  502A               	movf	___ftdiv@sign,w,c
  3472  000476  A4D8               	btfss	status,2,c
  3473  000478  D007               	goto	i2l1489
  3474  00047A  0E00               	movlw	0
  3475  00047C  6E1C               	movwf	?___ftdiv,c
  3476  00047E  0E00               	movlw	0
  3477  000480  6E1D               	movwf	?___ftdiv+1,c
  3478  000482  0E00               	movlw	0
  3479  000484  6E1E               	movwf	?___ftdiv+2,c
  3480  000486  0012               	return	
  3481  000488                     i2l1489:
  3482  000488  0E00               	movlw	0
  3483  00048A  6E26               	movwf	___ftdiv@f3,c
  3484  00048C  0E00               	movlw	0
  3485  00048E  6E27               	movwf	___ftdiv@f3+1,c
  3486  000490  0E00               	movlw	0
  3487  000492  6E28               	movwf	___ftdiv@f3+2,c
  3488  000494  502A               	movf	___ftdiv@sign,w,c
  3489  000496  0F89               	addlw	137
  3490  000498  5E29               	subwf	___ftdiv@exp,f,c
  3491  00049A  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3492  00049E  5021               	movf	___ftdiv@f2+2,w,c
  3493  0004A0  1A2A               	xorwf	___ftdiv@sign,f,c
  3494  0004A2  0E80               	movlw	128
  3495  0004A4  162A               	andwf	___ftdiv@sign,f,c
  3496  0004A6  8E1D               	bsf	___ftdiv@f1+1,7,c
  3497  0004A8  0EFF               	movlw	255
  3498  0004AA  161C               	andwf	___ftdiv@f1,f,c
  3499  0004AC  0EFF               	movlw	255
  3500  0004AE  161D               	andwf	___ftdiv@f1+1,f,c
  3501  0004B0  0E00               	movlw	0
  3502  0004B2  161E               	andwf	___ftdiv@f1+2,f,c
  3503  0004B4  8E20               	bsf	___ftdiv@f2+1,7,c
  3504  0004B6  0EFF               	movlw	255
  3505  0004B8  161F               	andwf	___ftdiv@f2,f,c
  3506  0004BA  0EFF               	movlw	255
  3507  0004BC  1620               	andwf	___ftdiv@f2+1,f,c
  3508  0004BE  0E00               	movlw	0
  3509  0004C0  1621               	andwf	___ftdiv@f2+2,f,c
  3510  0004C2  0E18               	movlw	24
  3511  0004C4  6E25               	movwf	___ftdiv@cntr,c
  3512  0004C6                     i2l1509:
  3513  0004C6  90D8               	bcf	status,0,c
  3514  0004C8  3626               	rlcf	___ftdiv@f3,f,c
  3515  0004CA  3627               	rlcf	___ftdiv@f3+1,f,c
  3516  0004CC  3628               	rlcf	___ftdiv@f3+2,f,c
  3517  0004CE  501F               	movf	___ftdiv@f2,w,c
  3518  0004D0  5C1C               	subwf	___ftdiv@f1,w,c
  3519  0004D2  5020               	movf	___ftdiv@f2+1,w,c
  3520  0004D4  581D               	subwfb	___ftdiv@f1+1,w,c
  3521  0004D6  5021               	movf	___ftdiv@f2+2,w,c
  3522  0004D8  581E               	subwfb	___ftdiv@f1+2,w,c
  3523  0004DA  A0D8               	btfss	status,0,c
  3524  0004DC  D007               	goto	i2l674
  3525  0004DE  501F               	movf	___ftdiv@f2,w,c
  3526  0004E0  5E1C               	subwf	___ftdiv@f1,f,c
  3527  0004E2  5020               	movf	___ftdiv@f2+1,w,c
  3528  0004E4  5A1D               	subwfb	___ftdiv@f1+1,f,c
  3529  0004E6  5021               	movf	___ftdiv@f2+2,w,c
  3530  0004E8  5A1E               	subwfb	___ftdiv@f1+2,f,c
  3531  0004EA  8026               	bsf	___ftdiv@f3,0,c
  3532  0004EC                     i2l674:
  3533  0004EC  90D8               	bcf	status,0,c
  3534  0004EE  361C               	rlcf	___ftdiv@f1,f,c
  3535  0004F0  361D               	rlcf	___ftdiv@f1+1,f,c
  3536  0004F2  361E               	rlcf	___ftdiv@f1+2,f,c
  3537  0004F4  2E25               	decfsz	___ftdiv@cntr,f,c
  3538  0004F6  D7E7               	goto	i2l1509
  3539  0004F8  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  3540  0004FC  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3541  000500  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3542  000504  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  3543  000508  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  3544  00050C  ECFD  F002         	call	___ftpack	;wreg free
  3545  000510  C001  F01C         	movff	?___ftpack,?___ftdiv
  3546  000514  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  3547  000518  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  3548  00051C  0012               	return	
  3549  00051E                     __end_of___ftdiv:
  3550                           	opt stack 0
  3551                           pclatu	equ	0xFFB
  3552                           pclath	equ	0xFFA
  3553                           tblptru	equ	0xFF8
  3554                           tblptrh	equ	0xFF7
  3555                           tblptrl	equ	0xFF6
  3556                           tablat	equ	0xFF5
  3557                           prodh	equ	0xFF4
  3558                           prodl	equ	0xFF3
  3559                           intcon	equ	0xFF2
  3560                           postinc0	equ	0xFEE
  3561                           fsr0h	equ	0xFEA
  3562                           fsr0l	equ	0xFE9
  3563                           wreg	equ	0xFE8
  3564                           fsr1h	equ	0xFE2
  3565                           fsr1l	equ	0xFE1
  3566                           indf2	equ	0xFDF
  3567                           postinc2	equ	0xFDE
  3568                           fsr2h	equ	0xFDA
  3569                           fsr2l	equ	0xFD9
  3570                           status	equ	0xFD8
  3571                           
  3572 ;; *************** function ___ftpack *****************
  3573 ;; Defined at:
  3574 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  arg             3    0[COMRAM] unsigned um
  3577 ;;  exp             1    3[COMRAM] unsigned char 
  3578 ;;  sign            1    4[COMRAM] unsigned char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  3    0[COMRAM] float 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3590 ;;      Params:         5       0       0       0
  3591 ;;      Locals:         0       0       0       0
  3592 ;;      Temps:          3       0       0       0
  3593 ;;      Totals:         8       0       0       0
  3594 ;;Total ram usage:        8 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; This function calls:
  3597 ;;		Nothing
  3598 ;; This function is called by:
  3599 ;;		___ftdiv
  3600 ;;		___ftmul
  3601 ;;		___lbtoft
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text26
  3606  0005FA                     __ptext26:
  3607                           	opt stack 0
  3608  0005FA                     ___ftpack:
  3609                           	opt stack 24
  3610                           
  3611                           ;incstack = 0
  3612  0005FA  5004               	movf	___ftpack@exp,w,c
  3613  0005FC  B4D8               	btfsc	status,2,c
  3614  0005FE  D005               	goto	i2l1421
  3615  000600  5001               	movf	___ftpack@arg,w,c
  3616  000602  1002               	iorwf	___ftpack@arg+1,w,c
  3617  000604  1003               	iorwf	___ftpack@arg+2,w,c
  3618  000606  A4D8               	btfss	status,2,c
  3619  000608  D00C               	goto	i2l1427
  3620  00060A                     i2l1421:
  3621  00060A  0E00               	movlw	0
  3622  00060C  6E01               	movwf	?___ftpack,c
  3623  00060E  0E00               	movlw	0
  3624  000610  6E02               	movwf	?___ftpack+1,c
  3625  000612  0E00               	movlw	0
  3626  000614  6E03               	movwf	?___ftpack+2,c
  3627  000616  0012               	return	
  3628  000618                     i2l1425:
  3629  000618  2A04               	incf	___ftpack@exp,f,c
  3630  00061A  90D8               	bcf	status,0,c
  3631  00061C  3203               	rrcf	___ftpack@arg+2,f,c
  3632  00061E  3202               	rrcf	___ftpack@arg+1,f,c
  3633  000620  3201               	rrcf	___ftpack@arg,f,c
  3634  000622                     i2l1427:
  3635  000622  0E00               	movlw	0
  3636  000624  1401               	andwf	___ftpack@arg,w,c
  3637  000626  6E06               	movwf	??___ftpack& (0+255),c
  3638  000628  0E00               	movlw	0
  3639  00062A  1402               	andwf	___ftpack@arg+1,w,c
  3640  00062C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3641  00062E  0EFE               	movlw	254
  3642  000630  1403               	andwf	___ftpack@arg+2,w,c
  3643  000632  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3644  000634  5006               	movf	??___ftpack,w,c
  3645  000636  1007               	iorwf	??___ftpack+1,w,c
  3646  000638  1008               	iorwf	??___ftpack+2,w,c
  3647  00063A  B4D8               	btfsc	status,2,c
  3648  00063C  D00C               	goto	i2l1433
  3649  00063E  D7EC               	goto	i2l1425
  3650  000640                     i2l1429:
  3651  000640  2A04               	incf	___ftpack@exp,f,c
  3652  000642  0E01               	movlw	1
  3653  000644  2601               	addwf	___ftpack@arg,f,c
  3654  000646  0E00               	movlw	0
  3655  000648  2202               	addwfc	___ftpack@arg+1,f,c
  3656  00064A  0E00               	movlw	0
  3657  00064C  2203               	addwfc	___ftpack@arg+2,f,c
  3658  00064E  90D8               	bcf	status,0,c
  3659  000650  3203               	rrcf	___ftpack@arg+2,f,c
  3660  000652  3202               	rrcf	___ftpack@arg+1,f,c
  3661  000654  3201               	rrcf	___ftpack@arg,f,c
  3662  000656                     i2l1433:
  3663  000656  0E00               	movlw	0
  3664  000658  1401               	andwf	___ftpack@arg,w,c
  3665  00065A  6E06               	movwf	??___ftpack& (0+255),c
  3666  00065C  0E00               	movlw	0
  3667  00065E  1402               	andwf	___ftpack@arg+1,w,c
  3668  000660  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3669  000662  0EFF               	movlw	255
  3670  000664  1403               	andwf	___ftpack@arg+2,w,c
  3671  000666  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3672  000668  5006               	movf	??___ftpack,w,c
  3673  00066A  1007               	iorwf	??___ftpack+1,w,c
  3674  00066C  1008               	iorwf	??___ftpack+2,w,c
  3675  00066E  B4D8               	btfsc	status,2,c
  3676  000670  D006               	goto	i2l1437
  3677  000672  D7E6               	goto	i2l1429
  3678  000674                     i2l1435:
  3679  000674  0604               	decf	___ftpack@exp,f,c
  3680  000676  90D8               	bcf	status,0,c
  3681  000678  3601               	rlcf	___ftpack@arg,f,c
  3682  00067A  3602               	rlcf	___ftpack@arg+1,f,c
  3683  00067C  3603               	rlcf	___ftpack@arg+2,f,c
  3684  00067E                     i2l1437:
  3685  00067E  BE02               	btfsc	___ftpack@arg+1,7,c
  3686  000680  D003               	goto	i2l616
  3687  000682  0E02               	movlw	2
  3688  000684  6004               	cpfslt	___ftpack@exp,c
  3689  000686  D7F6               	goto	i2l1435
  3690  000688                     i2l616:
  3691  000688  A004               	btfss	___ftpack@exp,0,c
  3692  00068A  9E02               	bcf	___ftpack@arg+1,7,c
  3693  00068C  90D8               	bcf	status,0,c
  3694  00068E  3204               	rrcf	___ftpack@exp,f,c
  3695  000690  5004               	movf	___ftpack@exp,w,c
  3696  000692  1203               	iorwf	___ftpack@arg+2,f,c
  3697  000694  5005               	movf	___ftpack@sign,w,c
  3698  000696  A4D8               	btfss	status,2,c
  3699  000698  8E03               	bsf	___ftpack@arg+2,7,c
  3700  00069A  C001  F001         	movff	___ftpack@arg,?___ftpack
  3701  00069E  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3702  0006A2  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3703  0006A6  0012               	return	
  3704  0006A8                     __end_of___ftpack:
  3705                           	opt stack 0
  3706  0000                     pclatu	equ	0xFFB
  3707                           pclath	equ	0xFFA
  3708                           tblptru	equ	0xFF8
  3709                           tblptrh	equ	0xFF7
  3710                           tblptrl	equ	0xFF6
  3711                           tablat	equ	0xFF5
  3712                           prodh	equ	0xFF4
  3713                           prodl	equ	0xFF3
  3714                           intcon	equ	0xFF2
  3715                           postinc0	equ	0xFEE
  3716                           fsr0h	equ	0xFEA
  3717                           fsr0l	equ	0xFE9
  3718                           wreg	equ	0xFE8
  3719                           fsr1h	equ	0xFE2
  3720                           fsr1l	equ	0xFE1
  3721                           indf2	equ	0xFDF
  3722                           postinc2	equ	0xFDE
  3723                           fsr2h	equ	0xFDA
  3724                           fsr2l	equ	0xFD9
  3725                           status	equ	0xFD8
  3726                           pclatu	equ	0xFFB
  3727                           pclath	equ	0xFFA
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           intcon	equ	0xFF2
  3735                           postinc0	equ	0xFEE
  3736                           fsr0h	equ	0xFEA
  3737                           fsr0l	equ	0xFE9
  3738                           wreg	equ	0xFE8
  3739                           fsr1h	equ	0xFE2
  3740                           fsr1l	equ	0xFE1
  3741                           indf2	equ	0xFDF
  3742                           postinc2	equ	0xFDE
  3743                           fsr2h	equ	0xFDA
  3744                           fsr2l	equ	0xFD9
  3745                           status	equ	0xFD8
  3746                           
  3747                           	psect	rparam
  3748  0000                     pclatu	equ	0xFFB
  3749                           pclath	equ	0xFFA
  3750                           tblptru	equ	0xFF8
  3751                           tblptrh	equ	0xFF7
  3752                           tblptrl	equ	0xFF6
  3753                           tablat	equ	0xFF5
  3754                           prodh	equ	0xFF4
  3755                           prodl	equ	0xFF3
  3756                           intcon	equ	0xFF2
  3757                           postinc0	equ	0xFEE
  3758                           fsr0h	equ	0xFEA
  3759                           fsr0l	equ	0xFE9
  3760                           wreg	equ	0xFE8
  3761                           fsr1h	equ	0xFE2
  3762                           fsr1l	equ	0xFE1
  3763                           indf2	equ	0xFDF
  3764                           postinc2	equ	0xFDE
  3765                           fsr2h	equ	0xFDA
  3766                           fsr2l	equ	0xFD9
  3767                           status	equ	0xFD8
  3768                           
  3769                           	psect	temp
  3770  000047                     btemp:
  3771                           	opt stack 0
  3772  000047                     	ds	1
  3773  0000                     int$flags	set	btemp
  3774                           pclatu	equ	0xFFB
  3775                           pclath	equ	0xFFA
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           intcon	equ	0xFF2
  3783                           postinc0	equ	0xFEE
  3784                           fsr0h	equ	0xFEA
  3785                           fsr0l	equ	0xFE9
  3786                           wreg	equ	0xFE8
  3787                           fsr1h	equ	0xFE2
  3788                           fsr1l	equ	0xFE1
  3789                           indf2	equ	0xFDF
  3790                           postinc2	equ	0xFDE
  3791                           fsr2h	equ	0xFDA
  3792                           fsr2l	equ	0xFD9
  3793                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      70
    BANK0           160      3      13
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Evaluate_Reception->_Check_Power
    _Test_Port->_Transmit
    _Check_Power->___ftdiv
    ___lbtoft->___ftpack
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    _main->_Check_Ignition
    _Init->_InitVar
    _Check_Ignition->_Disable_Port
    _Check_Ignition->_Ignite_Port

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     224
                     _Check_Ignition
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0      68
                            _InitADC
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                   _InitTransmission
                           _InitTris
                            _InitVar
 ---------------------------------------------------------------------------------
 (2) _InitVar                                              1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Ignition                                       2     2      0     156
                                              1 BANK0      2     2      0
                       _Disable_Port
                        _Ignite_Port
                           _On_Timer
 ---------------------------------------------------------------------------------
 (2) _On_Timer                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ignite_Port                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Disable_Port                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 15    15      0   11768
                                             48 COMRAM    15    15      0
                 _Evaluate_Reception
                            _Receive
                       _Receive_Dump
 ---------------------------------------------------------------------------------
 (4) _Receive_Dump                                         1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Evaluate_Reception                                   0     0      0   11699
                        _Check_Power
                        _Mark_Ignite
                          _Test_Port
 ---------------------------------------------------------------------------------
 (5) _Test_Port                                            0     0      0    3928
                           _Transmit
 ---------------------------------------------------------------------------------
 (6) _Transmit                                             4     1      3    3928
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _Mark_Ignite                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Check_Power                                          6     6      0    7771
                                             42 COMRAM     6     6      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (6) ___lbtoft                                             4     1      3    2053
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    2715
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     392
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             15     9      6    2541
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Ignition
     _Disable_Port
     _Ignite_Port
     _On_Timer
   _Init
     _InitADC
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTransmission
     _InitTris
     _InitVar

 _Isr (ROOT)
   _Evaluate_Reception
     _Check_Power
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftge
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _Mark_Ignite
     _Test_Port
       _Transmit
   _Receive
   _Receive_Dump

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      3       D       4        8.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     3F      46       1       74.5%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      53       8        0.0%
DATA                 0      0      53      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 18 22:05:26 2017

           ??_Check_Ignition 006B                           l21 0A4C                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                          l300 074A                          l301 074E  
                        l302 0752                          l311 07AE                          l303 0756  
                        l320 07CE                          l304 075A                          l321 07D2  
                        l313 07B2                          l305 075E                          l314 07B6  
                        l306 0762                          l315 07BA                          l316 07BE  
                        l317 07C2                          l318 07C6                          l319 07CA  
                        l296 073E                          l298 0742                          l299 0746  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000                          _Isr 0008  
                        prod 000FF3                          wreg 000FE8                   _TXSTA1bits 000FAC  
              ??_Ignite_Port 006A                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0025  
                       ?_Isr 0001                ??_Mark_Ignite 0001                 ___ftdiv@sign 002A  
                       l1721 088E                         l1625 090A                         l1731 08BE  
                       l1733 08C6                         l1725 0898                         l1629 0914  
                       l1691 0766                         l1697 07D6                         i2l61 083C  
                       i2l70 086C                         i2l55 0820                         i2l64 084C  
                       i2l73 087C                         i2l58 082A                         i2l67 085C  
                       i2l83 0A34                         Isr@c 003F                         _Init 0954  
                       _main 0A48                 ___ftpack@arg 0001                 ___ftpack@exp 0004  
                       fsr0h 000FEA                         fsr1h 000FE2                         fsr0l 000FE9  
                       fsr2h 000FDA                         fsr1l 000FE1                         indf2 000FDF  
                       fsr2l 000FD9                         btemp 0047                __CFG_BORV$190 000000  
               Transmit@port 0002                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 011E                __CFG_IESO$OFF 000000  
               ___ftmul@cntr 001A                 ___param_bank 000010                 ___ftmul@sign 001B  
            __end_of_InitADC 0A2A                _InitInterrupt 0A60              __end_of_InitVar 0930  
                      ??_Isr 0031              __end_of_Receive 0A48                 _BAUDCON1bits 000FB8  
                _Check_Power 051E                        ?_Init 0001         __end_of_Disable_Port 0818  
                      ?_main 0001              __end_of___ftdiv 051E              __end_of___ftmul 0438  
                      _T1CON 000FCD            _InitMiscellaneous 0A6A                        i2l251 0124  
                      i2l260 0184                        i2l252 013C                        i2l261 019C  
                      i2l335 0538                        i2l280 0274                        i2l272 0214  
                      i2l264 01B4                        i2l256 0154                        i2l281 028C  
                      i2l273 022C                        i2l265 01CC                        i2l257 016C  
                      i2l284 02A4                        i2l276 0244                        i2l268 01E4  
                      i2l285 02BC                        i2l277 025C                        i2l269 01FC  
                      i2l381 0078                        i2l382 0074                        i2l391 00E2  
                      i2l616 0688                        i2l288 02D4                        i2l289 02EC  
                      i2l385 00A8                        i2l674 04EC                        _TMR1H 000FCF  
                      _TMR1L 000FCE                        _PORTA 000F80                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _PORTE 000F84  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        u90_41 0354  
                      u92_41 037C                        u85_41 0448                        u87_41 0470  
              __CFG_WRT0$OFF 000000     __end_of_InitTransmission 09D4                __CFG_WRT1$OFF 000000  
         ?_InitMiscellaneous 0001               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000           __CFG_MCLRE$EXTMCLR 000000  
              ___ftpack@sign 0005               __pbitbssCOMRAM 0228               __CFG_BOREN$OFF 000000  
        ??_InitMiscellaneous 006A                        tablat 000FF5                        status 000FD8  
        __end_of_Ignite_Port 07A8          __end_of_Mark_Ignite 0A16               ?_InitInterrupt 0001  
            __initialization 08CC                 __end_of_Init 0976                 __end_of_main 0A54  
           __end_of_InitPort 0A00             __end_of_InitTris 09EA             __end_of_On_Timer 0A60  
  __end_of_InitMiscellaneous 0A70                       ??_Init 006B   __end_of_Evaluate_Reception 0998  
                     ??_main 006D              _slave_addressed 0229                __activetblptr 000002  
              ?_Receive_Dump 0001             __end_of_Transmit 0888                       _ADCON0 000FC2  
                     _ADCON1 000FC1                       _ADCON2 000FC0                       _ADRESH 000FC4  
                     _CCPR1H 000FBF                       _CCPR1L 000FBE                       _ANSELA 000F38  
                     _ANSELB 000F39                       _ANSELC 000F3A                       _ANSELD 000F3B  
                     _ANSELE 000F3C             __end_of___ftpack 06A8             __end_of___lbtoft 0954  
                     i2l1421 060A                       i2l1433 0656                       i2l1425 0618  
                     i2l1435 0674                       i2l1427 0622                       i2l1437 067E  
                     i2l1429 0640                       i2l1509 04C6                       i2l1535 0394  
                     i2l1553 03D6                       i2l1529 036C                       i2l1801 00C2  
                     i2l1483 0460                       i2l1563 03FE                       i2l1549 03C6  
                     i2l1709 05D4                       i2l1741 0A44                       i2l1805 00CA  
             __CFG_WDTEN$OFF 000000                       i2l1575 06D8                       i2l1559 03EE  
                     i2l1489 0488                       i2l1585 0734                       i2l1579 0708  
                     i2l1755 098A                       i2l1685 0304                       i2l1795 00AE  
                     _RCREG1 000FAE                       _OSCCON 000FD3           __size_of_InitAnsel 0020  
                     _SPBRG1 000FAF                       _TXREG1 000FAD                    ??_InitADC 006A  
    Check_Power@source_power 002E                    ??_InitVar 006A                    ??_Receive 0001  
                     _Marker 0060               __CFG_XINST$OFF 000000                 _CCPTMRS0bits 000F49  
                     ___ftge 06A8                    ??___ftdiv 0022                    ??___ftmul 0013  
                     clear_0 08D2        ___ftmul@f3_as_product 0017           __size_of_Test_Port 0222  
               __pdataCOMRAM 0046               ??_Receive_Dump 0001                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                  _Ignite_Port 0738  
            __CFG_HFOFST$OFF 000000                  _Mark_Ignite 0A00                   __accesstop 0060  
    __end_of__initialization 08F6              __CFG_PBADEN$OFF 000000                   ___ftge@ff1 0001  
                 ___ftge@ff2 0004              ??_InitInterrupt 006A                ___rparam_used 000001  
                 ___ftdiv@f1 001C                   ___ftdiv@f2 001F                   ___ftdiv@f3 0026  
                 ___lbtoft@c 000C                   ___ftmul@f1 000D                   ___ftmul@f2 0010  
             __pcstackCOMRAM 0001        __size_of_Disable_Port 0070   __size_of_InitMiscellaneous 0006  
          __end_of_InitAnsel 09B8                   __pbssBANK0 0060              __CFG_PLLCFG$OFF 000000  
                  ?_InitPort 0001                    ?_InitTris 0001                    ?_On_Timer 0001  
               _Disable_Port 07A8            __end_of_Test_Port 0344           __CFG_CCP2MX$PORTC1 000000  
                    ?___ftge 0001           __CFG_CCP3MX$PORTB5 000000                    ?_Transmit 0001  
                    _CCP1CON 000FBD                 ?_Check_Power 0001                    ?___ftpack 0001  
                  ?___lbtoft 0009            ?_InitTransmission 0001            __CFG_PRICLKEN$OFF 000000  
         ??_InitTransmission 006A                   ??_InitPort 006A                   ??_InitTris 006A  
                 ??_On_Timer 006A                      _InitADC 0A16                      _InitVar 0904  
            __CFG_PWRTEN$OFF 000000                      _Receive 0A3A                      __Hparam 0000  
       __end_of_Receive_Dump 0A3A                      __Lparam 0000              __size_of___ftge 0090  
                    ___ftdiv 0438                      ___ftmul 0344             Receive_Dump@dump 0001  
                 ??_Transmit 0004              __CFG_STVREN$OFF 000000                      __pcinit 08CC  
                 ??___ftpack 0006                   ??___lbtoft 000C                      __ramtop 0300  
                    __ptext0 0A48                      __ptext1 0954                      __ptext2 0904  
                    __ptext3 09D4                      __ptext4 09B8                      __ptext5 09EA  
                    __ptext6 0A6A                      __ptext7 0A60                      __ptext8 0998  
                    __ptext9 0A16                    _T1CONbits 000FCD                 __size_of_Isr 0116  
    __size_of_Check_Ignition 0044                      _overrun 0228         end_of_initialization 08F6  
         _Evaluate_Reception 0976                __Lmediumconst 0000          ?_Evaluate_Reception 0001  
   Ignite_Port@ignite_number 006A                      postinc0 000FEE                      postinc2 000FDE  
         Check_Power@voltage 002B           Transmit@con_status 0003                    _PORTAbits 000F80  
                  _PORTBbits 000F81                    _PORTCbits 000F82                    _PORTDbits 000F83  
                  _PORTEbits 000F84         ??_Evaluate_Reception 0031                    _TRISCbits 000F94  
               ?_Ignite_Port 0001                 ?_Mark_Ignite 0001                  ___ftdiv@exp 0029  
                ___ftmul@exp 0016               __end_of___ftge 0738                __pidataCOMRAM 0A70  
       __size_of_Check_Power 00DC          start_initialization 08CC                    _InitAnsel 0998  
                __end_of_Isr 011E        __size_of_Receive_Dump 0010              Check_Ignition@c 006C  
          __size_of_InitPort 0016            __size_of_InitTris 0016            __size_of_On_Timer 000C  
      __end_of_InitInterrupt 0A6A                     ??___ftge 0007                    _Test_Port 0122  
          __size_of_Transmit 0070            __size_of___ftpack 00AE            __size_of___lbtoft 0024  
             _Check_Ignition 0888                  __pbssCOMRAM 0040                   ?_InitAnsel 0001  
              __pcstackBANK0 006A                 _Receive_Dump 0A2A                     ?_InitADC 0001  
                   ?_InitVar 0001                     ?_Receive 0001    __size_of_InitTransmission 001C  
                  __pintcode 0008                   ?_Test_Port 0001                     ?___ftdiv 001C  
                   ?___ftmul 000D       __end_of_Check_Ignition 08CC         __size_of_Ignite_Port 0070  
       __size_of_Mark_Ignite 0016                     _PIE1bits 000F9D                     i2u140_47 0842  
                   i2u141_47 0852                     i2u142_47 0862                     i2u143_47 0872  
                   i2u139_47 0832                     _PIR1bits 000F9E             __CFG_WDTPS$32768 000000  
                   _VREFCON0 000F42                   _ADCON0bits 000FC2              ?_Check_Ignition 0001  
                   InitVar@c 006A                  ??_InitAnsel 006A              _receive_counter 0044  
                   _InitPort 09EA                     _InitTris 09D4                     _On_Timer 0A54  
          Transmit@operation 0001             __size_of_InitADC 0014                     __Hrparam 0000  
           __size_of_InitVar 002C             __size_of_Receive 000E                     __Lrparam 0000  
          __CFG_P2BMX$PORTD2 000000                  ??_Test_Port 0005                     _Transmit 0818  
           __size_of___ftdiv 00E6             __size_of___ftmul 00F4                     ___ftpack 05FA  
                   ___lbtoft 0930  __size_of_Evaluate_Reception 0022                     __ptext10 0888  
                   __ptext11 0A54                     __ptext20 0A00                     __ptext12 0738  
                   __ptext21 051E                     __ptext13 07A8                     __ptext22 0930  
                   __ptext23 0344                     __ptext15 0A2A                     __ptext24 06A8  
                   __ptext16 0A3A                     __ptext25 0438                     __ptext17 0976  
                   __ptext26 05FA                     __ptext18 0122                     __ptext19 0818  
              __size_of_Init 0022                ?_Disable_Port 0001                __size_of_main 000C  
                   _received 0040                     _p_status 0046             _InitTransmission 09B8  
                   int$flags 0047                ??_Check_Power 002B             Transmit@receiver 0004  
 Disable_Port@disable_number 006A                   _INTCONbits 000FF2                     intlevel2 0000  
             ??_Disable_Port 006A                   _RCSTA1bits 000FAB          __end_of_Check_Power 05FA  
          __CFG_T3CMX$PORTC0 000000       __size_of_InitInterrupt 000A            __CFG_FOSC$INTIO67 000000  
