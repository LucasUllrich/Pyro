

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Feb 08 22:18:38 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataCOMRAM
    43  000A44                     __pidataCOMRAM:
    44                           	opt stack 0
    45                           
    46                           ;initializer for _p_status
    47  000A44  30                 	db	48
    48  0000                     _ANSELA	set	3896
    49  0000                     _ANSELB	set	3897
    50  0000                     _ANSELC	set	3898
    51  0000                     _ANSELD	set	3899
    52  0000                     _ANSELE	set	3900
    53  0000                     _VREFCON0	set	3906
    54  0000                     _VREFCON1	set	3905
    55  0000                     _VREFCON2bits	set	3904
    56  0000                     _ADCON0	set	4034
    57  0000                     _ADCON0bits	set	4034
    58  0000                     _ADCON1	set	4033
    59  0000                     _ADCON2	set	4032
    60  0000                     _ADRESH	set	4036
    61  0000                     _BAUDCON1bits	set	4024
    62  0000                     _INTCONbits	set	4082
    63  0000                     _OSCCON	set	4051
    64  0000                     _PIE1bits	set	3997
    65  0000                     _PIR1bits	set	3998
    66  0000                     _PORTA	set	3968
    67  0000                     _PORTAbits	set	3968
    68  0000                     _PORTB	set	3969
    69  0000                     _PORTBbits	set	3969
    70  0000                     _PORTC	set	3970
    71  0000                     _PORTCbits	set	3970
    72  0000                     _PORTD	set	3971
    73  0000                     _PORTDbits	set	3971
    74  0000                     _PORTE	set	3972
    75  0000                     _PORTEbits	set	3972
    76  0000                     _RCREG1	set	4014
    77  0000                     _RCSTA1bits	set	4011
    78  0000                     _SPBRG1	set	4015
    79  0000                     _TRISA	set	3986
    80  0000                     _TRISB	set	3987
    81  0000                     _TRISC	set	3988
    82  0000                     _TRISCbits	set	3988
    83  0000                     _TRISD	set	3989
    84  0000                     _TRISE	set	3990
    85  0000                     _TXREG1	set	4013
    86  0000                     _TXSTA1bits	set	4012
    87                           
    88                           ; #config settings
    89  0000                     
    90                           	psect	cinit
    91  00089C                     __pcinit:
    92                           	opt stack 0
    93  00089C                     start_initialization:
    94                           	opt stack 0
    95  00089C                     __initialization:
    96                           	opt stack 0
    97                           
    98                           ; Clear objects allocated to BANK0 (10 bytes)
    99  00089C  EE00  F060         	lfsr	0,__pbssBANK0
   100  0008A0  0E0A               	movlw	10
   101  0008A2                     clear_0:
   102  0008A2  6AEE               	clrf	postinc0,c
   103  0008A4  06E8               	decf	wreg,f,c
   104  0008A6  E1FD               	bnz	clear_0
   105                           
   106                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   107  0008A8  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   108                           
   109                           ; Clear objects allocated to COMRAM (5 bytes)
   110  0008AA  6A49               	clrf	(__pbssCOMRAM+4)& (0+255),c
   111  0008AC  6A48               	clrf	(__pbssCOMRAM+3)& (0+255),c
   112  0008AE  6A47               	clrf	(__pbssCOMRAM+2)& (0+255),c
   113  0008B0  6A46               	clrf	(__pbssCOMRAM+1)& (0+255),c
   114  0008B2  6A45               	clrf	__pbssCOMRAM& (0+255),c
   115                           
   116                           ; Initialize objects allocated to COMRAM (1 bytes)
   117                           ; load TBLPTR registers with __pidataCOMRAM
   118  0008B4  0E44               	movlw	low __pidataCOMRAM
   119  0008B6  6EF6               	movwf	tblptrl,c
   120  0008B8  0E0A               	movlw	high __pidataCOMRAM
   121  0008BA  6EF7               	movwf	tblptrh,c
   122  0008BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   123  0008BE  6EF8               	movwf	tblptru,c
   124  0008C0  0009               	tblrd		*+	;fetch initializer
   125  0008C2  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   126  0008C6                     end_of_initialization:
   127                           	opt stack 0
   128  0008C6                     __end_of__initialization:
   129                           	opt stack 0
   130  0008C6  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   131  0008C8  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   132  0008CA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   133  0008CC  6EF8               	movwf	tblptru,c
   134  0008CE  0100               	movlb	0
   135  0008D0  EF14  F005         	goto	_main	;jump to C main() function
   136                           tblptru	equ	0xFF8
   137                           tblptrh	equ	0xFF7
   138                           tblptrl	equ	0xFF6
   139                           tablat	equ	0xFF5
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	bitbssCOMRAM
   144  000250                     __pbitbssCOMRAM:
   145                           	opt stack 0
   146  000250                     _overrun:
   147                           	opt stack 0
   148  000250                     	ds	1
   149  000251                     _slave_addressed:
   150                           	opt stack 0
   151  000251                     	ds	1
   152                           tblptru	equ	0xFF8
   153                           tblptrh	equ	0xFF7
   154                           tblptrl	equ	0xFF6
   155                           tablat	equ	0xFF5
   156                           postinc0	equ	0xFEE
   157                           wreg	equ	0xFE8
   158                           
   159                           	psect	bssCOMRAM
   160  000045                     __pbssCOMRAM:
   161                           	opt stack 0
   162  000045                     _received:
   163                           	opt stack 0
   164  000045                     	ds	4
   165  000049                     _receive_counter:
   166                           	opt stack 0
   167  000049                     	ds	1
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           postinc0	equ	0xFEE
   173                           wreg	equ	0xFE8
   174                           
   175                           	psect	dataCOMRAM
   176  00004B                     __pdataCOMRAM:
   177                           	opt stack 0
   178  00004B                     _p_status:
   179                           	opt stack 0
   180  00004B                     	ds	1
   181                           tblptru	equ	0xFF8
   182                           tblptrh	equ	0xFF7
   183                           tblptrl	equ	0xFF6
   184                           tablat	equ	0xFF5
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           
   188                           	psect	bssBANK0
   189  000060                     __pbssBANK0:
   190                           	opt stack 0
   191  000060                     _Marker:
   192                           	opt stack 0
   193  000060                     	ds	10
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           
   201                           	psect	cstackBANK0
   202  00006A                     __pcstackBANK0:
   203                           	opt stack 0
   204  00006A                     InitVar@c:
   205                           	opt stack 0
   206  00006A                     Ignite_Port@ignite_number:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0x0
   210  00006A                     	ds	1
   211  00006B                     ??_Check_Ignition:
   212                           
   213                           ; 0 bytes @ 0x1
   214  00006B                     	ds	1
   215  00006C                     Check_Ignition@c:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x2
   219  00006C                     	ds	1
   220  00006D                     tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           
   227                           ; 0 bytes @ 0x3
   228                           
   229                           	psect	cstackCOMRAM
   230  000001                     __pcstackCOMRAM:
   231                           	opt stack 0
   232  000001                     ?___ftpack:
   233                           	opt stack 0
   234  000001                     Transmit@operation:
   235                           	opt stack 0
   236  000001                     Receive_Dump@dump:
   237                           	opt stack 0
   238  000001                     ___ftpack@arg:
   239                           	opt stack 0
   240  000001                     ___ftge@ff1:
   241                           	opt stack 0
   242                           
   243                           ; 3 bytes @ 0x0
   244  000001                     	ds	1
   245  000002                     Transmit@port:
   246                           	opt stack 0
   247                           
   248                           ; 1 bytes @ 0x1
   249  000002                     	ds	1
   250  000003                     Transmit@con_status:
   251                           	opt stack 0
   252                           
   253                           ; 1 bytes @ 0x2
   254  000003                     	ds	1
   255  000004                     Transmit@receiver:
   256                           	opt stack 0
   257  000004                     ___ftpack@exp:
   258                           	opt stack 0
   259  000004                     ___ftge@ff2:
   260                           	opt stack 0
   261                           
   262                           ; 3 bytes @ 0x3
   263  000004                     	ds	1
   264  000005                     ___ftpack@sign:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x4
   268  000005                     	ds	1
   269  000006                     ??___ftpack:
   270                           
   271                           ; 0 bytes @ 0x5
   272  000006                     	ds	1
   273  000007                     ??___ftge:
   274                           
   275                           ; 0 bytes @ 0x6
   276  000007                     	ds	2
   277  000009                     ?___lbtoft:
   278                           	opt stack 0
   279                           
   280                           ; 3 bytes @ 0x8
   281  000009                     	ds	3
   282  00000C                     ___lbtoft@c:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0xB
   286  00000C                     	ds	1
   287  00000D                     ?___ftmul:
   288                           	opt stack 0
   289  00000D                     ___ftmul@f1:
   290                           	opt stack 0
   291                           
   292                           ; 3 bytes @ 0xC
   293  00000D                     	ds	3
   294  000010                     ___ftmul@f2:
   295                           	opt stack 0
   296                           
   297                           ; 3 bytes @ 0xF
   298  000010                     	ds	3
   299  000013                     ??___ftmul:
   300                           
   301                           ; 0 bytes @ 0x12
   302  000013                     	ds	3
   303  000016                     ___ftmul@exp:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x15
   307  000016                     	ds	1
   308  000017                     ___ftmul@f3_as_product:
   309                           	opt stack 0
   310                           
   311                           ; 3 bytes @ 0x16
   312  000017                     	ds	3
   313  00001A                     ___ftmul@cntr:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x19
   317  00001A                     	ds	1
   318  00001B                     ___ftmul@sign:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x1A
   322  00001B                     	ds	1
   323  00001C                     ?___ftdiv:
   324                           	opt stack 0
   325  00001C                     ___ftdiv@f1:
   326                           	opt stack 0
   327                           
   328                           ; 3 bytes @ 0x1B
   329  00001C                     	ds	3
   330  00001F                     ___ftdiv@f2:
   331                           	opt stack 0
   332                           
   333                           ; 3 bytes @ 0x1E
   334  00001F                     	ds	3
   335  000022                     ??___ftdiv:
   336                           
   337                           ; 0 bytes @ 0x21
   338  000022                     	ds	3
   339  000025                     ___ftdiv@cntr:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x24
   343  000025                     	ds	1
   344  000026                     ___ftdiv@f3:
   345                           	opt stack 0
   346                           
   347                           ; 3 bytes @ 0x25
   348  000026                     	ds	3
   349  000029                     ___ftdiv@exp:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x28
   353  000029                     	ds	1
   354  00002A                     ___ftdiv@sign:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x29
   358  00002A                     	ds	1
   359  00002B                     Check_Power@DAC_out:
   360                           	opt stack 0
   361                           
   362                           ; 3 bytes @ 0x2A
   363  00002B                     	ds	3
   364  00002E                     Check_Power@voltage:
   365                           	opt stack 0
   366                           
   367                           ; 3 bytes @ 0x2D
   368  00002E                     	ds	3
   369  000031                     Check_Power@supply:
   370                           	opt stack 0
   371                           
   372                           ; 3 bytes @ 0x30
   373  000031                     	ds	3
   374  000034                     Check_Power@source_power:
   375                           	opt stack 0
   376                           
   377                           ; 3 bytes @ 0x33
   378  000034                     	ds	3
   379  000037                     ??_Isr:
   380                           
   381                           ; 0 bytes @ 0x36
   382  000037                     	ds	14
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           
   390 ;;
   391 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   392 ;;
   393 ;; *************** function _main *****************
   394 ;; Defined at:
   395 ;;		line 74 in file "main.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;		None               void
   402 ;; Registers used:
   403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   409 ;;      Params:         0       0       0       0
   410 ;;      Locals:         0       0       0       0
   411 ;;      Temps:          0       0       0       0
   412 ;;      Totals:         0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels required when called:    7
   415 ;; This function calls:
   416 ;;		_Check_Ignition
   417 ;;		_Init
   418 ;; This function is called by:
   419 ;;		Startup code after reset
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text0
   424  000A28                     __ptext0:
   425                           	opt stack 0
   426  000A28                     _main:
   427                           	opt stack 24
   428                           
   429                           ;main.c: 75: Init();
   430                           
   431                           ;incstack = 0
   432  000A28  ECA5  F004         	call	_Init	;wreg free
   433  000A2C                     l21:
   434                           
   435                           ;main.c: 77: Check_Ignition();
   436  000A2C  ECFD  F003         	call	_Check_Ignition	;wreg free
   437                           
   438                           ;main.c: 78: __nop();
   439  000A30  F000               	nop	
   440  000A32  D7FC               	goto	l21
   441  000A34                     __end_of_main:
   442                           	opt stack 0
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           
   450 ;; *************** function _Init *****************
   451 ;; Defined at:
   452 ;;		line 5 in file "init.c"
   453 ;; Parameters:    Size  Location     Type
   454 ;;		None
   455 ;; Auto vars:     Size  Location     Type
   456 ;;		None
   457 ;; Return value:  Size  Location     Type
   458 ;;		None               void
   459 ;; Registers used:
   460 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   461 ;; Tracked objects:
   462 ;;		On entry : 0/0
   463 ;;		On exit  : 0/0
   464 ;;		Unchanged: 0/0
   465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   466 ;;      Params:         0       0       0       0
   467 ;;      Locals:         0       0       0       0
   468 ;;      Temps:          0       0       0       0
   469 ;;      Totals:         0       0       0       0
   470 ;;Total ram usage:        0 bytes
   471 ;; Hardware stack levels used:    1
   472 ;; Hardware stack levels required when called:    6
   473 ;; This function calls:
   474 ;;		_InitADC
   475 ;;		_InitAnsel
   476 ;;		_InitInterrupt
   477 ;;		_InitMiscellaneous
   478 ;;		_InitPort
   479 ;;		_InitTransmission
   480 ;;		_InitTris
   481 ;;		_InitVar
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text1
   488  00094A                     __ptext1:
   489                           	opt stack 0
   490  00094A                     _Init:
   491                           	opt stack 24
   492                           
   493                           ;init.c: 6: InitPort();
   494                           
   495                           ;incstack = 0
   496  00094A  ECEF  F004         	call	_InitPort	;wreg free
   497                           
   498                           ;init.c: 7: InitTris();
   499  00094E  ECE4  F004         	call	_InitTris	;wreg free
   500                           
   501                           ;init.c: 8: InitAnsel();
   502  000952  ECB6  F004         	call	_InitAnsel	;wreg free
   503                           
   504                           ;init.c: 9: InitMiscellaneous();
   505  000956  EC1F  F005         	call	_InitMiscellaneous	;wreg free
   506                           
   507                           ;init.c: 10: InitTransmission();
   508  00095A  ECD6  F004         	call	_InitTransmission	;wreg free
   509                           
   510                           ;init.c: 11: InitADC();
   511  00095E  EC80  F004         	call	_InitADC	;wreg free
   512                           
   513                           ;init.c: 12: InitVar();
   514  000962  EC6A  F004         	call	_InitVar	;wreg free
   515                           
   516                           ;init.c: 13: InitInterrupt();
   517  000966  EC1A  F005         	call	_InitInterrupt	;wreg free
   518  00096A  0012               	return		;funcret
   519  00096C                     __end_of_Init:
   520                           	opt stack 0
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           postinc0	equ	0xFEE
   526                           wreg	equ	0xFE8
   527                           
   528 ;; *************** function _InitVar *****************
   529 ;; Defined at:
   530 ;;		line 79 in file "init.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  c               1    0[BANK0 ] unsigned char 
   535 ;; Return value:  Size  Location     Type
   536 ;;		None               void
   537 ;; Registers used:
   538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   544 ;;      Params:         0       0       0       0
   545 ;;      Locals:         0       1       0       0
   546 ;;      Temps:          0       0       0       0
   547 ;;      Totals:         0       1       0       0
   548 ;;Total ram usage:        1 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    5
   551 ;; This function calls:
   552 ;;		Nothing
   553 ;; This function is called by:
   554 ;;		_Init
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text2
   559  0008D4                     __ptext2:
   560                           	opt stack 0
   561  0008D4                     _InitVar:
   562                           	opt stack 24
   563                           
   564                           ;init.c: 80: for(unsigned char c = 0; c < 10; c++) {
   565                           
   566                           ;incstack = 0
   567  0008D4  0E00               	movlw	0
   568  0008D6  0100               	movlb	0	; () banked
   569  0008D8  6F6A               	movwf	InitVar@c& (0+255),b
   570  0008DA                     l1527:
   571                           
   572                           ; BSR set to: 0
   573  0008DA  0E09               	movlw	9
   574  0008DC  0100               	movlb	0	; () banked
   575  0008DE  656A               	cpfsgt	InitVar@c& (0+255),b
   576  0008E0  D001               	goto	l1531
   577  0008E2  0012               	return	
   578  0008E4                     l1531:
   579                           
   580                           ; BSR set to: 0
   581                           ;init.c: 81: Marker[c] = 0;
   582  0008E4  0100               	movlb	0	; () banked
   583  0008E6  516A               	movf	InitVar@c& (0+255),w,b
   584  0008E8  0D01               	mullw	1
   585  0008EA  0E60               	movlw	low _Marker
   586  0008EC  24F3               	addwf	prodl,w,c
   587  0008EE  6ED9               	movwf	fsr2l,c
   588  0008F0  0E00               	movlw	high _Marker
   589  0008F2  20F4               	addwfc	prodh,w,c
   590  0008F4  6EDA               	movwf	fsr2h,c
   591  0008F6  0E00               	movlw	0
   592  0008F8  6EDF               	movwf	indf2,c
   593                           
   594                           ; BSR set to: 0
   595  0008FA  0100               	movlb	0	; () banked
   596  0008FC  2B6A               	incf	InitVar@c& (0+255),f,b
   597  0008FE  D7ED               	goto	l1527
   598  000900                     __end_of_InitVar:
   599                           	opt stack 0
   600                           tblptru	equ	0xFF8
   601                           tblptrh	equ	0xFF7
   602                           tblptrl	equ	0xFF6
   603                           tablat	equ	0xFF5
   604                           prodh	equ	0xFF4
   605                           prodl	equ	0xFF3
   606                           postinc0	equ	0xFEE
   607                           wreg	equ	0xFE8
   608                           indf2	equ	0xFDF
   609                           fsr2h	equ	0xFDA
   610                           fsr2l	equ	0xFD9
   611                           
   612 ;; *************** function _InitTris *****************
   613 ;; Defined at:
   614 ;;		line 24 in file "init.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;		None               void
   621 ;; Registers used:
   622 ;;		wreg, status,2
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   628 ;;      Params:         0       0       0       0
   629 ;;      Locals:         0       0       0       0
   630 ;;      Temps:          0       0       0       0
   631 ;;      Totals:         0       0       0       0
   632 ;;Total ram usage:        0 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; Hardware stack levels required when called:    5
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		_Init
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text3
   643  0009C8                     __ptext3:
   644                           	opt stack 0
   645  0009C8                     _InitTris:
   646                           	opt stack 24
   647                           
   648                           ;init.c: 25: TRISA = 0b00010101;
   649                           
   650                           ; BSR set to: 0
   651                           ;incstack = 0
   652  0009C8  0E15               	movlw	21
   653  0009CA  6E92               	movwf	3986,c	;volatile
   654                           
   655                           ;init.c: 26: TRISB = 0b00010001;
   656  0009CC  0E11               	movlw	17
   657  0009CE  6E93               	movwf	3987,c	;volatile
   658                           
   659                           ;init.c: 27: TRISC = 0b00010100;
   660  0009D0  0E14               	movlw	20
   661  0009D2  6E94               	movwf	3988,c	;volatile
   662                           
   663                           ;init.c: 28: TRISD = 0b00000101;
   664  0009D4  0E05               	movlw	5
   665  0009D6  6E95               	movwf	3989,c	;volatile
   666                           
   667                           ;init.c: 29: TRISE = 0b00000101;
   668  0009D8  0E05               	movlw	5
   669  0009DA  6E96               	movwf	3990,c	;volatile
   670  0009DC  0012               	return		;funcret
   671  0009DE                     __end_of_InitTris:
   672                           	opt stack 0
   673                           tblptru	equ	0xFF8
   674                           tblptrh	equ	0xFF7
   675                           tblptrl	equ	0xFF6
   676                           tablat	equ	0xFF5
   677                           prodh	equ	0xFF4
   678                           prodl	equ	0xFF3
   679                           postinc0	equ	0xFEE
   680                           wreg	equ	0xFE8
   681                           indf2	equ	0xFDF
   682                           fsr2h	equ	0xFDA
   683                           fsr2l	equ	0xFD9
   684                           
   685 ;; *************** function _InitTransmission *****************
   686 ;; Defined at:
   687 ;;		line 44 in file "init.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;		None               void
   694 ;; Registers used:
   695 ;;		wreg, status,2
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   701 ;;      Params:         0       0       0       0
   702 ;;      Locals:         0       0       0       0
   703 ;;      Temps:          0       0       0       0
   704 ;;      Totals:         0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    5
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_Init
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text4
   716  0009AC                     __ptext4:
   717                           	opt stack 0
   718  0009AC                     _InitTransmission:
   719                           	opt stack 24
   720                           
   721                           ;init.c: 46: TXSTA1bits.SYNC = 0;
   722                           
   723                           ;incstack = 0
   724  0009AC  98AC               	bcf	4012,4,c	;volatile
   725                           
   726                           ;init.c: 47: TXSTA1bits.BRGH = 1;
   727  0009AE  84AC               	bsf	4012,2,c	;volatile
   728                           
   729                           ;init.c: 48: BAUDCON1bits.BRG16 = 0;
   730  0009B0  96B8               	bcf	4024,3,c	;volatile
   731                           
   732                           ;init.c: 49: SPBRG1 = 25;
   733  0009B2  0E19               	movlw	25
   734  0009B4  6EAF               	movwf	4015,c	;volatile
   735                           
   736                           ;init.c: 50: TRISCbits.RC6 = 1;
   737  0009B6  8C94               	bsf	3988,6,c	;volatile
   738                           
   739                           ;init.c: 51: TRISCbits.RC7 = 1;
   740  0009B8  8E94               	bsf	3988,7,c	;volatile
   741                           
   742                           ;init.c: 52: RCSTA1bits.SPEN = 1;
   743  0009BA  8EAB               	bsf	4011,7,c	;volatile
   744                           
   745                           ;init.c: 53: TXSTA1bits.TX9 = 1;
   746  0009BC  8CAC               	bsf	4012,6,c	;volatile
   747                           
   748                           ;init.c: 54: TXSTA1bits.TXEN = 1;
   749  0009BE  8AAC               	bsf	4012,5,c	;volatile
   750                           
   751                           ;init.c: 55: RCSTA1bits.RC9 = 1;
   752  0009C0  8CAB               	bsf	4011,6,c	;volatile
   753                           
   754                           ;init.c: 56: RCSTA1bits.CREN = 1;
   755  0009C2  88AB               	bsf	4011,4,c	;volatile
   756                           
   757                           ;init.c: 57: TRISCbits.RC6 = 0;
   758  0009C4  9C94               	bcf	3988,6,c	;volatile
   759  0009C6  0012               	return		;funcret
   760  0009C8                     __end_of_InitTransmission:
   761                           	opt stack 0
   762                           tblptru	equ	0xFF8
   763                           tblptrh	equ	0xFF7
   764                           tblptrl	equ	0xFF6
   765                           tablat	equ	0xFF5
   766                           prodh	equ	0xFF4
   767                           prodl	equ	0xFF3
   768                           postinc0	equ	0xFEE
   769                           wreg	equ	0xFE8
   770                           indf2	equ	0xFDF
   771                           fsr2h	equ	0xFDA
   772                           fsr2l	equ	0xFD9
   773                           
   774 ;; *************** function _InitPort *****************
   775 ;; Defined at:
   776 ;;		line 16 in file "init.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;		None               void
   783 ;; Registers used:
   784 ;;		wreg, status,2
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   790 ;;      Params:         0       0       0       0
   791 ;;      Locals:         0       0       0       0
   792 ;;      Temps:          0       0       0       0
   793 ;;      Totals:         0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    5
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_Init
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text5
   805  0009DE                     __ptext5:
   806                           	opt stack 0
   807  0009DE                     _InitPort:
   808                           	opt stack 24
   809                           
   810                           ;init.c: 17: PORTA = 0b00000000;
   811                           
   812                           ;incstack = 0
   813  0009DE  0E00               	movlw	0
   814  0009E0  6E80               	movwf	3968,c	;volatile
   815                           
   816                           ;init.c: 18: PORTB = 0b00000000;
   817  0009E2  0E00               	movlw	0
   818  0009E4  6E81               	movwf	3969,c	;volatile
   819                           
   820                           ;init.c: 19: PORTC = 0b00000000;
   821  0009E6  0E00               	movlw	0
   822  0009E8  6E82               	movwf	3970,c	;volatile
   823                           
   824                           ;init.c: 20: PORTD = 0b00000000;
   825  0009EA  0E00               	movlw	0
   826  0009EC  6E83               	movwf	3971,c	;volatile
   827                           
   828                           ;init.c: 21: PORTE = 0b00000000;
   829  0009EE  0E00               	movlw	0
   830  0009F0  6E84               	movwf	3972,c	;volatile
   831  0009F2  0012               	return		;funcret
   832  0009F4                     __end_of_InitPort:
   833                           	opt stack 0
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           prodh	equ	0xFF4
   839                           prodl	equ	0xFF3
   840                           postinc0	equ	0xFEE
   841                           wreg	equ	0xFE8
   842                           indf2	equ	0xFDF
   843                           fsr2h	equ	0xFDA
   844                           fsr2l	equ	0xFD9
   845                           
   846 ;; *************** function _InitMiscellaneous *****************
   847 ;; Defined at:
   848 ;;		line 40 in file "init.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;		None               void
   855 ;; Registers used:
   856 ;;		wreg, status,2
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   862 ;;      Params:         0       0       0       0
   863 ;;      Locals:         0       0       0       0
   864 ;;      Temps:          0       0       0       0
   865 ;;      Totals:         0       0       0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    5
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_Init
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           	psect	text6
   877  000A3E                     __ptext6:
   878                           	opt stack 0
   879  000A3E                     _InitMiscellaneous:
   880                           	opt stack 24
   881                           
   882                           ;init.c: 41: OSCCON = 0b01010011;
   883                           
   884                           ;incstack = 0
   885  000A3E  0E53               	movlw	83
   886  000A40  6ED3               	movwf	4051,c	;volatile
   887  000A42  0012               	return		;funcret
   888  000A44                     __end_of_InitMiscellaneous:
   889                           	opt stack 0
   890                           tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           tblptrl	equ	0xFF6
   893                           tablat	equ	0xFF5
   894                           prodh	equ	0xFF4
   895                           prodl	equ	0xFF3
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           indf2	equ	0xFDF
   899                           fsr2h	equ	0xFDA
   900                           fsr2l	equ	0xFD9
   901                           
   902 ;; *************** function _InitInterrupt *****************
   903 ;; Defined at:
   904 ;;		line 72 in file "init.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;		None               void
   911 ;; Registers used:
   912 ;;		None
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   918 ;;      Params:         0       0       0       0
   919 ;;      Locals:         0       0       0       0
   920 ;;      Temps:          0       0       0       0
   921 ;;      Totals:         0       0       0       0
   922 ;;Total ram usage:        0 bytes
   923 ;; Hardware stack levels used:    1
   924 ;; Hardware stack levels required when called:    5
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_Init
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text7
   933  000A34                     __ptext7:
   934                           	opt stack 0
   935  000A34                     _InitInterrupt:
   936                           	opt stack 24
   937                           
   938                           ;init.c: 73: INTCONbits.GIE = 1;
   939                           
   940                           ;incstack = 0
   941  000A34  8EF2               	bsf	intcon,7,c	;volatile
   942                           
   943                           ;init.c: 74: INTCONbits.PEIE = 1;
   944  000A36  8CF2               	bsf	intcon,6,c	;volatile
   945                           
   946                           ;init.c: 75: PIE1bits.RCIE = 1;
   947  000A38  8A9D               	bsf	3997,5,c	;volatile
   948                           
   949                           ;init.c: 76: PIR1bits.RCIF= 0;
   950  000A3A  9A9E               	bcf	3998,5,c	;volatile
   951  000A3C  0012               	return		;funcret
   952  000A3E                     __end_of_InitInterrupt:
   953                           	opt stack 0
   954                           tblptru	equ	0xFF8
   955                           tblptrh	equ	0xFF7
   956                           tblptrl	equ	0xFF6
   957                           tablat	equ	0xFF5
   958                           prodh	equ	0xFF4
   959                           prodl	equ	0xFF3
   960                           intcon	equ	0xFF2
   961                           postinc0	equ	0xFEE
   962                           wreg	equ	0xFE8
   963                           indf2	equ	0xFDF
   964                           fsr2h	equ	0xFDA
   965                           fsr2l	equ	0xFD9
   966                           
   967 ;; *************** function _InitAnsel *****************
   968 ;; Defined at:
   969 ;;		line 32 in file "init.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;		None               void
   976 ;; Registers used:
   977 ;;		wreg, status,2
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   983 ;;      Params:         0       0       0       0
   984 ;;      Locals:         0       0       0       0
   985 ;;      Temps:          0       0       0       0
   986 ;;      Totals:         0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    5
   990 ;; This function calls:
   991 ;;		Nothing
   992 ;; This function is called by:
   993 ;;		_Init
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text8
   998  00096C                     __ptext8:
   999                           	opt stack 0
  1000  00096C                     _InitAnsel:
  1001                           	opt stack 24
  1002                           
  1003                           ;init.c: 33: ANSELA = 0b00000000;
  1004                           
  1005                           ;incstack = 0
  1006  00096C  0E00               	movlw	0
  1007  00096E  010F               	movlb	15	; () banked
  1008  000970  6F38               	movwf	56,b	;volatile
  1009                           
  1010                           ;init.c: 34: ANSELB = 0b00000001;
  1011  000972  0E01               	movlw	1
  1012  000974  010F               	movlb	15	; () banked
  1013  000976  6F39               	movwf	57,b	;volatile
  1014                           
  1015                           ;init.c: 35: ANSELC = 0b00000000;
  1016  000978  0E00               	movlw	0
  1017  00097A  010F               	movlb	15	; () banked
  1018  00097C  6F3A               	movwf	58,b	;volatile
  1019                           
  1020                           ;init.c: 36: ANSELD = 0b00000000;
  1021  00097E  0E00               	movlw	0
  1022  000980  010F               	movlb	15	; () banked
  1023  000982  6F3B               	movwf	59,b	;volatile
  1024                           
  1025                           ;init.c: 37: ANSELE = 0b00000000;
  1026  000984  0E00               	movlw	0
  1027  000986  010F               	movlb	15	; () banked
  1028  000988  6F3C               	movwf	60,b	;volatile
  1029                           
  1030                           ; BSR set to: 15
  1031  00098A  0012               	return		;funcret
  1032  00098C                     __end_of_InitAnsel:
  1033                           	opt stack 0
  1034                           tblptru	equ	0xFF8
  1035                           tblptrh	equ	0xFF7
  1036                           tblptrl	equ	0xFF6
  1037                           tablat	equ	0xFF5
  1038                           prodh	equ	0xFF4
  1039                           prodl	equ	0xFF3
  1040                           intcon	equ	0xFF2
  1041                           postinc0	equ	0xFEE
  1042                           wreg	equ	0xFE8
  1043                           indf2	equ	0xFDF
  1044                           fsr2h	equ	0xFDA
  1045                           fsr2l	equ	0xFD9
  1046                           
  1047 ;; *************** function _InitADC *****************
  1048 ;; Defined at:
  1049 ;;		line 60 in file "init.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;		None               void
  1056 ;; Registers used:
  1057 ;;		wreg, status,2
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1063 ;;      Params:         0       0       0       0
  1064 ;;      Locals:         0       0       0       0
  1065 ;;      Temps:          0       0       0       0
  1066 ;;      Totals:         0       0       0       0
  1067 ;;Total ram usage:        0 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; Hardware stack levels required when called:    5
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_Init
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text9
  1078  000900                     __ptext9:
  1079                           	opt stack 0
  1080  000900                     _InitADC:
  1081                           	opt stack 24
  1082                           
  1083                           ;init.c: 62: VREFCON0 = 0b10100000;
  1084                           
  1085                           ; BSR set to: 15
  1086                           ;incstack = 0
  1087  000900  0EA0               	movlw	160
  1088  000902  010F               	movlb	15	; () banked
  1089  000904  6F42               	movwf	66,b	;volatile
  1090                           
  1091                           ;init.c: 64: VREFCON1 = 0b10001000;
  1092  000906  0E88               	movlw	136
  1093  000908  010F               	movlb	15	; () banked
  1094  00090A  6F41               	movwf	65,b	;volatile
  1095                           
  1096                           ; BSR set to: 15
  1097                           ;init.c: 65: VREFCON2bits.DACR = 16;
  1098  00090C  010F               	movlb	15	; () banked
  1099  00090E  9140               	bcf	64,0,b	;volatile
  1100  000910  9340               	bcf	64,1,b	;volatile
  1101  000912  9540               	bcf	64,2,b	;volatile
  1102  000914  9740               	bcf	64,3,b	;volatile
  1103  000916  8940               	bsf	64,4,b	;volatile
  1104                           
  1105                           ;init.c: 67: ADCON1 = 0b00000000;
  1106  000918  0E00               	movlw	0
  1107  00091A  6EC1               	movwf	4033,c	;volatile
  1108                           
  1109                           ;init.c: 68: ADCON2 = 0b00000011;
  1110  00091C  0E03               	movlw	3
  1111  00091E  6EC0               	movwf	4032,c	;volatile
  1112                           
  1113                           ;init.c: 69: ADCON0 = 0b01111001;
  1114  000920  0E79               	movlw	121
  1115  000922  6EC2               	movwf	4034,c	;volatile
  1116                           
  1117                           ; BSR set to: 15
  1118  000924  0012               	return		;funcret
  1119  000926                     __end_of_InitADC:
  1120                           	opt stack 0
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           prodh	equ	0xFF4
  1126                           prodl	equ	0xFF3
  1127                           intcon	equ	0xFF2
  1128                           postinc0	equ	0xFEE
  1129                           wreg	equ	0xFE8
  1130                           indf2	equ	0xFDF
  1131                           fsr2h	equ	0xFDA
  1132                           fsr2l	equ	0xFD9
  1133                           
  1134 ;; *************** function _Check_Ignition *****************
  1135 ;; Defined at:
  1136 ;;		line 115 in file "ignition.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  c               1    2[BANK0 ] unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;		None               void
  1143 ;; Registers used:
  1144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1150 ;;      Params:         0       0       0       0
  1151 ;;      Locals:         0       1       0       0
  1152 ;;      Temps:          0       1       0       0
  1153 ;;      Totals:         0       2       0       0
  1154 ;;Total ram usage:        2 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    6
  1157 ;; This function calls:
  1158 ;;		_Ignite_Port
  1159 ;; This function is called by:
  1160 ;;		_main
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text10
  1165  0007FA                     __ptext10:
  1166                           	opt stack 0
  1167  0007FA                     _Check_Ignition:
  1168                           	opt stack 24
  1169                           
  1170                           ;ignition.c: 116: for(unsigned char c = 0; c < 10; c++) {
  1171                           
  1172                           ; BSR set to: 15
  1173                           ;incstack = 0
  1174  0007FA  0E00               	movlw	0
  1175  0007FC  0100               	movlb	0	; () banked
  1176  0007FE  6F6C               	movwf	Check_Ignition@c& (0+255),b
  1177  000800                     l1621:
  1178                           
  1179                           ; BSR set to: 0
  1180  000800  0E09               	movlw	9
  1181  000802  0100               	movlb	0	; () banked
  1182  000804  656C               	cpfsgt	Check_Ignition@c& (0+255),b
  1183  000806  D001               	goto	l1625
  1184  000808  0012               	return	
  1185  00080A                     l1625:
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;ignition.c: 117: if(Marker[c] == 1) {
  1189  00080A  0100               	movlb	0	; () banked
  1190  00080C  516C               	movf	Check_Ignition@c& (0+255),w,b
  1191  00080E  0D01               	mullw	1
  1192  000810  0E60               	movlw	low _Marker
  1193  000812  24F3               	addwf	prodl,w,c
  1194  000814  6ED9               	movwf	fsr2l,c
  1195  000816  0E00               	movlw	high _Marker
  1196  000818  20F4               	addwfc	prodh,w,c
  1197  00081A  6EDA               	movwf	fsr2h,c
  1198  00081C  04DE               	decf	postinc2,w,c
  1199  00081E  A4D8               	btfss	status,2,c
  1200  000820  D017               	goto	l1633
  1201                           
  1202                           ; BSR set to: 0
  1203                           ;ignition.c: 118: Ignite_Port(c);
  1204  000822  0100               	movlb	0	; () banked
  1205  000824  516C               	movf	Check_Ignition@c& (0+255),w,b
  1206  000826  ECBD  F003         	call	_Ignite_Port
  1207                           
  1208                           ;ignition.c: 119: _delay((unsigned long)((15)*(4000000/4000.0)));
  1209  00082A  0E14               	movlw	20
  1210  00082C  0100               	movlb	0	; () banked
  1211  00082E  6F6B               	movwf	??_Check_Ignition& (0+255),b
  1212  000830  0E7A               	movlw	122
  1213  000832                     u1337:
  1214  000832  2EE8               	decfsz	wreg,f,c
  1215  000834  D7FE               	goto	u1337
  1216  000836  2F6B               	decfsz	??_Check_Ignition& (0+255),f,b
  1217  000838  D7FC               	goto	u1337
  1218                           
  1219                           ;ignition.c: 120: Marker[c] = 0;
  1220  00083A  0100               	movlb	0	; () banked
  1221  00083C  516C               	movf	Check_Ignition@c& (0+255),w,b
  1222  00083E  0D01               	mullw	1
  1223  000840  0E60               	movlw	low _Marker
  1224  000842  24F3               	addwf	prodl,w,c
  1225  000844  6ED9               	movwf	fsr2l,c
  1226  000846  0E00               	movlw	high _Marker
  1227  000848  20F4               	addwfc	prodh,w,c
  1228  00084A  6EDA               	movwf	fsr2h,c
  1229  00084C  0E00               	movlw	0
  1230  00084E  6EDF               	movwf	indf2,c
  1231  000850                     l1633:
  1232                           
  1233                           ; BSR set to: 0
  1234  000850  0100               	movlb	0	; () banked
  1235  000852  2B6C               	incf	Check_Ignition@c& (0+255),f,b
  1236  000854  D7D5               	goto	l1621
  1237  000856                     __end_of_Check_Ignition:
  1238                           	opt stack 0
  1239                           tblptru	equ	0xFF8
  1240                           tblptrh	equ	0xFF7
  1241                           tblptrl	equ	0xFF6
  1242                           tablat	equ	0xFF5
  1243                           prodh	equ	0xFF4
  1244                           prodl	equ	0xFF3
  1245                           intcon	equ	0xFF2
  1246                           postinc0	equ	0xFEE
  1247                           wreg	equ	0xFE8
  1248                           indf2	equ	0xFDF
  1249                           postinc2	equ	0xFDE
  1250                           fsr2h	equ	0xFDA
  1251                           fsr2l	equ	0xFD9
  1252                           status	equ	0xFD8
  1253                           
  1254 ;; *************** function _Ignite_Port *****************
  1255 ;; Defined at:
  1256 ;;		line 80 in file "ignition.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  ignite_numbe    1    wreg     unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  ignite_numbe    1    0[BANK0 ] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;		None               void
  1263 ;; Registers used:
  1264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1270 ;;      Params:         0       0       0       0
  1271 ;;      Locals:         0       1       0       0
  1272 ;;      Temps:          0       0       0       0
  1273 ;;      Totals:         0       1       0       0
  1274 ;;Total ram usage:        1 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    5
  1277 ;; This function calls:
  1278 ;;		Nothing
  1279 ;; This function is called by:
  1280 ;;		_Check_Ignition
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text11
  1285  00077A                     __ptext11:
  1286                           	opt stack 0
  1287  00077A                     _Ignite_Port:
  1288                           	opt stack 24
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;incstack = 0
  1292                           ;Ignite_Port@ignite_number stored from wreg
  1293  00077A  0100               	movlb	0	; () banked
  1294  00077C  6F6A               	movwf	Ignite_Port@ignite_number& (0+255),b
  1295                           
  1296                           ;ignition.c: 81: switch(Marker[ignite_number]) {
  1297  00077E  D014               	goto	l1589
  1298  000780                     l278:
  1299                           
  1300                           ; BSR set to: 0
  1301                           ;ignition.c: 83: PORTCbits.RC5 = 1;
  1302  000780  8A82               	bsf	3970,5,c	;volatile
  1303                           
  1304                           ;ignition.c: 84: break;
  1305  000782  0012               	return	
  1306  000784                     l280:
  1307                           
  1308                           ; BSR set to: 0
  1309                           ;ignition.c: 86: PORTDbits.RD3 = 1;
  1310  000784  8683               	bsf	3971,3,c	;volatile
  1311                           
  1312                           ;ignition.c: 87: break;
  1313  000786  0012               	return	
  1314  000788                     l281:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;ignition.c: 89: PORTDbits.RD1 = 1;
  1318  000788  8283               	bsf	3971,1,c	;volatile
  1319                           
  1320                           ;ignition.c: 90: break;
  1321  00078A  0012               	return	
  1322  00078C                     l282:
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;ignition.c: 92: PORTCbits.RC3 = 1;
  1326  00078C  8682               	bsf	3970,3,c	;volatile
  1327                           
  1328                           ;ignition.c: 93: break;
  1329  00078E  0012               	return	
  1330  000790                     l283:
  1331                           
  1332                           ; BSR set to: 0
  1333                           ;ignition.c: 95: PORTCbits.RC1 = 1;
  1334  000790  8282               	bsf	3970,1,c	;volatile
  1335                           
  1336                           ;ignition.c: 96: break;
  1337  000792  0012               	return	
  1338  000794                     l284:
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;ignition.c: 98: PORTEbits.RE1 = 1;
  1342  000794  8284               	bsf	3972,1,c	;volatile
  1343                           
  1344                           ;ignition.c: 99: break;
  1345  000796  0012               	return	
  1346  000798                     l285:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;ignition.c: 101: PORTAbits.RA5 = 1;
  1350  000798  8A80               	bsf	3968,5,c	;volatile
  1351                           
  1352                           ;ignition.c: 102: break;
  1353  00079A  0012               	return	
  1354  00079C                     l286:
  1355                           
  1356                           ; BSR set to: 0
  1357                           ;ignition.c: 104: PORTBbits.RB5 = 1;
  1358  00079C  8A81               	bsf	3969,5,c	;volatile
  1359                           
  1360                           ;ignition.c: 105: break;
  1361  00079E  0012               	return	
  1362  0007A0                     l287:
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;ignition.c: 107: PORTAbits.RA3 = 1;
  1366  0007A0  8680               	bsf	3968,3,c	;volatile
  1367                           
  1368                           ;ignition.c: 108: break;
  1369  0007A2  0012               	return	
  1370  0007A4                     l288:
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;ignition.c: 110: PORTAbits.RA1 = 1;
  1374  0007A4  8280               	bsf	3968,1,c	;volatile
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;ignition.c: 112: }
  1378                           
  1379                           ;ignition.c: 111: break;
  1380  0007A6  0012               	return	
  1381  0007A8                     l1589:
  1382  0007A8  0100               	movlb	0	; () banked
  1383  0007AA  516A               	movf	Ignite_Port@ignite_number& (0+255),w,b
  1384  0007AC  0D01               	mullw	1
  1385  0007AE  0E60               	movlw	low _Marker
  1386  0007B0  24F3               	addwf	prodl,w,c
  1387  0007B2  6ED9               	movwf	fsr2l,c
  1388  0007B4  0E00               	movlw	high _Marker
  1389  0007B6  20F4               	addwfc	prodh,w,c
  1390  0007B8  6EDA               	movwf	fsr2h,c
  1391  0007BA  50DF               	movf	indf2,w,c
  1392                           
  1393                           ; Switch size 1, requested type "space"
  1394                           ; Number of cases is 10, Range of values is 0 to 9
  1395                           ; switch strategies available:
  1396                           ; Name         Instructions Cycles
  1397                           ; simple_byte           31    16 (average)
  1398                           ;	Chosen strategy is simple_byte
  1399  0007BC  0A00               	xorlw	0	; case 0
  1400  0007BE  B4D8               	btfsc	status,2,c
  1401  0007C0  D7DF               	goto	l278
  1402  0007C2  0A01               	xorlw	1	; case 1
  1403  0007C4  B4D8               	btfsc	status,2,c
  1404  0007C6  D7DE               	goto	l280
  1405  0007C8  0A03               	xorlw	3	; case 2
  1406  0007CA  B4D8               	btfsc	status,2,c
  1407  0007CC  D7DD               	goto	l281
  1408  0007CE  0A01               	xorlw	1	; case 3
  1409  0007D0  B4D8               	btfsc	status,2,c
  1410  0007D2  D7DC               	goto	l282
  1411  0007D4  0A07               	xorlw	7	; case 4
  1412  0007D6  B4D8               	btfsc	status,2,c
  1413  0007D8  D7DB               	goto	l283
  1414  0007DA  0A01               	xorlw	1	; case 5
  1415  0007DC  B4D8               	btfsc	status,2,c
  1416  0007DE  D7DA               	goto	l284
  1417  0007E0  0A03               	xorlw	3	; case 6
  1418  0007E2  B4D8               	btfsc	status,2,c
  1419  0007E4  D7D9               	goto	l285
  1420  0007E6  0A01               	xorlw	1	; case 7
  1421  0007E8  B4D8               	btfsc	status,2,c
  1422  0007EA  D7D8               	goto	l286
  1423  0007EC  0A0F               	xorlw	15	; case 8
  1424  0007EE  B4D8               	btfsc	status,2,c
  1425  0007F0  D7D7               	goto	l287
  1426  0007F2  0A01               	xorlw	1	; case 9
  1427  0007F4  A4D8               	btfss	status,2,c
  1428  0007F6  0012               	return	
  1429  0007F8  D7D5               	goto	l288
  1430  0007FA                     __end_of_Ignite_Port:
  1431                           	opt stack 0
  1432                           tblptru	equ	0xFF8
  1433                           tblptrh	equ	0xFF7
  1434                           tblptrl	equ	0xFF6
  1435                           tablat	equ	0xFF5
  1436                           prodh	equ	0xFF4
  1437                           prodl	equ	0xFF3
  1438                           intcon	equ	0xFF2
  1439                           postinc0	equ	0xFEE
  1440                           wreg	equ	0xFE8
  1441                           indf2	equ	0xFDF
  1442                           postinc2	equ	0xFDE
  1443                           fsr2h	equ	0xFDA
  1444                           fsr2l	equ	0xFD9
  1445                           status	equ	0xFD8
  1446                           
  1447 ;; *************** function _Isr *****************
  1448 ;; Defined at:
  1449 ;;		line 3 in file "interrupt.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;		None               void
  1456 ;; Registers used:
  1457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1463 ;;      Params:         0       0       0       0
  1464 ;;      Locals:         0       0       0       0
  1465 ;;      Temps:         14       0       0       0
  1466 ;;      Totals:        14       0       0       0
  1467 ;;Total ram usage:       14 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    4
  1470 ;; This function calls:
  1471 ;;		_Evaluate_Reception
  1472 ;;		_Receive
  1473 ;;		_Receive_Dump
  1474 ;; This function is called by:
  1475 ;;		Interrupt level 2
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	intcode
  1480  000008                     __pintcode:
  1481                           	opt stack 0
  1482  000008                     _Isr:
  1483                           	opt stack 24
  1484                           
  1485                           ; BSR set to: 0
  1486                           ;incstack = 0
  1487  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1488  00000A  CFFA F037          	movff	pclath,??_Isr
  1489  00000E  CFFB F038          	movff	pclatu,??_Isr+1
  1490  000012  CFE9 F039          	movff	fsr0l,??_Isr+2
  1491  000016  CFEA F03A          	movff	fsr0h,??_Isr+3
  1492  00001A  CFE1 F03B          	movff	fsr1l,??_Isr+4
  1493  00001E  CFE2 F03C          	movff	fsr1h,??_Isr+5
  1494  000022  CFD9 F03D          	movff	fsr2l,??_Isr+6
  1495  000026  CFDA F03E          	movff	fsr2h,??_Isr+7
  1496  00002A  CFF3 F03F          	movff	prodl,??_Isr+8
  1497  00002E  CFF4 F040          	movff	prodh,??_Isr+9
  1498  000032  CFF6 F041          	movff	tblptrl,??_Isr+10
  1499  000036  CFF7 F042          	movff	tblptrh,??_Isr+11
  1500  00003A  CFF8 F043          	movff	tblptru,??_Isr+12
  1501  00003E  CFF5 F044          	movff	tablat,??_Isr+13
  1502                           
  1503                           ;interrupt.c: 4: __nop();
  1504  000042  F000               	nop	
  1505                           
  1506                           ;interrupt.c: 5: if(PIR1bits.RCIF == 1) {
  1507  000044  AA9E               	btfss	3998,5,c	;volatile
  1508  000046  D030               	goto	i2l351
  1509                           
  1510                           ;interrupt.c: 6: if(RCSTA1bits.RX9D == 1) {
  1511  000048  A0AB               	btfss	4011,0,c	;volatile
  1512  00004A  D015               	goto	i2l344
  1513                           
  1514                           ;interrupt.c: 7: receive_counter = 0;
  1515  00004C  0E00               	movlw	0
  1516  00004E  6E49               	movwf	_receive_counter,c
  1517                           
  1518                           ;interrupt.c: 9: received[receive_counter] =
  1519                           ;interrupt.c: 10: Receive();
  1520  000050  5049               	movf	_receive_counter,w,c
  1521  000052  0D01               	mullw	1
  1522  000054  0E45               	movlw	low _received
  1523  000056  24F3               	addwf	prodl,w,c
  1524  000058  6ED9               	movwf	fsr2l,c
  1525  00005A  0E00               	movlw	high _received
  1526  00005C  20F4               	addwfc	prodh,w,c
  1527  00005E  6EDA               	movwf	fsr2h,c
  1528  000060  EC0D  F005         	call	_Receive	;wreg free
  1529  000064  6EDF               	movwf	indf2,c
  1530                           
  1531                           ;interrupt.c: 11: receive_counter++;
  1532  000066  2A49               	incf	_receive_counter,f,c
  1533                           
  1534                           ;interrupt.c: 13: if(received[0] == 0x00) {
  1535  000068  5045               	movf	_received,w,c
  1536  00006A  A4D8               	btfss	status,2,c
  1537  00006C  D002               	goto	i2l345
  1538                           
  1539                           ;interrupt.c: 14: slave_addressed = 1;
  1540  00006E  824A               	bsf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1541                           
  1542                           ;interrupt.c: 15: } else {
  1543  000070  D01B               	goto	i2l351
  1544  000072                     i2l345:
  1545                           
  1546                           ;interrupt.c: 16: slave_addressed = 0;
  1547  000072  924A               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1548                           
  1549                           ;interrupt.c: 17: }
  1550                           ;interrupt.c: 18: } else if(slave_addressed == 1) {
  1551  000074  D019               	goto	i2l351
  1552  000076                     i2l344:
  1553  000076  A24A               	btfss	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1554  000078  D015               	goto	i2l1675
  1555                           
  1556                           ;interrupt.c: 19: received[receive_counter] =
  1557                           ;interrupt.c: 20: Receive();
  1558  00007A  5049               	movf	_receive_counter,w,c
  1559  00007C  0D01               	mullw	1
  1560  00007E  0E45               	movlw	low _received
  1561  000080  24F3               	addwf	prodl,w,c
  1562  000082  6ED9               	movwf	fsr2l,c
  1563  000084  0E00               	movlw	high _received
  1564  000086  20F4               	addwfc	prodh,w,c
  1565  000088  6EDA               	movwf	fsr2h,c
  1566  00008A  EC0D  F005         	call	_Receive	;wreg free
  1567  00008E  6EDF               	movwf	indf2,c
  1568                           
  1569                           ;interrupt.c: 21: receive_counter++;
  1570  000090  2A49               	incf	_receive_counter,f,c
  1571                           
  1572                           ;interrupt.c: 23: if(receive_counter > 3) {
  1573  000092  0E03               	movlw	3
  1574  000094  6449               	cpfsgt	_receive_counter,c
  1575  000096  D008               	goto	i2l351
  1576                           
  1577                           ;interrupt.c: 24: receive_counter = 0;
  1578  000098  0E00               	movlw	0
  1579  00009A  6E49               	movwf	_receive_counter,c
  1580                           
  1581                           ;interrupt.c: 25: slave_addressed = 0;
  1582  00009C  924A               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1583                           
  1584                           ;interrupt.c: 27: Evaluate_Reception();
  1585  00009E  ECC6  F004         	call	_Evaluate_Reception	;wreg free
  1586                           
  1587                           ;interrupt.c: 28: }
  1588                           ;interrupt.c: 29: } else {
  1589  0000A2  D002               	goto	i2l351
  1590  0000A4                     i2l1675:
  1591                           
  1592                           ;interrupt.c: 30: Receive_Dump();
  1593  0000A4  EC05  F005         	call	_Receive_Dump	;wreg free
  1594  0000A8                     i2l351:
  1595  0000A8  C044  FFF5         	movff	??_Isr+13,tablat
  1596  0000AC  C043  FFF8         	movff	??_Isr+12,tblptru
  1597  0000B0  C042  FFF7         	movff	??_Isr+11,tblptrh
  1598  0000B4  C041  FFF6         	movff	??_Isr+10,tblptrl
  1599  0000B8  C040  FFF4         	movff	??_Isr+9,prodh
  1600  0000BC  C03F  FFF3         	movff	??_Isr+8,prodl
  1601  0000C0  C03E  FFDA         	movff	??_Isr+7,fsr2h
  1602  0000C4  C03D  FFD9         	movff	??_Isr+6,fsr2l
  1603  0000C8  C03C  FFE2         	movff	??_Isr+5,fsr1h
  1604  0000CC  C03B  FFE1         	movff	??_Isr+4,fsr1l
  1605  0000D0  C03A  FFEA         	movff	??_Isr+3,fsr0h
  1606  0000D4  C039  FFE9         	movff	??_Isr+2,fsr0l
  1607  0000D8  C038  FFFB         	movff	??_Isr+1,pclatu
  1608  0000DC  C037  FFFA         	movff	??_Isr,pclath
  1609  0000E0  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1610  0000E2  0011               	retfie		f
  1611  0000E4                     __end_of_Isr:
  1612                           	opt stack 0
  1613                           pclatu	equ	0xFFB
  1614                           pclath	equ	0xFFA
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           prodh	equ	0xFF4
  1620                           prodl	equ	0xFF3
  1621                           intcon	equ	0xFF2
  1622                           postinc0	equ	0xFEE
  1623                           fsr0h	equ	0xFEA
  1624                           fsr0l	equ	0xFE9
  1625                           wreg	equ	0xFE8
  1626                           fsr1h	equ	0xFE2
  1627                           fsr1l	equ	0xFE1
  1628                           indf2	equ	0xFDF
  1629                           postinc2	equ	0xFDE
  1630                           fsr2h	equ	0xFDA
  1631                           fsr2l	equ	0xFD9
  1632                           status	equ	0xFD8
  1633                           
  1634 ;; *************** function _Receive_Dump *****************
  1635 ;; Defined at:
  1636 ;;		line 53 in file "communication.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  dump            1    0[COMRAM] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;		None               void
  1643 ;; Registers used:
  1644 ;;		None
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1650 ;;      Params:         0       0       0       0
  1651 ;;      Locals:         1       0       0       0
  1652 ;;      Temps:          0       0       0       0
  1653 ;;      Totals:         1       0       0       0
  1654 ;;Total ram usage:        1 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_Isr
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text13
  1664  000A0A                     __ptext13:
  1665                           	opt stack 0
  1666  000A0A                     _Receive_Dump:
  1667                           	opt stack 27
  1668                           
  1669                           ;communication.c: 54: unsigned char dump;
  1670                           ;communication.c: 55: if(RCSTA1bits.OERR == 1) {
  1671                           
  1672                           ;incstack = 0
  1673  000A0A  A2AB               	btfss	4011,1,c	;volatile
  1674  000A0C  D003               	goto	i2l81
  1675                           
  1676                           ;communication.c: 56: RCSTA1bits.CREN = 0;
  1677  000A0E  98AB               	bcf	4011,4,c	;volatile
  1678                           
  1679                           ;communication.c: 57: RCSTA1bits.CREN = 1;
  1680  000A10  88AB               	bsf	4011,4,c	;volatile
  1681                           
  1682                           ;communication.c: 58: overrun = 1;
  1683  000A12  804A               	bsf	_overrun/(0+8),_overrun& (0+7),c
  1684  000A14                     i2l81:
  1685                           
  1686                           ;communication.c: 59: }
  1687                           ;communication.c: 60: dump = RCREG1;
  1688  000A14  CFAE F001          	movff	4014,Receive_Dump@dump	;volatile
  1689  000A18  0012               	return		;funcret
  1690  000A1A                     __end_of_Receive_Dump:
  1691                           	opt stack 0
  1692                           pclatu	equ	0xFFB
  1693                           pclath	equ	0xFFA
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           prodh	equ	0xFF4
  1699                           prodl	equ	0xFF3
  1700                           intcon	equ	0xFF2
  1701                           postinc0	equ	0xFEE
  1702                           fsr0h	equ	0xFEA
  1703                           fsr0l	equ	0xFE9
  1704                           wreg	equ	0xFE8
  1705                           fsr1h	equ	0xFE2
  1706                           fsr1l	equ	0xFE1
  1707                           indf2	equ	0xFDF
  1708                           postinc2	equ	0xFDE
  1709                           fsr2h	equ	0xFDA
  1710                           fsr2l	equ	0xFD9
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _Receive *****************
  1714 ;; Defined at:
  1715 ;;		line 44 in file "communication.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      unsigned char 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1729 ;;      Params:         0       0       0       0
  1730 ;;      Locals:         0       0       0       0
  1731 ;;      Temps:          0       0       0       0
  1732 ;;      Totals:         0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_Isr
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text14
  1743  000A1A                     __ptext14:
  1744                           	opt stack 0
  1745  000A1A                     _Receive:
  1746                           	opt stack 27
  1747                           
  1748                           ;communication.c: 45: if(RCSTA1bits.OERR == 1) {
  1749                           
  1750                           ;incstack = 0
  1751  000A1A  A2AB               	btfss	4011,1,c	;volatile
  1752  000A1C  D003               	goto	i2l1283
  1753                           
  1754                           ;communication.c: 46: RCSTA1bits.CREN = 0;
  1755  000A1E  98AB               	bcf	4011,4,c	;volatile
  1756                           
  1757                           ;communication.c: 47: RCSTA1bits.CREN = 1;
  1758  000A20  88AB               	bsf	4011,4,c	;volatile
  1759                           
  1760                           ;communication.c: 48: overrun = 1;
  1761  000A22  804A               	bsf	_overrun/(0+8),_overrun& (0+7),c
  1762  000A24                     i2l1283:
  1763                           
  1764                           ;communication.c: 49: }
  1765                           ;communication.c: 50: return (RCREG1);
  1766  000A24  50AE               	movf	4014,w,c	;volatile
  1767  000A26  0012               	return	
  1768  000A28                     __end_of_Receive:
  1769                           	opt stack 0
  1770                           pclatu	equ	0xFFB
  1771                           pclath	equ	0xFFA
  1772                           tblptru	equ	0xFF8
  1773                           tblptrh	equ	0xFF7
  1774                           tblptrl	equ	0xFF6
  1775                           tablat	equ	0xFF5
  1776                           prodh	equ	0xFF4
  1777                           prodl	equ	0xFF3
  1778                           intcon	equ	0xFF2
  1779                           postinc0	equ	0xFEE
  1780                           fsr0h	equ	0xFEA
  1781                           fsr0l	equ	0xFE9
  1782                           wreg	equ	0xFE8
  1783                           fsr1h	equ	0xFE2
  1784                           fsr1l	equ	0xFE1
  1785                           indf2	equ	0xFDF
  1786                           postinc2	equ	0xFDE
  1787                           fsr2h	equ	0xFDA
  1788                           fsr2l	equ	0xFD9
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function _Evaluate_Reception *****************
  1792 ;; Defined at:
  1793 ;;		line 158 in file "ignition.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;		None               void
  1800 ;; Registers used:
  1801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1807 ;;      Params:         0       0       0       0
  1808 ;;      Locals:         0       0       0       0
  1809 ;;      Temps:          0       0       0       0
  1810 ;;      Totals:         0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    3
  1814 ;; This function calls:
  1815 ;;		_Check_Power
  1816 ;;		_Mark_Ignite
  1817 ;;		_Test_Port
  1818 ;; This function is called by:
  1819 ;;		_Isr
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text15
  1824  00098C                     __ptext15:
  1825                           	opt stack 0
  1826  00098C                     _Evaluate_Reception:
  1827                           	opt stack 24
  1828                           
  1829                           ;ignition.c: 164: if (received[2] == 'T') {
  1830                           
  1831                           ;incstack = 0
  1832  00098C  0E54               	movlw	84
  1833  00098E  1847               	xorwf	_received+2,w,c
  1834  000990  A4D8               	btfss	status,2,c
  1835  000992  D005               	goto	i2l1641
  1836                           
  1837                           ;ignition.c: 165: Check_Power();
  1838  000994  EC85  F001         	call	_Check_Power	;wreg free
  1839                           
  1840                           ;ignition.c: 166: Test_Port();
  1841  000998  EC74  F000         	call	_Test_Port	;wreg free
  1842                           
  1843                           ;ignition.c: 167: } else if (received[2] == 'I') {
  1844  00099C  0012               	return	
  1845  00099E                     i2l1641:
  1846  00099E  0E49               	movlw	73
  1847  0009A0  1847               	xorwf	_received+2,w,c
  1848  0009A2  A4D8               	btfss	status,2,c
  1849  0009A4  0012               	return	
  1850                           
  1851                           ;ignition.c: 168: Mark_Ignite();
  1852  0009A6  ECFA  F004         	call	_Mark_Ignite	;wreg free
  1853  0009AA  0012               	return	
  1854  0009AC                     __end_of_Evaluate_Reception:
  1855                           	opt stack 0
  1856                           pclatu	equ	0xFFB
  1857                           pclath	equ	0xFFA
  1858                           tblptru	equ	0xFF8
  1859                           tblptrh	equ	0xFF7
  1860                           tblptrl	equ	0xFF6
  1861                           tablat	equ	0xFF5
  1862                           prodh	equ	0xFF4
  1863                           prodl	equ	0xFF3
  1864                           intcon	equ	0xFF2
  1865                           postinc0	equ	0xFEE
  1866                           fsr0h	equ	0xFEA
  1867                           fsr0l	equ	0xFE9
  1868                           wreg	equ	0xFE8
  1869                           fsr1h	equ	0xFE2
  1870                           fsr1l	equ	0xFE1
  1871                           indf2	equ	0xFDF
  1872                           postinc2	equ	0xFDE
  1873                           fsr2h	equ	0xFDA
  1874                           fsr2l	equ	0xFD9
  1875                           status	equ	0xFD8
  1876                           
  1877 ;; *************** function _Test_Port *****************
  1878 ;; Defined at:
  1879 ;;		line 5 in file "ignition.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;		None               void
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1893 ;;      Params:         0       0       0       0
  1894 ;;      Locals:         0       0       0       0
  1895 ;;      Temps:          0       0       0       0
  1896 ;;      Totals:         0       0       0       0
  1897 ;;Total ram usage:        0 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    1
  1900 ;; This function calls:
  1901 ;;		_Transmit
  1902 ;; This function is called by:
  1903 ;;		_Evaluate_Reception
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           	psect	text16
  1908  0000E8                     __ptext16:
  1909                           	opt stack 0
  1910  0000E8                     _Test_Port:
  1911                           	opt stack 25
  1912                           
  1913                           ;ignition.c: 6: switch(received[3]) {
  1914                           
  1915                           ;incstack = 0
  1916  0000E8  D0F0               	goto	i2l1583
  1917  0000EA                     i2l233:
  1918                           
  1919                           ;ignition.c: 8: if(PORTCbits.RC4 == 1) {
  1920  0000EA  A882               	btfss	3970,4,c	;volatile
  1921  0000EC  D00A               	goto	i2l234
  1922                           
  1923                           ;ignition.c: 9: Transmit(0xAA, 'T', 0, '1');
  1924  0000EE  0E54               	movlw	84
  1925  0000F0  6E01               	movwf	Transmit@operation,c
  1926  0000F2  0E00               	movlw	0
  1927  0000F4  6E02               	movwf	Transmit@port,c
  1928  0000F6  0E31               	movlw	49
  1929  0000F8  6E03               	movwf	Transmit@con_status,c
  1930  0000FA  0EAA               	movlw	170
  1931  0000FC  EC2B  F004         	call	_Transmit
  1932                           
  1933                           ;ignition.c: 10: }else if(PORTCbits.RC4 == 0) {
  1934  000100  0012               	return	
  1935  000102                     i2l234:
  1936  000102  B882               	btfsc	3970,4,c	;volatile
  1937  000104  0012               	return	
  1938                           
  1939                           ;ignition.c: 11: Transmit(0xAA, 'T', 0, '0');
  1940  000106  0E54               	movlw	84
  1941  000108  6E01               	movwf	Transmit@operation,c
  1942  00010A  0E00               	movlw	0
  1943  00010C  6E02               	movwf	Transmit@port,c
  1944  00010E  0E30               	movlw	48
  1945  000110  6E03               	movwf	Transmit@con_status,c
  1946  000112  0EAA               	movlw	170
  1947  000114  EC2B  F004         	call	_Transmit
  1948                           
  1949                           ;ignition.c: 12: }
  1950                           ;ignition.c: 13: break;
  1951  000118  0012               	return	
  1952  00011A                     i2l238:
  1953                           
  1954                           ;ignition.c: 15: if(PORTDbits.RD2 == 1) {
  1955  00011A  A483               	btfss	3971,2,c	;volatile
  1956  00011C  D00A               	goto	i2l239
  1957                           
  1958                           ;ignition.c: 16: Transmit(0xAA, 'T', 1, '1');
  1959  00011E  0E54               	movlw	84
  1960  000120  6E01               	movwf	Transmit@operation,c
  1961  000122  0E01               	movlw	1
  1962  000124  6E02               	movwf	Transmit@port,c
  1963  000126  0E31               	movlw	49
  1964  000128  6E03               	movwf	Transmit@con_status,c
  1965  00012A  0EAA               	movlw	170
  1966  00012C  EC2B  F004         	call	_Transmit
  1967                           
  1968                           ;ignition.c: 17: }else if(PORTCbits.RC4 == 0) {
  1969  000130  0012               	return	
  1970  000132                     i2l239:
  1971  000132  B882               	btfsc	3970,4,c	;volatile
  1972  000134  0012               	return	
  1973                           
  1974                           ;ignition.c: 18: Transmit(0xAA, 'T', 1, '0');
  1975  000136  0E54               	movlw	84
  1976  000138  6E01               	movwf	Transmit@operation,c
  1977  00013A  0E01               	movlw	1
  1978  00013C  6E02               	movwf	Transmit@port,c
  1979  00013E  0E30               	movlw	48
  1980  000140  6E03               	movwf	Transmit@con_status,c
  1981  000142  0EAA               	movlw	170
  1982  000144  EC2B  F004         	call	_Transmit
  1983                           
  1984                           ;ignition.c: 19: }
  1985                           ;ignition.c: 20: break;
  1986  000148  0012               	return	
  1987  00014A                     i2l242:
  1988                           
  1989                           ;ignition.c: 22: if(PORTDbits.RD0 == 1) {
  1990  00014A  A083               	btfss	3971,0,c	;volatile
  1991  00014C  D00A               	goto	i2l243
  1992                           
  1993                           ;ignition.c: 23: Transmit(0xAA, 'T', 2, '1');
  1994  00014E  0E54               	movlw	84
  1995  000150  6E01               	movwf	Transmit@operation,c
  1996  000152  0E02               	movlw	2
  1997  000154  6E02               	movwf	Transmit@port,c
  1998  000156  0E31               	movlw	49
  1999  000158  6E03               	movwf	Transmit@con_status,c
  2000  00015A  0EAA               	movlw	170
  2001  00015C  EC2B  F004         	call	_Transmit
  2002                           
  2003                           ;ignition.c: 24: }else if(PORTCbits.RC4 == 0) {
  2004  000160  0012               	return	
  2005  000162                     i2l243:
  2006  000162  B882               	btfsc	3970,4,c	;volatile
  2007  000164  0012               	return	
  2008                           
  2009                           ;ignition.c: 25: Transmit(0xAA, 'T', 2, '0');
  2010  000166  0E54               	movlw	84
  2011  000168  6E01               	movwf	Transmit@operation,c
  2012  00016A  0E02               	movlw	2
  2013  00016C  6E02               	movwf	Transmit@port,c
  2014  00016E  0E30               	movlw	48
  2015  000170  6E03               	movwf	Transmit@con_status,c
  2016  000172  0EAA               	movlw	170
  2017  000174  EC2B  F004         	call	_Transmit
  2018                           
  2019                           ;ignition.c: 26: }
  2020                           ;ignition.c: 27: break;
  2021  000178  0012               	return	
  2022  00017A                     i2l246:
  2023                           
  2024                           ;ignition.c: 29: if(PORTCbits.RC2 == 1) {
  2025  00017A  A482               	btfss	3970,2,c	;volatile
  2026  00017C  D00A               	goto	i2l247
  2027                           
  2028                           ;ignition.c: 30: Transmit(0xAA, 'T', 3, '1');
  2029  00017E  0E54               	movlw	84
  2030  000180  6E01               	movwf	Transmit@operation,c
  2031  000182  0E03               	movlw	3
  2032  000184  6E02               	movwf	Transmit@port,c
  2033  000186  0E31               	movlw	49
  2034  000188  6E03               	movwf	Transmit@con_status,c
  2035  00018A  0EAA               	movlw	170
  2036  00018C  EC2B  F004         	call	_Transmit
  2037                           
  2038                           ;ignition.c: 31: }else if(PORTCbits.RC4 == 0) {
  2039  000190  0012               	return	
  2040  000192                     i2l247:
  2041  000192  B882               	btfsc	3970,4,c	;volatile
  2042  000194  0012               	return	
  2043                           
  2044                           ;ignition.c: 32: Transmit(0xAA, 'T', 3, '0');
  2045  000196  0E54               	movlw	84
  2046  000198  6E01               	movwf	Transmit@operation,c
  2047  00019A  0E03               	movlw	3
  2048  00019C  6E02               	movwf	Transmit@port,c
  2049  00019E  0E30               	movlw	48
  2050  0001A0  6E03               	movwf	Transmit@con_status,c
  2051  0001A2  0EAA               	movlw	170
  2052  0001A4  EC2B  F004         	call	_Transmit
  2053                           
  2054                           ;ignition.c: 33: }
  2055                           ;ignition.c: 34: break;
  2056  0001A8  0012               	return	
  2057  0001AA                     i2l250:
  2058                           
  2059                           ;ignition.c: 36: if(PORTEbits.RE2 == 1) {
  2060  0001AA  A484               	btfss	3972,2,c	;volatile
  2061  0001AC  D00A               	goto	i2l251
  2062                           
  2063                           ;ignition.c: 37: Transmit(0xAA, 'T', 4, '1');
  2064  0001AE  0E54               	movlw	84
  2065  0001B0  6E01               	movwf	Transmit@operation,c
  2066  0001B2  0E04               	movlw	4
  2067  0001B4  6E02               	movwf	Transmit@port,c
  2068  0001B6  0E31               	movlw	49
  2069  0001B8  6E03               	movwf	Transmit@con_status,c
  2070  0001BA  0EAA               	movlw	170
  2071  0001BC  EC2B  F004         	call	_Transmit
  2072                           
  2073                           ;ignition.c: 38: }else if(PORTCbits.RC4 == 0) {
  2074  0001C0  0012               	return	
  2075  0001C2                     i2l251:
  2076  0001C2  B882               	btfsc	3970,4,c	;volatile
  2077  0001C4  0012               	return	
  2078                           
  2079                           ;ignition.c: 39: Transmit(0xAA, 'T', 4, '0');
  2080  0001C6  0E54               	movlw	84
  2081  0001C8  6E01               	movwf	Transmit@operation,c
  2082  0001CA  0E04               	movlw	4
  2083  0001CC  6E02               	movwf	Transmit@port,c
  2084  0001CE  0E30               	movlw	48
  2085  0001D0  6E03               	movwf	Transmit@con_status,c
  2086  0001D2  0EAA               	movlw	170
  2087  0001D4  EC2B  F004         	call	_Transmit
  2088                           
  2089                           ;ignition.c: 40: }
  2090                           ;ignition.c: 41: break;
  2091  0001D8  0012               	return	
  2092  0001DA                     i2l254:
  2093                           
  2094                           ;ignition.c: 43: if(PORTEbits.RE0 == 1) {
  2095  0001DA  A084               	btfss	3972,0,c	;volatile
  2096  0001DC  D00A               	goto	i2l255
  2097                           
  2098                           ;ignition.c: 44: Transmit(0xAA, 'T', 5, '1');
  2099  0001DE  0E54               	movlw	84
  2100  0001E0  6E01               	movwf	Transmit@operation,c
  2101  0001E2  0E05               	movlw	5
  2102  0001E4  6E02               	movwf	Transmit@port,c
  2103  0001E6  0E31               	movlw	49
  2104  0001E8  6E03               	movwf	Transmit@con_status,c
  2105  0001EA  0EAA               	movlw	170
  2106  0001EC  EC2B  F004         	call	_Transmit
  2107                           
  2108                           ;ignition.c: 45: }else if(PORTCbits.RC4 == 0) {
  2109  0001F0  0012               	return	
  2110  0001F2                     i2l255:
  2111  0001F2  B882               	btfsc	3970,4,c	;volatile
  2112  0001F4  0012               	return	
  2113                           
  2114                           ;ignition.c: 46: Transmit(0xAA, 'T', 5, '0');
  2115  0001F6  0E54               	movlw	84
  2116  0001F8  6E01               	movwf	Transmit@operation,c
  2117  0001FA  0E05               	movlw	5
  2118  0001FC  6E02               	movwf	Transmit@port,c
  2119  0001FE  0E30               	movlw	48
  2120  000200  6E03               	movwf	Transmit@con_status,c
  2121  000202  0EAA               	movlw	170
  2122  000204  EC2B  F004         	call	_Transmit
  2123                           
  2124                           ;ignition.c: 47: }
  2125                           ;ignition.c: 48: break;
  2126  000208  0012               	return	
  2127  00020A                     i2l258:
  2128                           
  2129                           ;ignition.c: 50: if(PORTAbits.RA4 == 1) {
  2130  00020A  A880               	btfss	3968,4,c	;volatile
  2131  00020C  D00A               	goto	i2l259
  2132                           
  2133                           ;ignition.c: 51: Transmit(0xAA, 'T', 6, '1');
  2134  00020E  0E54               	movlw	84
  2135  000210  6E01               	movwf	Transmit@operation,c
  2136  000212  0E06               	movlw	6
  2137  000214  6E02               	movwf	Transmit@port,c
  2138  000216  0E31               	movlw	49
  2139  000218  6E03               	movwf	Transmit@con_status,c
  2140  00021A  0EAA               	movlw	170
  2141  00021C  EC2B  F004         	call	_Transmit
  2142                           
  2143                           ;ignition.c: 52: }else if(PORTCbits.RC4 == 0) {
  2144  000220  0012               	return	
  2145  000222                     i2l259:
  2146  000222  B882               	btfsc	3970,4,c	;volatile
  2147  000224  0012               	return	
  2148                           
  2149                           ;ignition.c: 53: Transmit(0xAA, 'T', 6, '0');
  2150  000226  0E54               	movlw	84
  2151  000228  6E01               	movwf	Transmit@operation,c
  2152  00022A  0E06               	movlw	6
  2153  00022C  6E02               	movwf	Transmit@port,c
  2154  00022E  0E30               	movlw	48
  2155  000230  6E03               	movwf	Transmit@con_status,c
  2156  000232  0EAA               	movlw	170
  2157  000234  EC2B  F004         	call	_Transmit
  2158                           
  2159                           ;ignition.c: 54: }
  2160                           ;ignition.c: 55: break;
  2161  000238  0012               	return	
  2162  00023A                     i2l262:
  2163                           
  2164                           ;ignition.c: 57: if(PORTBbits.RB4 == 1) {
  2165  00023A  A881               	btfss	3969,4,c	;volatile
  2166  00023C  D00A               	goto	i2l263
  2167                           
  2168                           ;ignition.c: 58: Transmit(0xAA, 'T', 7, '1');
  2169  00023E  0E54               	movlw	84
  2170  000240  6E01               	movwf	Transmit@operation,c
  2171  000242  0E07               	movlw	7
  2172  000244  6E02               	movwf	Transmit@port,c
  2173  000246  0E31               	movlw	49
  2174  000248  6E03               	movwf	Transmit@con_status,c
  2175  00024A  0EAA               	movlw	170
  2176  00024C  EC2B  F004         	call	_Transmit
  2177                           
  2178                           ;ignition.c: 59: }else if(PORTCbits.RC4 == 0) {
  2179  000250  0012               	return	
  2180  000252                     i2l263:
  2181  000252  B882               	btfsc	3970,4,c	;volatile
  2182  000254  0012               	return	
  2183                           
  2184                           ;ignition.c: 60: Transmit(0xAA, 'T', 7, '0');
  2185  000256  0E54               	movlw	84
  2186  000258  6E01               	movwf	Transmit@operation,c
  2187  00025A  0E07               	movlw	7
  2188  00025C  6E02               	movwf	Transmit@port,c
  2189  00025E  0E30               	movlw	48
  2190  000260  6E03               	movwf	Transmit@con_status,c
  2191  000262  0EAA               	movlw	170
  2192  000264  EC2B  F004         	call	_Transmit
  2193                           
  2194                           ;ignition.c: 61: }
  2195                           ;ignition.c: 62: break;
  2196  000268  0012               	return	
  2197  00026A                     i2l266:
  2198                           
  2199                           ;ignition.c: 64: if(PORTAbits.RA2 == 1) {
  2200  00026A  A480               	btfss	3968,2,c	;volatile
  2201  00026C  D00A               	goto	i2l267
  2202                           
  2203                           ;ignition.c: 65: Transmit(0xAA, 'T', 8, '1');
  2204  00026E  0E54               	movlw	84
  2205  000270  6E01               	movwf	Transmit@operation,c
  2206  000272  0E08               	movlw	8
  2207  000274  6E02               	movwf	Transmit@port,c
  2208  000276  0E31               	movlw	49
  2209  000278  6E03               	movwf	Transmit@con_status,c
  2210  00027A  0EAA               	movlw	170
  2211  00027C  EC2B  F004         	call	_Transmit
  2212                           
  2213                           ;ignition.c: 66: }else if(PORTCbits.RC4 == 0) {
  2214  000280  0012               	return	
  2215  000282                     i2l267:
  2216  000282  B882               	btfsc	3970,4,c	;volatile
  2217  000284  0012               	return	
  2218                           
  2219                           ;ignition.c: 67: Transmit(0xAA, 'T', 8, '0');
  2220  000286  0E54               	movlw	84
  2221  000288  6E01               	movwf	Transmit@operation,c
  2222  00028A  0E08               	movlw	8
  2223  00028C  6E02               	movwf	Transmit@port,c
  2224  00028E  0E30               	movlw	48
  2225  000290  6E03               	movwf	Transmit@con_status,c
  2226  000292  0EAA               	movlw	170
  2227  000294  EC2B  F004         	call	_Transmit
  2228                           
  2229                           ;ignition.c: 68: }
  2230                           ;ignition.c: 69: break;
  2231  000298  0012               	return	
  2232  00029A                     i2l270:
  2233                           
  2234                           ;ignition.c: 71: if(PORTAbits.RA0 == 1) {
  2235  00029A  A080               	btfss	3968,0,c	;volatile
  2236  00029C  D00A               	goto	i2l271
  2237                           
  2238                           ;ignition.c: 72: Transmit(0xAA, 'T', 9, '1');
  2239  00029E  0E54               	movlw	84
  2240  0002A0  6E01               	movwf	Transmit@operation,c
  2241  0002A2  0E09               	movlw	9
  2242  0002A4  6E02               	movwf	Transmit@port,c
  2243  0002A6  0E31               	movlw	49
  2244  0002A8  6E03               	movwf	Transmit@con_status,c
  2245  0002AA  0EAA               	movlw	170
  2246  0002AC  EC2B  F004         	call	_Transmit
  2247                           
  2248                           ;ignition.c: 73: }else if(PORTCbits.RC4 == 0) {
  2249  0002B0  0012               	return	
  2250  0002B2                     i2l271:
  2251  0002B2  B882               	btfsc	3970,4,c	;volatile
  2252  0002B4  0012               	return	
  2253                           
  2254                           ;ignition.c: 74: Transmit(0xAA, 'T', 9, '0');
  2255  0002B6  0E54               	movlw	84
  2256  0002B8  6E01               	movwf	Transmit@operation,c
  2257  0002BA  0E09               	movlw	9
  2258  0002BC  6E02               	movwf	Transmit@port,c
  2259  0002BE  0E30               	movlw	48
  2260  0002C0  6E03               	movwf	Transmit@con_status,c
  2261  0002C2  0EAA               	movlw	170
  2262  0002C4  EC2B  F004         	call	_Transmit
  2263                           
  2264                           ;ignition.c: 77: }
  2265                           
  2266                           ;ignition.c: 75: }
  2267                           ;ignition.c: 76: break;
  2268  0002C8  0012               	return	
  2269  0002CA                     i2l1583:
  2270  0002CA  5048               	movf	_received+3,w,c
  2271                           
  2272                           ; Switch size 1, requested type "space"
  2273                           ; Number of cases is 10, Range of values is 0 to 9
  2274                           ; switch strategies available:
  2275                           ; Name         Instructions Cycles
  2276                           ; simple_byte           31    16 (average)
  2277                           ;	Chosen strategy is simple_byte
  2278  0002CC  0A00               	xorlw	0	; case 0
  2279  0002CE  B4D8               	btfsc	status,2,c
  2280  0002D0  D70C               	goto	i2l233
  2281  0002D2  0A01               	xorlw	1	; case 1
  2282  0002D4  B4D8               	btfsc	status,2,c
  2283  0002D6  D721               	goto	i2l238
  2284  0002D8  0A03               	xorlw	3	; case 2
  2285  0002DA  B4D8               	btfsc	status,2,c
  2286  0002DC  D736               	goto	i2l242
  2287  0002DE  0A01               	xorlw	1	; case 3
  2288  0002E0  B4D8               	btfsc	status,2,c
  2289  0002E2  D74B               	goto	i2l246
  2290  0002E4  0A07               	xorlw	7	; case 4
  2291  0002E6  B4D8               	btfsc	status,2,c
  2292  0002E8  D760               	goto	i2l250
  2293  0002EA  0A01               	xorlw	1	; case 5
  2294  0002EC  B4D8               	btfsc	status,2,c
  2295  0002EE  D775               	goto	i2l254
  2296  0002F0  0A03               	xorlw	3	; case 6
  2297  0002F2  B4D8               	btfsc	status,2,c
  2298  0002F4  D78A               	goto	i2l258
  2299  0002F6  0A01               	xorlw	1	; case 7
  2300  0002F8  B4D8               	btfsc	status,2,c
  2301  0002FA  D79F               	goto	i2l262
  2302  0002FC  0A0F               	xorlw	15	; case 8
  2303  0002FE  B4D8               	btfsc	status,2,c
  2304  000300  D7B4               	goto	i2l266
  2305  000302  0A01               	xorlw	1	; case 9
  2306  000304  A4D8               	btfss	status,2,c
  2307  000306  0012               	return	
  2308  000308  D7C8               	goto	i2l270
  2309  00030A                     __end_of_Test_Port:
  2310                           	opt stack 0
  2311                           pclatu	equ	0xFFB
  2312                           pclath	equ	0xFFA
  2313                           tblptru	equ	0xFF8
  2314                           tblptrh	equ	0xFF7
  2315                           tblptrl	equ	0xFF6
  2316                           tablat	equ	0xFF5
  2317                           prodh	equ	0xFF4
  2318                           prodl	equ	0xFF3
  2319                           intcon	equ	0xFF2
  2320                           postinc0	equ	0xFEE
  2321                           fsr0h	equ	0xFEA
  2322                           fsr0l	equ	0xFE9
  2323                           wreg	equ	0xFE8
  2324                           fsr1h	equ	0xFE2
  2325                           fsr1l	equ	0xFE1
  2326                           indf2	equ	0xFDF
  2327                           postinc2	equ	0xFDE
  2328                           fsr2h	equ	0xFDA
  2329                           fsr2l	equ	0xFD9
  2330                           status	equ	0xFD8
  2331                           
  2332 ;; *************** function _Transmit *****************
  2333 ;; Defined at:
  2334 ;;		line 18 in file "communication.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  receiver        1    wreg     unsigned char 
  2337 ;;  operation       1    0[COMRAM] unsigned char 
  2338 ;;  port            1    1[COMRAM] unsigned char 
  2339 ;;  con_status      1    2[COMRAM] unsigned char 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  receiver        1    3[COMRAM] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;		None               void
  2344 ;; Registers used:
  2345 ;;		wreg, status,2
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2351 ;;      Params:         3       0       0       0
  2352 ;;      Locals:         1       0       0       0
  2353 ;;      Temps:          0       0       0       0
  2354 ;;      Totals:         4       0       0       0
  2355 ;;Total ram usage:        4 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_Test_Port
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text17
  2365  000856                     __ptext17:
  2366                           	opt stack 0
  2367  000856                     _Transmit:
  2368                           	opt stack 25
  2369                           
  2370                           ;incstack = 0
  2371                           ;Transmit@receiver stored from wreg
  2372  000856  6E04               	movwf	Transmit@receiver,c
  2373                           
  2374                           ;communication.c: 20: PORTDbits.RD4 = 1;
  2375  000858  8883               	bsf	3971,4,c	;volatile
  2376                           
  2377                           ;communication.c: 21: RCSTA1bits.CREN = 0;
  2378  00085A  98AB               	bcf	4011,4,c	;volatile
  2379                           
  2380                           ;communication.c: 23: __nop();
  2381  00085C  F000               	nop	
  2382  00085E                     i2l53:
  2383  00085E  A89E               	btfss	3998,4,c	;volatile
  2384  000860  D7FE               	goto	i2l53
  2385                           
  2386                           ;communication.c: 25: TXSTA1bits.TX9D = 1;
  2387  000862  80AC               	bsf	4012,0,c	;volatile
  2388                           
  2389                           ;communication.c: 26: TXREG1 = receiver;
  2390  000864  C004  FFAD         	movff	Transmit@receiver,4013	;volatile
  2391  000868                     i2l56:
  2392  000868  A89E               	btfss	3998,4,c	;volatile
  2393  00086A  D7FE               	goto	i2l56
  2394                           
  2395                           ;communication.c: 28: TXREG1 = 0x01;
  2396  00086C  0E01               	movlw	1
  2397  00086E  6EAD               	movwf	4013,c	;volatile
  2398  000870                     i2l59:
  2399  000870  A89E               	btfss	3998,4,c	;volatile
  2400  000872  D7FE               	goto	i2l59
  2401                           
  2402                           ;communication.c: 30: TXREG1 = operation;
  2403  000874  C001  FFAD         	movff	Transmit@operation,4013	;volatile
  2404  000878                     i2l62:
  2405  000878  A89E               	btfss	3998,4,c	;volatile
  2406  00087A  D7FE               	goto	i2l62
  2407                           
  2408                           ;communication.c: 32: TXREG1 = port;
  2409  00087C  C002  FFAD         	movff	Transmit@port,4013	;volatile
  2410  000880                     i2l65:
  2411  000880  A89E               	btfss	3998,4,c	;volatile
  2412  000882  D7FE               	goto	i2l65
  2413                           
  2414                           ;communication.c: 34: TXREG1 = con_status;
  2415  000884  C003  FFAD         	movff	Transmit@con_status,4013	;volatile
  2416  000888                     i2l68:
  2417  000888  A89E               	btfss	3998,4,c	;volatile
  2418  00088A  D7FE               	goto	i2l68
  2419                           
  2420                           ;communication.c: 36: TXREG1 = p_status;
  2421  00088C  C04B  FFAD         	movff	_p_status,4013	;volatile
  2422  000890                     i2l71:
  2423  000890  A2AC               	btfss	4012,1,c	;volatile
  2424  000892  D7FE               	goto	i2l71
  2425                           
  2426                           ;communication.c: 38: PORTDbits.RD4 = 0;
  2427  000894  9883               	bcf	3971,4,c	;volatile
  2428                           
  2429                           ;communication.c: 39: RCSTA1bits.CREN = 1;
  2430  000896  88AB               	bsf	4011,4,c	;volatile
  2431                           
  2432                           ;communication.c: 40: __nop();
  2433  000898  F000               	nop	
  2434  00089A  0012               	return		;funcret
  2435  00089C                     __end_of_Transmit:
  2436                           	opt stack 0
  2437                           pclatu	equ	0xFFB
  2438                           pclath	equ	0xFFA
  2439                           tblptru	equ	0xFF8
  2440                           tblptrh	equ	0xFF7
  2441                           tblptrl	equ	0xFF6
  2442                           tablat	equ	0xFF5
  2443                           prodh	equ	0xFF4
  2444                           prodl	equ	0xFF3
  2445                           intcon	equ	0xFF2
  2446                           postinc0	equ	0xFEE
  2447                           fsr0h	equ	0xFEA
  2448                           fsr0l	equ	0xFE9
  2449                           wreg	equ	0xFE8
  2450                           fsr1h	equ	0xFE2
  2451                           fsr1l	equ	0xFE1
  2452                           indf2	equ	0xFDF
  2453                           postinc2	equ	0xFDE
  2454                           fsr2h	equ	0xFDA
  2455                           fsr2l	equ	0xFD9
  2456                           status	equ	0xFD8
  2457                           
  2458 ;; *************** function _Mark_Ignite *****************
  2459 ;; Defined at:
  2460 ;;		line 125 in file "ignition.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;		None               void
  2467 ;; Registers used:
  2468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2474 ;;      Params:         0       0       0       0
  2475 ;;      Locals:         0       0       0       0
  2476 ;;      Temps:          0       0       0       0
  2477 ;;      Totals:         0       0       0       0
  2478 ;;Total ram usage:        0 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_Evaluate_Reception
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text18
  2488  0009F4                     __ptext18:
  2489                           	opt stack 0
  2490  0009F4                     _Mark_Ignite:
  2491                           	opt stack 26
  2492                           
  2493                           ;ignition.c: 126: Marker[received[3]] = 1;
  2494                           
  2495                           ;incstack = 0
  2496  0009F4  5048               	movf	_received+3,w,c
  2497  0009F6  0D01               	mullw	1
  2498  0009F8  0E60               	movlw	low _Marker
  2499  0009FA  24F3               	addwf	prodl,w,c
  2500  0009FC  6ED9               	movwf	fsr2l,c
  2501  0009FE  0E00               	movlw	high _Marker
  2502  000A00  20F4               	addwfc	prodh,w,c
  2503  000A02  6EDA               	movwf	fsr2h,c
  2504  000A04  0E01               	movlw	1
  2505  000A06  6EDF               	movwf	indf2,c
  2506  000A08  0012               	return		;funcret
  2507  000A0A                     __end_of_Mark_Ignite:
  2508                           	opt stack 0
  2509                           pclatu	equ	0xFFB
  2510                           pclath	equ	0xFFA
  2511                           tblptru	equ	0xFF8
  2512                           tblptrh	equ	0xFF7
  2513                           tblptrl	equ	0xFF6
  2514                           tablat	equ	0xFF5
  2515                           prodh	equ	0xFF4
  2516                           prodl	equ	0xFF3
  2517                           intcon	equ	0xFF2
  2518                           postinc0	equ	0xFEE
  2519                           fsr0h	equ	0xFEA
  2520                           fsr0l	equ	0xFE9
  2521                           wreg	equ	0xFE8
  2522                           fsr1h	equ	0xFE2
  2523                           fsr1l	equ	0xFE1
  2524                           indf2	equ	0xFDF
  2525                           postinc2	equ	0xFDE
  2526                           fsr2h	equ	0xFDA
  2527                           fsr2l	equ	0xFD9
  2528                           status	equ	0xFD8
  2529                           
  2530 ;; *************** function _Check_Power *****************
  2531 ;; Defined at:
  2532 ;;		line 129 in file "ignition.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;  source_power    3   51[COMRAM] float 
  2537 ;;  supply          3   48[COMRAM] float 
  2538 ;;  voltage         3   45[COMRAM] float 
  2539 ;;  DAC_out         3   42[COMRAM] float 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;		None               void
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2549 ;;      Params:         0       0       0       0
  2550 ;;      Locals:        12       0       0       0
  2551 ;;      Temps:          0       0       0       0
  2552 ;;      Totals:        12       0       0       0
  2553 ;;Total ram usage:       12 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    2
  2556 ;; This function calls:
  2557 ;;		___ftdiv
  2558 ;;		___ftge
  2559 ;;		___ftmul
  2560 ;;		___lbtoft
  2561 ;; This function is called by:
  2562 ;;		_Evaluate_Reception
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text19
  2567  00030A                     __ptext19:
  2568                           	opt stack 0
  2569  00030A                     _Check_Power:
  2570                           	opt stack 24
  2571                           
  2572                           ;ignition.c: 133: float source_power = 0;
  2573                           
  2574                           ;incstack = 0
  2575  00030A  0E00               	movlw	0
  2576  00030C  6E34               	movwf	Check_Power@source_power,c
  2577  00030E  0E00               	movlw	0
  2578  000310  6E35               	movwf	Check_Power@source_power+1,c
  2579  000312  0E00               	movlw	0
  2580  000314  6E36               	movwf	Check_Power@source_power+2,c
  2581                           
  2582                           ;ignition.c: 134: float voltage = 0;
  2583  000316  0E00               	movlw	0
  2584  000318  6E2E               	movwf	Check_Power@voltage,c
  2585  00031A  0E00               	movlw	0
  2586  00031C  6E2F               	movwf	Check_Power@voltage+1,c
  2587  00031E  0E00               	movlw	0
  2588  000320  6E30               	movwf	Check_Power@voltage+2,c
  2589                           
  2590                           ;ignition.c: 135: float DAC_out = 1.024;
  2591  000322  0E12               	movlw	18
  2592  000324  6E2B               	movwf	Check_Power@DAC_out,c
  2593  000326  0E83               	movlw	131
  2594  000328  6E2C               	movwf	Check_Power@DAC_out+1,c
  2595  00032A  0E3F               	movlw	63
  2596  00032C  6E2D               	movwf	Check_Power@DAC_out+2,c
  2597                           
  2598                           ;ignition.c: 136: float supply = 0;
  2599  00032E  0E00               	movlw	0
  2600  000330  6E31               	movwf	Check_Power@supply,c
  2601  000332  0E00               	movlw	0
  2602  000334  6E32               	movwf	Check_Power@supply+1,c
  2603  000336  0E00               	movlw	0
  2604  000338  6E33               	movwf	Check_Power@supply+2,c
  2605                           
  2606                           ;ignition.c: 139: ADCON0bits.CHS = 0b11110;
  2607  00033A  94C2               	bcf	4034,2,c	;volatile
  2608  00033C  86C2               	bsf	4034,3,c	;volatile
  2609  00033E  88C2               	bsf	4034,4,c	;volatile
  2610  000340  8AC2               	bsf	4034,5,c	;volatile
  2611  000342  8CC2               	bsf	4034,6,c	;volatile
  2612                           
  2613                           ;ignition.c: 140: ADCON0bits.GO_nDONE = 1;
  2614  000344  82C2               	bsf	4034,1,c	;volatile
  2615  000346                     i2l301:
  2616  000346  B2C2               	btfsc	4034,1,c	;volatile
  2617  000348  D7FE               	goto	i2l301
  2618                           
  2619                           ;ignition.c: 142: supply = ((DAC_out * 255) / ADRESH);
  2620  00034A  0E00               	movlw	0
  2621  00034C  6E10               	movwf	___ftmul@f2,c
  2622  00034E  0E7F               	movlw	127
  2623  000350  6E11               	movwf	___ftmul@f2+1,c
  2624  000352  0E43               	movlw	67
  2625  000354  6E12               	movwf	___ftmul@f2+2,c
  2626  000356  C02B  F00D         	movff	Check_Power@DAC_out,___ftmul@f1
  2627  00035A  C02C  F00E         	movff	Check_Power@DAC_out+1,___ftmul@f1+1
  2628  00035E  C02D  F00F         	movff	Check_Power@DAC_out+2,___ftmul@f1+2
  2629  000362  EC31  F002         	call	___ftmul	;wreg free
  2630  000366  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2631  00036A  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2632  00036E  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2633  000372  50C4               	movf	4036,w,c	;volatile
  2634  000374  EC93  F004         	call	___lbtoft
  2635  000378  C009  F01F         	movff	?___lbtoft,___ftdiv@f2
  2636  00037C  C00A  F020         	movff	?___lbtoft+1,___ftdiv@f2+1
  2637  000380  C00B  F021         	movff	?___lbtoft+2,___ftdiv@f2+2
  2638  000384  ECAB  F002         	call	___ftdiv	;wreg free
  2639  000388  C01C  F031         	movff	?___ftdiv,Check_Power@supply
  2640  00038C  C01D  F032         	movff	?___ftdiv+1,Check_Power@supply+1
  2641  000390  C01E  F033         	movff	?___ftdiv+2,Check_Power@supply+2
  2642                           
  2643                           ;ignition.c: 145: ADCON0bits.CHS = 0b01100;
  2644  000394  94C2               	bcf	4034,2,c	;volatile
  2645  000396  96C2               	bcf	4034,3,c	;volatile
  2646  000398  88C2               	bsf	4034,4,c	;volatile
  2647  00039A  8AC2               	bsf	4034,5,c	;volatile
  2648  00039C  9CC2               	bcf	4034,6,c	;volatile
  2649                           
  2650                           ;ignition.c: 146: ADCON0bits.GO_nDONE = 1;
  2651  00039E  82C2               	bsf	4034,1,c	;volatile
  2652  0003A0                     i2l304:
  2653  0003A0  B2C2               	btfsc	4034,1,c	;volatile
  2654  0003A2  D7FE               	goto	i2l304
  2655                           
  2656                           ;ignition.c: 148: voltage = ((ADRESH * supply) / 255);
  2657  0003A4  C031  F010         	movff	Check_Power@supply,___ftmul@f2
  2658  0003A8  C032  F011         	movff	Check_Power@supply+1,___ftmul@f2+1
  2659  0003AC  C033  F012         	movff	Check_Power@supply+2,___ftmul@f2+2
  2660  0003B0  50C4               	movf	4036,w,c	;volatile
  2661  0003B2  EC93  F004         	call	___lbtoft
  2662  0003B6  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  2663  0003BA  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  2664  0003BE  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  2665  0003C2  EC31  F002         	call	___ftmul	;wreg free
  2666  0003C6  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2667  0003CA  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2668  0003CE  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2669  0003D2  0E00               	movlw	0
  2670  0003D4  6E1F               	movwf	___ftdiv@f2,c
  2671  0003D6  0E7F               	movlw	127
  2672  0003D8  6E20               	movwf	___ftdiv@f2+1,c
  2673  0003DA  0E43               	movlw	67
  2674  0003DC  6E21               	movwf	___ftdiv@f2+2,c
  2675  0003DE  ECAB  F002         	call	___ftdiv	;wreg free
  2676  0003E2  C01C  F02E         	movff	?___ftdiv,Check_Power@voltage
  2677  0003E6  C01D  F02F         	movff	?___ftdiv+1,Check_Power@voltage+1
  2678  0003EA  C01E  F030         	movff	?___ftdiv+2,Check_Power@voltage+2
  2679                           
  2680                           ;ignition.c: 149: source_power = (4.2353 * voltage);
  2681  0003EE  C02E  F00D         	movff	Check_Power@voltage,___ftmul@f1
  2682  0003F2  C02F  F00E         	movff	Check_Power@voltage+1,___ftmul@f1+1
  2683  0003F6  C030  F00F         	movff	Check_Power@voltage+2,___ftmul@f1+2
  2684  0003FA  0E88               	movlw	136
  2685  0003FC  6E10               	movwf	___ftmul@f2,c
  2686  0003FE  0E87               	movlw	135
  2687  000400  6E11               	movwf	___ftmul@f2+1,c
  2688  000402  0E40               	movlw	64
  2689  000404  6E12               	movwf	___ftmul@f2+2,c
  2690  000406  EC31  F002         	call	___ftmul	;wreg free
  2691  00040A  C00D  F034         	movff	?___ftmul,Check_Power@source_power
  2692  00040E  C00E  F035         	movff	?___ftmul+1,Check_Power@source_power+1
  2693  000412  C00F  F036         	movff	?___ftmul+2,Check_Power@source_power+2
  2694                           
  2695                           ;ignition.c: 151: if (source_power < 16.8) {
  2696  000416  C034  F001         	movff	Check_Power@source_power,___ftge@ff1
  2697  00041A  C035  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  2698  00041E  C036  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  2699  000422  0E66               	movlw	102
  2700  000424  6E04               	movwf	___ftge@ff2,c
  2701  000426  0E86               	movlw	134
  2702  000428  6E05               	movwf	___ftge@ff2+1,c
  2703  00042A  0E41               	movlw	65
  2704  00042C  6E06               	movwf	___ftge@ff2+2,c
  2705  00042E  EC75  F003         	call	___ftge	;wreg free
  2706  000432  B0D8               	btfsc	status,0,c
  2707  000434  D003               	goto	i2l1609
  2708                           
  2709                           ;ignition.c: 152: p_status = '0';
  2710  000436  0E30               	movlw	48
  2711  000438  6E4B               	movwf	_p_status,c
  2712                           
  2713                           ;ignition.c: 153: } else if (source_power >= 16.8) {
  2714  00043A  0012               	return	
  2715  00043C                     i2l1609:
  2716  00043C  C034  F001         	movff	Check_Power@source_power,___ftge@ff1
  2717  000440  C035  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  2718  000444  C036  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  2719  000448  0E66               	movlw	102
  2720  00044A  6E04               	movwf	___ftge@ff2,c
  2721  00044C  0E86               	movlw	134
  2722  00044E  6E05               	movwf	___ftge@ff2+1,c
  2723  000450  0E41               	movlw	65
  2724  000452  6E06               	movwf	___ftge@ff2+2,c
  2725  000454  EC75  F003         	call	___ftge	;wreg free
  2726  000458  A0D8               	btfss	status,0,c
  2727  00045A  0012               	return	
  2728                           
  2729                           ;ignition.c: 154: p_status = '1';
  2730  00045C  0E31               	movlw	49
  2731  00045E  6E4B               	movwf	_p_status,c
  2732  000460  0012               	return	
  2733  000462                     __end_of_Check_Power:
  2734                           	opt stack 0
  2735                           pclatu	equ	0xFFB
  2736                           pclath	equ	0xFFA
  2737                           tblptru	equ	0xFF8
  2738                           tblptrh	equ	0xFF7
  2739                           tblptrl	equ	0xFF6
  2740                           tablat	equ	0xFF5
  2741                           prodh	equ	0xFF4
  2742                           prodl	equ	0xFF3
  2743                           intcon	equ	0xFF2
  2744                           postinc0	equ	0xFEE
  2745                           fsr0h	equ	0xFEA
  2746                           fsr0l	equ	0xFE9
  2747                           wreg	equ	0xFE8
  2748                           fsr1h	equ	0xFE2
  2749                           fsr1l	equ	0xFE1
  2750                           indf2	equ	0xFDF
  2751                           postinc2	equ	0xFDE
  2752                           fsr2h	equ	0xFDA
  2753                           fsr2l	equ	0xFD9
  2754                           status	equ	0xFD8
  2755                           
  2756 ;; *************** function ___lbtoft *****************
  2757 ;; Defined at:
  2758 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbtoft.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  c               1    wreg     unsigned char 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  c               1   11[COMRAM] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  3    8[COMRAM] float 
  2765 ;; Registers used:
  2766 ;;		wreg, status,2, status,0, cstack
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2772 ;;      Params:         3       0       0       0
  2773 ;;      Locals:         1       0       0       0
  2774 ;;      Temps:          0       0       0       0
  2775 ;;      Totals:         4       0       0       0
  2776 ;;Total ram usage:        4 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    1
  2779 ;; This function calls:
  2780 ;;		___ftpack
  2781 ;; This function is called by:
  2782 ;;		_Check_Power
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text20
  2787  000926                     __ptext20:
  2788                           	opt stack 0
  2789  000926                     ___lbtoft:
  2790                           	opt stack 24
  2791                           
  2792                           ;incstack = 0
  2793                           ;___lbtoft@c stored from wreg
  2794  000926  6E0C               	movwf	___lbtoft@c,c
  2795  000928  500C               	movf	___lbtoft@c,w,c
  2796  00092A  6E01               	movwf	___ftpack@arg,c
  2797  00092C  6A02               	clrf	___ftpack@arg+1,c
  2798  00092E  6A03               	clrf	___ftpack@arg+2,c
  2799  000930  0E8E               	movlw	142
  2800  000932  6E04               	movwf	___ftpack@exp,c
  2801  000934  0E00               	movlw	0
  2802  000936  6E05               	movwf	___ftpack@sign,c
  2803  000938  EC1E  F003         	call	___ftpack	;wreg free
  2804  00093C  C001  F009         	movff	?___ftpack,?___lbtoft
  2805  000940  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  2806  000944  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  2807  000948  0012               	return	
  2808  00094A                     __end_of___lbtoft:
  2809                           	opt stack 0
  2810                           pclatu	equ	0xFFB
  2811                           pclath	equ	0xFFA
  2812                           tblptru	equ	0xFF8
  2813                           tblptrh	equ	0xFF7
  2814                           tblptrl	equ	0xFF6
  2815                           tablat	equ	0xFF5
  2816                           prodh	equ	0xFF4
  2817                           prodl	equ	0xFF3
  2818                           intcon	equ	0xFF2
  2819                           postinc0	equ	0xFEE
  2820                           fsr0h	equ	0xFEA
  2821                           fsr0l	equ	0xFE9
  2822                           wreg	equ	0xFE8
  2823                           fsr1h	equ	0xFE2
  2824                           fsr1l	equ	0xFE1
  2825                           indf2	equ	0xFDF
  2826                           postinc2	equ	0xFDE
  2827                           fsr2h	equ	0xFDA
  2828                           fsr2l	equ	0xFD9
  2829                           status	equ	0xFD8
  2830                           
  2831 ;; *************** function ___ftmul *****************
  2832 ;; Defined at:
  2833 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  f1              3   12[COMRAM] float 
  2836 ;;  f2              3   15[COMRAM] float 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  2839 ;;  sign            1   26[COMRAM] unsigned char 
  2840 ;;  cntr            1   25[COMRAM] unsigned char 
  2841 ;;  exp             1   21[COMRAM] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  3   12[COMRAM] float 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2851 ;;      Params:         6       0       0       0
  2852 ;;      Locals:         6       0       0       0
  2853 ;;      Temps:          3       0       0       0
  2854 ;;      Totals:        15       0       0       0
  2855 ;;Total ram usage:       15 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    1
  2858 ;; This function calls:
  2859 ;;		___ftpack
  2860 ;; This function is called by:
  2861 ;;		_Check_Power
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text21
  2866  000462                     __ptext21:
  2867                           	opt stack 0
  2868  000462                     ___ftmul:
  2869                           	opt stack 24
  2870                           
  2871                           ;incstack = 0
  2872  000462  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  2873  000466  6A14               	clrf	(??___ftmul+1)& (0+255),c
  2874  000468  6A15               	clrf	(??___ftmul+2)& (0+255),c
  2875  00046A  340E               	rlcf	___ftmul@f1+1,w,c
  2876  00046C  3613               	rlcf	??___ftmul& (0+255),f,c
  2877  00046E  E301               	bnc	u88_41
  2878  000470  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  2879  000472                     u88_41:
  2880  000472  5013               	movf	??___ftmul,w,c
  2881  000474  6E16               	movwf	___ftmul@exp,c
  2882  000476  5016               	movf	___ftmul@exp,w,c
  2883  000478  A4D8               	btfss	status,2,c
  2884  00047A  D007               	goto	i2l1429
  2885  00047C  0E00               	movlw	0
  2886  00047E  6E0D               	movwf	?___ftmul,c
  2887  000480  0E00               	movlw	0
  2888  000482  6E0E               	movwf	?___ftmul+1,c
  2889  000484  0E00               	movlw	0
  2890  000486  6E0F               	movwf	?___ftmul+2,c
  2891  000488  0012               	return	
  2892  00048A                     i2l1429:
  2893  00048A  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  2894  00048E  6A14               	clrf	(??___ftmul+1)& (0+255),c
  2895  000490  6A15               	clrf	(??___ftmul+2)& (0+255),c
  2896  000492  3411               	rlcf	___ftmul@f2+1,w,c
  2897  000494  3613               	rlcf	??___ftmul& (0+255),f,c
  2898  000496  E301               	bnc	u90_41
  2899  000498  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  2900  00049A                     u90_41:
  2901  00049A  5013               	movf	??___ftmul,w,c
  2902  00049C  6E1B               	movwf	___ftmul@sign,c
  2903  00049E  501B               	movf	___ftmul@sign,w,c
  2904  0004A0  A4D8               	btfss	status,2,c
  2905  0004A2  D007               	goto	i2l1435
  2906  0004A4  0E00               	movlw	0
  2907  0004A6  6E0D               	movwf	?___ftmul,c
  2908  0004A8  0E00               	movlw	0
  2909  0004AA  6E0E               	movwf	?___ftmul+1,c
  2910  0004AC  0E00               	movlw	0
  2911  0004AE  6E0F               	movwf	?___ftmul+2,c
  2912  0004B0  0012               	return	
  2913  0004B2                     i2l1435:
  2914  0004B2  501B               	movf	___ftmul@sign,w,c
  2915  0004B4  0F7B               	addlw	123
  2916  0004B6  2616               	addwf	___ftmul@exp,f,c
  2917  0004B8  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  2918  0004BC  5012               	movf	___ftmul@f2+2,w,c
  2919  0004BE  1A1B               	xorwf	___ftmul@sign,f,c
  2920  0004C0  0E80               	movlw	128
  2921  0004C2  161B               	andwf	___ftmul@sign,f,c
  2922  0004C4  8E0E               	bsf	___ftmul@f1+1,7,c
  2923  0004C6  8E11               	bsf	___ftmul@f2+1,7,c
  2924  0004C8  0EFF               	movlw	255
  2925  0004CA  1610               	andwf	___ftmul@f2,f,c
  2926  0004CC  0EFF               	movlw	255
  2927  0004CE  1611               	andwf	___ftmul@f2+1,f,c
  2928  0004D0  0E00               	movlw	0
  2929  0004D2  1612               	andwf	___ftmul@f2+2,f,c
  2930  0004D4  0E00               	movlw	0
  2931  0004D6  6E17               	movwf	___ftmul@f3_as_product,c
  2932  0004D8  0E00               	movlw	0
  2933  0004DA  6E18               	movwf	___ftmul@f3_as_product+1,c
  2934  0004DC  0E00               	movlw	0
  2935  0004DE  6E19               	movwf	___ftmul@f3_as_product+2,c
  2936  0004E0  0E07               	movlw	7
  2937  0004E2  6E1A               	movwf	___ftmul@cntr,c
  2938  0004E4                     i2l1449:
  2939  0004E4  A00D               	btfss	___ftmul@f1,0,c
  2940  0004E6  D006               	goto	i2l1453
  2941  0004E8  5010               	movf	___ftmul@f2,w,c
  2942  0004EA  2617               	addwf	___ftmul@f3_as_product,f,c
  2943  0004EC  5011               	movf	___ftmul@f2+1,w,c
  2944  0004EE  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  2945  0004F0  5012               	movf	___ftmul@f2+2,w,c
  2946  0004F2  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  2947  0004F4                     i2l1453:
  2948  0004F4  90D8               	bcf	status,0,c
  2949  0004F6  320F               	rrcf	___ftmul@f1+2,f,c
  2950  0004F8  320E               	rrcf	___ftmul@f1+1,f,c
  2951  0004FA  320D               	rrcf	___ftmul@f1,f,c
  2952  0004FC  90D8               	bcf	status,0,c
  2953  0004FE  3610               	rlcf	___ftmul@f2,f,c
  2954  000500  3611               	rlcf	___ftmul@f2+1,f,c
  2955  000502  3612               	rlcf	___ftmul@f2+2,f,c
  2956  000504  2E1A               	decfsz	___ftmul@cntr,f,c
  2957  000506  D7EE               	goto	i2l1449
  2958  000508  0E09               	movlw	9
  2959  00050A  6E1A               	movwf	___ftmul@cntr,c
  2960  00050C                     i2l1459:
  2961  00050C  A00D               	btfss	___ftmul@f1,0,c
  2962  00050E  D006               	goto	i2l1463
  2963  000510  5010               	movf	___ftmul@f2,w,c
  2964  000512  2617               	addwf	___ftmul@f3_as_product,f,c
  2965  000514  5011               	movf	___ftmul@f2+1,w,c
  2966  000516  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  2967  000518  5012               	movf	___ftmul@f2+2,w,c
  2968  00051A  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  2969  00051C                     i2l1463:
  2970  00051C  90D8               	bcf	status,0,c
  2971  00051E  320F               	rrcf	___ftmul@f1+2,f,c
  2972  000520  320E               	rrcf	___ftmul@f1+1,f,c
  2973  000522  320D               	rrcf	___ftmul@f1,f,c
  2974  000524  90D8               	bcf	status,0,c
  2975  000526  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  2976  000528  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  2977  00052A  3217               	rrcf	___ftmul@f3_as_product,f,c
  2978  00052C  2E1A               	decfsz	___ftmul@cntr,f,c
  2979  00052E  D7EE               	goto	i2l1459
  2980  000530  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2981  000534  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2982  000538  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2983  00053C  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  2984  000540  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  2985  000544  EC1E  F003         	call	___ftpack	;wreg free
  2986  000548  C001  F00D         	movff	?___ftpack,?___ftmul
  2987  00054C  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  2988  000550  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  2989  000554  0012               	return	
  2990  000556                     __end_of___ftmul:
  2991                           	opt stack 0
  2992                           pclatu	equ	0xFFB
  2993                           pclath	equ	0xFFA
  2994                           tblptru	equ	0xFF8
  2995                           tblptrh	equ	0xFF7
  2996                           tblptrl	equ	0xFF6
  2997                           tablat	equ	0xFF5
  2998                           prodh	equ	0xFF4
  2999                           prodl	equ	0xFF3
  3000                           intcon	equ	0xFF2
  3001                           postinc0	equ	0xFEE
  3002                           fsr0h	equ	0xFEA
  3003                           fsr0l	equ	0xFE9
  3004                           wreg	equ	0xFE8
  3005                           fsr1h	equ	0xFE2
  3006                           fsr1l	equ	0xFE1
  3007                           indf2	equ	0xFDF
  3008                           postinc2	equ	0xFDE
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           status	equ	0xFD8
  3012                           
  3013 ;; *************** function ___ftge *****************
  3014 ;; Defined at:
  3015 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  ff1             3    0[COMRAM] float 
  3018 ;;  ff2             3    3[COMRAM] float 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;		None               void
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3030 ;;      Params:         6       0       0       0
  3031 ;;      Locals:         0       0       0       0
  3032 ;;      Temps:          3       0       0       0
  3033 ;;      Totals:         9       0       0       0
  3034 ;;Total ram usage:        9 bytes
  3035 ;; Hardware stack levels used:    1
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_Check_Power
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text22
  3044  0006EA                     __ptext22:
  3045                           	opt stack 0
  3046  0006EA                     ___ftge:
  3047                           	opt stack 25
  3048                           
  3049                           ;incstack = 0
  3050  0006EA  AE03               	btfss	___ftge@ff1+2,7,c
  3051  0006EC  D016               	goto	i2l1475
  3052  0006EE  C001  F007         	movff	___ftge@ff1,??___ftge
  3053  0006F2  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3054  0006F6  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3055  0006FA  1E07               	comf	??___ftge,f,c
  3056  0006FC  1E08               	comf	??___ftge+1,f,c
  3057  0006FE  1E09               	comf	??___ftge+2,f,c
  3058  000700  2A07               	incf	??___ftge,f,c
  3059  000702  0E00               	movlw	0
  3060  000704  2208               	addwfc	??___ftge+1,f,c
  3061  000706  2209               	addwfc	??___ftge+2,f,c
  3062  000708  0E00               	movlw	0
  3063  00070A  2407               	addwf	??___ftge,w,c
  3064  00070C  6E01               	movwf	___ftge@ff1,c
  3065  00070E  0E00               	movlw	0
  3066  000710  2008               	addwfc	??___ftge+1,w,c
  3067  000712  6E02               	movwf	___ftge@ff1+1,c
  3068  000714  0E80               	movlw	128
  3069  000716  2009               	addwfc	??___ftge+2,w,c
  3070  000718  6E03               	movwf	___ftge@ff1+2,c
  3071  00071A                     i2l1475:
  3072  00071A  AE06               	btfss	___ftge@ff2+2,7,c
  3073  00071C  D016               	goto	i2l1479
  3074  00071E  C004  F007         	movff	___ftge@ff2,??___ftge
  3075  000722  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3076  000726  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3077  00072A  1E07               	comf	??___ftge,f,c
  3078  00072C  1E08               	comf	??___ftge+1,f,c
  3079  00072E  1E09               	comf	??___ftge+2,f,c
  3080  000730  2A07               	incf	??___ftge,f,c
  3081  000732  0E00               	movlw	0
  3082  000734  2208               	addwfc	??___ftge+1,f,c
  3083  000736  2209               	addwfc	??___ftge+2,f,c
  3084  000738  0E00               	movlw	0
  3085  00073A  2407               	addwf	??___ftge,w,c
  3086  00073C  6E04               	movwf	___ftge@ff2,c
  3087  00073E  0E00               	movlw	0
  3088  000740  2008               	addwfc	??___ftge+1,w,c
  3089  000742  6E05               	movwf	___ftge@ff2+1,c
  3090  000744  0E80               	movlw	128
  3091  000746  2009               	addwfc	??___ftge+2,w,c
  3092  000748  6E06               	movwf	___ftge@ff2+2,c
  3093  00074A                     i2l1479:
  3094  00074A  0E00               	movlw	0
  3095  00074C  1A01               	xorwf	___ftge@ff1,f,c
  3096  00074E  0E00               	movlw	0
  3097  000750  1A02               	xorwf	___ftge@ff1+1,f,c
  3098  000752  0E80               	movlw	128
  3099  000754  1A03               	xorwf	___ftge@ff1+2,f,c
  3100  000756  0E00               	movlw	0
  3101  000758  1A04               	xorwf	___ftge@ff2,f,c
  3102  00075A  0E00               	movlw	0
  3103  00075C  1A05               	xorwf	___ftge@ff2+1,f,c
  3104  00075E  0E80               	movlw	128
  3105  000760  1A06               	xorwf	___ftge@ff2+2,f,c
  3106  000762  5004               	movf	___ftge@ff2,w,c
  3107  000764  5C01               	subwf	___ftge@ff1,w,c
  3108  000766  5005               	movf	___ftge@ff2+1,w,c
  3109  000768  5802               	subwfb	___ftge@ff1+1,w,c
  3110  00076A  5006               	movf	___ftge@ff2+2,w,c
  3111  00076C  5803               	subwfb	___ftge@ff1+2,w,c
  3112  00076E  B0D8               	btfsc	status,0,c
  3113  000770  D002               	goto	i2l1485
  3114  000772  90D8               	bcf	status,0,c
  3115  000774  0012               	return	
  3116  000776                     i2l1485:
  3117  000776  80D8               	bsf	status,0,c
  3118  000778  0012               	return	
  3119  00077A                     __end_of___ftge:
  3120                           	opt stack 0
  3121                           pclatu	equ	0xFFB
  3122                           pclath	equ	0xFFA
  3123                           tblptru	equ	0xFF8
  3124                           tblptrh	equ	0xFF7
  3125                           tblptrl	equ	0xFF6
  3126                           tablat	equ	0xFF5
  3127                           prodh	equ	0xFF4
  3128                           prodl	equ	0xFF3
  3129                           intcon	equ	0xFF2
  3130                           postinc0	equ	0xFEE
  3131                           fsr0h	equ	0xFEA
  3132                           fsr0l	equ	0xFE9
  3133                           wreg	equ	0xFE8
  3134                           fsr1h	equ	0xFE2
  3135                           fsr1l	equ	0xFE1
  3136                           indf2	equ	0xFDF
  3137                           postinc2	equ	0xFDE
  3138                           fsr2h	equ	0xFDA
  3139                           fsr2l	equ	0xFD9
  3140                           status	equ	0xFD8
  3141                           
  3142 ;; *************** function ___ftdiv *****************
  3143 ;; Defined at:
  3144 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;  f1              3   27[COMRAM] float 
  3147 ;;  f2              3   30[COMRAM] float 
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;  f3              3   37[COMRAM] float 
  3150 ;;  sign            1   41[COMRAM] unsigned char 
  3151 ;;  exp             1   40[COMRAM] unsigned char 
  3152 ;;  cntr            1   36[COMRAM] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  3   27[COMRAM] float 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, status,0, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3162 ;;      Params:         6       0       0       0
  3163 ;;      Locals:         6       0       0       0
  3164 ;;      Temps:          3       0       0       0
  3165 ;;      Totals:        15       0       0       0
  3166 ;;Total ram usage:       15 bytes
  3167 ;; Hardware stack levels used:    1
  3168 ;; Hardware stack levels required when called:    1
  3169 ;; This function calls:
  3170 ;;		___ftpack
  3171 ;; This function is called by:
  3172 ;;		_Check_Power
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text23
  3177  000556                     __ptext23:
  3178                           	opt stack 0
  3179  000556                     ___ftdiv:
  3180                           	opt stack 24
  3181                           
  3182                           ;incstack = 0
  3183  000556  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  3184  00055A  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3185  00055C  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3186  00055E  341D               	rlcf	___ftdiv@f1+1,w,c
  3187  000560  3622               	rlcf	??___ftdiv& (0+255),f,c
  3188  000562  E301               	bnc	u83_41
  3189  000564  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3190  000566                     u83_41:
  3191  000566  5022               	movf	??___ftdiv,w,c
  3192  000568  6E29               	movwf	___ftdiv@exp,c
  3193  00056A  5029               	movf	___ftdiv@exp,w,c
  3194  00056C  A4D8               	btfss	status,2,c
  3195  00056E  D007               	goto	i2l1383
  3196  000570  0E00               	movlw	0
  3197  000572  6E1C               	movwf	?___ftdiv,c
  3198  000574  0E00               	movlw	0
  3199  000576  6E1D               	movwf	?___ftdiv+1,c
  3200  000578  0E00               	movlw	0
  3201  00057A  6E1E               	movwf	?___ftdiv+2,c
  3202  00057C  0012               	return	
  3203  00057E                     i2l1383:
  3204  00057E  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  3205  000582  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3206  000584  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3207  000586  3420               	rlcf	___ftdiv@f2+1,w,c
  3208  000588  3622               	rlcf	??___ftdiv& (0+255),f,c
  3209  00058A  E301               	bnc	u85_41
  3210  00058C  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3211  00058E                     u85_41:
  3212  00058E  5022               	movf	??___ftdiv,w,c
  3213  000590  6E2A               	movwf	___ftdiv@sign,c
  3214  000592  502A               	movf	___ftdiv@sign,w,c
  3215  000594  A4D8               	btfss	status,2,c
  3216  000596  D007               	goto	i2l1389
  3217  000598  0E00               	movlw	0
  3218  00059A  6E1C               	movwf	?___ftdiv,c
  3219  00059C  0E00               	movlw	0
  3220  00059E  6E1D               	movwf	?___ftdiv+1,c
  3221  0005A0  0E00               	movlw	0
  3222  0005A2  6E1E               	movwf	?___ftdiv+2,c
  3223  0005A4  0012               	return	
  3224  0005A6                     i2l1389:
  3225  0005A6  0E00               	movlw	0
  3226  0005A8  6E26               	movwf	___ftdiv@f3,c
  3227  0005AA  0E00               	movlw	0
  3228  0005AC  6E27               	movwf	___ftdiv@f3+1,c
  3229  0005AE  0E00               	movlw	0
  3230  0005B0  6E28               	movwf	___ftdiv@f3+2,c
  3231  0005B2  502A               	movf	___ftdiv@sign,w,c
  3232  0005B4  0F89               	addlw	137
  3233  0005B6  5E29               	subwf	___ftdiv@exp,f,c
  3234  0005B8  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3235  0005BC  5021               	movf	___ftdiv@f2+2,w,c
  3236  0005BE  1A2A               	xorwf	___ftdiv@sign,f,c
  3237  0005C0  0E80               	movlw	128
  3238  0005C2  162A               	andwf	___ftdiv@sign,f,c
  3239  0005C4  8E1D               	bsf	___ftdiv@f1+1,7,c
  3240  0005C6  0EFF               	movlw	255
  3241  0005C8  161C               	andwf	___ftdiv@f1,f,c
  3242  0005CA  0EFF               	movlw	255
  3243  0005CC  161D               	andwf	___ftdiv@f1+1,f,c
  3244  0005CE  0E00               	movlw	0
  3245  0005D0  161E               	andwf	___ftdiv@f1+2,f,c
  3246  0005D2  8E20               	bsf	___ftdiv@f2+1,7,c
  3247  0005D4  0EFF               	movlw	255
  3248  0005D6  161F               	andwf	___ftdiv@f2,f,c
  3249  0005D8  0EFF               	movlw	255
  3250  0005DA  1620               	andwf	___ftdiv@f2+1,f,c
  3251  0005DC  0E00               	movlw	0
  3252  0005DE  1621               	andwf	___ftdiv@f2+2,f,c
  3253  0005E0  0E18               	movlw	24
  3254  0005E2  6E25               	movwf	___ftdiv@cntr,c
  3255  0005E4                     i2l1409:
  3256  0005E4  90D8               	bcf	status,0,c
  3257  0005E6  3626               	rlcf	___ftdiv@f3,f,c
  3258  0005E8  3627               	rlcf	___ftdiv@f3+1,f,c
  3259  0005EA  3628               	rlcf	___ftdiv@f3+2,f,c
  3260  0005EC  501F               	movf	___ftdiv@f2,w,c
  3261  0005EE  5C1C               	subwf	___ftdiv@f1,w,c
  3262  0005F0  5020               	movf	___ftdiv@f2+1,w,c
  3263  0005F2  581D               	subwfb	___ftdiv@f1+1,w,c
  3264  0005F4  5021               	movf	___ftdiv@f2+2,w,c
  3265  0005F6  581E               	subwfb	___ftdiv@f1+2,w,c
  3266  0005F8  A0D8               	btfss	status,0,c
  3267  0005FA  D007               	goto	i2l634
  3268  0005FC  501F               	movf	___ftdiv@f2,w,c
  3269  0005FE  5E1C               	subwf	___ftdiv@f1,f,c
  3270  000600  5020               	movf	___ftdiv@f2+1,w,c
  3271  000602  5A1D               	subwfb	___ftdiv@f1+1,f,c
  3272  000604  5021               	movf	___ftdiv@f2+2,w,c
  3273  000606  5A1E               	subwfb	___ftdiv@f1+2,f,c
  3274  000608  8026               	bsf	___ftdiv@f3,0,c
  3275  00060A                     i2l634:
  3276  00060A  90D8               	bcf	status,0,c
  3277  00060C  361C               	rlcf	___ftdiv@f1,f,c
  3278  00060E  361D               	rlcf	___ftdiv@f1+1,f,c
  3279  000610  361E               	rlcf	___ftdiv@f1+2,f,c
  3280  000612  2E25               	decfsz	___ftdiv@cntr,f,c
  3281  000614  D7E7               	goto	i2l1409
  3282  000616  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  3283  00061A  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3284  00061E  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3285  000622  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  3286  000626  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  3287  00062A  EC1E  F003         	call	___ftpack	;wreg free
  3288  00062E  C001  F01C         	movff	?___ftpack,?___ftdiv
  3289  000632  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  3290  000636  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  3291  00063A  0012               	return	
  3292  00063C                     __end_of___ftdiv:
  3293                           	opt stack 0
  3294                           pclatu	equ	0xFFB
  3295                           pclath	equ	0xFFA
  3296                           tblptru	equ	0xFF8
  3297                           tblptrh	equ	0xFF7
  3298                           tblptrl	equ	0xFF6
  3299                           tablat	equ	0xFF5
  3300                           prodh	equ	0xFF4
  3301                           prodl	equ	0xFF3
  3302                           intcon	equ	0xFF2
  3303                           postinc0	equ	0xFEE
  3304                           fsr0h	equ	0xFEA
  3305                           fsr0l	equ	0xFE9
  3306                           wreg	equ	0xFE8
  3307                           fsr1h	equ	0xFE2
  3308                           fsr1l	equ	0xFE1
  3309                           indf2	equ	0xFDF
  3310                           postinc2	equ	0xFDE
  3311                           fsr2h	equ	0xFDA
  3312                           fsr2l	equ	0xFD9
  3313                           status	equ	0xFD8
  3314                           
  3315 ;; *************** function ___ftpack *****************
  3316 ;; Defined at:
  3317 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  arg             3    0[COMRAM] unsigned um
  3320 ;;  exp             1    3[COMRAM] unsigned char 
  3321 ;;  sign            1    4[COMRAM] unsigned char 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;                  3    0[COMRAM] float 
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3333 ;;      Params:         5       0       0       0
  3334 ;;      Locals:         0       0       0       0
  3335 ;;      Temps:          3       0       0       0
  3336 ;;      Totals:         8       0       0       0
  3337 ;;Total ram usage:        8 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; This function calls:
  3340 ;;		Nothing
  3341 ;; This function is called by:
  3342 ;;		___ftdiv
  3343 ;;		___ftmul
  3344 ;;		___lbtoft
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text24
  3349  00063C                     __ptext24:
  3350                           	opt stack 0
  3351  00063C                     ___ftpack:
  3352                           	opt stack 24
  3353                           
  3354                           ;incstack = 0
  3355  00063C  5004               	movf	___ftpack@exp,w,c
  3356  00063E  B4D8               	btfsc	status,2,c
  3357  000640  D005               	goto	i2l1339
  3358  000642  5001               	movf	___ftpack@arg,w,c
  3359  000644  1002               	iorwf	___ftpack@arg+1,w,c
  3360  000646  1003               	iorwf	___ftpack@arg+2,w,c
  3361  000648  A4D8               	btfss	status,2,c
  3362  00064A  D00C               	goto	i2l1345
  3363  00064C                     i2l1339:
  3364  00064C  0E00               	movlw	0
  3365  00064E  6E01               	movwf	?___ftpack,c
  3366  000650  0E00               	movlw	0
  3367  000652  6E02               	movwf	?___ftpack+1,c
  3368  000654  0E00               	movlw	0
  3369  000656  6E03               	movwf	?___ftpack+2,c
  3370  000658  0012               	return	
  3371  00065A                     i2l1343:
  3372  00065A  2A04               	incf	___ftpack@exp,f,c
  3373  00065C  90D8               	bcf	status,0,c
  3374  00065E  3203               	rrcf	___ftpack@arg+2,f,c
  3375  000660  3202               	rrcf	___ftpack@arg+1,f,c
  3376  000662  3201               	rrcf	___ftpack@arg,f,c
  3377  000664                     i2l1345:
  3378  000664  0E00               	movlw	0
  3379  000666  1401               	andwf	___ftpack@arg,w,c
  3380  000668  6E06               	movwf	??___ftpack& (0+255),c
  3381  00066A  0E00               	movlw	0
  3382  00066C  1402               	andwf	___ftpack@arg+1,w,c
  3383  00066E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3384  000670  0EFE               	movlw	254
  3385  000672  1403               	andwf	___ftpack@arg+2,w,c
  3386  000674  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3387  000676  5006               	movf	??___ftpack,w,c
  3388  000678  1007               	iorwf	??___ftpack+1,w,c
  3389  00067A  1008               	iorwf	??___ftpack+2,w,c
  3390  00067C  B4D8               	btfsc	status,2,c
  3391  00067E  D00C               	goto	i2l1351
  3392  000680  D7EC               	goto	i2l1343
  3393  000682                     i2l1347:
  3394  000682  2A04               	incf	___ftpack@exp,f,c
  3395  000684  0E01               	movlw	1
  3396  000686  2601               	addwf	___ftpack@arg,f,c
  3397  000688  0E00               	movlw	0
  3398  00068A  2202               	addwfc	___ftpack@arg+1,f,c
  3399  00068C  0E00               	movlw	0
  3400  00068E  2203               	addwfc	___ftpack@arg+2,f,c
  3401  000690  90D8               	bcf	status,0,c
  3402  000692  3203               	rrcf	___ftpack@arg+2,f,c
  3403  000694  3202               	rrcf	___ftpack@arg+1,f,c
  3404  000696  3201               	rrcf	___ftpack@arg,f,c
  3405  000698                     i2l1351:
  3406  000698  0E00               	movlw	0
  3407  00069A  1401               	andwf	___ftpack@arg,w,c
  3408  00069C  6E06               	movwf	??___ftpack& (0+255),c
  3409  00069E  0E00               	movlw	0
  3410  0006A0  1402               	andwf	___ftpack@arg+1,w,c
  3411  0006A2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3412  0006A4  0EFF               	movlw	255
  3413  0006A6  1403               	andwf	___ftpack@arg+2,w,c
  3414  0006A8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3415  0006AA  5006               	movf	??___ftpack,w,c
  3416  0006AC  1007               	iorwf	??___ftpack+1,w,c
  3417  0006AE  1008               	iorwf	??___ftpack+2,w,c
  3418  0006B0  B4D8               	btfsc	status,2,c
  3419  0006B2  D006               	goto	i2l1355
  3420  0006B4  D7E6               	goto	i2l1347
  3421  0006B6                     i2l1353:
  3422  0006B6  0604               	decf	___ftpack@exp,f,c
  3423  0006B8  90D8               	bcf	status,0,c
  3424  0006BA  3601               	rlcf	___ftpack@arg,f,c
  3425  0006BC  3602               	rlcf	___ftpack@arg+1,f,c
  3426  0006BE  3603               	rlcf	___ftpack@arg+2,f,c
  3427  0006C0                     i2l1355:
  3428  0006C0  BE02               	btfsc	___ftpack@arg+1,7,c
  3429  0006C2  D003               	goto	i2l576
  3430  0006C4  0E02               	movlw	2
  3431  0006C6  6004               	cpfslt	___ftpack@exp,c
  3432  0006C8  D7F6               	goto	i2l1353
  3433  0006CA                     i2l576:
  3434  0006CA  A004               	btfss	___ftpack@exp,0,c
  3435  0006CC  9E02               	bcf	___ftpack@arg+1,7,c
  3436  0006CE  90D8               	bcf	status,0,c
  3437  0006D0  3204               	rrcf	___ftpack@exp,f,c
  3438  0006D2  5004               	movf	___ftpack@exp,w,c
  3439  0006D4  1203               	iorwf	___ftpack@arg+2,f,c
  3440  0006D6  5005               	movf	___ftpack@sign,w,c
  3441  0006D8  A4D8               	btfss	status,2,c
  3442  0006DA  8E03               	bsf	___ftpack@arg+2,7,c
  3443  0006DC  C001  F001         	movff	___ftpack@arg,?___ftpack
  3444  0006E0  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3445  0006E4  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3446  0006E8  0012               	return	
  3447  0006EA                     __end_of___ftpack:
  3448                           	opt stack 0
  3449  0000                     pclatu	equ	0xFFB
  3450                           pclath	equ	0xFFA
  3451                           tblptru	equ	0xFF8
  3452                           tblptrh	equ	0xFF7
  3453                           tblptrl	equ	0xFF6
  3454                           tablat	equ	0xFF5
  3455                           prodh	equ	0xFF4
  3456                           prodl	equ	0xFF3
  3457                           intcon	equ	0xFF2
  3458                           postinc0	equ	0xFEE
  3459                           fsr0h	equ	0xFEA
  3460                           fsr0l	equ	0xFE9
  3461                           wreg	equ	0xFE8
  3462                           fsr1h	equ	0xFE2
  3463                           fsr1l	equ	0xFE1
  3464                           indf2	equ	0xFDF
  3465                           postinc2	equ	0xFDE
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           pclatu	equ	0xFFB
  3470                           pclath	equ	0xFFA
  3471                           tblptru	equ	0xFF8
  3472                           tblptrh	equ	0xFF7
  3473                           tblptrl	equ	0xFF6
  3474                           tablat	equ	0xFF5
  3475                           prodh	equ	0xFF4
  3476                           prodl	equ	0xFF3
  3477                           intcon	equ	0xFF2
  3478                           postinc0	equ	0xFEE
  3479                           fsr0h	equ	0xFEA
  3480                           fsr0l	equ	0xFE9
  3481                           wreg	equ	0xFE8
  3482                           fsr1h	equ	0xFE2
  3483                           fsr1l	equ	0xFE1
  3484                           indf2	equ	0xFDF
  3485                           postinc2	equ	0xFDE
  3486                           fsr2h	equ	0xFDA
  3487                           fsr2l	equ	0xFD9
  3488                           status	equ	0xFD8
  3489                           
  3490                           	psect	rparam
  3491  0000                     pclatu	equ	0xFFB
  3492                           pclath	equ	0xFFA
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           prodh	equ	0xFF4
  3498                           prodl	equ	0xFF3
  3499                           intcon	equ	0xFF2
  3500                           postinc0	equ	0xFEE
  3501                           fsr0h	equ	0xFEA
  3502                           fsr0l	equ	0xFE9
  3503                           wreg	equ	0xFE8
  3504                           fsr1h	equ	0xFE2
  3505                           fsr1l	equ	0xFE1
  3506                           indf2	equ	0xFDF
  3507                           postinc2	equ	0xFDE
  3508                           fsr2h	equ	0xFDA
  3509                           fsr2l	equ	0xFD9
  3510                           status	equ	0xFD8
  3511                           
  3512                           	psect	temp
  3513  00004C                     btemp:
  3514                           	opt stack 0
  3515  00004C                     	ds	1
  3516  0000                     int$flags	set	btemp
  3517                           pclatu	equ	0xFFB
  3518                           pclath	equ	0xFFA
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           prodh	equ	0xFF4
  3524                           prodl	equ	0xFF3
  3525                           intcon	equ	0xFF2
  3526                           postinc0	equ	0xFEE
  3527                           fsr0h	equ	0xFEA
  3528                           fsr0l	equ	0xFE9
  3529                           wreg	equ	0xFE8
  3530                           fsr1h	equ	0xFE2
  3531                           fsr1l	equ	0xFE1
  3532                           indf2	equ	0xFDF
  3533                           postinc2	equ	0xFDE
  3534                           fsr2h	equ	0xFDA
  3535                           fsr2l	equ	0xFD9
  3536                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      75
    BANK0           160      3      13
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Evaluate_Reception->_Check_Power
    _Test_Port->_Transmit
    _Check_Power->___ftdiv
    ___lbtoft->___ftpack
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    _main->_Check_Ignition
    _Init->_InitVar
    _Check_Ignition->_Ignite_Port

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     202
                     _Check_Ignition
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0      68
                            _InitADC
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                   _InitTransmission
                           _InitTris
                            _InitVar
 ---------------------------------------------------------------------------------
 (2) _InitVar                                              1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Ignition                                       2     2      0     134
                                              1 BANK0      2     2      0
                        _Ignite_Port
 ---------------------------------------------------------------------------------
 (2) _Ignite_Port                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 14    14      0   12002
                                             54 COMRAM    14    14      0
                 _Evaluate_Reception
                            _Receive
                       _Receive_Dump
 ---------------------------------------------------------------------------------
 (4) _Receive_Dump                                         1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Evaluate_Reception                                   0     0      0   12002
                        _Check_Power
                        _Mark_Ignite
                          _Test_Port
 ---------------------------------------------------------------------------------
 (5) _Test_Port                                            0     0      0    3928
                           _Transmit
 ---------------------------------------------------------------------------------
 (6) _Transmit                                             4     1      3    3928
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _Mark_Ignite                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Check_Power                                         12    12      0    8074
                                             42 COMRAM    12    12      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (6) ___lbtoft                                             4     1      3    2053
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    2843
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     392
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             15     9      6    2669
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Ignition
     _Ignite_Port
   _Init
     _InitADC
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTransmission
     _InitTris
     _InitVar

 _Isr (ROOT)
   _Evaluate_Reception
     _Check_Power
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftge
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _Mark_Ignite
     _Test_Port
       _Transmit
   _Receive
   _Receive_Dump

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      3       D       4        8.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     44      4B       1       79.8%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      58       8        0.0%
DATA                 0      0      58      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Feb 08 22:18:38 2017

           ??_Check_Ignition 006B                           l21 0A2C                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                          l280 0784                          l281 0788  
                        l282 078C                          l283 0790                          l284 0794  
                        l285 0798                          l286 079C                          l278 0780  
                        l287 07A0                          l288 07A4                 __CFG_CPB$OFF 000000  
               __CFG_CPD$OFF 000000                          _Isr 0008                          prod 000FF3  
                        wreg 000FE8                   _TXSTA1bits 000FAC                ??_Ignite_Port 006A  
               __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0025                         ?_Isr 0001  
              ??_Mark_Ignite 0001                 ___ftdiv@sign 002A                         l1531 08E4  
                       l1621 0800                         l1527 08DA                         l1633 0850  
                       l1625 080A                         l1589 07A8                         u1337 0832  
                       i2l53 085E                         i2l62 0878                         i2l71 0890  
                       i2l56 0868                         i2l65 0880                         i2l81 0A14  
                       i2l59 0870                         i2l68 0888                         _Init 094A  
                       _main 0A28                 ___ftpack@arg 0001                 ___ftpack@exp 0004  
                       fsr0h 000FEA                         fsr1h 000FE2                         fsr0l 000FE9  
                       fsr2h 000FDA                         fsr1l 000FE1                         indf2 000FDF  
                       fsr2l 000FD9                         btemp 004C                __CFG_BORV$190 000000  
               Transmit@port 0002                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 00E4                __CFG_IESO$OFF 000000  
               ___ftmul@cntr 001A                 ___param_bank 000010                 ___ftmul@sign 001B  
            __end_of_InitADC 0926                _InitInterrupt 0A34              __end_of_InitVar 0900  
                      ??_Isr 0037              __end_of_Receive 0A28                 _BAUDCON1bits 000FB8  
                _Check_Power 030A                        ?_Init 0001                        ?_main 0001  
            __end_of___ftdiv 063C              __end_of___ftmul 0556            _InitMiscellaneous 0A3E  
                      i2l301 0346                        i2l304 03A0                        i2l233 00EA  
                      i2l250 01AA                        i2l242 014A                        i2l234 0102  
                      i2l251 01C2                        i2l243 0162                        i2l270 029A  
                      i2l262 023A                        i2l254 01DA                        i2l246 017A  
                      i2l238 011A                        i2l271 02B2                        i2l263 0252  
                      i2l255 01F2                        i2l247 0192                        i2l239 0132  
                      i2l351 00A8                        i2l344 0076                        i2l345 0072  
                      i2l266 026A                        i2l258 020A                        i2l267 0282  
                      i2l259 0222                        i2l634 060A                        i2l576 06CA  
                      _PORTA 000F80                        _PORTB 000F81                        _PORTC 000F82  
                      _PORTD 000F83                        _PORTE 000F84                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        u90_41 049A                        u83_41 0566  
                      u85_41 058E                        u88_41 0472                __CFG_WRT0$OFF 000000  
   __end_of_InitTransmission 09C8                __CFG_WRT1$OFF 000000           ?_InitMiscellaneous 0001  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000           __CFG_MCLRE$EXTMCLR 000000                ___ftpack@sign 0005  
             __pbitbssCOMRAM 0250               __CFG_BOREN$OFF 000000          ??_InitMiscellaneous 006A  
                      tablat 000FF5                        status 000FD8          __end_of_Ignite_Port 07FA  
        __end_of_Mark_Ignite 0A0A               ?_InitInterrupt 0001              __initialization 089C  
               __end_of_Init 096C                 __end_of_main 0A34             __end_of_InitPort 09F4  
           __end_of_InitTris 09DE    __end_of_InitMiscellaneous 0A44                       ??_Init 006B  
 __end_of_Evaluate_Reception 09AC                       ??_main 006D              _slave_addressed 0251  
              __activetblptr 000002                ?_Receive_Dump 0001             __end_of_Transmit 089C  
                     _ADCON0 000FC2                       _ADCON1 000FC1                       _ADCON2 000FC0  
                     _ADRESH 000FC4                       _ANSELA 000F38                       _ANSELB 000F39  
                     _ANSELC 000F3A                       _ANSELD 000F3B                       _ANSELE 000F3C  
           __end_of___ftpack 06EA             __end_of___lbtoft 094A                       i2l1351 0698  
                     i2l1343 065A                       i2l1353 06B6                       i2l1345 0664  
                     i2l1409 05E4                       i2l1355 06C0                       i2l1347 0682  
                     i2l1339 064C                       i2l1435 04B2                       i2l1283 0A24  
                     i2l1453 04F4                       i2l1429 048A                       i2l1383 057E  
                     i2l1463 051C                       i2l1449 04E4                       i2l1609 043C  
                     i2l1641 099E                       i2l1475 071A                       i2l1459 050C  
                     i2l1389 05A6                       i2l1485 0776               __CFG_WDTEN$OFF 000000  
                     i2l1479 074A                       i2l1583 02CA                       i2l1675 00A4  
                     _RCREG1 000FAE                       _OSCCON 000FD3           __size_of_InitAnsel 0020  
                     _SPBRG1 000FAF                       _TXREG1 000FAD                    ??_InitADC 006A  
    Check_Power@source_power 0034                    ??_InitVar 006A                    ??_Receive 0001  
                     _Marker 0060               __CFG_XINST$OFF 000000                       ___ftge 06EA  
                  ??___ftdiv 0022                    ??___ftmul 0013                       clear_0 08A2  
      ___ftmul@f3_as_product 0017           __size_of_Test_Port 0222                 __pdataCOMRAM 004B  
             ??_Receive_Dump 0001                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                  _Ignite_Port 077A              __CFG_HFOFST$OFF 000000  
                _Mark_Ignite 09F4                   __accesstop 0060      __end_of__initialization 08C6  
            __CFG_PBADEN$OFF 000000                   ___ftge@ff1 0001                   ___ftge@ff2 0004  
            ??_InitInterrupt 006A                ___rparam_used 000001                   ___ftdiv@f1 001C  
                 ___ftdiv@f2 001F                   ___ftdiv@f3 0026                   ___lbtoft@c 000C  
                 ___ftmul@f1 000D                   ___ftmul@f2 0010               __pcstackCOMRAM 0001  
 __size_of_InitMiscellaneous 0006            __end_of_InitAnsel 098C                   __pbssBANK0 0060  
            __CFG_PLLCFG$OFF 000000                    ?_InitPort 0001                    ?_InitTris 0001  
          __end_of_Test_Port 030A           __CFG_CCP2MX$PORTC1 000000                      ?___ftge 0001  
         __CFG_CCP3MX$PORTB5 000000                    ?_Transmit 0001                 ?_Check_Power 0001  
                  ?___ftpack 0001                    ?___lbtoft 0009            ?_InitTransmission 0001  
          __CFG_PRICLKEN$OFF 000000           ??_InitTransmission 006A                   ??_InitPort 006A  
                 ??_InitTris 006A           Check_Power@DAC_out 002B                      _InitADC 0900  
                    _InitVar 08D4              __CFG_PWRTEN$OFF 000000                      _Receive 0A1A  
                    __Hparam 0000         __end_of_Receive_Dump 0A1A                      __Lparam 0000  
            __size_of___ftge 0090                      ___ftdiv 0556                      ___ftmul 0462  
           Receive_Dump@dump 0001                   ??_Transmit 0004              __CFG_STVREN$OFF 000000  
                    __pcinit 089C                   ??___ftpack 0006                   ??___lbtoft 000C  
                    __ramtop 0300                      __ptext0 0A28                      __ptext1 094A  
                    __ptext2 08D4                      __ptext3 09C8                      __ptext4 09AC  
                    __ptext5 09DE                      __ptext6 0A3E                      __ptext7 0A34  
                    __ptext8 096C                      __ptext9 0900                 __size_of_Isr 00DC  
    __size_of_Check_Ignition 005C                      _overrun 0250         end_of_initialization 08C6  
         _Evaluate_Reception 098C                __Lmediumconst 0000          ?_Evaluate_Reception 0001  
   Ignite_Port@ignite_number 006A                      postinc0 000FEE                      postinc2 000FDE  
         Check_Power@voltage 002E           Transmit@con_status 0003                    _PORTAbits 000F80  
                  _PORTBbits 000F81                    _PORTCbits 000F82                    _PORTDbits 000F83  
                  _PORTEbits 000F84         ??_Evaluate_Reception 0037                    _TRISCbits 000F94  
               ?_Ignite_Port 0001                 ?_Mark_Ignite 0001                  ___ftdiv@exp 0029  
                ___ftmul@exp 0016               __end_of___ftge 077A                __pidataCOMRAM 0A44  
       __size_of_Check_Power 0158          start_initialization 089C                    _InitAnsel 096C  
                __end_of_Isr 00E4        __size_of_Receive_Dump 0010              Check_Ignition@c 006C  
          __size_of_InitPort 0016            __size_of_InitTris 0016        __end_of_InitInterrupt 0A3E  
                   ??___ftge 0007                    _Test_Port 00E8            __size_of_Transmit 0046  
          __size_of___ftpack 00AE            __size_of___lbtoft 0024               _Check_Ignition 07FA  
                __pbssCOMRAM 0045                   ?_InitAnsel 0001                __pcstackBANK0 006A  
               _Receive_Dump 0A0A                     ?_InitADC 0001                     ?_InitVar 0001  
                   ?_Receive 0001    __size_of_InitTransmission 001C                    __pintcode 0008  
                 ?_Test_Port 0001                     ?___ftdiv 001C                     ?___ftmul 000D  
     __end_of_Check_Ignition 0856         __size_of_Ignite_Port 0080         __size_of_Mark_Ignite 0016  
                   _PIE1bits 000F9D                     _PIR1bits 000F9E             __CFG_WDTPS$32768 000000  
          Check_Power@supply 0031                     _VREFCON0 000F42                     _VREFCON1 000F41  
                 _ADCON0bits 000FC2              ?_Check_Ignition 0001                     InitVar@c 006A  
                ??_InitAnsel 006A              _receive_counter 0049                     _InitPort 09DE  
                   _InitTris 09C8            Transmit@operation 0001             __size_of_InitADC 0026  
                   __Hrparam 0000             __size_of_InitVar 002C             __size_of_Receive 000E  
                   __Lrparam 0000            __CFG_P2BMX$PORTD2 000000                  ??_Test_Port 0005  
                   _Transmit 0856             __size_of___ftdiv 00E6             __size_of___ftmul 00F4  
                   ___ftpack 063C                     ___lbtoft 0926  __size_of_Evaluate_Reception 0020  
                   __ptext10 07FA                     __ptext11 077A                     __ptext20 0926  
                   __ptext21 0462                     __ptext13 0A0A                     __ptext22 06EA  
                   __ptext14 0A1A                     __ptext23 0556                     __ptext15 098C  
                   __ptext24 063C                     __ptext16 00E8                     __ptext17 0856  
                   __ptext18 09F4                     __ptext19 030A                __size_of_Init 0022  
              __size_of_main 000C                     _received 0045                     _p_status 004B  
           _InitTransmission 09AC                     int$flags 004C                ??_Check_Power 002B  
           Transmit@receiver 0004                   _INTCONbits 000FF2                     intlevel2 0000  
               _VREFCON2bits 000F40                   _RCSTA1bits 000FAB          __end_of_Check_Power 0462  
          __CFG_T3CMX$PORTC0 000000       __size_of_InitInterrupt 000A            __CFG_FOSC$INTIO67 000000  
