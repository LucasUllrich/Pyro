

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Feb 18 22:03:48 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  000A68                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _p_status
    49  000A68  30                 	db	48
    50  0000                     _ANSELA	set	3896
    51  0000                     _ANSELB	set	3897
    52  0000                     _ANSELC	set	3898
    53  0000                     _ANSELD	set	3899
    54  0000                     _ANSELE	set	3900
    55  0000                     _CCPTMRS0bits	set	3913
    56  0000                     _VREFCON0	set	3906
    57  0000                     _ADCON0	set	4034
    58  0000                     _ADCON0bits	set	4034
    59  0000                     _ADCON1	set	4033
    60  0000                     _ADCON2	set	4032
    61  0000                     _ADRESH	set	4036
    62  0000                     _BAUDCON1bits	set	4024
    63  0000                     _CCP1CON	set	4029
    64  0000                     _CCPR1H	set	4031
    65  0000                     _CCPR1L	set	4030
    66  0000                     _INTCONbits	set	4082
    67  0000                     _OSCCON	set	4051
    68  0000                     _PIE1bits	set	3997
    69  0000                     _PIR1bits	set	3998
    70  0000                     _PORTA	set	3968
    71  0000                     _PORTAbits	set	3968
    72  0000                     _PORTB	set	3969
    73  0000                     _PORTBbits	set	3969
    74  0000                     _PORTC	set	3970
    75  0000                     _PORTCbits	set	3970
    76  0000                     _PORTD	set	3971
    77  0000                     _PORTDbits	set	3971
    78  0000                     _PORTE	set	3972
    79  0000                     _PORTEbits	set	3972
    80  0000                     _RCREG1	set	4014
    81  0000                     _RCSTA1bits	set	4011
    82  0000                     _SPBRG1	set	4015
    83  0000                     _T1CON	set	4045
    84  0000                     _T1CONbits	set	4045
    85  0000                     _TMR1H	set	4047
    86  0000                     _TMR1L	set	4046
    87  0000                     _TRISA	set	3986
    88  0000                     _TRISB	set	3987
    89  0000                     _TRISC	set	3988
    90  0000                     _TRISCbits	set	3988
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISE	set	3990
    93  0000                     _TXREG1	set	4013
    94  0000                     _TXSTA1bits	set	4012
    95                           
    96                           ; #config settings
    97  0000                     
    98                           	psect	cinit
    99  0008C6                     __pcinit:
   100                           	opt stack 0
   101  0008C6                     start_initialization:
   102                           	opt stack 0
   103  0008C6                     __initialization:
   104                           	opt stack 0
   105                           
   106                           ; Clear objects allocated to BANK0 (10 bytes)
   107  0008C6  EE00  F060         	lfsr	0,__pbssBANK0
   108  0008CA  0E0A               	movlw	10
   109  0008CC                     clear_0:
   110  0008CC  6AEE               	clrf	postinc0,c
   111  0008CE  06E8               	decf	wreg,f,c
   112  0008D0  E1FD               	bnz	clear_0
   113                           
   114                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   115  0008D2  6A45               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   116                           
   117                           ; Clear objects allocated to COMRAM (5 bytes)
   118  0008D4  6A44               	clrf	(__pbssCOMRAM+4)& (0+255),c
   119  0008D6  6A43               	clrf	(__pbssCOMRAM+3)& (0+255),c
   120  0008D8  6A42               	clrf	(__pbssCOMRAM+2)& (0+255),c
   121  0008DA  6A41               	clrf	(__pbssCOMRAM+1)& (0+255),c
   122  0008DC  6A40               	clrf	__pbssCOMRAM& (0+255),c
   123                           
   124                           ; Initialize objects allocated to COMRAM (1 bytes)
   125                           ; load TBLPTR registers with __pidataCOMRAM
   126  0008DE  0E68               	movlw	low __pidataCOMRAM
   127  0008E0  6EF6               	movwf	tblptrl,c
   128  0008E2  0E0A               	movlw	high __pidataCOMRAM
   129  0008E4  6EF7               	movwf	tblptrh,c
   130  0008E6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   131  0008E8  6EF8               	movwf	tblptru,c
   132  0008EA  0009               	tblrd		*+	;fetch initializer
   133  0008EC  CFF5 F046          	movff	tablat,__pdataCOMRAM
   134  0008F0                     end_of_initialization:
   135                           	opt stack 0
   136  0008F0                     __end_of__initialization:
   137                           	opt stack 0
   138  0008F0  9047               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   139  0008F2  9247               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   140  0008F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   141  0008F6  6EF8               	movwf	tblptru,c
   142  0008F8  0100               	movlb	0
   143  0008FA  EF20  F005         	goto	_main	;jump to C main() function
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           postinc0	equ	0xFEE
   149                           wreg	equ	0xFE8
   150                           
   151                           	psect	bitbssCOMRAM
   152  000228                     __pbitbssCOMRAM:
   153                           	opt stack 0
   154  000228                     _overrun:
   155                           	opt stack 0
   156  000228                     	ds	1
   157  000229                     _slave_addressed:
   158                           	opt stack 0
   159  000229                     	ds	1
   160                           tblptru	equ	0xFF8
   161                           tblptrh	equ	0xFF7
   162                           tblptrl	equ	0xFF6
   163                           tablat	equ	0xFF5
   164                           postinc0	equ	0xFEE
   165                           wreg	equ	0xFE8
   166                           
   167                           	psect	bssCOMRAM
   168  000040                     __pbssCOMRAM:
   169                           	opt stack 0
   170  000040                     _received:
   171                           	opt stack 0
   172  000040                     	ds	4
   173  000044                     _receive_counter:
   174                           	opt stack 0
   175  000044                     	ds	1
   176                           tblptru	equ	0xFF8
   177                           tblptrh	equ	0xFF7
   178                           tblptrl	equ	0xFF6
   179                           tablat	equ	0xFF5
   180                           postinc0	equ	0xFEE
   181                           wreg	equ	0xFE8
   182                           
   183                           	psect	dataCOMRAM
   184  000046                     __pdataCOMRAM:
   185                           	opt stack 0
   186  000046                     _p_status:
   187                           	opt stack 0
   188  000046                     	ds	1
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           
   196                           	psect	bssBANK0
   197  000060                     __pbssBANK0:
   198                           	opt stack 0
   199  000060                     _Marker:
   200                           	opt stack 0
   201  000060                     	ds	10
   202                           tblptru	equ	0xFF8
   203                           tblptrh	equ	0xFF7
   204                           tblptrl	equ	0xFF6
   205                           tablat	equ	0xFF5
   206                           postinc0	equ	0xFEE
   207                           wreg	equ	0xFE8
   208                           
   209                           	psect	cstackBANK0
   210  00006A                     __pcstackBANK0:
   211                           	opt stack 0
   212  00006A                     InitVar@c:
   213                           	opt stack 0
   214  00006A                     Ignite_Port@ignite_number:
   215                           	opt stack 0
   216  00006A                     Disable_Port@disable_number:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x0
   220  00006A                     	ds	1
   221  00006B                     
   222                           ; 0 bytes @ 0x1
   223  00006B                     	ds	1
   224  00006C                     Check_Ignition@c:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0x2
   228  00006C                     	ds	1
   229  00006D                     tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           tblptrl	equ	0xFF6
   232                           tablat	equ	0xFF5
   233                           postinc0	equ	0xFEE
   234                           wreg	equ	0xFE8
   235                           
   236                           ; 0 bytes @ 0x3
   237                           
   238                           	psect	cstackCOMRAM
   239  000001                     __pcstackCOMRAM:
   240                           	opt stack 0
   241  000001                     ?___ftpack:
   242                           	opt stack 0
   243  000001                     Transmit@operation:
   244                           	opt stack 0
   245  000001                     Receive_Dump@dump:
   246                           	opt stack 0
   247  000001                     ___ftpack@arg:
   248                           	opt stack 0
   249  000001                     ___ftge@ff1:
   250                           	opt stack 0
   251                           
   252                           ; 3 bytes @ 0x0
   253  000001                     	ds	1
   254  000002                     Transmit@port:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x1
   258  000002                     	ds	1
   259  000003                     Transmit@con_status:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x2
   263  000003                     	ds	1
   264  000004                     Transmit@receiver:
   265                           	opt stack 0
   266  000004                     ___ftpack@exp:
   267                           	opt stack 0
   268  000004                     ___ftge@ff2:
   269                           	opt stack 0
   270                           
   271                           ; 3 bytes @ 0x3
   272  000004                     	ds	1
   273  000005                     ___ftpack@sign:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x4
   277  000005                     	ds	1
   278  000006                     ??___ftpack:
   279                           
   280                           ; 0 bytes @ 0x5
   281  000006                     	ds	1
   282  000007                     ??___ftge:
   283                           
   284                           ; 0 bytes @ 0x6
   285  000007                     	ds	2
   286  000009                     ?___lbtoft:
   287                           	opt stack 0
   288                           
   289                           ; 3 bytes @ 0x8
   290  000009                     	ds	3
   291  00000C                     ___lbtoft@c:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0xB
   295  00000C                     	ds	1
   296  00000D                     ?___ftmul:
   297                           	opt stack 0
   298  00000D                     ___ftmul@f1:
   299                           	opt stack 0
   300                           
   301                           ; 3 bytes @ 0xC
   302  00000D                     	ds	3
   303  000010                     ___ftmul@f2:
   304                           	opt stack 0
   305                           
   306                           ; 3 bytes @ 0xF
   307  000010                     	ds	3
   308  000013                     ??___ftmul:
   309                           
   310                           ; 0 bytes @ 0x12
   311  000013                     	ds	3
   312  000016                     ___ftmul@exp:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x15
   316  000016                     	ds	1
   317  000017                     ___ftmul@f3_as_product:
   318                           	opt stack 0
   319                           
   320                           ; 3 bytes @ 0x16
   321  000017                     	ds	3
   322  00001A                     ___ftmul@cntr:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x19
   326  00001A                     	ds	1
   327  00001B                     ___ftmul@sign:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x1A
   331  00001B                     	ds	1
   332  00001C                     ?___ftdiv:
   333                           	opt stack 0
   334  00001C                     ___ftdiv@f1:
   335                           	opt stack 0
   336                           
   337                           ; 3 bytes @ 0x1B
   338  00001C                     	ds	3
   339  00001F                     ___ftdiv@f2:
   340                           	opt stack 0
   341                           
   342                           ; 3 bytes @ 0x1E
   343  00001F                     	ds	3
   344  000022                     ??___ftdiv:
   345                           
   346                           ; 0 bytes @ 0x21
   347  000022                     	ds	3
   348  000025                     ___ftdiv@cntr:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x24
   352  000025                     	ds	1
   353  000026                     ___ftdiv@f3:
   354                           	opt stack 0
   355                           
   356                           ; 3 bytes @ 0x25
   357  000026                     	ds	3
   358  000029                     ___ftdiv@exp:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x28
   362  000029                     	ds	1
   363  00002A                     ___ftdiv@sign:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x29
   367  00002A                     	ds	1
   368  00002B                     Check_Power@voltage:
   369                           	opt stack 0
   370                           
   371                           ; 3 bytes @ 0x2A
   372  00002B                     	ds	3
   373  00002E                     Check_Power@source_power:
   374                           	opt stack 0
   375                           
   376                           ; 3 bytes @ 0x2D
   377  00002E                     	ds	3
   378  000031                     ??_Isr:
   379                           
   380                           ; 0 bytes @ 0x30
   381  000031                     	ds	14
   382  00003F                     Isr@c:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x3E
   386  00003F                     	ds	1
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 74 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;		None               void
   406 ;; Registers used:
   407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   413 ;;      Params:         0       0       0       0
   414 ;;      Locals:         0       0       0       0
   415 ;;      Temps:          0       0       0       0
   416 ;;      Totals:         0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels required when called:    7
   419 ;; This function calls:
   420 ;;		_Check_Ignition
   421 ;;		_Init
   422 ;; This function is called by:
   423 ;;		Startup code after reset
   424 ;; This function uses a non-reentrant model
   425 ;;
   426                           
   427                           	psect	text0
   428  000A40                     __ptext0:
   429                           	opt stack 0
   430  000A40                     _main:
   431                           	opt stack 24
   432                           
   433                           ;main.c: 75: Init();
   434                           
   435                           ;incstack = 0
   436  000A40  ECA7  F004         	call	_Init	;wreg free
   437  000A44                     l21:
   438                           
   439                           ;main.c: 77: Check_Ignition();
   440  000A44  EC41  F004         	call	_Check_Ignition	;wreg free
   441                           
   442                           ;main.c: 78: __nop();
   443  000A48  F000               	nop	
   444  000A4A  D7FC               	goto	l21
   445  000A4C                     __end_of_main:
   446                           	opt stack 0
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           
   454 ;; *************** function _Init *****************
   455 ;; Defined at:
   456 ;;		line 5 in file "init.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;		None               void
   463 ;; Registers used:
   464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   470 ;;      Params:         0       0       0       0
   471 ;;      Locals:         0       0       0       0
   472 ;;      Temps:          0       0       0       0
   473 ;;      Totals:         0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    6
   477 ;; This function calls:
   478 ;;		_InitADC
   479 ;;		_InitAnsel
   480 ;;		_InitInterrupt
   481 ;;		_InitMiscellaneous
   482 ;;		_InitPort
   483 ;;		_InitTransmission
   484 ;;		_InitTris
   485 ;;		_InitVar
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text1
   492  00094E                     __ptext1:
   493                           	opt stack 0
   494  00094E                     _Init:
   495                           	opt stack 24
   496                           
   497                           ;init.c: 6: InitPort();
   498                           
   499                           ;incstack = 0
   500  00094E  ECF1  F004         	call	_InitPort	;wreg free
   501                           
   502                           ;init.c: 7: InitTris();
   503  000952  ECE6  F004         	call	_InitTris	;wreg free
   504                           
   505                           ;init.c: 8: InitAnsel();
   506  000956  ECB8  F004         	call	_InitAnsel	;wreg free
   507                           
   508                           ;init.c: 9: InitMiscellaneous();
   509  00095A  EC31  F005         	call	_InitMiscellaneous	;wreg free
   510                           
   511                           ;init.c: 10: InitTransmission();
   512  00095E  ECD8  F004         	call	_InitTransmission	;wreg free
   513                           
   514                           ;init.c: 11: InitADC();
   515  000962  EC07  F005         	call	_InitADC	;wreg free
   516                           
   517                           ;init.c: 12: InitVar();
   518  000966  EC7F  F004         	call	_InitVar	;wreg free
   519                           
   520                           ;init.c: 13: InitInterrupt();
   521  00096A  EC2C  F005         	call	_InitInterrupt	;wreg free
   522  00096E  0012               	return		;funcret
   523  000970                     __end_of_Init:
   524                           	opt stack 0
   525                           tblptru	equ	0xFF8
   526                           tblptrh	equ	0xFF7
   527                           tblptrl	equ	0xFF6
   528                           tablat	equ	0xFF5
   529                           postinc0	equ	0xFEE
   530                           wreg	equ	0xFE8
   531                           
   532 ;; *************** function _InitVar *****************
   533 ;; Defined at:
   534 ;;		line 85 in file "init.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;  c               1    0[BANK0 ] unsigned char 
   539 ;; Return value:  Size  Location     Type
   540 ;;		None               void
   541 ;; Registers used:
   542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   548 ;;      Params:         0       0       0       0
   549 ;;      Locals:         0       1       0       0
   550 ;;      Temps:          0       0       0       0
   551 ;;      Totals:         0       1       0       0
   552 ;;Total ram usage:        1 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    5
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_Init
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text2
   563  0008FE                     __ptext2:
   564                           	opt stack 0
   565  0008FE                     _InitVar:
   566                           	opt stack 24
   567                           
   568                           ;init.c: 86: for(unsigned char c = 0; c < 10; c++) {
   569                           
   570                           ;incstack = 0
   571  0008FE  0E00               	movlw	0
   572  000900  0100               	movlb	0	; () banked
   573  000902  6F6A               	movwf	InitVar@c& (0+255),b
   574  000904                     l1617:
   575                           
   576                           ; BSR set to: 0
   577  000904  0E09               	movlw	9
   578  000906  0100               	movlb	0	; () banked
   579  000908  656A               	cpfsgt	InitVar@c& (0+255),b
   580  00090A  D001               	goto	l1621
   581  00090C  0012               	return	
   582  00090E                     l1621:
   583                           
   584                           ; BSR set to: 0
   585                           ;init.c: 87: Marker[c] = 0;
   586  00090E  0100               	movlb	0	; () banked
   587  000910  516A               	movf	InitVar@c& (0+255),w,b
   588  000912  0D01               	mullw	1
   589  000914  0E60               	movlw	low _Marker
   590  000916  24F3               	addwf	prodl,w,c
   591  000918  6ED9               	movwf	fsr2l,c
   592  00091A  0E00               	movlw	high _Marker
   593  00091C  20F4               	addwfc	prodh,w,c
   594  00091E  6EDA               	movwf	fsr2h,c
   595  000920  0E00               	movlw	0
   596  000922  6EDF               	movwf	indf2,c
   597                           
   598                           ; BSR set to: 0
   599  000924  0100               	movlb	0	; () banked
   600  000926  2B6A               	incf	InitVar@c& (0+255),f,b
   601  000928  D7ED               	goto	l1617
   602  00092A                     __end_of_InitVar:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           prodh	equ	0xFF4
   609                           prodl	equ	0xFF3
   610                           postinc0	equ	0xFEE
   611                           wreg	equ	0xFE8
   612                           indf2	equ	0xFDF
   613                           fsr2h	equ	0xFDA
   614                           fsr2l	equ	0xFD9
   615                           
   616 ;; *************** function _InitTris *****************
   617 ;; Defined at:
   618 ;;		line 24 in file "init.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;		None               void
   625 ;; Registers used:
   626 ;;		wreg, status,2
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   632 ;;      Params:         0       0       0       0
   633 ;;      Locals:         0       0       0       0
   634 ;;      Temps:          0       0       0       0
   635 ;;      Totals:         0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; Hardware stack levels required when called:    5
   639 ;; This function calls:
   640 ;;		Nothing
   641 ;; This function is called by:
   642 ;;		_Init
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           	psect	text3
   647  0009CC                     __ptext3:
   648                           	opt stack 0
   649  0009CC                     _InitTris:
   650                           	opt stack 24
   651                           
   652                           ;init.c: 25: TRISA = 0b00000101;
   653                           
   654                           ; BSR set to: 0
   655                           ;incstack = 0
   656  0009CC  0E05               	movlw	5
   657  0009CE  6E92               	movwf	3986,c	;volatile
   658                           
   659                           ;init.c: 26: TRISB = 0b00010101;
   660  0009D0  0E15               	movlw	21
   661  0009D2  6E93               	movwf	3987,c	;volatile
   662                           
   663                           ;init.c: 27: TRISC = 0b00010100;
   664  0009D4  0E14               	movlw	20
   665  0009D6  6E94               	movwf	3988,c	;volatile
   666                           
   667                           ;init.c: 28: TRISD = 0b00000101;
   668  0009D8  0E05               	movlw	5
   669  0009DA  6E95               	movwf	3989,c	;volatile
   670                           
   671                           ;init.c: 29: TRISE = 0b00000101;
   672  0009DC  0E05               	movlw	5
   673  0009DE  6E96               	movwf	3990,c	;volatile
   674  0009E0  0012               	return		;funcret
   675  0009E2                     __end_of_InitTris:
   676                           	opt stack 0
   677                           tblptru	equ	0xFF8
   678                           tblptrh	equ	0xFF7
   679                           tblptrl	equ	0xFF6
   680                           tablat	equ	0xFF5
   681                           prodh	equ	0xFF4
   682                           prodl	equ	0xFF3
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           indf2	equ	0xFDF
   686                           fsr2h	equ	0xFDA
   687                           fsr2l	equ	0xFD9
   688                           
   689 ;; *************** function _InitTransmission *****************
   690 ;; Defined at:
   691 ;;		line 44 in file "init.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;		None
   694 ;; Auto vars:     Size  Location     Type
   695 ;;		None
   696 ;; Return value:  Size  Location     Type
   697 ;;		None               void
   698 ;; Registers used:
   699 ;;		wreg, status,2
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   705 ;;      Params:         0       0       0       0
   706 ;;      Locals:         0       0       0       0
   707 ;;      Temps:          0       0       0       0
   708 ;;      Totals:         0       0       0       0
   709 ;;Total ram usage:        0 bytes
   710 ;; Hardware stack levels used:    1
   711 ;; Hardware stack levels required when called:    5
   712 ;; This function calls:
   713 ;;		Nothing
   714 ;; This function is called by:
   715 ;;		_Init
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text4
   720  0009B0                     __ptext4:
   721                           	opt stack 0
   722  0009B0                     _InitTransmission:
   723                           	opt stack 24
   724                           
   725                           ;init.c: 46: TXSTA1bits.SYNC = 0;
   726                           
   727                           ;incstack = 0
   728  0009B0  98AC               	bcf	4012,4,c	;volatile
   729                           
   730                           ;init.c: 47: TXSTA1bits.BRGH = 1;
   731  0009B2  84AC               	bsf	4012,2,c	;volatile
   732                           
   733                           ;init.c: 48: BAUDCON1bits.BRG16 = 0;
   734  0009B4  96B8               	bcf	4024,3,c	;volatile
   735                           
   736                           ;init.c: 49: SPBRG1 = 25;
   737  0009B6  0E19               	movlw	25
   738  0009B8  6EAF               	movwf	4015,c	;volatile
   739                           
   740                           ;init.c: 50: TRISCbits.RC6 = 1;
   741  0009BA  8C94               	bsf	3988,6,c	;volatile
   742                           
   743                           ;init.c: 51: TRISCbits.RC7 = 1;
   744  0009BC  8E94               	bsf	3988,7,c	;volatile
   745                           
   746                           ;init.c: 52: RCSTA1bits.SPEN = 1;
   747  0009BE  8EAB               	bsf	4011,7,c	;volatile
   748                           
   749                           ;init.c: 53: TXSTA1bits.TX9 = 1;
   750  0009C0  8CAC               	bsf	4012,6,c	;volatile
   751                           
   752                           ;init.c: 54: TXSTA1bits.TXEN = 1;
   753  0009C2  8AAC               	bsf	4012,5,c	;volatile
   754                           
   755                           ;init.c: 55: RCSTA1bits.RC9 = 1;
   756  0009C4  8CAB               	bsf	4011,6,c	;volatile
   757                           
   758                           ;init.c: 56: RCSTA1bits.CREN = 1;
   759  0009C6  88AB               	bsf	4011,4,c	;volatile
   760                           
   761                           ;init.c: 57: TRISCbits.RC6 = 0;
   762  0009C8  9C94               	bcf	3988,6,c	;volatile
   763  0009CA  0012               	return		;funcret
   764  0009CC                     __end_of_InitTransmission:
   765                           	opt stack 0
   766                           tblptru	equ	0xFF8
   767                           tblptrh	equ	0xFF7
   768                           tblptrl	equ	0xFF6
   769                           tablat	equ	0xFF5
   770                           prodh	equ	0xFF4
   771                           prodl	equ	0xFF3
   772                           postinc0	equ	0xFEE
   773                           wreg	equ	0xFE8
   774                           indf2	equ	0xFDF
   775                           fsr2h	equ	0xFDA
   776                           fsr2l	equ	0xFD9
   777                           
   778 ;; *************** function _InitPort *****************
   779 ;; Defined at:
   780 ;;		line 16 in file "init.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;		None               void
   787 ;; Registers used:
   788 ;;		wreg, status,2
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   794 ;;      Params:         0       0       0       0
   795 ;;      Locals:         0       0       0       0
   796 ;;      Temps:          0       0       0       0
   797 ;;      Totals:         0       0       0       0
   798 ;;Total ram usage:        0 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    5
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_Init
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text5
   809  0009E2                     __ptext5:
   810                           	opt stack 0
   811  0009E2                     _InitPort:
   812                           	opt stack 24
   813                           
   814                           ;init.c: 17: PORTA = 0b00000000;
   815                           
   816                           ;incstack = 0
   817  0009E2  0E00               	movlw	0
   818  0009E4  6E80               	movwf	3968,c	;volatile
   819                           
   820                           ;init.c: 18: PORTB = 0b00000000;
   821  0009E6  0E00               	movlw	0
   822  0009E8  6E81               	movwf	3969,c	;volatile
   823                           
   824                           ;init.c: 19: PORTC = 0b00000000;
   825  0009EA  0E00               	movlw	0
   826  0009EC  6E82               	movwf	3970,c	;volatile
   827                           
   828                           ;init.c: 20: PORTD = 0b00000000;
   829  0009EE  0E00               	movlw	0
   830  0009F0  6E83               	movwf	3971,c	;volatile
   831                           
   832                           ;init.c: 21: PORTE = 0b00000000;
   833  0009F2  0E00               	movlw	0
   834  0009F4  6E84               	movwf	3972,c	;volatile
   835  0009F6  0012               	return		;funcret
   836  0009F8                     __end_of_InitPort:
   837                           	opt stack 0
   838                           tblptru	equ	0xFF8
   839                           tblptrh	equ	0xFF7
   840                           tblptrl	equ	0xFF6
   841                           tablat	equ	0xFF5
   842                           prodh	equ	0xFF4
   843                           prodl	equ	0xFF3
   844                           postinc0	equ	0xFEE
   845                           wreg	equ	0xFE8
   846                           indf2	equ	0xFDF
   847                           fsr2h	equ	0xFDA
   848                           fsr2l	equ	0xFD9
   849                           
   850 ;; *************** function _InitMiscellaneous *****************
   851 ;; Defined at:
   852 ;;		line 40 in file "init.c"
   853 ;; Parameters:    Size  Location     Type
   854 ;;		None
   855 ;; Auto vars:     Size  Location     Type
   856 ;;		None
   857 ;; Return value:  Size  Location     Type
   858 ;;		None               void
   859 ;; Registers used:
   860 ;;		wreg, status,2
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   866 ;;      Params:         0       0       0       0
   867 ;;      Locals:         0       0       0       0
   868 ;;      Temps:          0       0       0       0
   869 ;;      Totals:         0       0       0       0
   870 ;;Total ram usage:        0 bytes
   871 ;; Hardware stack levels used:    1
   872 ;; Hardware stack levels required when called:    5
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_Init
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text6
   881  000A62                     __ptext6:
   882                           	opt stack 0
   883  000A62                     _InitMiscellaneous:
   884                           	opt stack 24
   885                           
   886                           ;init.c: 41: OSCCON = 0b01010011;
   887                           
   888                           ;incstack = 0
   889  000A62  0E53               	movlw	83
   890  000A64  6ED3               	movwf	4051,c	;volatile
   891  000A66  0012               	return		;funcret
   892  000A68                     __end_of_InitMiscellaneous:
   893                           	opt stack 0
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           tblptrl	equ	0xFF6
   897                           tablat	equ	0xFF5
   898                           prodh	equ	0xFF4
   899                           prodl	equ	0xFF3
   900                           postinc0	equ	0xFEE
   901                           wreg	equ	0xFE8
   902                           indf2	equ	0xFDF
   903                           fsr2h	equ	0xFDA
   904                           fsr2l	equ	0xFD9
   905                           
   906 ;; *************** function _InitInterrupt *****************
   907 ;; Defined at:
   908 ;;		line 78 in file "init.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;		None
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;		None               void
   915 ;; Registers used:
   916 ;;		None
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   922 ;;      Params:         0       0       0       0
   923 ;;      Locals:         0       0       0       0
   924 ;;      Temps:          0       0       0       0
   925 ;;      Totals:         0       0       0       0
   926 ;;Total ram usage:        0 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    5
   929 ;; This function calls:
   930 ;;		Nothing
   931 ;; This function is called by:
   932 ;;		_Init
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text7
   937  000A58                     __ptext7:
   938                           	opt stack 0
   939  000A58                     _InitInterrupt:
   940                           	opt stack 24
   941                           
   942                           ;init.c: 79: INTCONbits.GIE = 1;
   943                           
   944                           ;incstack = 0
   945  000A58  8EF2               	bsf	intcon,7,c	;volatile
   946                           
   947                           ;init.c: 80: INTCONbits.PEIE = 1;
   948  000A5A  8CF2               	bsf	intcon,6,c	;volatile
   949                           
   950                           ;init.c: 81: PIE1bits.RCIE = 1;
   951  000A5C  8A9D               	bsf	3997,5,c	;volatile
   952                           
   953                           ;init.c: 82: PIE1bits.CCP1IE = 1;
   954  000A5E  849D               	bsf	3997,2,c	;volatile
   955  000A60  0012               	return		;funcret
   956  000A62                     __end_of_InitInterrupt:
   957                           	opt stack 0
   958                           tblptru	equ	0xFF8
   959                           tblptrh	equ	0xFF7
   960                           tblptrl	equ	0xFF6
   961                           tablat	equ	0xFF5
   962                           prodh	equ	0xFF4
   963                           prodl	equ	0xFF3
   964                           intcon	equ	0xFF2
   965                           postinc0	equ	0xFEE
   966                           wreg	equ	0xFE8
   967                           indf2	equ	0xFDF
   968                           fsr2h	equ	0xFDA
   969                           fsr2l	equ	0xFD9
   970                           
   971 ;; *************** function _InitAnsel *****************
   972 ;; Defined at:
   973 ;;		line 32 in file "init.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;		None               void
   980 ;; Registers used:
   981 ;;		wreg, status,2
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   987 ;;      Params:         0       0       0       0
   988 ;;      Locals:         0       0       0       0
   989 ;;      Temps:          0       0       0       0
   990 ;;      Totals:         0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    5
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_Init
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text8
  1002  000970                     __ptext8:
  1003                           	opt stack 0
  1004  000970                     _InitAnsel:
  1005                           	opt stack 24
  1006                           
  1007                           ;init.c: 33: ANSELA = 0b00000000;
  1008                           
  1009                           ;incstack = 0
  1010  000970  0E00               	movlw	0
  1011  000972  010F               	movlb	15	; () banked
  1012  000974  6F38               	movwf	56,b	;volatile
  1013                           
  1014                           ;init.c: 34: ANSELB = 0b00000001;
  1015  000976  0E01               	movlw	1
  1016  000978  010F               	movlb	15	; () banked
  1017  00097A  6F39               	movwf	57,b	;volatile
  1018                           
  1019                           ;init.c: 35: ANSELC = 0b00000000;
  1020  00097C  0E00               	movlw	0
  1021  00097E  010F               	movlb	15	; () banked
  1022  000980  6F3A               	movwf	58,b	;volatile
  1023                           
  1024                           ;init.c: 36: ANSELD = 0b00000000;
  1025  000982  0E00               	movlw	0
  1026  000984  010F               	movlb	15	; () banked
  1027  000986  6F3B               	movwf	59,b	;volatile
  1028                           
  1029                           ;init.c: 37: ANSELE = 0b00000000;
  1030  000988  0E00               	movlw	0
  1031  00098A  010F               	movlb	15	; () banked
  1032  00098C  6F3C               	movwf	60,b	;volatile
  1033                           
  1034                           ; BSR set to: 15
  1035  00098E  0012               	return		;funcret
  1036  000990                     __end_of_InitAnsel:
  1037                           	opt stack 0
  1038                           tblptru	equ	0xFF8
  1039                           tblptrh	equ	0xFF7
  1040                           tblptrl	equ	0xFF6
  1041                           tablat	equ	0xFF5
  1042                           prodh	equ	0xFF4
  1043                           prodl	equ	0xFF3
  1044                           intcon	equ	0xFF2
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           indf2	equ	0xFDF
  1048                           fsr2h	equ	0xFDA
  1049                           fsr2l	equ	0xFD9
  1050                           
  1051 ;; *************** function _InitADC *****************
  1052 ;; Defined at:
  1053 ;;		line 60 in file "init.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;		None
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;		None
  1058 ;; Return value:  Size  Location     Type
  1059 ;;		None               void
  1060 ;; Registers used:
  1061 ;;		wreg, status,2
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1067 ;;      Params:         0       0       0       0
  1068 ;;      Locals:         0       0       0       0
  1069 ;;      Temps:          0       0       0       0
  1070 ;;      Totals:         0       0       0       0
  1071 ;;Total ram usage:        0 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    5
  1074 ;; This function calls:
  1075 ;;		Nothing
  1076 ;; This function is called by:
  1077 ;;		_Init
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text9
  1082  000A0E                     __ptext9:
  1083                           	opt stack 0
  1084  000A0E                     _InitADC:
  1085                           	opt stack 24
  1086                           
  1087                           ;init.c: 62: VREFCON0 = 0b10110000;
  1088                           
  1089                           ; BSR set to: 15
  1090                           ;incstack = 0
  1091  000A0E  0EB0               	movlw	176
  1092  000A10  010F               	movlb	15	; () banked
  1093  000A12  6F42               	movwf	66,b	;volatile
  1094                           
  1095                           ;init.c: 64: ADCON1 = 0b00001000;
  1096  000A14  0E08               	movlw	8
  1097  000A16  6EC1               	movwf	4033,c	;volatile
  1098                           
  1099                           ;init.c: 65: ADCON2 = 0b00000011;
  1100  000A18  0E03               	movlw	3
  1101  000A1A  6EC0               	movwf	4032,c	;volatile
  1102                           
  1103                           ;init.c: 66: ADCON0 = 0b00110001;
  1104  000A1C  0E31               	movlw	49
  1105  000A1E  6EC2               	movwf	4034,c	;volatile
  1106                           
  1107                           ; BSR set to: 15
  1108  000A20  0012               	return		;funcret
  1109  000A22                     __end_of_InitADC:
  1110                           	opt stack 0
  1111                           tblptru	equ	0xFF8
  1112                           tblptrh	equ	0xFF7
  1113                           tblptrl	equ	0xFF6
  1114                           tablat	equ	0xFF5
  1115                           prodh	equ	0xFF4
  1116                           prodl	equ	0xFF3
  1117                           intcon	equ	0xFF2
  1118                           postinc0	equ	0xFEE
  1119                           wreg	equ	0xFE8
  1120                           indf2	equ	0xFDF
  1121                           fsr2h	equ	0xFDA
  1122                           fsr2l	equ	0xFD9
  1123                           
  1124 ;; *************** function _Check_Ignition *****************
  1125 ;; Defined at:
  1126 ;;		line 156 in file "ignition.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;		None
  1129 ;; Auto vars:     Size  Location     Type
  1130 ;;  c               1    2[BANK0 ] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;		None               void
  1133 ;; Registers used:
  1134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1140 ;;      Params:         0       0       0       0
  1141 ;;      Locals:         0       1       0       0
  1142 ;;      Temps:          0       1       0       0
  1143 ;;      Totals:         0       2       0       0
  1144 ;;Total ram usage:        2 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    6
  1147 ;; This function calls:
  1148 ;;		_Disable_Port
  1149 ;;		_Ignite_Port
  1150 ;;		_On_Timer
  1151 ;; This function is called by:
  1152 ;;		_main
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           	psect	text10
  1157  000882                     __ptext10:
  1158                           	opt stack 0
  1159  000882                     _Check_Ignition:
  1160                           	opt stack 24
  1161                           
  1162                           ;ignition.c: 157: for(unsigned char c = 0; c < 10; c++) {
  1163                           
  1164                           ; BSR set to: 15
  1165                           ;incstack = 0
  1166  000882  0E00               	movlw	0
  1167  000884  0100               	movlb	0	; () banked
  1168  000886  6F6C               	movwf	Check_Ignition@c& (0+255),b
  1169  000888                     l1713:
  1170                           
  1171                           ; BSR set to: 0
  1172  000888  0E09               	movlw	9
  1173  00088A  0100               	movlb	0	; () banked
  1174  00088C  656C               	cpfsgt	Check_Ignition@c& (0+255),b
  1175  00088E  D001               	goto	l1717
  1176  000890  0012               	return	
  1177  000892                     l1717:
  1178                           
  1179                           ; BSR set to: 0
  1180                           ;ignition.c: 158: if(Marker[c] == 1) {
  1181  000892  0100               	movlb	0	; () banked
  1182  000894  516C               	movf	Check_Ignition@c& (0+255),w,b
  1183  000896  0D01               	mullw	1
  1184  000898  0E60               	movlw	low _Marker
  1185  00089A  24F3               	addwf	prodl,w,c
  1186  00089C  6ED9               	movwf	fsr2l,c
  1187  00089E  0E00               	movlw	high _Marker
  1188  0008A0  20F4               	addwfc	prodh,w,c
  1189  0008A2  6EDA               	movwf	fsr2h,c
  1190  0008A4  04DE               	decf	postinc2,w,c
  1191  0008A6  A4D8               	btfss	status,2,c
  1192  0008A8  D007               	goto	l1723
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;ignition.c: 159: Ignite_Port(c);
  1196  0008AA  0100               	movlb	0	; () banked
  1197  0008AC  516C               	movf	Check_Ignition@c& (0+255),w,b
  1198  0008AE  EC99  F003         	call	_Ignite_Port
  1199                           
  1200                           ;ignition.c: 160: On_Timer();
  1201  0008B2  EC26  F005         	call	_On_Timer	;wreg free
  1202                           
  1203                           ;ignition.c: 161: } else {
  1204  0008B6  D004               	goto	l1725
  1205  0008B8                     l1723:
  1206                           
  1207                           ;ignition.c: 162: Disable_Port(c);
  1208  0008B8  0100               	movlb	0	; () banked
  1209  0008BA  516C               	movf	Check_Ignition@c& (0+255),w,b
  1210  0008BC  ECD1  F003         	call	_Disable_Port
  1211  0008C0                     l1725:
  1212  0008C0  0100               	movlb	0	; () banked
  1213  0008C2  2B6C               	incf	Check_Ignition@c& (0+255),f,b
  1214  0008C4  D7E1               	goto	l1713
  1215  0008C6                     __end_of_Check_Ignition:
  1216                           	opt stack 0
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           prodh	equ	0xFF4
  1222                           prodl	equ	0xFF3
  1223                           intcon	equ	0xFF2
  1224                           postinc0	equ	0xFEE
  1225                           wreg	equ	0xFE8
  1226                           indf2	equ	0xFDF
  1227                           postinc2	equ	0xFDE
  1228                           fsr2h	equ	0xFDA
  1229                           fsr2l	equ	0xFD9
  1230                           status	equ	0xFD8
  1231                           
  1232 ;; *************** function _On_Timer *****************
  1233 ;; Defined at:
  1234 ;;		line 5 in file "ignition.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;		None
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;		None               void
  1241 ;; Registers used:
  1242 ;;		wreg, status,2
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1248 ;;      Params:         0       0       0       0
  1249 ;;      Locals:         0       0       0       0
  1250 ;;      Temps:          0       0       0       0
  1251 ;;      Totals:         0       0       0       0
  1252 ;;Total ram usage:        0 bytes
  1253 ;; Hardware stack levels used:    1
  1254 ;; Hardware stack levels required when called:    5
  1255 ;; This function calls:
  1256 ;;		Nothing
  1257 ;; This function is called by:
  1258 ;;		_Check_Ignition
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           	psect	text11
  1263  000A4C                     __ptext11:
  1264                           	opt stack 0
  1265  000A4C                     _On_Timer:
  1266                           	opt stack 24
  1267                           
  1268                           ;ignition.c: 6: TMR1L = 0;
  1269                           
  1270                           ; BSR set to: 0
  1271                           ;incstack = 0
  1272  000A4C  0E00               	movlw	0
  1273  000A4E  6ECE               	movwf	4046,c	;volatile
  1274                           
  1275                           ;ignition.c: 7: TMR1H = 0;
  1276  000A50  0E00               	movlw	0
  1277  000A52  6ECF               	movwf	4047,c	;volatile
  1278                           
  1279                           ;ignition.c: 8: T1CONbits.TMR1ON = 1;
  1280  000A54  80CD               	bsf	4045,0,c	;volatile
  1281  000A56  0012               	return		;funcret
  1282  000A58                     __end_of_On_Timer:
  1283                           	opt stack 0
  1284                           tblptru	equ	0xFF8
  1285                           tblptrh	equ	0xFF7
  1286                           tblptrl	equ	0xFF6
  1287                           tablat	equ	0xFF5
  1288                           prodh	equ	0xFF4
  1289                           prodl	equ	0xFF3
  1290                           intcon	equ	0xFF2
  1291                           postinc0	equ	0xFEE
  1292                           wreg	equ	0xFE8
  1293                           indf2	equ	0xFDF
  1294                           postinc2	equ	0xFDE
  1295                           fsr2h	equ	0xFDA
  1296                           fsr2l	equ	0xFD9
  1297                           status	equ	0xFD8
  1298                           
  1299 ;; *************** function _Ignite_Port *****************
  1300 ;; Defined at:
  1301 ;;		line 86 in file "ignition.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  ignite_numbe    1    wreg     unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  ignite_numbe    1    0[BANK0 ] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;		None               void
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1315 ;;      Params:         0       0       0       0
  1316 ;;      Locals:         0       1       0       0
  1317 ;;      Temps:          0       0       0       0
  1318 ;;      Totals:         0       1       0       0
  1319 ;;Total ram usage:        1 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    5
  1322 ;; This function calls:
  1323 ;;		Nothing
  1324 ;; This function is called by:
  1325 ;;		_Check_Ignition
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text12
  1330  000732                     __ptext12:
  1331                           	opt stack 0
  1332  000732                     _Ignite_Port:
  1333                           	opt stack 24
  1334                           
  1335                           ;incstack = 0
  1336                           ;Ignite_Port@ignite_number stored from wreg
  1337  000732  0100               	movlb	0	; () banked
  1338  000734  6F6A               	movwf	Ignite_Port@ignite_number& (0+255),b
  1339                           
  1340                           ;ignition.c: 87: switch(ignite_number) {
  1341  000736  D014               	goto	l1683
  1342  000738                     l294:
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;ignition.c: 89: PORTCbits.RC5 = 1;
  1346  000738  8A82               	bsf	3970,5,c	;volatile
  1347                           
  1348                           ;ignition.c: 90: break;
  1349  00073A  0012               	return	
  1350  00073C                     l296:
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;ignition.c: 92: PORTDbits.RD3 = 1;
  1354  00073C  8683               	bsf	3971,3,c	;volatile
  1355                           
  1356                           ;ignition.c: 93: break;
  1357  00073E  0012               	return	
  1358  000740                     l297:
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;ignition.c: 95: PORTDbits.RD1 = 1;
  1362  000740  8283               	bsf	3971,1,c	;volatile
  1363                           
  1364                           ;ignition.c: 96: break;
  1365  000742  0012               	return	
  1366  000744                     l298:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;ignition.c: 98: PORTCbits.RC3 = 1;
  1370  000744  8682               	bsf	3970,3,c	;volatile
  1371                           
  1372                           ;ignition.c: 99: break;
  1373  000746  0012               	return	
  1374  000748                     l299:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;ignition.c: 101: PORTCbits.RC1 = 1;
  1378  000748  8282               	bsf	3970,1,c	;volatile
  1379                           
  1380                           ;ignition.c: 102: break;
  1381  00074A  0012               	return	
  1382  00074C                     l300:
  1383                           
  1384                           ; BSR set to: 0
  1385                           ;ignition.c: 104: PORTEbits.RE1 = 1;
  1386  00074C  8284               	bsf	3972,1,c	;volatile
  1387                           
  1388                           ;ignition.c: 105: break;
  1389  00074E  0012               	return	
  1390  000750                     l301:
  1391                           
  1392                           ; BSR set to: 0
  1393                           ;ignition.c: 107: PORTAbits.RA5 = 1;
  1394  000750  8A80               	bsf	3968,5,c	;volatile
  1395                           
  1396                           ;ignition.c: 108: break;
  1397  000752  0012               	return	
  1398  000754                     l302:
  1399                           
  1400                           ; BSR set to: 0
  1401                           ;ignition.c: 110: PORTBbits.RB5 = 1;
  1402  000754  8A81               	bsf	3969,5,c	;volatile
  1403                           
  1404                           ;ignition.c: 111: break;
  1405  000756  0012               	return	
  1406  000758                     l303:
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;ignition.c: 113: PORTAbits.RA3 = 1;
  1410  000758  8680               	bsf	3968,3,c	;volatile
  1411                           
  1412                           ;ignition.c: 114: break;
  1413  00075A  0012               	return	
  1414  00075C                     l304:
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;ignition.c: 116: PORTAbits.RA1 = 1;
  1418  00075C  8280               	bsf	3968,1,c	;volatile
  1419                           
  1420                           ; BSR set to: 0
  1421                           ;ignition.c: 118: }
  1422                           
  1423                           ;ignition.c: 117: break;
  1424  00075E  0012               	return	
  1425  000760                     l1683:
  1426  000760  0100               	movlb	0	; () banked
  1427  000762  516A               	movf	Ignite_Port@ignite_number& (0+255),w,b
  1428                           
  1429                           ; Switch size 1, requested type "space"
  1430                           ; Number of cases is 10, Range of values is 0 to 9
  1431                           ; switch strategies available:
  1432                           ; Name         Instructions Cycles
  1433                           ; simple_byte           31    16 (average)
  1434                           ;	Chosen strategy is simple_byte
  1435  000764  0A00               	xorlw	0	; case 0
  1436  000766  B4D8               	btfsc	status,2,c
  1437  000768  D7E7               	goto	l294
  1438  00076A  0A01               	xorlw	1	; case 1
  1439  00076C  B4D8               	btfsc	status,2,c
  1440  00076E  D7E6               	goto	l296
  1441  000770  0A03               	xorlw	3	; case 2
  1442  000772  B4D8               	btfsc	status,2,c
  1443  000774  D7E5               	goto	l297
  1444  000776  0A01               	xorlw	1	; case 3
  1445  000778  B4D8               	btfsc	status,2,c
  1446  00077A  D7E4               	goto	l298
  1447  00077C  0A07               	xorlw	7	; case 4
  1448  00077E  B4D8               	btfsc	status,2,c
  1449  000780  D7E3               	goto	l299
  1450  000782  0A01               	xorlw	1	; case 5
  1451  000784  B4D8               	btfsc	status,2,c
  1452  000786  D7E2               	goto	l300
  1453  000788  0A03               	xorlw	3	; case 6
  1454  00078A  B4D8               	btfsc	status,2,c
  1455  00078C  D7E1               	goto	l301
  1456  00078E  0A01               	xorlw	1	; case 7
  1457  000790  B4D8               	btfsc	status,2,c
  1458  000792  D7E0               	goto	l302
  1459  000794  0A0F               	xorlw	15	; case 8
  1460  000796  B4D8               	btfsc	status,2,c
  1461  000798  D7DF               	goto	l303
  1462  00079A  0A01               	xorlw	1	; case 9
  1463  00079C  A4D8               	btfss	status,2,c
  1464  00079E  0012               	return	
  1465  0007A0  D7DD               	goto	l304
  1466  0007A2                     __end_of_Ignite_Port:
  1467                           	opt stack 0
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           prodh	equ	0xFF4
  1473                           prodl	equ	0xFF3
  1474                           intcon	equ	0xFF2
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           indf2	equ	0xFDF
  1478                           postinc2	equ	0xFDE
  1479                           fsr2h	equ	0xFDA
  1480                           fsr2l	equ	0xFD9
  1481                           status	equ	0xFD8
  1482                           
  1483 ;; *************** function _Disable_Port *****************
  1484 ;; Defined at:
  1485 ;;		line 121 in file "ignition.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;  disable_numb    1    wreg     unsigned char 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;  disable_numb    1    0[BANK0 ] unsigned char 
  1490 ;; Return value:  Size  Location     Type
  1491 ;;		None               void
  1492 ;; Registers used:
  1493 ;;		wreg, status,2, status,0
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1499 ;;      Params:         0       0       0       0
  1500 ;;      Locals:         0       1       0       0
  1501 ;;      Temps:          0       0       0       0
  1502 ;;      Totals:         0       1       0       0
  1503 ;;Total ram usage:        1 bytes
  1504 ;; Hardware stack levels used:    1
  1505 ;; Hardware stack levels required when called:    5
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_Check_Ignition
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text13
  1514  0007A2                     __ptext13:
  1515                           	opt stack 0
  1516  0007A2                     _Disable_Port:
  1517                           	opt stack 24
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;incstack = 0
  1521                           ;Disable_Port@disable_number stored from wreg
  1522  0007A2  0100               	movlb	0	; () banked
  1523  0007A4  6F6A               	movwf	Disable_Port@disable_number& (0+255),b
  1524                           
  1525                           ;ignition.c: 122: switch(disable_number) {
  1526  0007A6  D014               	goto	l1689
  1527  0007A8                     l309:
  1528                           
  1529                           ; BSR set to: 0
  1530                           ;ignition.c: 124: PORTCbits.RC5 = 0;
  1531  0007A8  9A82               	bcf	3970,5,c	;volatile
  1532                           
  1533                           ;ignition.c: 125: break;
  1534  0007AA  0012               	return	
  1535  0007AC                     l311:
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;ignition.c: 127: PORTDbits.RD3 = 0;
  1539  0007AC  9683               	bcf	3971,3,c	;volatile
  1540                           
  1541                           ;ignition.c: 128: break;
  1542  0007AE  0012               	return	
  1543  0007B0                     l312:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;ignition.c: 130: PORTDbits.RD1 = 0;
  1547  0007B0  9283               	bcf	3971,1,c	;volatile
  1548                           
  1549                           ;ignition.c: 131: break;
  1550  0007B2  0012               	return	
  1551  0007B4                     l313:
  1552                           
  1553                           ; BSR set to: 0
  1554                           ;ignition.c: 133: PORTCbits.RC3 = 0;
  1555  0007B4  9682               	bcf	3970,3,c	;volatile
  1556                           
  1557                           ;ignition.c: 134: break;
  1558  0007B6  0012               	return	
  1559  0007B8                     l314:
  1560                           
  1561                           ; BSR set to: 0
  1562                           ;ignition.c: 136: PORTCbits.RC1 = 0;
  1563  0007B8  9282               	bcf	3970,1,c	;volatile
  1564                           
  1565                           ;ignition.c: 137: break;
  1566  0007BA  0012               	return	
  1567  0007BC                     l315:
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;ignition.c: 139: PORTEbits.RE1 = 0;
  1571  0007BC  9284               	bcf	3972,1,c	;volatile
  1572                           
  1573                           ;ignition.c: 140: break;
  1574  0007BE  0012               	return	
  1575  0007C0                     l316:
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;ignition.c: 142: PORTAbits.RA5 = 0;
  1579  0007C0  9A80               	bcf	3968,5,c	;volatile
  1580                           
  1581                           ;ignition.c: 143: break;
  1582  0007C2  0012               	return	
  1583  0007C4                     l317:
  1584                           
  1585                           ; BSR set to: 0
  1586                           ;ignition.c: 145: PORTBbits.RB5 = 0;
  1587  0007C4  9A81               	bcf	3969,5,c	;volatile
  1588                           
  1589                           ;ignition.c: 146: break;
  1590  0007C6  0012               	return	
  1591  0007C8                     l318:
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;ignition.c: 148: PORTAbits.RA3 = 0;
  1595  0007C8  9680               	bcf	3968,3,c	;volatile
  1596                           
  1597                           ;ignition.c: 149: break;
  1598  0007CA  0012               	return	
  1599  0007CC                     l319:
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;ignition.c: 151: PORTAbits.RA1 = 0;
  1603  0007CC  9280               	bcf	3968,1,c	;volatile
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;ignition.c: 153: }
  1607                           
  1608                           ;ignition.c: 152: break;
  1609  0007CE  0012               	return	
  1610  0007D0                     l1689:
  1611  0007D0  0100               	movlb	0	; () banked
  1612  0007D2  516A               	movf	Disable_Port@disable_number& (0+255),w,b
  1613                           
  1614                           ; Switch size 1, requested type "space"
  1615                           ; Number of cases is 10, Range of values is 0 to 9
  1616                           ; switch strategies available:
  1617                           ; Name         Instructions Cycles
  1618                           ; simple_byte           31    16 (average)
  1619                           ;	Chosen strategy is simple_byte
  1620  0007D4  0A00               	xorlw	0	; case 0
  1621  0007D6  B4D8               	btfsc	status,2,c
  1622  0007D8  D7E7               	goto	l309
  1623  0007DA  0A01               	xorlw	1	; case 1
  1624  0007DC  B4D8               	btfsc	status,2,c
  1625  0007DE  D7E6               	goto	l311
  1626  0007E0  0A03               	xorlw	3	; case 2
  1627  0007E2  B4D8               	btfsc	status,2,c
  1628  0007E4  D7E5               	goto	l312
  1629  0007E6  0A01               	xorlw	1	; case 3
  1630  0007E8  B4D8               	btfsc	status,2,c
  1631  0007EA  D7E4               	goto	l313
  1632  0007EC  0A07               	xorlw	7	; case 4
  1633  0007EE  B4D8               	btfsc	status,2,c
  1634  0007F0  D7E3               	goto	l314
  1635  0007F2  0A01               	xorlw	1	; case 5
  1636  0007F4  B4D8               	btfsc	status,2,c
  1637  0007F6  D7E2               	goto	l315
  1638  0007F8  0A03               	xorlw	3	; case 6
  1639  0007FA  B4D8               	btfsc	status,2,c
  1640  0007FC  D7E1               	goto	l316
  1641  0007FE  0A01               	xorlw	1	; case 7
  1642  000800  B4D8               	btfsc	status,2,c
  1643  000802  D7E0               	goto	l317
  1644  000804  0A0F               	xorlw	15	; case 8
  1645  000806  B4D8               	btfsc	status,2,c
  1646  000808  D7DF               	goto	l318
  1647  00080A  0A01               	xorlw	1	; case 9
  1648  00080C  A4D8               	btfss	status,2,c
  1649  00080E  0012               	return	
  1650  000810  D7DD               	goto	l319
  1651  000812                     __end_of_Disable_Port:
  1652                           	opt stack 0
  1653                           tblptru	equ	0xFF8
  1654                           tblptrh	equ	0xFF7
  1655                           tblptrl	equ	0xFF6
  1656                           tablat	equ	0xFF5
  1657                           prodh	equ	0xFF4
  1658                           prodl	equ	0xFF3
  1659                           intcon	equ	0xFF2
  1660                           postinc0	equ	0xFEE
  1661                           wreg	equ	0xFE8
  1662                           indf2	equ	0xFDF
  1663                           postinc2	equ	0xFDE
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _Isr *****************
  1669 ;; Defined at:
  1670 ;;		line 3 in file "interrupt.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  c               1   62[COMRAM] unsigned char 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;		None               void
  1677 ;; Registers used:
  1678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1684 ;;      Params:         0       0       0       0
  1685 ;;      Locals:         1       0       0       0
  1686 ;;      Temps:         14       0       0       0
  1687 ;;      Totals:        15       0       0       0
  1688 ;;Total ram usage:       15 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    4
  1691 ;; This function calls:
  1692 ;;		_Evaluate_Reception
  1693 ;;		_Receive
  1694 ;;		_Receive_Dump
  1695 ;; This function is called by:
  1696 ;;		Interrupt level 2
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	intcode
  1701  000008                     __pintcode:
  1702                           	opt stack 0
  1703  000008                     _Isr:
  1704                           	opt stack 24
  1705                           
  1706                           ; BSR set to: 0
  1707                           ;incstack = 0
  1708  000008  8247               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1709  00000A  CFFA F031          	movff	pclath,??_Isr
  1710  00000E  CFFB F032          	movff	pclatu,??_Isr+1
  1711  000012  CFE9 F033          	movff	fsr0l,??_Isr+2
  1712  000016  CFEA F034          	movff	fsr0h,??_Isr+3
  1713  00001A  CFE1 F035          	movff	fsr1l,??_Isr+4
  1714  00001E  CFE2 F036          	movff	fsr1h,??_Isr+5
  1715  000022  CFD9 F037          	movff	fsr2l,??_Isr+6
  1716  000026  CFDA F038          	movff	fsr2h,??_Isr+7
  1717  00002A  CFF3 F039          	movff	prodl,??_Isr+8
  1718  00002E  CFF4 F03A          	movff	prodh,??_Isr+9
  1719  000032  CFF6 F03B          	movff	tblptrl,??_Isr+10
  1720  000036  CFF7 F03C          	movff	tblptrh,??_Isr+11
  1721  00003A  CFF8 F03D          	movff	tblptru,??_Isr+12
  1722  00003E  CFF5 F03E          	movff	tablat,??_Isr+13
  1723                           
  1724                           ;interrupt.c: 4: __nop();
  1725  000042  F000               	nop	
  1726                           
  1727                           ;interrupt.c: 5: if(PIR1bits.RCIF == 1) {
  1728  000044  AA9E               	btfss	3998,5,c	;volatile
  1729  000046  D030               	goto	i2l1781
  1730                           
  1731                           ;interrupt.c: 6: if(RCSTA1bits.RX9D == 1) {
  1732  000048  A0AB               	btfss	4011,0,c	;volatile
  1733  00004A  D015               	goto	i2l379
  1734                           
  1735                           ;interrupt.c: 7: receive_counter = 0;
  1736  00004C  0E00               	movlw	0
  1737  00004E  6E44               	movwf	_receive_counter,c
  1738                           
  1739                           ;interrupt.c: 9: received[receive_counter] =
  1740                           ;interrupt.c: 10: Receive();
  1741  000050  5044               	movf	_receive_counter,w,c
  1742  000052  0D01               	mullw	1
  1743  000054  0E40               	movlw	low _received
  1744  000056  24F3               	addwf	prodl,w,c
  1745  000058  6ED9               	movwf	fsr2l,c
  1746  00005A  0E00               	movlw	high _received
  1747  00005C  20F4               	addwfc	prodh,w,c
  1748  00005E  6EDA               	movwf	fsr2h,c
  1749  000060  EC19  F005         	call	_Receive	;wreg free
  1750  000064  6EDF               	movwf	indf2,c
  1751                           
  1752                           ;interrupt.c: 11: receive_counter++;
  1753  000066  2A44               	incf	_receive_counter,f,c
  1754                           
  1755                           ;interrupt.c: 13: if(received[0] == 0x01) {
  1756  000068  0440               	decf	_received,w,c
  1757  00006A  A4D8               	btfss	status,2,c
  1758  00006C  D002               	goto	i2l380
  1759                           
  1760                           ;interrupt.c: 14: slave_addressed = 1;
  1761  00006E  8245               	bsf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1762                           
  1763                           ;interrupt.c: 15: } else {
  1764  000070  D01B               	goto	i2l1781
  1765  000072                     i2l380:
  1766                           
  1767                           ;interrupt.c: 16: slave_addressed = 0;
  1768  000072  9245               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1769                           
  1770                           ;interrupt.c: 17: }
  1771                           ;interrupt.c: 18: } else if(slave_addressed == 1) {
  1772  000074  D019               	goto	i2l1781
  1773  000076                     i2l379:
  1774  000076  A245               	btfss	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1775  000078  D015               	goto	i2l1779
  1776                           
  1777                           ;interrupt.c: 19: received[receive_counter] =
  1778                           ;interrupt.c: 20: Receive();
  1779  00007A  5044               	movf	_receive_counter,w,c
  1780  00007C  0D01               	mullw	1
  1781  00007E  0E40               	movlw	low _received
  1782  000080  24F3               	addwf	prodl,w,c
  1783  000082  6ED9               	movwf	fsr2l,c
  1784  000084  0E00               	movlw	high _received
  1785  000086  20F4               	addwfc	prodh,w,c
  1786  000088  6EDA               	movwf	fsr2h,c
  1787  00008A  EC19  F005         	call	_Receive	;wreg free
  1788  00008E  6EDF               	movwf	indf2,c
  1789                           
  1790                           ;interrupt.c: 21: receive_counter++;
  1791  000090  2A44               	incf	_receive_counter,f,c
  1792                           
  1793                           ;interrupt.c: 23: if(receive_counter > 3) {
  1794  000092  0E03               	movlw	3
  1795  000094  6444               	cpfsgt	_receive_counter,c
  1796  000096  D008               	goto	i2l1781
  1797                           
  1798                           ;interrupt.c: 24: receive_counter = 0;
  1799  000098  0E00               	movlw	0
  1800  00009A  6E44               	movwf	_receive_counter,c
  1801                           
  1802                           ;interrupt.c: 25: slave_addressed = 0;
  1803  00009C  9245               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1804                           
  1805                           ;interrupt.c: 27: Evaluate_Reception();
  1806  00009E  ECC8  F004         	call	_Evaluate_Reception	;wreg free
  1807                           
  1808                           ;interrupt.c: 28: }
  1809                           ;interrupt.c: 29: } else {
  1810  0000A2  D002               	goto	i2l1781
  1811  0000A4                     i2l1779:
  1812                           
  1813                           ;interrupt.c: 30: Receive_Dump();
  1814  0000A4  EC11  F005         	call	_Receive_Dump	;wreg free
  1815  0000A8                     i2l1781:
  1816                           
  1817                           ;interrupt.c: 31: }
  1818                           ;interrupt.c: 32: }
  1819                           ;interrupt.c: 33: if (PIR1bits.CCP1IF == 1) {
  1820  0000A8  A49E               	btfss	3998,2,c	;volatile
  1821  0000AA  D018               	goto	i2l389
  1822                           
  1823                           ;interrupt.c: 34: PIR1bits.CCP1IF = 0;
  1824  0000AC  949E               	bcf	3998,2,c	;volatile
  1825                           
  1826                           ;interrupt.c: 35: T1CONbits.TMR1ON = 0;
  1827  0000AE  90CD               	bcf	4045,0,c	;volatile
  1828                           
  1829                           ;interrupt.c: 36: TMR1H = 0;
  1830  0000B0  0E00               	movlw	0
  1831  0000B2  6ECF               	movwf	4047,c	;volatile
  1832                           
  1833                           ;interrupt.c: 37: TMR1L = 0;
  1834  0000B4  0E00               	movlw	0
  1835  0000B6  6ECE               	movwf	4046,c	;volatile
  1836                           
  1837                           ;interrupt.c: 38: for (unsigned char c = 0; c < 10; c++) {
  1838  0000B8  0E00               	movlw	0
  1839  0000BA  6E3F               	movwf	Isr@c,c
  1840  0000BC                     i2l1787:
  1841  0000BC  0E09               	movlw	9
  1842  0000BE  643F               	cpfsgt	Isr@c,c
  1843  0000C0  D001               	goto	i2l1791
  1844  0000C2  D00C               	goto	i2l389
  1845  0000C4                     i2l1791:
  1846                           
  1847                           ;interrupt.c: 39: Marker[c] = 0;
  1848  0000C4  503F               	movf	Isr@c,w,c
  1849  0000C6  0D01               	mullw	1
  1850  0000C8  0E60               	movlw	low _Marker
  1851  0000CA  24F3               	addwf	prodl,w,c
  1852  0000CC  6ED9               	movwf	fsr2l,c
  1853  0000CE  0E00               	movlw	high _Marker
  1854  0000D0  20F4               	addwfc	prodh,w,c
  1855  0000D2  6EDA               	movwf	fsr2h,c
  1856  0000D4  0E00               	movlw	0
  1857  0000D6  6EDF               	movwf	indf2,c
  1858  0000D8  2A3F               	incf	Isr@c,f,c
  1859  0000DA  D7F0               	goto	i2l1787
  1860  0000DC                     i2l389:
  1861  0000DC  C03E  FFF5         	movff	??_Isr+13,tablat
  1862  0000E0  C03D  FFF8         	movff	??_Isr+12,tblptru
  1863  0000E4  C03C  FFF7         	movff	??_Isr+11,tblptrh
  1864  0000E8  C03B  FFF6         	movff	??_Isr+10,tblptrl
  1865  0000EC  C03A  FFF4         	movff	??_Isr+9,prodh
  1866  0000F0  C039  FFF3         	movff	??_Isr+8,prodl
  1867  0000F4  C038  FFDA         	movff	??_Isr+7,fsr2h
  1868  0000F8  C037  FFD9         	movff	??_Isr+6,fsr2l
  1869  0000FC  C036  FFE2         	movff	??_Isr+5,fsr1h
  1870  000100  C035  FFE1         	movff	??_Isr+4,fsr1l
  1871  000104  C034  FFEA         	movff	??_Isr+3,fsr0h
  1872  000108  C033  FFE9         	movff	??_Isr+2,fsr0l
  1873  00010C  C032  FFFB         	movff	??_Isr+1,pclatu
  1874  000110  C031  FFFA         	movff	??_Isr,pclath
  1875  000114  9247               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1876  000116  0011               	retfie		f
  1877  000118                     __end_of_Isr:
  1878                           	opt stack 0
  1879                           pclatu	equ	0xFFB
  1880                           pclath	equ	0xFFA
  1881                           tblptru	equ	0xFF8
  1882                           tblptrh	equ	0xFF7
  1883                           tblptrl	equ	0xFF6
  1884                           tablat	equ	0xFF5
  1885                           prodh	equ	0xFF4
  1886                           prodl	equ	0xFF3
  1887                           intcon	equ	0xFF2
  1888                           postinc0	equ	0xFEE
  1889                           fsr0h	equ	0xFEA
  1890                           fsr0l	equ	0xFE9
  1891                           wreg	equ	0xFE8
  1892                           fsr1h	equ	0xFE2
  1893                           fsr1l	equ	0xFE1
  1894                           indf2	equ	0xFDF
  1895                           postinc2	equ	0xFDE
  1896                           fsr2h	equ	0xFDA
  1897                           fsr2l	equ	0xFD9
  1898                           status	equ	0xFD8
  1899                           
  1900 ;; *************** function _Receive_Dump *****************
  1901 ;; Defined at:
  1902 ;;		line 59 in file "communication.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;		None
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  dump            1    0[COMRAM] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;		None               void
  1909 ;; Registers used:
  1910 ;;		None
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1916 ;;      Params:         0       0       0       0
  1917 ;;      Locals:         1       0       0       0
  1918 ;;      Temps:          0       0       0       0
  1919 ;;      Totals:         1       0       0       0
  1920 ;;Total ram usage:        1 bytes
  1921 ;; Hardware stack levels used:    1
  1922 ;; This function calls:
  1923 ;;		Nothing
  1924 ;; This function is called by:
  1925 ;;		_Isr
  1926 ;; This function uses a non-reentrant model
  1927 ;;
  1928                           
  1929                           	psect	text15
  1930  000A22                     __ptext15:
  1931                           	opt stack 0
  1932  000A22                     _Receive_Dump:
  1933                           	opt stack 27
  1934                           
  1935                           ;communication.c: 60: unsigned char dump;
  1936                           ;communication.c: 61: if(RCSTA1bits.OERR == 1) {
  1937                           
  1938                           ;incstack = 0
  1939  000A22  A2AB               	btfss	4011,1,c	;volatile
  1940  000A24  D003               	goto	i2l83
  1941                           
  1942                           ;communication.c: 62: RCSTA1bits.CREN = 0;
  1943  000A26  98AB               	bcf	4011,4,c	;volatile
  1944                           
  1945                           ;communication.c: 63: RCSTA1bits.CREN = 1;
  1946  000A28  88AB               	bsf	4011,4,c	;volatile
  1947                           
  1948                           ;communication.c: 64: overrun = 1;
  1949  000A2A  8045               	bsf	_overrun/(0+8),_overrun& (0+7),c
  1950  000A2C                     i2l83:
  1951                           
  1952                           ;communication.c: 65: }
  1953                           ;communication.c: 66: dump = RCREG1;
  1954  000A2C  CFAE F001          	movff	4014,Receive_Dump@dump	;volatile
  1955  000A30  0012               	return		;funcret
  1956  000A32                     __end_of_Receive_Dump:
  1957                           	opt stack 0
  1958                           pclatu	equ	0xFFB
  1959                           pclath	equ	0xFFA
  1960                           tblptru	equ	0xFF8
  1961                           tblptrh	equ	0xFF7
  1962                           tblptrl	equ	0xFF6
  1963                           tablat	equ	0xFF5
  1964                           prodh	equ	0xFF4
  1965                           prodl	equ	0xFF3
  1966                           intcon	equ	0xFF2
  1967                           postinc0	equ	0xFEE
  1968                           fsr0h	equ	0xFEA
  1969                           fsr0l	equ	0xFE9
  1970                           wreg	equ	0xFE8
  1971                           fsr1h	equ	0xFE2
  1972                           fsr1l	equ	0xFE1
  1973                           indf2	equ	0xFDF
  1974                           postinc2	equ	0xFDE
  1975                           fsr2h	equ	0xFDA
  1976                           fsr2l	equ	0xFD9
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function _Receive *****************
  1980 ;; Defined at:
  1981 ;;		line 50 in file "communication.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      unsigned char 
  1988 ;; Registers used:
  1989 ;;		wreg, status,2
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1995 ;;      Params:         0       0       0       0
  1996 ;;      Locals:         0       0       0       0
  1997 ;;      Temps:          0       0       0       0
  1998 ;;      Totals:         0       0       0       0
  1999 ;;Total ram usage:        0 bytes
  2000 ;; Hardware stack levels used:    1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_Isr
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           	psect	text16
  2009  000A32                     __ptext16:
  2010                           	opt stack 0
  2011  000A32                     _Receive:
  2012                           	opt stack 27
  2013                           
  2014                           ;communication.c: 51: if(RCSTA1bits.OERR == 1) {
  2015                           
  2016                           ;incstack = 0
  2017  000A32  A2AB               	btfss	4011,1,c	;volatile
  2018  000A34  D003               	goto	i2l1733
  2019                           
  2020                           ;communication.c: 52: RCSTA1bits.CREN = 0;
  2021  000A36  98AB               	bcf	4011,4,c	;volatile
  2022                           
  2023                           ;communication.c: 53: RCSTA1bits.CREN = 1;
  2024  000A38  88AB               	bsf	4011,4,c	;volatile
  2025                           
  2026                           ;communication.c: 54: overrun = 1;
  2027  000A3A  8045               	bsf	_overrun/(0+8),_overrun& (0+7),c
  2028  000A3C                     i2l1733:
  2029                           
  2030                           ;communication.c: 55: }
  2031                           ;communication.c: 56: return (RCREG1);
  2032  000A3C  50AE               	movf	4014,w,c	;volatile
  2033  000A3E  0012               	return	
  2034  000A40                     __end_of_Receive:
  2035                           	opt stack 0
  2036                           pclatu	equ	0xFFB
  2037                           pclath	equ	0xFFA
  2038                           tblptru	equ	0xFF8
  2039                           tblptrh	equ	0xFF7
  2040                           tblptrl	equ	0xFF6
  2041                           tablat	equ	0xFF5
  2042                           prodh	equ	0xFF4
  2043                           prodl	equ	0xFF3
  2044                           intcon	equ	0xFF2
  2045                           postinc0	equ	0xFEE
  2046                           fsr0h	equ	0xFEA
  2047                           fsr0l	equ	0xFE9
  2048                           wreg	equ	0xFE8
  2049                           fsr1h	equ	0xFE2
  2050                           fsr1l	equ	0xFE1
  2051                           indf2	equ	0xFDF
  2052                           postinc2	equ	0xFDE
  2053                           fsr2h	equ	0xFDA
  2054                           fsr2l	equ	0xFD9
  2055                           status	equ	0xFD8
  2056                           
  2057 ;; *************** function _Evaluate_Reception *****************
  2058 ;; Defined at:
  2059 ;;		line 189 in file "ignition.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;		None               void
  2066 ;; Registers used:
  2067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2073 ;;      Params:         0       0       0       0
  2074 ;;      Locals:         0       0       0       0
  2075 ;;      Temps:          0       0       0       0
  2076 ;;      Totals:         0       0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    3
  2080 ;; This function calls:
  2081 ;;		_Check_Power
  2082 ;;		_Mark_Ignite
  2083 ;;		_Test_Port
  2084 ;; This function is called by:
  2085 ;;		_Isr
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	text17
  2090  000990                     __ptext17:
  2091                           	opt stack 0
  2092  000990                     _Evaluate_Reception:
  2093                           	opt stack 24
  2094                           
  2095                           ;ignition.c: 195: if (received[2] == 'T') {
  2096                           
  2097                           ;incstack = 0
  2098  000990  0E54               	movlw	84
  2099  000992  1842               	xorwf	_received+2,w,c
  2100  000994  A4D8               	btfss	status,2,c
  2101  000996  D005               	goto	i2l1745
  2102                           
  2103                           ;ignition.c: 196: Check_Power();
  2104  000998  EC8C  F002         	call	_Check_Power	;wreg free
  2105                           
  2106                           ;ignition.c: 197: Test_Port();
  2107  00099C  EC8E  F000         	call	_Test_Port	;wreg free
  2108                           
  2109                           ;ignition.c: 198: } else if (received[2] == 'I') {
  2110  0009A0  0012               	return	
  2111  0009A2                     i2l1745:
  2112  0009A2  0E49               	movlw	73
  2113  0009A4  1842               	xorwf	_received+2,w,c
  2114  0009A6  A4D8               	btfss	status,2,c
  2115  0009A8  0012               	return	
  2116                           
  2117                           ;ignition.c: 199: Mark_Ignite();
  2118  0009AA  ECFC  F004         	call	_Mark_Ignite	;wreg free
  2119  0009AE  0012               	return	
  2120  0009B0                     __end_of_Evaluate_Reception:
  2121                           	opt stack 0
  2122                           pclatu	equ	0xFFB
  2123                           pclath	equ	0xFFA
  2124                           tblptru	equ	0xFF8
  2125                           tblptrh	equ	0xFF7
  2126                           tblptrl	equ	0xFF6
  2127                           tablat	equ	0xFF5
  2128                           prodh	equ	0xFF4
  2129                           prodl	equ	0xFF3
  2130                           intcon	equ	0xFF2
  2131                           postinc0	equ	0xFEE
  2132                           fsr0h	equ	0xFEA
  2133                           fsr0l	equ	0xFE9
  2134                           wreg	equ	0xFE8
  2135                           fsr1h	equ	0xFE2
  2136                           fsr1l	equ	0xFE1
  2137                           indf2	equ	0xFDF
  2138                           postinc2	equ	0xFDE
  2139                           fsr2h	equ	0xFDA
  2140                           fsr2l	equ	0xFD9
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function _Test_Port *****************
  2144 ;; Defined at:
  2145 ;;		line 11 in file "ignition.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;		None               void
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2159 ;;      Params:         0       0       0       0
  2160 ;;      Locals:         0       0       0       0
  2161 ;;      Temps:          0       0       0       0
  2162 ;;      Totals:         0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    1
  2166 ;; This function calls:
  2167 ;;		_Transmit
  2168 ;; This function is called by:
  2169 ;;		_Evaluate_Reception
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text18
  2174  00011C                     __ptext18:
  2175                           	opt stack 0
  2176  00011C                     _Test_Port:
  2177                           	opt stack 25
  2178                           
  2179                           ;ignition.c: 12: switch(received[3]) {
  2180                           
  2181                           ;incstack = 0
  2182  00011C  D0F0               	goto	i2l1677
  2183  00011E                     i2l249:
  2184                           
  2185                           ;ignition.c: 14: if(PORTCbits.RC4 == 1) {
  2186  00011E  A882               	btfss	3970,4,c	;volatile
  2187  000120  D00A               	goto	i2l250
  2188                           
  2189                           ;ignition.c: 15: Transmit(0xAA, 'T', 0, '1');
  2190  000122  0E54               	movlw	84
  2191  000124  6E01               	movwf	Transmit@operation,c
  2192  000126  0E00               	movlw	0
  2193  000128  6E02               	movwf	Transmit@port,c
  2194  00012A  0E31               	movlw	49
  2195  00012C  6E03               	movwf	Transmit@con_status,c
  2196  00012E  0EAA               	movlw	170
  2197  000130  EC09  F004         	call	_Transmit
  2198                           
  2199                           ;ignition.c: 16: }else if(PORTCbits.RC4 == 0) {
  2200  000134  0012               	return	
  2201  000136                     i2l250:
  2202  000136  B882               	btfsc	3970,4,c	;volatile
  2203  000138  0012               	return	
  2204                           
  2205                           ;ignition.c: 17: Transmit(0xAA, 'T', 0, '0');
  2206  00013A  0E54               	movlw	84
  2207  00013C  6E01               	movwf	Transmit@operation,c
  2208  00013E  0E00               	movlw	0
  2209  000140  6E02               	movwf	Transmit@port,c
  2210  000142  0E30               	movlw	48
  2211  000144  6E03               	movwf	Transmit@con_status,c
  2212  000146  0EAA               	movlw	170
  2213  000148  EC09  F004         	call	_Transmit
  2214                           
  2215                           ;ignition.c: 18: }
  2216                           ;ignition.c: 19: break;
  2217  00014C  0012               	return	
  2218  00014E                     i2l254:
  2219                           
  2220                           ;ignition.c: 21: if(PORTDbits.RD2 == 1) {
  2221  00014E  A483               	btfss	3971,2,c	;volatile
  2222  000150  D00A               	goto	i2l255
  2223                           
  2224                           ;ignition.c: 22: Transmit(0xAA, 'T', 1, '1');
  2225  000152  0E54               	movlw	84
  2226  000154  6E01               	movwf	Transmit@operation,c
  2227  000156  0E01               	movlw	1
  2228  000158  6E02               	movwf	Transmit@port,c
  2229  00015A  0E31               	movlw	49
  2230  00015C  6E03               	movwf	Transmit@con_status,c
  2231  00015E  0EAA               	movlw	170
  2232  000160  EC09  F004         	call	_Transmit
  2233                           
  2234                           ;ignition.c: 23: }else if(PORTDbits.RD2 == 0) {
  2235  000164  0012               	return	
  2236  000166                     i2l255:
  2237  000166  B483               	btfsc	3971,2,c	;volatile
  2238  000168  0012               	return	
  2239                           
  2240                           ;ignition.c: 24: Transmit(0xAA, 'T', 1, '0');
  2241  00016A  0E54               	movlw	84
  2242  00016C  6E01               	movwf	Transmit@operation,c
  2243  00016E  0E01               	movlw	1
  2244  000170  6E02               	movwf	Transmit@port,c
  2245  000172  0E30               	movlw	48
  2246  000174  6E03               	movwf	Transmit@con_status,c
  2247  000176  0EAA               	movlw	170
  2248  000178  EC09  F004         	call	_Transmit
  2249                           
  2250                           ;ignition.c: 25: }
  2251                           ;ignition.c: 26: break;
  2252  00017C  0012               	return	
  2253  00017E                     i2l258:
  2254                           
  2255                           ;ignition.c: 28: if(PORTDbits.RD0 == 1) {
  2256  00017E  A083               	btfss	3971,0,c	;volatile
  2257  000180  D00A               	goto	i2l259
  2258                           
  2259                           ;ignition.c: 29: Transmit(0xAA, 'T', 2, '1');
  2260  000182  0E54               	movlw	84
  2261  000184  6E01               	movwf	Transmit@operation,c
  2262  000186  0E02               	movlw	2
  2263  000188  6E02               	movwf	Transmit@port,c
  2264  00018A  0E31               	movlw	49
  2265  00018C  6E03               	movwf	Transmit@con_status,c
  2266  00018E  0EAA               	movlw	170
  2267  000190  EC09  F004         	call	_Transmit
  2268                           
  2269                           ;ignition.c: 30: }else if(PORTDbits.RD0 == 0) {
  2270  000194  0012               	return	
  2271  000196                     i2l259:
  2272  000196  B083               	btfsc	3971,0,c	;volatile
  2273  000198  0012               	return	
  2274                           
  2275                           ;ignition.c: 31: Transmit(0xAA, 'T', 2, '0');
  2276  00019A  0E54               	movlw	84
  2277  00019C  6E01               	movwf	Transmit@operation,c
  2278  00019E  0E02               	movlw	2
  2279  0001A0  6E02               	movwf	Transmit@port,c
  2280  0001A2  0E30               	movlw	48
  2281  0001A4  6E03               	movwf	Transmit@con_status,c
  2282  0001A6  0EAA               	movlw	170
  2283  0001A8  EC09  F004         	call	_Transmit
  2284                           
  2285                           ;ignition.c: 32: }
  2286                           ;ignition.c: 33: break;
  2287  0001AC  0012               	return	
  2288  0001AE                     i2l262:
  2289                           
  2290                           ;ignition.c: 35: if(PORTCbits.RC2 == 1) {
  2291  0001AE  A482               	btfss	3970,2,c	;volatile
  2292  0001B0  D00A               	goto	i2l263
  2293                           
  2294                           ;ignition.c: 36: Transmit(0xAA, 'T', 3, '1');
  2295  0001B2  0E54               	movlw	84
  2296  0001B4  6E01               	movwf	Transmit@operation,c
  2297  0001B6  0E03               	movlw	3
  2298  0001B8  6E02               	movwf	Transmit@port,c
  2299  0001BA  0E31               	movlw	49
  2300  0001BC  6E03               	movwf	Transmit@con_status,c
  2301  0001BE  0EAA               	movlw	170
  2302  0001C0  EC09  F004         	call	_Transmit
  2303                           
  2304                           ;ignition.c: 37: }else if(PORTCbits.RC2 == 0) {
  2305  0001C4  0012               	return	
  2306  0001C6                     i2l263:
  2307  0001C6  B482               	btfsc	3970,2,c	;volatile
  2308  0001C8  0012               	return	
  2309                           
  2310                           ;ignition.c: 38: Transmit(0xAA, 'T', 3, '0');
  2311  0001CA  0E54               	movlw	84
  2312  0001CC  6E01               	movwf	Transmit@operation,c
  2313  0001CE  0E03               	movlw	3
  2314  0001D0  6E02               	movwf	Transmit@port,c
  2315  0001D2  0E30               	movlw	48
  2316  0001D4  6E03               	movwf	Transmit@con_status,c
  2317  0001D6  0EAA               	movlw	170
  2318  0001D8  EC09  F004         	call	_Transmit
  2319                           
  2320                           ;ignition.c: 39: }
  2321                           ;ignition.c: 40: break;
  2322  0001DC  0012               	return	
  2323  0001DE                     i2l266:
  2324                           
  2325                           ;ignition.c: 42: if(PORTEbits.RE2 == 1) {
  2326  0001DE  A484               	btfss	3972,2,c	;volatile
  2327  0001E0  D00A               	goto	i2l267
  2328                           
  2329                           ;ignition.c: 43: Transmit(0xAA, 'T', 4, '1');
  2330  0001E2  0E54               	movlw	84
  2331  0001E4  6E01               	movwf	Transmit@operation,c
  2332  0001E6  0E04               	movlw	4
  2333  0001E8  6E02               	movwf	Transmit@port,c
  2334  0001EA  0E31               	movlw	49
  2335  0001EC  6E03               	movwf	Transmit@con_status,c
  2336  0001EE  0EAA               	movlw	170
  2337  0001F0  EC09  F004         	call	_Transmit
  2338                           
  2339                           ;ignition.c: 44: }else if(PORTEbits.RE2 == 0) {
  2340  0001F4  0012               	return	
  2341  0001F6                     i2l267:
  2342  0001F6  B484               	btfsc	3972,2,c	;volatile
  2343  0001F8  0012               	return	
  2344                           
  2345                           ;ignition.c: 45: Transmit(0xAA, 'T', 4, '0');
  2346  0001FA  0E54               	movlw	84
  2347  0001FC  6E01               	movwf	Transmit@operation,c
  2348  0001FE  0E04               	movlw	4
  2349  000200  6E02               	movwf	Transmit@port,c
  2350  000202  0E30               	movlw	48
  2351  000204  6E03               	movwf	Transmit@con_status,c
  2352  000206  0EAA               	movlw	170
  2353  000208  EC09  F004         	call	_Transmit
  2354                           
  2355                           ;ignition.c: 46: }
  2356                           ;ignition.c: 47: break;
  2357  00020C  0012               	return	
  2358  00020E                     i2l270:
  2359                           
  2360                           ;ignition.c: 49: if(PORTEbits.RE0 == 1) {
  2361  00020E  A084               	btfss	3972,0,c	;volatile
  2362  000210  D00A               	goto	i2l271
  2363                           
  2364                           ;ignition.c: 50: Transmit(0xAA, 'T', 5, '1');
  2365  000212  0E54               	movlw	84
  2366  000214  6E01               	movwf	Transmit@operation,c
  2367  000216  0E05               	movlw	5
  2368  000218  6E02               	movwf	Transmit@port,c
  2369  00021A  0E31               	movlw	49
  2370  00021C  6E03               	movwf	Transmit@con_status,c
  2371  00021E  0EAA               	movlw	170
  2372  000220  EC09  F004         	call	_Transmit
  2373                           
  2374                           ;ignition.c: 51: }else if(PORTEbits.RE0 == 0) {
  2375  000224  0012               	return	
  2376  000226                     i2l271:
  2377  000226  B084               	btfsc	3972,0,c	;volatile
  2378  000228  0012               	return	
  2379                           
  2380                           ;ignition.c: 52: Transmit(0xAA, 'T', 5, '0');
  2381  00022A  0E54               	movlw	84
  2382  00022C  6E01               	movwf	Transmit@operation,c
  2383  00022E  0E05               	movlw	5
  2384  000230  6E02               	movwf	Transmit@port,c
  2385  000232  0E30               	movlw	48
  2386  000234  6E03               	movwf	Transmit@con_status,c
  2387  000236  0EAA               	movlw	170
  2388  000238  EC09  F004         	call	_Transmit
  2389                           
  2390                           ;ignition.c: 53: }
  2391                           ;ignition.c: 54: break;
  2392  00023C  0012               	return	
  2393  00023E                     i2l274:
  2394                           
  2395                           ;ignition.c: 56: if(PORTBbits.RB2 == 1) {
  2396  00023E  A481               	btfss	3969,2,c	;volatile
  2397  000240  D00A               	goto	i2l275
  2398                           
  2399                           ;ignition.c: 57: Transmit(0xAA, 'T', 6, '1');
  2400  000242  0E54               	movlw	84
  2401  000244  6E01               	movwf	Transmit@operation,c
  2402  000246  0E06               	movlw	6
  2403  000248  6E02               	movwf	Transmit@port,c
  2404  00024A  0E31               	movlw	49
  2405  00024C  6E03               	movwf	Transmit@con_status,c
  2406  00024E  0EAA               	movlw	170
  2407  000250  EC09  F004         	call	_Transmit
  2408                           
  2409                           ;ignition.c: 58: }else if(PORTBbits.RB2 == 0) {
  2410  000254  0012               	return	
  2411  000256                     i2l275:
  2412  000256  B481               	btfsc	3969,2,c	;volatile
  2413  000258  0012               	return	
  2414                           
  2415                           ;ignition.c: 59: Transmit(0xAA, 'T', 6, '0');
  2416  00025A  0E54               	movlw	84
  2417  00025C  6E01               	movwf	Transmit@operation,c
  2418  00025E  0E06               	movlw	6
  2419  000260  6E02               	movwf	Transmit@port,c
  2420  000262  0E30               	movlw	48
  2421  000264  6E03               	movwf	Transmit@con_status,c
  2422  000266  0EAA               	movlw	170
  2423  000268  EC09  F004         	call	_Transmit
  2424                           
  2425                           ;ignition.c: 60: }
  2426                           ;ignition.c: 61: break;
  2427  00026C  0012               	return	
  2428  00026E                     i2l278:
  2429                           
  2430                           ;ignition.c: 63: if(PORTBbits.RB4 == 1) {
  2431  00026E  A881               	btfss	3969,4,c	;volatile
  2432  000270  D00A               	goto	i2l279
  2433                           
  2434                           ;ignition.c: 64: Transmit(0xAA, 'T', 7, '1');
  2435  000272  0E54               	movlw	84
  2436  000274  6E01               	movwf	Transmit@operation,c
  2437  000276  0E07               	movlw	7
  2438  000278  6E02               	movwf	Transmit@port,c
  2439  00027A  0E31               	movlw	49
  2440  00027C  6E03               	movwf	Transmit@con_status,c
  2441  00027E  0EAA               	movlw	170
  2442  000280  EC09  F004         	call	_Transmit
  2443                           
  2444                           ;ignition.c: 65: }else if(PORTBbits.RB4 == 0) {
  2445  000284  0012               	return	
  2446  000286                     i2l279:
  2447  000286  B881               	btfsc	3969,4,c	;volatile
  2448  000288  0012               	return	
  2449                           
  2450                           ;ignition.c: 66: Transmit(0xAA, 'T', 7, '0');
  2451  00028A  0E54               	movlw	84
  2452  00028C  6E01               	movwf	Transmit@operation,c
  2453  00028E  0E07               	movlw	7
  2454  000290  6E02               	movwf	Transmit@port,c
  2455  000292  0E30               	movlw	48
  2456  000294  6E03               	movwf	Transmit@con_status,c
  2457  000296  0EAA               	movlw	170
  2458  000298  EC09  F004         	call	_Transmit
  2459                           
  2460                           ;ignition.c: 67: }
  2461                           ;ignition.c: 68: break;
  2462  00029C  0012               	return	
  2463  00029E                     i2l282:
  2464                           
  2465                           ;ignition.c: 70: if(PORTAbits.RA2 == 1) {
  2466  00029E  A480               	btfss	3968,2,c	;volatile
  2467  0002A0  D00A               	goto	i2l283
  2468                           
  2469                           ;ignition.c: 71: Transmit(0xAA, 'T', 8, '1');
  2470  0002A2  0E54               	movlw	84
  2471  0002A4  6E01               	movwf	Transmit@operation,c
  2472  0002A6  0E08               	movlw	8
  2473  0002A8  6E02               	movwf	Transmit@port,c
  2474  0002AA  0E31               	movlw	49
  2475  0002AC  6E03               	movwf	Transmit@con_status,c
  2476  0002AE  0EAA               	movlw	170
  2477  0002B0  EC09  F004         	call	_Transmit
  2478                           
  2479                           ;ignition.c: 72: }else if(PORTAbits.RA2 == 0) {
  2480  0002B4  0012               	return	
  2481  0002B6                     i2l283:
  2482  0002B6  B480               	btfsc	3968,2,c	;volatile
  2483  0002B8  0012               	return	
  2484                           
  2485                           ;ignition.c: 73: Transmit(0xAA, 'T', 8, '0');
  2486  0002BA  0E54               	movlw	84
  2487  0002BC  6E01               	movwf	Transmit@operation,c
  2488  0002BE  0E08               	movlw	8
  2489  0002C0  6E02               	movwf	Transmit@port,c
  2490  0002C2  0E30               	movlw	48
  2491  0002C4  6E03               	movwf	Transmit@con_status,c
  2492  0002C6  0EAA               	movlw	170
  2493  0002C8  EC09  F004         	call	_Transmit
  2494                           
  2495                           ;ignition.c: 74: }
  2496                           ;ignition.c: 75: break;
  2497  0002CC  0012               	return	
  2498  0002CE                     i2l286:
  2499                           
  2500                           ;ignition.c: 77: if(PORTAbits.RA0 == 1) {
  2501  0002CE  A080               	btfss	3968,0,c	;volatile
  2502  0002D0  D00A               	goto	i2l287
  2503                           
  2504                           ;ignition.c: 78: Transmit(0xAA, 'T', 9, '1');
  2505  0002D2  0E54               	movlw	84
  2506  0002D4  6E01               	movwf	Transmit@operation,c
  2507  0002D6  0E09               	movlw	9
  2508  0002D8  6E02               	movwf	Transmit@port,c
  2509  0002DA  0E31               	movlw	49
  2510  0002DC  6E03               	movwf	Transmit@con_status,c
  2511  0002DE  0EAA               	movlw	170
  2512  0002E0  EC09  F004         	call	_Transmit
  2513                           
  2514                           ;ignition.c: 79: }else if(PORTAbits.RA0 == 0) {
  2515  0002E4  0012               	return	
  2516  0002E6                     i2l287:
  2517  0002E6  B080               	btfsc	3968,0,c	;volatile
  2518  0002E8  0012               	return	
  2519                           
  2520                           ;ignition.c: 80: Transmit(0xAA, 'T', 9, '0');
  2521  0002EA  0E54               	movlw	84
  2522  0002EC  6E01               	movwf	Transmit@operation,c
  2523  0002EE  0E09               	movlw	9
  2524  0002F0  6E02               	movwf	Transmit@port,c
  2525  0002F2  0E30               	movlw	48
  2526  0002F4  6E03               	movwf	Transmit@con_status,c
  2527  0002F6  0EAA               	movlw	170
  2528  0002F8  EC09  F004         	call	_Transmit
  2529                           
  2530                           ;ignition.c: 83: }
  2531                           
  2532                           ;ignition.c: 81: }
  2533                           ;ignition.c: 82: break;
  2534  0002FC  0012               	return	
  2535  0002FE                     i2l1677:
  2536  0002FE  5043               	movf	_received+3,w,c
  2537                           
  2538                           ; Switch size 1, requested type "space"
  2539                           ; Number of cases is 10, Range of values is 0 to 9
  2540                           ; switch strategies available:
  2541                           ; Name         Instructions Cycles
  2542                           ; simple_byte           31    16 (average)
  2543                           ;	Chosen strategy is simple_byte
  2544  000300  0A00               	xorlw	0	; case 0
  2545  000302  B4D8               	btfsc	status,2,c
  2546  000304  D70C               	goto	i2l249
  2547  000306  0A01               	xorlw	1	; case 1
  2548  000308  B4D8               	btfsc	status,2,c
  2549  00030A  D721               	goto	i2l254
  2550  00030C  0A03               	xorlw	3	; case 2
  2551  00030E  B4D8               	btfsc	status,2,c
  2552  000310  D736               	goto	i2l258
  2553  000312  0A01               	xorlw	1	; case 3
  2554  000314  B4D8               	btfsc	status,2,c
  2555  000316  D74B               	goto	i2l262
  2556  000318  0A07               	xorlw	7	; case 4
  2557  00031A  B4D8               	btfsc	status,2,c
  2558  00031C  D760               	goto	i2l266
  2559  00031E  0A01               	xorlw	1	; case 5
  2560  000320  B4D8               	btfsc	status,2,c
  2561  000322  D775               	goto	i2l270
  2562  000324  0A03               	xorlw	3	; case 6
  2563  000326  B4D8               	btfsc	status,2,c
  2564  000328  D78A               	goto	i2l274
  2565  00032A  0A01               	xorlw	1	; case 7
  2566  00032C  B4D8               	btfsc	status,2,c
  2567  00032E  D79F               	goto	i2l278
  2568  000330  0A0F               	xorlw	15	; case 8
  2569  000332  B4D8               	btfsc	status,2,c
  2570  000334  D7B4               	goto	i2l282
  2571  000336  0A01               	xorlw	1	; case 9
  2572  000338  A4D8               	btfss	status,2,c
  2573  00033A  0012               	return	
  2574  00033C  D7C8               	goto	i2l286
  2575  00033E                     __end_of_Test_Port:
  2576                           	opt stack 0
  2577                           pclatu	equ	0xFFB
  2578                           pclath	equ	0xFFA
  2579                           tblptru	equ	0xFF8
  2580                           tblptrh	equ	0xFF7
  2581                           tblptrl	equ	0xFF6
  2582                           tablat	equ	0xFF5
  2583                           prodh	equ	0xFF4
  2584                           prodl	equ	0xFF3
  2585                           intcon	equ	0xFF2
  2586                           postinc0	equ	0xFEE
  2587                           fsr0h	equ	0xFEA
  2588                           fsr0l	equ	0xFE9
  2589                           wreg	equ	0xFE8
  2590                           fsr1h	equ	0xFE2
  2591                           fsr1l	equ	0xFE1
  2592                           indf2	equ	0xFDF
  2593                           postinc2	equ	0xFDE
  2594                           fsr2h	equ	0xFDA
  2595                           fsr2l	equ	0xFD9
  2596                           status	equ	0xFD8
  2597                           
  2598 ;; *************** function _Transmit *****************
  2599 ;; Defined at:
  2600 ;;		line 18 in file "communication.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  receiver        1    wreg     unsigned char 
  2603 ;;  operation       1    0[COMRAM] unsigned char 
  2604 ;;  port            1    1[COMRAM] unsigned char 
  2605 ;;  con_status      1    2[COMRAM] unsigned char 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  receiver        1    3[COMRAM] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;		None               void
  2610 ;; Registers used:
  2611 ;;		wreg, status,2
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2617 ;;      Params:         3       0       0       0
  2618 ;;      Locals:         1       0       0       0
  2619 ;;      Temps:          0       0       0       0
  2620 ;;      Totals:         4       0       0       0
  2621 ;;Total ram usage:        4 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_Test_Port
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text19
  2631  000812                     __ptext19:
  2632                           	opt stack 0
  2633  000812                     _Transmit:
  2634                           	opt stack 25
  2635                           
  2636                           ;incstack = 0
  2637                           ;Transmit@receiver stored from wreg
  2638  000812  6E04               	movwf	Transmit@receiver,c
  2639                           
  2640                           ;communication.c: 20: PORTDbits.RD4 = 1;
  2641  000814  8883               	bsf	3971,4,c	;volatile
  2642                           
  2643                           ;communication.c: 21: RCSTA1bits.CREN = 0;
  2644  000816  98AB               	bcf	4011,4,c	;volatile
  2645                           
  2646                           ;communication.c: 23: __nop();
  2647  000818  F000               	nop	
  2648  00081A                     i2l55:
  2649  00081A  A89E               	btfss	3998,4,c	;volatile
  2650  00081C  D7FE               	goto	i2l55
  2651                           
  2652                           ;communication.c: 25: TXSTA1bits.TX9D = 1;
  2653  00081E  80AC               	bsf	4012,0,c	;volatile
  2654                           
  2655                           ;communication.c: 26: TXREG1 = receiver;
  2656  000820  C004  FFAD         	movff	Transmit@receiver,4013	;volatile
  2657  000824                     i2l58:
  2658  000824  A89E               	btfss	3998,4,c	;volatile
  2659  000826  D7FE               	goto	i2l58
  2660                           
  2661                           ;communication.c: 28: TXSTA1bits.TX9D = 0;
  2662  000828  90AC               	bcf	4012,0,c	;volatile
  2663                           
  2664                           ;communication.c: 29: _delay((unsigned long)((1)*(4000000/4000.0)));
  2665  00082A  0EFA               	movlw	250
  2666  00082C                     i2u139_47:
  2667  00082C  F000               	nop	
  2668  00082E  2EE8               	decfsz	wreg,f,c
  2669  000830  D7FD               	goto	i2u139_47
  2670                           
  2671                           ;communication.c: 30: TXREG1 = 0x01;
  2672  000832  0E01               	movlw	1
  2673  000834  6EAD               	movwf	4013,c	;volatile
  2674  000836                     i2l61:
  2675  000836  A89E               	btfss	3998,4,c	;volatile
  2676  000838  D7FE               	goto	i2l61
  2677                           
  2678                           ;communication.c: 32: _delay((unsigned long)((1)*(4000000/4000.0)));
  2679  00083A  0EFA               	movlw	250
  2680  00083C                     i2u140_47:
  2681  00083C  F000               	nop	
  2682  00083E  2EE8               	decfsz	wreg,f,c
  2683  000840  D7FD               	goto	i2u140_47
  2684                           
  2685                           ;communication.c: 33: TXREG1 = operation;
  2686  000842  C001  FFAD         	movff	Transmit@operation,4013	;volatile
  2687  000846                     i2l64:
  2688  000846  A89E               	btfss	3998,4,c	;volatile
  2689  000848  D7FE               	goto	i2l64
  2690                           
  2691                           ;communication.c: 35: _delay((unsigned long)((1)*(4000000/4000.0)));
  2692  00084A  0EFA               	movlw	250
  2693  00084C                     i2u141_47:
  2694  00084C  F000               	nop	
  2695  00084E  2EE8               	decfsz	wreg,f,c
  2696  000850  D7FD               	goto	i2u141_47
  2697                           
  2698                           ;communication.c: 36: TXREG1 = port;
  2699  000852  C002  FFAD         	movff	Transmit@port,4013	;volatile
  2700  000856                     i2l67:
  2701  000856  A89E               	btfss	3998,4,c	;volatile
  2702  000858  D7FE               	goto	i2l67
  2703                           
  2704                           ;communication.c: 38: _delay((unsigned long)((1)*(4000000/4000.0)));
  2705  00085A  0EFA               	movlw	250
  2706  00085C                     i2u142_47:
  2707  00085C  F000               	nop	
  2708  00085E  2EE8               	decfsz	wreg,f,c
  2709  000860  D7FD               	goto	i2u142_47
  2710                           
  2711                           ;communication.c: 39: TXREG1 = con_status;
  2712  000862  C003  FFAD         	movff	Transmit@con_status,4013	;volatile
  2713  000866                     i2l70:
  2714  000866  A89E               	btfss	3998,4,c	;volatile
  2715  000868  D7FE               	goto	i2l70
  2716                           
  2717                           ;communication.c: 41: _delay((unsigned long)((1)*(4000000/4000.0)));
  2718  00086A  0EFA               	movlw	250
  2719  00086C                     i2u143_47:
  2720  00086C  F000               	nop	
  2721  00086E  2EE8               	decfsz	wreg,f,c
  2722  000870  D7FD               	goto	i2u143_47
  2723                           
  2724                           ;communication.c: 42: TXREG1 = p_status;
  2725  000872  C046  FFAD         	movff	_p_status,4013	;volatile
  2726  000876                     i2l73:
  2727  000876  A2AC               	btfss	4012,1,c	;volatile
  2728  000878  D7FE               	goto	i2l73
  2729                           
  2730                           ;communication.c: 44: PORTDbits.RD4 = 0;
  2731  00087A  9883               	bcf	3971,4,c	;volatile
  2732                           
  2733                           ;communication.c: 45: RCSTA1bits.CREN = 1;
  2734  00087C  88AB               	bsf	4011,4,c	;volatile
  2735                           
  2736                           ;communication.c: 46: __nop();
  2737  00087E  F000               	nop	
  2738  000880  0012               	return		;funcret
  2739  000882                     __end_of_Transmit:
  2740                           	opt stack 0
  2741                           pclatu	equ	0xFFB
  2742                           pclath	equ	0xFFA
  2743                           tblptru	equ	0xFF8
  2744                           tblptrh	equ	0xFF7
  2745                           tblptrl	equ	0xFF6
  2746                           tablat	equ	0xFF5
  2747                           prodh	equ	0xFF4
  2748                           prodl	equ	0xFF3
  2749                           intcon	equ	0xFF2
  2750                           postinc0	equ	0xFEE
  2751                           fsr0h	equ	0xFEA
  2752                           fsr0l	equ	0xFE9
  2753                           wreg	equ	0xFE8
  2754                           fsr1h	equ	0xFE2
  2755                           fsr1l	equ	0xFE1
  2756                           indf2	equ	0xFDF
  2757                           postinc2	equ	0xFDE
  2758                           fsr2h	equ	0xFDA
  2759                           fsr2l	equ	0xFD9
  2760                           status	equ	0xFD8
  2761                           
  2762 ;; *************** function _Mark_Ignite *****************
  2763 ;; Defined at:
  2764 ;;		line 167 in file "ignition.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;		None               void
  2771 ;; Registers used:
  2772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2778 ;;      Params:         0       0       0       0
  2779 ;;      Locals:         0       0       0       0
  2780 ;;      Temps:          0       0       0       0
  2781 ;;      Totals:         0       0       0       0
  2782 ;;Total ram usage:        0 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_Evaluate_Reception
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text20
  2792  0009F8                     __ptext20:
  2793                           	opt stack 0
  2794  0009F8                     _Mark_Ignite:
  2795                           	opt stack 26
  2796                           
  2797                           ;ignition.c: 168: Marker[received[3]] = 1;
  2798                           
  2799                           ;incstack = 0
  2800  0009F8  5043               	movf	_received+3,w,c
  2801  0009FA  0D01               	mullw	1
  2802  0009FC  0E60               	movlw	low _Marker
  2803  0009FE  24F3               	addwf	prodl,w,c
  2804  000A00  6ED9               	movwf	fsr2l,c
  2805  000A02  0E00               	movlw	high _Marker
  2806  000A04  20F4               	addwfc	prodh,w,c
  2807  000A06  6EDA               	movwf	fsr2h,c
  2808  000A08  0E01               	movlw	1
  2809  000A0A  6EDF               	movwf	indf2,c
  2810  000A0C  0012               	return		;funcret
  2811  000A0E                     __end_of_Mark_Ignite:
  2812                           	opt stack 0
  2813                           pclatu	equ	0xFFB
  2814                           pclath	equ	0xFFA
  2815                           tblptru	equ	0xFF8
  2816                           tblptrh	equ	0xFF7
  2817                           tblptrl	equ	0xFF6
  2818                           tablat	equ	0xFF5
  2819                           prodh	equ	0xFF4
  2820                           prodl	equ	0xFF3
  2821                           intcon	equ	0xFF2
  2822                           postinc0	equ	0xFEE
  2823                           fsr0h	equ	0xFEA
  2824                           fsr0l	equ	0xFE9
  2825                           wreg	equ	0xFE8
  2826                           fsr1h	equ	0xFE2
  2827                           fsr1l	equ	0xFE1
  2828                           indf2	equ	0xFDF
  2829                           postinc2	equ	0xFDE
  2830                           fsr2h	equ	0xFDA
  2831                           fsr2l	equ	0xFD9
  2832                           status	equ	0xFD8
  2833                           
  2834 ;; *************** function _Check_Power *****************
  2835 ;; Defined at:
  2836 ;;		line 171 in file "ignition.c"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;		None
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  source_power    3   45[COMRAM] float 
  2841 ;;  voltage         3   42[COMRAM] float 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;		None               void
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2851 ;;      Params:         0       0       0       0
  2852 ;;      Locals:         6       0       0       0
  2853 ;;      Temps:          0       0       0       0
  2854 ;;      Totals:         6       0       0       0
  2855 ;;Total ram usage:        6 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    2
  2858 ;; This function calls:
  2859 ;;		___ftdiv
  2860 ;;		___ftge
  2861 ;;		___ftmul
  2862 ;;		___lbtoft
  2863 ;; This function is called by:
  2864 ;;		_Evaluate_Reception
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text21
  2869  000518                     __ptext21:
  2870                           	opt stack 0
  2871  000518                     _Check_Power:
  2872                           	opt stack 24
  2873                           
  2874                           ;ignition.c: 174: float source_power = 0;
  2875                           
  2876                           ;incstack = 0
  2877  000518  0E00               	movlw	0
  2878  00051A  6E2E               	movwf	Check_Power@source_power,c
  2879  00051C  0E00               	movlw	0
  2880  00051E  6E2F               	movwf	Check_Power@source_power+1,c
  2881  000520  0E00               	movlw	0
  2882  000522  6E30               	movwf	Check_Power@source_power+2,c
  2883                           
  2884                           ;ignition.c: 175: float voltage = 0;
  2885  000524  0E00               	movlw	0
  2886  000526  6E2B               	movwf	Check_Power@voltage,c
  2887  000528  0E00               	movlw	0
  2888  00052A  6E2C               	movwf	Check_Power@voltage+1,c
  2889  00052C  0E00               	movlw	0
  2890  00052E  6E2D               	movwf	Check_Power@voltage+2,c
  2891                           
  2892                           ;ignition.c: 177: ADCON0bits.GO_nDONE = 1;
  2893  000530  82C2               	bsf	4034,1,c	;volatile
  2894  000532                     i2l333:
  2895  000532  B2C2               	btfsc	4034,1,c	;volatile
  2896  000534  D7FE               	goto	i2l333
  2897                           
  2898                           ;ignition.c: 179: voltage = ((ADRESH * 4.096) / 255);
  2899  000536  0E12               	movlw	18
  2900  000538  6E10               	movwf	___ftmul@f2,c
  2901  00053A  0E83               	movlw	131
  2902  00053C  6E11               	movwf	___ftmul@f2+1,c
  2903  00053E  0E40               	movlw	64
  2904  000540  6E12               	movwf	___ftmul@f2+2,c
  2905  000542  50C4               	movf	4036,w,c	;volatile
  2906  000544  EC95  F004         	call	___lbtoft
  2907  000548  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  2908  00054C  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  2909  000550  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  2910  000554  EC9F  F001         	call	___ftmul	;wreg free
  2911  000558  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2912  00055C  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2913  000560  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2914  000564  0E00               	movlw	0
  2915  000566  6E1F               	movwf	___ftdiv@f2,c
  2916  000568  0E7F               	movlw	127
  2917  00056A  6E20               	movwf	___ftdiv@f2+1,c
  2918  00056C  0E43               	movlw	67
  2919  00056E  6E21               	movwf	___ftdiv@f2+2,c
  2920  000570  EC19  F002         	call	___ftdiv	;wreg free
  2921  000574  C01C  F02B         	movff	?___ftdiv,Check_Power@voltage
  2922  000578  C01D  F02C         	movff	?___ftdiv+1,Check_Power@voltage+1
  2923  00057C  C01E  F02D         	movff	?___ftdiv+2,Check_Power@voltage+2
  2924                           
  2925                           ;ignition.c: 180: source_power = (4.9286 * voltage);
  2926  000580  C02B  F00D         	movff	Check_Power@voltage,___ftmul@f1
  2927  000584  C02C  F00E         	movff	Check_Power@voltage+1,___ftmul@f1+1
  2928  000588  C02D  F00F         	movff	Check_Power@voltage+2,___ftmul@f1+2
  2929  00058C  0EB7               	movlw	183
  2930  00058E  6E10               	movwf	___ftmul@f2,c
  2931  000590  0E9D               	movlw	157
  2932  000592  6E11               	movwf	___ftmul@f2+1,c
  2933  000594  0E40               	movlw	64
  2934  000596  6E12               	movwf	___ftmul@f2+2,c
  2935  000598  EC9F  F001         	call	___ftmul	;wreg free
  2936  00059C  C00D  F02E         	movff	?___ftmul,Check_Power@source_power
  2937  0005A0  C00E  F02F         	movff	?___ftmul+1,Check_Power@source_power+1
  2938  0005A4  C00F  F030         	movff	?___ftmul+2,Check_Power@source_power+2
  2939                           
  2940                           ;ignition.c: 182: if (source_power < 16.8) {
  2941  0005A8  C02E  F001         	movff	Check_Power@source_power,___ftge@ff1
  2942  0005AC  C02F  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  2943  0005B0  C030  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  2944  0005B4  0E66               	movlw	102
  2945  0005B6  6E04               	movwf	___ftge@ff2,c
  2946  0005B8  0E86               	movlw	134
  2947  0005BA  6E05               	movwf	___ftge@ff2+1,c
  2948  0005BC  0E41               	movlw	65
  2949  0005BE  6E06               	movwf	___ftge@ff2+2,c
  2950  0005C0  EC51  F003         	call	___ftge	;wreg free
  2951  0005C4  B0D8               	btfsc	status,0,c
  2952  0005C6  D003               	goto	i2l1701
  2953                           
  2954                           ;ignition.c: 183: p_status = '0';
  2955  0005C8  0E30               	movlw	48
  2956  0005CA  6E46               	movwf	_p_status,c
  2957                           
  2958                           ;ignition.c: 184: } else if (source_power >= 16.8) {
  2959  0005CC  0012               	return	
  2960  0005CE                     i2l1701:
  2961  0005CE  C02E  F001         	movff	Check_Power@source_power,___ftge@ff1
  2962  0005D2  C02F  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  2963  0005D6  C030  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  2964  0005DA  0E66               	movlw	102
  2965  0005DC  6E04               	movwf	___ftge@ff2,c
  2966  0005DE  0E86               	movlw	134
  2967  0005E0  6E05               	movwf	___ftge@ff2+1,c
  2968  0005E2  0E41               	movlw	65
  2969  0005E4  6E06               	movwf	___ftge@ff2+2,c
  2970  0005E6  EC51  F003         	call	___ftge	;wreg free
  2971  0005EA  A0D8               	btfss	status,0,c
  2972  0005EC  0012               	return	
  2973                           
  2974                           ;ignition.c: 185: p_status = '1';
  2975  0005EE  0E31               	movlw	49
  2976  0005F0  6E46               	movwf	_p_status,c
  2977  0005F2  0012               	return	
  2978  0005F4                     __end_of_Check_Power:
  2979                           	opt stack 0
  2980                           pclatu	equ	0xFFB
  2981                           pclath	equ	0xFFA
  2982                           tblptru	equ	0xFF8
  2983                           tblptrh	equ	0xFF7
  2984                           tblptrl	equ	0xFF6
  2985                           tablat	equ	0xFF5
  2986                           prodh	equ	0xFF4
  2987                           prodl	equ	0xFF3
  2988                           intcon	equ	0xFF2
  2989                           postinc0	equ	0xFEE
  2990                           fsr0h	equ	0xFEA
  2991                           fsr0l	equ	0xFE9
  2992                           wreg	equ	0xFE8
  2993                           fsr1h	equ	0xFE2
  2994                           fsr1l	equ	0xFE1
  2995                           indf2	equ	0xFDF
  2996                           postinc2	equ	0xFDE
  2997                           fsr2h	equ	0xFDA
  2998                           fsr2l	equ	0xFD9
  2999                           status	equ	0xFD8
  3000                           
  3001 ;; *************** function ___lbtoft *****************
  3002 ;; Defined at:
  3003 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbtoft.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  c               1    wreg     unsigned char 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  c               1   11[COMRAM] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  3    8[COMRAM] float 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3017 ;;      Params:         3       0       0       0
  3018 ;;      Locals:         1       0       0       0
  3019 ;;      Temps:          0       0       0       0
  3020 ;;      Totals:         4       0       0       0
  3021 ;;Total ram usage:        4 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    1
  3024 ;; This function calls:
  3025 ;;		___ftpack
  3026 ;; This function is called by:
  3027 ;;		_Check_Power
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text22
  3032  00092A                     __ptext22:
  3033                           	opt stack 0
  3034  00092A                     ___lbtoft:
  3035                           	opt stack 24
  3036                           
  3037                           ;incstack = 0
  3038                           ;___lbtoft@c stored from wreg
  3039  00092A  6E0C               	movwf	___lbtoft@c,c
  3040  00092C  500C               	movf	___lbtoft@c,w,c
  3041  00092E  6E01               	movwf	___ftpack@arg,c
  3042  000930  6A02               	clrf	___ftpack@arg+1,c
  3043  000932  6A03               	clrf	___ftpack@arg+2,c
  3044  000934  0E8E               	movlw	142
  3045  000936  6E04               	movwf	___ftpack@exp,c
  3046  000938  0E00               	movlw	0
  3047  00093A  6E05               	movwf	___ftpack@sign,c
  3048  00093C  ECFA  F002         	call	___ftpack	;wreg free
  3049  000940  C001  F009         	movff	?___ftpack,?___lbtoft
  3050  000944  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  3051  000948  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  3052  00094C  0012               	return	
  3053  00094E                     __end_of___lbtoft:
  3054                           	opt stack 0
  3055                           pclatu	equ	0xFFB
  3056                           pclath	equ	0xFFA
  3057                           tblptru	equ	0xFF8
  3058                           tblptrh	equ	0xFF7
  3059                           tblptrl	equ	0xFF6
  3060                           tablat	equ	0xFF5
  3061                           prodh	equ	0xFF4
  3062                           prodl	equ	0xFF3
  3063                           intcon	equ	0xFF2
  3064                           postinc0	equ	0xFEE
  3065                           fsr0h	equ	0xFEA
  3066                           fsr0l	equ	0xFE9
  3067                           wreg	equ	0xFE8
  3068                           fsr1h	equ	0xFE2
  3069                           fsr1l	equ	0xFE1
  3070                           indf2	equ	0xFDF
  3071                           postinc2	equ	0xFDE
  3072                           fsr2h	equ	0xFDA
  3073                           fsr2l	equ	0xFD9
  3074                           status	equ	0xFD8
  3075                           
  3076 ;; *************** function ___ftmul *****************
  3077 ;; Defined at:
  3078 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  f1              3   12[COMRAM] float 
  3081 ;;  f2              3   15[COMRAM] float 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3084 ;;  sign            1   26[COMRAM] unsigned char 
  3085 ;;  cntr            1   25[COMRAM] unsigned char 
  3086 ;;  exp             1   21[COMRAM] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  3   12[COMRAM] float 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3096 ;;      Params:         6       0       0       0
  3097 ;;      Locals:         6       0       0       0
  3098 ;;      Temps:          3       0       0       0
  3099 ;;      Totals:        15       0       0       0
  3100 ;;Total ram usage:       15 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    1
  3103 ;; This function calls:
  3104 ;;		___ftpack
  3105 ;; This function is called by:
  3106 ;;		_Check_Power
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text23
  3111  00033E                     __ptext23:
  3112                           	opt stack 0
  3113  00033E                     ___ftmul:
  3114                           	opt stack 24
  3115                           
  3116                           ;incstack = 0
  3117  00033E  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3118  000342  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3119  000344  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3120  000346  340E               	rlcf	___ftmul@f1+1,w,c
  3121  000348  3613               	rlcf	??___ftmul& (0+255),f,c
  3122  00034A  E301               	bnc	u90_41
  3123  00034C  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3124  00034E                     u90_41:
  3125  00034E  5013               	movf	??___ftmul,w,c
  3126  000350  6E16               	movwf	___ftmul@exp,c
  3127  000352  5016               	movf	___ftmul@exp,w,c
  3128  000354  A4D8               	btfss	status,2,c
  3129  000356  D007               	goto	i2l1521
  3130  000358  0E00               	movlw	0
  3131  00035A  6E0D               	movwf	?___ftmul,c
  3132  00035C  0E00               	movlw	0
  3133  00035E  6E0E               	movwf	?___ftmul+1,c
  3134  000360  0E00               	movlw	0
  3135  000362  6E0F               	movwf	?___ftmul+2,c
  3136  000364  0012               	return	
  3137  000366                     i2l1521:
  3138  000366  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3139  00036A  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3140  00036C  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3141  00036E  3411               	rlcf	___ftmul@f2+1,w,c
  3142  000370  3613               	rlcf	??___ftmul& (0+255),f,c
  3143  000372  E301               	bnc	u92_41
  3144  000374  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3145  000376                     u92_41:
  3146  000376  5013               	movf	??___ftmul,w,c
  3147  000378  6E1B               	movwf	___ftmul@sign,c
  3148  00037A  501B               	movf	___ftmul@sign,w,c
  3149  00037C  A4D8               	btfss	status,2,c
  3150  00037E  D007               	goto	i2l1527
  3151  000380  0E00               	movlw	0
  3152  000382  6E0D               	movwf	?___ftmul,c
  3153  000384  0E00               	movlw	0
  3154  000386  6E0E               	movwf	?___ftmul+1,c
  3155  000388  0E00               	movlw	0
  3156  00038A  6E0F               	movwf	?___ftmul+2,c
  3157  00038C  0012               	return	
  3158  00038E                     i2l1527:
  3159  00038E  501B               	movf	___ftmul@sign,w,c
  3160  000390  0F7B               	addlw	123
  3161  000392  2616               	addwf	___ftmul@exp,f,c
  3162  000394  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3163  000398  5012               	movf	___ftmul@f2+2,w,c
  3164  00039A  1A1B               	xorwf	___ftmul@sign,f,c
  3165  00039C  0E80               	movlw	128
  3166  00039E  161B               	andwf	___ftmul@sign,f,c
  3167  0003A0  8E0E               	bsf	___ftmul@f1+1,7,c
  3168  0003A2  8E11               	bsf	___ftmul@f2+1,7,c
  3169  0003A4  0EFF               	movlw	255
  3170  0003A6  1610               	andwf	___ftmul@f2,f,c
  3171  0003A8  0EFF               	movlw	255
  3172  0003AA  1611               	andwf	___ftmul@f2+1,f,c
  3173  0003AC  0E00               	movlw	0
  3174  0003AE  1612               	andwf	___ftmul@f2+2,f,c
  3175  0003B0  0E00               	movlw	0
  3176  0003B2  6E17               	movwf	___ftmul@f3_as_product,c
  3177  0003B4  0E00               	movlw	0
  3178  0003B6  6E18               	movwf	___ftmul@f3_as_product+1,c
  3179  0003B8  0E00               	movlw	0
  3180  0003BA  6E19               	movwf	___ftmul@f3_as_product+2,c
  3181  0003BC  0E07               	movlw	7
  3182  0003BE  6E1A               	movwf	___ftmul@cntr,c
  3183  0003C0                     i2l1541:
  3184  0003C0  A00D               	btfss	___ftmul@f1,0,c
  3185  0003C2  D006               	goto	i2l1545
  3186  0003C4  5010               	movf	___ftmul@f2,w,c
  3187  0003C6  2617               	addwf	___ftmul@f3_as_product,f,c
  3188  0003C8  5011               	movf	___ftmul@f2+1,w,c
  3189  0003CA  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3190  0003CC  5012               	movf	___ftmul@f2+2,w,c
  3191  0003CE  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3192  0003D0                     i2l1545:
  3193  0003D0  90D8               	bcf	status,0,c
  3194  0003D2  320F               	rrcf	___ftmul@f1+2,f,c
  3195  0003D4  320E               	rrcf	___ftmul@f1+1,f,c
  3196  0003D6  320D               	rrcf	___ftmul@f1,f,c
  3197  0003D8  90D8               	bcf	status,0,c
  3198  0003DA  3610               	rlcf	___ftmul@f2,f,c
  3199  0003DC  3611               	rlcf	___ftmul@f2+1,f,c
  3200  0003DE  3612               	rlcf	___ftmul@f2+2,f,c
  3201  0003E0  2E1A               	decfsz	___ftmul@cntr,f,c
  3202  0003E2  D7EE               	goto	i2l1541
  3203  0003E4  0E09               	movlw	9
  3204  0003E6  6E1A               	movwf	___ftmul@cntr,c
  3205  0003E8                     i2l1551:
  3206  0003E8  A00D               	btfss	___ftmul@f1,0,c
  3207  0003EA  D006               	goto	i2l1555
  3208  0003EC  5010               	movf	___ftmul@f2,w,c
  3209  0003EE  2617               	addwf	___ftmul@f3_as_product,f,c
  3210  0003F0  5011               	movf	___ftmul@f2+1,w,c
  3211  0003F2  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3212  0003F4  5012               	movf	___ftmul@f2+2,w,c
  3213  0003F6  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3214  0003F8                     i2l1555:
  3215  0003F8  90D8               	bcf	status,0,c
  3216  0003FA  320F               	rrcf	___ftmul@f1+2,f,c
  3217  0003FC  320E               	rrcf	___ftmul@f1+1,f,c
  3218  0003FE  320D               	rrcf	___ftmul@f1,f,c
  3219  000400  90D8               	bcf	status,0,c
  3220  000402  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  3221  000404  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  3222  000406  3217               	rrcf	___ftmul@f3_as_product,f,c
  3223  000408  2E1A               	decfsz	___ftmul@cntr,f,c
  3224  00040A  D7EE               	goto	i2l1551
  3225  00040C  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3226  000410  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3227  000414  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3228  000418  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3229  00041C  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3230  000420  ECFA  F002         	call	___ftpack	;wreg free
  3231  000424  C001  F00D         	movff	?___ftpack,?___ftmul
  3232  000428  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3233  00042C  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3234  000430  0012               	return	
  3235  000432                     __end_of___ftmul:
  3236                           	opt stack 0
  3237                           pclatu	equ	0xFFB
  3238                           pclath	equ	0xFFA
  3239                           tblptru	equ	0xFF8
  3240                           tblptrh	equ	0xFF7
  3241                           tblptrl	equ	0xFF6
  3242                           tablat	equ	0xFF5
  3243                           prodh	equ	0xFF4
  3244                           prodl	equ	0xFF3
  3245                           intcon	equ	0xFF2
  3246                           postinc0	equ	0xFEE
  3247                           fsr0h	equ	0xFEA
  3248                           fsr0l	equ	0xFE9
  3249                           wreg	equ	0xFE8
  3250                           fsr1h	equ	0xFE2
  3251                           fsr1l	equ	0xFE1
  3252                           indf2	equ	0xFDF
  3253                           postinc2	equ	0xFDE
  3254                           fsr2h	equ	0xFDA
  3255                           fsr2l	equ	0xFD9
  3256                           status	equ	0xFD8
  3257                           
  3258 ;; *************** function ___ftge *****************
  3259 ;; Defined at:
  3260 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  ff1             3    0[COMRAM] float 
  3263 ;;  ff2             3    3[COMRAM] float 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;		None               void
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3275 ;;      Params:         6       0       0       0
  3276 ;;      Locals:         0       0       0       0
  3277 ;;      Temps:          3       0       0       0
  3278 ;;      Totals:         9       0       0       0
  3279 ;;Total ram usage:        9 bytes
  3280 ;; Hardware stack levels used:    1
  3281 ;; This function calls:
  3282 ;;		Nothing
  3283 ;; This function is called by:
  3284 ;;		_Check_Power
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text24
  3289  0006A2                     __ptext24:
  3290                           	opt stack 0
  3291  0006A2                     ___ftge:
  3292                           	opt stack 25
  3293                           
  3294                           ;incstack = 0
  3295  0006A2  AE03               	btfss	___ftge@ff1+2,7,c
  3296  0006A4  D016               	goto	i2l1567
  3297  0006A6  C001  F007         	movff	___ftge@ff1,??___ftge
  3298  0006AA  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3299  0006AE  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3300  0006B2  1E07               	comf	??___ftge,f,c
  3301  0006B4  1E08               	comf	??___ftge+1,f,c
  3302  0006B6  1E09               	comf	??___ftge+2,f,c
  3303  0006B8  2A07               	incf	??___ftge,f,c
  3304  0006BA  0E00               	movlw	0
  3305  0006BC  2208               	addwfc	??___ftge+1,f,c
  3306  0006BE  2209               	addwfc	??___ftge+2,f,c
  3307  0006C0  0E00               	movlw	0
  3308  0006C2  2407               	addwf	??___ftge,w,c
  3309  0006C4  6E01               	movwf	___ftge@ff1,c
  3310  0006C6  0E00               	movlw	0
  3311  0006C8  2008               	addwfc	??___ftge+1,w,c
  3312  0006CA  6E02               	movwf	___ftge@ff1+1,c
  3313  0006CC  0E80               	movlw	128
  3314  0006CE  2009               	addwfc	??___ftge+2,w,c
  3315  0006D0  6E03               	movwf	___ftge@ff1+2,c
  3316  0006D2                     i2l1567:
  3317  0006D2  AE06               	btfss	___ftge@ff2+2,7,c
  3318  0006D4  D016               	goto	i2l1571
  3319  0006D6  C004  F007         	movff	___ftge@ff2,??___ftge
  3320  0006DA  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3321  0006DE  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3322  0006E2  1E07               	comf	??___ftge,f,c
  3323  0006E4  1E08               	comf	??___ftge+1,f,c
  3324  0006E6  1E09               	comf	??___ftge+2,f,c
  3325  0006E8  2A07               	incf	??___ftge,f,c
  3326  0006EA  0E00               	movlw	0
  3327  0006EC  2208               	addwfc	??___ftge+1,f,c
  3328  0006EE  2209               	addwfc	??___ftge+2,f,c
  3329  0006F0  0E00               	movlw	0
  3330  0006F2  2407               	addwf	??___ftge,w,c
  3331  0006F4  6E04               	movwf	___ftge@ff2,c
  3332  0006F6  0E00               	movlw	0
  3333  0006F8  2008               	addwfc	??___ftge+1,w,c
  3334  0006FA  6E05               	movwf	___ftge@ff2+1,c
  3335  0006FC  0E80               	movlw	128
  3336  0006FE  2009               	addwfc	??___ftge+2,w,c
  3337  000700  6E06               	movwf	___ftge@ff2+2,c
  3338  000702                     i2l1571:
  3339  000702  0E00               	movlw	0
  3340  000704  1A01               	xorwf	___ftge@ff1,f,c
  3341  000706  0E00               	movlw	0
  3342  000708  1A02               	xorwf	___ftge@ff1+1,f,c
  3343  00070A  0E80               	movlw	128
  3344  00070C  1A03               	xorwf	___ftge@ff1+2,f,c
  3345  00070E  0E00               	movlw	0
  3346  000710  1A04               	xorwf	___ftge@ff2,f,c
  3347  000712  0E00               	movlw	0
  3348  000714  1A05               	xorwf	___ftge@ff2+1,f,c
  3349  000716  0E80               	movlw	128
  3350  000718  1A06               	xorwf	___ftge@ff2+2,f,c
  3351  00071A  5004               	movf	___ftge@ff2,w,c
  3352  00071C  5C01               	subwf	___ftge@ff1,w,c
  3353  00071E  5005               	movf	___ftge@ff2+1,w,c
  3354  000720  5802               	subwfb	___ftge@ff1+1,w,c
  3355  000722  5006               	movf	___ftge@ff2+2,w,c
  3356  000724  5803               	subwfb	___ftge@ff1+2,w,c
  3357  000726  B0D8               	btfsc	status,0,c
  3358  000728  D002               	goto	i2l1577
  3359  00072A  90D8               	bcf	status,0,c
  3360  00072C  0012               	return	
  3361  00072E                     i2l1577:
  3362  00072E  80D8               	bsf	status,0,c
  3363  000730  0012               	return	
  3364  000732                     __end_of___ftge:
  3365                           	opt stack 0
  3366                           pclatu	equ	0xFFB
  3367                           pclath	equ	0xFFA
  3368                           tblptru	equ	0xFF8
  3369                           tblptrh	equ	0xFF7
  3370                           tblptrl	equ	0xFF6
  3371                           tablat	equ	0xFF5
  3372                           prodh	equ	0xFF4
  3373                           prodl	equ	0xFF3
  3374                           intcon	equ	0xFF2
  3375                           postinc0	equ	0xFEE
  3376                           fsr0h	equ	0xFEA
  3377                           fsr0l	equ	0xFE9
  3378                           wreg	equ	0xFE8
  3379                           fsr1h	equ	0xFE2
  3380                           fsr1l	equ	0xFE1
  3381                           indf2	equ	0xFDF
  3382                           postinc2	equ	0xFDE
  3383                           fsr2h	equ	0xFDA
  3384                           fsr2l	equ	0xFD9
  3385                           status	equ	0xFD8
  3386                           
  3387 ;; *************** function ___ftdiv *****************
  3388 ;; Defined at:
  3389 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  f1              3   27[COMRAM] float 
  3392 ;;  f2              3   30[COMRAM] float 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  f3              3   37[COMRAM] float 
  3395 ;;  sign            1   41[COMRAM] unsigned char 
  3396 ;;  exp             1   40[COMRAM] unsigned char 
  3397 ;;  cntr            1   36[COMRAM] unsigned char 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  3   27[COMRAM] float 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0, cstack
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3407 ;;      Params:         6       0       0       0
  3408 ;;      Locals:         6       0       0       0
  3409 ;;      Temps:          3       0       0       0
  3410 ;;      Totals:        15       0       0       0
  3411 ;;Total ram usage:       15 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    1
  3414 ;; This function calls:
  3415 ;;		___ftpack
  3416 ;; This function is called by:
  3417 ;;		_Check_Power
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	text25
  3422  000432                     __ptext25:
  3423                           	opt stack 0
  3424  000432                     ___ftdiv:
  3425                           	opt stack 24
  3426                           
  3427                           ;incstack = 0
  3428  000432  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  3429  000436  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3430  000438  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3431  00043A  341D               	rlcf	___ftdiv@f1+1,w,c
  3432  00043C  3622               	rlcf	??___ftdiv& (0+255),f,c
  3433  00043E  E301               	bnc	u85_41
  3434  000440  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3435  000442                     u85_41:
  3436  000442  5022               	movf	??___ftdiv,w,c
  3437  000444  6E29               	movwf	___ftdiv@exp,c
  3438  000446  5029               	movf	___ftdiv@exp,w,c
  3439  000448  A4D8               	btfss	status,2,c
  3440  00044A  D007               	goto	i2l1475
  3441  00044C  0E00               	movlw	0
  3442  00044E  6E1C               	movwf	?___ftdiv,c
  3443  000450  0E00               	movlw	0
  3444  000452  6E1D               	movwf	?___ftdiv+1,c
  3445  000454  0E00               	movlw	0
  3446  000456  6E1E               	movwf	?___ftdiv+2,c
  3447  000458  0012               	return	
  3448  00045A                     i2l1475:
  3449  00045A  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  3450  00045E  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3451  000460  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3452  000462  3420               	rlcf	___ftdiv@f2+1,w,c
  3453  000464  3622               	rlcf	??___ftdiv& (0+255),f,c
  3454  000466  E301               	bnc	u87_41
  3455  000468  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3456  00046A                     u87_41:
  3457  00046A  5022               	movf	??___ftdiv,w,c
  3458  00046C  6E2A               	movwf	___ftdiv@sign,c
  3459  00046E  502A               	movf	___ftdiv@sign,w,c
  3460  000470  A4D8               	btfss	status,2,c
  3461  000472  D007               	goto	i2l1481
  3462  000474  0E00               	movlw	0
  3463  000476  6E1C               	movwf	?___ftdiv,c
  3464  000478  0E00               	movlw	0
  3465  00047A  6E1D               	movwf	?___ftdiv+1,c
  3466  00047C  0E00               	movlw	0
  3467  00047E  6E1E               	movwf	?___ftdiv+2,c
  3468  000480  0012               	return	
  3469  000482                     i2l1481:
  3470  000482  0E00               	movlw	0
  3471  000484  6E26               	movwf	___ftdiv@f3,c
  3472  000486  0E00               	movlw	0
  3473  000488  6E27               	movwf	___ftdiv@f3+1,c
  3474  00048A  0E00               	movlw	0
  3475  00048C  6E28               	movwf	___ftdiv@f3+2,c
  3476  00048E  502A               	movf	___ftdiv@sign,w,c
  3477  000490  0F89               	addlw	137
  3478  000492  5E29               	subwf	___ftdiv@exp,f,c
  3479  000494  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3480  000498  5021               	movf	___ftdiv@f2+2,w,c
  3481  00049A  1A2A               	xorwf	___ftdiv@sign,f,c
  3482  00049C  0E80               	movlw	128
  3483  00049E  162A               	andwf	___ftdiv@sign,f,c
  3484  0004A0  8E1D               	bsf	___ftdiv@f1+1,7,c
  3485  0004A2  0EFF               	movlw	255
  3486  0004A4  161C               	andwf	___ftdiv@f1,f,c
  3487  0004A6  0EFF               	movlw	255
  3488  0004A8  161D               	andwf	___ftdiv@f1+1,f,c
  3489  0004AA  0E00               	movlw	0
  3490  0004AC  161E               	andwf	___ftdiv@f1+2,f,c
  3491  0004AE  8E20               	bsf	___ftdiv@f2+1,7,c
  3492  0004B0  0EFF               	movlw	255
  3493  0004B2  161F               	andwf	___ftdiv@f2,f,c
  3494  0004B4  0EFF               	movlw	255
  3495  0004B6  1620               	andwf	___ftdiv@f2+1,f,c
  3496  0004B8  0E00               	movlw	0
  3497  0004BA  1621               	andwf	___ftdiv@f2+2,f,c
  3498  0004BC  0E18               	movlw	24
  3499  0004BE  6E25               	movwf	___ftdiv@cntr,c
  3500  0004C0                     i2l1501:
  3501  0004C0  90D8               	bcf	status,0,c
  3502  0004C2  3626               	rlcf	___ftdiv@f3,f,c
  3503  0004C4  3627               	rlcf	___ftdiv@f3+1,f,c
  3504  0004C6  3628               	rlcf	___ftdiv@f3+2,f,c
  3505  0004C8  501F               	movf	___ftdiv@f2,w,c
  3506  0004CA  5C1C               	subwf	___ftdiv@f1,w,c
  3507  0004CC  5020               	movf	___ftdiv@f2+1,w,c
  3508  0004CE  581D               	subwfb	___ftdiv@f1+1,w,c
  3509  0004D0  5021               	movf	___ftdiv@f2+2,w,c
  3510  0004D2  581E               	subwfb	___ftdiv@f1+2,w,c
  3511  0004D4  A0D8               	btfss	status,0,c
  3512  0004D6  D007               	goto	i2l672
  3513  0004D8  501F               	movf	___ftdiv@f2,w,c
  3514  0004DA  5E1C               	subwf	___ftdiv@f1,f,c
  3515  0004DC  5020               	movf	___ftdiv@f2+1,w,c
  3516  0004DE  5A1D               	subwfb	___ftdiv@f1+1,f,c
  3517  0004E0  5021               	movf	___ftdiv@f2+2,w,c
  3518  0004E2  5A1E               	subwfb	___ftdiv@f1+2,f,c
  3519  0004E4  8026               	bsf	___ftdiv@f3,0,c
  3520  0004E6                     i2l672:
  3521  0004E6  90D8               	bcf	status,0,c
  3522  0004E8  361C               	rlcf	___ftdiv@f1,f,c
  3523  0004EA  361D               	rlcf	___ftdiv@f1+1,f,c
  3524  0004EC  361E               	rlcf	___ftdiv@f1+2,f,c
  3525  0004EE  2E25               	decfsz	___ftdiv@cntr,f,c
  3526  0004F0  D7E7               	goto	i2l1501
  3527  0004F2  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  3528  0004F6  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3529  0004FA  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3530  0004FE  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  3531  000502  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  3532  000506  ECFA  F002         	call	___ftpack	;wreg free
  3533  00050A  C001  F01C         	movff	?___ftpack,?___ftdiv
  3534  00050E  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  3535  000512  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  3536  000516  0012               	return	
  3537  000518                     __end_of___ftdiv:
  3538                           	opt stack 0
  3539                           pclatu	equ	0xFFB
  3540                           pclath	equ	0xFFA
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           prodh	equ	0xFF4
  3546                           prodl	equ	0xFF3
  3547                           intcon	equ	0xFF2
  3548                           postinc0	equ	0xFEE
  3549                           fsr0h	equ	0xFEA
  3550                           fsr0l	equ	0xFE9
  3551                           wreg	equ	0xFE8
  3552                           fsr1h	equ	0xFE2
  3553                           fsr1l	equ	0xFE1
  3554                           indf2	equ	0xFDF
  3555                           postinc2	equ	0xFDE
  3556                           fsr2h	equ	0xFDA
  3557                           fsr2l	equ	0xFD9
  3558                           status	equ	0xFD8
  3559                           
  3560 ;; *************** function ___ftpack *****************
  3561 ;; Defined at:
  3562 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  arg             3    0[COMRAM] unsigned um
  3565 ;;  exp             1    3[COMRAM] unsigned char 
  3566 ;;  sign            1    4[COMRAM] unsigned char 
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  3    0[COMRAM] float 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3578 ;;      Params:         5       0       0       0
  3579 ;;      Locals:         0       0       0       0
  3580 ;;      Temps:          3       0       0       0
  3581 ;;      Totals:         8       0       0       0
  3582 ;;Total ram usage:        8 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		___ftdiv
  3588 ;;		___ftmul
  3589 ;;		___lbtoft
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           	psect	text26
  3594  0005F4                     __ptext26:
  3595                           	opt stack 0
  3596  0005F4                     ___ftpack:
  3597                           	opt stack 24
  3598                           
  3599                           ;incstack = 0
  3600  0005F4  5004               	movf	___ftpack@exp,w,c
  3601  0005F6  B4D8               	btfsc	status,2,c
  3602  0005F8  D005               	goto	i2l1413
  3603  0005FA  5001               	movf	___ftpack@arg,w,c
  3604  0005FC  1002               	iorwf	___ftpack@arg+1,w,c
  3605  0005FE  1003               	iorwf	___ftpack@arg+2,w,c
  3606  000600  A4D8               	btfss	status,2,c
  3607  000602  D00C               	goto	i2l1419
  3608  000604                     i2l1413:
  3609  000604  0E00               	movlw	0
  3610  000606  6E01               	movwf	?___ftpack,c
  3611  000608  0E00               	movlw	0
  3612  00060A  6E02               	movwf	?___ftpack+1,c
  3613  00060C  0E00               	movlw	0
  3614  00060E  6E03               	movwf	?___ftpack+2,c
  3615  000610  0012               	return	
  3616  000612                     i2l1417:
  3617  000612  2A04               	incf	___ftpack@exp,f,c
  3618  000614  90D8               	bcf	status,0,c
  3619  000616  3203               	rrcf	___ftpack@arg+2,f,c
  3620  000618  3202               	rrcf	___ftpack@arg+1,f,c
  3621  00061A  3201               	rrcf	___ftpack@arg,f,c
  3622  00061C                     i2l1419:
  3623  00061C  0E00               	movlw	0
  3624  00061E  1401               	andwf	___ftpack@arg,w,c
  3625  000620  6E06               	movwf	??___ftpack& (0+255),c
  3626  000622  0E00               	movlw	0
  3627  000624  1402               	andwf	___ftpack@arg+1,w,c
  3628  000626  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3629  000628  0EFE               	movlw	254
  3630  00062A  1403               	andwf	___ftpack@arg+2,w,c
  3631  00062C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3632  00062E  5006               	movf	??___ftpack,w,c
  3633  000630  1007               	iorwf	??___ftpack+1,w,c
  3634  000632  1008               	iorwf	??___ftpack+2,w,c
  3635  000634  B4D8               	btfsc	status,2,c
  3636  000636  D00C               	goto	i2l1425
  3637  000638  D7EC               	goto	i2l1417
  3638  00063A                     i2l1421:
  3639  00063A  2A04               	incf	___ftpack@exp,f,c
  3640  00063C  0E01               	movlw	1
  3641  00063E  2601               	addwf	___ftpack@arg,f,c
  3642  000640  0E00               	movlw	0
  3643  000642  2202               	addwfc	___ftpack@arg+1,f,c
  3644  000644  0E00               	movlw	0
  3645  000646  2203               	addwfc	___ftpack@arg+2,f,c
  3646  000648  90D8               	bcf	status,0,c
  3647  00064A  3203               	rrcf	___ftpack@arg+2,f,c
  3648  00064C  3202               	rrcf	___ftpack@arg+1,f,c
  3649  00064E  3201               	rrcf	___ftpack@arg,f,c
  3650  000650                     i2l1425:
  3651  000650  0E00               	movlw	0
  3652  000652  1401               	andwf	___ftpack@arg,w,c
  3653  000654  6E06               	movwf	??___ftpack& (0+255),c
  3654  000656  0E00               	movlw	0
  3655  000658  1402               	andwf	___ftpack@arg+1,w,c
  3656  00065A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3657  00065C  0EFF               	movlw	255
  3658  00065E  1403               	andwf	___ftpack@arg+2,w,c
  3659  000660  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3660  000662  5006               	movf	??___ftpack,w,c
  3661  000664  1007               	iorwf	??___ftpack+1,w,c
  3662  000666  1008               	iorwf	??___ftpack+2,w,c
  3663  000668  B4D8               	btfsc	status,2,c
  3664  00066A  D006               	goto	i2l1429
  3665  00066C  D7E6               	goto	i2l1421
  3666  00066E                     i2l1427:
  3667  00066E  0604               	decf	___ftpack@exp,f,c
  3668  000670  90D8               	bcf	status,0,c
  3669  000672  3601               	rlcf	___ftpack@arg,f,c
  3670  000674  3602               	rlcf	___ftpack@arg+1,f,c
  3671  000676  3603               	rlcf	___ftpack@arg+2,f,c
  3672  000678                     i2l1429:
  3673  000678  BE02               	btfsc	___ftpack@arg+1,7,c
  3674  00067A  D003               	goto	i2l614
  3675  00067C  0E02               	movlw	2
  3676  00067E  6004               	cpfslt	___ftpack@exp,c
  3677  000680  D7F6               	goto	i2l1427
  3678  000682                     i2l614:
  3679  000682  A004               	btfss	___ftpack@exp,0,c
  3680  000684  9E02               	bcf	___ftpack@arg+1,7,c
  3681  000686  90D8               	bcf	status,0,c
  3682  000688  3204               	rrcf	___ftpack@exp,f,c
  3683  00068A  5004               	movf	___ftpack@exp,w,c
  3684  00068C  1203               	iorwf	___ftpack@arg+2,f,c
  3685  00068E  5005               	movf	___ftpack@sign,w,c
  3686  000690  A4D8               	btfss	status,2,c
  3687  000692  8E03               	bsf	___ftpack@arg+2,7,c
  3688  000694  C001  F001         	movff	___ftpack@arg,?___ftpack
  3689  000698  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3690  00069C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3691  0006A0  0012               	return	
  3692  0006A2                     __end_of___ftpack:
  3693                           	opt stack 0
  3694  0000                     pclatu	equ	0xFFB
  3695                           pclath	equ	0xFFA
  3696                           tblptru	equ	0xFF8
  3697                           tblptrh	equ	0xFF7
  3698                           tblptrl	equ	0xFF6
  3699                           tablat	equ	0xFF5
  3700                           prodh	equ	0xFF4
  3701                           prodl	equ	0xFF3
  3702                           intcon	equ	0xFF2
  3703                           postinc0	equ	0xFEE
  3704                           fsr0h	equ	0xFEA
  3705                           fsr0l	equ	0xFE9
  3706                           wreg	equ	0xFE8
  3707                           fsr1h	equ	0xFE2
  3708                           fsr1l	equ	0xFE1
  3709                           indf2	equ	0xFDF
  3710                           postinc2	equ	0xFDE
  3711                           fsr2h	equ	0xFDA
  3712                           fsr2l	equ	0xFD9
  3713                           status	equ	0xFD8
  3714                           pclatu	equ	0xFFB
  3715                           pclath	equ	0xFFA
  3716                           tblptru	equ	0xFF8
  3717                           tblptrh	equ	0xFF7
  3718                           tblptrl	equ	0xFF6
  3719                           tablat	equ	0xFF5
  3720                           prodh	equ	0xFF4
  3721                           prodl	equ	0xFF3
  3722                           intcon	equ	0xFF2
  3723                           postinc0	equ	0xFEE
  3724                           fsr0h	equ	0xFEA
  3725                           fsr0l	equ	0xFE9
  3726                           wreg	equ	0xFE8
  3727                           fsr1h	equ	0xFE2
  3728                           fsr1l	equ	0xFE1
  3729                           indf2	equ	0xFDF
  3730                           postinc2	equ	0xFDE
  3731                           fsr2h	equ	0xFDA
  3732                           fsr2l	equ	0xFD9
  3733                           status	equ	0xFD8
  3734                           
  3735                           	psect	rparam
  3736  0000                     pclatu	equ	0xFFB
  3737                           pclath	equ	0xFFA
  3738                           tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           prodh	equ	0xFF4
  3743                           prodl	equ	0xFF3
  3744                           intcon	equ	0xFF2
  3745                           postinc0	equ	0xFEE
  3746                           fsr0h	equ	0xFEA
  3747                           fsr0l	equ	0xFE9
  3748                           wreg	equ	0xFE8
  3749                           fsr1h	equ	0xFE2
  3750                           fsr1l	equ	0xFE1
  3751                           indf2	equ	0xFDF
  3752                           postinc2	equ	0xFDE
  3753                           fsr2h	equ	0xFDA
  3754                           fsr2l	equ	0xFD9
  3755                           status	equ	0xFD8
  3756                           
  3757                           	psect	temp
  3758  000047                     btemp:
  3759                           	opt stack 0
  3760  000047                     	ds	1
  3761  0000                     int$flags	set	btemp
  3762                           pclatu	equ	0xFFB
  3763                           pclath	equ	0xFFA
  3764                           tblptru	equ	0xFF8
  3765                           tblptrh	equ	0xFF7
  3766                           tblptrl	equ	0xFF6
  3767                           tablat	equ	0xFF5
  3768                           prodh	equ	0xFF4
  3769                           prodl	equ	0xFF3
  3770                           intcon	equ	0xFF2
  3771                           postinc0	equ	0xFEE
  3772                           fsr0h	equ	0xFEA
  3773                           fsr0l	equ	0xFE9
  3774                           wreg	equ	0xFE8
  3775                           fsr1h	equ	0xFE2
  3776                           fsr1l	equ	0xFE1
  3777                           indf2	equ	0xFDF
  3778                           postinc2	equ	0xFDE
  3779                           fsr2h	equ	0xFDA
  3780                           fsr2l	equ	0xFD9
  3781                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     63      70
    BANK0           160      3      13
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Evaluate_Reception->_Check_Power
    _Test_Port->_Transmit
    _Check_Power->___ftdiv
    ___lbtoft->___ftpack
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    _main->_Check_Ignition
    _Init->_InitVar
    _Check_Ignition->_Disable_Port
    _Check_Ignition->_Ignite_Port

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     224
                     _Check_Ignition
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0      68
                            _InitADC
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                   _InitTransmission
                           _InitTris
                            _InitVar
 ---------------------------------------------------------------------------------
 (2) _InitVar                                              1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Ignition                                       2     2      0     156
                                              1 BANK0      2     2      0
                       _Disable_Port
                        _Ignite_Port
                           _On_Timer
 ---------------------------------------------------------------------------------
 (2) _On_Timer                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ignite_Port                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Disable_Port                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 15    15      0   11768
                                             48 COMRAM    15    15      0
                 _Evaluate_Reception
                            _Receive
                       _Receive_Dump
 ---------------------------------------------------------------------------------
 (4) _Receive_Dump                                         1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Evaluate_Reception                                   0     0      0   11699
                        _Check_Power
                        _Mark_Ignite
                          _Test_Port
 ---------------------------------------------------------------------------------
 (5) _Test_Port                                            0     0      0    3928
                           _Transmit
 ---------------------------------------------------------------------------------
 (6) _Transmit                                             4     1      3    3928
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _Mark_Ignite                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Check_Power                                          6     6      0    7771
                                             42 COMRAM     6     6      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (6) ___lbtoft                                             4     1      3    2053
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    2715
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     392
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             15     9      6    2541
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Ignition
     _Disable_Port
     _Ignite_Port
     _On_Timer
   _Init
     _InitADC
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTransmission
     _InitTris
     _InitVar

 _Isr (ROOT)
   _Evaluate_Reception
     _Check_Power
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftge
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _Mark_Ignite
     _Test_Port
       _Transmit
   _Receive
   _Receive_Dump

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      3       D       4        8.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     3F      46       1       74.5%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      53       8        0.0%
DATA                 0      0      53      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Feb 18 22:03:48 2017

           ??_Check_Ignition 006B                           l21 0A44                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                          l300 074C                          l301 0750  
                        l302 0754                          l311 07AC                          l303 0758  
                        l312 07B0                          l304 075C                          l313 07B4  
                        l314 07B8                          l315 07BC                          l316 07C0  
                        l317 07C4                          l309 07A8                          l318 07C8  
                        l319 07CC                          l294 0738                          l296 073C  
                        l297 0740                          l298 0744                          l299 0748  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000                          _Isr 0008  
                        prod 000FF3                          wreg 000FE8                   _TXSTA1bits 000FAC  
              ??_Ignite_Port 006A                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0025  
                       ?_Isr 0001                ??_Mark_Ignite 0001                 ___ftdiv@sign 002A  
                       l1621 090E                         l1713 0888                         l1617 0904  
                       l1723 08B8                         l1725 08C0                         l1717 0892  
                       l1683 0760                         l1689 07D0                         i2l61 0836  
                       i2l70 0866                         i2l55 081A                         i2l64 0846  
                       i2l73 0876                         i2l58 0824                         i2l67 0856  
                       i2l83 0A2C                         Isr@c 003F                         _Init 094E  
                       _main 0A40                 ___ftpack@arg 0001                 ___ftpack@exp 0004  
                       fsr0h 000FEA                         fsr1h 000FE2                         fsr0l 000FE9  
                       fsr2h 000FDA                         fsr1l 000FE1                         indf2 000FDF  
                       fsr2l 000FD9                         btemp 0047                __CFG_BORV$190 000000  
               Transmit@port 0002                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 0118                __CFG_IESO$OFF 000000  
               ___ftmul@cntr 001A                 ___param_bank 000010                 ___ftmul@sign 001B  
            __end_of_InitADC 0A22                _InitInterrupt 0A58              __end_of_InitVar 092A  
                      ??_Isr 0031              __end_of_Receive 0A40                 _BAUDCON1bits 000FB8  
                _Check_Power 0518                        ?_Init 0001         __end_of_Disable_Port 0812  
                      ?_main 0001              __end_of___ftdiv 0518              __end_of___ftmul 0432  
                      _T1CON 000FCD            _InitMiscellaneous 0A62                        i2l250 0136  
                      i2l333 0532                        i2l270 020E                        i2l262 01AE  
                      i2l254 014E                        i2l271 0226                        i2l263 01C6  
                      i2l255 0166                        i2l249 011E                        i2l282 029E  
                      i2l274 023E                        i2l266 01DE                        i2l258 017E  
                      i2l283 02B6                        i2l275 0256                        i2l267 01F6  
                      i2l259 0196                        i2l380 0072                        i2l614 0682  
                      i2l286 02CE                        i2l278 026E                        i2l287 02E6  
                      i2l279 0286                        i2l379 0076                        i2l389 00DC  
                      i2l672 04E6                        _TMR1H 000FCF                        _TMR1L 000FCE  
                      _PORTA 000F80                        _PORTB 000F81                        _PORTC 000F82  
                      _PORTD 000F83                        _PORTE 000F84                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        u90_41 034E                        u92_41 0376  
                      u85_41 0442                        u87_41 046A                __CFG_WRT0$OFF 000000  
   __end_of_InitTransmission 09CC                __CFG_WRT1$OFF 000000           ?_InitMiscellaneous 0001  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
              __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000  
             __CFG_EBTRB$OFF 000000           __CFG_MCLRE$EXTMCLR 000000                ___ftpack@sign 0005  
             __pbitbssCOMRAM 0228               __CFG_BOREN$OFF 000000          ??_InitMiscellaneous 006A  
                      tablat 000FF5                        status 000FD8          __end_of_Ignite_Port 07A2  
        __end_of_Mark_Ignite 0A0E               ?_InitInterrupt 0001              __initialization 08C6  
               __end_of_Init 0970                 __end_of_main 0A4C             __end_of_InitPort 09F8  
           __end_of_InitTris 09E2             __end_of_On_Timer 0A58    __end_of_InitMiscellaneous 0A68  
                     ??_Init 006B   __end_of_Evaluate_Reception 09B0                       ??_main 006D  
            _slave_addressed 0229                __activetblptr 000002                ?_Receive_Dump 0001  
           __end_of_Transmit 0882                       _ADCON0 000FC2                       _ADCON1 000FC1  
                     _ADCON2 000FC0                       _ADRESH 000FC4                       _CCPR1H 000FBF  
                     _CCPR1L 000FBE                       _ANSELA 000F38                       _ANSELB 000F39  
                     _ANSELC 000F3A                       _ANSELD 000F3B                       _ANSELE 000F3C  
           __end_of___ftpack 06A2             __end_of___lbtoft 094E                       i2l1421 063A  
                     i2l1413 0604                       i2l1501 04C0                       i2l1425 0650  
                     i2l1417 0612                       i2l1521 0366                       i2l1427 066E  
                     i2l1419 061C                       i2l1429 0678                       i2l1541 03C0  
                     i2l1701 05CE                       i2l1551 03E8                       i2l1527 038E  
                     i2l1481 0482                       i2l1545 03D0                       i2l1475 045A  
                     i2l1571 0702                       i2l1555 03F8                       i2l1733 0A3C  
             __CFG_WDTEN$OFF 000000                       i2l1567 06D2                       i2l1577 072E  
                     i2l1745 09A2                       i2l1677 02FE                       i2l1781 00A8  
                     i2l1791 00C4                       i2l1787 00BC                       i2l1779 00A4  
                     _RCREG1 000FAE                       _OSCCON 000FD3           __size_of_InitAnsel 0020  
                     _SPBRG1 000FAF                       _TXREG1 000FAD                    ??_InitADC 006A  
    Check_Power@source_power 002E                    ??_InitVar 006A                    ??_Receive 0001  
                     _Marker 0060               __CFG_XINST$OFF 000000                 _CCPTMRS0bits 000F49  
                     ___ftge 06A2                    ??___ftdiv 0022                    ??___ftmul 0013  
                     clear_0 08CC        ___ftmul@f3_as_product 0017           __size_of_Test_Port 0222  
               __pdataCOMRAM 0046               ??_Receive_Dump 0001                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                  _Ignite_Port 0732  
            __CFG_HFOFST$OFF 000000                  _Mark_Ignite 09F8                   __accesstop 0060  
    __end_of__initialization 08F0              __CFG_PBADEN$OFF 000000                   ___ftge@ff1 0001  
                 ___ftge@ff2 0004              ??_InitInterrupt 006A                ___rparam_used 000001  
                 ___ftdiv@f1 001C                   ___ftdiv@f2 001F                   ___ftdiv@f3 0026  
                 ___lbtoft@c 000C                   ___ftmul@f1 000D                   ___ftmul@f2 0010  
             __pcstackCOMRAM 0001        __size_of_Disable_Port 0070   __size_of_InitMiscellaneous 0006  
          __end_of_InitAnsel 0990                   __pbssBANK0 0060              __CFG_PLLCFG$OFF 000000  
                  ?_InitPort 0001                    ?_InitTris 0001                    ?_On_Timer 0001  
               _Disable_Port 07A2            __end_of_Test_Port 033E           __CFG_CCP2MX$PORTC1 000000  
                    ?___ftge 0001           __CFG_CCP3MX$PORTB5 000000                    ?_Transmit 0001  
                    _CCP1CON 000FBD                 ?_Check_Power 0001                    ?___ftpack 0001  
                  ?___lbtoft 0009            ?_InitTransmission 0001            __CFG_PRICLKEN$OFF 000000  
         ??_InitTransmission 006A                   ??_InitPort 006A                   ??_InitTris 006A  
                 ??_On_Timer 006A                      _InitADC 0A0E                      _InitVar 08FE  
            __CFG_PWRTEN$OFF 000000                      _Receive 0A32                      __Hparam 0000  
       __end_of_Receive_Dump 0A32                      __Lparam 0000              __size_of___ftge 0090  
                    ___ftdiv 0432                      ___ftmul 033E             Receive_Dump@dump 0001  
                 ??_Transmit 0004              __CFG_STVREN$OFF 000000                      __pcinit 08C6  
                 ??___ftpack 0006                   ??___lbtoft 000C                      __ramtop 0300  
                    __ptext0 0A40                      __ptext1 094E                      __ptext2 08FE  
                    __ptext3 09CC                      __ptext4 09B0                      __ptext5 09E2  
                    __ptext6 0A62                      __ptext7 0A58                      __ptext8 0970  
                    __ptext9 0A0E                    _T1CONbits 000FCD                 __size_of_Isr 0110  
    __size_of_Check_Ignition 0044                      _overrun 0228         end_of_initialization 08F0  
         _Evaluate_Reception 0990                __Lmediumconst 0000          ?_Evaluate_Reception 0001  
   Ignite_Port@ignite_number 006A                      postinc0 000FEE                      postinc2 000FDE  
         Check_Power@voltage 002B           Transmit@con_status 0003                    _PORTAbits 000F80  
                  _PORTBbits 000F81                    _PORTCbits 000F82                    _PORTDbits 000F83  
                  _PORTEbits 000F84         ??_Evaluate_Reception 0031                    _TRISCbits 000F94  
               ?_Ignite_Port 0001                 ?_Mark_Ignite 0001                  ___ftdiv@exp 0029  
                ___ftmul@exp 0016               __end_of___ftge 0732                __pidataCOMRAM 0A68  
       __size_of_Check_Power 00DC          start_initialization 08C6                    _InitAnsel 0970  
                __end_of_Isr 0118        __size_of_Receive_Dump 0010              Check_Ignition@c 006C  
          __size_of_InitPort 0016            __size_of_InitTris 0016            __size_of_On_Timer 000C  
      __end_of_InitInterrupt 0A62                     ??___ftge 0007                    _Test_Port 011C  
          __size_of_Transmit 0070            __size_of___ftpack 00AE            __size_of___lbtoft 0024  
             _Check_Ignition 0882                  __pbssCOMRAM 0040                   ?_InitAnsel 0001  
              __pcstackBANK0 006A                 _Receive_Dump 0A22                     ?_InitADC 0001  
                   ?_InitVar 0001                     ?_Receive 0001    __size_of_InitTransmission 001C  
                  __pintcode 0008                   ?_Test_Port 0001                     ?___ftdiv 001C  
                   ?___ftmul 000D       __end_of_Check_Ignition 08C6         __size_of_Ignite_Port 0070  
       __size_of_Mark_Ignite 0016                     _PIE1bits 000F9D                     i2u140_47 083C  
                   i2u141_47 084C                     i2u142_47 085C                     i2u143_47 086C  
                   i2u139_47 082C                     _PIR1bits 000F9E             __CFG_WDTPS$32768 000000  
                   _VREFCON0 000F42                   _ADCON0bits 000FC2              ?_Check_Ignition 0001  
                   InitVar@c 006A                  ??_InitAnsel 006A              _receive_counter 0044  
                   _InitPort 09E2                     _InitTris 09CC                     _On_Timer 0A4C  
          Transmit@operation 0001             __size_of_InitADC 0014                     __Hrparam 0000  
           __size_of_InitVar 002C             __size_of_Receive 000E                     __Lrparam 0000  
          __CFG_P2BMX$PORTD2 000000                  ??_Test_Port 0005                     _Transmit 0812  
           __size_of___ftdiv 00E6             __size_of___ftmul 00F4                     ___ftpack 05F4  
                   ___lbtoft 092A  __size_of_Evaluate_Reception 0020                     __ptext10 0882  
                   __ptext11 0A4C                     __ptext20 09F8                     __ptext12 0732  
                   __ptext21 0518                     __ptext13 07A2                     __ptext22 092A  
                   __ptext23 033E                     __ptext15 0A22                     __ptext24 06A2  
                   __ptext16 0A32                     __ptext25 0432                     __ptext17 0990  
                   __ptext26 05F4                     __ptext18 011C                     __ptext19 0812  
              __size_of_Init 0022                ?_Disable_Port 0001                __size_of_main 000C  
                   _received 0040                     _p_status 0046             _InitTransmission 09B0  
                   int$flags 0047                ??_Check_Power 002B             Transmit@receiver 0004  
 Disable_Port@disable_number 006A                   _INTCONbits 000FF2                     intlevel2 0000  
             ??_Disable_Port 006A                   _RCSTA1bits 000FAB          __end_of_Check_Power 05F4  
          __CFG_T3CMX$PORTC0 000000       __size_of_InitInterrupt 000A            __CFG_FOSC$INTIO67 000000  
