

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Jan 29 16:49:36 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           	psect	idataCOMRAM
    47  001046                     __pidataCOMRAM:
    48                           	opt stack 0
    49                           
    50                           ;initializer for _p_status
    51  001046  30                 	db	48
    52  0000                     _ANSELA	set	3896
    53  0000                     _ANSELB	set	3897
    54  0000                     _ANSELC	set	3898
    55  0000                     _ANSELD	set	3899
    56  0000                     _ANSELE	set	3900
    57  0000                     _VREFCON0	set	3906
    58  0000                     _VREFCON1	set	3905
    59  0000                     _VREFCON2bits	set	3904
    60  0000                     _ADCON0	set	4034
    61  0000                     _ADCON0bits	set	4034
    62  0000                     _ADCON1	set	4033
    63  0000                     _ADCON2	set	4032
    64  0000                     _ADRESH	set	4036
    65  0000                     _BAUDCON1bits	set	4024
    66  0000                     _INTCONbits	set	4082
    67  0000                     _OSCCON	set	4051
    68  0000                     _PIE1bits	set	3997
    69  0000                     _PIR1bits	set	3998
    70  0000                     _PORTA	set	3968
    71  0000                     _PORTAbits	set	3968
    72  0000                     _PORTB	set	3969
    73  0000                     _PORTBbits	set	3969
    74  0000                     _PORTC	set	3970
    75  0000                     _PORTCbits	set	3970
    76  0000                     _PORTD	set	3971
    77  0000                     _PORTDbits	set	3971
    78  0000                     _PORTE	set	3972
    79  0000                     _PORTEbits	set	3972
    80  0000                     _RCREG1	set	4014
    81  0000                     _RCSTA1bits	set	4011
    82  0000                     _SPBRG1	set	4015
    83  0000                     _TRISA	set	3986
    84  0000                     _TRISB	set	3987
    85  0000                     _TRISC	set	3988
    86  0000                     _TRISCbits	set	3988
    87  0000                     _TRISD	set	3989
    88  0000                     _TRISE	set	3990
    89  0000                     _TXREG1	set	4013
    90  0000                     _TXSTA1bits	set	4012
    91                           
    92                           ; #config settings
    93  0000                     
    94                           	psect	cinit
    95  000EA6                     __pcinit:
    96                           	opt stack 0
    97  000EA6                     start_initialization:
    98                           	opt stack 0
    99  000EA6                     __initialization:
   100                           	opt stack 0
   101                           
   102                           ; Clear objects allocated to BANK0 (10 bytes)
   103  000EA6  EE00  F096         	lfsr	0,__pbssBANK0
   104  000EAA  0E0A               	movlw	10
   105  000EAC                     clear_0:
   106  000EAC  6AEE               	clrf	postinc0,c
   107  000EAE  06E8               	decf	wreg,f,c
   108  000EB0  E1FD               	bnz	clear_0
   109                           
   110                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   111  000EB2  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   112                           
   113                           ; Clear objects allocated to COMRAM (5 bytes)
   114  000EB4  6A49               	clrf	(__pbssCOMRAM+4)& (0+255),c
   115  000EB6  6A48               	clrf	(__pbssCOMRAM+3)& (0+255),c
   116  000EB8  6A47               	clrf	(__pbssCOMRAM+2)& (0+255),c
   117  000EBA  6A46               	clrf	(__pbssCOMRAM+1)& (0+255),c
   118  000EBC  6A45               	clrf	__pbssCOMRAM& (0+255),c
   119                           
   120                           ; Initialize objects allocated to COMRAM (1 bytes)
   121                           ; load TBLPTR registers with __pidataCOMRAM
   122  000EBE  0E46               	movlw	low __pidataCOMRAM
   123  000EC0  6EF6               	movwf	tblptrl,c
   124  000EC2  0E10               	movlw	high __pidataCOMRAM
   125  000EC4  6EF7               	movwf	tblptrh,c
   126  000EC6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   127  000EC8  6EF8               	movwf	tblptru,c
   128  000ECA  0009               	tblrd		*+	;fetch initializer
   129  000ECC  CFF5 F04B          	movff	tablat,__pdataCOMRAM
   130  000ED0                     end_of_initialization:
   131                           	opt stack 0
   132  000ED0                     __end_of__initialization:
   133                           	opt stack 0
   134  000ED0  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   135  000ED2  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   136  000ED4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   137  000ED6  6EF8               	movwf	tblptru,c
   138  000ED8  0100               	movlb	0
   139  000EDA  EF0C  F008         	goto	_main	;jump to C main() function
   140                           tblptru	equ	0xFF8
   141                           tblptrh	equ	0xFF7
   142                           tblptrl	equ	0xFF6
   143                           tablat	equ	0xFF5
   144                           postinc0	equ	0xFEE
   145                           wreg	equ	0xFE8
   146                           
   147                           	psect	bitbssCOMRAM
   148  000250                     __pbitbssCOMRAM:
   149                           	opt stack 0
   150  000250                     _overrun:
   151                           	opt stack 0
   152  000250                     	ds	1
   153  000251                     _slave_addressed:
   154                           	opt stack 0
   155  000251                     	ds	1
   156                           tblptru	equ	0xFF8
   157                           tblptrh	equ	0xFF7
   158                           tblptrl	equ	0xFF6
   159                           tablat	equ	0xFF5
   160                           postinc0	equ	0xFEE
   161                           wreg	equ	0xFE8
   162                           
   163                           	psect	bssCOMRAM
   164  000045                     __pbssCOMRAM:
   165                           	opt stack 0
   166  000045                     _received:
   167                           	opt stack 0
   168  000045                     	ds	4
   169  000049                     _receive_counter:
   170                           	opt stack 0
   171  000049                     	ds	1
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           tblptrl	equ	0xFF6
   175                           tablat	equ	0xFF5
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           
   179                           	psect	dataCOMRAM
   180  00004B                     __pdataCOMRAM:
   181                           	opt stack 0
   182  00004B                     _p_status:
   183                           	opt stack 0
   184  00004B                     	ds	1
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           
   192                           	psect	bssBANK0
   193  000096                     __pbssBANK0:
   194                           	opt stack 0
   195  000096                     _Marker:
   196                           	opt stack 0
   197  000096                     	ds	10
   198                           tblptru	equ	0xFF8
   199                           tblptrh	equ	0xFF7
   200                           tblptrl	equ	0xFF6
   201                           tablat	equ	0xFF5
   202                           postinc0	equ	0xFEE
   203                           wreg	equ	0xFE8
   204                           
   205                           	psect	cstackBANK0
   206  000060                     __pcstackBANK0:
   207                           	opt stack 0
   208  000060                     ?___ftpack:
   209                           	opt stack 0
   210  000060                     InitMiscellaneos@c:
   211                           	opt stack 0
   212  000060                     Ignite_Port@ignite_number:
   213                           	opt stack 0
   214  000060                     ___ftpack@arg:
   215                           	opt stack 0
   216  000060                     ___ftge@ff1:
   217                           	opt stack 0
   218                           
   219                           ; 3 bytes @ 0x0
   220  000060                     	ds	1
   221  000061                     ??_Check_Ignition:
   222                           
   223                           ; 0 bytes @ 0x1
   224  000061                     	ds	1
   225  000062                     Check_Ignition@c:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0x2
   229  000062                     	ds	1
   230  000063                     ___ftpack@exp:
   231                           	opt stack 0
   232  000063                     ___ftge@ff2:
   233                           	opt stack 0
   234                           
   235                           ; 3 bytes @ 0x3
   236  000063                     	ds	1
   237  000064                     ___ftpack@sign:
   238                           	opt stack 0
   239                           
   240                           ; 1 bytes @ 0x4
   241  000064                     	ds	1
   242  000065                     ??___ftpack:
   243                           
   244                           ; 0 bytes @ 0x5
   245  000065                     	ds	1
   246  000066                     ??___ftge:
   247                           
   248                           ; 0 bytes @ 0x6
   249  000066                     	ds	2
   250  000068                     ?___lbtoft:
   251                           	opt stack 0
   252                           
   253                           ; 3 bytes @ 0x8
   254  000068                     	ds	3
   255  00006B                     ___lbtoft@c:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0xB
   259  00006B                     	ds	1
   260  00006C                     ?___ftmul:
   261                           	opt stack 0
   262  00006C                     ___ftmul@f1:
   263                           	opt stack 0
   264                           
   265                           ; 3 bytes @ 0xC
   266  00006C                     	ds	3
   267  00006F                     ___ftmul@f2:
   268                           	opt stack 0
   269                           
   270                           ; 3 bytes @ 0xF
   271  00006F                     	ds	3
   272  000072                     ??___ftmul:
   273                           
   274                           ; 0 bytes @ 0x12
   275  000072                     	ds	3
   276  000075                     ___ftmul@exp:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x15
   280  000075                     	ds	1
   281  000076                     ___ftmul@f3_as_product:
   282                           	opt stack 0
   283                           
   284                           ; 3 bytes @ 0x16
   285  000076                     	ds	3
   286  000079                     ___ftmul@cntr:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x19
   290  000079                     	ds	1
   291  00007A                     ___ftmul@sign:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x1A
   295  00007A                     	ds	1
   296  00007B                     ?___ftdiv:
   297                           	opt stack 0
   298  00007B                     ___ftdiv@f1:
   299                           	opt stack 0
   300                           
   301                           ; 3 bytes @ 0x1B
   302  00007B                     	ds	3
   303  00007E                     ___ftdiv@f2:
   304                           	opt stack 0
   305                           
   306                           ; 3 bytes @ 0x1E
   307  00007E                     	ds	3
   308  000081                     ??___ftdiv:
   309                           
   310                           ; 0 bytes @ 0x21
   311  000081                     	ds	3
   312  000084                     ___ftdiv@cntr:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x24
   316  000084                     	ds	1
   317  000085                     ___ftdiv@f3:
   318                           	opt stack 0
   319                           
   320                           ; 3 bytes @ 0x25
   321  000085                     	ds	3
   322  000088                     ___ftdiv@exp:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x28
   326  000088                     	ds	1
   327  000089                     ___ftdiv@sign:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x29
   331  000089                     	ds	1
   332  00008A                     Check_Power@DAC_out:
   333                           	opt stack 0
   334                           
   335                           ; 3 bytes @ 0x2A
   336  00008A                     	ds	3
   337  00008D                     Check_Power@voltage:
   338                           	opt stack 0
   339                           
   340                           ; 3 bytes @ 0x2D
   341  00008D                     	ds	3
   342  000090                     Check_Power@supply:
   343                           	opt stack 0
   344                           
   345                           ; 3 bytes @ 0x30
   346  000090                     	ds	3
   347  000093                     Check_Power@source_power:
   348                           	opt stack 0
   349                           
   350                           ; 3 bytes @ 0x33
   351  000093                     	ds	3
   352  000096                     tblptru	equ	0xFF8
   353                           tblptrh	equ	0xFF7
   354                           tblptrl	equ	0xFF6
   355                           tablat	equ	0xFF5
   356                           postinc0	equ	0xFEE
   357                           wreg	equ	0xFE8
   358                           
   359                           ; 0 bytes @ 0x36
   360                           
   361                           	psect	cstackCOMRAM
   362  000001                     __pcstackCOMRAM:
   363                           	opt stack 0
   364  000001                     ?i2___ftpack:
   365                           	opt stack 0
   366  000001                     Transmit@operation:
   367                           	opt stack 0
   368  000001                     i2___ftpack@arg:
   369                           	opt stack 0
   370  000001                     i2___ftge@ff1:
   371                           	opt stack 0
   372                           
   373                           ; 3 bytes @ 0x0
   374  000001                     	ds	1
   375  000002                     Transmit@port:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x1
   379  000002                     	ds	1
   380  000003                     Transmit@con_status:
   381                           	opt stack 0
   382                           
   383                           ; 1 bytes @ 0x2
   384  000003                     	ds	1
   385  000004                     Transmit@receiver:
   386                           	opt stack 0
   387  000004                     i2___ftpack@exp:
   388                           	opt stack 0
   389  000004                     i2___ftge@ff2:
   390                           	opt stack 0
   391                           
   392                           ; 3 bytes @ 0x3
   393  000004                     	ds	1
   394  000005                     i2___ftpack@sign:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x4
   398  000005                     	ds	1
   399  000006                     ??i2___ftpack:
   400                           
   401                           ; 0 bytes @ 0x5
   402  000006                     	ds	1
   403  000007                     ??i2___ftge:
   404                           
   405                           ; 0 bytes @ 0x6
   406  000007                     	ds	2
   407  000009                     ?i2___lbtoft:
   408                           	opt stack 0
   409                           
   410                           ; 3 bytes @ 0x8
   411  000009                     	ds	3
   412  00000C                     i2___lbtoft@c:
   413                           	opt stack 0
   414                           
   415                           ; 1 bytes @ 0xB
   416  00000C                     	ds	1
   417  00000D                     ?i2___ftmul:
   418                           	opt stack 0
   419  00000D                     i2___ftmul@f1:
   420                           	opt stack 0
   421                           
   422                           ; 3 bytes @ 0xC
   423  00000D                     	ds	3
   424  000010                     i2___ftmul@f2:
   425                           	opt stack 0
   426                           
   427                           ; 3 bytes @ 0xF
   428  000010                     	ds	3
   429  000013                     ??i2___ftmul:
   430                           
   431                           ; 0 bytes @ 0x12
   432  000013                     	ds	3
   433  000016                     i2___ftmul@exp:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x15
   437  000016                     	ds	1
   438  000017                     i2___ftmul@f3_as_product:
   439                           	opt stack 0
   440                           
   441                           ; 3 bytes @ 0x16
   442  000017                     	ds	3
   443  00001A                     i2___ftmul@cntr:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x19
   447  00001A                     	ds	1
   448  00001B                     i2___ftmul@sign:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0x1A
   452  00001B                     	ds	1
   453  00001C                     ?i2___ftdiv:
   454                           	opt stack 0
   455  00001C                     i2___ftdiv@f1:
   456                           	opt stack 0
   457                           
   458                           ; 3 bytes @ 0x1B
   459  00001C                     	ds	3
   460  00001F                     i2___ftdiv@f2:
   461                           	opt stack 0
   462                           
   463                           ; 3 bytes @ 0x1E
   464  00001F                     	ds	3
   465  000022                     ??i2___ftdiv:
   466                           
   467                           ; 0 bytes @ 0x21
   468  000022                     	ds	3
   469  000025                     i2___ftdiv@cntr:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0x24
   473  000025                     	ds	1
   474  000026                     i2___ftdiv@f3:
   475                           	opt stack 0
   476                           
   477                           ; 3 bytes @ 0x25
   478  000026                     	ds	3
   479  000029                     i2___ftdiv@exp:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x28
   483  000029                     	ds	1
   484  00002A                     i2___ftdiv@sign:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x29
   488  00002A                     	ds	1
   489  00002B                     i2Check_Power@DAC_out:
   490                           	opt stack 0
   491                           
   492                           ; 3 bytes @ 0x2A
   493  00002B                     	ds	3
   494  00002E                     i2Check_Power@voltage:
   495                           	opt stack 0
   496                           
   497                           ; 3 bytes @ 0x2D
   498  00002E                     	ds	3
   499  000031                     i2Check_Power@supply:
   500                           	opt stack 0
   501                           
   502                           ; 3 bytes @ 0x30
   503  000031                     	ds	3
   504  000034                     i2Check_Power@source_power:
   505                           	opt stack 0
   506                           
   507                           ; 3 bytes @ 0x33
   508  000034                     	ds	3
   509  000037                     ??_Isr:
   510                           
   511                           ; 0 bytes @ 0x36
   512  000037                     	ds	14
   513                           tblptru	equ	0xFF8
   514                           tblptrh	equ	0xFF7
   515                           tblptrl	equ	0xFF6
   516                           tablat	equ	0xFF5
   517                           postinc0	equ	0xFEE
   518                           wreg	equ	0xFE8
   519                           
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 74 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;		None
   530 ;; Return value:  Size  Location     Type
   531 ;;		None               void
   532 ;; Registers used:
   533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   539 ;;      Params:         0       0       0       0
   540 ;;      Locals:         0       0       0       0
   541 ;;      Temps:          0       0       0       0
   542 ;;      Totals:         0       0       0       0
   543 ;;Total ram usage:        0 bytes
   544 ;; Hardware stack levels required when called:    8
   545 ;; This function calls:
   546 ;;		_Check_Ignition
   547 ;;		_Check_Power
   548 ;;		_Init
   549 ;; This function is called by:
   550 ;;		Startup code after reset
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text0
   555  001018                     __ptext0:
   556                           	opt stack 0
   557  001018                     _main:
   558                           	opt stack 23
   559                           
   560                           ;main.c: 75: Init();
   561                           
   562                           ;incstack = 0
   563  001018  ECCE  F007         	call	_Init	;wreg free
   564  00101C                     l23:
   565                           
   566                           ;main.c: 77: Check_Ignition();
   567  00101C  EC02  F007         	call	_Check_Ignition	;wreg free
   568                           
   569                           ;main.c: 78: Check_Power();
   570  001020  EC82  F001         	call	_Check_Power	;wreg free
   571                           
   572                           ;main.c: 79: __nop();
   573  001024  F000               	nop	
   574  001026  D7FA               	goto	l23
   575  001028                     __end_of_main:
   576                           	opt stack 0
   577                           tblptru	equ	0xFF8
   578                           tblptrh	equ	0xFF7
   579                           tblptrl	equ	0xFF6
   580                           tablat	equ	0xFF5
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           
   584 ;; *************** function _Init *****************
   585 ;; Defined at:
   586 ;;		line 5 in file "init.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;		None
   591 ;; Return value:  Size  Location     Type
   592 ;;		None               void
   593 ;; Registers used:
   594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   600 ;;      Params:         0       0       0       0
   601 ;;      Locals:         0       0       0       0
   602 ;;      Temps:          0       0       0       0
   603 ;;      Totals:         0       0       0       0
   604 ;;Total ram usage:        0 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; Hardware stack levels required when called:    6
   607 ;; This function calls:
   608 ;;		_InitAnsel
   609 ;;		_InitInterrupt
   610 ;;		_InitMiscellaneos
   611 ;;		_InitMiscellaneous
   612 ;;		_InitPort
   613 ;;		_InitTransmission
   614 ;;		_InitTris
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text1
   621  000F9C                     __ptext1:
   622                           	opt stack 0
   623  000F9C                     _Init:
   624                           	opt stack 24
   625                           
   626                           ;init.c: 6: InitPort();
   627                           
   628                           ;incstack = 0
   629  000F9C  ECF6  F007         	call	_InitPort	;wreg free
   630                           
   631                           ;init.c: 7: InitTris();
   632  000FA0  ECEB  F007         	call	_InitTris	;wreg free
   633                           
   634                           ;init.c: 8: InitAnsel();
   635  000FA4  ECAE  F007         	call	_InitAnsel	;wreg free
   636                           
   637                           ;init.c: 9: InitMiscellaneous();
   638  000FA8  EC20  F008         	call	_InitMiscellaneous	;wreg free
   639                           
   640                           ;init.c: 10: InitTransmission();
   641  000FAC  ECDD  F007         	call	_InitTransmission	;wreg free
   642                           
   643                           ;init.c: 11: InitInterrupt();
   644  000FB0  EC1B  F008         	call	_InitInterrupt	;wreg free
   645                           
   646                           ;init.c: 12: InitMiscellaneos();
   647  000FB4  EC86  F007         	call	_InitMiscellaneos	;wreg free
   648  000FB8  0012               	return		;funcret
   649  000FBA                     __end_of_Init:
   650                           	opt stack 0
   651                           tblptru	equ	0xFF8
   652                           tblptrh	equ	0xFF7
   653                           tblptrl	equ	0xFF6
   654                           tablat	equ	0xFF5
   655                           postinc0	equ	0xFEE
   656                           wreg	equ	0xFE8
   657                           
   658 ;; *************** function _InitTris *****************
   659 ;; Defined at:
   660 ;;		line 23 in file "init.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;		None               void
   667 ;; Registers used:
   668 ;;		wreg, status,2
   669 ;; Tracked objects:
   670 ;;		On entry : 0/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   674 ;;      Params:         0       0       0       0
   675 ;;      Locals:         0       0       0       0
   676 ;;      Temps:          0       0       0       0
   677 ;;      Totals:         0       0       0       0
   678 ;;Total ram usage:        0 bytes
   679 ;; Hardware stack levels used:    1
   680 ;; Hardware stack levels required when called:    5
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_Init
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text2
   689  000FD6                     __ptext2:
   690                           	opt stack 0
   691  000FD6                     _InitTris:
   692                           	opt stack 24
   693                           
   694                           ;init.c: 24: TRISA = 0b00010101;
   695                           
   696                           ;incstack = 0
   697  000FD6  0E15               	movlw	21
   698  000FD8  6E92               	movwf	3986,c	;volatile
   699                           
   700                           ;init.c: 25: TRISB = 0b00010001;
   701  000FDA  0E11               	movlw	17
   702  000FDC  6E93               	movwf	3987,c	;volatile
   703                           
   704                           ;init.c: 26: TRISC = 0b00010100;
   705  000FDE  0E14               	movlw	20
   706  000FE0  6E94               	movwf	3988,c	;volatile
   707                           
   708                           ;init.c: 27: TRISD = 0b00000101;
   709  000FE2  0E05               	movlw	5
   710  000FE4  6E95               	movwf	3989,c	;volatile
   711                           
   712                           ;init.c: 28: TRISE = 0b00000101;
   713  000FE6  0E05               	movlw	5
   714  000FE8  6E96               	movwf	3990,c	;volatile
   715  000FEA  0012               	return		;funcret
   716  000FEC                     __end_of_InitTris:
   717                           	opt stack 0
   718                           tblptru	equ	0xFF8
   719                           tblptrh	equ	0xFF7
   720                           tblptrl	equ	0xFF6
   721                           tablat	equ	0xFF5
   722                           postinc0	equ	0xFEE
   723                           wreg	equ	0xFE8
   724                           
   725 ;; *************** function _InitTransmission *****************
   726 ;; Defined at:
   727 ;;		line 43 in file "init.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;		None               void
   734 ;; Registers used:
   735 ;;		wreg, status,2
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   741 ;;      Params:         0       0       0       0
   742 ;;      Locals:         0       0       0       0
   743 ;;      Temps:          0       0       0       0
   744 ;;      Totals:         0       0       0       0
   745 ;;Total ram usage:        0 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    5
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_Init
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text3
   756  000FBA                     __ptext3:
   757                           	opt stack 0
   758  000FBA                     _InitTransmission:
   759                           	opt stack 24
   760                           
   761                           ;init.c: 45: TXSTA1bits.SYNC = 0;
   762                           
   763                           ;incstack = 0
   764  000FBA  98AC               	bcf	4012,4,c	;volatile
   765                           
   766                           ;init.c: 46: TXSTA1bits.BRGH = 1;
   767  000FBC  84AC               	bsf	4012,2,c	;volatile
   768                           
   769                           ;init.c: 47: BAUDCON1bits.BRG16 = 0;
   770  000FBE  96B8               	bcf	4024,3,c	;volatile
   771                           
   772                           ;init.c: 48: SPBRG1 = 25;
   773  000FC0  0E19               	movlw	25
   774  000FC2  6EAF               	movwf	4015,c	;volatile
   775                           
   776                           ;init.c: 49: TRISCbits.RC6 = 1;
   777  000FC4  8C94               	bsf	3988,6,c	;volatile
   778                           
   779                           ;init.c: 50: TRISCbits.RC7 = 1;
   780  000FC6  8E94               	bsf	3988,7,c	;volatile
   781                           
   782                           ;init.c: 51: RCSTA1bits.SPEN = 1;
   783  000FC8  8EAB               	bsf	4011,7,c	;volatile
   784                           
   785                           ;init.c: 52: TXSTA1bits.TX9 = 1;
   786  000FCA  8CAC               	bsf	4012,6,c	;volatile
   787                           
   788                           ;init.c: 53: TXSTA1bits.TXEN = 1;
   789  000FCC  8AAC               	bsf	4012,5,c	;volatile
   790                           
   791                           ;init.c: 54: RCSTA1bits.RC9 = 1;
   792  000FCE  8CAB               	bsf	4011,6,c	;volatile
   793                           
   794                           ;init.c: 55: RCSTA1bits.CREN = 1;
   795  000FD0  88AB               	bsf	4011,4,c	;volatile
   796                           
   797                           ;init.c: 56: TRISCbits.RC6 = 0;
   798  000FD2  9C94               	bcf	3988,6,c	;volatile
   799  000FD4  0012               	return		;funcret
   800  000FD6                     __end_of_InitTransmission:
   801                           	opt stack 0
   802                           tblptru	equ	0xFF8
   803                           tblptrh	equ	0xFF7
   804                           tblptrl	equ	0xFF6
   805                           tablat	equ	0xFF5
   806                           postinc0	equ	0xFEE
   807                           wreg	equ	0xFE8
   808                           
   809 ;; *************** function _InitPort *****************
   810 ;; Defined at:
   811 ;;		line 15 in file "init.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;		None
   814 ;; Auto vars:     Size  Location     Type
   815 ;;		None
   816 ;; Return value:  Size  Location     Type
   817 ;;		None               void
   818 ;; Registers used:
   819 ;;		wreg, status,2
   820 ;; Tracked objects:
   821 ;;		On entry : 0/0
   822 ;;		On exit  : 0/0
   823 ;;		Unchanged: 0/0
   824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   825 ;;      Params:         0       0       0       0
   826 ;;      Locals:         0       0       0       0
   827 ;;      Temps:          0       0       0       0
   828 ;;      Totals:         0       0       0       0
   829 ;;Total ram usage:        0 bytes
   830 ;; Hardware stack levels used:    1
   831 ;; Hardware stack levels required when called:    5
   832 ;; This function calls:
   833 ;;		Nothing
   834 ;; This function is called by:
   835 ;;		_Init
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text4
   840  000FEC                     __ptext4:
   841                           	opt stack 0
   842  000FEC                     _InitPort:
   843                           	opt stack 24
   844                           
   845                           ;init.c: 16: PORTA = 0b00000000;
   846                           
   847                           ;incstack = 0
   848  000FEC  0E00               	movlw	0
   849  000FEE  6E80               	movwf	3968,c	;volatile
   850                           
   851                           ;init.c: 17: PORTB = 0b00000000;
   852  000FF0  0E00               	movlw	0
   853  000FF2  6E81               	movwf	3969,c	;volatile
   854                           
   855                           ;init.c: 18: PORTC = 0b00000000;
   856  000FF4  0E00               	movlw	0
   857  000FF6  6E82               	movwf	3970,c	;volatile
   858                           
   859                           ;init.c: 19: PORTD = 0b00000000;
   860  000FF8  0E00               	movlw	0
   861  000FFA  6E83               	movwf	3971,c	;volatile
   862                           
   863                           ;init.c: 20: PORTE = 0b00000000;
   864  000FFC  0E00               	movlw	0
   865  000FFE  6E84               	movwf	3972,c	;volatile
   866  001000  0012               	return		;funcret
   867  001002                     __end_of_InitPort:
   868                           	opt stack 0
   869                           tblptru	equ	0xFF8
   870                           tblptrh	equ	0xFF7
   871                           tblptrl	equ	0xFF6
   872                           tablat	equ	0xFF5
   873                           postinc0	equ	0xFEE
   874                           wreg	equ	0xFE8
   875                           
   876 ;; *************** function _InitMiscellaneous *****************
   877 ;; Defined at:
   878 ;;		line 39 in file "init.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;		None               void
   885 ;; Registers used:
   886 ;;		wreg, status,2
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   892 ;;      Params:         0       0       0       0
   893 ;;      Locals:         0       0       0       0
   894 ;;      Temps:          0       0       0       0
   895 ;;      Totals:         0       0       0       0
   896 ;;Total ram usage:        0 bytes
   897 ;; Hardware stack levels used:    1
   898 ;; Hardware stack levels required when called:    5
   899 ;; This function calls:
   900 ;;		Nothing
   901 ;; This function is called by:
   902 ;;		_Init
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text5
   907  001040                     __ptext5:
   908                           	opt stack 0
   909  001040                     _InitMiscellaneous:
   910                           	opt stack 24
   911                           
   912                           ;init.c: 40: OSCCON = 0b01010011;
   913                           
   914                           ;incstack = 0
   915  001040  0E53               	movlw	83
   916  001042  6ED3               	movwf	4051,c	;volatile
   917  001044  0012               	return		;funcret
   918  001046                     __end_of_InitMiscellaneous:
   919                           	opt stack 0
   920                           tblptru	equ	0xFF8
   921                           tblptrh	equ	0xFF7
   922                           tblptrl	equ	0xFF6
   923                           tablat	equ	0xFF5
   924                           postinc0	equ	0xFEE
   925                           wreg	equ	0xFE8
   926                           
   927 ;; *************** function _InitMiscellaneos *****************
   928 ;; Defined at:
   929 ;;		line 78 in file "init.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;  c               1    0[BANK0 ] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;		None               void
   936 ;; Registers used:
   937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   943 ;;      Params:         0       0       0       0
   944 ;;      Locals:         0       1       0       0
   945 ;;      Temps:          0       0       0       0
   946 ;;      Totals:         0       1       0       0
   947 ;;Total ram usage:        1 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; Hardware stack levels required when called:    5
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_Init
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text6
   958  000F0C                     __ptext6:
   959                           	opt stack 0
   960  000F0C                     _InitMiscellaneos:
   961                           	opt stack 24
   962                           
   963                           ;init.c: 79: for(unsigned char c = 0; c < 10; c++) {
   964                           
   965                           ;incstack = 0
   966  000F0C  0E00               	movlw	0
   967  000F0E  0100               	movlb	0	; () banked
   968  000F10  6F60               	movwf	InitMiscellaneos@c& (0+255),b
   969  000F12                     l1744:
   970                           
   971                           ; BSR set to: 0
   972  000F12  0E09               	movlw	9
   973  000F14  0100               	movlb	0	; () banked
   974  000F16  6560               	cpfsgt	InitMiscellaneos@c& (0+255),b
   975  000F18  D001               	goto	l1748
   976  000F1A  0012               	return	
   977  000F1C                     l1748:
   978                           
   979                           ; BSR set to: 0
   980                           ;init.c: 80: Marker[c] = 0;
   981  000F1C  0100               	movlb	0	; () banked
   982  000F1E  5160               	movf	InitMiscellaneos@c& (0+255),w,b
   983  000F20  0D01               	mullw	1
   984  000F22  0E96               	movlw	low _Marker
   985  000F24  24F3               	addwf	prodl,w,c
   986  000F26  6ED9               	movwf	fsr2l,c
   987  000F28  0E00               	movlw	high _Marker
   988  000F2A  20F4               	addwfc	prodh,w,c
   989  000F2C  6EDA               	movwf	fsr2h,c
   990  000F2E  0E00               	movlw	0
   991  000F30  6EDF               	movwf	indf2,c
   992                           
   993                           ; BSR set to: 0
   994  000F32  0100               	movlb	0	; () banked
   995  000F34  2B60               	incf	InitMiscellaneos@c& (0+255),f,b
   996  000F36  D7ED               	goto	l1744
   997  000F38                     __end_of_InitMiscellaneos:
   998                           	opt stack 0
   999                           tblptru	equ	0xFF8
  1000                           tblptrh	equ	0xFF7
  1001                           tblptrl	equ	0xFF6
  1002                           tablat	equ	0xFF5
  1003                           prodh	equ	0xFF4
  1004                           prodl	equ	0xFF3
  1005                           postinc0	equ	0xFEE
  1006                           wreg	equ	0xFE8
  1007                           indf2	equ	0xFDF
  1008                           fsr2h	equ	0xFDA
  1009                           fsr2l	equ	0xFD9
  1010                           
  1011 ;; *************** function _InitInterrupt *****************
  1012 ;; Defined at:
  1013 ;;		line 71 in file "init.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;		None
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;		None
  1018 ;; Return value:  Size  Location     Type
  1019 ;;		None               void
  1020 ;; Registers used:
  1021 ;;		None
  1022 ;; Tracked objects:
  1023 ;;		On entry : 0/0
  1024 ;;		On exit  : 0/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1027 ;;      Params:         0       0       0       0
  1028 ;;      Locals:         0       0       0       0
  1029 ;;      Temps:          0       0       0       0
  1030 ;;      Totals:         0       0       0       0
  1031 ;;Total ram usage:        0 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    5
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_Init
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           	psect	text7
  1042  001036                     __ptext7:
  1043                           	opt stack 0
  1044  001036                     _InitInterrupt:
  1045                           	opt stack 24
  1046                           
  1047                           ;init.c: 72: INTCONbits.GIE = 1;
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;incstack = 0
  1051  001036  8EF2               	bsf	intcon,7,c	;volatile
  1052                           
  1053                           ;init.c: 73: INTCONbits.PEIE = 1;
  1054  001038  8CF2               	bsf	intcon,6,c	;volatile
  1055                           
  1056                           ;init.c: 74: PIE1bits.RCIE = 1;
  1057  00103A  8A9D               	bsf	3997,5,c	;volatile
  1058                           
  1059                           ;init.c: 75: PIR1bits.RCIF= 0;
  1060  00103C  9A9E               	bcf	3998,5,c	;volatile
  1061  00103E  0012               	return		;funcret
  1062  001040                     __end_of_InitInterrupt:
  1063                           	opt stack 0
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           prodh	equ	0xFF4
  1069                           prodl	equ	0xFF3
  1070                           intcon	equ	0xFF2
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           indf2	equ	0xFDF
  1074                           fsr2h	equ	0xFDA
  1075                           fsr2l	equ	0xFD9
  1076                           
  1077 ;; *************** function _InitAnsel *****************
  1078 ;; Defined at:
  1079 ;;		line 31 in file "init.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;		None               void
  1086 ;; Registers used:
  1087 ;;		wreg, status,2
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1093 ;;      Params:         0       0       0       0
  1094 ;;      Locals:         0       0       0       0
  1095 ;;      Temps:          0       0       0       0
  1096 ;;      Totals:         0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    5
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_Init
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text8
  1108  000F5C                     __ptext8:
  1109                           	opt stack 0
  1110  000F5C                     _InitAnsel:
  1111                           	opt stack 24
  1112                           
  1113                           ;init.c: 32: ANSELA = 0b00000000;
  1114                           
  1115                           ;incstack = 0
  1116  000F5C  0E00               	movlw	0
  1117  000F5E  010F               	movlb	15	; () banked
  1118  000F60  6F38               	movwf	56,b	;volatile
  1119                           
  1120                           ;init.c: 33: ANSELB = 0b00000001;
  1121  000F62  0E01               	movlw	1
  1122  000F64  010F               	movlb	15	; () banked
  1123  000F66  6F39               	movwf	57,b	;volatile
  1124                           
  1125                           ;init.c: 34: ANSELC = 0b00000000;
  1126  000F68  0E00               	movlw	0
  1127  000F6A  010F               	movlb	15	; () banked
  1128  000F6C  6F3A               	movwf	58,b	;volatile
  1129                           
  1130                           ;init.c: 35: ANSELD = 0b00000000;
  1131  000F6E  0E00               	movlw	0
  1132  000F70  010F               	movlb	15	; () banked
  1133  000F72  6F3B               	movwf	59,b	;volatile
  1134                           
  1135                           ;init.c: 36: ANSELE = 0b00000000;
  1136  000F74  0E00               	movlw	0
  1137  000F76  010F               	movlb	15	; () banked
  1138  000F78  6F3C               	movwf	60,b	;volatile
  1139                           
  1140                           ; BSR set to: 15
  1141  000F7A  0012               	return		;funcret
  1142  000F7C                     __end_of_InitAnsel:
  1143                           	opt stack 0
  1144                           tblptru	equ	0xFF8
  1145                           tblptrh	equ	0xFF7
  1146                           tblptrl	equ	0xFF6
  1147                           tablat	equ	0xFF5
  1148                           prodh	equ	0xFF4
  1149                           prodl	equ	0xFF3
  1150                           intcon	equ	0xFF2
  1151                           postinc0	equ	0xFEE
  1152                           wreg	equ	0xFE8
  1153                           indf2	equ	0xFDF
  1154                           fsr2h	equ	0xFDA
  1155                           fsr2l	equ	0xFD9
  1156                           
  1157 ;; *************** function _Check_Power *****************
  1158 ;; Defined at:
  1159 ;;		line 129 in file "ignition.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  source_power    3   51[BANK0 ] float 
  1164 ;;  supply          3   48[BANK0 ] float 
  1165 ;;  voltage         3   45[BANK0 ] float 
  1166 ;;  DAC_out         3   42[BANK0 ] float 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;		None               void
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1176 ;;      Params:         0       0       0       0
  1177 ;;      Locals:         0      12       0       0
  1178 ;;      Temps:          0       0       0       0
  1179 ;;      Totals:         0      12       0       0
  1180 ;;Total ram usage:       12 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    7
  1183 ;; This function calls:
  1184 ;;		___ftdiv
  1185 ;;		___ftge
  1186 ;;		___ftmul
  1187 ;;		___lbtoft
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text9
  1194  000304                     __ptext9:
  1195                           	opt stack 0
  1196  000304                     _Check_Power:
  1197                           	opt stack 23
  1198                           
  1199                           ;ignition.c: 133: float source_power = 0;
  1200                           
  1201                           ; BSR set to: 15
  1202                           ;incstack = 0
  1203  000304  0E00               	movlw	0
  1204  000306  0100               	movlb	0	; () banked
  1205  000308  6F93               	movwf	Check_Power@source_power& (0+255),b
  1206  00030A  0E00               	movlw	0
  1207  00030C  0100               	movlb	0	; () banked
  1208  00030E  6F94               	movwf	(Check_Power@source_power+1)& (0+255),b
  1209  000310  0E00               	movlw	0
  1210  000312  0100               	movlb	0	; () banked
  1211  000314  6F95               	movwf	(Check_Power@source_power+2)& (0+255),b
  1212                           
  1213                           ;ignition.c: 134: float voltage = 0;
  1214  000316  0E00               	movlw	0
  1215  000318  0100               	movlb	0	; () banked
  1216  00031A  6F8D               	movwf	Check_Power@voltage& (0+255),b
  1217  00031C  0E00               	movlw	0
  1218  00031E  0100               	movlb	0	; () banked
  1219  000320  6F8E               	movwf	(Check_Power@voltage+1)& (0+255),b
  1220  000322  0E00               	movlw	0
  1221  000324  0100               	movlb	0	; () banked
  1222  000326  6F8F               	movwf	(Check_Power@voltage+2)& (0+255),b
  1223                           
  1224                           ;ignition.c: 135: float DAC_out = 1.024;
  1225  000328  0E12               	movlw	18
  1226  00032A  0100               	movlb	0	; () banked
  1227  00032C  6F8A               	movwf	Check_Power@DAC_out& (0+255),b
  1228  00032E  0E83               	movlw	131
  1229  000330  0100               	movlb	0	; () banked
  1230  000332  6F8B               	movwf	(Check_Power@DAC_out+1)& (0+255),b
  1231  000334  0E3F               	movlw	63
  1232  000336  0100               	movlb	0	; () banked
  1233  000338  6F8C               	movwf	(Check_Power@DAC_out+2)& (0+255),b
  1234                           
  1235                           ;ignition.c: 136: float supply = 0;
  1236  00033A  0E00               	movlw	0
  1237  00033C  0100               	movlb	0	; () banked
  1238  00033E  6F90               	movwf	Check_Power@supply& (0+255),b
  1239  000340  0E00               	movlw	0
  1240  000342  0100               	movlb	0	; () banked
  1241  000344  6F91               	movwf	(Check_Power@supply+1)& (0+255),b
  1242  000346  0E00               	movlw	0
  1243  000348  0100               	movlb	0	; () banked
  1244  00034A  6F92               	movwf	(Check_Power@supply+2)& (0+255),b
  1245                           
  1246                           ; BSR set to: 0
  1247                           ;ignition.c: 138: ADCON0bits.CHS = 0b11110;
  1248  00034C  94C2               	bcf	4034,2,c	;volatile
  1249  00034E  86C2               	bsf	4034,3,c	;volatile
  1250  000350  88C2               	bsf	4034,4,c	;volatile
  1251  000352  8AC2               	bsf	4034,5,c	;volatile
  1252  000354  8CC2               	bsf	4034,6,c	;volatile
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;ignition.c: 139: ADCON0bits.GO_nDONE = 1;
  1256  000356  82C2               	bsf	4034,1,c	;volatile
  1257  000358                     l297:
  1258  000358  B2C2               	btfsc	4034,1,c	;volatile
  1259  00035A  D7FE               	goto	l297
  1260                           
  1261                           ;ignition.c: 141: supply = ((DAC_out * 255) / ADRESH);
  1262  00035C  0E00               	movlw	0
  1263  00035E  0100               	movlb	0	; () banked
  1264  000360  6F6F               	movwf	___ftmul@f2& (0+255),b
  1265  000362  0E7F               	movlw	127
  1266  000364  0100               	movlb	0	; () banked
  1267  000366  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  1268  000368  0E43               	movlw	67
  1269  00036A  0100               	movlb	0	; () banked
  1270  00036C  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  1271  00036E  C08A  F06C         	movff	Check_Power@DAC_out,___ftmul@f1
  1272  000372  C08B  F06D         	movff	Check_Power@DAC_out+1,___ftmul@f1+1
  1273  000376  C08C  F06E         	movff	Check_Power@DAC_out+2,___ftmul@f1+2
  1274  00037A  EC4B  F002         	call	___ftmul	;wreg free
  1275  00037E  C06C  F07B         	movff	?___ftmul,___ftdiv@f1
  1276  000382  C06D  F07C         	movff	?___ftmul+1,___ftdiv@f1+1
  1277  000386  C06E  F07D         	movff	?___ftmul+2,___ftdiv@f1+2
  1278  00038A  50C4               	movf	4036,w,c	;volatile
  1279  00038C  EC6F  F007         	call	___lbtoft
  1280  000390  C068  F07E         	movff	?___lbtoft,___ftdiv@f2
  1281  000394  C069  F07F         	movff	?___lbtoft+1,___ftdiv@f2+1
  1282  000398  C06A  F080         	movff	?___lbtoft+2,___ftdiv@f2+2
  1283  00039C  ECA6  F003         	call	___ftdiv	;wreg free
  1284  0003A0  C07B  F090         	movff	?___ftdiv,Check_Power@supply
  1285  0003A4  C07C  F091         	movff	?___ftdiv+1,Check_Power@supply+1
  1286  0003A8  C07D  F092         	movff	?___ftdiv+2,Check_Power@supply+2
  1287                           
  1288                           ;ignition.c: 144: ADCON0bits.CHS = 0b01100;
  1289  0003AC  94C2               	bcf	4034,2,c	;volatile
  1290  0003AE  96C2               	bcf	4034,3,c	;volatile
  1291  0003B0  88C2               	bsf	4034,4,c	;volatile
  1292  0003B2  8AC2               	bsf	4034,5,c	;volatile
  1293  0003B4  9CC2               	bcf	4034,6,c	;volatile
  1294                           
  1295                           ;ignition.c: 145: ADCON0bits.GO_nDONE = 1;
  1296  0003B6  82C2               	bsf	4034,1,c	;volatile
  1297  0003B8                     l300:
  1298  0003B8  B2C2               	btfsc	4034,1,c	;volatile
  1299  0003BA  D7FE               	goto	l300
  1300                           
  1301                           ;ignition.c: 147: voltage = ((ADRESH * supply) / 255);
  1302  0003BC  C090  F06F         	movff	Check_Power@supply,___ftmul@f2
  1303  0003C0  C091  F070         	movff	Check_Power@supply+1,___ftmul@f2+1
  1304  0003C4  C092  F071         	movff	Check_Power@supply+2,___ftmul@f2+2
  1305  0003C8  50C4               	movf	4036,w,c	;volatile
  1306  0003CA  EC6F  F007         	call	___lbtoft
  1307  0003CE  C068  F06C         	movff	?___lbtoft,___ftmul@f1
  1308  0003D2  C069  F06D         	movff	?___lbtoft+1,___ftmul@f1+1
  1309  0003D6  C06A  F06E         	movff	?___lbtoft+2,___ftmul@f1+2
  1310  0003DA  EC4B  F002         	call	___ftmul	;wreg free
  1311  0003DE  C06C  F07B         	movff	?___ftmul,___ftdiv@f1
  1312  0003E2  C06D  F07C         	movff	?___ftmul+1,___ftdiv@f1+1
  1313  0003E6  C06E  F07D         	movff	?___ftmul+2,___ftdiv@f1+2
  1314  0003EA  0E00               	movlw	0
  1315  0003EC  0100               	movlb	0	; () banked
  1316  0003EE  6F7E               	movwf	___ftdiv@f2& (0+255),b
  1317  0003F0  0E7F               	movlw	127
  1318  0003F2  0100               	movlb	0	; () banked
  1319  0003F4  6F7F               	movwf	(___ftdiv@f2+1)& (0+255),b
  1320  0003F6  0E43               	movlw	67
  1321  0003F8  0100               	movlb	0	; () banked
  1322  0003FA  6F80               	movwf	(___ftdiv@f2+2)& (0+255),b
  1323  0003FC  ECA6  F003         	call	___ftdiv	;wreg free
  1324  000400  C07B  F08D         	movff	?___ftdiv,Check_Power@voltage
  1325  000404  C07C  F08E         	movff	?___ftdiv+1,Check_Power@voltage+1
  1326  000408  C07D  F08F         	movff	?___ftdiv+2,Check_Power@voltage+2
  1327                           
  1328                           ;ignition.c: 148: source_power = (4.2353 * voltage);
  1329  00040C  C08D  F06C         	movff	Check_Power@voltage,___ftmul@f1
  1330  000410  C08E  F06D         	movff	Check_Power@voltage+1,___ftmul@f1+1
  1331  000414  C08F  F06E         	movff	Check_Power@voltage+2,___ftmul@f1+2
  1332  000418  0E88               	movlw	136
  1333  00041A  0100               	movlb	0	; () banked
  1334  00041C  6F6F               	movwf	___ftmul@f2& (0+255),b
  1335  00041E  0E87               	movlw	135
  1336  000420  0100               	movlb	0	; () banked
  1337  000422  6F70               	movwf	(___ftmul@f2+1)& (0+255),b
  1338  000424  0E40               	movlw	64
  1339  000426  0100               	movlb	0	; () banked
  1340  000428  6F71               	movwf	(___ftmul@f2+2)& (0+255),b
  1341  00042A  EC4B  F002         	call	___ftmul	;wreg free
  1342  00042E  C06C  F093         	movff	?___ftmul,Check_Power@source_power
  1343  000432  C06D  F094         	movff	?___ftmul+1,Check_Power@source_power+1
  1344  000436  C06E  F095         	movff	?___ftmul+2,Check_Power@source_power+2
  1345                           
  1346                           ;ignition.c: 150: if (source_power < 16.8) {
  1347  00043A  C093  F060         	movff	Check_Power@source_power,___ftge@ff1
  1348  00043E  C094  F061         	movff	Check_Power@source_power+1,___ftge@ff1+1
  1349  000442  C095  F062         	movff	Check_Power@source_power+2,___ftge@ff1+2
  1350  000446  0E66               	movlw	102
  1351  000448  0100               	movlb	0	; () banked
  1352  00044A  6F63               	movwf	___ftge@ff2& (0+255),b
  1353  00044C  0E86               	movlw	134
  1354  00044E  0100               	movlb	0	; () banked
  1355  000450  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  1356  000452  0E41               	movlw	65
  1357  000454  0100               	movlb	0	; () banked
  1358  000456  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  1359  000458  ECBF  F005         	call	___ftge	;wreg free
  1360  00045C  0100               	movlb	0	; () banked
  1361  00045E  B0D8               	btfsc	status,0,c
  1362  000460  D003               	goto	l1984
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;ignition.c: 151: p_status = '0';
  1366  000462  0E30               	movlw	48
  1367  000464  6E4B               	movwf	_p_status,c
  1368                           
  1369                           ;ignition.c: 152: } else if (source_power >= 16.8) {
  1370  000466  0012               	return	
  1371  000468                     l1984:
  1372                           
  1373                           ; BSR set to: 0
  1374  000468  C093  F060         	movff	Check_Power@source_power,___ftge@ff1
  1375  00046C  C094  F061         	movff	Check_Power@source_power+1,___ftge@ff1+1
  1376  000470  C095  F062         	movff	Check_Power@source_power+2,___ftge@ff1+2
  1377  000474  0E66               	movlw	102
  1378  000476  0100               	movlb	0	; () banked
  1379  000478  6F63               	movwf	___ftge@ff2& (0+255),b
  1380  00047A  0E86               	movlw	134
  1381  00047C  0100               	movlb	0	; () banked
  1382  00047E  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  1383  000480  0E41               	movlw	65
  1384  000482  0100               	movlb	0	; () banked
  1385  000484  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  1386  000486  ECBF  F005         	call	___ftge	;wreg free
  1387  00048A  0100               	movlb	0	; () banked
  1388  00048C  A0D8               	btfss	status,0,c
  1389  00048E  0012               	return	
  1390                           
  1391                           ; BSR set to: 0
  1392                           ;ignition.c: 153: p_status = '1';
  1393  000490  0E31               	movlw	49
  1394  000492  6E4B               	movwf	_p_status,c
  1395                           
  1396                           ; BSR set to: 0
  1397  000494  0012               	return	
  1398  000496                     __end_of_Check_Power:
  1399                           	opt stack 0
  1400                           tblptru	equ	0xFF8
  1401                           tblptrh	equ	0xFF7
  1402                           tblptrl	equ	0xFF6
  1403                           tablat	equ	0xFF5
  1404                           prodh	equ	0xFF4
  1405                           prodl	equ	0xFF3
  1406                           intcon	equ	0xFF2
  1407                           postinc0	equ	0xFEE
  1408                           wreg	equ	0xFE8
  1409                           indf2	equ	0xFDF
  1410                           fsr2h	equ	0xFDA
  1411                           fsr2l	equ	0xFD9
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function ___lbtoft *****************
  1415 ;; Defined at:
  1416 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbtoft.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  c               1    wreg     unsigned char 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  c               1   11[BANK0 ] unsigned char 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  3    8[BANK0 ] float 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1430 ;;      Params:         0       3       0       0
  1431 ;;      Locals:         0       1       0       0
  1432 ;;      Temps:          0       0       0       0
  1433 ;;      Totals:         0       4       0       0
  1434 ;;Total ram usage:        4 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    6
  1437 ;; This function calls:
  1438 ;;		___ftpack
  1439 ;; This function is called by:
  1440 ;;		_Check_Power
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           	psect	text10
  1445  000EDE                     __ptext10:
  1446                           	opt stack 0
  1447  000EDE                     ___lbtoft:
  1448                           	opt stack 23
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;incstack = 0
  1452                           ;___lbtoft@c stored from wreg
  1453  000EDE  0100               	movlb	0	; () banked
  1454  000EE0  6F6B               	movwf	___lbtoft@c& (0+255),b
  1455  000EE2  0100               	movlb	0	; () banked
  1456  000EE4  516B               	movf	___lbtoft@c& (0+255),w,b
  1457  000EE6  0100               	movlb	0	; () banked
  1458  000EE8  6F60               	movwf	___ftpack@arg& (0+255),b
  1459  000EEA  6B61               	clrf	(___ftpack@arg+1)& (0+255),b
  1460  000EEC  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  1461  000EEE  0E8E               	movlw	142
  1462  000EF0  0100               	movlb	0	; () banked
  1463  000EF2  6F63               	movwf	___ftpack@exp& (0+255),b
  1464  000EF4  0E00               	movlw	0
  1465  000EF6  0100               	movlb	0	; () banked
  1466  000EF8  6F64               	movwf	___ftpack@sign& (0+255),b
  1467  000EFA  EC4C  F004         	call	___ftpack	;wreg free
  1468  000EFE  C060  F068         	movff	?___ftpack,?___lbtoft
  1469  000F02  C061  F069         	movff	?___ftpack+1,?___lbtoft+1
  1470  000F06  C062  F06A         	movff	?___ftpack+2,?___lbtoft+2
  1471  000F0A  0012               	return	
  1472  000F0C                     __end_of___lbtoft:
  1473                           	opt stack 0
  1474                           tblptru	equ	0xFF8
  1475                           tblptrh	equ	0xFF7
  1476                           tblptrl	equ	0xFF6
  1477                           tablat	equ	0xFF5
  1478                           prodh	equ	0xFF4
  1479                           prodl	equ	0xFF3
  1480                           intcon	equ	0xFF2
  1481                           postinc0	equ	0xFEE
  1482                           wreg	equ	0xFE8
  1483                           indf2	equ	0xFDF
  1484                           fsr2h	equ	0xFDA
  1485                           fsr2l	equ	0xFD9
  1486                           status	equ	0xFD8
  1487                           
  1488 ;; *************** function ___ftmul *****************
  1489 ;; Defined at:
  1490 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  f1              3   12[BANK0 ] float 
  1493 ;;  f2              3   15[BANK0 ] float 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  1496 ;;  sign            1   26[BANK0 ] unsigned char 
  1497 ;;  cntr            1   25[BANK0 ] unsigned char 
  1498 ;;  exp             1   21[BANK0 ] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  3   12[BANK0 ] float 
  1501 ;; Registers used:
  1502 ;;		wreg, status,2, status,0, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1508 ;;      Params:         0       6       0       0
  1509 ;;      Locals:         0       6       0       0
  1510 ;;      Temps:          0       3       0       0
  1511 ;;      Totals:         0      15       0       0
  1512 ;;Total ram usage:       15 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    6
  1515 ;; This function calls:
  1516 ;;		___ftpack
  1517 ;; This function is called by:
  1518 ;;		_Check_Power
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text11
  1523  000496                     __ptext11:
  1524                           	opt stack 0
  1525  000496                     ___ftmul:
  1526                           	opt stack 23
  1527                           
  1528                           ;incstack = 0
  1529  000496  C06E  F072         	movff	___ftmul@f1+2,??___ftmul
  1530  00049A  0100               	movlb	0	; () banked
  1531  00049C  6B73               	clrf	(??___ftmul+1)& (0+255),b
  1532  00049E  6B74               	clrf	(??___ftmul+2)& (0+255),b
  1533  0004A0  0100               	movlb	0	; () banked
  1534  0004A2  356D               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  1535  0004A4  0100               	movlb	0	; () banked
  1536  0004A6  3772               	rlcf	??___ftmul& (0+255),f,b
  1537  0004A8  E301               	bnc	u1571
  1538  0004AA  8173               	bsf	(??___ftmul+1)& (0+255),0,b
  1539  0004AC                     u1571:
  1540  0004AC  0100               	movlb	0	; () banked
  1541  0004AE  5172               	movf	??___ftmul& (0+255),w,b
  1542  0004B0  0100               	movlb	0	; () banked
  1543  0004B2  6F75               	movwf	___ftmul@exp& (0+255),b
  1544  0004B4  0100               	movlb	0	; () banked
  1545  0004B6  5175               	movf	___ftmul@exp& (0+255),w,b
  1546  0004B8  A4D8               	btfss	status,2,c
  1547  0004BA  D00A               	goto	l1860
  1548                           
  1549                           ; BSR set to: 0
  1550  0004BC  0E00               	movlw	0
  1551  0004BE  0100               	movlb	0	; () banked
  1552  0004C0  6F6C               	movwf	?___ftmul& (0+255),b
  1553  0004C2  0E00               	movlw	0
  1554  0004C4  0100               	movlb	0	; () banked
  1555  0004C6  6F6D               	movwf	(?___ftmul+1)& (0+255),b
  1556  0004C8  0E00               	movlw	0
  1557  0004CA  0100               	movlb	0	; () banked
  1558  0004CC  6F6E               	movwf	(?___ftmul+2)& (0+255),b
  1559                           
  1560                           ; BSR set to: 0
  1561  0004CE  0012               	return	
  1562  0004D0                     l1860:
  1563                           
  1564                           ; BSR set to: 0
  1565  0004D0  C071  F072         	movff	___ftmul@f2+2,??___ftmul
  1566  0004D4  0100               	movlb	0	; () banked
  1567  0004D6  6B73               	clrf	(??___ftmul+1)& (0+255),b
  1568  0004D8  6B74               	clrf	(??___ftmul+2)& (0+255),b
  1569  0004DA  0100               	movlb	0	; () banked
  1570  0004DC  3570               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  1571  0004DE  0100               	movlb	0	; () banked
  1572  0004E0  3772               	rlcf	??___ftmul& (0+255),f,b
  1573  0004E2  E301               	bnc	u1591
  1574  0004E4  8173               	bsf	(??___ftmul+1)& (0+255),0,b
  1575  0004E6                     u1591:
  1576  0004E6  0100               	movlb	0	; () banked
  1577  0004E8  5172               	movf	??___ftmul& (0+255),w,b
  1578  0004EA  0100               	movlb	0	; () banked
  1579  0004EC  6F7A               	movwf	___ftmul@sign& (0+255),b
  1580  0004EE  0100               	movlb	0	; () banked
  1581  0004F0  517A               	movf	___ftmul@sign& (0+255),w,b
  1582  0004F2  A4D8               	btfss	status,2,c
  1583  0004F4  D00A               	goto	l1866
  1584                           
  1585                           ; BSR set to: 0
  1586  0004F6  0E00               	movlw	0
  1587  0004F8  0100               	movlb	0	; () banked
  1588  0004FA  6F6C               	movwf	?___ftmul& (0+255),b
  1589  0004FC  0E00               	movlw	0
  1590  0004FE  0100               	movlb	0	; () banked
  1591  000500  6F6D               	movwf	(?___ftmul+1)& (0+255),b
  1592  000502  0E00               	movlw	0
  1593  000504  0100               	movlb	0	; () banked
  1594  000506  6F6E               	movwf	(?___ftmul+2)& (0+255),b
  1595                           
  1596                           ; BSR set to: 0
  1597  000508  0012               	return	
  1598  00050A                     l1866:
  1599                           
  1600                           ; BSR set to: 0
  1601  00050A  0100               	movlb	0	; () banked
  1602  00050C  517A               	movf	___ftmul@sign& (0+255),w,b
  1603  00050E  0F7B               	addlw	123
  1604  000510  0100               	movlb	0	; () banked
  1605  000512  2775               	addwf	___ftmul@exp& (0+255),f,b
  1606                           
  1607                           ; BSR set to: 0
  1608  000514  C06E  F07A         	movff	___ftmul@f1+2,___ftmul@sign
  1609  000518  0100               	movlb	0	; () banked
  1610  00051A  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  1611  00051C  0100               	movlb	0	; () banked
  1612  00051E  1B7A               	xorwf	___ftmul@sign& (0+255),f,b
  1613  000520  0E80               	movlw	128
  1614  000522  0100               	movlb	0	; () banked
  1615  000524  177A               	andwf	___ftmul@sign& (0+255),f,b
  1616                           
  1617                           ; BSR set to: 0
  1618  000526  0100               	movlb	0	; () banked
  1619  000528  8F6D               	bsf	(___ftmul@f1+1)& (0+255),7,b
  1620                           
  1621                           ; BSR set to: 0
  1622  00052A  0100               	movlb	0	; () banked
  1623  00052C  8F70               	bsf	(___ftmul@f2+1)& (0+255),7,b
  1624                           
  1625                           ; BSR set to: 0
  1626  00052E  0EFF               	movlw	255
  1627  000530  0100               	movlb	0	; () banked
  1628  000532  176F               	andwf	___ftmul@f2& (0+255),f,b
  1629  000534  0EFF               	movlw	255
  1630  000536  0100               	movlb	0	; () banked
  1631  000538  1770               	andwf	(___ftmul@f2+1)& (0+255),f,b
  1632  00053A  0E00               	movlw	0
  1633  00053C  0100               	movlb	0	; () banked
  1634  00053E  1771               	andwf	(___ftmul@f2+2)& (0+255),f,b
  1635                           
  1636                           ; BSR set to: 0
  1637  000540  0E00               	movlw	0
  1638  000542  0100               	movlb	0	; () banked
  1639  000544  6F76               	movwf	___ftmul@f3_as_product& (0+255),b
  1640  000546  0E00               	movlw	0
  1641  000548  0100               	movlb	0	; () banked
  1642  00054A  6F77               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  1643  00054C  0E00               	movlw	0
  1644  00054E  0100               	movlb	0	; () banked
  1645  000550  6F78               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  1646                           
  1647                           ; BSR set to: 0
  1648  000552  0E07               	movlw	7
  1649  000554  0100               	movlb	0	; () banked
  1650  000556  6F79               	movwf	___ftmul@cntr& (0+255),b
  1651  000558                     l1880:
  1652                           
  1653                           ; BSR set to: 0
  1654  000558  0100               	movlb	0	; () banked
  1655  00055A  A16C               	btfss	___ftmul@f1& (0+255),0,b
  1656  00055C  D00C               	goto	l1884
  1657                           
  1658                           ; BSR set to: 0
  1659  00055E  0100               	movlb	0	; () banked
  1660  000560  516F               	movf	___ftmul@f2& (0+255),w,b
  1661  000562  0100               	movlb	0	; () banked
  1662  000564  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1663  000566  0100               	movlb	0	; () banked
  1664  000568  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
  1665  00056A  0100               	movlb	0	; () banked
  1666  00056C  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1667  00056E  0100               	movlb	0	; () banked
  1668  000570  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  1669  000572  0100               	movlb	0	; () banked
  1670  000574  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1671  000576                     l1884:
  1672                           
  1673                           ; BSR set to: 0
  1674  000576  0100               	movlb	0	; () banked
  1675  000578  90D8               	bcf	status,0,c
  1676  00057A  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  1677  00057C  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  1678  00057E  336C               	rrcf	___ftmul@f1& (0+255),f,b
  1679  000580  0100               	movlb	0	; () banked
  1680  000582  90D8               	bcf	status,0,c
  1681  000584  376F               	rlcf	___ftmul@f2& (0+255),f,b
  1682  000586  3770               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  1683  000588  3771               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  1684                           
  1685                           ; BSR set to: 0
  1686  00058A  0100               	movlb	0	; () banked
  1687  00058C  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
  1688  00058E  D7E4               	goto	l1880
  1689                           
  1690                           ; BSR set to: 0
  1691                           
  1692                           ; BSR set to: 0
  1693  000590  0E09               	movlw	9
  1694  000592  0100               	movlb	0	; () banked
  1695  000594  6F79               	movwf	___ftmul@cntr& (0+255),b
  1696  000596                     l1890:
  1697                           
  1698                           ; BSR set to: 0
  1699  000596  0100               	movlb	0	; () banked
  1700  000598  A16C               	btfss	___ftmul@f1& (0+255),0,b
  1701  00059A  D00C               	goto	l1894
  1702                           
  1703                           ; BSR set to: 0
  1704  00059C  0100               	movlb	0	; () banked
  1705  00059E  516F               	movf	___ftmul@f2& (0+255),w,b
  1706  0005A0  0100               	movlb	0	; () banked
  1707  0005A2  2776               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1708  0005A4  0100               	movlb	0	; () banked
  1709  0005A6  5170               	movf	(___ftmul@f2+1)& (0+255),w,b
  1710  0005A8  0100               	movlb	0	; () banked
  1711  0005AA  2377               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1712  0005AC  0100               	movlb	0	; () banked
  1713  0005AE  5171               	movf	(___ftmul@f2+2)& (0+255),w,b
  1714  0005B0  0100               	movlb	0	; () banked
  1715  0005B2  2378               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1716  0005B4                     l1894:
  1717                           
  1718                           ; BSR set to: 0
  1719  0005B4  0100               	movlb	0	; () banked
  1720  0005B6  90D8               	bcf	status,0,c
  1721  0005B8  336E               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  1722  0005BA  336D               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  1723  0005BC  336C               	rrcf	___ftmul@f1& (0+255),f,b
  1724  0005BE  0100               	movlb	0	; () banked
  1725  0005C0  90D8               	bcf	status,0,c
  1726  0005C2  3378               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  1727  0005C4  3377               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  1728  0005C6  3376               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  1729                           
  1730                           ; BSR set to: 0
  1731  0005C8  0100               	movlb	0	; () banked
  1732  0005CA  2F79               	decfsz	___ftmul@cntr& (0+255),f,b
  1733  0005CC  D7E4               	goto	l1890
  1734                           
  1735                           ; BSR set to: 0
  1736                           
  1737                           ; BSR set to: 0
  1738  0005CE  C076  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  1739  0005D2  C077  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1740  0005D6  C078  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1741  0005DA  C075  F063         	movff	___ftmul@exp,___ftpack@exp
  1742  0005DE  C07A  F064         	movff	___ftmul@sign,___ftpack@sign
  1743  0005E2  EC4C  F004         	call	___ftpack	;wreg free
  1744  0005E6  C060  F06C         	movff	?___ftpack,?___ftmul
  1745  0005EA  C061  F06D         	movff	?___ftpack+1,?___ftmul+1
  1746  0005EE  C062  F06E         	movff	?___ftpack+2,?___ftmul+2
  1747  0005F2  0012               	return	
  1748  0005F4                     __end_of___ftmul:
  1749                           	opt stack 0
  1750                           tblptru	equ	0xFF8
  1751                           tblptrh	equ	0xFF7
  1752                           tblptrl	equ	0xFF6
  1753                           tablat	equ	0xFF5
  1754                           prodh	equ	0xFF4
  1755                           prodl	equ	0xFF3
  1756                           intcon	equ	0xFF2
  1757                           postinc0	equ	0xFEE
  1758                           wreg	equ	0xFE8
  1759                           indf2	equ	0xFDF
  1760                           fsr2h	equ	0xFDA
  1761                           fsr2l	equ	0xFD9
  1762                           status	equ	0xFD8
  1763                           
  1764 ;; *************** function ___ftge *****************
  1765 ;; Defined at:
  1766 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;  ff1             3    0[BANK0 ] float 
  1769 ;;  ff2             3    3[BANK0 ] float 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;		None               void
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1781 ;;      Params:         0       6       0       0
  1782 ;;      Locals:         0       0       0       0
  1783 ;;      Temps:          0       3       0       0
  1784 ;;      Totals:         0       9       0       0
  1785 ;;Total ram usage:        9 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    5
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_Check_Power
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text12
  1796  000B7E                     __ptext12:
  1797                           	opt stack 0
  1798  000B7E                     ___ftge:
  1799                           	opt stack 24
  1800                           
  1801                           ;incstack = 0
  1802  000B7E  0100               	movlb	0	; () banked
  1803  000B80  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
  1804  000B82  D01D               	goto	l1906
  1805                           
  1806                           ; BSR set to: 0
  1807  000B84  C060  F066         	movff	___ftge@ff1,??___ftge
  1808  000B88  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
  1809  000B8C  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
  1810  000B90  0100               	movlb	0	; () banked
  1811  000B92  1F66               	comf	??___ftge& (0+255),f,b
  1812  000B94  1F67               	comf	(??___ftge+1)& (0+255),f,b
  1813  000B96  1F68               	comf	(??___ftge+2)& (0+255),f,b
  1814  000B98  2B66               	incf	??___ftge& (0+255),f,b
  1815  000B9A  0E00               	movlw	0
  1816  000B9C  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  1817  000B9E  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  1818  000BA0  0E00               	movlw	0
  1819  000BA2  0100               	movlb	0	; () banked
  1820  000BA4  2566               	addwf	??___ftge& (0+255),w,b
  1821  000BA6  0100               	movlb	0	; () banked
  1822  000BA8  6F60               	movwf	___ftge@ff1& (0+255),b
  1823  000BAA  0E00               	movlw	0
  1824  000BAC  0100               	movlb	0	; () banked
  1825  000BAE  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  1826  000BB0  0100               	movlb	0	; () banked
  1827  000BB2  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  1828  000BB4  0E80               	movlw	128
  1829  000BB6  0100               	movlb	0	; () banked
  1830  000BB8  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  1831  000BBA  0100               	movlb	0	; () banked
  1832  000BBC  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  1833  000BBE                     l1906:
  1834                           
  1835                           ; BSR set to: 0
  1836  000BBE  0100               	movlb	0	; () banked
  1837  000BC0  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
  1838  000BC2  D01D               	goto	l1910
  1839                           
  1840                           ; BSR set to: 0
  1841  000BC4  C063  F066         	movff	___ftge@ff2,??___ftge
  1842  000BC8  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
  1843  000BCC  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
  1844  000BD0  0100               	movlb	0	; () banked
  1845  000BD2  1F66               	comf	??___ftge& (0+255),f,b
  1846  000BD4  1F67               	comf	(??___ftge+1)& (0+255),f,b
  1847  000BD6  1F68               	comf	(??___ftge+2)& (0+255),f,b
  1848  000BD8  2B66               	incf	??___ftge& (0+255),f,b
  1849  000BDA  0E00               	movlw	0
  1850  000BDC  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  1851  000BDE  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  1852  000BE0  0E00               	movlw	0
  1853  000BE2  0100               	movlb	0	; () banked
  1854  000BE4  2566               	addwf	??___ftge& (0+255),w,b
  1855  000BE6  0100               	movlb	0	; () banked
  1856  000BE8  6F63               	movwf	___ftge@ff2& (0+255),b
  1857  000BEA  0E00               	movlw	0
  1858  000BEC  0100               	movlb	0	; () banked
  1859  000BEE  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  1860  000BF0  0100               	movlb	0	; () banked
  1861  000BF2  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  1862  000BF4  0E80               	movlw	128
  1863  000BF6  0100               	movlb	0	; () banked
  1864  000BF8  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  1865  000BFA  0100               	movlb	0	; () banked
  1866  000BFC  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  1867  000BFE                     l1910:
  1868                           
  1869                           ; BSR set to: 0
  1870  000BFE  0E00               	movlw	0
  1871  000C00  0100               	movlb	0	; () banked
  1872  000C02  1B60               	xorwf	___ftge@ff1& (0+255),f,b
  1873  000C04  0E00               	movlw	0
  1874  000C06  0100               	movlb	0	; () banked
  1875  000C08  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  1876  000C0A  0E80               	movlw	128
  1877  000C0C  0100               	movlb	0	; () banked
  1878  000C0E  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  1879                           
  1880                           ; BSR set to: 0
  1881  000C10  0E00               	movlw	0
  1882  000C12  0100               	movlb	0	; () banked
  1883  000C14  1B63               	xorwf	___ftge@ff2& (0+255),f,b
  1884  000C16  0E00               	movlw	0
  1885  000C18  0100               	movlb	0	; () banked
  1886  000C1A  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  1887  000C1C  0E80               	movlw	128
  1888  000C1E  0100               	movlb	0	; () banked
  1889  000C20  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  1890  000C22  0100               	movlb	0	; () banked
  1891  000C24  5163               	movf	___ftge@ff2& (0+255),w,b
  1892  000C26  0100               	movlb	0	; () banked
  1893  000C28  5D60               	subwf	___ftge@ff1& (0+255),w,b
  1894  000C2A  0100               	movlb	0	; () banked
  1895  000C2C  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
  1896  000C2E  0100               	movlb	0	; () banked
  1897  000C30  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  1898  000C32  0100               	movlb	0	; () banked
  1899  000C34  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
  1900  000C36  0100               	movlb	0	; () banked
  1901  000C38  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  1902  000C3A  B0D8               	btfsc	status,0,c
  1903  000C3C  D002               	goto	l1916
  1904                           
  1905                           ; BSR set to: 0
  1906  000C3E  90D8               	bcf	status,0,c
  1907  000C40  0012               	return	
  1908  000C42                     l1916:
  1909                           
  1910                           ; BSR set to: 0
  1911  000C42  80D8               	bsf	status,0,c
  1912                           
  1913                           ; BSR set to: 0
  1914  000C44  0012               	return	
  1915  000C46                     __end_of___ftge:
  1916                           	opt stack 0
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           prodh	equ	0xFF4
  1922                           prodl	equ	0xFF3
  1923                           intcon	equ	0xFF2
  1924                           postinc0	equ	0xFEE
  1925                           wreg	equ	0xFE8
  1926                           indf2	equ	0xFDF
  1927                           fsr2h	equ	0xFDA
  1928                           fsr2l	equ	0xFD9
  1929                           status	equ	0xFD8
  1930                           
  1931 ;; *************** function ___ftdiv *****************
  1932 ;; Defined at:
  1933 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  f1              3   27[BANK0 ] float 
  1936 ;;  f2              3   30[BANK0 ] float 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  f3              3   37[BANK0 ] float 
  1939 ;;  sign            1   41[BANK0 ] unsigned char 
  1940 ;;  exp             1   40[BANK0 ] unsigned char 
  1941 ;;  cntr            1   36[BANK0 ] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  3   27[BANK0 ] float 
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1951 ;;      Params:         0       6       0       0
  1952 ;;      Locals:         0       6       0       0
  1953 ;;      Temps:          0       3       0       0
  1954 ;;      Totals:         0      15       0       0
  1955 ;;Total ram usage:       15 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    6
  1958 ;; This function calls:
  1959 ;;		___ftpack
  1960 ;; This function is called by:
  1961 ;;		_Check_Power
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text13
  1966  00074C                     __ptext13:
  1967                           	opt stack 0
  1968  00074C                     ___ftdiv:
  1969                           	opt stack 23
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;incstack = 0
  1973  00074C  C07D  F081         	movff	___ftdiv@f1+2,??___ftdiv
  1974  000750  0100               	movlb	0	; () banked
  1975  000752  6B82               	clrf	(??___ftdiv+1)& (0+255),b
  1976  000754  6B83               	clrf	(??___ftdiv+2)& (0+255),b
  1977  000756  0100               	movlb	0	; () banked
  1978  000758  357C               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  1979  00075A  0100               	movlb	0	; () banked
  1980  00075C  3781               	rlcf	??___ftdiv& (0+255),f,b
  1981  00075E  E301               	bnc	u1521
  1982  000760  8182               	bsf	(??___ftdiv+1)& (0+255),0,b
  1983  000762                     u1521:
  1984  000762  0100               	movlb	0	; () banked
  1985  000764  5181               	movf	??___ftdiv& (0+255),w,b
  1986  000766  0100               	movlb	0	; () banked
  1987  000768  6F88               	movwf	___ftdiv@exp& (0+255),b
  1988  00076A  0100               	movlb	0	; () banked
  1989  00076C  5188               	movf	___ftdiv@exp& (0+255),w,b
  1990  00076E  A4D8               	btfss	status,2,c
  1991  000770  D00A               	goto	l1814
  1992                           
  1993                           ; BSR set to: 0
  1994  000772  0E00               	movlw	0
  1995  000774  0100               	movlb	0	; () banked
  1996  000776  6F7B               	movwf	?___ftdiv& (0+255),b
  1997  000778  0E00               	movlw	0
  1998  00077A  0100               	movlb	0	; () banked
  1999  00077C  6F7C               	movwf	(?___ftdiv+1)& (0+255),b
  2000  00077E  0E00               	movlw	0
  2001  000780  0100               	movlb	0	; () banked
  2002  000782  6F7D               	movwf	(?___ftdiv+2)& (0+255),b
  2003                           
  2004                           ; BSR set to: 0
  2005  000784  0012               	return	
  2006  000786                     l1814:
  2007                           
  2008                           ; BSR set to: 0
  2009  000786  C080  F081         	movff	___ftdiv@f2+2,??___ftdiv
  2010  00078A  0100               	movlb	0	; () banked
  2011  00078C  6B82               	clrf	(??___ftdiv+1)& (0+255),b
  2012  00078E  6B83               	clrf	(??___ftdiv+2)& (0+255),b
  2013  000790  0100               	movlb	0	; () banked
  2014  000792  357F               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2015  000794  0100               	movlb	0	; () banked
  2016  000796  3781               	rlcf	??___ftdiv& (0+255),f,b
  2017  000798  E301               	bnc	u1541
  2018  00079A  8182               	bsf	(??___ftdiv+1)& (0+255),0,b
  2019  00079C                     u1541:
  2020  00079C  0100               	movlb	0	; () banked
  2021  00079E  5181               	movf	??___ftdiv& (0+255),w,b
  2022  0007A0  0100               	movlb	0	; () banked
  2023  0007A2  6F89               	movwf	___ftdiv@sign& (0+255),b
  2024  0007A4  0100               	movlb	0	; () banked
  2025  0007A6  5189               	movf	___ftdiv@sign& (0+255),w,b
  2026  0007A8  A4D8               	btfss	status,2,c
  2027  0007AA  D00A               	goto	l1820
  2028                           
  2029                           ; BSR set to: 0
  2030  0007AC  0E00               	movlw	0
  2031  0007AE  0100               	movlb	0	; () banked
  2032  0007B0  6F7B               	movwf	?___ftdiv& (0+255),b
  2033  0007B2  0E00               	movlw	0
  2034  0007B4  0100               	movlb	0	; () banked
  2035  0007B6  6F7C               	movwf	(?___ftdiv+1)& (0+255),b
  2036  0007B8  0E00               	movlw	0
  2037  0007BA  0100               	movlb	0	; () banked
  2038  0007BC  6F7D               	movwf	(?___ftdiv+2)& (0+255),b
  2039                           
  2040                           ; BSR set to: 0
  2041  0007BE  0012               	return	
  2042  0007C0                     l1820:
  2043                           
  2044                           ; BSR set to: 0
  2045  0007C0  0E00               	movlw	0
  2046  0007C2  0100               	movlb	0	; () banked
  2047  0007C4  6F85               	movwf	___ftdiv@f3& (0+255),b
  2048  0007C6  0E00               	movlw	0
  2049  0007C8  0100               	movlb	0	; () banked
  2050  0007CA  6F86               	movwf	(___ftdiv@f3+1)& (0+255),b
  2051  0007CC  0E00               	movlw	0
  2052  0007CE  0100               	movlb	0	; () banked
  2053  0007D0  6F87               	movwf	(___ftdiv@f3+2)& (0+255),b
  2054                           
  2055                           ; BSR set to: 0
  2056  0007D2  0100               	movlb	0	; () banked
  2057  0007D4  5189               	movf	___ftdiv@sign& (0+255),w,b
  2058  0007D6  0F89               	addlw	137
  2059  0007D8  0100               	movlb	0	; () banked
  2060  0007DA  5F88               	subwf	___ftdiv@exp& (0+255),f,b
  2061                           
  2062                           ; BSR set to: 0
  2063  0007DC  C07D  F089         	movff	___ftdiv@f1+2,___ftdiv@sign
  2064                           
  2065                           ; BSR set to: 0
  2066  0007E0  0100               	movlb	0	; () banked
  2067  0007E2  5180               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2068  0007E4  0100               	movlb	0	; () banked
  2069  0007E6  1B89               	xorwf	___ftdiv@sign& (0+255),f,b
  2070                           
  2071                           ; BSR set to: 0
  2072  0007E8  0E80               	movlw	128
  2073  0007EA  0100               	movlb	0	; () banked
  2074  0007EC  1789               	andwf	___ftdiv@sign& (0+255),f,b
  2075                           
  2076                           ; BSR set to: 0
  2077  0007EE  0100               	movlb	0	; () banked
  2078  0007F0  8F7C               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2079                           
  2080                           ; BSR set to: 0
  2081  0007F2  0EFF               	movlw	255
  2082  0007F4  0100               	movlb	0	; () banked
  2083  0007F6  177B               	andwf	___ftdiv@f1& (0+255),f,b
  2084  0007F8  0EFF               	movlw	255
  2085  0007FA  0100               	movlb	0	; () banked
  2086  0007FC  177C               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2087  0007FE  0E00               	movlw	0
  2088  000800  0100               	movlb	0	; () banked
  2089  000802  177D               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2090                           
  2091                           ; BSR set to: 0
  2092  000804  0100               	movlb	0	; () banked
  2093  000806  8F7F               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2094                           
  2095                           ; BSR set to: 0
  2096  000808  0EFF               	movlw	255
  2097  00080A  0100               	movlb	0	; () banked
  2098  00080C  177E               	andwf	___ftdiv@f2& (0+255),f,b
  2099  00080E  0EFF               	movlw	255
  2100  000810  0100               	movlb	0	; () banked
  2101  000812  177F               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2102  000814  0E00               	movlw	0
  2103  000816  0100               	movlb	0	; () banked
  2104  000818  1780               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2105                           
  2106                           ; BSR set to: 0
  2107  00081A  0E18               	movlw	24
  2108  00081C  0100               	movlb	0	; () banked
  2109  00081E  6F84               	movwf	___ftdiv@cntr& (0+255),b
  2110  000820                     l1840:
  2111                           
  2112                           ; BSR set to: 0
  2113  000820  0100               	movlb	0	; () banked
  2114  000822  90D8               	bcf	status,0,c
  2115  000824  3785               	rlcf	___ftdiv@f3& (0+255),f,b
  2116  000826  3786               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2117  000828  3787               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2118                           
  2119                           ; BSR set to: 0
  2120  00082A  0100               	movlb	0	; () banked
  2121  00082C  517E               	movf	___ftdiv@f2& (0+255),w,b
  2122  00082E  0100               	movlb	0	; () banked
  2123  000830  5D7B               	subwf	___ftdiv@f1& (0+255),w,b
  2124  000832  0100               	movlb	0	; () banked
  2125  000834  517F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2126  000836  0100               	movlb	0	; () banked
  2127  000838  597C               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2128  00083A  0100               	movlb	0	; () banked
  2129  00083C  5180               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2130  00083E  0100               	movlb	0	; () banked
  2131  000840  597D               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2132  000842  A0D8               	btfss	status,0,c
  2133  000844  D00E               	goto	l625
  2134                           
  2135                           ; BSR set to: 0
  2136  000846  0100               	movlb	0	; () banked
  2137  000848  517E               	movf	___ftdiv@f2& (0+255),w,b
  2138  00084A  0100               	movlb	0	; () banked
  2139  00084C  5F7B               	subwf	___ftdiv@f1& (0+255),f,b
  2140  00084E  0100               	movlb	0	; () banked
  2141  000850  517F               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2142  000852  0100               	movlb	0	; () banked
  2143  000854  5B7C               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2144  000856  0100               	movlb	0	; () banked
  2145  000858  5180               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2146  00085A  0100               	movlb	0	; () banked
  2147  00085C  5B7D               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2148                           
  2149                           ; BSR set to: 0
  2150  00085E  0100               	movlb	0	; () banked
  2151  000860  8185               	bsf	___ftdiv@f3& (0+255),0,b
  2152  000862                     l625:
  2153                           
  2154                           ; BSR set to: 0
  2155  000862  0100               	movlb	0	; () banked
  2156  000864  90D8               	bcf	status,0,c
  2157  000866  377B               	rlcf	___ftdiv@f1& (0+255),f,b
  2158  000868  377C               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2159  00086A  377D               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2160                           
  2161                           ; BSR set to: 0
  2162  00086C  0100               	movlb	0	; () banked
  2163  00086E  2F84               	decfsz	___ftdiv@cntr& (0+255),f,b
  2164  000870  D7D7               	goto	l1840
  2165                           
  2166                           ; BSR set to: 0
  2167                           
  2168                           ; BSR set to: 0
  2169  000872  C085  F060         	movff	___ftdiv@f3,___ftpack@arg
  2170  000876  C086  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2171  00087A  C087  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2172  00087E  C088  F063         	movff	___ftdiv@exp,___ftpack@exp
  2173  000882  C089  F064         	movff	___ftdiv@sign,___ftpack@sign
  2174  000886  EC4C  F004         	call	___ftpack	;wreg free
  2175  00088A  C060  F07B         	movff	?___ftpack,?___ftdiv
  2176  00088E  C061  F07C         	movff	?___ftpack+1,?___ftdiv+1
  2177  000892  C062  F07D         	movff	?___ftpack+2,?___ftdiv+2
  2178  000896  0012               	return	
  2179  000898                     __end_of___ftdiv:
  2180                           	opt stack 0
  2181                           tblptru	equ	0xFF8
  2182                           tblptrh	equ	0xFF7
  2183                           tblptrl	equ	0xFF6
  2184                           tablat	equ	0xFF5
  2185                           prodh	equ	0xFF4
  2186                           prodl	equ	0xFF3
  2187                           intcon	equ	0xFF2
  2188                           postinc0	equ	0xFEE
  2189                           wreg	equ	0xFE8
  2190                           indf2	equ	0xFDF
  2191                           fsr2h	equ	0xFDA
  2192                           fsr2l	equ	0xFD9
  2193                           status	equ	0xFD8
  2194                           
  2195 ;; *************** function ___ftpack *****************
  2196 ;; Defined at:
  2197 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  arg             3    0[BANK0 ] unsigned um
  2200 ;;  exp             1    3[BANK0 ] unsigned char 
  2201 ;;  sign            1    4[BANK0 ] unsigned char 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  3    0[BANK0 ] float 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2213 ;;      Params:         0       5       0       0
  2214 ;;      Locals:         0       0       0       0
  2215 ;;      Temps:          0       3       0       0
  2216 ;;      Totals:         0       8       0       0
  2217 ;;Total ram usage:        8 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    5
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		___ftdiv
  2224 ;;		___ftmul
  2225 ;;		___lbtoft
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text14
  2230  000898                     __ptext14:
  2231                           	opt stack 0
  2232  000898                     ___ftpack:
  2233                           	opt stack 23
  2234                           
  2235                           ;incstack = 0
  2236  000898  0100               	movlb	0	; () banked
  2237  00089A  5163               	movf	___ftpack@exp& (0+255),w,b
  2238  00089C  0100               	movlb	0	; () banked
  2239  00089E  B4D8               	btfsc	status,2,c
  2240  0008A0  D008               	goto	l1564
  2241                           
  2242                           ; BSR set to: 0
  2243  0008A2  0100               	movlb	0	; () banked
  2244  0008A4  5160               	movf	___ftpack@arg& (0+255),w,b
  2245  0008A6  0100               	movlb	0	; () banked
  2246  0008A8  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  2247  0008AA  0100               	movlb	0	; () banked
  2248  0008AC  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  2249  0008AE  A4D8               	btfss	status,2,c
  2250  0008B0  D011               	goto	l1570
  2251  0008B2                     l1564:
  2252                           
  2253                           ; BSR set to: 0
  2254  0008B2  0E00               	movlw	0
  2255  0008B4  0100               	movlb	0	; () banked
  2256  0008B6  6F60               	movwf	?___ftpack& (0+255),b
  2257  0008B8  0E00               	movlw	0
  2258  0008BA  0100               	movlb	0	; () banked
  2259  0008BC  6F61               	movwf	(?___ftpack+1)& (0+255),b
  2260  0008BE  0E00               	movlw	0
  2261  0008C0  0100               	movlb	0	; () banked
  2262  0008C2  6F62               	movwf	(?___ftpack+2)& (0+255),b
  2263                           
  2264                           ; BSR set to: 0
  2265  0008C4  0012               	return	
  2266  0008C6                     l1568:
  2267                           
  2268                           ; BSR set to: 0
  2269  0008C6  0100               	movlb	0	; () banked
  2270  0008C8  2B63               	incf	___ftpack@exp& (0+255),f,b
  2271  0008CA  0100               	movlb	0	; () banked
  2272  0008CC  90D8               	bcf	status,0,c
  2273  0008CE  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2274  0008D0  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2275  0008D2  3360               	rrcf	___ftpack@arg& (0+255),f,b
  2276  0008D4                     l1570:
  2277                           
  2278                           ; BSR set to: 0
  2279  0008D4  0E00               	movlw	0
  2280  0008D6  0100               	movlb	0	; () banked
  2281  0008D8  1560               	andwf	___ftpack@arg& (0+255),w,b
  2282  0008DA  0100               	movlb	0	; () banked
  2283  0008DC  6F65               	movwf	??___ftpack& (0+255),b
  2284  0008DE  0E00               	movlw	0
  2285  0008E0  0100               	movlb	0	; () banked
  2286  0008E2  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2287  0008E4  0100               	movlb	0	; () banked
  2288  0008E6  6F66               	movwf	(??___ftpack+1)& (0+255),b
  2289  0008E8  0EFE               	movlw	254
  2290  0008EA  0100               	movlb	0	; () banked
  2291  0008EC  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2292  0008EE  0100               	movlb	0	; () banked
  2293  0008F0  6F67               	movwf	(??___ftpack+2)& (0+255),b
  2294  0008F2  0100               	movlb	0	; () banked
  2295  0008F4  5165               	movf	??___ftpack& (0+255),w,b
  2296  0008F6  0100               	movlb	0	; () banked
  2297  0008F8  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  2298  0008FA  0100               	movlb	0	; () banked
  2299  0008FC  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  2300  0008FE  B4D8               	btfsc	status,2,c
  2301  000900  D011               	goto	l1576
  2302  000902  D7E1               	goto	l1568
  2303  000904                     l1572:
  2304                           
  2305                           ; BSR set to: 0
  2306  000904  0100               	movlb	0	; () banked
  2307  000906  2B63               	incf	___ftpack@exp& (0+255),f,b
  2308                           
  2309                           ; BSR set to: 0
  2310  000908  0E01               	movlw	1
  2311  00090A  0100               	movlb	0	; () banked
  2312  00090C  2760               	addwf	___ftpack@arg& (0+255),f,b
  2313  00090E  0E00               	movlw	0
  2314  000910  0100               	movlb	0	; () banked
  2315  000912  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  2316  000914  0E00               	movlw	0
  2317  000916  0100               	movlb	0	; () banked
  2318  000918  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  2319  00091A  0100               	movlb	0	; () banked
  2320  00091C  90D8               	bcf	status,0,c
  2321  00091E  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2322  000920  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2323  000922  3360               	rrcf	___ftpack@arg& (0+255),f,b
  2324  000924                     l1576:
  2325                           
  2326                           ; BSR set to: 0
  2327  000924  0E00               	movlw	0
  2328  000926  0100               	movlb	0	; () banked
  2329  000928  1560               	andwf	___ftpack@arg& (0+255),w,b
  2330  00092A  0100               	movlb	0	; () banked
  2331  00092C  6F65               	movwf	??___ftpack& (0+255),b
  2332  00092E  0E00               	movlw	0
  2333  000930  0100               	movlb	0	; () banked
  2334  000932  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2335  000934  0100               	movlb	0	; () banked
  2336  000936  6F66               	movwf	(??___ftpack+1)& (0+255),b
  2337  000938  0EFF               	movlw	255
  2338  00093A  0100               	movlb	0	; () banked
  2339  00093C  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2340  00093E  0100               	movlb	0	; () banked
  2341  000940  6F67               	movwf	(??___ftpack+2)& (0+255),b
  2342  000942  0100               	movlb	0	; () banked
  2343  000944  5165               	movf	??___ftpack& (0+255),w,b
  2344  000946  0100               	movlb	0	; () banked
  2345  000948  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  2346  00094A  0100               	movlb	0	; () banked
  2347  00094C  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  2348  00094E  B4D8               	btfsc	status,2,c
  2349  000950  D008               	goto	l1580
  2350  000952  D7D8               	goto	l1572
  2351  000954                     l1578:
  2352                           
  2353                           ; BSR set to: 0
  2354  000954  0100               	movlb	0	; () banked
  2355  000956  0763               	decf	___ftpack@exp& (0+255),f,b
  2356  000958  0100               	movlb	0	; () banked
  2357  00095A  90D8               	bcf	status,0,c
  2358  00095C  3760               	rlcf	___ftpack@arg& (0+255),f,b
  2359  00095E  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  2360  000960  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  2361  000962                     l1580:
  2362                           
  2363                           ; BSR set to: 0
  2364  000962  0100               	movlb	0	; () banked
  2365  000964  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  2366  000966  D004               	goto	l567
  2367                           
  2368                           ; BSR set to: 0
  2369  000968  0E02               	movlw	2
  2370  00096A  0100               	movlb	0	; () banked
  2371  00096C  6163               	cpfslt	___ftpack@exp& (0+255),b
  2372  00096E  D7F2               	goto	l1578
  2373  000970                     l567:
  2374                           
  2375                           ; BSR set to: 0
  2376  000970  0100               	movlb	0	; () banked
  2377  000972  B163               	btfsc	___ftpack@exp& (0+255),0,b
  2378  000974  D002               	goto	l1586
  2379                           
  2380                           ; BSR set to: 0
  2381  000976  0100               	movlb	0	; () banked
  2382  000978  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  2383  00097A                     l1586:
  2384                           
  2385                           ; BSR set to: 0
  2386  00097A  0100               	movlb	0	; () banked
  2387  00097C  90D8               	bcf	status,0,c
  2388  00097E  3363               	rrcf	___ftpack@exp& (0+255),f,b
  2389  000980  0100               	movlb	0	; () banked
  2390  000982  5163               	movf	___ftpack@exp& (0+255),w,b
  2391  000984  0100               	movlb	0	; () banked
  2392  000986  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  2393                           
  2394                           ; BSR set to: 0
  2395  000988  0100               	movlb	0	; () banked
  2396  00098A  5164               	movf	___ftpack@sign& (0+255),w,b
  2397  00098C  0100               	movlb	0	; () banked
  2398  00098E  B4D8               	btfsc	status,2,c
  2399  000990  D002               	goto	l1592
  2400                           
  2401                           ; BSR set to: 0
  2402  000992  0100               	movlb	0	; () banked
  2403  000994  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  2404  000996                     l1592:
  2405                           
  2406                           ; BSR set to: 0
  2407  000996  C060  F060         	movff	___ftpack@arg,?___ftpack
  2408  00099A  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  2409  00099E  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  2410  0009A2  0012               	return	
  2411  0009A4                     __end_of___ftpack:
  2412                           	opt stack 0
  2413                           tblptru	equ	0xFF8
  2414                           tblptrh	equ	0xFF7
  2415                           tblptrl	equ	0xFF6
  2416                           tablat	equ	0xFF5
  2417                           prodh	equ	0xFF4
  2418                           prodl	equ	0xFF3
  2419                           intcon	equ	0xFF2
  2420                           postinc0	equ	0xFEE
  2421                           wreg	equ	0xFE8
  2422                           indf2	equ	0xFDF
  2423                           fsr2h	equ	0xFDA
  2424                           fsr2l	equ	0xFD9
  2425                           status	equ	0xFD8
  2426                           
  2427 ;; *************** function _Check_Ignition *****************
  2428 ;; Defined at:
  2429 ;;		line 115 in file "ignition.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;		None
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  c               1    2[BANK0 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;		None               void
  2436 ;; Registers used:
  2437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2443 ;;      Params:         0       0       0       0
  2444 ;;      Locals:         0       1       0       0
  2445 ;;      Temps:          0       1       0       0
  2446 ;;      Totals:         0       2       0       0
  2447 ;;Total ram usage:        2 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    6
  2450 ;; This function calls:
  2451 ;;		_Ignite_Port
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text15
  2458  000E04                     __ptext15:
  2459                           	opt stack 0
  2460  000E04                     _Check_Ignition:
  2461                           	opt stack 24
  2462                           
  2463                           ;ignition.c: 116: for(unsigned char c = 0; c < 10; c++) {
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;incstack = 0
  2467  000E04  0E00               	movlw	0
  2468  000E06  0100               	movlb	0	; () banked
  2469  000E08  6F62               	movwf	Check_Ignition@c& (0+255),b
  2470  000E0A                     l1952:
  2471                           
  2472                           ; BSR set to: 0
  2473  000E0A  0E09               	movlw	9
  2474  000E0C  0100               	movlb	0	; () banked
  2475  000E0E  6562               	cpfsgt	Check_Ignition@c& (0+255),b
  2476  000E10  D001               	goto	l1956
  2477  000E12  0012               	return	
  2478  000E14                     l1956:
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;ignition.c: 117: if(Marker[c] == 1) {
  2482  000E14  0100               	movlb	0	; () banked
  2483  000E16  5162               	movf	Check_Ignition@c& (0+255),w,b
  2484  000E18  0D01               	mullw	1
  2485  000E1A  0E96               	movlw	low _Marker
  2486  000E1C  24F3               	addwf	prodl,w,c
  2487  000E1E  6ED9               	movwf	fsr2l,c
  2488  000E20  0E00               	movlw	high _Marker
  2489  000E22  20F4               	addwfc	prodh,w,c
  2490  000E24  6EDA               	movwf	fsr2h,c
  2491  000E26  04DE               	decf	postinc2,w,c
  2492  000E28  A4D8               	btfss	status,2,c
  2493  000E2A  D017               	goto	l1964
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;ignition.c: 118: Ignite_Port(c);
  2497  000E2C  0100               	movlb	0	; () banked
  2498  000E2E  5162               	movf	Check_Ignition@c& (0+255),w,b
  2499  000E30  ECC2  F006         	call	_Ignite_Port
  2500                           
  2501                           ;ignition.c: 119: _delay((unsigned long)((15)*(4000000/4000.0)));
  2502  000E34  0E14               	movlw	20
  2503  000E36  0100               	movlb	0	; () banked
  2504  000E38  6F61               	movwf	??_Check_Ignition& (0+255),b
  2505  000E3A  0E7A               	movlw	122
  2506  000E3C                     u1847:
  2507  000E3C  2EE8               	decfsz	wreg,f,c
  2508  000E3E  D7FE               	goto	u1847
  2509  000E40  2F61               	decfsz	??_Check_Ignition& (0+255),f,b
  2510  000E42  D7FC               	goto	u1847
  2511                           
  2512                           ;ignition.c: 120: Marker[c] = 0;
  2513  000E44  0100               	movlb	0	; () banked
  2514  000E46  5162               	movf	Check_Ignition@c& (0+255),w,b
  2515  000E48  0D01               	mullw	1
  2516  000E4A  0E96               	movlw	low _Marker
  2517  000E4C  24F3               	addwf	prodl,w,c
  2518  000E4E  6ED9               	movwf	fsr2l,c
  2519  000E50  0E00               	movlw	high _Marker
  2520  000E52  20F4               	addwfc	prodh,w,c
  2521  000E54  6EDA               	movwf	fsr2h,c
  2522  000E56  0E00               	movlw	0
  2523  000E58  6EDF               	movwf	indf2,c
  2524  000E5A                     l1964:
  2525                           
  2526                           ; BSR set to: 0
  2527  000E5A  0100               	movlb	0	; () banked
  2528  000E5C  2B62               	incf	Check_Ignition@c& (0+255),f,b
  2529  000E5E  D7D5               	goto	l1952
  2530  000E60                     __end_of_Check_Ignition:
  2531                           	opt stack 0
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           prodh	equ	0xFF4
  2537                           prodl	equ	0xFF3
  2538                           intcon	equ	0xFF2
  2539                           postinc0	equ	0xFEE
  2540                           wreg	equ	0xFE8
  2541                           indf2	equ	0xFDF
  2542                           postinc2	equ	0xFDE
  2543                           fsr2h	equ	0xFDA
  2544                           fsr2l	equ	0xFD9
  2545                           status	equ	0xFD8
  2546                           
  2547 ;; *************** function _Ignite_Port *****************
  2548 ;; Defined at:
  2549 ;;		line 80 in file "ignition.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  ignite_numbe    1    wreg     unsigned char 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  ignite_numbe    1    0[BANK0 ] unsigned char 
  2554 ;; Return value:  Size  Location     Type
  2555 ;;		None               void
  2556 ;; Registers used:
  2557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2563 ;;      Params:         0       0       0       0
  2564 ;;      Locals:         0       1       0       0
  2565 ;;      Temps:          0       0       0       0
  2566 ;;      Totals:         0       1       0       0
  2567 ;;Total ram usage:        1 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    5
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_Check_Ignition
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text16
  2578  000D84                     __ptext16:
  2579                           	opt stack 0
  2580  000D84                     _Ignite_Port:
  2581                           	opt stack 24
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;incstack = 0
  2585                           ;Ignite_Port@ignite_number stored from wreg
  2586  000D84  0100               	movlb	0	; () banked
  2587  000D86  6F60               	movwf	Ignite_Port@ignite_number& (0+255),b
  2588                           
  2589                           ;ignition.c: 81: switch(Marker[ignite_number]) {
  2590  000D88  D014               	goto	l1804
  2591  000D8A                     l274:
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;ignition.c: 83: PORTCbits.RC5 = 1;
  2595  000D8A  8A82               	bsf	3970,5,c	;volatile
  2596                           
  2597                           ;ignition.c: 84: break;
  2598  000D8C  0012               	return	
  2599  000D8E                     l276:
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;ignition.c: 86: PORTDbits.RD3 = 1;
  2603  000D8E  8683               	bsf	3971,3,c	;volatile
  2604                           
  2605                           ;ignition.c: 87: break;
  2606  000D90  0012               	return	
  2607  000D92                     l277:
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;ignition.c: 89: PORTDbits.RD1 = 1;
  2611  000D92  8283               	bsf	3971,1,c	;volatile
  2612                           
  2613                           ;ignition.c: 90: break;
  2614  000D94  0012               	return	
  2615  000D96                     l278:
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;ignition.c: 92: PORTCbits.RC3 = 1;
  2619  000D96  8682               	bsf	3970,3,c	;volatile
  2620                           
  2621                           ;ignition.c: 93: break;
  2622  000D98  0012               	return	
  2623  000D9A                     l279:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;ignition.c: 95: PORTCbits.RC1 = 1;
  2627  000D9A  8282               	bsf	3970,1,c	;volatile
  2628                           
  2629                           ;ignition.c: 96: break;
  2630  000D9C  0012               	return	
  2631  000D9E                     l280:
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;ignition.c: 98: PORTEbits.RE1 = 1;
  2635  000D9E  8284               	bsf	3972,1,c	;volatile
  2636                           
  2637                           ;ignition.c: 99: break;
  2638  000DA0  0012               	return	
  2639  000DA2                     l281:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;ignition.c: 101: PORTAbits.RA5 = 1;
  2643  000DA2  8A80               	bsf	3968,5,c	;volatile
  2644                           
  2645                           ;ignition.c: 102: break;
  2646  000DA4  0012               	return	
  2647  000DA6                     l282:
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;ignition.c: 104: PORTBbits.RB5 = 1;
  2651  000DA6  8A81               	bsf	3969,5,c	;volatile
  2652                           
  2653                           ;ignition.c: 105: break;
  2654  000DA8  0012               	return	
  2655  000DAA                     l283:
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;ignition.c: 107: PORTAbits.RA3 = 1;
  2659  000DAA  8680               	bsf	3968,3,c	;volatile
  2660                           
  2661                           ;ignition.c: 108: break;
  2662  000DAC  0012               	return	
  2663  000DAE                     l284:
  2664                           
  2665                           ; BSR set to: 0
  2666                           ;ignition.c: 110: PORTAbits.RA1 = 1;
  2667  000DAE  8280               	bsf	3968,1,c	;volatile
  2668                           
  2669                           ; BSR set to: 0
  2670                           ;ignition.c: 112: }
  2671                           
  2672                           ;ignition.c: 111: break;
  2673  000DB0  0012               	return	
  2674  000DB2                     l1804:
  2675  000DB2  0100               	movlb	0	; () banked
  2676  000DB4  5160               	movf	Ignite_Port@ignite_number& (0+255),w,b
  2677  000DB6  0D01               	mullw	1
  2678  000DB8  0E96               	movlw	low _Marker
  2679  000DBA  24F3               	addwf	prodl,w,c
  2680  000DBC  6ED9               	movwf	fsr2l,c
  2681  000DBE  0E00               	movlw	high _Marker
  2682  000DC0  20F4               	addwfc	prodh,w,c
  2683  000DC2  6EDA               	movwf	fsr2h,c
  2684  000DC4  50DF               	movf	indf2,w,c
  2685                           
  2686                           ; Switch size 1, requested type "space"
  2687                           ; Number of cases is 10, Range of values is 0 to 9
  2688                           ; switch strategies available:
  2689                           ; Name         Instructions Cycles
  2690                           ; simple_byte           31    16 (average)
  2691                           ;	Chosen strategy is simple_byte
  2692  000DC6  0A00               	xorlw	0	; case 0
  2693  000DC8  B4D8               	btfsc	status,2,c
  2694  000DCA  D7DF               	goto	l274
  2695  000DCC  0A01               	xorlw	1	; case 1
  2696  000DCE  B4D8               	btfsc	status,2,c
  2697  000DD0  D7DE               	goto	l276
  2698  000DD2  0A03               	xorlw	3	; case 2
  2699  000DD4  B4D8               	btfsc	status,2,c
  2700  000DD6  D7DD               	goto	l277
  2701  000DD8  0A01               	xorlw	1	; case 3
  2702  000DDA  B4D8               	btfsc	status,2,c
  2703  000DDC  D7DC               	goto	l278
  2704  000DDE  0A07               	xorlw	7	; case 4
  2705  000DE0  B4D8               	btfsc	status,2,c
  2706  000DE2  D7DB               	goto	l279
  2707  000DE4  0A01               	xorlw	1	; case 5
  2708  000DE6  B4D8               	btfsc	status,2,c
  2709  000DE8  D7DA               	goto	l280
  2710  000DEA  0A03               	xorlw	3	; case 6
  2711  000DEC  B4D8               	btfsc	status,2,c
  2712  000DEE  D7D9               	goto	l281
  2713  000DF0  0A01               	xorlw	1	; case 7
  2714  000DF2  B4D8               	btfsc	status,2,c
  2715  000DF4  D7D8               	goto	l282
  2716  000DF6  0A0F               	xorlw	15	; case 8
  2717  000DF8  B4D8               	btfsc	status,2,c
  2718  000DFA  D7D7               	goto	l283
  2719  000DFC  0A01               	xorlw	1	; case 9
  2720  000DFE  A4D8               	btfss	status,2,c
  2721  000E00  0012               	return	
  2722  000E02  D7D5               	goto	l284
  2723  000E04                     __end_of_Ignite_Port:
  2724                           	opt stack 0
  2725                           tblptru	equ	0xFF8
  2726                           tblptrh	equ	0xFF7
  2727                           tblptrl	equ	0xFF6
  2728                           tablat	equ	0xFF5
  2729                           prodh	equ	0xFF4
  2730                           prodl	equ	0xFF3
  2731                           intcon	equ	0xFF2
  2732                           postinc0	equ	0xFEE
  2733                           wreg	equ	0xFE8
  2734                           indf2	equ	0xFDF
  2735                           postinc2	equ	0xFDE
  2736                           fsr2h	equ	0xFDA
  2737                           fsr2l	equ	0xFD9
  2738                           status	equ	0xFD8
  2739                           
  2740 ;; *************** function _Isr *****************
  2741 ;; Defined at:
  2742 ;;		line 3 in file "interrupt.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;		None               void
  2749 ;; Registers used:
  2750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2756 ;;      Params:         0       0       0       0
  2757 ;;      Locals:         0       0       0       0
  2758 ;;      Temps:         14       0       0       0
  2759 ;;      Totals:        14       0       0       0
  2760 ;;Total ram usage:       14 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    4
  2763 ;; This function calls:
  2764 ;;		_Evaluate_Reception
  2765 ;;		_Receive
  2766 ;; This function is called by:
  2767 ;;		Interrupt level 2
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	intcode
  2772  000008                     __pintcode:
  2773                           	opt stack 0
  2774  000008                     _Isr:
  2775                           	opt stack 23
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;incstack = 0
  2779  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2780  00000A  CFFA F037          	movff	pclath,??_Isr
  2781  00000E  CFFB F038          	movff	pclatu,??_Isr+1
  2782  000012  CFE9 F039          	movff	fsr0l,??_Isr+2
  2783  000016  CFEA F03A          	movff	fsr0h,??_Isr+3
  2784  00001A  CFE1 F03B          	movff	fsr1l,??_Isr+4
  2785  00001E  CFE2 F03C          	movff	fsr1h,??_Isr+5
  2786  000022  CFD9 F03D          	movff	fsr2l,??_Isr+6
  2787  000026  CFDA F03E          	movff	fsr2h,??_Isr+7
  2788  00002A  CFF3 F03F          	movff	prodl,??_Isr+8
  2789  00002E  CFF4 F040          	movff	prodh,??_Isr+9
  2790  000032  CFF6 F041          	movff	tblptrl,??_Isr+10
  2791  000036  CFF7 F042          	movff	tblptrh,??_Isr+11
  2792  00003A  CFF8 F043          	movff	tblptru,??_Isr+12
  2793  00003E  CFF5 F044          	movff	tablat,??_Isr+13
  2794                           
  2795                           ;interrupt.c: 5: if(PIR1bits.RCIF == 1) {
  2796  000042  AA9E               	btfss	3998,5,c	;volatile
  2797  000044  D02E               	goto	i2l342
  2798                           
  2799                           ;interrupt.c: 6: PIR1bits.RCIF = 0;
  2800  000046  9A9E               	bcf	3998,5,c	;volatile
  2801                           
  2802                           ;interrupt.c: 7: if(RCSTA1bits.RX9D == 1) {
  2803  000048  A0AB               	btfss	4011,0,c	;volatile
  2804  00004A  D015               	goto	i2l336
  2805                           
  2806                           ;interrupt.c: 8: receive_counter = 0;
  2807  00004C  0E00               	movlw	0
  2808  00004E  6E49               	movwf	_receive_counter,c
  2809                           
  2810                           ;interrupt.c: 10: received[receive_counter] =
  2811                           ;interrupt.c: 11: Receive();
  2812  000050  5049               	movf	_receive_counter,w,c
  2813  000052  0D01               	mullw	1
  2814  000054  0E45               	movlw	low _received
  2815  000056  24F3               	addwf	prodl,w,c
  2816  000058  6ED9               	movwf	fsr2l,c
  2817  00005A  0E00               	movlw	high _received
  2818  00005C  20F4               	addwfc	prodh,w,c
  2819  00005E  6EDA               	movwf	fsr2h,c
  2820  000060  EC14  F008         	call	_Receive	;wreg free
  2821  000064  6EDF               	movwf	indf2,c
  2822                           
  2823                           ;interrupt.c: 12: receive_counter++;
  2824  000066  2A49               	incf	_receive_counter,f,c
  2825                           
  2826                           ;interrupt.c: 14: if(received[0] == 0x01) {
  2827  000068  0445               	decf	_received,w,c
  2828  00006A  A4D8               	btfss	status,2,c
  2829  00006C  D002               	goto	i2l337
  2830                           
  2831                           ;interrupt.c: 15: slave_addressed = 1;
  2832  00006E  824A               	bsf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  2833                           
  2834                           ;interrupt.c: 16: } else {
  2835  000070  D018               	goto	i2l342
  2836  000072                     i2l337:
  2837                           
  2838                           ;interrupt.c: 17: slave_addressed = 0;
  2839  000072  924A               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  2840                           
  2841                           ;interrupt.c: 18: }
  2842                           ;interrupt.c: 19: } else if(slave_addressed == 1) {
  2843  000074  D016               	goto	i2l342
  2844  000076                     i2l336:
  2845  000076  A24A               	btfss	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  2846  000078  D014               	goto	i2l342
  2847                           
  2848                           ;interrupt.c: 20: received[receive_counter] =
  2849                           ;interrupt.c: 21: Receive();
  2850  00007A  5049               	movf	_receive_counter,w,c
  2851  00007C  0D01               	mullw	1
  2852  00007E  0E45               	movlw	low _received
  2853  000080  24F3               	addwf	prodl,w,c
  2854  000082  6ED9               	movwf	fsr2l,c
  2855  000084  0E00               	movlw	high _received
  2856  000086  20F4               	addwfc	prodh,w,c
  2857  000088  6EDA               	movwf	fsr2h,c
  2858  00008A  EC14  F008         	call	_Receive	;wreg free
  2859  00008E  6EDF               	movwf	indf2,c
  2860                           
  2861                           ;interrupt.c: 22: receive_counter++;
  2862  000090  2A49               	incf	_receive_counter,f,c
  2863                           
  2864                           ;interrupt.c: 24: if(receive_counter > 3) {
  2865  000092  0E03               	movlw	3
  2866  000094  6449               	cpfsgt	_receive_counter,c
  2867  000096  D005               	goto	i2l342
  2868                           
  2869                           ;interrupt.c: 25: receive_counter = 0;
  2870  000098  0E00               	movlw	0
  2871  00009A  6E49               	movwf	_receive_counter,c
  2872                           
  2873                           ;interrupt.c: 26: slave_addressed = 0;
  2874  00009C  924A               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  2875                           
  2876                           ;interrupt.c: 28: Evaluate_Reception();
  2877  00009E  ECBE  F007         	call	_Evaluate_Reception	;wreg free
  2878  0000A2                     i2l342:
  2879  0000A2  C044  FFF5         	movff	??_Isr+13,tablat
  2880  0000A6  C043  FFF8         	movff	??_Isr+12,tblptru
  2881  0000AA  C042  FFF7         	movff	??_Isr+11,tblptrh
  2882  0000AE  C041  FFF6         	movff	??_Isr+10,tblptrl
  2883  0000B2  C040  FFF4         	movff	??_Isr+9,prodh
  2884  0000B6  C03F  FFF3         	movff	??_Isr+8,prodl
  2885  0000BA  C03E  FFDA         	movff	??_Isr+7,fsr2h
  2886  0000BE  C03D  FFD9         	movff	??_Isr+6,fsr2l
  2887  0000C2  C03C  FFE2         	movff	??_Isr+5,fsr1h
  2888  0000C6  C03B  FFE1         	movff	??_Isr+4,fsr1l
  2889  0000CA  C03A  FFEA         	movff	??_Isr+3,fsr0h
  2890  0000CE  C039  FFE9         	movff	??_Isr+2,fsr0l
  2891  0000D2  C038  FFFB         	movff	??_Isr+1,pclatu
  2892  0000D6  C037  FFFA         	movff	??_Isr,pclath
  2893  0000DA  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2894  0000DC  0011               	retfie		f
  2895  0000DE                     __end_of_Isr:
  2896                           	opt stack 0
  2897                           pclatu	equ	0xFFB
  2898                           pclath	equ	0xFFA
  2899                           tblptru	equ	0xFF8
  2900                           tblptrh	equ	0xFF7
  2901                           tblptrl	equ	0xFF6
  2902                           tablat	equ	0xFF5
  2903                           prodh	equ	0xFF4
  2904                           prodl	equ	0xFF3
  2905                           intcon	equ	0xFF2
  2906                           postinc0	equ	0xFEE
  2907                           fsr0h	equ	0xFEA
  2908                           fsr0l	equ	0xFE9
  2909                           wreg	equ	0xFE8
  2910                           fsr1h	equ	0xFE2
  2911                           fsr1l	equ	0xFE1
  2912                           indf2	equ	0xFDF
  2913                           postinc2	equ	0xFDE
  2914                           fsr2h	equ	0xFDA
  2915                           fsr2l	equ	0xFD9
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function _Receive *****************
  2919 ;; Defined at:
  2920 ;;		line 44 in file "communication.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      unsigned char 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2934 ;;      Params:         0       0       0       0
  2935 ;;      Locals:         0       0       0       0
  2936 ;;      Temps:          0       0       0       0
  2937 ;;      Totals:         0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_Isr
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text18
  2948  001028                     __ptext18:
  2949                           	opt stack 0
  2950  001028                     _Receive:
  2951                           	opt stack 26
  2952                           
  2953                           ;communication.c: 45: if(RCSTA1bits.OERR == 1) {
  2954                           
  2955                           ;incstack = 0
  2956  001028  A2AB               	btfss	4011,1,c	;volatile
  2957  00102A  D003               	goto	i2l1462
  2958                           
  2959                           ;communication.c: 46: RCSTA1bits.CREN = 0;
  2960  00102C  98AB               	bcf	4011,4,c	;volatile
  2961                           
  2962                           ;communication.c: 47: RCSTA1bits.CREN = 1;
  2963  00102E  88AB               	bsf	4011,4,c	;volatile
  2964                           
  2965                           ;communication.c: 48: overrun = 1;
  2966  001030  804A               	bsf	_overrun/(0+8),_overrun& (0+7),c
  2967  001032                     i2l1462:
  2968                           
  2969                           ;communication.c: 49: }
  2970                           ;communication.c: 50: return (RCREG1);
  2971  001032  50AE               	movf	4014,w,c	;volatile
  2972  001034  0012               	return	
  2973  001036                     __end_of_Receive:
  2974                           	opt stack 0
  2975                           pclatu	equ	0xFFB
  2976                           pclath	equ	0xFFA
  2977                           tblptru	equ	0xFF8
  2978                           tblptrh	equ	0xFF7
  2979                           tblptrl	equ	0xFF6
  2980                           tablat	equ	0xFF5
  2981                           prodh	equ	0xFF4
  2982                           prodl	equ	0xFF3
  2983                           intcon	equ	0xFF2
  2984                           postinc0	equ	0xFEE
  2985                           fsr0h	equ	0xFEA
  2986                           fsr0l	equ	0xFE9
  2987                           wreg	equ	0xFE8
  2988                           fsr1h	equ	0xFE2
  2989                           fsr1l	equ	0xFE1
  2990                           indf2	equ	0xFDF
  2991                           postinc2	equ	0xFDE
  2992                           fsr2h	equ	0xFDA
  2993                           fsr2l	equ	0xFD9
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function _Evaluate_Reception *****************
  2997 ;; Defined at:
  2998 ;;		line 157 in file "ignition.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;		None               void
  3005 ;; Registers used:
  3006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3012 ;;      Params:         0       0       0       0
  3013 ;;      Locals:         0       0       0       0
  3014 ;;      Temps:          0       0       0       0
  3015 ;;      Totals:         0       0       0       0
  3016 ;;Total ram usage:        0 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    3
  3019 ;; This function calls:
  3020 ;;		_Mark_Ignite
  3021 ;;		_Test_Port
  3022 ;;		i2_Check_Power
  3023 ;; This function is called by:
  3024 ;;		_Isr
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text19
  3029  000F7C                     __ptext19:
  3030                           	opt stack 0
  3031  000F7C                     _Evaluate_Reception:
  3032                           	opt stack 23
  3033                           
  3034                           ;ignition.c: 163: if (received[2] == 'T') {
  3035                           
  3036                           ;incstack = 0
  3037  000F7C  0E54               	movlw	84
  3038  000F7E  1847               	xorwf	_received+2,w,c
  3039  000F80  A4D8               	btfss	status,2,c
  3040  000F82  D005               	goto	i2l1992
  3041                           
  3042                           ;ignition.c: 164: Check_Power();
  3043  000F84  ECFA  F002         	call	i2_Check_Power	;wreg free
  3044                           
  3045                           ;ignition.c: 165: Test_Port();
  3046  000F88  EC71  F000         	call	_Test_Port	;wreg free
  3047                           
  3048                           ;ignition.c: 166: } else if (received[2] == 'I') {
  3049  000F8C  0012               	return	
  3050  000F8E                     i2l1992:
  3051  000F8E  0E49               	movlw	73
  3052  000F90  1847               	xorwf	_received+2,w,c
  3053  000F92  A4D8               	btfss	status,2,c
  3054  000F94  0012               	return	
  3055                           
  3056                           ;ignition.c: 167: Mark_Ignite();
  3057  000F96  EC01  F008         	call	_Mark_Ignite	;wreg free
  3058  000F9A  0012               	return	
  3059  000F9C                     __end_of_Evaluate_Reception:
  3060                           	opt stack 0
  3061                           pclatu	equ	0xFFB
  3062                           pclath	equ	0xFFA
  3063                           tblptru	equ	0xFF8
  3064                           tblptrh	equ	0xFF7
  3065                           tblptrl	equ	0xFF6
  3066                           tablat	equ	0xFF5
  3067                           prodh	equ	0xFF4
  3068                           prodl	equ	0xFF3
  3069                           intcon	equ	0xFF2
  3070                           postinc0	equ	0xFEE
  3071                           fsr0h	equ	0xFEA
  3072                           fsr0l	equ	0xFE9
  3073                           wreg	equ	0xFE8
  3074                           fsr1h	equ	0xFE2
  3075                           fsr1l	equ	0xFE1
  3076                           indf2	equ	0xFDF
  3077                           postinc2	equ	0xFDE
  3078                           fsr2h	equ	0xFDA
  3079                           fsr2l	equ	0xFD9
  3080                           status	equ	0xFD8
  3081                           
  3082 ;; *************** function i2_Check_Power *****************
  3083 ;; Defined at:
  3084 ;;		line 129 in file "ignition.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  Check_Power     3   51[COMRAM] float 
  3089 ;;  Check_Power     3   48[COMRAM] float 
  3090 ;;  Check_Power     3   45[COMRAM] float 
  3091 ;;  Check_Power     3   42[COMRAM] float 
  3092 ;; Return value:  Size  Location     Type
  3093 ;;		None               void
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0, cstack
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3101 ;;      Params:         0       0       0       0
  3102 ;;      Locals:        12       0       0       0
  3103 ;;      Temps:          0       0       0       0
  3104 ;;      Totals:        12       0       0       0
  3105 ;;Total ram usage:       12 bytes
  3106 ;; Hardware stack levels used:    1
  3107 ;; Hardware stack levels required when called:    2
  3108 ;; This function calls:
  3109 ;;		i2___ftdiv
  3110 ;;		i2___ftge
  3111 ;;		i2___ftmul
  3112 ;;		i2___lbtoft
  3113 ;; This function is called by:
  3114 ;;		_Evaluate_Reception
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text20
  3119  0005F4                     __ptext20:
  3120                           	opt stack 0
  3121  0005F4                     i2_Check_Power:
  3122                           	opt stack 23
  3123                           
  3124                           ;ignition.c: 133: float source_power = 0;
  3125                           
  3126                           ;incstack = 0
  3127  0005F4  0E00               	movlw	0
  3128  0005F6  6E34               	movwf	i2Check_Power@source_power,c
  3129  0005F8  0E00               	movlw	0
  3130  0005FA  6E35               	movwf	i2Check_Power@source_power+1,c
  3131  0005FC  0E00               	movlw	0
  3132  0005FE  6E36               	movwf	i2Check_Power@source_power+2,c
  3133                           
  3134                           ;ignition.c: 134: float voltage = 0;
  3135  000600  0E00               	movlw	0
  3136  000602  6E2E               	movwf	i2Check_Power@voltage,c
  3137  000604  0E00               	movlw	0
  3138  000606  6E2F               	movwf	i2Check_Power@voltage+1,c
  3139  000608  0E00               	movlw	0
  3140  00060A  6E30               	movwf	i2Check_Power@voltage+2,c
  3141                           
  3142                           ;ignition.c: 135: float DAC_out = 1.024;
  3143  00060C  0E12               	movlw	18
  3144  00060E  6E2B               	movwf	i2Check_Power@DAC_out,c
  3145  000610  0E83               	movlw	131
  3146  000612  6E2C               	movwf	i2Check_Power@DAC_out+1,c
  3147  000614  0E3F               	movlw	63
  3148  000616  6E2D               	movwf	i2Check_Power@DAC_out+2,c
  3149                           
  3150                           ;ignition.c: 136: float supply = 0;
  3151  000618  0E00               	movlw	0
  3152  00061A  6E31               	movwf	i2Check_Power@supply,c
  3153  00061C  0E00               	movlw	0
  3154  00061E  6E32               	movwf	i2Check_Power@supply+1,c
  3155  000620  0E00               	movlw	0
  3156  000622  6E33               	movwf	i2Check_Power@supply+2,c
  3157                           
  3158                           ;ignition.c: 138: ADCON0bits.CHS = 0b11110;
  3159  000624  94C2               	bcf	4034,2,c	;volatile
  3160  000626  86C2               	bsf	4034,3,c	;volatile
  3161  000628  88C2               	bsf	4034,4,c	;volatile
  3162  00062A  8AC2               	bsf	4034,5,c	;volatile
  3163  00062C  8CC2               	bsf	4034,6,c	;volatile
  3164                           
  3165                           ;ignition.c: 139: ADCON0bits.GO_nDONE = 1;
  3166  00062E  82C2               	bsf	4034,1,c	;volatile
  3167  000630                     i2l297:
  3168  000630  B2C2               	btfsc	4034,1,c	;volatile
  3169  000632  D7FE               	goto	i2l297
  3170                           
  3171                           ;ignition.c: 141: supply = ((DAC_out * 255) / ADRESH);
  3172  000634  0E00               	movlw	0
  3173  000636  6E10               	movwf	i2___ftmul@f2,c
  3174  000638  0E7F               	movlw	127
  3175  00063A  6E11               	movwf	i2___ftmul@f2+1,c
  3176  00063C  0E43               	movlw	67
  3177  00063E  6E12               	movwf	i2___ftmul@f2+2,c
  3178  000640  C02B  F00D         	movff	i2Check_Power@DAC_out,i2___ftmul@f1
  3179  000644  C02C  F00E         	movff	i2Check_Power@DAC_out+1,i2___ftmul@f1+1
  3180  000648  C02D  F00F         	movff	i2Check_Power@DAC_out+2,i2___ftmul@f1+2
  3181  00064C  ECD2  F004         	call	i2___ftmul	;wreg free
  3182  000650  C00D  F01C         	movff	?i2___ftmul,i2___ftdiv@f1
  3183  000654  C00E  F01D         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
  3184  000658  C00F  F01E         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
  3185  00065C  50C4               	movf	4036,w,c	;volatile
  3186  00065E  EC9C  F007         	call	i2___lbtoft
  3187  000662  C009  F01F         	movff	?i2___lbtoft,i2___ftdiv@f2
  3188  000666  C00A  F020         	movff	?i2___lbtoft+1,i2___ftdiv@f2+1
  3189  00066A  C00B  F021         	movff	?i2___lbtoft+2,i2___ftdiv@f2+2
  3190  00066E  EC4C  F005         	call	i2___ftdiv	;wreg free
  3191  000672  C01C  F031         	movff	?i2___ftdiv,i2Check_Power@supply
  3192  000676  C01D  F032         	movff	?i2___ftdiv+1,i2Check_Power@supply+1
  3193  00067A  C01E  F033         	movff	?i2___ftdiv+2,i2Check_Power@supply+2
  3194                           
  3195                           ;ignition.c: 144: ADCON0bits.CHS = 0b01100;
  3196  00067E  94C2               	bcf	4034,2,c	;volatile
  3197  000680  96C2               	bcf	4034,3,c	;volatile
  3198  000682  88C2               	bsf	4034,4,c	;volatile
  3199  000684  8AC2               	bsf	4034,5,c	;volatile
  3200  000686  9CC2               	bcf	4034,6,c	;volatile
  3201                           
  3202                           ;ignition.c: 145: ADCON0bits.GO_nDONE = 1;
  3203  000688  82C2               	bsf	4034,1,c	;volatile
  3204  00068A                     i2l300:
  3205  00068A  B2C2               	btfsc	4034,1,c	;volatile
  3206  00068C  D7FE               	goto	i2l300
  3207                           
  3208                           ;ignition.c: 147: voltage = ((ADRESH * supply) / 255);
  3209  00068E  C031  F010         	movff	i2Check_Power@supply,i2___ftmul@f2
  3210  000692  C032  F011         	movff	i2Check_Power@supply+1,i2___ftmul@f2+1
  3211  000696  C033  F012         	movff	i2Check_Power@supply+2,i2___ftmul@f2+2
  3212  00069A  50C4               	movf	4036,w,c	;volatile
  3213  00069C  EC9C  F007         	call	i2___lbtoft
  3214  0006A0  C009  F00D         	movff	?i2___lbtoft,i2___ftmul@f1
  3215  0006A4  C00A  F00E         	movff	?i2___lbtoft+1,i2___ftmul@f1+1
  3216  0006A8  C00B  F00F         	movff	?i2___lbtoft+2,i2___ftmul@f1+2
  3217  0006AC  ECD2  F004         	call	i2___ftmul	;wreg free
  3218  0006B0  C00D  F01C         	movff	?i2___ftmul,i2___ftdiv@f1
  3219  0006B4  C00E  F01D         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
  3220  0006B8  C00F  F01E         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
  3221  0006BC  0E00               	movlw	0
  3222  0006BE  6E1F               	movwf	i2___ftdiv@f2,c
  3223  0006C0  0E7F               	movlw	127
  3224  0006C2  6E20               	movwf	i2___ftdiv@f2+1,c
  3225  0006C4  0E43               	movlw	67
  3226  0006C6  6E21               	movwf	i2___ftdiv@f2+2,c
  3227  0006C8  EC4C  F005         	call	i2___ftdiv	;wreg free
  3228  0006CC  C01C  F02E         	movff	?i2___ftdiv,i2Check_Power@voltage
  3229  0006D0  C01D  F02F         	movff	?i2___ftdiv+1,i2Check_Power@voltage+1
  3230  0006D4  C01E  F030         	movff	?i2___ftdiv+2,i2Check_Power@voltage+2
  3231                           
  3232                           ;ignition.c: 148: source_power = (4.2353 * voltage);
  3233  0006D8  C02E  F00D         	movff	i2Check_Power@voltage,i2___ftmul@f1
  3234  0006DC  C02F  F00E         	movff	i2Check_Power@voltage+1,i2___ftmul@f1+1
  3235  0006E0  C030  F00F         	movff	i2Check_Power@voltage+2,i2___ftmul@f1+2
  3236  0006E4  0E88               	movlw	136
  3237  0006E6  6E10               	movwf	i2___ftmul@f2,c
  3238  0006E8  0E87               	movlw	135
  3239  0006EA  6E11               	movwf	i2___ftmul@f2+1,c
  3240  0006EC  0E40               	movlw	64
  3241  0006EE  6E12               	movwf	i2___ftmul@f2+2,c
  3242  0006F0  ECD2  F004         	call	i2___ftmul	;wreg free
  3243  0006F4  C00D  F034         	movff	?i2___ftmul,i2Check_Power@source_power
  3244  0006F8  C00E  F035         	movff	?i2___ftmul+1,i2Check_Power@source_power+1
  3245  0006FC  C00F  F036         	movff	?i2___ftmul+2,i2Check_Power@source_power+2
  3246                           
  3247                           ;ignition.c: 150: if (source_power < 16.8) {
  3248  000700  C034  F001         	movff	i2Check_Power@source_power,i2___ftge@ff1
  3249  000704  C035  F002         	movff	i2Check_Power@source_power+1,i2___ftge@ff1+1
  3250  000708  C036  F003         	movff	i2Check_Power@source_power+2,i2___ftge@ff1+2
  3251  00070C  0E66               	movlw	102
  3252  00070E  6E04               	movwf	i2___ftge@ff2,c
  3253  000710  0E86               	movlw	134
  3254  000712  6E05               	movwf	i2___ftge@ff2+1,c
  3255  000714  0E41               	movlw	65
  3256  000716  6E06               	movwf	i2___ftge@ff2+2,c
  3257  000718  EC7A  F006         	call	i2___ftge	;wreg free
  3258  00071C  B0D8               	btfsc	status,0,c
  3259  00071E  D003               	goto	i2l1940
  3260                           
  3261                           ;ignition.c: 151: p_status = '0';
  3262  000720  0E30               	movlw	48
  3263  000722  6E4B               	movwf	_p_status,c
  3264                           
  3265                           ;ignition.c: 152: } else if (source_power >= 16.8) {
  3266  000724  0012               	return	
  3267  000726                     i2l1940:
  3268  000726  C034  F001         	movff	i2Check_Power@source_power,i2___ftge@ff1
  3269  00072A  C035  F002         	movff	i2Check_Power@source_power+1,i2___ftge@ff1+1
  3270  00072E  C036  F003         	movff	i2Check_Power@source_power+2,i2___ftge@ff1+2
  3271  000732  0E66               	movlw	102
  3272  000734  6E04               	movwf	i2___ftge@ff2,c
  3273  000736  0E86               	movlw	134
  3274  000738  6E05               	movwf	i2___ftge@ff2+1,c
  3275  00073A  0E41               	movlw	65
  3276  00073C  6E06               	movwf	i2___ftge@ff2+2,c
  3277  00073E  EC7A  F006         	call	i2___ftge	;wreg free
  3278  000742  A0D8               	btfss	status,0,c
  3279  000744  0012               	return	
  3280                           
  3281                           ;ignition.c: 153: p_status = '1';
  3282  000746  0E31               	movlw	49
  3283  000748  6E4B               	movwf	_p_status,c
  3284  00074A  0012               	return	
  3285  00074C                     __end_ofi2_Check_Power:
  3286                           	opt stack 0
  3287                           pclatu	equ	0xFFB
  3288                           pclath	equ	0xFFA
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           prodh	equ	0xFF4
  3294                           prodl	equ	0xFF3
  3295                           intcon	equ	0xFF2
  3296                           postinc0	equ	0xFEE
  3297                           fsr0h	equ	0xFEA
  3298                           fsr0l	equ	0xFE9
  3299                           wreg	equ	0xFE8
  3300                           fsr1h	equ	0xFE2
  3301                           fsr1l	equ	0xFE1
  3302                           indf2	equ	0xFDF
  3303                           postinc2	equ	0xFDE
  3304                           fsr2h	equ	0xFDA
  3305                           fsr2l	equ	0xFD9
  3306                           status	equ	0xFD8
  3307                           
  3308 ;; *************** function i2___lbtoft *****************
  3309 ;; Defined at:
  3310 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbtoft.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  c               1    wreg     unsigned char 
  3313 ;; Auto vars:     Size  Location     Type
  3314 ;;  c               1   11[COMRAM] unsigned char 
  3315 ;; Return value:  Size  Location     Type
  3316 ;;                  3    8[COMRAM] float 
  3317 ;; Registers used:
  3318 ;;		wreg, status,2, status,0, cstack
  3319 ;; Tracked objects:
  3320 ;;		On entry : 0/0
  3321 ;;		On exit  : 0/0
  3322 ;;		Unchanged: 0/0
  3323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3324 ;;      Params:         3       0       0       0
  3325 ;;      Locals:         1       0       0       0
  3326 ;;      Temps:          0       0       0       0
  3327 ;;      Totals:         4       0       0       0
  3328 ;;Total ram usage:        4 bytes
  3329 ;; Hardware stack levels used:    1
  3330 ;; Hardware stack levels required when called:    1
  3331 ;; This function calls:
  3332 ;;		i2___ftpack
  3333 ;; This function is called by:
  3334 ;;		i2_Check_Power
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text21
  3339  000F38                     __ptext21:
  3340                           	opt stack 0
  3341  000F38                     i2___lbtoft:
  3342                           	opt stack 23
  3343                           
  3344                           ;incstack = 0
  3345                           ;i2___lbtoft@c stored from wreg
  3346  000F38  6E0C               	movwf	i2___lbtoft@c,c
  3347  000F3A  500C               	movf	i2___lbtoft@c,w,c
  3348  000F3C  6E01               	movwf	i2___ftpack@arg,c
  3349  000F3E  6A02               	clrf	i2___ftpack@arg+1,c
  3350  000F40  6A03               	clrf	i2___ftpack@arg+2,c
  3351  000F42  0E8E               	movlw	142
  3352  000F44  6E04               	movwf	i2___ftpack@exp,c
  3353  000F46  0E00               	movlw	0
  3354  000F48  6E05               	movwf	i2___ftpack@sign,c
  3355  000F4A  EC23  F006         	call	i2___ftpack	;wreg free
  3356  000F4E  C001  F009         	movff	?i2___ftpack,?i2___lbtoft
  3357  000F52  C002  F00A         	movff	?i2___ftpack+1,?i2___lbtoft+1
  3358  000F56  C003  F00B         	movff	?i2___ftpack+2,?i2___lbtoft+2
  3359  000F5A  0012               	return	
  3360  000F5C                     __end_ofi2___lbtoft:
  3361                           	opt stack 0
  3362                           pclatu	equ	0xFFB
  3363                           pclath	equ	0xFFA
  3364                           tblptru	equ	0xFF8
  3365                           tblptrh	equ	0xFF7
  3366                           tblptrl	equ	0xFF6
  3367                           tablat	equ	0xFF5
  3368                           prodh	equ	0xFF4
  3369                           prodl	equ	0xFF3
  3370                           intcon	equ	0xFF2
  3371                           postinc0	equ	0xFEE
  3372                           fsr0h	equ	0xFEA
  3373                           fsr0l	equ	0xFE9
  3374                           wreg	equ	0xFE8
  3375                           fsr1h	equ	0xFE2
  3376                           fsr1l	equ	0xFE1
  3377                           indf2	equ	0xFDF
  3378                           postinc2	equ	0xFDE
  3379                           fsr2h	equ	0xFDA
  3380                           fsr2l	equ	0xFD9
  3381                           status	equ	0xFD8
  3382                           
  3383 ;; *************** function i2___ftmul *****************
  3384 ;; Defined at:
  3385 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  f1              3   12[COMRAM] float 
  3388 ;;  f2              3   15[COMRAM] float 
  3389 ;; Auto vars:     Size  Location     Type
  3390 ;;  __ftmul         3   22[COMRAM] unsigned um
  3391 ;;  __ftmul         1   26[COMRAM] unsigned char 
  3392 ;;  __ftmul         1   25[COMRAM] unsigned char 
  3393 ;;  __ftmul         1   21[COMRAM] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  3   12[COMRAM] float 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3403 ;;      Params:         6       0       0       0
  3404 ;;      Locals:         6       0       0       0
  3405 ;;      Temps:          3       0       0       0
  3406 ;;      Totals:        15       0       0       0
  3407 ;;Total ram usage:       15 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:    1
  3410 ;; This function calls:
  3411 ;;		i2___ftpack
  3412 ;; This function is called by:
  3413 ;;		i2_Check_Power
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text22
  3418  0009A4                     __ptext22:
  3419                           	opt stack 0
  3420  0009A4                     i2___ftmul:
  3421                           	opt stack 23
  3422                           
  3423                           ;incstack = 0
  3424  0009A4  C00F  F013         	movff	i2___ftmul@f1+2,??i2___ftmul
  3425  0009A8  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  3426  0009AA  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  3427  0009AC  340E               	rlcf	i2___ftmul@f1+1,w,c
  3428  0009AE  3613               	rlcf	??i2___ftmul& (0+255),f,c
  3429  0009B0  E301               	bnc	u124_41
  3430  0009B2  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  3431  0009B4                     u124_41:
  3432  0009B4  5013               	movf	??i2___ftmul,w,c
  3433  0009B6  6E16               	movwf	i2___ftmul@exp,c
  3434  0009B8  5016               	movf	i2___ftmul@exp,w,c
  3435  0009BA  A4D8               	btfss	status,2,c
  3436  0009BC  D007               	goto	i2l1666
  3437  0009BE  0E00               	movlw	0
  3438  0009C0  6E0D               	movwf	?i2___ftmul,c
  3439  0009C2  0E00               	movlw	0
  3440  0009C4  6E0E               	movwf	?i2___ftmul+1,c
  3441  0009C6  0E00               	movlw	0
  3442  0009C8  6E0F               	movwf	?i2___ftmul+2,c
  3443  0009CA  0012               	return	
  3444  0009CC                     i2l1666:
  3445  0009CC  C012  F013         	movff	i2___ftmul@f2+2,??i2___ftmul
  3446  0009D0  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  3447  0009D2  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  3448  0009D4  3411               	rlcf	i2___ftmul@f2+1,w,c
  3449  0009D6  3613               	rlcf	??i2___ftmul& (0+255),f,c
  3450  0009D8  E301               	bnc	u126_41
  3451  0009DA  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  3452  0009DC                     u126_41:
  3453  0009DC  5013               	movf	??i2___ftmul,w,c
  3454  0009DE  6E1B               	movwf	i2___ftmul@sign,c
  3455  0009E0  501B               	movf	i2___ftmul@sign,w,c
  3456  0009E2  A4D8               	btfss	status,2,c
  3457  0009E4  D007               	goto	i2l1672
  3458  0009E6  0E00               	movlw	0
  3459  0009E8  6E0D               	movwf	?i2___ftmul,c
  3460  0009EA  0E00               	movlw	0
  3461  0009EC  6E0E               	movwf	?i2___ftmul+1,c
  3462  0009EE  0E00               	movlw	0
  3463  0009F0  6E0F               	movwf	?i2___ftmul+2,c
  3464  0009F2  0012               	return	
  3465  0009F4                     i2l1672:
  3466  0009F4  501B               	movf	i2___ftmul@sign,w,c
  3467  0009F6  0F7B               	addlw	123
  3468  0009F8  2616               	addwf	i2___ftmul@exp,f,c
  3469  0009FA  C00F  F01B         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  3470  0009FE  5012               	movf	i2___ftmul@f2+2,w,c
  3471  000A00  1A1B               	xorwf	i2___ftmul@sign,f,c
  3472  000A02  0E80               	movlw	128
  3473  000A04  161B               	andwf	i2___ftmul@sign,f,c
  3474  000A06  8E0E               	bsf	i2___ftmul@f1+1,7,c
  3475  000A08  8E11               	bsf	i2___ftmul@f2+1,7,c
  3476  000A0A  0EFF               	movlw	255
  3477  000A0C  1610               	andwf	i2___ftmul@f2,f,c
  3478  000A0E  0EFF               	movlw	255
  3479  000A10  1611               	andwf	i2___ftmul@f2+1,f,c
  3480  000A12  0E00               	movlw	0
  3481  000A14  1612               	andwf	i2___ftmul@f2+2,f,c
  3482  000A16  0E00               	movlw	0
  3483  000A18  6E17               	movwf	i2___ftmul@f3_as_product,c
  3484  000A1A  0E00               	movlw	0
  3485  000A1C  6E18               	movwf	i2___ftmul@f3_as_product+1,c
  3486  000A1E  0E00               	movlw	0
  3487  000A20  6E19               	movwf	i2___ftmul@f3_as_product+2,c
  3488  000A22  0E07               	movlw	7
  3489  000A24  6E1A               	movwf	i2___ftmul@cntr,c
  3490  000A26                     i2l1686:
  3491  000A26  A00D               	btfss	i2___ftmul@f1,0,c
  3492  000A28  D006               	goto	i2l1690
  3493  000A2A  5010               	movf	i2___ftmul@f2,w,c
  3494  000A2C  2617               	addwf	i2___ftmul@f3_as_product,f,c
  3495  000A2E  5011               	movf	i2___ftmul@f2+1,w,c
  3496  000A30  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  3497  000A32  5012               	movf	i2___ftmul@f2+2,w,c
  3498  000A34  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  3499  000A36                     i2l1690:
  3500  000A36  90D8               	bcf	status,0,c
  3501  000A38  320F               	rrcf	i2___ftmul@f1+2,f,c
  3502  000A3A  320E               	rrcf	i2___ftmul@f1+1,f,c
  3503  000A3C  320D               	rrcf	i2___ftmul@f1,f,c
  3504  000A3E  90D8               	bcf	status,0,c
  3505  000A40  3610               	rlcf	i2___ftmul@f2,f,c
  3506  000A42  3611               	rlcf	i2___ftmul@f2+1,f,c
  3507  000A44  3612               	rlcf	i2___ftmul@f2+2,f,c
  3508  000A46  2E1A               	decfsz	i2___ftmul@cntr,f,c
  3509  000A48  D7EE               	goto	i2l1686
  3510  000A4A  0E09               	movlw	9
  3511  000A4C  6E1A               	movwf	i2___ftmul@cntr,c
  3512  000A4E                     i2l1696:
  3513  000A4E  A00D               	btfss	i2___ftmul@f1,0,c
  3514  000A50  D006               	goto	i2l1700
  3515  000A52  5010               	movf	i2___ftmul@f2,w,c
  3516  000A54  2617               	addwf	i2___ftmul@f3_as_product,f,c
  3517  000A56  5011               	movf	i2___ftmul@f2+1,w,c
  3518  000A58  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  3519  000A5A  5012               	movf	i2___ftmul@f2+2,w,c
  3520  000A5C  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  3521  000A5E                     i2l1700:
  3522  000A5E  90D8               	bcf	status,0,c
  3523  000A60  320F               	rrcf	i2___ftmul@f1+2,f,c
  3524  000A62  320E               	rrcf	i2___ftmul@f1+1,f,c
  3525  000A64  320D               	rrcf	i2___ftmul@f1,f,c
  3526  000A66  90D8               	bcf	status,0,c
  3527  000A68  3219               	rrcf	i2___ftmul@f3_as_product+2,f,c
  3528  000A6A  3218               	rrcf	i2___ftmul@f3_as_product+1,f,c
  3529  000A6C  3217               	rrcf	i2___ftmul@f3_as_product,f,c
  3530  000A6E  2E1A               	decfsz	i2___ftmul@cntr,f,c
  3531  000A70  D7EE               	goto	i2l1696
  3532  000A72  C017  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  3533  000A76  C018  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  3534  000A7A  C019  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  3535  000A7E  C016  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  3536  000A82  C01B  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  3537  000A86  EC23  F006         	call	i2___ftpack	;wreg free
  3538  000A8A  C001  F00D         	movff	?i2___ftpack,?i2___ftmul
  3539  000A8E  C002  F00E         	movff	?i2___ftpack+1,?i2___ftmul+1
  3540  000A92  C003  F00F         	movff	?i2___ftpack+2,?i2___ftmul+2
  3541  000A96  0012               	return	
  3542  000A98                     __end_ofi2___ftmul:
  3543                           	opt stack 0
  3544                           pclatu	equ	0xFFB
  3545                           pclath	equ	0xFFA
  3546                           tblptru	equ	0xFF8
  3547                           tblptrh	equ	0xFF7
  3548                           tblptrl	equ	0xFF6
  3549                           tablat	equ	0xFF5
  3550                           prodh	equ	0xFF4
  3551                           prodl	equ	0xFF3
  3552                           intcon	equ	0xFF2
  3553                           postinc0	equ	0xFEE
  3554                           fsr0h	equ	0xFEA
  3555                           fsr0l	equ	0xFE9
  3556                           wreg	equ	0xFE8
  3557                           fsr1h	equ	0xFE2
  3558                           fsr1l	equ	0xFE1
  3559                           indf2	equ	0xFDF
  3560                           postinc2	equ	0xFDE
  3561                           fsr2h	equ	0xFDA
  3562                           fsr2l	equ	0xFD9
  3563                           status	equ	0xFD8
  3564                           
  3565 ;; *************** function i2___ftge *****************
  3566 ;; Defined at:
  3567 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  ff1             3    0[COMRAM] float 
  3570 ;;  ff2             3    3[COMRAM] float 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;		None
  3573 ;; Return value:  Size  Location     Type
  3574 ;;		None               void
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3582 ;;      Params:         6       0       0       0
  3583 ;;      Locals:         0       0       0       0
  3584 ;;      Temps:          3       0       0       0
  3585 ;;      Totals:         9       0       0       0
  3586 ;;Total ram usage:        9 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		i2_Check_Power
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text23
  3596  000CF4                     __ptext23:
  3597                           	opt stack 0
  3598  000CF4                     i2___ftge:
  3599                           	opt stack 24
  3600                           
  3601                           ;incstack = 0
  3602  000CF4  AE03               	btfss	i2___ftge@ff1+2,7,c
  3603  000CF6  D016               	goto	i2l1646
  3604  000CF8  C001  F007         	movff	i2___ftge@ff1,??i2___ftge
  3605  000CFC  C002  F008         	movff	i2___ftge@ff1+1,??i2___ftge+1
  3606  000D00  C003  F009         	movff	i2___ftge@ff1+2,??i2___ftge+2
  3607  000D04  1E07               	comf	??i2___ftge,f,c
  3608  000D06  1E08               	comf	??i2___ftge+1,f,c
  3609  000D08  1E09               	comf	??i2___ftge+2,f,c
  3610  000D0A  2A07               	incf	??i2___ftge,f,c
  3611  000D0C  0E00               	movlw	0
  3612  000D0E  2208               	addwfc	??i2___ftge+1,f,c
  3613  000D10  2209               	addwfc	??i2___ftge+2,f,c
  3614  000D12  0E00               	movlw	0
  3615  000D14  2407               	addwf	??i2___ftge,w,c
  3616  000D16  6E01               	movwf	i2___ftge@ff1,c
  3617  000D18  0E00               	movlw	0
  3618  000D1A  2008               	addwfc	??i2___ftge+1,w,c
  3619  000D1C  6E02               	movwf	i2___ftge@ff1+1,c
  3620  000D1E  0E80               	movlw	128
  3621  000D20  2009               	addwfc	??i2___ftge+2,w,c
  3622  000D22  6E03               	movwf	i2___ftge@ff1+2,c
  3623  000D24                     i2l1646:
  3624  000D24  AE06               	btfss	i2___ftge@ff2+2,7,c
  3625  000D26  D016               	goto	i2l1650
  3626  000D28  C004  F007         	movff	i2___ftge@ff2,??i2___ftge
  3627  000D2C  C005  F008         	movff	i2___ftge@ff2+1,??i2___ftge+1
  3628  000D30  C006  F009         	movff	i2___ftge@ff2+2,??i2___ftge+2
  3629  000D34  1E07               	comf	??i2___ftge,f,c
  3630  000D36  1E08               	comf	??i2___ftge+1,f,c
  3631  000D38  1E09               	comf	??i2___ftge+2,f,c
  3632  000D3A  2A07               	incf	??i2___ftge,f,c
  3633  000D3C  0E00               	movlw	0
  3634  000D3E  2208               	addwfc	??i2___ftge+1,f,c
  3635  000D40  2209               	addwfc	??i2___ftge+2,f,c
  3636  000D42  0E00               	movlw	0
  3637  000D44  2407               	addwf	??i2___ftge,w,c
  3638  000D46  6E04               	movwf	i2___ftge@ff2,c
  3639  000D48  0E00               	movlw	0
  3640  000D4A  2008               	addwfc	??i2___ftge+1,w,c
  3641  000D4C  6E05               	movwf	i2___ftge@ff2+1,c
  3642  000D4E  0E80               	movlw	128
  3643  000D50  2009               	addwfc	??i2___ftge+2,w,c
  3644  000D52  6E06               	movwf	i2___ftge@ff2+2,c
  3645  000D54                     i2l1650:
  3646  000D54  0E00               	movlw	0
  3647  000D56  1A01               	xorwf	i2___ftge@ff1,f,c
  3648  000D58  0E00               	movlw	0
  3649  000D5A  1A02               	xorwf	i2___ftge@ff1+1,f,c
  3650  000D5C  0E80               	movlw	128
  3651  000D5E  1A03               	xorwf	i2___ftge@ff1+2,f,c
  3652  000D60  0E00               	movlw	0
  3653  000D62  1A04               	xorwf	i2___ftge@ff2,f,c
  3654  000D64  0E00               	movlw	0
  3655  000D66  1A05               	xorwf	i2___ftge@ff2+1,f,c
  3656  000D68  0E80               	movlw	128
  3657  000D6A  1A06               	xorwf	i2___ftge@ff2+2,f,c
  3658  000D6C  5004               	movf	i2___ftge@ff2,w,c
  3659  000D6E  5C01               	subwf	i2___ftge@ff1,w,c
  3660  000D70  5005               	movf	i2___ftge@ff2+1,w,c
  3661  000D72  5802               	subwfb	i2___ftge@ff1+1,w,c
  3662  000D74  5006               	movf	i2___ftge@ff2+2,w,c
  3663  000D76  5803               	subwfb	i2___ftge@ff1+2,w,c
  3664  000D78  B0D8               	btfsc	status,0,c
  3665  000D7A  D002               	goto	i2l1656
  3666  000D7C  90D8               	bcf	status,0,c
  3667  000D7E  0012               	return	
  3668  000D80                     i2l1656:
  3669  000D80  80D8               	bsf	status,0,c
  3670  000D82  0012               	return	
  3671  000D84                     __end_ofi2___ftge:
  3672                           	opt stack 0
  3673                           pclatu	equ	0xFFB
  3674                           pclath	equ	0xFFA
  3675                           tblptru	equ	0xFF8
  3676                           tblptrh	equ	0xFF7
  3677                           tblptrl	equ	0xFF6
  3678                           tablat	equ	0xFF5
  3679                           prodh	equ	0xFF4
  3680                           prodl	equ	0xFF3
  3681                           intcon	equ	0xFF2
  3682                           postinc0	equ	0xFEE
  3683                           fsr0h	equ	0xFEA
  3684                           fsr0l	equ	0xFE9
  3685                           wreg	equ	0xFE8
  3686                           fsr1h	equ	0xFE2
  3687                           fsr1l	equ	0xFE1
  3688                           indf2	equ	0xFDF
  3689                           postinc2	equ	0xFDE
  3690                           fsr2h	equ	0xFDA
  3691                           fsr2l	equ	0xFD9
  3692                           status	equ	0xFD8
  3693                           
  3694 ;; *************** function i2___ftdiv *****************
  3695 ;; Defined at:
  3696 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  f1              3   27[COMRAM] float 
  3699 ;;  f2              3   30[COMRAM] float 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;  __ftdiv         3   37[COMRAM] float 
  3702 ;;  __ftdiv         1   41[COMRAM] unsigned char 
  3703 ;;  __ftdiv         1   40[COMRAM] unsigned char 
  3704 ;;  __ftdiv         1   36[COMRAM] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  3   27[COMRAM] float 
  3707 ;; Registers used:
  3708 ;;		wreg, status,2, status,0, cstack
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3714 ;;      Params:         6       0       0       0
  3715 ;;      Locals:         6       0       0       0
  3716 ;;      Temps:          3       0       0       0
  3717 ;;      Totals:        15       0       0       0
  3718 ;;Total ram usage:       15 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    1
  3721 ;; This function calls:
  3722 ;;		i2___ftpack
  3723 ;; This function is called by:
  3724 ;;		i2_Check_Power
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           	psect	text24
  3729  000A98                     __ptext24:
  3730                           	opt stack 0
  3731  000A98                     i2___ftdiv:
  3732                           	opt stack 23
  3733                           
  3734                           ;incstack = 0
  3735  000A98  C01E  F022         	movff	i2___ftdiv@f1+2,??i2___ftdiv
  3736  000A9C  6A23               	clrf	(??i2___ftdiv+1)& (0+255),c
  3737  000A9E  6A24               	clrf	(??i2___ftdiv+2)& (0+255),c
  3738  000AA0  341D               	rlcf	i2___ftdiv@f1+1,w,c
  3739  000AA2  3622               	rlcf	??i2___ftdiv& (0+255),f,c
  3740  000AA4  E301               	bnc	u116_41
  3741  000AA6  8023               	bsf	(??i2___ftdiv+1)& (0+255),0,c
  3742  000AA8                     u116_41:
  3743  000AA8  5022               	movf	??i2___ftdiv,w,c
  3744  000AAA  6E29               	movwf	i2___ftdiv@exp,c
  3745  000AAC  5029               	movf	i2___ftdiv@exp,w,c
  3746  000AAE  A4D8               	btfss	status,2,c
  3747  000AB0  D007               	goto	i2l1602
  3748  000AB2  0E00               	movlw	0
  3749  000AB4  6E1C               	movwf	?i2___ftdiv,c
  3750  000AB6  0E00               	movlw	0
  3751  000AB8  6E1D               	movwf	?i2___ftdiv+1,c
  3752  000ABA  0E00               	movlw	0
  3753  000ABC  6E1E               	movwf	?i2___ftdiv+2,c
  3754  000ABE  0012               	return	
  3755  000AC0                     i2l1602:
  3756  000AC0  C021  F022         	movff	i2___ftdiv@f2+2,??i2___ftdiv
  3757  000AC4  6A23               	clrf	(??i2___ftdiv+1)& (0+255),c
  3758  000AC6  6A24               	clrf	(??i2___ftdiv+2)& (0+255),c
  3759  000AC8  3420               	rlcf	i2___ftdiv@f2+1,w,c
  3760  000ACA  3622               	rlcf	??i2___ftdiv& (0+255),f,c
  3761  000ACC  E301               	bnc	u118_41
  3762  000ACE  8023               	bsf	(??i2___ftdiv+1)& (0+255),0,c
  3763  000AD0                     u118_41:
  3764  000AD0  5022               	movf	??i2___ftdiv,w,c
  3765  000AD2  6E2A               	movwf	i2___ftdiv@sign,c
  3766  000AD4  502A               	movf	i2___ftdiv@sign,w,c
  3767  000AD6  A4D8               	btfss	status,2,c
  3768  000AD8  D007               	goto	i2l1608
  3769  000ADA  0E00               	movlw	0
  3770  000ADC  6E1C               	movwf	?i2___ftdiv,c
  3771  000ADE  0E00               	movlw	0
  3772  000AE0  6E1D               	movwf	?i2___ftdiv+1,c
  3773  000AE2  0E00               	movlw	0
  3774  000AE4  6E1E               	movwf	?i2___ftdiv+2,c
  3775  000AE6  0012               	return	
  3776  000AE8                     i2l1608:
  3777  000AE8  0E00               	movlw	0
  3778  000AEA  6E26               	movwf	i2___ftdiv@f3,c
  3779  000AEC  0E00               	movlw	0
  3780  000AEE  6E27               	movwf	i2___ftdiv@f3+1,c
  3781  000AF0  0E00               	movlw	0
  3782  000AF2  6E28               	movwf	i2___ftdiv@f3+2,c
  3783  000AF4  502A               	movf	i2___ftdiv@sign,w,c
  3784  000AF6  0F89               	addlw	137
  3785  000AF8  5E29               	subwf	i2___ftdiv@exp,f,c
  3786  000AFA  C01E  F02A         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
  3787  000AFE  5021               	movf	i2___ftdiv@f2+2,w,c
  3788  000B00  1A2A               	xorwf	i2___ftdiv@sign,f,c
  3789  000B02  0E80               	movlw	128
  3790  000B04  162A               	andwf	i2___ftdiv@sign,f,c
  3791  000B06  8E1D               	bsf	i2___ftdiv@f1+1,7,c
  3792  000B08  0EFF               	movlw	255
  3793  000B0A  161C               	andwf	i2___ftdiv@f1,f,c
  3794  000B0C  0EFF               	movlw	255
  3795  000B0E  161D               	andwf	i2___ftdiv@f1+1,f,c
  3796  000B10  0E00               	movlw	0
  3797  000B12  161E               	andwf	i2___ftdiv@f1+2,f,c
  3798  000B14  8E20               	bsf	i2___ftdiv@f2+1,7,c
  3799  000B16  0EFF               	movlw	255
  3800  000B18  161F               	andwf	i2___ftdiv@f2,f,c
  3801  000B1A  0EFF               	movlw	255
  3802  000B1C  1620               	andwf	i2___ftdiv@f2+1,f,c
  3803  000B1E  0E00               	movlw	0
  3804  000B20  1621               	andwf	i2___ftdiv@f2+2,f,c
  3805  000B22  0E18               	movlw	24
  3806  000B24  6E25               	movwf	i2___ftdiv@cntr,c
  3807  000B26                     i2l1628:
  3808  000B26  90D8               	bcf	status,0,c
  3809  000B28  3626               	rlcf	i2___ftdiv@f3,f,c
  3810  000B2A  3627               	rlcf	i2___ftdiv@f3+1,f,c
  3811  000B2C  3628               	rlcf	i2___ftdiv@f3+2,f,c
  3812  000B2E  501F               	movf	i2___ftdiv@f2,w,c
  3813  000B30  5C1C               	subwf	i2___ftdiv@f1,w,c
  3814  000B32  5020               	movf	i2___ftdiv@f2+1,w,c
  3815  000B34  581D               	subwfb	i2___ftdiv@f1+1,w,c
  3816  000B36  5021               	movf	i2___ftdiv@f2+2,w,c
  3817  000B38  581E               	subwfb	i2___ftdiv@f1+2,w,c
  3818  000B3A  A0D8               	btfss	status,0,c
  3819  000B3C  D007               	goto	i2l625
  3820  000B3E  501F               	movf	i2___ftdiv@f2,w,c
  3821  000B40  5E1C               	subwf	i2___ftdiv@f1,f,c
  3822  000B42  5020               	movf	i2___ftdiv@f2+1,w,c
  3823  000B44  5A1D               	subwfb	i2___ftdiv@f1+1,f,c
  3824  000B46  5021               	movf	i2___ftdiv@f2+2,w,c
  3825  000B48  5A1E               	subwfb	i2___ftdiv@f1+2,f,c
  3826  000B4A  8026               	bsf	i2___ftdiv@f3,0,c
  3827  000B4C                     i2l625:
  3828  000B4C  90D8               	bcf	status,0,c
  3829  000B4E  361C               	rlcf	i2___ftdiv@f1,f,c
  3830  000B50  361D               	rlcf	i2___ftdiv@f1+1,f,c
  3831  000B52  361E               	rlcf	i2___ftdiv@f1+2,f,c
  3832  000B54  2E25               	decfsz	i2___ftdiv@cntr,f,c
  3833  000B56  D7E7               	goto	i2l1628
  3834  000B58  C026  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
  3835  000B5C  C027  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
  3836  000B60  C028  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
  3837  000B64  C029  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
  3838  000B68  C02A  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
  3839  000B6C  EC23  F006         	call	i2___ftpack	;wreg free
  3840  000B70  C001  F01C         	movff	?i2___ftpack,?i2___ftdiv
  3841  000B74  C002  F01D         	movff	?i2___ftpack+1,?i2___ftdiv+1
  3842  000B78  C003  F01E         	movff	?i2___ftpack+2,?i2___ftdiv+2
  3843  000B7C  0012               	return	
  3844  000B7E                     __end_ofi2___ftdiv:
  3845                           	opt stack 0
  3846                           pclatu	equ	0xFFB
  3847                           pclath	equ	0xFFA
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           intcon	equ	0xFF2
  3855                           postinc0	equ	0xFEE
  3856                           fsr0h	equ	0xFEA
  3857                           fsr0l	equ	0xFE9
  3858                           wreg	equ	0xFE8
  3859                           fsr1h	equ	0xFE2
  3860                           fsr1l	equ	0xFE1
  3861                           indf2	equ	0xFDF
  3862                           postinc2	equ	0xFDE
  3863                           fsr2h	equ	0xFDA
  3864                           fsr2l	equ	0xFD9
  3865                           status	equ	0xFD8
  3866                           
  3867 ;; *************** function i2___ftpack *****************
  3868 ;; Defined at:
  3869 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  arg             3    0[COMRAM] unsigned um
  3872 ;;  exp             1    3[COMRAM] unsigned char 
  3873 ;;  sign            1    4[COMRAM] unsigned char 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;		None
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  3    0[COMRAM] float 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3885 ;;      Params:         5       0       0       0
  3886 ;;      Locals:         0       0       0       0
  3887 ;;      Temps:          3       0       0       0
  3888 ;;      Totals:         8       0       0       0
  3889 ;;Total ram usage:        8 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		i2___ftdiv
  3895 ;;		i2___ftmul
  3896 ;;		i2___lbtoft
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text25
  3901  000C46                     __ptext25:
  3902                           	opt stack 0
  3903  000C46                     i2___ftpack:
  3904                           	opt stack 23
  3905                           
  3906                           ;incstack = 0
  3907  000C46  5004               	movf	i2___ftpack@exp,w,c
  3908  000C48  B4D8               	btfsc	status,2,c
  3909  000C4A  D005               	goto	i2l1522
  3910  000C4C  5001               	movf	i2___ftpack@arg,w,c
  3911  000C4E  1002               	iorwf	i2___ftpack@arg+1,w,c
  3912  000C50  1003               	iorwf	i2___ftpack@arg+2,w,c
  3913  000C52  A4D8               	btfss	status,2,c
  3914  000C54  D00C               	goto	i2l1528
  3915  000C56                     i2l1522:
  3916  000C56  0E00               	movlw	0
  3917  000C58  6E01               	movwf	?i2___ftpack,c
  3918  000C5A  0E00               	movlw	0
  3919  000C5C  6E02               	movwf	?i2___ftpack+1,c
  3920  000C5E  0E00               	movlw	0
  3921  000C60  6E03               	movwf	?i2___ftpack+2,c
  3922  000C62  0012               	return	
  3923  000C64                     i2l1526:
  3924  000C64  2A04               	incf	i2___ftpack@exp,f,c
  3925  000C66  90D8               	bcf	status,0,c
  3926  000C68  3203               	rrcf	i2___ftpack@arg+2,f,c
  3927  000C6A  3202               	rrcf	i2___ftpack@arg+1,f,c
  3928  000C6C  3201               	rrcf	i2___ftpack@arg,f,c
  3929  000C6E                     i2l1528:
  3930  000C6E  0E00               	movlw	0
  3931  000C70  1401               	andwf	i2___ftpack@arg,w,c
  3932  000C72  6E06               	movwf	??i2___ftpack& (0+255),c
  3933  000C74  0E00               	movlw	0
  3934  000C76  1402               	andwf	i2___ftpack@arg+1,w,c
  3935  000C78  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  3936  000C7A  0EFE               	movlw	254
  3937  000C7C  1403               	andwf	i2___ftpack@arg+2,w,c
  3938  000C7E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  3939  000C80  5006               	movf	??i2___ftpack,w,c
  3940  000C82  1007               	iorwf	??i2___ftpack+1,w,c
  3941  000C84  1008               	iorwf	??i2___ftpack+2,w,c
  3942  000C86  B4D8               	btfsc	status,2,c
  3943  000C88  D00C               	goto	i2l1534
  3944  000C8A  D7EC               	goto	i2l1526
  3945  000C8C                     i2l1530:
  3946  000C8C  2A04               	incf	i2___ftpack@exp,f,c
  3947  000C8E  0E01               	movlw	1
  3948  000C90  2601               	addwf	i2___ftpack@arg,f,c
  3949  000C92  0E00               	movlw	0
  3950  000C94  2202               	addwfc	i2___ftpack@arg+1,f,c
  3951  000C96  0E00               	movlw	0
  3952  000C98  2203               	addwfc	i2___ftpack@arg+2,f,c
  3953  000C9A  90D8               	bcf	status,0,c
  3954  000C9C  3203               	rrcf	i2___ftpack@arg+2,f,c
  3955  000C9E  3202               	rrcf	i2___ftpack@arg+1,f,c
  3956  000CA0  3201               	rrcf	i2___ftpack@arg,f,c
  3957  000CA2                     i2l1534:
  3958  000CA2  0E00               	movlw	0
  3959  000CA4  1401               	andwf	i2___ftpack@arg,w,c
  3960  000CA6  6E06               	movwf	??i2___ftpack& (0+255),c
  3961  000CA8  0E00               	movlw	0
  3962  000CAA  1402               	andwf	i2___ftpack@arg+1,w,c
  3963  000CAC  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  3964  000CAE  0EFF               	movlw	255
  3965  000CB0  1403               	andwf	i2___ftpack@arg+2,w,c
  3966  000CB2  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  3967  000CB4  5006               	movf	??i2___ftpack,w,c
  3968  000CB6  1007               	iorwf	??i2___ftpack+1,w,c
  3969  000CB8  1008               	iorwf	??i2___ftpack+2,w,c
  3970  000CBA  B4D8               	btfsc	status,2,c
  3971  000CBC  D006               	goto	i2l1538
  3972  000CBE  D7E6               	goto	i2l1530
  3973  000CC0                     i2l1536:
  3974  000CC0  0604               	decf	i2___ftpack@exp,f,c
  3975  000CC2  90D8               	bcf	status,0,c
  3976  000CC4  3601               	rlcf	i2___ftpack@arg,f,c
  3977  000CC6  3602               	rlcf	i2___ftpack@arg+1,f,c
  3978  000CC8  3603               	rlcf	i2___ftpack@arg+2,f,c
  3979  000CCA                     i2l1538:
  3980  000CCA  BE02               	btfsc	i2___ftpack@arg+1,7,c
  3981  000CCC  D003               	goto	i2l567
  3982  000CCE  0E02               	movlw	2
  3983  000CD0  6004               	cpfslt	i2___ftpack@exp,c
  3984  000CD2  D7F6               	goto	i2l1536
  3985  000CD4                     i2l567:
  3986  000CD4  A004               	btfss	i2___ftpack@exp,0,c
  3987  000CD6  9E02               	bcf	i2___ftpack@arg+1,7,c
  3988  000CD8  90D8               	bcf	status,0,c
  3989  000CDA  3204               	rrcf	i2___ftpack@exp,f,c
  3990  000CDC  5004               	movf	i2___ftpack@exp,w,c
  3991  000CDE  1203               	iorwf	i2___ftpack@arg+2,f,c
  3992  000CE0  5005               	movf	i2___ftpack@sign,w,c
  3993  000CE2  A4D8               	btfss	status,2,c
  3994  000CE4  8E03               	bsf	i2___ftpack@arg+2,7,c
  3995  000CE6  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  3996  000CEA  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  3997  000CEE  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  3998  000CF2  0012               	return	
  3999  000CF4                     __end_ofi2___ftpack:
  4000                           	opt stack 0
  4001                           pclatu	equ	0xFFB
  4002                           pclath	equ	0xFFA
  4003                           tblptru	equ	0xFF8
  4004                           tblptrh	equ	0xFF7
  4005                           tblptrl	equ	0xFF6
  4006                           tablat	equ	0xFF5
  4007                           prodh	equ	0xFF4
  4008                           prodl	equ	0xFF3
  4009                           intcon	equ	0xFF2
  4010                           postinc0	equ	0xFEE
  4011                           fsr0h	equ	0xFEA
  4012                           fsr0l	equ	0xFE9
  4013                           wreg	equ	0xFE8
  4014                           fsr1h	equ	0xFE2
  4015                           fsr1l	equ	0xFE1
  4016                           indf2	equ	0xFDF
  4017                           postinc2	equ	0xFDE
  4018                           fsr2h	equ	0xFDA
  4019                           fsr2l	equ	0xFD9
  4020                           status	equ	0xFD8
  4021                           
  4022 ;; *************** function _Test_Port *****************
  4023 ;; Defined at:
  4024 ;;		line 5 in file "ignition.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;		None
  4029 ;; Return value:  Size  Location     Type
  4030 ;;		None               void
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4038 ;;      Params:         0       0       0       0
  4039 ;;      Locals:         0       0       0       0
  4040 ;;      Temps:          0       0       0       0
  4041 ;;      Totals:         0       0       0       0
  4042 ;;Total ram usage:        0 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    1
  4045 ;; This function calls:
  4046 ;;		_Transmit
  4047 ;; This function is called by:
  4048 ;;		_Evaluate_Reception
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           	psect	text26
  4053  0000E2                     __ptext26:
  4054                           	opt stack 0
  4055  0000E2                     _Test_Port:
  4056                           	opt stack 24
  4057                           
  4058                           ;ignition.c: 6: switch(received[3]) {
  4059                           
  4060                           ;incstack = 0
  4061  0000E2  D0F0               	goto	i2l1798
  4062  0000E4                     i2l229:
  4063                           
  4064                           ;ignition.c: 8: if(PORTCbits.RC4 == 1) {
  4065  0000E4  A882               	btfss	3970,4,c	;volatile
  4066  0000E6  D00A               	goto	i2l230
  4067                           
  4068                           ;ignition.c: 9: Transmit(0xAA, 'T', 0, '1');
  4069  0000E8  0E54               	movlw	84
  4070  0000EA  6E01               	movwf	Transmit@operation,c
  4071  0000EC  0E00               	movlw	0
  4072  0000EE  6E02               	movwf	Transmit@port,c
  4073  0000F0  0E31               	movlw	49
  4074  0000F2  6E03               	movwf	Transmit@con_status,c
  4075  0000F4  0EAA               	movlw	170
  4076  0000F6  EC30  F007         	call	_Transmit
  4077                           
  4078                           ;ignition.c: 10: }else if(PORTCbits.RC4 == 0) {
  4079  0000FA  0012               	return	
  4080  0000FC                     i2l230:
  4081  0000FC  B882               	btfsc	3970,4,c	;volatile
  4082  0000FE  0012               	return	
  4083                           
  4084                           ;ignition.c: 11: Transmit(0xAA, 'T', 0, '0');
  4085  000100  0E54               	movlw	84
  4086  000102  6E01               	movwf	Transmit@operation,c
  4087  000104  0E00               	movlw	0
  4088  000106  6E02               	movwf	Transmit@port,c
  4089  000108  0E30               	movlw	48
  4090  00010A  6E03               	movwf	Transmit@con_status,c
  4091  00010C  0EAA               	movlw	170
  4092  00010E  EC30  F007         	call	_Transmit
  4093                           
  4094                           ;ignition.c: 12: }
  4095                           ;ignition.c: 13: break;
  4096  000112  0012               	return	
  4097  000114                     i2l234:
  4098                           
  4099                           ;ignition.c: 15: if(PORTDbits.RD2 == 1) {
  4100  000114  A483               	btfss	3971,2,c	;volatile
  4101  000116  D00A               	goto	i2l235
  4102                           
  4103                           ;ignition.c: 16: Transmit(0xAA, 'T', 1, '1');
  4104  000118  0E54               	movlw	84
  4105  00011A  6E01               	movwf	Transmit@operation,c
  4106  00011C  0E01               	movlw	1
  4107  00011E  6E02               	movwf	Transmit@port,c
  4108  000120  0E31               	movlw	49
  4109  000122  6E03               	movwf	Transmit@con_status,c
  4110  000124  0EAA               	movlw	170
  4111  000126  EC30  F007         	call	_Transmit
  4112                           
  4113                           ;ignition.c: 17: }else if(PORTCbits.RC4 == 0) {
  4114  00012A  0012               	return	
  4115  00012C                     i2l235:
  4116  00012C  B882               	btfsc	3970,4,c	;volatile
  4117  00012E  0012               	return	
  4118                           
  4119                           ;ignition.c: 18: Transmit(0xAA, 'T', 1, '0');
  4120  000130  0E54               	movlw	84
  4121  000132  6E01               	movwf	Transmit@operation,c
  4122  000134  0E01               	movlw	1
  4123  000136  6E02               	movwf	Transmit@port,c
  4124  000138  0E30               	movlw	48
  4125  00013A  6E03               	movwf	Transmit@con_status,c
  4126  00013C  0EAA               	movlw	170
  4127  00013E  EC30  F007         	call	_Transmit
  4128                           
  4129                           ;ignition.c: 19: }
  4130                           ;ignition.c: 20: break;
  4131  000142  0012               	return	
  4132  000144                     i2l238:
  4133                           
  4134                           ;ignition.c: 22: if(PORTDbits.RD0 == 1) {
  4135  000144  A083               	btfss	3971,0,c	;volatile
  4136  000146  D00A               	goto	i2l239
  4137                           
  4138                           ;ignition.c: 23: Transmit(0xAA, 'T', 2, '1');
  4139  000148  0E54               	movlw	84
  4140  00014A  6E01               	movwf	Transmit@operation,c
  4141  00014C  0E02               	movlw	2
  4142  00014E  6E02               	movwf	Transmit@port,c
  4143  000150  0E31               	movlw	49
  4144  000152  6E03               	movwf	Transmit@con_status,c
  4145  000154  0EAA               	movlw	170
  4146  000156  EC30  F007         	call	_Transmit
  4147                           
  4148                           ;ignition.c: 24: }else if(PORTCbits.RC4 == 0) {
  4149  00015A  0012               	return	
  4150  00015C                     i2l239:
  4151  00015C  B882               	btfsc	3970,4,c	;volatile
  4152  00015E  0012               	return	
  4153                           
  4154                           ;ignition.c: 25: Transmit(0xAA, 'T', 2, '0');
  4155  000160  0E54               	movlw	84
  4156  000162  6E01               	movwf	Transmit@operation,c
  4157  000164  0E02               	movlw	2
  4158  000166  6E02               	movwf	Transmit@port,c
  4159  000168  0E30               	movlw	48
  4160  00016A  6E03               	movwf	Transmit@con_status,c
  4161  00016C  0EAA               	movlw	170
  4162  00016E  EC30  F007         	call	_Transmit
  4163                           
  4164                           ;ignition.c: 26: }
  4165                           ;ignition.c: 27: break;
  4166  000172  0012               	return	
  4167  000174                     i2l242:
  4168                           
  4169                           ;ignition.c: 29: if(PORTCbits.RC2 == 1) {
  4170  000174  A482               	btfss	3970,2,c	;volatile
  4171  000176  D00A               	goto	i2l243
  4172                           
  4173                           ;ignition.c: 30: Transmit(0xAA, 'T', 3, '1');
  4174  000178  0E54               	movlw	84
  4175  00017A  6E01               	movwf	Transmit@operation,c
  4176  00017C  0E03               	movlw	3
  4177  00017E  6E02               	movwf	Transmit@port,c
  4178  000180  0E31               	movlw	49
  4179  000182  6E03               	movwf	Transmit@con_status,c
  4180  000184  0EAA               	movlw	170
  4181  000186  EC30  F007         	call	_Transmit
  4182                           
  4183                           ;ignition.c: 31: }else if(PORTCbits.RC4 == 0) {
  4184  00018A  0012               	return	
  4185  00018C                     i2l243:
  4186  00018C  B882               	btfsc	3970,4,c	;volatile
  4187  00018E  0012               	return	
  4188                           
  4189                           ;ignition.c: 32: Transmit(0xAA, 'T', 3, '0');
  4190  000190  0E54               	movlw	84
  4191  000192  6E01               	movwf	Transmit@operation,c
  4192  000194  0E03               	movlw	3
  4193  000196  6E02               	movwf	Transmit@port,c
  4194  000198  0E30               	movlw	48
  4195  00019A  6E03               	movwf	Transmit@con_status,c
  4196  00019C  0EAA               	movlw	170
  4197  00019E  EC30  F007         	call	_Transmit
  4198                           
  4199                           ;ignition.c: 33: }
  4200                           ;ignition.c: 34: break;
  4201  0001A2  0012               	return	
  4202  0001A4                     i2l246:
  4203                           
  4204                           ;ignition.c: 36: if(PORTEbits.RE2 == 1) {
  4205  0001A4  A484               	btfss	3972,2,c	;volatile
  4206  0001A6  D00A               	goto	i2l247
  4207                           
  4208                           ;ignition.c: 37: Transmit(0xAA, 'T', 4, '1');
  4209  0001A8  0E54               	movlw	84
  4210  0001AA  6E01               	movwf	Transmit@operation,c
  4211  0001AC  0E04               	movlw	4
  4212  0001AE  6E02               	movwf	Transmit@port,c
  4213  0001B0  0E31               	movlw	49
  4214  0001B2  6E03               	movwf	Transmit@con_status,c
  4215  0001B4  0EAA               	movlw	170
  4216  0001B6  EC30  F007         	call	_Transmit
  4217                           
  4218                           ;ignition.c: 38: }else if(PORTCbits.RC4 == 0) {
  4219  0001BA  0012               	return	
  4220  0001BC                     i2l247:
  4221  0001BC  B882               	btfsc	3970,4,c	;volatile
  4222  0001BE  0012               	return	
  4223                           
  4224                           ;ignition.c: 39: Transmit(0xAA, 'T', 4, '0');
  4225  0001C0  0E54               	movlw	84
  4226  0001C2  6E01               	movwf	Transmit@operation,c
  4227  0001C4  0E04               	movlw	4
  4228  0001C6  6E02               	movwf	Transmit@port,c
  4229  0001C8  0E30               	movlw	48
  4230  0001CA  6E03               	movwf	Transmit@con_status,c
  4231  0001CC  0EAA               	movlw	170
  4232  0001CE  EC30  F007         	call	_Transmit
  4233                           
  4234                           ;ignition.c: 40: }
  4235                           ;ignition.c: 41: break;
  4236  0001D2  0012               	return	
  4237  0001D4                     i2l250:
  4238                           
  4239                           ;ignition.c: 43: if(PORTEbits.RE0 == 1) {
  4240  0001D4  A084               	btfss	3972,0,c	;volatile
  4241  0001D6  D00A               	goto	i2l251
  4242                           
  4243                           ;ignition.c: 44: Transmit(0xAA, 'T', 5, '1');
  4244  0001D8  0E54               	movlw	84
  4245  0001DA  6E01               	movwf	Transmit@operation,c
  4246  0001DC  0E05               	movlw	5
  4247  0001DE  6E02               	movwf	Transmit@port,c
  4248  0001E0  0E31               	movlw	49
  4249  0001E2  6E03               	movwf	Transmit@con_status,c
  4250  0001E4  0EAA               	movlw	170
  4251  0001E6  EC30  F007         	call	_Transmit
  4252                           
  4253                           ;ignition.c: 45: }else if(PORTCbits.RC4 == 0) {
  4254  0001EA  0012               	return	
  4255  0001EC                     i2l251:
  4256  0001EC  B882               	btfsc	3970,4,c	;volatile
  4257  0001EE  0012               	return	
  4258                           
  4259                           ;ignition.c: 46: Transmit(0xAA, 'T', 5, '0');
  4260  0001F0  0E54               	movlw	84
  4261  0001F2  6E01               	movwf	Transmit@operation,c
  4262  0001F4  0E05               	movlw	5
  4263  0001F6  6E02               	movwf	Transmit@port,c
  4264  0001F8  0E30               	movlw	48
  4265  0001FA  6E03               	movwf	Transmit@con_status,c
  4266  0001FC  0EAA               	movlw	170
  4267  0001FE  EC30  F007         	call	_Transmit
  4268                           
  4269                           ;ignition.c: 47: }
  4270                           ;ignition.c: 48: break;
  4271  000202  0012               	return	
  4272  000204                     i2l254:
  4273                           
  4274                           ;ignition.c: 50: if(PORTAbits.RA4 == 1) {
  4275  000204  A880               	btfss	3968,4,c	;volatile
  4276  000206  D00A               	goto	i2l255
  4277                           
  4278                           ;ignition.c: 51: Transmit(0xAA, 'T', 6, '1');
  4279  000208  0E54               	movlw	84
  4280  00020A  6E01               	movwf	Transmit@operation,c
  4281  00020C  0E06               	movlw	6
  4282  00020E  6E02               	movwf	Transmit@port,c
  4283  000210  0E31               	movlw	49
  4284  000212  6E03               	movwf	Transmit@con_status,c
  4285  000214  0EAA               	movlw	170
  4286  000216  EC30  F007         	call	_Transmit
  4287                           
  4288                           ;ignition.c: 52: }else if(PORTCbits.RC4 == 0) {
  4289  00021A  0012               	return	
  4290  00021C                     i2l255:
  4291  00021C  B882               	btfsc	3970,4,c	;volatile
  4292  00021E  0012               	return	
  4293                           
  4294                           ;ignition.c: 53: Transmit(0xAA, 'T', 6, '0');
  4295  000220  0E54               	movlw	84
  4296  000222  6E01               	movwf	Transmit@operation,c
  4297  000224  0E06               	movlw	6
  4298  000226  6E02               	movwf	Transmit@port,c
  4299  000228  0E30               	movlw	48
  4300  00022A  6E03               	movwf	Transmit@con_status,c
  4301  00022C  0EAA               	movlw	170
  4302  00022E  EC30  F007         	call	_Transmit
  4303                           
  4304                           ;ignition.c: 54: }
  4305                           ;ignition.c: 55: break;
  4306  000232  0012               	return	
  4307  000234                     i2l258:
  4308                           
  4309                           ;ignition.c: 57: if(PORTBbits.RB4 == 1) {
  4310  000234  A881               	btfss	3969,4,c	;volatile
  4311  000236  D00A               	goto	i2l259
  4312                           
  4313                           ;ignition.c: 58: Transmit(0xAA, 'T', 7, '1');
  4314  000238  0E54               	movlw	84
  4315  00023A  6E01               	movwf	Transmit@operation,c
  4316  00023C  0E07               	movlw	7
  4317  00023E  6E02               	movwf	Transmit@port,c
  4318  000240  0E31               	movlw	49
  4319  000242  6E03               	movwf	Transmit@con_status,c
  4320  000244  0EAA               	movlw	170
  4321  000246  EC30  F007         	call	_Transmit
  4322                           
  4323                           ;ignition.c: 59: }else if(PORTCbits.RC4 == 0) {
  4324  00024A  0012               	return	
  4325  00024C                     i2l259:
  4326  00024C  B882               	btfsc	3970,4,c	;volatile
  4327  00024E  0012               	return	
  4328                           
  4329                           ;ignition.c: 60: Transmit(0xAA, 'T', 7, '0');
  4330  000250  0E54               	movlw	84
  4331  000252  6E01               	movwf	Transmit@operation,c
  4332  000254  0E07               	movlw	7
  4333  000256  6E02               	movwf	Transmit@port,c
  4334  000258  0E30               	movlw	48
  4335  00025A  6E03               	movwf	Transmit@con_status,c
  4336  00025C  0EAA               	movlw	170
  4337  00025E  EC30  F007         	call	_Transmit
  4338                           
  4339                           ;ignition.c: 61: }
  4340                           ;ignition.c: 62: break;
  4341  000262  0012               	return	
  4342  000264                     i2l262:
  4343                           
  4344                           ;ignition.c: 64: if(PORTAbits.RA2 == 1) {
  4345  000264  A480               	btfss	3968,2,c	;volatile
  4346  000266  D00A               	goto	i2l263
  4347                           
  4348                           ;ignition.c: 65: Transmit(0xAA, 'T', 8, '1');
  4349  000268  0E54               	movlw	84
  4350  00026A  6E01               	movwf	Transmit@operation,c
  4351  00026C  0E08               	movlw	8
  4352  00026E  6E02               	movwf	Transmit@port,c
  4353  000270  0E31               	movlw	49
  4354  000272  6E03               	movwf	Transmit@con_status,c
  4355  000274  0EAA               	movlw	170
  4356  000276  EC30  F007         	call	_Transmit
  4357                           
  4358                           ;ignition.c: 66: }else if(PORTCbits.RC4 == 0) {
  4359  00027A  0012               	return	
  4360  00027C                     i2l263:
  4361  00027C  B882               	btfsc	3970,4,c	;volatile
  4362  00027E  0012               	return	
  4363                           
  4364                           ;ignition.c: 67: Transmit(0xAA, 'T', 8, '0');
  4365  000280  0E54               	movlw	84
  4366  000282  6E01               	movwf	Transmit@operation,c
  4367  000284  0E08               	movlw	8
  4368  000286  6E02               	movwf	Transmit@port,c
  4369  000288  0E30               	movlw	48
  4370  00028A  6E03               	movwf	Transmit@con_status,c
  4371  00028C  0EAA               	movlw	170
  4372  00028E  EC30  F007         	call	_Transmit
  4373                           
  4374                           ;ignition.c: 68: }
  4375                           ;ignition.c: 69: break;
  4376  000292  0012               	return	
  4377  000294                     i2l266:
  4378                           
  4379                           ;ignition.c: 71: if(PORTAbits.RA0 == 1) {
  4380  000294  A080               	btfss	3968,0,c	;volatile
  4381  000296  D00A               	goto	i2l267
  4382                           
  4383                           ;ignition.c: 72: Transmit(0xAA, 'T', 9, '1');
  4384  000298  0E54               	movlw	84
  4385  00029A  6E01               	movwf	Transmit@operation,c
  4386  00029C  0E09               	movlw	9
  4387  00029E  6E02               	movwf	Transmit@port,c
  4388  0002A0  0E31               	movlw	49
  4389  0002A2  6E03               	movwf	Transmit@con_status,c
  4390  0002A4  0EAA               	movlw	170
  4391  0002A6  EC30  F007         	call	_Transmit
  4392                           
  4393                           ;ignition.c: 73: }else if(PORTCbits.RC4 == 0) {
  4394  0002AA  0012               	return	
  4395  0002AC                     i2l267:
  4396  0002AC  B882               	btfsc	3970,4,c	;volatile
  4397  0002AE  0012               	return	
  4398                           
  4399                           ;ignition.c: 74: Transmit(0xAA, 'T', 9, '0');
  4400  0002B0  0E54               	movlw	84
  4401  0002B2  6E01               	movwf	Transmit@operation,c
  4402  0002B4  0E09               	movlw	9
  4403  0002B6  6E02               	movwf	Transmit@port,c
  4404  0002B8  0E30               	movlw	48
  4405  0002BA  6E03               	movwf	Transmit@con_status,c
  4406  0002BC  0EAA               	movlw	170
  4407  0002BE  EC30  F007         	call	_Transmit
  4408                           
  4409                           ;ignition.c: 77: }
  4410                           
  4411                           ;ignition.c: 75: }
  4412                           ;ignition.c: 76: break;
  4413  0002C2  0012               	return	
  4414  0002C4                     i2l1798:
  4415  0002C4  5048               	movf	_received+3,w,c
  4416                           
  4417                           ; Switch size 1, requested type "space"
  4418                           ; Number of cases is 10, Range of values is 0 to 9
  4419                           ; switch strategies available:
  4420                           ; Name         Instructions Cycles
  4421                           ; simple_byte           31    16 (average)
  4422                           ;	Chosen strategy is simple_byte
  4423  0002C6  0A00               	xorlw	0	; case 0
  4424  0002C8  B4D8               	btfsc	status,2,c
  4425  0002CA  D70C               	goto	i2l229
  4426  0002CC  0A01               	xorlw	1	; case 1
  4427  0002CE  B4D8               	btfsc	status,2,c
  4428  0002D0  D721               	goto	i2l234
  4429  0002D2  0A03               	xorlw	3	; case 2
  4430  0002D4  B4D8               	btfsc	status,2,c
  4431  0002D6  D736               	goto	i2l238
  4432  0002D8  0A01               	xorlw	1	; case 3
  4433  0002DA  B4D8               	btfsc	status,2,c
  4434  0002DC  D74B               	goto	i2l242
  4435  0002DE  0A07               	xorlw	7	; case 4
  4436  0002E0  B4D8               	btfsc	status,2,c
  4437  0002E2  D760               	goto	i2l246
  4438  0002E4  0A01               	xorlw	1	; case 5
  4439  0002E6  B4D8               	btfsc	status,2,c
  4440  0002E8  D775               	goto	i2l250
  4441  0002EA  0A03               	xorlw	3	; case 6
  4442  0002EC  B4D8               	btfsc	status,2,c
  4443  0002EE  D78A               	goto	i2l254
  4444  0002F0  0A01               	xorlw	1	; case 7
  4445  0002F2  B4D8               	btfsc	status,2,c
  4446  0002F4  D79F               	goto	i2l258
  4447  0002F6  0A0F               	xorlw	15	; case 8
  4448  0002F8  B4D8               	btfsc	status,2,c
  4449  0002FA  D7B4               	goto	i2l262
  4450  0002FC  0A01               	xorlw	1	; case 9
  4451  0002FE  A4D8               	btfss	status,2,c
  4452  000300  0012               	return	
  4453  000302  D7C8               	goto	i2l266
  4454  000304                     __end_of_Test_Port:
  4455                           	opt stack 0
  4456                           pclatu	equ	0xFFB
  4457                           pclath	equ	0xFFA
  4458                           tblptru	equ	0xFF8
  4459                           tblptrh	equ	0xFF7
  4460                           tblptrl	equ	0xFF6
  4461                           tablat	equ	0xFF5
  4462                           prodh	equ	0xFF4
  4463                           prodl	equ	0xFF3
  4464                           intcon	equ	0xFF2
  4465                           postinc0	equ	0xFEE
  4466                           fsr0h	equ	0xFEA
  4467                           fsr0l	equ	0xFE9
  4468                           wreg	equ	0xFE8
  4469                           fsr1h	equ	0xFE2
  4470                           fsr1l	equ	0xFE1
  4471                           indf2	equ	0xFDF
  4472                           postinc2	equ	0xFDE
  4473                           fsr2h	equ	0xFDA
  4474                           fsr2l	equ	0xFD9
  4475                           status	equ	0xFD8
  4476                           
  4477 ;; *************** function _Transmit *****************
  4478 ;; Defined at:
  4479 ;;		line 18 in file "communication.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  receiver        1    wreg     unsigned char 
  4482 ;;  operation       1    0[COMRAM] unsigned char 
  4483 ;;  port            1    1[COMRAM] unsigned char 
  4484 ;;  con_status      1    2[COMRAM] unsigned char 
  4485 ;; Auto vars:     Size  Location     Type
  4486 ;;  receiver        1    3[COMRAM] unsigned char 
  4487 ;; Return value:  Size  Location     Type
  4488 ;;		None               void
  4489 ;; Registers used:
  4490 ;;		wreg, status,2
  4491 ;; Tracked objects:
  4492 ;;		On entry : 0/0
  4493 ;;		On exit  : 0/0
  4494 ;;		Unchanged: 0/0
  4495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4496 ;;      Params:         3       0       0       0
  4497 ;;      Locals:         1       0       0       0
  4498 ;;      Temps:          0       0       0       0
  4499 ;;      Totals:         4       0       0       0
  4500 ;;Total ram usage:        4 bytes
  4501 ;; Hardware stack levels used:    1
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_Test_Port
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text27
  4510  000E60                     __ptext27:
  4511                           	opt stack 0
  4512  000E60                     _Transmit:
  4513                           	opt stack 24
  4514                           
  4515                           ;incstack = 0
  4516                           ;Transmit@receiver stored from wreg
  4517  000E60  6E04               	movwf	Transmit@receiver,c
  4518                           
  4519                           ;communication.c: 20: PORTDbits.RD4 = 1;
  4520  000E62  8883               	bsf	3971,4,c	;volatile
  4521                           
  4522                           ;communication.c: 21: RCSTA1bits.CREN = 0;
  4523  000E64  98AB               	bcf	4011,4,c	;volatile
  4524                           
  4525                           ;communication.c: 23: __nop();
  4526  000E66  F000               	nop	
  4527  000E68                     i2l55:
  4528  000E68  A89E               	btfss	3998,4,c	;volatile
  4529  000E6A  D7FE               	goto	i2l55
  4530                           
  4531                           ;communication.c: 25: TXSTA1bits.TX9D = 1;
  4532  000E6C  80AC               	bsf	4012,0,c	;volatile
  4533                           
  4534                           ;communication.c: 26: TXREG1 = receiver;
  4535  000E6E  C004  FFAD         	movff	Transmit@receiver,4013	;volatile
  4536  000E72                     i2l58:
  4537  000E72  A89E               	btfss	3998,4,c	;volatile
  4538  000E74  D7FE               	goto	i2l58
  4539                           
  4540                           ;communication.c: 28: TXREG1 = 0x01;
  4541  000E76  0E01               	movlw	1
  4542  000E78  6EAD               	movwf	4013,c	;volatile
  4543  000E7A                     i2l61:
  4544  000E7A  A89E               	btfss	3998,4,c	;volatile
  4545  000E7C  D7FE               	goto	i2l61
  4546                           
  4547                           ;communication.c: 30: TXREG1 = operation;
  4548  000E7E  C001  FFAD         	movff	Transmit@operation,4013	;volatile
  4549  000E82                     i2l64:
  4550  000E82  A89E               	btfss	3998,4,c	;volatile
  4551  000E84  D7FE               	goto	i2l64
  4552                           
  4553                           ;communication.c: 32: TXREG1 = port;
  4554  000E86  C002  FFAD         	movff	Transmit@port,4013	;volatile
  4555  000E8A                     i2l67:
  4556  000E8A  A89E               	btfss	3998,4,c	;volatile
  4557  000E8C  D7FE               	goto	i2l67
  4558                           
  4559                           ;communication.c: 34: TXREG1 = con_status;
  4560  000E8E  C003  FFAD         	movff	Transmit@con_status,4013	;volatile
  4561  000E92                     i2l70:
  4562  000E92  A89E               	btfss	3998,4,c	;volatile
  4563  000E94  D7FE               	goto	i2l70
  4564                           
  4565                           ;communication.c: 36: TXREG1 = p_status;
  4566  000E96  C04B  FFAD         	movff	_p_status,4013	;volatile
  4567  000E9A                     i2l73:
  4568  000E9A  A2AC               	btfss	4012,1,c	;volatile
  4569  000E9C  D7FE               	goto	i2l73
  4570                           
  4571                           ;communication.c: 38: PORTDbits.RD4 = 0;
  4572  000E9E  9883               	bcf	3971,4,c	;volatile
  4573                           
  4574                           ;communication.c: 39: RCSTA1bits.CREN = 1;
  4575  000EA0  88AB               	bsf	4011,4,c	;volatile
  4576                           
  4577                           ;communication.c: 40: __nop();
  4578  000EA2  F000               	nop	
  4579  000EA4  0012               	return		;funcret
  4580  000EA6                     __end_of_Transmit:
  4581                           	opt stack 0
  4582                           pclatu	equ	0xFFB
  4583                           pclath	equ	0xFFA
  4584                           tblptru	equ	0xFF8
  4585                           tblptrh	equ	0xFF7
  4586                           tblptrl	equ	0xFF6
  4587                           tablat	equ	0xFF5
  4588                           prodh	equ	0xFF4
  4589                           prodl	equ	0xFF3
  4590                           intcon	equ	0xFF2
  4591                           postinc0	equ	0xFEE
  4592                           fsr0h	equ	0xFEA
  4593                           fsr0l	equ	0xFE9
  4594                           wreg	equ	0xFE8
  4595                           fsr1h	equ	0xFE2
  4596                           fsr1l	equ	0xFE1
  4597                           indf2	equ	0xFDF
  4598                           postinc2	equ	0xFDE
  4599                           fsr2h	equ	0xFDA
  4600                           fsr2l	equ	0xFD9
  4601                           status	equ	0xFD8
  4602                           
  4603 ;; *************** function _Mark_Ignite *****************
  4604 ;; Defined at:
  4605 ;;		line 125 in file "ignition.c"
  4606 ;; Parameters:    Size  Location     Type
  4607 ;;		None
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;		None               void
  4612 ;; Registers used:
  4613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4614 ;; Tracked objects:
  4615 ;;		On entry : 0/0
  4616 ;;		On exit  : 0/0
  4617 ;;		Unchanged: 0/0
  4618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  4619 ;;      Params:         0       0       0       0
  4620 ;;      Locals:         0       0       0       0
  4621 ;;      Temps:          0       0       0       0
  4622 ;;      Totals:         0       0       0       0
  4623 ;;Total ram usage:        0 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; This function calls:
  4626 ;;		Nothing
  4627 ;; This function is called by:
  4628 ;;		_Evaluate_Reception
  4629 ;; This function uses a non-reentrant model
  4630 ;;
  4631                           
  4632                           	psect	text28
  4633  001002                     __ptext28:
  4634                           	opt stack 0
  4635  001002                     _Mark_Ignite:
  4636                           	opt stack 25
  4637                           
  4638                           ;ignition.c: 126: Marker[received[3]] = 1;
  4639                           
  4640                           ;incstack = 0
  4641  001002  5048               	movf	_received+3,w,c
  4642  001004  0D01               	mullw	1
  4643  001006  0E96               	movlw	low _Marker
  4644  001008  24F3               	addwf	prodl,w,c
  4645  00100A  6ED9               	movwf	fsr2l,c
  4646  00100C  0E00               	movlw	high _Marker
  4647  00100E  20F4               	addwfc	prodh,w,c
  4648  001010  6EDA               	movwf	fsr2h,c
  4649  001012  0E01               	movlw	1
  4650  001014  6EDF               	movwf	indf2,c
  4651  001016  0012               	return		;funcret
  4652  001018                     __end_of_Mark_Ignite:
  4653                           	opt stack 0
  4654  0000                     pclatu	equ	0xFFB
  4655                           pclath	equ	0xFFA
  4656                           tblptru	equ	0xFF8
  4657                           tblptrh	equ	0xFF7
  4658                           tblptrl	equ	0xFF6
  4659                           tablat	equ	0xFF5
  4660                           prodh	equ	0xFF4
  4661                           prodl	equ	0xFF3
  4662                           intcon	equ	0xFF2
  4663                           postinc0	equ	0xFEE
  4664                           fsr0h	equ	0xFEA
  4665                           fsr0l	equ	0xFE9
  4666                           wreg	equ	0xFE8
  4667                           fsr1h	equ	0xFE2
  4668                           fsr1l	equ	0xFE1
  4669                           indf2	equ	0xFDF
  4670                           postinc2	equ	0xFDE
  4671                           fsr2h	equ	0xFDA
  4672                           fsr2l	equ	0xFD9
  4673                           status	equ	0xFD8
  4674                           pclatu	equ	0xFFB
  4675                           pclath	equ	0xFFA
  4676                           tblptru	equ	0xFF8
  4677                           tblptrh	equ	0xFF7
  4678                           tblptrl	equ	0xFF6
  4679                           tablat	equ	0xFF5
  4680                           prodh	equ	0xFF4
  4681                           prodl	equ	0xFF3
  4682                           intcon	equ	0xFF2
  4683                           postinc0	equ	0xFEE
  4684                           fsr0h	equ	0xFEA
  4685                           fsr0l	equ	0xFE9
  4686                           wreg	equ	0xFE8
  4687                           fsr1h	equ	0xFE2
  4688                           fsr1l	equ	0xFE1
  4689                           indf2	equ	0xFDF
  4690                           postinc2	equ	0xFDE
  4691                           fsr2h	equ	0xFDA
  4692                           fsr2l	equ	0xFD9
  4693                           status	equ	0xFD8
  4694                           
  4695                           	psect	rparam
  4696  0000                     pclatu	equ	0xFFB
  4697                           pclath	equ	0xFFA
  4698                           tblptru	equ	0xFF8
  4699                           tblptrh	equ	0xFF7
  4700                           tblptrl	equ	0xFF6
  4701                           tablat	equ	0xFF5
  4702                           prodh	equ	0xFF4
  4703                           prodl	equ	0xFF3
  4704                           intcon	equ	0xFF2
  4705                           postinc0	equ	0xFEE
  4706                           fsr0h	equ	0xFEA
  4707                           fsr0l	equ	0xFE9
  4708                           wreg	equ	0xFE8
  4709                           fsr1h	equ	0xFE2
  4710                           fsr1l	equ	0xFE1
  4711                           indf2	equ	0xFDF
  4712                           postinc2	equ	0xFDE
  4713                           fsr2h	equ	0xFDA
  4714                           fsr2l	equ	0xFD9
  4715                           status	equ	0xFD8
  4716                           
  4717                           	psect	temp
  4718  00004C                     btemp:
  4719                           	opt stack 0
  4720  00004C                     	ds	1
  4721  0000                     int$flags	set	btemp
  4722                           pclatu	equ	0xFFB
  4723                           pclath	equ	0xFFA
  4724                           tblptru	equ	0xFF8
  4725                           tblptrh	equ	0xFF7
  4726                           tblptrl	equ	0xFF6
  4727                           tablat	equ	0xFF5
  4728                           prodh	equ	0xFF4
  4729                           prodl	equ	0xFF3
  4730                           intcon	equ	0xFF2
  4731                           postinc0	equ	0xFEE
  4732                           fsr0h	equ	0xFEA
  4733                           fsr0l	equ	0xFE9
  4734                           wreg	equ	0xFE8
  4735                           fsr1h	equ	0xFE2
  4736                           fsr1l	equ	0xFE1
  4737                           indf2	equ	0xFDF
  4738                           postinc2	equ	0xFDE
  4739                           fsr2h	equ	0xFDA
  4740                           fsr2l	equ	0xFD9
  4741                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     68      75
    BANK0           160     54      64
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Evaluate_Reception->i2_Check_Power
    i2_Check_Power->i2___ftdiv
    i2___lbtoft->i2___ftpack
    i2___ftmul->i2___lbtoft
    i2___ftdiv->i2___ftmul
    _Test_Port->_Transmit

Critical Paths under _main in BANK0

    _main->_Check_Power
    _Init->_InitMiscellaneos
    _Check_Power->___ftdiv
    ___lbtoft->___ftpack
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul
    _Check_Ignition->_Ignite_Port

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8276
                     _Check_Ignition
                        _Check_Power
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0      68
                          _InitAnsel
                      _InitInterrupt
                   _InitMiscellaneos
                  _InitMiscellaneous
                           _InitPort
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneos                                     1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Power                                         12    12      0    8074
                                             42 BANK0     12    12      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2053
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2843
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     392
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2669
                                             27 BANK0     15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2031
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _Check_Ignition                                       2     2      0     134
                                              1 BANK0      2     2      0
                        _Ignite_Port
 ---------------------------------------------------------------------------------
 (2) _Ignite_Port                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Isr                                                 14    14      0    6568
                                             54 COMRAM    14    14      0
                 _Evaluate_Reception
                            _Receive
 ---------------------------------------------------------------------------------
 (5) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Evaluate_Reception                                   0     0      0    6568
                        _Mark_Ignite
                          _Test_Port
                      i2_Check_Power
 ---------------------------------------------------------------------------------
 (6) i2_Check_Power                                       12    12      0    2640
                                             42 COMRAM    12    12      0
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                         i2___lbtoft
 ---------------------------------------------------------------------------------
 (7) i2___lbtoft                                           4     1      3     487
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2___ftmul                                           15     9      6     947
                                             12 COMRAM    15     9      6
                         i2___ftpack
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) i2___ftge                                             9     3      6     240
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (7) i2___ftdiv                                           15     9      6     849
                                             27 COMRAM    15     9      6
                          i2___ftmul (ARG)
                         i2___ftpack
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftpack                                           8     3      5     465
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (6) _Test_Port                                            0     0      0    3928
                           _Transmit
 ---------------------------------------------------------------------------------
 (7) _Transmit                                             4     1      3    3928
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (6) _Mark_Ignite                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Ignition
     _Ignite_Port
   _Check_Power
     ___ftdiv
       ___ftmul (ARG)
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftge
     ___ftmul
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneos
     _InitMiscellaneous
     _InitPort
     _InitTransmission
     _InitTris

 _Isr (ROOT)
   _Evaluate_Reception
     _Mark_Ignite
     _Test_Port
       _Transmit
     i2_Check_Power
       i2___ftdiv
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___ftpack (ARG)
         i2___lbtoft (ARG)
           i2___ftpack
       i2___ftge
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     36      40       4       40.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     44      4B       1       79.8%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8B       8        0.0%
DATA                 0      0      8B      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Jan 29 16:49:36 2017

           ??_Check_Ignition 0061                           l23 101C                   i2___ftpack 0C46  
                 i2___lbtoft 0F38                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
                        l300 03B8                          l280 0D9E                          l281 0DA2  
                        l282 0DA6                          l274 0D8A                          l283 0DAA  
                        l284 0DAE                          l276 0D8E                          l277 0D92  
                        l278 0D96                          l279 0D9A                          l625 0862  
                        l297 0358                          l567 0970                 __CFG_CPB$OFF 000000  
               __CFG_CPD$OFF 000000                          _Isr 0008                          prod 000FF3  
                        wreg 000FE8                   _TXSTA1bits 000FAC                ??_Ignite_Port 0060  
               __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0084                         ?_Isr 0001  
              ??_Mark_Ignite 0001                 ___ftdiv@sign 0089                         l1570 08D4  
                       l1804 0DB2                         l1580 0962                         l1572 0904  
                       l1564 08B2                         l1820 07C0                         l1814 0786  
                       l1910 0BFE                         l1592 0996                         l1576 0924  
                       l1568 08C6                         l1840 0820                         l1744 0F12  
                       l1586 097A                         l1578 0954                         l1906 0BBE  
                       l1916 0C42                         l1860 04D0                         l1748 0F1C  
                       l1952 0E0A                         l1880 0558                         l1890 0596  
                       l1866 050A                         l1964 0E5A                         l1956 0E14  
                       l1884 0576                         l1894 05B4                         l1984 0468  
                       u1521 0762                         u1541 079C                         u1571 04AC  
                       u1591 04E6                         u1847 0E3C                         i2l61 0E7A  
                       i2l70 0E92                         i2l55 0E68                         i2l64 0E82  
                       i2l73 0E9A                         i2l58 0E72                         i2l67 0E8A  
          ?_InitMiscellaneos 0001                         _Init 0F9C                         _main 1018  
               ___ftpack@arg 0060                 ___ftpack@exp 0063                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr0l 000FE9                         fsr2h 000FDA  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       btemp 004C                __CFG_BORV$190 000000                 Transmit@port 0002  
         ??_InitMiscellaneos 0060                         pclat 000FFA                 i2___ftge@ff1 0001  
               i2___ftge@ff2 0004                         prodh 000FF4                         prodl 000FF3  
                       start 00DE                __CFG_IESO$OFF 000000                 i2___ftdiv@f1 001C  
               i2___ftdiv@f2 001F                 i2___ftdiv@f3 0026                 i2___lbtoft@c 000C  
               ___ftmul@cntr 0079                 i2___ftmul@f1 000D                 i2___ftmul@f2 0010  
               ___param_bank 000010                 ___ftmul@sign 007A                _InitInterrupt 1036  
                      ??_Isr 0037              __end_of_Receive 1036                 _BAUDCON1bits 000FB8  
                _Check_Power 0304                        ?_Init 0001                        ?_main 0001  
            __end_of___ftdiv 0898              __end_of___ftmul 05F4            _InitMiscellaneous 1040  
                      i2l300 068A                        i2l230 00FC                        i2l250 01D4  
                      i2l242 0174                        i2l234 0114                        i2l251 01EC  
                      i2l243 018C                        i2l235 012C                        i2l229 00E4  
                      i2l262 0264                        i2l254 0204                        i2l246 01A4  
                      i2l238 0144                        i2l342 00A2                        i2l263 027C  
                      i2l255 021C                        i2l247 01BC                        i2l239 015C  
                      i2l336 0076                        i2l337 0072                        i2l266 0294  
                      i2l258 0234                        i2l267 02AC                        i2l259 024C  
                      i2l625 0B4C                        i2l297 0630                        i2l567 0CD4  
                      _PORTA 000F80                        _PORTB 000F81                        _PORTC 000F82  
                      _PORTD 000F83                        _PORTE 000F84                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                __CFG_WRT0$OFF 000000     __end_of_InitTransmission 0FD6  
              __CFG_WRT1$OFF 000000           ?_InitMiscellaneous 0001               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
         __CFG_MCLRE$EXTMCLR 000000                ___ftpack@sign 0064               __pbitbssCOMRAM 0250  
             __CFG_BOREN$OFF 000000          ??_InitMiscellaneous 0060                        tablat 000FF5  
           __end_ofi2___ftge 0D84                        status 000FD8          __end_of_Ignite_Port 0E04  
              i2___ftdiv@exp 0029          __end_of_Mark_Ignite 1018           __size_ofi2___ftdiv 00E6  
         __size_ofi2___ftmul 00F4               ?_InitInterrupt 0001              __initialization 0EA6  
               __end_of_Init 0FBA                 __end_of_main 1028                i2___ftmul@exp 0016  
           __end_of_InitPort 1002             __end_of_InitTris 0FEC    __end_of_InitMiscellaneous 1046  
                     ??_Init 0061                  ?i2___ftpack 0001                  ?i2___lbtoft 0009  
 __end_of_Evaluate_Reception 0F9C                       ??_main 0096              _slave_addressed 0251  
              __activetblptr 000002             __end_of_Transmit 0EA6                       _ADCON0 000FC2  
                     _ADCON1 000FC1                       _ADCON2 000FC0                       _ADRESH 000FC4  
                     _ANSELA 000F38                       _ANSELB 000F39                       _ANSELC 000F3A  
                     _ANSELD 000F3B                       _ANSELE 000F3C             __end_of___ftpack 09A4  
           __end_of___lbtoft 0F0C                       i2l1530 0C8C                       i2l1522 0C56  
                     i2l1602 0AC0                       i2l1700 0A5E                       u116_41 0AA8  
                     u124_41 09B4                       i2l1534 0CA2                       i2l1526 0C64  
                     i2l1462 1032                       i2l1536 0CC0                       i2l1528 0C6E  
                     i2l1608 0AE8                       i2l1538 0CCA                       i2l1650 0D54  
                     i2l1628 0B26                       i2l1646 0D24               __CFG_WDTEN$OFF 000000  
                     i2l1656 0D80                       i2l1672 09F4                       i2l1690 0A36  
                     i2l1666 09CC                       i2l1940 0726                       u118_41 0AD0  
                     u126_41 09DC                       i2l1686 0A26                       i2l1696 0A4E  
                     i2l1798 02C4                       i2l1992 0F8E                       _RCREG1 000FAE  
                     _OSCCON 000FD3           __size_of_InitAnsel 0020                       _SPBRG1 000FAF  
                     _TXREG1 000FAD      Check_Power@source_power 0093                    ??_Receive 0001  
                     _Marker 0096               __CFG_XINST$OFF 000000                       ___ftge 0B7E  
                  ??___ftdiv 0081                    ??___ftmul 0072                       clear_0 0EAC  
      __end_ofi2_Check_Power 074C        ___ftmul@f3_as_product 0076           __size_of_Test_Port 0222  
               __pdataCOMRAM 004B            __end_ofi2___ftdiv 0B7E            __end_ofi2___ftmul 0A98  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                _Ignite_Port 0D84              __CFG_HFOFST$OFF 000000                  _Mark_Ignite 1002  
             i2___ftdiv@cntr 0025                   __accesstop 0060      __end_of__initialization 0ED0  
             i2___ftdiv@sign 002A              __CFG_PBADEN$OFF 000000          __size_ofi2___ftpack 00AE  
        __size_ofi2___lbtoft 0024                   ___ftge@ff1 0060                   ___ftge@ff2 0063  
            ??_InitInterrupt 0060                ___rparam_used 000001                   ___ftdiv@f1 007B  
                 ___ftdiv@f2 007E                   ___ftdiv@f3 0085               i2___ftpack@arg 0001  
             i2___ftpack@exp 0004                   ___lbtoft@c 006B                   ___ftmul@f1 006C  
                 ___ftmul@f2 006F               __pcstackCOMRAM 0001               i2___ftmul@cntr 001A  
             i2___ftmul@sign 001B   __size_of_InitMiscellaneous 0006            __end_of_InitAnsel 0F7C  
                  ?i2___ftge 0001                   __pbssBANK0 0096              __CFG_PLLCFG$OFF 000000  
                  ?_InitPort 0001                    ?_InitTris 0001            __end_of_Test_Port 0304  
         __CFG_CCP2MX$PORTC1 000000                      ?___ftge 0060           __CFG_CCP3MX$PORTB5 000000  
                  ?_Transmit 0001    __size_of_InitMiscellaneos 002C                 ?_Check_Power 0001  
                  ?___ftpack 0060                    ?___lbtoft 0068                   ??i2___ftge 0007  
          ?_InitTransmission 0001            __CFG_PRICLKEN$OFF 000000           ??_InitTransmission 0060  
                 ??_InitPort 0060                   ??_InitTris 0060           Check_Power@DAC_out 008A  
            __CFG_PWRTEN$OFF 000000                      _Receive 1028                      __Hparam 0000  
                    __Lparam 0000              __size_of___ftge 00C8                      ___ftdiv 074C  
                    ___ftmul 0496                   ??_Transmit 0004              __CFG_STVREN$OFF 000000  
                    __pcinit 0EA6                 ??i2___ftpack 0006                 ??i2___lbtoft 000C  
                 ??___ftpack 0065                   ??___lbtoft 006B      i2___ftmul@f3_as_product 0017  
                    __ramtop 0300                      __ptext0 1018                      __ptext1 0F9C  
                    __ptext2 0FD6                      __ptext3 0FBA                      __ptext4 0FEC  
                    __ptext5 1040                      __ptext6 0F0C                      __ptext7 1036  
                    __ptext8 0F5C                      __ptext9 0304                 __size_of_Isr 00D6  
    __size_of_Check_Ignition 005C                      _overrun 0250          i2Check_Power@supply 0031  
       end_of_initialization 0ED0           _Evaluate_Reception 0F7C                __Lmediumconst 0000  
         __end_ofi2___ftpack 0CF4           __end_ofi2___lbtoft 0F5C          ?_Evaluate_Reception 0001  
   Ignite_Port@ignite_number 0060                      postinc0 000FEE                      postinc2 000FDE  
         Check_Power@voltage 008D           Transmit@con_status 0003                    _PORTAbits 000F80  
                  _PORTBbits 000F81                    _PORTCbits 000F82                    _PORTDbits 000F83  
                  _PORTEbits 000F84         ??_Evaluate_Reception 0037            InitMiscellaneos@c 0060  
                  _TRISCbits 000F94                 ?_Ignite_Port 0001                    i2___ftdiv 0A98  
                  i2___ftmul 09A4                 ?_Mark_Ignite 0001                  ___ftdiv@exp 0088  
            i2___ftpack@sign 0005                  ___ftmul@exp 0075               __end_of___ftge 0C46  
           _InitMiscellaneos 0F0C                __pidataCOMRAM 1046    i2Check_Power@source_power 0034  
       __size_of_Check_Power 0192          start_initialization 0EA6            __size_ofi2___ftge 0090  
                  _InitAnsel 0F5C                  __end_of_Isr 00DE                   ?i2___ftdiv 001C  
                 ?i2___ftmul 000D              Check_Ignition@c 0062       __size_ofi2_Check_Power 0158  
          __size_of_InitPort 0016            __size_of_InitTris 0016        __end_of_InitInterrupt 1040  
                   ??___ftge 0066                    _Test_Port 00E2            __size_of_Transmit 0046  
          __size_of___ftpack 010C            __size_of___lbtoft 002E               _Check_Ignition 0E04  
                __pbssCOMRAM 0045                   ?_InitAnsel 0001                __pcstackBANK0 0060  
                   ?_Receive 0001    __size_of_InitTransmission 001C                    __pintcode 0008  
                 ?_Test_Port 0001                     ?___ftdiv 007B                     ?___ftmul 006C  
     __end_of_Check_Ignition 0E60                i2_Check_Power 05F4                  ??i2___ftdiv 0022  
                ??i2___ftmul 0013         __size_of_Ignite_Port 0080         __size_of_Mark_Ignite 0016  
                   _PIE1bits 000F9D                     _PIR1bits 000F9E             __CFG_WDTPS$32768 000000  
          Check_Power@supply 0090                     _VREFCON0 000F42                     _VREFCON1 000F41  
             ?i2_Check_Power 0001                   _ADCON0bits 000FC2              ?_Check_Ignition 0001  
                   i2___ftge 0CF4                  ??_InitAnsel 0060              _receive_counter 0049  
   __end_of_InitMiscellaneos 0F38                     _InitPort 0FEC                     _InitTris 0FD6  
       i2Check_Power@DAC_out 002B            Transmit@operation 0001                     __Hrparam 0000  
           __size_of_Receive 000E                     __Lrparam 0000            __CFG_P2BMX$PORTD2 000000  
                ??_Test_Port 0005                     _Transmit 0E60             __size_of___ftdiv 014C  
           __size_of___ftmul 015E                     ___ftpack 0898                     ___lbtoft 0EDE  
__size_of_Evaluate_Reception 0020                     __ptext10 0EDE                     __ptext11 0496  
                   __ptext20 05F4                     __ptext12 0B7E                     __ptext21 0F38  
                   __ptext13 074C                     __ptext22 09A4                     __ptext14 0898  
                   __ptext23 0CF4                     __ptext15 0E04                     __ptext24 0A98  
                   __ptext16 0D84                     __ptext25 0C46                     __ptext26 00E2  
                   __ptext18 1028                     __ptext27 0E60                     __ptext19 0F7C  
                   __ptext28 1002                __size_of_Init 001E                __size_of_main 0010  
                   _received 0045                     _p_status 004B             _InitTransmission 0FBA  
                   int$flags 004C         i2Check_Power@voltage 002E              ??i2_Check_Power 002B  
              ??_Check_Power 008A             Transmit@receiver 0004                   _INTCONbits 000FF2  
                   intlevel2 0000                 _VREFCON2bits 000F40                   _RCSTA1bits 000FAB  
        __end_of_Check_Power 0496            __CFG_T3CMX$PORTC0 000000       __size_of_InitInterrupt 000A  
          __CFG_FOSC$INTIO67 000000  
