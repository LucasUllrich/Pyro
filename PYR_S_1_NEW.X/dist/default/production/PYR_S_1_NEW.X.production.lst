

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jan 26 21:37:55 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           	psect	idataCOMRAM
    34  00054E                     __pidataCOMRAM:
    35                           	opt stack 0
    36                           
    37                           ;initializer for _p_status
    38  00054E  15                 	db	21
    39  0000                     _ANSELA	set	3896
    40  0000                     _ANSELB	set	3897
    41  0000                     _ANSELC	set	3898
    42  0000                     _ANSELD	set	3899
    43  0000                     _ANSELE	set	3900
    44  0000                     _VREFCON0bits	set	3906
    45  0000                     _ADCON0	set	4034
    46  0000                     _ADCON1	set	4033
    47  0000                     _ADCON2	set	4032
    48  0000                     _BAUDCON1bits	set	4024
    49  0000                     _INTCONbits	set	4082
    50  0000                     _OSCCON	set	4051
    51  0000                     _PIE1bits	set	3997
    52  0000                     _PIR1bits	set	3998
    53  0000                     _PORTA	set	3968
    54  0000                     _PORTAbits	set	3968
    55  0000                     _PORTB	set	3969
    56  0000                     _PORTBbits	set	3969
    57  0000                     _PORTC	set	3970
    58  0000                     _PORTCbits	set	3970
    59  0000                     _PORTD	set	3971
    60  0000                     _PORTDbits	set	3971
    61  0000                     _PORTE	set	3972
    62  0000                     _PORTEbits	set	3972
    63  0000                     _RCREG1	set	4014
    64  0000                     _RCSTA1bits	set	4011
    65  0000                     _SPBRG1	set	4015
    66  0000                     _TRISA	set	3986
    67  0000                     _TRISB	set	3987
    68  0000                     _TRISC	set	3988
    69  0000                     _TRISCbits	set	3988
    70  0000                     _TRISD	set	3989
    71  0000                     _TRISE	set	3990
    72  0000                     _TXREG1	set	4013
    73  0000                     _TXSTA1bits	set	4012
    74                           
    75                           ; #config settings
    76  0000                     
    77                           	psect	cinit
    78  000414                     __pcinit:
    79                           	opt stack 0
    80  000414                     start_initialization:
    81                           	opt stack 0
    82  000414                     __initialization:
    83                           	opt stack 0
    84                           
    85                           ; Clear objects allocated to BITCOMRAM (1 bytes)
    86  000414  6A25               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
    87                           
    88                           ; Clear objects allocated to COMRAM (15 bytes)
    89  000416  EE00  F016         	lfsr	0,__pbssCOMRAM
    90  00041A  0E0F               	movlw	15
    91  00041C                     clear_0:
    92  00041C  6AEE               	clrf	postinc0,c
    93  00041E  06E8               	decf	wreg,f,c
    94  000420  E1FD               	bnz	clear_0
    95                           
    96                           ; Initialize objects allocated to COMRAM (1 bytes)
    97                           ; load TBLPTR registers with __pidataCOMRAM
    98  000422  0E4E               	movlw	low __pidataCOMRAM
    99  000424  6EF6               	movwf	tblptrl,c
   100  000426  0E05               	movlw	high __pidataCOMRAM
   101  000428  6EF7               	movwf	tblptrh,c
   102  00042A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   103  00042C  6EF8               	movwf	tblptru,c
   104  00042E  0009               	tblrd		*+	;fetch initializer
   105  000430  CFF5 F026          	movff	tablat,__pdataCOMRAM
   106  000434                     end_of_initialization:
   107                           	opt stack 0
   108  000434                     __end_of__initialization:
   109                           	opt stack 0
   110  000434  9027               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   111  000436  9227               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   112  000438  0E00               	movlw	low (__Lmediumconst shr (0+16))
   113  00043A  6EF8               	movwf	tblptru,c
   114  00043C  0100               	movlb	0
   115  00043E  EF8F  F002         	goto	_main	;jump to C main() function
   116                           tblptru	equ	0xFF8
   117                           tblptrh	equ	0xFF7
   118                           tblptrl	equ	0xFF6
   119                           tablat	equ	0xFF5
   120                           postinc0	equ	0xFEE
   121                           wreg	equ	0xFE8
   122                           
   123                           	psect	bitbssCOMRAM
   124  000128                     __pbitbssCOMRAM:
   125                           	opt stack 0
   126  000128                     _overrun:
   127                           	opt stack 0
   128  000128                     	ds	1
   129  000129                     _slave_addressed:
   130                           	opt stack 0
   131  000129                     	ds	1
   132                           tblptru	equ	0xFF8
   133                           tblptrh	equ	0xFF7
   134                           tblptrl	equ	0xFF6
   135                           tablat	equ	0xFF5
   136                           postinc0	equ	0xFEE
   137                           wreg	equ	0xFE8
   138                           
   139                           	psect	bssCOMRAM
   140  000016                     __pbssCOMRAM:
   141                           	opt stack 0
   142  000016                     _Marker:
   143                           	opt stack 0
   144  000016                     	ds	10
   145  000020                     _received:
   146                           	opt stack 0
   147  000020                     	ds	4
   148  000024                     _receive_counter:
   149                           	opt stack 0
   150  000024                     	ds	1
   151                           tblptru	equ	0xFF8
   152                           tblptrh	equ	0xFF7
   153                           tblptrl	equ	0xFF6
   154                           tablat	equ	0xFF5
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           
   158                           	psect	dataCOMRAM
   159  000026                     __pdataCOMRAM:
   160                           	opt stack 0
   161  000026                     _p_status:
   162                           	opt stack 0
   163  000026                     	ds	1
   164                           tblptru	equ	0xFF8
   165                           tblptrh	equ	0xFF7
   166                           tblptrl	equ	0xFF6
   167                           tablat	equ	0xFF5
   168                           postinc0	equ	0xFEE
   169                           wreg	equ	0xFE8
   170                           
   171                           	psect	cstackCOMRAM
   172  000001                     __pcstackCOMRAM:
   173                           	opt stack 0
   174  000001                     Transmit@operation:
   175                           	opt stack 0
   176                           
   177                           ; 1 bytes @ 0x0
   178  000001                     	ds	1
   179  000002                     Transmit@port:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0x1
   183  000002                     	ds	1
   184  000003                     Transmit@con_status:
   185                           	opt stack 0
   186                           
   187                           ; 1 bytes @ 0x2
   188  000003                     	ds	1
   189  000004                     Transmit@receiver:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0x3
   193  000004                     	ds	1
   194  000005                     ??_Isr:
   195                           
   196                           ; 0 bytes @ 0x4
   197  000005                     	ds	14
   198  000013                     InitMiscellaneos@c:
   199                           	opt stack 0
   200  000013                     Ignite_Port@ignite_number:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0x12
   204  000013                     	ds	1
   205  000014                     ??_Check_Ignition:
   206                           
   207                           ; 0 bytes @ 0x13
   208  000014                     	ds	1
   209  000015                     Check_Ignition@c:
   210                           	opt stack 0
   211                           
   212                           ; 1 bytes @ 0x14
   213  000015                     	ds	1
   214  000016                     tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           tblptrl	equ	0xFF6
   217                           tablat	equ	0xFF5
   218                           postinc0	equ	0xFEE
   219                           wreg	equ	0xFE8
   220                           
   221                           ; 0 bytes @ 0x15
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 74 in file "main.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;		None               void
   234 ;; Registers used:
   235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   236 ;; Tracked objects:
   237 ;;		On entry : 0/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   241 ;;      Params:         0       0       0       0
   242 ;;      Locals:         0       0       0       0
   243 ;;      Temps:          0       0       0       0
   244 ;;      Totals:         0       0       0       0
   245 ;;Total ram usage:        0 bytes
   246 ;; Hardware stack levels required when called:    6
   247 ;; This function calls:
   248 ;;		_Check_Ignition
   249 ;;		_Check_Power
   250 ;;		_Init
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           	psect	text0
   257  00051E                     __ptext0:
   258                           	opt stack 0
   259  00051E                     _main:
   260                           	opt stack 25
   261                           
   262                           ;main.c: 75: Init();
   263                           
   264                           ;incstack = 0
   265  00051E  EC43  F002         	call	_Init	;wreg free
   266  000522                     l23:
   267                           
   268                           ;main.c: 77: Check_Ignition();
   269  000522  ECC0  F001         	call	_Check_Ignition	;wreg free
   270                           
   271                           ;main.c: 78: Check_Power();
   272  000526  ECA6  F002         	call	_Check_Power	;wreg free
   273                           
   274                           ;main.c: 79: __nop();
   275  00052A  F000               	nop	
   276  00052C  D7FA               	goto	l23
   277  00052E                     __end_of_main:
   278                           	opt stack 0
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286 ;; *************** function _Init *****************
   287 ;; Defined at:
   288 ;;		line 3 in file "init.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;		None               void
   295 ;; Registers used:
   296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : 0/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   302 ;;      Params:         0       0       0       0
   303 ;;      Locals:         0       0       0       0
   304 ;;      Temps:          0       0       0       0
   305 ;;      Totals:         0       0       0       0
   306 ;;Total ram usage:        0 bytes
   307 ;; Hardware stack levels used:    1
   308 ;; Hardware stack levels required when called:    5
   309 ;; This function calls:
   310 ;;		_InitAnsel
   311 ;;		_InitInterrupt
   312 ;;		_InitMiscellaneos
   313 ;;		_InitMiscellaneous
   314 ;;		_InitPort
   315 ;;		_InitTransmission
   316 ;;		_InitTris
   317 ;; This function is called by:
   318 ;;		_main
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322                           	psect	text1
   323  000486                     __ptext1:
   324                           	opt stack 0
   325  000486                     _Init:
   326                           	opt stack 25
   327                           
   328                           ;init.c: 4: InitPort();
   329                           
   330                           ;incstack = 0
   331  000486  EC79  F002         	call	_InitPort	;wreg free
   332                           
   333                           ;init.c: 5: InitTris();
   334  00048A  EC6E  F002         	call	_InitTris	;wreg free
   335                           
   336                           ;init.c: 6: InitAnsel();
   337  00048E  EC33  F002         	call	_InitAnsel	;wreg free
   338                           
   339                           ;init.c: 7: InitMiscellaneous();
   340  000492  ECA3  F002         	call	_InitMiscellaneous	;wreg free
   341                           
   342                           ;init.c: 8: InitTransmission();
   343  000496  EC52  F002         	call	_InitTransmission	;wreg free
   344                           
   345                           ;init.c: 9: InitInterrupt();
   346  00049A  EC9E  F002         	call	_InitInterrupt	;wreg free
   347                           
   348                           ;init.c: 10: InitMiscellaneos();
   349  00049E  EC21  F002         	call	_InitMiscellaneos	;wreg free
   350  0004A2  0012               	return		;funcret
   351  0004A4                     __end_of_Init:
   352                           	opt stack 0
   353                           tblptru	equ	0xFF8
   354                           tblptrh	equ	0xFF7
   355                           tblptrl	equ	0xFF6
   356                           tablat	equ	0xFF5
   357                           postinc0	equ	0xFEE
   358                           wreg	equ	0xFE8
   359                           
   360 ;; *************** function _InitTris *****************
   361 ;; Defined at:
   362 ;;		line 21 in file "init.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;		None               void
   369 ;; Registers used:
   370 ;;		wreg, status,2
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   376 ;;      Params:         0       0       0       0
   377 ;;      Locals:         0       0       0       0
   378 ;;      Temps:          0       0       0       0
   379 ;;      Totals:         0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used:    1
   382 ;; Hardware stack levels required when called:    4
   383 ;; This function calls:
   384 ;;		Nothing
   385 ;; This function is called by:
   386 ;;		_Init
   387 ;; This function uses a non-reentrant model
   388 ;;
   389                           
   390                           	psect	text2
   391  0004DC                     __ptext2:
   392                           	opt stack 0
   393  0004DC                     _InitTris:
   394                           	opt stack 25
   395                           
   396                           ;init.c: 22: TRISA = 0b00010101;
   397                           
   398                           ;incstack = 0
   399  0004DC  0E15               	movlw	21
   400  0004DE  6E92               	movwf	3986,c	;volatile
   401                           
   402                           ;init.c: 23: TRISB = 0b00010001;
   403  0004E0  0E11               	movlw	17
   404  0004E2  6E93               	movwf	3987,c	;volatile
   405                           
   406                           ;init.c: 24: TRISC = 0b00010100;
   407  0004E4  0E14               	movlw	20
   408  0004E6  6E94               	movwf	3988,c	;volatile
   409                           
   410                           ;init.c: 25: TRISD = 0b00000101;
   411  0004E8  0E05               	movlw	5
   412  0004EA  6E95               	movwf	3989,c	;volatile
   413                           
   414                           ;init.c: 26: TRISE = 0b00000101;
   415  0004EC  0E05               	movlw	5
   416  0004EE  6E96               	movwf	3990,c	;volatile
   417  0004F0  0012               	return		;funcret
   418  0004F2                     __end_of_InitTris:
   419                           	opt stack 0
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           
   427 ;; *************** function _InitTransmission *****************
   428 ;; Defined at:
   429 ;;		line 41 in file "init.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;		None               void
   436 ;; Registers used:
   437 ;;		wreg, status,2
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   443 ;;      Params:         0       0       0       0
   444 ;;      Locals:         0       0       0       0
   445 ;;      Temps:          0       0       0       0
   446 ;;      Totals:         0       0       0       0
   447 ;;Total ram usage:        0 bytes
   448 ;; Hardware stack levels used:    1
   449 ;; Hardware stack levels required when called:    4
   450 ;; This function calls:
   451 ;;		Nothing
   452 ;; This function is called by:
   453 ;;		_Init
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text3
   458  0004A4                     __ptext3:
   459                           	opt stack 0
   460  0004A4                     _InitTransmission:
   461                           	opt stack 25
   462                           
   463                           ;init.c: 43: TXSTA1bits.SYNC = 0;
   464                           
   465                           ;incstack = 0
   466  0004A4  98AC               	bcf	4012,4,c	;volatile
   467                           
   468                           ;init.c: 44: TXSTA1bits.BRGH = 1;
   469  0004A6  84AC               	bsf	4012,2,c	;volatile
   470                           
   471                           ;init.c: 45: BAUDCON1bits.BRG16 = 0;
   472  0004A8  96B8               	bcf	4024,3,c	;volatile
   473                           
   474                           ;init.c: 46: SPBRG1 = 25;
   475  0004AA  0E19               	movlw	25
   476  0004AC  6EAF               	movwf	4015,c	;volatile
   477                           
   478                           ;init.c: 47: TRISCbits.RC6 = 1;
   479  0004AE  8C94               	bsf	3988,6,c	;volatile
   480                           
   481                           ;init.c: 48: TRISCbits.RC7 = 1;
   482  0004B0  8E94               	bsf	3988,7,c	;volatile
   483                           
   484                           ;init.c: 49: RCSTA1bits.SPEN = 1;
   485  0004B2  8EAB               	bsf	4011,7,c	;volatile
   486                           
   487                           ;init.c: 50: TXSTA1bits.TX9 = 1;
   488  0004B4  8CAC               	bsf	4012,6,c	;volatile
   489                           
   490                           ;init.c: 51: TXSTA1bits.TXEN = 1;
   491  0004B6  8AAC               	bsf	4012,5,c	;volatile
   492                           
   493                           ;init.c: 52: RCSTA1bits.RC9 = 1;
   494  0004B8  8CAB               	bsf	4011,6,c	;volatile
   495                           
   496                           ;init.c: 53: RCSTA1bits.CREN = 1;
   497  0004BA  88AB               	bsf	4011,4,c	;volatile
   498                           
   499                           ;init.c: 54: TRISCbits.RC6 = 0;
   500  0004BC  9C94               	bcf	3988,6,c	;volatile
   501  0004BE  0012               	return		;funcret
   502  0004C0                     __end_of_InitTransmission:
   503                           	opt stack 0
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           
   511 ;; *************** function _InitPort *****************
   512 ;; Defined at:
   513 ;;		line 13 in file "init.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;		None
   516 ;; Auto vars:     Size  Location     Type
   517 ;;		None
   518 ;; Return value:  Size  Location     Type
   519 ;;		None               void
   520 ;; Registers used:
   521 ;;		wreg, status,2
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   527 ;;      Params:         0       0       0       0
   528 ;;      Locals:         0       0       0       0
   529 ;;      Temps:          0       0       0       0
   530 ;;      Totals:         0       0       0       0
   531 ;;Total ram usage:        0 bytes
   532 ;; Hardware stack levels used:    1
   533 ;; Hardware stack levels required when called:    4
   534 ;; This function calls:
   535 ;;		Nothing
   536 ;; This function is called by:
   537 ;;		_Init
   538 ;; This function uses a non-reentrant model
   539 ;;
   540                           
   541                           	psect	text4
   542  0004F2                     __ptext4:
   543                           	opt stack 0
   544  0004F2                     _InitPort:
   545                           	opt stack 25
   546                           
   547                           ;init.c: 14: PORTA = 0b00000000;
   548                           
   549                           ;incstack = 0
   550  0004F2  0E00               	movlw	0
   551  0004F4  6E80               	movwf	3968,c	;volatile
   552                           
   553                           ;init.c: 15: PORTB = 0b00000000;
   554  0004F6  0E00               	movlw	0
   555  0004F8  6E81               	movwf	3969,c	;volatile
   556                           
   557                           ;init.c: 16: PORTC = 0b00000000;
   558  0004FA  0E00               	movlw	0
   559  0004FC  6E82               	movwf	3970,c	;volatile
   560                           
   561                           ;init.c: 17: PORTD = 0b00000000;
   562  0004FE  0E00               	movlw	0
   563  000500  6E83               	movwf	3971,c	;volatile
   564                           
   565                           ;init.c: 18: PORTE = 0b00000000;
   566  000502  0E00               	movlw	0
   567  000504  6E84               	movwf	3972,c	;volatile
   568  000506  0012               	return		;funcret
   569  000508                     __end_of_InitPort:
   570                           	opt stack 0
   571                           tblptru	equ	0xFF8
   572                           tblptrh	equ	0xFF7
   573                           tblptrl	equ	0xFF6
   574                           tablat	equ	0xFF5
   575                           postinc0	equ	0xFEE
   576                           wreg	equ	0xFE8
   577                           
   578 ;; *************** function _InitMiscellaneous *****************
   579 ;; Defined at:
   580 ;;		line 37 in file "init.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;		None               void
   587 ;; Registers used:
   588 ;;		wreg, status,2
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   594 ;;      Params:         0       0       0       0
   595 ;;      Locals:         0       0       0       0
   596 ;;      Temps:          0       0       0       0
   597 ;;      Totals:         0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used:    1
   600 ;; Hardware stack levels required when called:    4
   601 ;; This function calls:
   602 ;;		Nothing
   603 ;; This function is called by:
   604 ;;		_Init
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           	psect	text5
   609  000546                     __ptext5:
   610                           	opt stack 0
   611  000546                     _InitMiscellaneous:
   612                           	opt stack 25
   613                           
   614                           ;init.c: 38: OSCCON = 0b01010011;
   615                           
   616                           ;incstack = 0
   617  000546  0E53               	movlw	83
   618  000548  6ED3               	movwf	4051,c	;volatile
   619  00054A  0012               	return		;funcret
   620  00054C                     __end_of_InitMiscellaneous:
   621                           	opt stack 0
   622                           tblptru	equ	0xFF8
   623                           tblptrh	equ	0xFF7
   624                           tblptrl	equ	0xFF6
   625                           tablat	equ	0xFF5
   626                           postinc0	equ	0xFEE
   627                           wreg	equ	0xFE8
   628                           
   629 ;; *************** function _InitMiscellaneos *****************
   630 ;; Defined at:
   631 ;;		line 74 in file "init.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  c               1   18[COMRAM] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;		None               void
   638 ;; Registers used:
   639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   645 ;;      Params:         0       0       0       0
   646 ;;      Locals:         1       0       0       0
   647 ;;      Temps:          0       0       0       0
   648 ;;      Totals:         1       0       0       0
   649 ;;Total ram usage:        1 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    4
   652 ;; This function calls:
   653 ;;		Nothing
   654 ;; This function is called by:
   655 ;;		_Init
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text6
   660  000442                     __ptext6:
   661                           	opt stack 0
   662  000442                     _InitMiscellaneos:
   663                           	opt stack 25
   664                           
   665                           ;init.c: 75: for(unsigned char c = 0; c < 10; c++) {
   666                           
   667                           ;incstack = 0
   668  000442  0E00               	movlw	0
   669  000444  6E13               	movwf	InitMiscellaneos@c,c
   670  000446                     l961:
   671  000446  0E09               	movlw	9
   672  000448  6413               	cpfsgt	InitMiscellaneos@c,c
   673  00044A  D001               	goto	l965
   674  00044C  0012               	return	
   675  00044E                     l965:
   676                           
   677                           ;init.c: 76: Marker[c] = 0;
   678  00044E  5013               	movf	InitMiscellaneos@c,w,c
   679  000450  0D01               	mullw	1
   680  000452  0E16               	movlw	low _Marker
   681  000454  24F3               	addwf	prodl,w,c
   682  000456  6ED9               	movwf	fsr2l,c
   683  000458  0E00               	movlw	high _Marker
   684  00045A  20F4               	addwfc	prodh,w,c
   685  00045C  6EDA               	movwf	fsr2h,c
   686  00045E  0E00               	movlw	0
   687  000460  6EDF               	movwf	indf2,c
   688  000462  2A13               	incf	InitMiscellaneos@c,f,c
   689  000464  D7F0               	goto	l961
   690  000466                     __end_of_InitMiscellaneos:
   691                           	opt stack 0
   692                           tblptru	equ	0xFF8
   693                           tblptrh	equ	0xFF7
   694                           tblptrl	equ	0xFF6
   695                           tablat	equ	0xFF5
   696                           prodh	equ	0xFF4
   697                           prodl	equ	0xFF3
   698                           postinc0	equ	0xFEE
   699                           wreg	equ	0xFE8
   700                           indf2	equ	0xFDF
   701                           fsr2h	equ	0xFDA
   702                           fsr2l	equ	0xFD9
   703                           
   704 ;; *************** function _InitInterrupt *****************
   705 ;; Defined at:
   706 ;;		line 67 in file "init.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;		None               void
   713 ;; Registers used:
   714 ;;		None
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   720 ;;      Params:         0       0       0       0
   721 ;;      Locals:         0       0       0       0
   722 ;;      Temps:          0       0       0       0
   723 ;;      Totals:         0       0       0       0
   724 ;;Total ram usage:        0 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    4
   727 ;; This function calls:
   728 ;;		Nothing
   729 ;; This function is called by:
   730 ;;		_Init
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text7
   735  00053C                     __ptext7:
   736                           	opt stack 0
   737  00053C                     _InitInterrupt:
   738                           	opt stack 25
   739                           
   740                           ;init.c: 68: INTCONbits.GIE = 1;
   741                           
   742                           ;incstack = 0
   743  00053C  8EF2               	bsf	intcon,7,c	;volatile
   744                           
   745                           ;init.c: 69: INTCONbits.PEIE = 1;
   746  00053E  8CF2               	bsf	intcon,6,c	;volatile
   747                           
   748                           ;init.c: 70: PIE1bits.RCIE = 1;
   749  000540  8A9D               	bsf	3997,5,c	;volatile
   750                           
   751                           ;init.c: 71: PIR1bits.RCIF= 0;
   752  000542  9A9E               	bcf	3998,5,c	;volatile
   753  000544  0012               	return		;funcret
   754  000546                     __end_of_InitInterrupt:
   755                           	opt stack 0
   756                           tblptru	equ	0xFF8
   757                           tblptrh	equ	0xFF7
   758                           tblptrl	equ	0xFF6
   759                           tablat	equ	0xFF5
   760                           prodh	equ	0xFF4
   761                           prodl	equ	0xFF3
   762                           intcon	equ	0xFF2
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           indf2	equ	0xFDF
   766                           fsr2h	equ	0xFDA
   767                           fsr2l	equ	0xFD9
   768                           
   769 ;; *************** function _InitAnsel *****************
   770 ;; Defined at:
   771 ;;		line 29 in file "init.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;		None               void
   778 ;; Registers used:
   779 ;;		wreg, status,2
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   785 ;;      Params:         0       0       0       0
   786 ;;      Locals:         0       0       0       0
   787 ;;      Temps:          0       0       0       0
   788 ;;      Totals:         0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    4
   792 ;; This function calls:
   793 ;;		Nothing
   794 ;; This function is called by:
   795 ;;		_Init
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text8
   800  000466                     __ptext8:
   801                           	opt stack 0
   802  000466                     _InitAnsel:
   803                           	opt stack 25
   804                           
   805                           ;init.c: 30: ANSELA = 0b00000000;
   806                           
   807                           ;incstack = 0
   808  000466  0E00               	movlw	0
   809  000468  010F               	movlb	15	; () banked
   810  00046A  6F38               	movwf	56,b	;volatile
   811                           
   812                           ;init.c: 31: ANSELB = 0b00000001;
   813  00046C  0E01               	movlw	1
   814  00046E  010F               	movlb	15	; () banked
   815  000470  6F39               	movwf	57,b	;volatile
   816                           
   817                           ;init.c: 32: ANSELC = 0b00000000;
   818  000472  0E00               	movlw	0
   819  000474  010F               	movlb	15	; () banked
   820  000476  6F3A               	movwf	58,b	;volatile
   821                           
   822                           ;init.c: 33: ANSELD = 0b00000000;
   823  000478  0E00               	movlw	0
   824  00047A  010F               	movlb	15	; () banked
   825  00047C  6F3B               	movwf	59,b	;volatile
   826                           
   827                           ;init.c: 34: ANSELE = 0b00000000;
   828  00047E  0E00               	movlw	0
   829  000480  010F               	movlb	15	; () banked
   830  000482  6F3C               	movwf	60,b	;volatile
   831                           
   832                           ; BSR set to: 15
   833  000484  0012               	return		;funcret
   834  000486                     __end_of_InitAnsel:
   835                           	opt stack 0
   836                           tblptru	equ	0xFF8
   837                           tblptrh	equ	0xFF7
   838                           tblptrl	equ	0xFF6
   839                           tablat	equ	0xFF5
   840                           prodh	equ	0xFF4
   841                           prodl	equ	0xFF3
   842                           intcon	equ	0xFF2
   843                           postinc0	equ	0xFEE
   844                           wreg	equ	0xFE8
   845                           indf2	equ	0xFDF
   846                           fsr2h	equ	0xFDA
   847                           fsr2l	equ	0xFD9
   848                           
   849 ;; *************** function _Check_Power *****************
   850 ;; Defined at:
   851 ;;		line 127 in file "ignition.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;		None               void
   858 ;; Registers used:
   859 ;;		None
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   865 ;;      Params:         0       0       0       0
   866 ;;      Locals:         0       0       0       0
   867 ;;      Temps:          0       0       0       0
   868 ;;      Totals:         0       0       0       0
   869 ;;Total ram usage:        0 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    4
   872 ;; This function calls:
   873 ;;		Nothing
   874 ;; This function is called by:
   875 ;;		_main
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text9
   880  00054C                     __ptext9:
   881                           	opt stack 0
   882  00054C                     _Check_Power:
   883                           	opt stack 26
   884                           
   885                           ; BSR set to: 15
   886                           ;incstack = 0
   887  00054C  0012               	return		;funcret
   888  00054E                     __end_of_Check_Power:
   889                           	opt stack 0
   890                           tblptru	equ	0xFF8
   891                           tblptrh	equ	0xFF7
   892                           tblptrl	equ	0xFF6
   893                           tablat	equ	0xFF5
   894                           prodh	equ	0xFF4
   895                           prodl	equ	0xFF3
   896                           intcon	equ	0xFF2
   897                           postinc0	equ	0xFEE
   898                           wreg	equ	0xFE8
   899                           indf2	equ	0xFDF
   900                           fsr2h	equ	0xFDA
   901                           fsr2l	equ	0xFD9
   902                           
   903 ;; *************** function _Check_Ignition *****************
   904 ;; Defined at:
   905 ;;		line 113 in file "ignition.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  c               1   20[COMRAM] unsigned char 
   910 ;; Return value:  Size  Location     Type
   911 ;;		None               void
   912 ;; Registers used:
   913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   919 ;;      Params:         0       0       0       0
   920 ;;      Locals:         1       0       0       0
   921 ;;      Temps:          1       0       0       0
   922 ;;      Totals:         2       0       0       0
   923 ;;Total ram usage:        2 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; Hardware stack levels required when called:    5
   926 ;; This function calls:
   927 ;;		_Ignite_Port
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text10
   934  000380                     __ptext10:
   935                           	opt stack 0
   936  000380                     _Check_Ignition:
   937                           	opt stack 25
   938                           
   939                           ;ignition.c: 114: for(unsigned char c = 0; c < 10; c++) {
   940                           
   941                           ;incstack = 0
   942  000380  0E00               	movlw	0
   943  000382  6E15               	movwf	Check_Ignition@c,c
   944  000384                     l1033:
   945  000384  0E09               	movlw	9
   946  000386  6415               	cpfsgt	Check_Ignition@c,c
   947  000388  D001               	goto	l1037
   948  00038A  0012               	return	
   949  00038C                     l1037:
   950                           
   951                           ;ignition.c: 115: if(Marker[c] == 1) {
   952  00038C  5015               	movf	Check_Ignition@c,w,c
   953  00038E  0D01               	mullw	1
   954  000390  0E16               	movlw	low _Marker
   955  000392  24F3               	addwf	prodl,w,c
   956  000394  6ED9               	movwf	fsr2l,c
   957  000396  0E00               	movlw	high _Marker
   958  000398  20F4               	addwfc	prodh,w,c
   959  00039A  6EDA               	movwf	fsr2h,c
   960  00039C  04DE               	decf	postinc2,w,c
   961  00039E  A4D8               	btfss	status,2,c
   962  0003A0  D014               	goto	l1045
   963                           
   964                           ;ignition.c: 116: Ignite_Port(c);
   965  0003A2  5015               	movf	Check_Ignition@c,w,c
   966  0003A4  EC82  F001         	call	_Ignite_Port
   967                           
   968                           ;ignition.c: 117: _delay((unsigned long)((15)*(4000000/4000.0)));
   969  0003A8  0E14               	movlw	20
   970  0003AA  6E14               	movwf	??_Check_Ignition& (0+255),c
   971  0003AC  0E7A               	movlw	122
   972  0003AE                     u757:
   973  0003AE  2EE8               	decfsz	wreg,f,c
   974  0003B0  D7FE               	goto	u757
   975  0003B2  2E14               	decfsz	??_Check_Ignition& (0+255),f,c
   976  0003B4  D7FC               	goto	u757
   977                           
   978                           ;ignition.c: 118: Marker[c] = 0;
   979  0003B6  5015               	movf	Check_Ignition@c,w,c
   980  0003B8  0D01               	mullw	1
   981  0003BA  0E16               	movlw	low _Marker
   982  0003BC  24F3               	addwf	prodl,w,c
   983  0003BE  6ED9               	movwf	fsr2l,c
   984  0003C0  0E00               	movlw	high _Marker
   985  0003C2  20F4               	addwfc	prodh,w,c
   986  0003C4  6EDA               	movwf	fsr2h,c
   987  0003C6  0E00               	movlw	0
   988  0003C8  6EDF               	movwf	indf2,c
   989  0003CA                     l1045:
   990  0003CA  2A15               	incf	Check_Ignition@c,f,c
   991  0003CC  D7DB               	goto	l1033
   992  0003CE                     __end_of_Check_Ignition:
   993                           	opt stack 0
   994                           tblptru	equ	0xFF8
   995                           tblptrh	equ	0xFF7
   996                           tblptrl	equ	0xFF6
   997                           tablat	equ	0xFF5
   998                           prodh	equ	0xFF4
   999                           prodl	equ	0xFF3
  1000                           intcon	equ	0xFF2
  1001                           postinc0	equ	0xFEE
  1002                           wreg	equ	0xFE8
  1003                           indf2	equ	0xFDF
  1004                           postinc2	equ	0xFDE
  1005                           fsr2h	equ	0xFDA
  1006                           fsr2l	equ	0xFD9
  1007                           status	equ	0xFD8
  1008                           
  1009 ;; *************** function _Ignite_Port *****************
  1010 ;; Defined at:
  1011 ;;		line 78 in file "ignition.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  ignite_numbe    1    wreg     unsigned char 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  ignite_numbe    1   18[COMRAM] unsigned char 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;		None               void
  1018 ;; Registers used:
  1019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1025 ;;      Params:         0       0       0       0
  1026 ;;      Locals:         1       0       0       0
  1027 ;;      Temps:          0       0       0       0
  1028 ;;      Totals:         1       0       0       0
  1029 ;;Total ram usage:        1 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    4
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		_Check_Ignition
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text11
  1040  000304                     __ptext11:
  1041                           	opt stack 0
  1042  000304                     _Ignite_Port:
  1043                           	opt stack 25
  1044                           
  1045                           ;incstack = 0
  1046                           ;Ignite_Port@ignite_number stored from wreg
  1047  000304  6E13               	movwf	Ignite_Port@ignite_number,c
  1048                           
  1049                           ;ignition.c: 79: switch(Marker[ignite_number]) {
  1050  000306  D014               	goto	l1021
  1051  000308                     l266:
  1052                           
  1053                           ;ignition.c: 81: PORTCbits.RC5 = 1;
  1054  000308  8A82               	bsf	3970,5,c	;volatile
  1055                           
  1056                           ;ignition.c: 82: break;
  1057  00030A  0012               	return	
  1058  00030C                     l268:
  1059                           
  1060                           ;ignition.c: 84: PORTDbits.RD3 = 1;
  1061  00030C  8683               	bsf	3971,3,c	;volatile
  1062                           
  1063                           ;ignition.c: 85: break;
  1064  00030E  0012               	return	
  1065  000310                     l269:
  1066                           
  1067                           ;ignition.c: 87: PORTDbits.RD1 = 1;
  1068  000310  8283               	bsf	3971,1,c	;volatile
  1069                           
  1070                           ;ignition.c: 88: break;
  1071  000312  0012               	return	
  1072  000314                     l270:
  1073                           
  1074                           ;ignition.c: 90: PORTCbits.RC3 = 1;
  1075  000314  8682               	bsf	3970,3,c	;volatile
  1076                           
  1077                           ;ignition.c: 91: break;
  1078  000316  0012               	return	
  1079  000318                     l271:
  1080                           
  1081                           ;ignition.c: 93: PORTCbits.RC1 = 1;
  1082  000318  8282               	bsf	3970,1,c	;volatile
  1083                           
  1084                           ;ignition.c: 94: break;
  1085  00031A  0012               	return	
  1086  00031C                     l272:
  1087                           
  1088                           ;ignition.c: 96: PORTEbits.RE1 = 1;
  1089  00031C  8284               	bsf	3972,1,c	;volatile
  1090                           
  1091                           ;ignition.c: 97: break;
  1092  00031E  0012               	return	
  1093  000320                     l273:
  1094                           
  1095                           ;ignition.c: 99: PORTAbits.RA5 = 1;
  1096  000320  8A80               	bsf	3968,5,c	;volatile
  1097                           
  1098                           ;ignition.c: 100: break;
  1099  000322  0012               	return	
  1100  000324                     l274:
  1101                           
  1102                           ;ignition.c: 102: PORTBbits.RB5 = 1;
  1103  000324  8A81               	bsf	3969,5,c	;volatile
  1104                           
  1105                           ;ignition.c: 103: break;
  1106  000326  0012               	return	
  1107  000328                     l275:
  1108                           
  1109                           ;ignition.c: 105: PORTAbits.RA3 = 1;
  1110  000328  8680               	bsf	3968,3,c	;volatile
  1111                           
  1112                           ;ignition.c: 106: break;
  1113  00032A  0012               	return	
  1114  00032C                     l276:
  1115                           
  1116                           ;ignition.c: 108: PORTAbits.RA1 = 1;
  1117  00032C  8280               	bsf	3968,1,c	;volatile
  1118                           
  1119                           ;ignition.c: 110: }
  1120                           
  1121                           ;ignition.c: 109: break;
  1122  00032E  0012               	return	
  1123  000330                     l1021:
  1124  000330  5013               	movf	Ignite_Port@ignite_number,w,c
  1125  000332  0D01               	mullw	1
  1126  000334  0E16               	movlw	low _Marker
  1127  000336  24F3               	addwf	prodl,w,c
  1128  000338  6ED9               	movwf	fsr2l,c
  1129  00033A  0E00               	movlw	high _Marker
  1130  00033C  20F4               	addwfc	prodh,w,c
  1131  00033E  6EDA               	movwf	fsr2h,c
  1132  000340  50DF               	movf	indf2,w,c
  1133                           
  1134                           ; Switch size 1, requested type "space"
  1135                           ; Number of cases is 10, Range of values is 0 to 9
  1136                           ; switch strategies available:
  1137                           ; Name         Instructions Cycles
  1138                           ; simple_byte           31    16 (average)
  1139                           ;	Chosen strategy is simple_byte
  1140  000342  0A00               	xorlw	0	; case 0
  1141  000344  B4D8               	btfsc	status,2,c
  1142  000346  D7E0               	goto	l266
  1143  000348  0A01               	xorlw	1	; case 1
  1144  00034A  B4D8               	btfsc	status,2,c
  1145  00034C  D7DF               	goto	l268
  1146  00034E  0A03               	xorlw	3	; case 2
  1147  000350  B4D8               	btfsc	status,2,c
  1148  000352  D7DE               	goto	l269
  1149  000354  0A01               	xorlw	1	; case 3
  1150  000356  B4D8               	btfsc	status,2,c
  1151  000358  D7DD               	goto	l270
  1152  00035A  0A07               	xorlw	7	; case 4
  1153  00035C  B4D8               	btfsc	status,2,c
  1154  00035E  D7DC               	goto	l271
  1155  000360  0A01               	xorlw	1	; case 5
  1156  000362  B4D8               	btfsc	status,2,c
  1157  000364  D7DB               	goto	l272
  1158  000366  0A03               	xorlw	3	; case 6
  1159  000368  B4D8               	btfsc	status,2,c
  1160  00036A  D7DA               	goto	l273
  1161  00036C  0A01               	xorlw	1	; case 7
  1162  00036E  B4D8               	btfsc	status,2,c
  1163  000370  D7D9               	goto	l274
  1164  000372  0A0F               	xorlw	15	; case 8
  1165  000374  B4D8               	btfsc	status,2,c
  1166  000376  D7D8               	goto	l275
  1167  000378  0A01               	xorlw	1	; case 9
  1168  00037A  A4D8               	btfss	status,2,c
  1169  00037C  0012               	return	
  1170  00037E  D7D6               	goto	l276
  1171  000380                     __end_of_Ignite_Port:
  1172                           	opt stack 0
  1173                           tblptru	equ	0xFF8
  1174                           tblptrh	equ	0xFF7
  1175                           tblptrl	equ	0xFF6
  1176                           tablat	equ	0xFF5
  1177                           prodh	equ	0xFF4
  1178                           prodl	equ	0xFF3
  1179                           intcon	equ	0xFF2
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           indf2	equ	0xFDF
  1183                           postinc2	equ	0xFDE
  1184                           fsr2h	equ	0xFDA
  1185                           fsr2l	equ	0xFD9
  1186                           status	equ	0xFD8
  1187                           
  1188 ;; *************** function _Isr *****************
  1189 ;; Defined at:
  1190 ;;		line 3 in file "interrupt.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;		None               void
  1197 ;; Registers used:
  1198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1204 ;;      Params:         0       0       0       0
  1205 ;;      Locals:         0       0       0       0
  1206 ;;      Temps:         14       0       0       0
  1207 ;;      Totals:        14       0       0       0
  1208 ;;Total ram usage:       14 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; Hardware stack levels required when called:    3
  1211 ;; This function calls:
  1212 ;;		_Evaluate_Reception
  1213 ;;		_Receive
  1214 ;; This function is called by:
  1215 ;;		Interrupt level 2
  1216 ;; This function uses a non-reentrant model
  1217 ;;
  1218                           
  1219                           	psect	intcode
  1220  000008                     __pintcode:
  1221                           	opt stack 0
  1222  000008                     _Isr:
  1223                           	opt stack 25
  1224                           
  1225                           ;incstack = 0
  1226  000008  8227               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1227  00000A  CFFA F005          	movff	pclath,??_Isr
  1228  00000E  CFFB F006          	movff	pclatu,??_Isr+1
  1229  000012  CFE9 F007          	movff	fsr0l,??_Isr+2
  1230  000016  CFEA F008          	movff	fsr0h,??_Isr+3
  1231  00001A  CFE1 F009          	movff	fsr1l,??_Isr+4
  1232  00001E  CFE2 F00A          	movff	fsr1h,??_Isr+5
  1233  000022  CFD9 F00B          	movff	fsr2l,??_Isr+6
  1234  000026  CFDA F00C          	movff	fsr2h,??_Isr+7
  1235  00002A  CFF3 F00D          	movff	prodl,??_Isr+8
  1236  00002E  CFF4 F00E          	movff	prodh,??_Isr+9
  1237  000032  CFF6 F00F          	movff	tblptrl,??_Isr+10
  1238  000036  CFF7 F010          	movff	tblptrh,??_Isr+11
  1239  00003A  CFF8 F011          	movff	tblptru,??_Isr+12
  1240  00003E  CFF5 F012          	movff	tablat,??_Isr+13
  1241                           
  1242                           ;interrupt.c: 5: if(PIR1bits.RCIF == 1) {
  1243  000042  AA9E               	btfss	3998,5,c	;volatile
  1244  000044  D02E               	goto	i2l325
  1245                           
  1246                           ;interrupt.c: 6: PIR1bits.RCIF = 0;
  1247  000046  9A9E               	bcf	3998,5,c	;volatile
  1248                           
  1249                           ;interrupt.c: 7: if(RCSTA1bits.RX9D == 1) {
  1250  000048  A0AB               	btfss	4011,0,c	;volatile
  1251  00004A  D015               	goto	i2l319
  1252                           
  1253                           ;interrupt.c: 8: receive_counter = 0;
  1254  00004C  0E00               	movlw	0
  1255  00004E  6E24               	movwf	_receive_counter,c
  1256                           
  1257                           ;interrupt.c: 10: received[receive_counter] =
  1258                           ;interrupt.c: 11: Receive();
  1259  000050  5024               	movf	_receive_counter,w,c
  1260  000052  0D01               	mullw	1
  1261  000054  0E20               	movlw	low _received
  1262  000056  24F3               	addwf	prodl,w,c
  1263  000058  6ED9               	movwf	fsr2l,c
  1264  00005A  0E00               	movlw	high _received
  1265  00005C  20F4               	addwfc	prodh,w,c
  1266  00005E  6EDA               	movwf	fsr2h,c
  1267  000060  EC97  F002         	call	_Receive	;wreg free
  1268  000064  6EDF               	movwf	indf2,c
  1269                           
  1270                           ;interrupt.c: 12: receive_counter++;
  1271  000066  2A24               	incf	_receive_counter,f,c
  1272                           
  1273                           ;interrupt.c: 14: if(received[0] == 0x01) {
  1274  000068  0420               	decf	_received,w,c
  1275  00006A  A4D8               	btfss	status,2,c
  1276  00006C  D002               	goto	i2l320
  1277                           
  1278                           ;interrupt.c: 15: slave_addressed = 1;
  1279  00006E  8225               	bsf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1280                           
  1281                           ;interrupt.c: 16: } else {
  1282  000070  D018               	goto	i2l325
  1283  000072                     i2l320:
  1284                           
  1285                           ;interrupt.c: 17: slave_addressed = 0;
  1286  000072  9225               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1287                           
  1288                           ;interrupt.c: 18: }
  1289                           ;interrupt.c: 19: } else if(slave_addressed == 1) {
  1290  000074  D016               	goto	i2l325
  1291  000076                     i2l319:
  1292  000076  A225               	btfss	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1293  000078  D014               	goto	i2l325
  1294                           
  1295                           ;interrupt.c: 20: received[receive_counter] =
  1296                           ;interrupt.c: 21: Receive();
  1297  00007A  5024               	movf	_receive_counter,w,c
  1298  00007C  0D01               	mullw	1
  1299  00007E  0E20               	movlw	low _received
  1300  000080  24F3               	addwf	prodl,w,c
  1301  000082  6ED9               	movwf	fsr2l,c
  1302  000084  0E00               	movlw	high _received
  1303  000086  20F4               	addwfc	prodh,w,c
  1304  000088  6EDA               	movwf	fsr2h,c
  1305  00008A  EC97  F002         	call	_Receive	;wreg free
  1306  00008E  6EDF               	movwf	indf2,c
  1307                           
  1308                           ;interrupt.c: 22: receive_counter++;
  1309  000090  2A24               	incf	_receive_counter,f,c
  1310                           
  1311                           ;interrupt.c: 24: if(receive_counter > 3) {
  1312  000092  0E03               	movlw	3
  1313  000094  6424               	cpfsgt	_receive_counter,c
  1314  000096  D005               	goto	i2l325
  1315                           
  1316                           ;interrupt.c: 25: receive_counter = 0;
  1317  000098  0E00               	movlw	0
  1318  00009A  6E24               	movwf	_receive_counter,c
  1319                           
  1320                           ;interrupt.c: 26: slave_addressed = 0;
  1321  00009C  9225               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1322                           
  1323                           ;interrupt.c: 28: Evaluate_Reception();
  1324  00009E  EC60  F002         	call	_Evaluate_Reception	;wreg free
  1325  0000A2                     i2l325:
  1326  0000A2  C012  FFF5         	movff	??_Isr+13,tablat
  1327  0000A6  C011  FFF8         	movff	??_Isr+12,tblptru
  1328  0000AA  C010  FFF7         	movff	??_Isr+11,tblptrh
  1329  0000AE  C00F  FFF6         	movff	??_Isr+10,tblptrl
  1330  0000B2  C00E  FFF4         	movff	??_Isr+9,prodh
  1331  0000B6  C00D  FFF3         	movff	??_Isr+8,prodl
  1332  0000BA  C00C  FFDA         	movff	??_Isr+7,fsr2h
  1333  0000BE  C00B  FFD9         	movff	??_Isr+6,fsr2l
  1334  0000C2  C00A  FFE2         	movff	??_Isr+5,fsr1h
  1335  0000C6  C009  FFE1         	movff	??_Isr+4,fsr1l
  1336  0000CA  C008  FFEA         	movff	??_Isr+3,fsr0h
  1337  0000CE  C007  FFE9         	movff	??_Isr+2,fsr0l
  1338  0000D2  C006  FFFB         	movff	??_Isr+1,pclatu
  1339  0000D6  C005  FFFA         	movff	??_Isr,pclath
  1340  0000DA  9227               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1341  0000DC  0011               	retfie		f
  1342  0000DE                     __end_of_Isr:
  1343                           	opt stack 0
  1344                           pclatu	equ	0xFFB
  1345                           pclath	equ	0xFFA
  1346                           tblptru	equ	0xFF8
  1347                           tblptrh	equ	0xFF7
  1348                           tblptrl	equ	0xFF6
  1349                           tablat	equ	0xFF5
  1350                           prodh	equ	0xFF4
  1351                           prodl	equ	0xFF3
  1352                           intcon	equ	0xFF2
  1353                           postinc0	equ	0xFEE
  1354                           fsr0h	equ	0xFEA
  1355                           fsr0l	equ	0xFE9
  1356                           wreg	equ	0xFE8
  1357                           fsr1h	equ	0xFE2
  1358                           fsr1l	equ	0xFE1
  1359                           indf2	equ	0xFDF
  1360                           postinc2	equ	0xFDE
  1361                           fsr2h	equ	0xFDA
  1362                           fsr2l	equ	0xFD9
  1363                           status	equ	0xFD8
  1364                           
  1365 ;; *************** function _Receive *****************
  1366 ;; Defined at:
  1367 ;;		line 44 in file "communication.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;		None
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      unsigned char 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1381 ;;      Params:         0       0       0       0
  1382 ;;      Locals:         0       0       0       0
  1383 ;;      Temps:          0       0       0       0
  1384 ;;      Totals:         0       0       0       0
  1385 ;;Total ram usage:        0 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_Isr
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text13
  1395  00052E                     __ptext13:
  1396                           	opt stack 0
  1397  00052E                     _Receive:
  1398                           	opt stack 27
  1399                           
  1400                           ;communication.c: 45: if(RCSTA1bits.OERR == 1) {
  1401                           
  1402                           ;incstack = 0
  1403  00052E  A2AB               	btfss	4011,1,c	;volatile
  1404  000530  D003               	goto	i2l1053
  1405                           
  1406                           ;communication.c: 46: RCSTA1bits.CREN = 0;
  1407  000532  98AB               	bcf	4011,4,c	;volatile
  1408                           
  1409                           ;communication.c: 47: RCSTA1bits.CREN = 1;
  1410  000534  88AB               	bsf	4011,4,c	;volatile
  1411                           
  1412                           ;communication.c: 48: overrun = 1;
  1413  000536  8025               	bsf	_overrun/(0+8),_overrun& (0+7),c
  1414  000538                     i2l1053:
  1415                           
  1416                           ;communication.c: 49: }
  1417                           ;communication.c: 50: return (RCREG1);
  1418  000538  50AE               	movf	4014,w,c	;volatile
  1419  00053A  0012               	return	
  1420  00053C                     __end_of_Receive:
  1421                           	opt stack 0
  1422                           pclatu	equ	0xFFB
  1423                           pclath	equ	0xFFA
  1424                           tblptru	equ	0xFF8
  1425                           tblptrh	equ	0xFF7
  1426                           tblptrl	equ	0xFF6
  1427                           tablat	equ	0xFF5
  1428                           prodh	equ	0xFF4
  1429                           prodl	equ	0xFF3
  1430                           intcon	equ	0xFF2
  1431                           postinc0	equ	0xFEE
  1432                           fsr0h	equ	0xFEA
  1433                           fsr0l	equ	0xFE9
  1434                           wreg	equ	0xFE8
  1435                           fsr1h	equ	0xFE2
  1436                           fsr1l	equ	0xFE1
  1437                           indf2	equ	0xFDF
  1438                           postinc2	equ	0xFDE
  1439                           fsr2h	equ	0xFDA
  1440                           fsr2l	equ	0xFD9
  1441                           status	equ	0xFD8
  1442                           
  1443 ;; *************** function _Evaluate_Reception *****************
  1444 ;; Defined at:
  1445 ;;		line 131 in file "ignition.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;		None
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;		None
  1450 ;; Return value:  Size  Location     Type
  1451 ;;		None               void
  1452 ;; Registers used:
  1453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1459 ;;      Params:         0       0       0       0
  1460 ;;      Locals:         0       0       0       0
  1461 ;;      Temps:          0       0       0       0
  1462 ;;      Totals:         0       0       0       0
  1463 ;;Total ram usage:        0 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    2
  1466 ;; This function calls:
  1467 ;;		_Mark_Ignite
  1468 ;;		_Test_Port
  1469 ;; This function is called by:
  1470 ;;		_Isr
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           	psect	text14
  1475  0004C0                     __ptext14:
  1476                           	opt stack 0
  1477  0004C0                     _Evaluate_Reception:
  1478                           	opt stack 25
  1479                           
  1480                           ;ignition.c: 137: if(received[2] == 'T') {
  1481                           
  1482                           ;incstack = 0
  1483  0004C0  0E54               	movlw	84
  1484  0004C2  1822               	xorwf	_received+2,w,c
  1485  0004C4  A4D8               	btfss	status,2,c
  1486  0004C6  D003               	goto	i2l1157
  1487                           
  1488                           ;ignition.c: 138: Test_Port();
  1489  0004C8  EC71  F000         	call	_Test_Port	;wreg free
  1490                           
  1491                           ;ignition.c: 139: }else if(received[2] == 'I') {
  1492  0004CC  0012               	return	
  1493  0004CE                     i2l1157:
  1494  0004CE  0E49               	movlw	73
  1495  0004D0  1822               	xorwf	_received+2,w,c
  1496  0004D2  A4D8               	btfss	status,2,c
  1497  0004D4  0012               	return	
  1498                           
  1499                           ;ignition.c: 140: Mark_Ignite();
  1500  0004D6  EC84  F002         	call	_Mark_Ignite	;wreg free
  1501  0004DA  0012               	return	
  1502  0004DC                     __end_of_Evaluate_Reception:
  1503                           	opt stack 0
  1504                           pclatu	equ	0xFFB
  1505                           pclath	equ	0xFFA
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           prodh	equ	0xFF4
  1511                           prodl	equ	0xFF3
  1512                           intcon	equ	0xFF2
  1513                           postinc0	equ	0xFEE
  1514                           fsr0h	equ	0xFEA
  1515                           fsr0l	equ	0xFE9
  1516                           wreg	equ	0xFE8
  1517                           fsr1h	equ	0xFE2
  1518                           fsr1l	equ	0xFE1
  1519                           indf2	equ	0xFDF
  1520                           postinc2	equ	0xFDE
  1521                           fsr2h	equ	0xFDA
  1522                           fsr2l	equ	0xFD9
  1523                           status	equ	0xFD8
  1524                           
  1525 ;; *************** function _Test_Port *****************
  1526 ;; Defined at:
  1527 ;;		line 3 in file "ignition.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;		None               void
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1541 ;;      Params:         0       0       0       0
  1542 ;;      Locals:         0       0       0       0
  1543 ;;      Temps:          0       0       0       0
  1544 ;;      Totals:         0       0       0       0
  1545 ;;Total ram usage:        0 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    1
  1548 ;; This function calls:
  1549 ;;		_Transmit
  1550 ;; This function is called by:
  1551 ;;		_Evaluate_Reception
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text15
  1556  0000E2                     __ptext15:
  1557                           	opt stack 0
  1558  0000E2                     _Test_Port:
  1559                           	opt stack 25
  1560                           
  1561                           ;ignition.c: 4: switch(received[3]) {
  1562                           
  1563                           ;incstack = 0
  1564  0000E2  D0F0               	goto	i2l1151
  1565  0000E4                     i2l221:
  1566                           
  1567                           ;ignition.c: 6: if(PORTCbits.RC4 == 1) {
  1568  0000E4  A882               	btfss	3970,4,c	;volatile
  1569  0000E6  D00A               	goto	i2l222
  1570                           
  1571                           ;ignition.c: 7: Transmit(0xAA, 'T', 0, '1');
  1572  0000E8  0E54               	movlw	84
  1573  0000EA  6E01               	movwf	Transmit@operation,c
  1574  0000EC  0E00               	movlw	0
  1575  0000EE  6E02               	movwf	Transmit@port,c
  1576  0000F0  0E31               	movlw	49
  1577  0000F2  6E03               	movwf	Transmit@con_status,c
  1578  0000F4  0EAA               	movlw	170
  1579  0000F6  ECE7  F001         	call	_Transmit
  1580                           
  1581                           ;ignition.c: 8: }else if(PORTCbits.RC4 == 0) {
  1582  0000FA  0012               	return	
  1583  0000FC                     i2l222:
  1584  0000FC  B882               	btfsc	3970,4,c	;volatile
  1585  0000FE  0012               	return	
  1586                           
  1587                           ;ignition.c: 9: Transmit(0xAA, 'T', 0, '0');
  1588  000100  0E54               	movlw	84
  1589  000102  6E01               	movwf	Transmit@operation,c
  1590  000104  0E00               	movlw	0
  1591  000106  6E02               	movwf	Transmit@port,c
  1592  000108  0E30               	movlw	48
  1593  00010A  6E03               	movwf	Transmit@con_status,c
  1594  00010C  0EAA               	movlw	170
  1595  00010E  ECE7  F001         	call	_Transmit
  1596                           
  1597                           ;ignition.c: 10: }
  1598                           ;ignition.c: 11: break;
  1599  000112  0012               	return	
  1600  000114                     i2l226:
  1601                           
  1602                           ;ignition.c: 13: if(PORTDbits.RD2 == 1) {
  1603  000114  A483               	btfss	3971,2,c	;volatile
  1604  000116  D00A               	goto	i2l227
  1605                           
  1606                           ;ignition.c: 14: Transmit(0xAA, 'T', 1, '1');
  1607  000118  0E54               	movlw	84
  1608  00011A  6E01               	movwf	Transmit@operation,c
  1609  00011C  0E01               	movlw	1
  1610  00011E  6E02               	movwf	Transmit@port,c
  1611  000120  0E31               	movlw	49
  1612  000122  6E03               	movwf	Transmit@con_status,c
  1613  000124  0EAA               	movlw	170
  1614  000126  ECE7  F001         	call	_Transmit
  1615                           
  1616                           ;ignition.c: 15: }else if(PORTCbits.RC4 == 0) {
  1617  00012A  0012               	return	
  1618  00012C                     i2l227:
  1619  00012C  B882               	btfsc	3970,4,c	;volatile
  1620  00012E  0012               	return	
  1621                           
  1622                           ;ignition.c: 16: Transmit(0xAA, 'T', 1, '0');
  1623  000130  0E54               	movlw	84
  1624  000132  6E01               	movwf	Transmit@operation,c
  1625  000134  0E01               	movlw	1
  1626  000136  6E02               	movwf	Transmit@port,c
  1627  000138  0E30               	movlw	48
  1628  00013A  6E03               	movwf	Transmit@con_status,c
  1629  00013C  0EAA               	movlw	170
  1630  00013E  ECE7  F001         	call	_Transmit
  1631                           
  1632                           ;ignition.c: 17: }
  1633                           ;ignition.c: 18: break;
  1634  000142  0012               	return	
  1635  000144                     i2l230:
  1636                           
  1637                           ;ignition.c: 20: if(PORTDbits.RD0 == 1) {
  1638  000144  A083               	btfss	3971,0,c	;volatile
  1639  000146  D00A               	goto	i2l231
  1640                           
  1641                           ;ignition.c: 21: Transmit(0xAA, 'T', 2, '1');
  1642  000148  0E54               	movlw	84
  1643  00014A  6E01               	movwf	Transmit@operation,c
  1644  00014C  0E02               	movlw	2
  1645  00014E  6E02               	movwf	Transmit@port,c
  1646  000150  0E31               	movlw	49
  1647  000152  6E03               	movwf	Transmit@con_status,c
  1648  000154  0EAA               	movlw	170
  1649  000156  ECE7  F001         	call	_Transmit
  1650                           
  1651                           ;ignition.c: 22: }else if(PORTCbits.RC4 == 0) {
  1652  00015A  0012               	return	
  1653  00015C                     i2l231:
  1654  00015C  B882               	btfsc	3970,4,c	;volatile
  1655  00015E  0012               	return	
  1656                           
  1657                           ;ignition.c: 23: Transmit(0xAA, 'T', 2, '0');
  1658  000160  0E54               	movlw	84
  1659  000162  6E01               	movwf	Transmit@operation,c
  1660  000164  0E02               	movlw	2
  1661  000166  6E02               	movwf	Transmit@port,c
  1662  000168  0E30               	movlw	48
  1663  00016A  6E03               	movwf	Transmit@con_status,c
  1664  00016C  0EAA               	movlw	170
  1665  00016E  ECE7  F001         	call	_Transmit
  1666                           
  1667                           ;ignition.c: 24: }
  1668                           ;ignition.c: 25: break;
  1669  000172  0012               	return	
  1670  000174                     i2l234:
  1671                           
  1672                           ;ignition.c: 27: if(PORTCbits.RC2 == 1) {
  1673  000174  A482               	btfss	3970,2,c	;volatile
  1674  000176  D00A               	goto	i2l235
  1675                           
  1676                           ;ignition.c: 28: Transmit(0xAA, 'T', 3, '1');
  1677  000178  0E54               	movlw	84
  1678  00017A  6E01               	movwf	Transmit@operation,c
  1679  00017C  0E03               	movlw	3
  1680  00017E  6E02               	movwf	Transmit@port,c
  1681  000180  0E31               	movlw	49
  1682  000182  6E03               	movwf	Transmit@con_status,c
  1683  000184  0EAA               	movlw	170
  1684  000186  ECE7  F001         	call	_Transmit
  1685                           
  1686                           ;ignition.c: 29: }else if(PORTCbits.RC4 == 0) {
  1687  00018A  0012               	return	
  1688  00018C                     i2l235:
  1689  00018C  B882               	btfsc	3970,4,c	;volatile
  1690  00018E  0012               	return	
  1691                           
  1692                           ;ignition.c: 30: Transmit(0xAA, 'T', 3, '0');
  1693  000190  0E54               	movlw	84
  1694  000192  6E01               	movwf	Transmit@operation,c
  1695  000194  0E03               	movlw	3
  1696  000196  6E02               	movwf	Transmit@port,c
  1697  000198  0E30               	movlw	48
  1698  00019A  6E03               	movwf	Transmit@con_status,c
  1699  00019C  0EAA               	movlw	170
  1700  00019E  ECE7  F001         	call	_Transmit
  1701                           
  1702                           ;ignition.c: 31: }
  1703                           ;ignition.c: 32: break;
  1704  0001A2  0012               	return	
  1705  0001A4                     i2l238:
  1706                           
  1707                           ;ignition.c: 34: if(PORTEbits.RE2 == 1) {
  1708  0001A4  A484               	btfss	3972,2,c	;volatile
  1709  0001A6  D00A               	goto	i2l239
  1710                           
  1711                           ;ignition.c: 35: Transmit(0xAA, 'T', 4, '1');
  1712  0001A8  0E54               	movlw	84
  1713  0001AA  6E01               	movwf	Transmit@operation,c
  1714  0001AC  0E04               	movlw	4
  1715  0001AE  6E02               	movwf	Transmit@port,c
  1716  0001B0  0E31               	movlw	49
  1717  0001B2  6E03               	movwf	Transmit@con_status,c
  1718  0001B4  0EAA               	movlw	170
  1719  0001B6  ECE7  F001         	call	_Transmit
  1720                           
  1721                           ;ignition.c: 36: }else if(PORTCbits.RC4 == 0) {
  1722  0001BA  0012               	return	
  1723  0001BC                     i2l239:
  1724  0001BC  B882               	btfsc	3970,4,c	;volatile
  1725  0001BE  0012               	return	
  1726                           
  1727                           ;ignition.c: 37: Transmit(0xAA, 'T', 4, '0');
  1728  0001C0  0E54               	movlw	84
  1729  0001C2  6E01               	movwf	Transmit@operation,c
  1730  0001C4  0E04               	movlw	4
  1731  0001C6  6E02               	movwf	Transmit@port,c
  1732  0001C8  0E30               	movlw	48
  1733  0001CA  6E03               	movwf	Transmit@con_status,c
  1734  0001CC  0EAA               	movlw	170
  1735  0001CE  ECE7  F001         	call	_Transmit
  1736                           
  1737                           ;ignition.c: 38: }
  1738                           ;ignition.c: 39: break;
  1739  0001D2  0012               	return	
  1740  0001D4                     i2l242:
  1741                           
  1742                           ;ignition.c: 41: if(PORTEbits.RE0 == 1) {
  1743  0001D4  A084               	btfss	3972,0,c	;volatile
  1744  0001D6  D00A               	goto	i2l243
  1745                           
  1746                           ;ignition.c: 42: Transmit(0xAA, 'T', 5, '1');
  1747  0001D8  0E54               	movlw	84
  1748  0001DA  6E01               	movwf	Transmit@operation,c
  1749  0001DC  0E05               	movlw	5
  1750  0001DE  6E02               	movwf	Transmit@port,c
  1751  0001E0  0E31               	movlw	49
  1752  0001E2  6E03               	movwf	Transmit@con_status,c
  1753  0001E4  0EAA               	movlw	170
  1754  0001E6  ECE7  F001         	call	_Transmit
  1755                           
  1756                           ;ignition.c: 43: }else if(PORTCbits.RC4 == 0) {
  1757  0001EA  0012               	return	
  1758  0001EC                     i2l243:
  1759  0001EC  B882               	btfsc	3970,4,c	;volatile
  1760  0001EE  0012               	return	
  1761                           
  1762                           ;ignition.c: 44: Transmit(0xAA, 'T', 5, '0');
  1763  0001F0  0E54               	movlw	84
  1764  0001F2  6E01               	movwf	Transmit@operation,c
  1765  0001F4  0E05               	movlw	5
  1766  0001F6  6E02               	movwf	Transmit@port,c
  1767  0001F8  0E30               	movlw	48
  1768  0001FA  6E03               	movwf	Transmit@con_status,c
  1769  0001FC  0EAA               	movlw	170
  1770  0001FE  ECE7  F001         	call	_Transmit
  1771                           
  1772                           ;ignition.c: 45: }
  1773                           ;ignition.c: 46: break;
  1774  000202  0012               	return	
  1775  000204                     i2l246:
  1776                           
  1777                           ;ignition.c: 48: if(PORTAbits.RA4 == 1) {
  1778  000204  A880               	btfss	3968,4,c	;volatile
  1779  000206  D00A               	goto	i2l247
  1780                           
  1781                           ;ignition.c: 49: Transmit(0xAA, 'T', 6, '1');
  1782  000208  0E54               	movlw	84
  1783  00020A  6E01               	movwf	Transmit@operation,c
  1784  00020C  0E06               	movlw	6
  1785  00020E  6E02               	movwf	Transmit@port,c
  1786  000210  0E31               	movlw	49
  1787  000212  6E03               	movwf	Transmit@con_status,c
  1788  000214  0EAA               	movlw	170
  1789  000216  ECE7  F001         	call	_Transmit
  1790                           
  1791                           ;ignition.c: 50: }else if(PORTCbits.RC4 == 0) {
  1792  00021A  0012               	return	
  1793  00021C                     i2l247:
  1794  00021C  B882               	btfsc	3970,4,c	;volatile
  1795  00021E  0012               	return	
  1796                           
  1797                           ;ignition.c: 51: Transmit(0xAA, 'T', 6, '0');
  1798  000220  0E54               	movlw	84
  1799  000222  6E01               	movwf	Transmit@operation,c
  1800  000224  0E06               	movlw	6
  1801  000226  6E02               	movwf	Transmit@port,c
  1802  000228  0E30               	movlw	48
  1803  00022A  6E03               	movwf	Transmit@con_status,c
  1804  00022C  0EAA               	movlw	170
  1805  00022E  ECE7  F001         	call	_Transmit
  1806                           
  1807                           ;ignition.c: 52: }
  1808                           ;ignition.c: 53: break;
  1809  000232  0012               	return	
  1810  000234                     i2l250:
  1811                           
  1812                           ;ignition.c: 55: if(PORTBbits.RB4 == 1) {
  1813  000234  A881               	btfss	3969,4,c	;volatile
  1814  000236  D00A               	goto	i2l251
  1815                           
  1816                           ;ignition.c: 56: Transmit(0xAA, 'T', 7, '1');
  1817  000238  0E54               	movlw	84
  1818  00023A  6E01               	movwf	Transmit@operation,c
  1819  00023C  0E07               	movlw	7
  1820  00023E  6E02               	movwf	Transmit@port,c
  1821  000240  0E31               	movlw	49
  1822  000242  6E03               	movwf	Transmit@con_status,c
  1823  000244  0EAA               	movlw	170
  1824  000246  ECE7  F001         	call	_Transmit
  1825                           
  1826                           ;ignition.c: 57: }else if(PORTCbits.RC4 == 0) {
  1827  00024A  0012               	return	
  1828  00024C                     i2l251:
  1829  00024C  B882               	btfsc	3970,4,c	;volatile
  1830  00024E  0012               	return	
  1831                           
  1832                           ;ignition.c: 58: Transmit(0xAA, 'T', 7, '0');
  1833  000250  0E54               	movlw	84
  1834  000252  6E01               	movwf	Transmit@operation,c
  1835  000254  0E07               	movlw	7
  1836  000256  6E02               	movwf	Transmit@port,c
  1837  000258  0E30               	movlw	48
  1838  00025A  6E03               	movwf	Transmit@con_status,c
  1839  00025C  0EAA               	movlw	170
  1840  00025E  ECE7  F001         	call	_Transmit
  1841                           
  1842                           ;ignition.c: 59: }
  1843                           ;ignition.c: 60: break;
  1844  000262  0012               	return	
  1845  000264                     i2l254:
  1846                           
  1847                           ;ignition.c: 62: if(PORTAbits.RA2 == 1) {
  1848  000264  A480               	btfss	3968,2,c	;volatile
  1849  000266  D00A               	goto	i2l255
  1850                           
  1851                           ;ignition.c: 63: Transmit(0xAA, 'T', 8, '1');
  1852  000268  0E54               	movlw	84
  1853  00026A  6E01               	movwf	Transmit@operation,c
  1854  00026C  0E08               	movlw	8
  1855  00026E  6E02               	movwf	Transmit@port,c
  1856  000270  0E31               	movlw	49
  1857  000272  6E03               	movwf	Transmit@con_status,c
  1858  000274  0EAA               	movlw	170
  1859  000276  ECE7  F001         	call	_Transmit
  1860                           
  1861                           ;ignition.c: 64: }else if(PORTCbits.RC4 == 0) {
  1862  00027A  0012               	return	
  1863  00027C                     i2l255:
  1864  00027C  B882               	btfsc	3970,4,c	;volatile
  1865  00027E  0012               	return	
  1866                           
  1867                           ;ignition.c: 65: Transmit(0xAA, 'T', 8, '0');
  1868  000280  0E54               	movlw	84
  1869  000282  6E01               	movwf	Transmit@operation,c
  1870  000284  0E08               	movlw	8
  1871  000286  6E02               	movwf	Transmit@port,c
  1872  000288  0E30               	movlw	48
  1873  00028A  6E03               	movwf	Transmit@con_status,c
  1874  00028C  0EAA               	movlw	170
  1875  00028E  ECE7  F001         	call	_Transmit
  1876                           
  1877                           ;ignition.c: 66: }
  1878                           ;ignition.c: 67: break;
  1879  000292  0012               	return	
  1880  000294                     i2l258:
  1881                           
  1882                           ;ignition.c: 69: if(PORTAbits.RA0 == 1) {
  1883  000294  A080               	btfss	3968,0,c	;volatile
  1884  000296  D00A               	goto	i2l259
  1885                           
  1886                           ;ignition.c: 70: Transmit(0xAA, 'T', 9, '1');
  1887  000298  0E54               	movlw	84
  1888  00029A  6E01               	movwf	Transmit@operation,c
  1889  00029C  0E09               	movlw	9
  1890  00029E  6E02               	movwf	Transmit@port,c
  1891  0002A0  0E31               	movlw	49
  1892  0002A2  6E03               	movwf	Transmit@con_status,c
  1893  0002A4  0EAA               	movlw	170
  1894  0002A6  ECE7  F001         	call	_Transmit
  1895                           
  1896                           ;ignition.c: 71: }else if(PORTCbits.RC4 == 0) {
  1897  0002AA  0012               	return	
  1898  0002AC                     i2l259:
  1899  0002AC  B882               	btfsc	3970,4,c	;volatile
  1900  0002AE  0012               	return	
  1901                           
  1902                           ;ignition.c: 72: Transmit(0xAA, 'T', 9, '0');
  1903  0002B0  0E54               	movlw	84
  1904  0002B2  6E01               	movwf	Transmit@operation,c
  1905  0002B4  0E09               	movlw	9
  1906  0002B6  6E02               	movwf	Transmit@port,c
  1907  0002B8  0E30               	movlw	48
  1908  0002BA  6E03               	movwf	Transmit@con_status,c
  1909  0002BC  0EAA               	movlw	170
  1910  0002BE  ECE7  F001         	call	_Transmit
  1911                           
  1912                           ;ignition.c: 75: }
  1913                           
  1914                           ;ignition.c: 73: }
  1915                           ;ignition.c: 74: break;
  1916  0002C2  0012               	return	
  1917  0002C4                     i2l1151:
  1918  0002C4  5023               	movf	_received+3,w,c
  1919                           
  1920                           ; Switch size 1, requested type "space"
  1921                           ; Number of cases is 10, Range of values is 0 to 9
  1922                           ; switch strategies available:
  1923                           ; Name         Instructions Cycles
  1924                           ; simple_byte           31    16 (average)
  1925                           ;	Chosen strategy is simple_byte
  1926  0002C6  0A00               	xorlw	0	; case 0
  1927  0002C8  B4D8               	btfsc	status,2,c
  1928  0002CA  D70C               	goto	i2l221
  1929  0002CC  0A01               	xorlw	1	; case 1
  1930  0002CE  B4D8               	btfsc	status,2,c
  1931  0002D0  D721               	goto	i2l226
  1932  0002D2  0A03               	xorlw	3	; case 2
  1933  0002D4  B4D8               	btfsc	status,2,c
  1934  0002D6  D736               	goto	i2l230
  1935  0002D8  0A01               	xorlw	1	; case 3
  1936  0002DA  B4D8               	btfsc	status,2,c
  1937  0002DC  D74B               	goto	i2l234
  1938  0002DE  0A07               	xorlw	7	; case 4
  1939  0002E0  B4D8               	btfsc	status,2,c
  1940  0002E2  D760               	goto	i2l238
  1941  0002E4  0A01               	xorlw	1	; case 5
  1942  0002E6  B4D8               	btfsc	status,2,c
  1943  0002E8  D775               	goto	i2l242
  1944  0002EA  0A03               	xorlw	3	; case 6
  1945  0002EC  B4D8               	btfsc	status,2,c
  1946  0002EE  D78A               	goto	i2l246
  1947  0002F0  0A01               	xorlw	1	; case 7
  1948  0002F2  B4D8               	btfsc	status,2,c
  1949  0002F4  D79F               	goto	i2l250
  1950  0002F6  0A0F               	xorlw	15	; case 8
  1951  0002F8  B4D8               	btfsc	status,2,c
  1952  0002FA  D7B4               	goto	i2l254
  1953  0002FC  0A01               	xorlw	1	; case 9
  1954  0002FE  A4D8               	btfss	status,2,c
  1955  000300  0012               	return	
  1956  000302  D7C8               	goto	i2l258
  1957  000304                     __end_of_Test_Port:
  1958                           	opt stack 0
  1959                           pclatu	equ	0xFFB
  1960                           pclath	equ	0xFFA
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           prodh	equ	0xFF4
  1966                           prodl	equ	0xFF3
  1967                           intcon	equ	0xFF2
  1968                           postinc0	equ	0xFEE
  1969                           fsr0h	equ	0xFEA
  1970                           fsr0l	equ	0xFE9
  1971                           wreg	equ	0xFE8
  1972                           fsr1h	equ	0xFE2
  1973                           fsr1l	equ	0xFE1
  1974                           indf2	equ	0xFDF
  1975                           postinc2	equ	0xFDE
  1976                           fsr2h	equ	0xFDA
  1977                           fsr2l	equ	0xFD9
  1978                           status	equ	0xFD8
  1979                           
  1980 ;; *************** function _Transmit *****************
  1981 ;; Defined at:
  1982 ;;		line 18 in file "communication.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  receiver        1    wreg     unsigned char 
  1985 ;;  operation       1    0[COMRAM] unsigned char 
  1986 ;;  port            1    1[COMRAM] unsigned char 
  1987 ;;  con_status      1    2[COMRAM] unsigned char 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  receiver        1    3[COMRAM] unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;		None               void
  1992 ;; Registers used:
  1993 ;;		wreg, status,2
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1999 ;;      Params:         3       0       0       0
  2000 ;;      Locals:         1       0       0       0
  2001 ;;      Temps:          0       0       0       0
  2002 ;;      Totals:         4       0       0       0
  2003 ;;Total ram usage:        4 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_Test_Port
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text16
  2013  0003CE                     __ptext16:
  2014                           	opt stack 0
  2015  0003CE                     _Transmit:
  2016                           	opt stack 25
  2017                           
  2018                           ;incstack = 0
  2019                           ;Transmit@receiver stored from wreg
  2020  0003CE  6E04               	movwf	Transmit@receiver,c
  2021                           
  2022                           ;communication.c: 20: PORTDbits.RD4 = 1;
  2023  0003D0  8883               	bsf	3971,4,c	;volatile
  2024                           
  2025                           ;communication.c: 21: RCSTA1bits.CREN = 0;
  2026  0003D2  98AB               	bcf	4011,4,c	;volatile
  2027                           
  2028                           ;communication.c: 23: __nop();
  2029  0003D4  F000               	nop	
  2030  0003D6                     i2l55:
  2031  0003D6  A89E               	btfss	3998,4,c	;volatile
  2032  0003D8  D7FE               	goto	i2l55
  2033                           
  2034                           ;communication.c: 25: TXSTA1bits.TX9D = 1;
  2035  0003DA  80AC               	bsf	4012,0,c	;volatile
  2036                           
  2037                           ;communication.c: 26: TXREG1 = receiver;
  2038  0003DC  C004  FFAD         	movff	Transmit@receiver,4013	;volatile
  2039  0003E0                     i2l58:
  2040  0003E0  A89E               	btfss	3998,4,c	;volatile
  2041  0003E2  D7FE               	goto	i2l58
  2042                           
  2043                           ;communication.c: 28: TXREG1 = 0x01;
  2044  0003E4  0E01               	movlw	1
  2045  0003E6  6EAD               	movwf	4013,c	;volatile
  2046  0003E8                     i2l61:
  2047  0003E8  A89E               	btfss	3998,4,c	;volatile
  2048  0003EA  D7FE               	goto	i2l61
  2049                           
  2050                           ;communication.c: 30: TXREG1 = operation;
  2051  0003EC  C001  FFAD         	movff	Transmit@operation,4013	;volatile
  2052  0003F0                     i2l64:
  2053  0003F0  A89E               	btfss	3998,4,c	;volatile
  2054  0003F2  D7FE               	goto	i2l64
  2055                           
  2056                           ;communication.c: 32: TXREG1 = port;
  2057  0003F4  C002  FFAD         	movff	Transmit@port,4013	;volatile
  2058  0003F8                     i2l67:
  2059  0003F8  A89E               	btfss	3998,4,c	;volatile
  2060  0003FA  D7FE               	goto	i2l67
  2061                           
  2062                           ;communication.c: 34: TXREG1 = con_status;
  2063  0003FC  C003  FFAD         	movff	Transmit@con_status,4013	;volatile
  2064  000400                     i2l70:
  2065  000400  A89E               	btfss	3998,4,c	;volatile
  2066  000402  D7FE               	goto	i2l70
  2067                           
  2068                           ;communication.c: 36: TXREG1 = p_status;
  2069  000404  C026  FFAD         	movff	_p_status,4013	;volatile
  2070  000408                     i2l73:
  2071  000408  A2AC               	btfss	4012,1,c	;volatile
  2072  00040A  D7FE               	goto	i2l73
  2073                           
  2074                           ;communication.c: 38: PORTDbits.RD4 = 0;
  2075  00040C  9883               	bcf	3971,4,c	;volatile
  2076                           
  2077                           ;communication.c: 39: RCSTA1bits.CREN = 1;
  2078  00040E  88AB               	bsf	4011,4,c	;volatile
  2079                           
  2080                           ;communication.c: 40: __nop();
  2081  000410  F000               	nop	
  2082  000412  0012               	return		;funcret
  2083  000414                     __end_of_Transmit:
  2084                           	opt stack 0
  2085                           pclatu	equ	0xFFB
  2086                           pclath	equ	0xFFA
  2087                           tblptru	equ	0xFF8
  2088                           tblptrh	equ	0xFF7
  2089                           tblptrl	equ	0xFF6
  2090                           tablat	equ	0xFF5
  2091                           prodh	equ	0xFF4
  2092                           prodl	equ	0xFF3
  2093                           intcon	equ	0xFF2
  2094                           postinc0	equ	0xFEE
  2095                           fsr0h	equ	0xFEA
  2096                           fsr0l	equ	0xFE9
  2097                           wreg	equ	0xFE8
  2098                           fsr1h	equ	0xFE2
  2099                           fsr1l	equ	0xFE1
  2100                           indf2	equ	0xFDF
  2101                           postinc2	equ	0xFDE
  2102                           fsr2h	equ	0xFDA
  2103                           fsr2l	equ	0xFD9
  2104                           status	equ	0xFD8
  2105                           
  2106 ;; *************** function _Mark_Ignite *****************
  2107 ;; Defined at:
  2108 ;;		line 123 in file "ignition.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;		None
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;		None
  2113 ;; Return value:  Size  Location     Type
  2114 ;;		None               void
  2115 ;; Registers used:
  2116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2122 ;;      Params:         0       0       0       0
  2123 ;;      Locals:         0       0       0       0
  2124 ;;      Temps:          0       0       0       0
  2125 ;;      Totals:         0       0       0       0
  2126 ;;Total ram usage:        0 bytes
  2127 ;; Hardware stack levels used:    1
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_Evaluate_Reception
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text17
  2136  000508                     __ptext17:
  2137                           	opt stack 0
  2138  000508                     _Mark_Ignite:
  2139                           	opt stack 26
  2140                           
  2141                           ;ignition.c: 124: Marker[received[3]] = 1;
  2142                           
  2143                           ;incstack = 0
  2144  000508  5023               	movf	_received+3,w,c
  2145  00050A  0D01               	mullw	1
  2146  00050C  0E16               	movlw	low _Marker
  2147  00050E  24F3               	addwf	prodl,w,c
  2148  000510  6ED9               	movwf	fsr2l,c
  2149  000512  0E00               	movlw	high _Marker
  2150  000514  20F4               	addwfc	prodh,w,c
  2151  000516  6EDA               	movwf	fsr2h,c
  2152  000518  0E01               	movlw	1
  2153  00051A  6EDF               	movwf	indf2,c
  2154  00051C  0012               	return		;funcret
  2155  00051E                     __end_of_Mark_Ignite:
  2156                           	opt stack 0
  2157  0000                     pclatu	equ	0xFFB
  2158                           pclath	equ	0xFFA
  2159                           tblptru	equ	0xFF8
  2160                           tblptrh	equ	0xFF7
  2161                           tblptrl	equ	0xFF6
  2162                           tablat	equ	0xFF5
  2163                           prodh	equ	0xFF4
  2164                           prodl	equ	0xFF3
  2165                           intcon	equ	0xFF2
  2166                           postinc0	equ	0xFEE
  2167                           fsr0h	equ	0xFEA
  2168                           fsr0l	equ	0xFE9
  2169                           wreg	equ	0xFE8
  2170                           fsr1h	equ	0xFE2
  2171                           fsr1l	equ	0xFE1
  2172                           indf2	equ	0xFDF
  2173                           postinc2	equ	0xFDE
  2174                           fsr2h	equ	0xFDA
  2175                           fsr2l	equ	0xFD9
  2176                           status	equ	0xFD8
  2177                           pclatu	equ	0xFFB
  2178                           pclath	equ	0xFFA
  2179                           tblptru	equ	0xFF8
  2180                           tblptrh	equ	0xFF7
  2181                           tblptrl	equ	0xFF6
  2182                           tablat	equ	0xFF5
  2183                           prodh	equ	0xFF4
  2184                           prodl	equ	0xFF3
  2185                           intcon	equ	0xFF2
  2186                           postinc0	equ	0xFEE
  2187                           fsr0h	equ	0xFEA
  2188                           fsr0l	equ	0xFE9
  2189                           wreg	equ	0xFE8
  2190                           fsr1h	equ	0xFE2
  2191                           fsr1l	equ	0xFE1
  2192                           indf2	equ	0xFDF
  2193                           postinc2	equ	0xFDE
  2194                           fsr2h	equ	0xFDA
  2195                           fsr2l	equ	0xFD9
  2196                           status	equ	0xFD8
  2197                           
  2198                           	psect	rparam
  2199  0000                     pclatu	equ	0xFFB
  2200                           pclath	equ	0xFFA
  2201                           tblptru	equ	0xFF8
  2202                           tblptrh	equ	0xFF7
  2203                           tblptrl	equ	0xFF6
  2204                           tablat	equ	0xFF5
  2205                           prodh	equ	0xFF4
  2206                           prodl	equ	0xFF3
  2207                           intcon	equ	0xFF2
  2208                           postinc0	equ	0xFEE
  2209                           fsr0h	equ	0xFEA
  2210                           fsr0l	equ	0xFE9
  2211                           wreg	equ	0xFE8
  2212                           fsr1h	equ	0xFE2
  2213                           fsr1l	equ	0xFE1
  2214                           indf2	equ	0xFDF
  2215                           postinc2	equ	0xFDE
  2216                           fsr2h	equ	0xFDA
  2217                           fsr2l	equ	0xFD9
  2218                           status	equ	0xFD8
  2219                           
  2220                           	psect	temp
  2221  000027                     btemp:
  2222                           	opt stack 0
  2223  000027                     	ds	1
  2224  0000                     int$flags	set	btemp
  2225                           pclatu	equ	0xFFB
  2226                           pclath	equ	0xFFA
  2227                           tblptru	equ	0xFF8
  2228                           tblptrh	equ	0xFF7
  2229                           tblptrl	equ	0xFF6
  2230                           tablat	equ	0xFF5
  2231                           prodh	equ	0xFF4
  2232                           prodl	equ	0xFF3
  2233                           intcon	equ	0xFF2
  2234                           postinc0	equ	0xFEE
  2235                           fsr0h	equ	0xFEA
  2236                           fsr0l	equ	0xFE9
  2237                           wreg	equ	0xFE8
  2238                           fsr1h	equ	0xFE2
  2239                           fsr1l	equ	0xFE1
  2240                           indf2	equ	0xFDF
  2241                           postinc2	equ	0xFDE
  2242                           fsr2h	equ	0xFDA
  2243                           fsr2l	equ	0xFD9
  2244                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     21      38
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_Check_Ignition
    _Init->_InitMiscellaneos
    _Check_Ignition->_Ignite_Port

Critical Paths under _Isr in COMRAM

    _Test_Port->_Transmit

Critical Paths under _main in BANK0

    None.

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     135
                     _Check_Ignition
                        _Check_Power
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0      45
                          _InitAnsel
                      _InitInterrupt
                   _InitMiscellaneos
                  _InitMiscellaneous
                           _InitPort
                   _InitTransmission
                           _InitTris
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneos                                     1     1      0      45
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Power                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Ignition                                       2     2      0      90
                                             19 COMRAM     2     2      0
                        _Ignite_Port
 ---------------------------------------------------------------------------------
 (2) _Ignite_Port                                          1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 14    14      0    2668
                                              4 COMRAM    14    14      0
                 _Evaluate_Reception
                            _Receive
 ---------------------------------------------------------------------------------
 (4) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Evaluate_Reception                                   0     0      0    2668
                        _Mark_Ignite
                          _Test_Port
 ---------------------------------------------------------------------------------
 (5) _Test_Port                                            0     0      0    2668
                           _Transmit
 ---------------------------------------------------------------------------------
 (6) _Transmit                                             4     1      3    2668
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _Mark_Ignite                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Ignition
     _Ignite_Port
   _Check_Power
   _Init
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneos
     _InitMiscellaneous
     _InitPort
     _InitTransmission
     _InitTris

 _Isr (ROOT)
   _Evaluate_Reception
     _Mark_Ignite
     _Test_Port
       _Transmit
   _Receive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     15      26       1       40.4%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      26       8        0.0%
DATA                 0      0      26      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jan 26 21:37:55 2017

           ??_Check_Ignition 0014                           l23 0522                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                          l270 0314                          l271 0318  
                        l272 031C                          l273 0320                          l274 0324  
                        l266 0308                          l275 0328                          l276 032C  
                        l268 030C                          l269 0310                          l961 0446  
                        l965 044E                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        u757 03AE                          _Isr 0008                          prod 000FF3  
                        wreg 000FE8                   _TXSTA1bits 000FAC                ??_Ignite_Port 0013  
               __CFG_LVP$OFF 000000                         ?_Isr 0001                ??_Mark_Ignite 0001  
                       l1021 0330                         l1033 0384                         l1045 03CA  
                       l1037 038C                         i2l61 03E8                         i2l70 0400  
                       i2l55 03D6                         i2l64 03F0                         i2l73 0408  
                       i2l58 03E0                         i2l67 03F8            ?_InitMiscellaneos 0001  
                       _Init 0486                         _main 051E                         fsr0h 000FEA  
                       fsr1h 000FE2                         fsr0l 000FE9                         fsr2h 000FDA  
                       fsr1l 000FE1                         indf2 000FDF                         fsr2l 000FD9  
                       btemp 0027                __CFG_BORV$190 000000           ??_InitMiscellaneos 0013  
               Transmit@port 0002                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 00DE                __CFG_IESO$OFF 000000  
               ___param_bank 000010                _InitInterrupt 053C                        ??_Isr 0005  
            __end_of_Receive 053C                 _BAUDCON1bits 000FB8                  _Check_Power 054C  
                      ?_Init 0001                        ?_main 0001            _InitMiscellaneous 0546  
                      i2l221 00E4                        i2l230 0144                        i2l222 00FC  
                      i2l231 015C                        i2l320 0072                        i2l250 0234  
                      i2l242 01D4                        i2l234 0174                        i2l226 0114  
                      i2l251 024C                        i2l243 01EC                        i2l235 018C  
                      i2l227 012C                        i2l325 00A2                        i2l254 0264  
                      i2l246 0204                        i2l238 01A4                        i2l255 027C  
                      i2l247 021C                        i2l239 01BC                        i2l319 0076  
                      i2l258 0294                        i2l259 02AC                        _PORTA 000F80  
                      _PORTB 000F81                        _PORTC 000F82                        _PORTD 000F83  
                      _PORTE 000F84                        _TRISA 000F92                        _TRISB 000F93  
                      _TRISC 000F94                        _TRISD 000F95                        _TRISE 000F96  
              __CFG_WRT0$OFF 000000     __end_of_InitTransmission 04C0                __CFG_WRT1$OFF 000000  
         ?_InitMiscellaneous 0001               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000           __CFG_MCLRE$EXTMCLR 000000  
             __pbitbssCOMRAM 0128               __CFG_BOREN$OFF 000000          ??_InitMiscellaneous 0013  
                      tablat 000FF5                        status 000FD8          __end_of_Ignite_Port 0380  
        __end_of_Mark_Ignite 051E               ?_InitInterrupt 0001              __initialization 0414  
               __end_of_Init 04A4                 __end_of_main 052E             __end_of_InitPort 0508  
           __end_of_InitTris 04F2    __end_of_InitMiscellaneous 054C                       ??_Init 0014  
 __end_of_Evaluate_Reception 04DC                       ??_main 0016              _slave_addressed 0129  
              __activetblptr 000002             __end_of_Transmit 0414                       _ADCON0 000FC2  
                     _ADCON1 000FC1                       _ADCON2 000FC0                       _ANSELA 000F38  
                     _ANSELB 000F39                       _ANSELC 000F3A                       _ANSELD 000F3B  
                     _ANSELE 000F3C                       i2l1053 0538                       i2l1151 02C4  
                     i2l1157 04CE               __CFG_WDTEN$OFF 000000                       _RCREG1 000FAE  
                     _OSCCON 000FD3           __size_of_InitAnsel 0020                       _SPBRG1 000FAF  
                     _TXREG1 000FAD                    ??_Receive 0001                       _Marker 0016  
             __CFG_XINST$OFF 000000                       clear_0 041C           __size_of_Test_Port 0222  
               __pdataCOMRAM 0026                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8                  _Ignite_Port 0304              __CFG_HFOFST$OFF 000000  
                _Mark_Ignite 0508                   __accesstop 0060      __end_of__initialization 0434  
            __CFG_PBADEN$OFF 000000              ??_InitInterrupt 0013                ___rparam_used 000001  
             __pcstackCOMRAM 0001   __size_of_InitMiscellaneous 0006            __end_of_InitAnsel 0486  
            __CFG_PLLCFG$OFF 000000                    ?_InitPort 0001                    ?_InitTris 0001  
          __end_of_Test_Port 0304           __CFG_CCP2MX$PORTC1 000000           __CFG_CCP3MX$PORTB5 000000  
                  ?_Transmit 0001    __size_of_InitMiscellaneos 0024                 ?_Check_Power 0001  
          ?_InitTransmission 0001            __CFG_PRICLKEN$OFF 000000           ??_InitTransmission 0013  
                 ??_InitPort 0013                   ??_InitTris 0013              __CFG_PWRTEN$OFF 000000  
                    _Receive 052E                      __Hparam 0000                      __Lparam 0000  
                 ??_Transmit 0004              __CFG_STVREN$OFF 000000                      __pcinit 0414  
                    __ramtop 0300                      __ptext0 051E                      __ptext1 0486  
                    __ptext2 04DC                      __ptext3 04A4                      __ptext4 04F2  
                    __ptext5 0546                      __ptext6 0442                      __ptext7 053C  
                    __ptext8 0466                      __ptext9 054C                 __size_of_Isr 00D6  
    __size_of_Check_Ignition 004E                      _overrun 0128         end_of_initialization 0434  
         _Evaluate_Reception 04C0                __Lmediumconst 0000          ?_Evaluate_Reception 0001  
   Ignite_Port@ignite_number 0013                      postinc0 000FEE                      postinc2 000FDE  
         Transmit@con_status 0003                    _PORTAbits 000F80                    _PORTBbits 000F81  
                  _PORTCbits 000F82                    _PORTDbits 000F83                    _PORTEbits 000F84  
       ??_Evaluate_Reception 0005            InitMiscellaneos@c 0013                    _TRISCbits 000F94  
               ?_Ignite_Port 0001                 ?_Mark_Ignite 0001             _InitMiscellaneos 0442  
              __pidataCOMRAM 054E         __size_of_Check_Power 0002          start_initialization 0414  
                  _InitAnsel 0466                  __end_of_Isr 00DE              Check_Ignition@c 0015  
          __size_of_InitPort 0016            __size_of_InitTris 0016        __end_of_InitInterrupt 0546  
                  _Test_Port 00E2            __size_of_Transmit 0046               _Check_Ignition 0380  
                __pbssCOMRAM 0016                   ?_InitAnsel 0001                     ?_Receive 0001  
  __size_of_InitTransmission 001C                    __pintcode 0008                   ?_Test_Port 0001  
     __end_of_Check_Ignition 03CE         __size_of_Ignite_Port 007C         __size_of_Mark_Ignite 0016  
                   _PIE1bits 000F9D                     _PIR1bits 000F9E             __CFG_WDTPS$32768 000000  
            ?_Check_Ignition 0001                  ??_InitAnsel 0013              _receive_counter 0024  
   __end_of_InitMiscellaneos 0466                     _InitPort 04F2                     _InitTris 04DC  
          Transmit@operation 0001                     __Hrparam 0000             __size_of_Receive 000E  
                   __Lrparam 0000            __CFG_P2BMX$PORTD2 000000                  ??_Test_Port 0005  
                   _Transmit 03CE  __size_of_Evaluate_Reception 001C                     __ptext10 0380  
                   __ptext11 0304                     __ptext13 052E                     __ptext14 04C0  
                   __ptext15 00E2                     __ptext16 03CE                     __ptext17 0508  
              __size_of_Init 001E                __size_of_main 0010                     _received 0020  
                   _p_status 0026             _InitTransmission 04A4                     int$flags 0027  
              ??_Check_Power 0013             Transmit@receiver 0004                   _INTCONbits 000FF2  
                   intlevel2 0000                 _VREFCON0bits 000F42                   _RCSTA1bits 000FAB  
        __end_of_Check_Power 054E            __CFG_T3CMX$PORTC0 000000       __size_of_InitInterrupt 000A  
          __CFG_FOSC$INTIO67 000000  
