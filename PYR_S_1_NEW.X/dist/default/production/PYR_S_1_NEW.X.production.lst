

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Feb 09 21:20:23 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F44K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    42                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  000ACC                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _p_status
    49  000ACC  30                 	db	48
    50  0000                     _ANSELA	set	3896
    51  0000                     _ANSELB	set	3897
    52  0000                     _ANSELC	set	3898
    53  0000                     _ANSELD	set	3899
    54  0000                     _ANSELE	set	3900
    55  0000                     _CCPTMRS0bits	set	3913
    56  0000                     _VREFCON0	set	3906
    57  0000                     _VREFCON1	set	3905
    58  0000                     _VREFCON2bits	set	3904
    59  0000                     _ADCON0	set	4034
    60  0000                     _ADCON0bits	set	4034
    61  0000                     _ADCON1	set	4033
    62  0000                     _ADCON2	set	4032
    63  0000                     _ADRESH	set	4036
    64  0000                     _BAUDCON1bits	set	4024
    65  0000                     _CCP1CON	set	4029
    66  0000                     _CCPR1H	set	4031
    67  0000                     _CCPR1L	set	4030
    68  0000                     _INTCONbits	set	4082
    69  0000                     _OSCCON	set	4051
    70  0000                     _PIE1bits	set	3997
    71  0000                     _PIR1bits	set	3998
    72  0000                     _PORTA	set	3968
    73  0000                     _PORTAbits	set	3968
    74  0000                     _PORTB	set	3969
    75  0000                     _PORTBbits	set	3969
    76  0000                     _PORTC	set	3970
    77  0000                     _PORTCbits	set	3970
    78  0000                     _PORTD	set	3971
    79  0000                     _PORTDbits	set	3971
    80  0000                     _PORTE	set	3972
    81  0000                     _PORTEbits	set	3972
    82  0000                     _RCREG1	set	4014
    83  0000                     _RCSTA1bits	set	4011
    84  0000                     _SPBRG1	set	4015
    85  0000                     _T1CON	set	4045
    86  0000                     _T1CONbits	set	4045
    87  0000                     _TMR1H	set	4047
    88  0000                     _TMR1L	set	4046
    89  0000                     _TRISA	set	3986
    90  0000                     _TRISB	set	3987
    91  0000                     _TRISC	set	3988
    92  0000                     _TRISCbits	set	3988
    93  0000                     _TRISD	set	3989
    94  0000                     _TRISE	set	3990
    95  0000                     _TXREG1	set	4013
    96  0000                     _TXSTA1bits	set	4012
    97                           
    98                           ; #config settings
    99  0000                     
   100                           	psect	cinit
   101  000918                     __pcinit:
   102                           	opt stack 0
   103  000918                     start_initialization:
   104                           	opt stack 0
   105  000918                     __initialization:
   106                           	opt stack 0
   107                           
   108                           ; Clear objects allocated to BANK0 (10 bytes)
   109  000918  EE00  F060         	lfsr	0,__pbssBANK0
   110  00091C  0E0A               	movlw	10
   111  00091E                     clear_0:
   112  00091E  6AEE               	clrf	postinc0,c
   113  000920  06E8               	decf	wreg,f,c
   114  000922  E1FD               	bnz	clear_0
   115                           
   116                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   117  000924  6A4B               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   118                           
   119                           ; Clear objects allocated to COMRAM (5 bytes)
   120  000926  6A4A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   121  000928  6A49               	clrf	(__pbssCOMRAM+3)& (0+255),c
   122  00092A  6A48               	clrf	(__pbssCOMRAM+2)& (0+255),c
   123  00092C  6A47               	clrf	(__pbssCOMRAM+1)& (0+255),c
   124  00092E  6A46               	clrf	__pbssCOMRAM& (0+255),c
   125                           
   126                           ; Initialize objects allocated to COMRAM (1 bytes)
   127                           ; load TBLPTR registers with __pidataCOMRAM
   128  000930  0ECC               	movlw	low __pidataCOMRAM
   129  000932  6EF6               	movwf	tblptrl,c
   130  000934  0E0A               	movlw	high __pidataCOMRAM
   131  000936  6EF7               	movwf	tblptrh,c
   132  000938  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   133  00093A  6EF8               	movwf	tblptru,c
   134  00093C  0009               	tblrd		*+	;fetch initializer
   135  00093E  CFF5 F04C          	movff	tablat,__pdataCOMRAM
   136  000942                     end_of_initialization:
   137                           	opt stack 0
   138  000942                     __end_of__initialization:
   139                           	opt stack 0
   140  000942  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   141  000944  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   142  000946  0E00               	movlw	low (__Lmediumconst shr (0+16))
   143  000948  6EF8               	movwf	tblptru,c
   144  00094A  0100               	movlb	0
   145  00094C  EF52  F005         	goto	_main	;jump to C main() function
   146                           tblptru	equ	0xFF8
   147                           tblptrh	equ	0xFF7
   148                           tblptrl	equ	0xFF6
   149                           tablat	equ	0xFF5
   150                           postinc0	equ	0xFEE
   151                           wreg	equ	0xFE8
   152                           
   153                           	psect	bitbssCOMRAM
   154  000258                     __pbitbssCOMRAM:
   155                           	opt stack 0
   156  000258                     _overrun:
   157                           	opt stack 0
   158  000258                     	ds	1
   159  000259                     _slave_addressed:
   160                           	opt stack 0
   161  000259                     	ds	1
   162                           tblptru	equ	0xFF8
   163                           tblptrh	equ	0xFF7
   164                           tblptrl	equ	0xFF6
   165                           tablat	equ	0xFF5
   166                           postinc0	equ	0xFEE
   167                           wreg	equ	0xFE8
   168                           
   169                           	psect	bssCOMRAM
   170  000046                     __pbssCOMRAM:
   171                           	opt stack 0
   172  000046                     _received:
   173                           	opt stack 0
   174  000046                     	ds	4
   175  00004A                     _receive_counter:
   176                           	opt stack 0
   177  00004A                     	ds	1
   178                           tblptru	equ	0xFF8
   179                           tblptrh	equ	0xFF7
   180                           tblptrl	equ	0xFF6
   181                           tablat	equ	0xFF5
   182                           postinc0	equ	0xFEE
   183                           wreg	equ	0xFE8
   184                           
   185                           	psect	dataCOMRAM
   186  00004C                     __pdataCOMRAM:
   187                           	opt stack 0
   188  00004C                     _p_status:
   189                           	opt stack 0
   190  00004C                     	ds	1
   191                           tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           
   198                           	psect	bssBANK0
   199  000060                     __pbssBANK0:
   200                           	opt stack 0
   201  000060                     _Marker:
   202                           	opt stack 0
   203  000060                     	ds	10
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           tblptrl	equ	0xFF6
   207                           tablat	equ	0xFF5
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211                           	psect	cstackBANK0
   212  00006A                     __pcstackBANK0:
   213                           	opt stack 0
   214  00006A                     InitVar@c:
   215                           	opt stack 0
   216  00006A                     Ignite_Port@ignite_number:
   217                           	opt stack 0
   218  00006A                     Disable_Port@disable_number:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0x0
   222  00006A                     	ds	1
   223  00006B                     
   224                           ; 0 bytes @ 0x1
   225  00006B                     	ds	1
   226  00006C                     Check_Ignition@c:
   227                           	opt stack 0
   228                           
   229                           ; 1 bytes @ 0x2
   230  00006C                     	ds	1
   231  00006D                     tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           
   238                           ; 0 bytes @ 0x3
   239                           
   240                           	psect	cstackCOMRAM
   241  000001                     __pcstackCOMRAM:
   242                           	opt stack 0
   243  000001                     ?___ftpack:
   244                           	opt stack 0
   245  000001                     Transmit@operation:
   246                           	opt stack 0
   247  000001                     Receive_Dump@dump:
   248                           	opt stack 0
   249  000001                     ___ftpack@arg:
   250                           	opt stack 0
   251  000001                     ___ftge@ff1:
   252                           	opt stack 0
   253                           
   254                           ; 3 bytes @ 0x0
   255  000001                     	ds	1
   256  000002                     Transmit@port:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x1
   260  000002                     	ds	1
   261  000003                     Transmit@con_status:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x2
   265  000003                     	ds	1
   266  000004                     Transmit@receiver:
   267                           	opt stack 0
   268  000004                     ___ftpack@exp:
   269                           	opt stack 0
   270  000004                     ___ftge@ff2:
   271                           	opt stack 0
   272                           
   273                           ; 3 bytes @ 0x3
   274  000004                     	ds	1
   275  000005                     ___ftpack@sign:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0x4
   279  000005                     	ds	1
   280  000006                     ??___ftpack:
   281                           
   282                           ; 0 bytes @ 0x5
   283  000006                     	ds	1
   284  000007                     ??___ftge:
   285                           
   286                           ; 0 bytes @ 0x6
   287  000007                     	ds	2
   288  000009                     ?___lbtoft:
   289                           	opt stack 0
   290                           
   291                           ; 3 bytes @ 0x8
   292  000009                     	ds	3
   293  00000C                     ___lbtoft@c:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0xB
   297  00000C                     	ds	1
   298  00000D                     ?___ftmul:
   299                           	opt stack 0
   300  00000D                     ___ftmul@f1:
   301                           	opt stack 0
   302                           
   303                           ; 3 bytes @ 0xC
   304  00000D                     	ds	3
   305  000010                     ___ftmul@f2:
   306                           	opt stack 0
   307                           
   308                           ; 3 bytes @ 0xF
   309  000010                     	ds	3
   310  000013                     ??___ftmul:
   311                           
   312                           ; 0 bytes @ 0x12
   313  000013                     	ds	3
   314  000016                     ___ftmul@exp:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x15
   318  000016                     	ds	1
   319  000017                     ___ftmul@f3_as_product:
   320                           	opt stack 0
   321                           
   322                           ; 3 bytes @ 0x16
   323  000017                     	ds	3
   324  00001A                     ___ftmul@cntr:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x19
   328  00001A                     	ds	1
   329  00001B                     ___ftmul@sign:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x1A
   333  00001B                     	ds	1
   334  00001C                     ?___ftdiv:
   335                           	opt stack 0
   336  00001C                     ___ftdiv@f1:
   337                           	opt stack 0
   338                           
   339                           ; 3 bytes @ 0x1B
   340  00001C                     	ds	3
   341  00001F                     ___ftdiv@f2:
   342                           	opt stack 0
   343                           
   344                           ; 3 bytes @ 0x1E
   345  00001F                     	ds	3
   346  000022                     ??___ftdiv:
   347                           
   348                           ; 0 bytes @ 0x21
   349  000022                     	ds	3
   350  000025                     ___ftdiv@cntr:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x24
   354  000025                     	ds	1
   355  000026                     ___ftdiv@f3:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0x25
   359  000026                     	ds	3
   360  000029                     ___ftdiv@exp:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x28
   364  000029                     	ds	1
   365  00002A                     ___ftdiv@sign:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x29
   369  00002A                     	ds	1
   370  00002B                     Check_Power@DAC_out:
   371                           	opt stack 0
   372                           
   373                           ; 3 bytes @ 0x2A
   374  00002B                     	ds	3
   375  00002E                     Check_Power@voltage:
   376                           	opt stack 0
   377                           
   378                           ; 3 bytes @ 0x2D
   379  00002E                     	ds	3
   380  000031                     Check_Power@supply:
   381                           	opt stack 0
   382                           
   383                           ; 3 bytes @ 0x30
   384  000031                     	ds	3
   385  000034                     Check_Power@source_power:
   386                           	opt stack 0
   387                           
   388                           ; 3 bytes @ 0x33
   389  000034                     	ds	3
   390  000037                     ??_Isr:
   391                           
   392                           ; 0 bytes @ 0x36
   393  000037                     	ds	14
   394  000045                     Isr@c:
   395                           	opt stack 0
   396                           
   397                           ; 1 bytes @ 0x44
   398  000045                     	ds	1
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           
   406 ;;
   407 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   408 ;;
   409 ;; *************** function _main *****************
   410 ;; Defined at:
   411 ;;		line 74 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;		None
   414 ;; Auto vars:     Size  Location     Type
   415 ;;		None
   416 ;; Return value:  Size  Location     Type
   417 ;;		None               void
   418 ;; Registers used:
   419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   425 ;;      Params:         0       0       0       0
   426 ;;      Locals:         0       0       0       0
   427 ;;      Temps:          0       0       0       0
   428 ;;      Totals:         0       0       0       0
   429 ;;Total ram usage:        0 bytes
   430 ;; Hardware stack levels required when called:    7
   431 ;; This function calls:
   432 ;;		_Check_Ignition
   433 ;;		_Init
   434 ;; This function is called by:
   435 ;;		Startup code after reset
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text0
   440  000AA4                     __ptext0:
   441                           	opt stack 0
   442  000AA4                     _main:
   443                           	opt stack 24
   444                           
   445                           ;main.c: 75: Init();
   446                           
   447                           ;incstack = 0
   448  000AA4  ECE3  F004         	call	_Init	;wreg free
   449  000AA8                     l21:
   450                           
   451                           ;main.c: 77: Check_Ignition();
   452  000AA8  EC6A  F004         	call	_Check_Ignition	;wreg free
   453                           
   454                           ;main.c: 78: __nop();
   455  000AAC  F000               	nop	
   456  000AAE  D7FC               	goto	l21
   457  000AB0                     __end_of_main:
   458                           	opt stack 0
   459                           tblptru	equ	0xFF8
   460                           tblptrh	equ	0xFF7
   461                           tblptrl	equ	0xFF6
   462                           tablat	equ	0xFF5
   463                           postinc0	equ	0xFEE
   464                           wreg	equ	0xFE8
   465                           
   466 ;; *************** function _Init *****************
   467 ;; Defined at:
   468 ;;		line 5 in file "init.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;		None
   471 ;; Auto vars:     Size  Location     Type
   472 ;;		None
   473 ;; Return value:  Size  Location     Type
   474 ;;		None               void
   475 ;; Registers used:
   476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   482 ;;      Params:         0       0       0       0
   483 ;;      Locals:         0       0       0       0
   484 ;;      Temps:          0       0       0       0
   485 ;;      Totals:         0       0       0       0
   486 ;;Total ram usage:        0 bytes
   487 ;; Hardware stack levels used:    1
   488 ;; Hardware stack levels required when called:    6
   489 ;; This function calls:
   490 ;;		_InitADC
   491 ;;		_InitAnsel
   492 ;;		_InitInterrupt
   493 ;;		_InitMiscellaneous
   494 ;;		_InitPort
   495 ;;		_InitTransmission
   496 ;;		_InitTris
   497 ;;		_InitVar
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text1
   504  0009C6                     __ptext1:
   505                           	opt stack 0
   506  0009C6                     _Init:
   507                           	opt stack 24
   508                           
   509                           ;init.c: 6: InitPort();
   510                           
   511                           ;incstack = 0
   512  0009C6  EC2D  F005         	call	_InitPort	;wreg free
   513                           
   514                           ;init.c: 7: InitTris();
   515  0009CA  EC22  F005         	call	_InitTris	;wreg free
   516                           
   517                           ;init.c: 8: InitAnsel();
   518  0009CE  ECF4  F004         	call	_InitAnsel	;wreg free
   519                           
   520                           ;init.c: 9: InitMiscellaneous();
   521  0009D2  EC63  F005         	call	_InitMiscellaneous	;wreg free
   522                           
   523                           ;init.c: 10: InitTransmission();
   524  0009D6  EC14  F005         	call	_InitTransmission	;wreg free
   525                           
   526                           ;init.c: 11: InitADC();
   527  0009DA  ECBE  F004         	call	_InitADC	;wreg free
   528                           
   529                           ;init.c: 12: InitVar();
   530  0009DE  ECA8  F004         	call	_InitVar	;wreg free
   531                           
   532                           ;init.c: 13: InitInterrupt();
   533  0009E2  EC5E  F005         	call	_InitInterrupt	;wreg free
   534  0009E6  0012               	return		;funcret
   535  0009E8                     __end_of_Init:
   536                           	opt stack 0
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           
   544 ;; *************** function _InitVar *****************
   545 ;; Defined at:
   546 ;;		line 88 in file "init.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;  c               1    0[BANK0 ] unsigned char 
   551 ;; Return value:  Size  Location     Type
   552 ;;		None               void
   553 ;; Registers used:
   554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   560 ;;      Params:         0       0       0       0
   561 ;;      Locals:         0       1       0       0
   562 ;;      Temps:          0       0       0       0
   563 ;;      Totals:         0       1       0       0
   564 ;;Total ram usage:        1 bytes
   565 ;; Hardware stack levels used:    1
   566 ;; Hardware stack levels required when called:    5
   567 ;; This function calls:
   568 ;;		Nothing
   569 ;; This function is called by:
   570 ;;		_Init
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text2
   575  000950                     __ptext2:
   576                           	opt stack 0
   577  000950                     _InitVar:
   578                           	opt stack 24
   579                           
   580                           ;init.c: 89: for(unsigned char c = 0; c < 10; c++) {
   581                           
   582                           ;incstack = 0
   583  000950  0E00               	movlw	0
   584  000952  0100               	movlb	0	; () banked
   585  000954  6F6A               	movwf	InitVar@c& (0+255),b
   586  000956                     l1598:
   587                           
   588                           ; BSR set to: 0
   589  000956  0E09               	movlw	9
   590  000958  0100               	movlb	0	; () banked
   591  00095A  656A               	cpfsgt	InitVar@c& (0+255),b
   592  00095C  D001               	goto	l1602
   593  00095E  0012               	return	
   594  000960                     l1602:
   595                           
   596                           ; BSR set to: 0
   597                           ;init.c: 90: Marker[c] = 0;
   598  000960  0100               	movlb	0	; () banked
   599  000962  516A               	movf	InitVar@c& (0+255),w,b
   600  000964  0D01               	mullw	1
   601  000966  0E60               	movlw	low _Marker
   602  000968  24F3               	addwf	prodl,w,c
   603  00096A  6ED9               	movwf	fsr2l,c
   604  00096C  0E00               	movlw	high _Marker
   605  00096E  20F4               	addwfc	prodh,w,c
   606  000970  6EDA               	movwf	fsr2h,c
   607  000972  0E00               	movlw	0
   608  000974  6EDF               	movwf	indf2,c
   609                           
   610                           ; BSR set to: 0
   611  000976  0100               	movlb	0	; () banked
   612  000978  2B6A               	incf	InitVar@c& (0+255),f,b
   613  00097A  D7ED               	goto	l1598
   614  00097C                     __end_of_InitVar:
   615                           	opt stack 0
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           prodh	equ	0xFF4
   621                           prodl	equ	0xFF3
   622                           postinc0	equ	0xFEE
   623                           wreg	equ	0xFE8
   624                           indf2	equ	0xFDF
   625                           fsr2h	equ	0xFDA
   626                           fsr2l	equ	0xFD9
   627                           
   628 ;; *************** function _InitTris *****************
   629 ;; Defined at:
   630 ;;		line 24 in file "init.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;		None               void
   637 ;; Registers used:
   638 ;;		wreg, status,2
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   644 ;;      Params:         0       0       0       0
   645 ;;      Locals:         0       0       0       0
   646 ;;      Temps:          0       0       0       0
   647 ;;      Totals:         0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    5
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_Init
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text3
   659  000A44                     __ptext3:
   660                           	opt stack 0
   661  000A44                     _InitTris:
   662                           	opt stack 24
   663                           
   664                           ;init.c: 25: TRISA = 0b00010101;
   665                           
   666                           ; BSR set to: 0
   667                           ;incstack = 0
   668  000A44  0E15               	movlw	21
   669  000A46  6E92               	movwf	3986,c	;volatile
   670                           
   671                           ;init.c: 26: TRISB = 0b00010001;
   672  000A48  0E11               	movlw	17
   673  000A4A  6E93               	movwf	3987,c	;volatile
   674                           
   675                           ;init.c: 27: TRISC = 0b00010100;
   676  000A4C  0E14               	movlw	20
   677  000A4E  6E94               	movwf	3988,c	;volatile
   678                           
   679                           ;init.c: 28: TRISD = 0b00000101;
   680  000A50  0E05               	movlw	5
   681  000A52  6E95               	movwf	3989,c	;volatile
   682                           
   683                           ;init.c: 29: TRISE = 0b00000101;
   684  000A54  0E05               	movlw	5
   685  000A56  6E96               	movwf	3990,c	;volatile
   686  000A58  0012               	return		;funcret
   687  000A5A                     __end_of_InitTris:
   688                           	opt stack 0
   689                           tblptru	equ	0xFF8
   690                           tblptrh	equ	0xFF7
   691                           tblptrl	equ	0xFF6
   692                           tablat	equ	0xFF5
   693                           prodh	equ	0xFF4
   694                           prodl	equ	0xFF3
   695                           postinc0	equ	0xFEE
   696                           wreg	equ	0xFE8
   697                           indf2	equ	0xFDF
   698                           fsr2h	equ	0xFDA
   699                           fsr2l	equ	0xFD9
   700                           
   701 ;; *************** function _InitTransmission *****************
   702 ;; Defined at:
   703 ;;		line 44 in file "init.c"
   704 ;; Parameters:    Size  Location     Type
   705 ;;		None
   706 ;; Auto vars:     Size  Location     Type
   707 ;;		None
   708 ;; Return value:  Size  Location     Type
   709 ;;		None               void
   710 ;; Registers used:
   711 ;;		wreg, status,2
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   717 ;;      Params:         0       0       0       0
   718 ;;      Locals:         0       0       0       0
   719 ;;      Temps:          0       0       0       0
   720 ;;      Totals:         0       0       0       0
   721 ;;Total ram usage:        0 bytes
   722 ;; Hardware stack levels used:    1
   723 ;; Hardware stack levels required when called:    5
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_Init
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text4
   732  000A28                     __ptext4:
   733                           	opt stack 0
   734  000A28                     _InitTransmission:
   735                           	opt stack 24
   736                           
   737                           ;init.c: 46: TXSTA1bits.SYNC = 0;
   738                           
   739                           ;incstack = 0
   740  000A28  98AC               	bcf	4012,4,c	;volatile
   741                           
   742                           ;init.c: 47: TXSTA1bits.BRGH = 1;
   743  000A2A  84AC               	bsf	4012,2,c	;volatile
   744                           
   745                           ;init.c: 48: BAUDCON1bits.BRG16 = 0;
   746  000A2C  96B8               	bcf	4024,3,c	;volatile
   747                           
   748                           ;init.c: 49: SPBRG1 = 25;
   749  000A2E  0E19               	movlw	25
   750  000A30  6EAF               	movwf	4015,c	;volatile
   751                           
   752                           ;init.c: 50: TRISCbits.RC6 = 1;
   753  000A32  8C94               	bsf	3988,6,c	;volatile
   754                           
   755                           ;init.c: 51: TRISCbits.RC7 = 1;
   756  000A34  8E94               	bsf	3988,7,c	;volatile
   757                           
   758                           ;init.c: 52: RCSTA1bits.SPEN = 1;
   759  000A36  8EAB               	bsf	4011,7,c	;volatile
   760                           
   761                           ;init.c: 53: TXSTA1bits.TX9 = 1;
   762  000A38  8CAC               	bsf	4012,6,c	;volatile
   763                           
   764                           ;init.c: 54: TXSTA1bits.TXEN = 1;
   765  000A3A  8AAC               	bsf	4012,5,c	;volatile
   766                           
   767                           ;init.c: 55: RCSTA1bits.RC9 = 1;
   768  000A3C  8CAB               	bsf	4011,6,c	;volatile
   769                           
   770                           ;init.c: 56: RCSTA1bits.CREN = 1;
   771  000A3E  88AB               	bsf	4011,4,c	;volatile
   772                           
   773                           ;init.c: 57: TRISCbits.RC6 = 0;
   774  000A40  9C94               	bcf	3988,6,c	;volatile
   775  000A42  0012               	return		;funcret
   776  000A44                     __end_of_InitTransmission:
   777                           	opt stack 0
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           prodh	equ	0xFF4
   783                           prodl	equ	0xFF3
   784                           postinc0	equ	0xFEE
   785                           wreg	equ	0xFE8
   786                           indf2	equ	0xFDF
   787                           fsr2h	equ	0xFDA
   788                           fsr2l	equ	0xFD9
   789                           
   790 ;; *************** function _InitPort *****************
   791 ;; Defined at:
   792 ;;		line 16 in file "init.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;		None               void
   799 ;; Registers used:
   800 ;;		wreg, status,2
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   806 ;;      Params:         0       0       0       0
   807 ;;      Locals:         0       0       0       0
   808 ;;      Temps:          0       0       0       0
   809 ;;      Totals:         0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    5
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_Init
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text5
   821  000A5A                     __ptext5:
   822                           	opt stack 0
   823  000A5A                     _InitPort:
   824                           	opt stack 24
   825                           
   826                           ;init.c: 17: PORTA = 0b00000000;
   827                           
   828                           ;incstack = 0
   829  000A5A  0E00               	movlw	0
   830  000A5C  6E80               	movwf	3968,c	;volatile
   831                           
   832                           ;init.c: 18: PORTB = 0b00000000;
   833  000A5E  0E00               	movlw	0
   834  000A60  6E81               	movwf	3969,c	;volatile
   835                           
   836                           ;init.c: 19: PORTC = 0b00000000;
   837  000A62  0E00               	movlw	0
   838  000A64  6E82               	movwf	3970,c	;volatile
   839                           
   840                           ;init.c: 20: PORTD = 0b00000000;
   841  000A66  0E00               	movlw	0
   842  000A68  6E83               	movwf	3971,c	;volatile
   843                           
   844                           ;init.c: 21: PORTE = 0b00000000;
   845  000A6A  0E00               	movlw	0
   846  000A6C  6E84               	movwf	3972,c	;volatile
   847  000A6E  0012               	return		;funcret
   848  000A70                     __end_of_InitPort:
   849                           	opt stack 0
   850                           tblptru	equ	0xFF8
   851                           tblptrh	equ	0xFF7
   852                           tblptrl	equ	0xFF6
   853                           tablat	equ	0xFF5
   854                           prodh	equ	0xFF4
   855                           prodl	equ	0xFF3
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           indf2	equ	0xFDF
   859                           fsr2h	equ	0xFDA
   860                           fsr2l	equ	0xFD9
   861                           
   862 ;; *************** function _InitMiscellaneous *****************
   863 ;; Defined at:
   864 ;;		line 40 in file "init.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;		None               void
   871 ;; Registers used:
   872 ;;		wreg, status,2
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   878 ;;      Params:         0       0       0       0
   879 ;;      Locals:         0       0       0       0
   880 ;;      Temps:          0       0       0       0
   881 ;;      Totals:         0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    5
   885 ;; This function calls:
   886 ;;		Nothing
   887 ;; This function is called by:
   888 ;;		_Init
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text6
   893  000AC6                     __ptext6:
   894                           	opt stack 0
   895  000AC6                     _InitMiscellaneous:
   896                           	opt stack 24
   897                           
   898                           ;init.c: 41: OSCCON = 0b01010011;
   899                           
   900                           ;incstack = 0
   901  000AC6  0E53               	movlw	83
   902  000AC8  6ED3               	movwf	4051,c	;volatile
   903  000ACA  0012               	return		;funcret
   904  000ACC                     __end_of_InitMiscellaneous:
   905                           	opt stack 0
   906                           tblptru	equ	0xFF8
   907                           tblptrh	equ	0xFF7
   908                           tblptrl	equ	0xFF6
   909                           tablat	equ	0xFF5
   910                           prodh	equ	0xFF4
   911                           prodl	equ	0xFF3
   912                           postinc0	equ	0xFEE
   913                           wreg	equ	0xFE8
   914                           indf2	equ	0xFDF
   915                           fsr2h	equ	0xFDA
   916                           fsr2l	equ	0xFD9
   917                           
   918 ;; *************** function _InitInterrupt *****************
   919 ;; Defined at:
   920 ;;		line 81 in file "init.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;		None
   923 ;; Auto vars:     Size  Location     Type
   924 ;;		None
   925 ;; Return value:  Size  Location     Type
   926 ;;		None               void
   927 ;; Registers used:
   928 ;;		None
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   934 ;;      Params:         0       0       0       0
   935 ;;      Locals:         0       0       0       0
   936 ;;      Temps:          0       0       0       0
   937 ;;      Totals:         0       0       0       0
   938 ;;Total ram usage:        0 bytes
   939 ;; Hardware stack levels used:    1
   940 ;; Hardware stack levels required when called:    5
   941 ;; This function calls:
   942 ;;		Nothing
   943 ;; This function is called by:
   944 ;;		_Init
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           	psect	text7
   949  000ABC                     __ptext7:
   950                           	opt stack 0
   951  000ABC                     _InitInterrupt:
   952                           	opt stack 24
   953                           
   954                           ;init.c: 82: INTCONbits.GIE = 1;
   955                           
   956                           ;incstack = 0
   957  000ABC  8EF2               	bsf	intcon,7,c	;volatile
   958                           
   959                           ;init.c: 83: INTCONbits.PEIE = 1;
   960  000ABE  8CF2               	bsf	intcon,6,c	;volatile
   961                           
   962                           ;init.c: 84: PIE1bits.RCIE = 1;
   963  000AC0  8A9D               	bsf	3997,5,c	;volatile
   964                           
   965                           ;init.c: 85: PIE1bits.CCP1IE = 1;
   966  000AC2  849D               	bsf	3997,2,c	;volatile
   967  000AC4  0012               	return		;funcret
   968  000AC6                     __end_of_InitInterrupt:
   969                           	opt stack 0
   970                           tblptru	equ	0xFF8
   971                           tblptrh	equ	0xFF7
   972                           tblptrl	equ	0xFF6
   973                           tablat	equ	0xFF5
   974                           prodh	equ	0xFF4
   975                           prodl	equ	0xFF3
   976                           intcon	equ	0xFF2
   977                           postinc0	equ	0xFEE
   978                           wreg	equ	0xFE8
   979                           indf2	equ	0xFDF
   980                           fsr2h	equ	0xFDA
   981                           fsr2l	equ	0xFD9
   982                           
   983 ;; *************** function _InitAnsel *****************
   984 ;; Defined at:
   985 ;;		line 32 in file "init.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;		None
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;		None               void
   992 ;; Registers used:
   993 ;;		wreg, status,2
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
   999 ;;      Params:         0       0       0       0
  1000 ;;      Locals:         0       0       0       0
  1001 ;;      Temps:          0       0       0       0
  1002 ;;      Totals:         0       0       0       0
  1003 ;;Total ram usage:        0 bytes
  1004 ;; Hardware stack levels used:    1
  1005 ;; Hardware stack levels required when called:    5
  1006 ;; This function calls:
  1007 ;;		Nothing
  1008 ;; This function is called by:
  1009 ;;		_Init
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text8
  1014  0009E8                     __ptext8:
  1015                           	opt stack 0
  1016  0009E8                     _InitAnsel:
  1017                           	opt stack 24
  1018                           
  1019                           ;init.c: 33: ANSELA = 0b00000000;
  1020                           
  1021                           ;incstack = 0
  1022  0009E8  0E00               	movlw	0
  1023  0009EA  010F               	movlb	15	; () banked
  1024  0009EC  6F38               	movwf	56,b	;volatile
  1025                           
  1026                           ;init.c: 34: ANSELB = 0b00000001;
  1027  0009EE  0E01               	movlw	1
  1028  0009F0  010F               	movlb	15	; () banked
  1029  0009F2  6F39               	movwf	57,b	;volatile
  1030                           
  1031                           ;init.c: 35: ANSELC = 0b00000000;
  1032  0009F4  0E00               	movlw	0
  1033  0009F6  010F               	movlb	15	; () banked
  1034  0009F8  6F3A               	movwf	58,b	;volatile
  1035                           
  1036                           ;init.c: 36: ANSELD = 0b00000000;
  1037  0009FA  0E00               	movlw	0
  1038  0009FC  010F               	movlb	15	; () banked
  1039  0009FE  6F3B               	movwf	59,b	;volatile
  1040                           
  1041                           ;init.c: 37: ANSELE = 0b00000000;
  1042  000A00  0E00               	movlw	0
  1043  000A02  010F               	movlb	15	; () banked
  1044  000A04  6F3C               	movwf	60,b	;volatile
  1045                           
  1046                           ; BSR set to: 15
  1047  000A06  0012               	return		;funcret
  1048  000A08                     __end_of_InitAnsel:
  1049                           	opt stack 0
  1050                           tblptru	equ	0xFF8
  1051                           tblptrh	equ	0xFF7
  1052                           tblptrl	equ	0xFF6
  1053                           tablat	equ	0xFF5
  1054                           prodh	equ	0xFF4
  1055                           prodl	equ	0xFF3
  1056                           intcon	equ	0xFF2
  1057                           postinc0	equ	0xFEE
  1058                           wreg	equ	0xFE8
  1059                           indf2	equ	0xFDF
  1060                           fsr2h	equ	0xFDA
  1061                           fsr2l	equ	0xFD9
  1062                           
  1063 ;; *************** function _InitADC *****************
  1064 ;; Defined at:
  1065 ;;		line 60 in file "init.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;		None               void
  1072 ;; Registers used:
  1073 ;;		wreg, status,2
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1079 ;;      Params:         0       0       0       0
  1080 ;;      Locals:         0       0       0       0
  1081 ;;      Temps:          0       0       0       0
  1082 ;;      Totals:         0       0       0       0
  1083 ;;Total ram usage:        0 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    5
  1086 ;; This function calls:
  1087 ;;		Nothing
  1088 ;; This function is called by:
  1089 ;;		_Init
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text9
  1094  00097C                     __ptext9:
  1095                           	opt stack 0
  1096  00097C                     _InitADC:
  1097                           	opt stack 24
  1098                           
  1099                           ;init.c: 62: VREFCON0 = 0b10100000;
  1100                           
  1101                           ; BSR set to: 15
  1102                           ;incstack = 0
  1103  00097C  0EA0               	movlw	160
  1104  00097E  010F               	movlb	15	; () banked
  1105  000980  6F42               	movwf	66,b	;volatile
  1106                           
  1107                           ;init.c: 64: VREFCON1 = 0b10001000;
  1108  000982  0E88               	movlw	136
  1109  000984  010F               	movlb	15	; () banked
  1110  000986  6F41               	movwf	65,b	;volatile
  1111                           
  1112                           ; BSR set to: 15
  1113                           ;init.c: 65: VREFCON2bits.DACR = 16;
  1114  000988  010F               	movlb	15	; () banked
  1115  00098A  9140               	bcf	64,0,b	;volatile
  1116  00098C  9340               	bcf	64,1,b	;volatile
  1117  00098E  9540               	bcf	64,2,b	;volatile
  1118  000990  9740               	bcf	64,3,b	;volatile
  1119  000992  8940               	bsf	64,4,b	;volatile
  1120                           
  1121                           ;init.c: 67: ADCON1 = 0b00000000;
  1122  000994  0E00               	movlw	0
  1123  000996  6EC1               	movwf	4033,c	;volatile
  1124                           
  1125                           ;init.c: 68: ADCON2 = 0b00000011;
  1126  000998  0E03               	movlw	3
  1127  00099A  6EC0               	movwf	4032,c	;volatile
  1128                           
  1129                           ;init.c: 69: ADCON0 = 0b01111001;
  1130  00099C  0E79               	movlw	121
  1131  00099E  6EC2               	movwf	4034,c	;volatile
  1132                           
  1133                           ; BSR set to: 15
  1134  0009A0  0012               	return		;funcret
  1135  0009A2                     __end_of_InitADC:
  1136                           	opt stack 0
  1137                           tblptru	equ	0xFF8
  1138                           tblptrh	equ	0xFF7
  1139                           tblptrl	equ	0xFF6
  1140                           tablat	equ	0xFF5
  1141                           prodh	equ	0xFF4
  1142                           prodl	equ	0xFF3
  1143                           intcon	equ	0xFF2
  1144                           postinc0	equ	0xFEE
  1145                           wreg	equ	0xFE8
  1146                           indf2	equ	0xFDF
  1147                           fsr2h	equ	0xFDA
  1148                           fsr2l	equ	0xFD9
  1149                           
  1150 ;; *************** function _Check_Ignition *****************
  1151 ;; Defined at:
  1152 ;;		line 156 in file "ignition.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  c               1    2[BANK0 ] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;		None               void
  1159 ;; Registers used:
  1160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1166 ;;      Params:         0       0       0       0
  1167 ;;      Locals:         0       1       0       0
  1168 ;;      Temps:          0       1       0       0
  1169 ;;      Totals:         0       2       0       0
  1170 ;;Total ram usage:        2 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    6
  1173 ;; This function calls:
  1174 ;;		_Disable_Port
  1175 ;;		_Ignite_Port
  1176 ;;		_On_Timer
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text10
  1183  0008D4                     __ptext10:
  1184                           	opt stack 0
  1185  0008D4                     _Check_Ignition:
  1186                           	opt stack 24
  1187                           
  1188                           ;ignition.c: 157: for(unsigned char c = 0; c < 10; c++) {
  1189                           
  1190                           ; BSR set to: 15
  1191                           ;incstack = 0
  1192  0008D4  0E00               	movlw	0
  1193  0008D6  0100               	movlb	0	; () banked
  1194  0008D8  6F6C               	movwf	Check_Ignition@c& (0+255),b
  1195  0008DA                     l1702:
  1196                           
  1197                           ; BSR set to: 0
  1198  0008DA  0E09               	movlw	9
  1199  0008DC  0100               	movlb	0	; () banked
  1200  0008DE  656C               	cpfsgt	Check_Ignition@c& (0+255),b
  1201  0008E0  D001               	goto	l1706
  1202  0008E2  0012               	return	
  1203  0008E4                     l1706:
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;ignition.c: 158: if(Marker[c] == 1) {
  1207  0008E4  0100               	movlb	0	; () banked
  1208  0008E6  516C               	movf	Check_Ignition@c& (0+255),w,b
  1209  0008E8  0D01               	mullw	1
  1210  0008EA  0E60               	movlw	low _Marker
  1211  0008EC  24F3               	addwf	prodl,w,c
  1212  0008EE  6ED9               	movwf	fsr2l,c
  1213  0008F0  0E00               	movlw	high _Marker
  1214  0008F2  20F4               	addwfc	prodh,w,c
  1215  0008F4  6EDA               	movwf	fsr2h,c
  1216  0008F6  04DE               	decf	postinc2,w,c
  1217  0008F8  A4D8               	btfss	status,2,c
  1218  0008FA  D007               	goto	l1712
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;ignition.c: 159: Ignite_Port(c);
  1222  0008FC  0100               	movlb	0	; () banked
  1223  0008FE  516C               	movf	Check_Ignition@c& (0+255),w,b
  1224  000900  ECD7  F003         	call	_Ignite_Port
  1225                           
  1226                           ;ignition.c: 160: On_Timer();
  1227  000904  EC58  F005         	call	_On_Timer	;wreg free
  1228                           
  1229                           ;ignition.c: 161: } else {
  1230  000908  D004               	goto	l1714
  1231  00090A                     l1712:
  1232                           
  1233                           ;ignition.c: 162: Disable_Port(c);
  1234  00090A  0100               	movlb	0	; () banked
  1235  00090C  516C               	movf	Check_Ignition@c& (0+255),w,b
  1236  00090E  EC0F  F004         	call	_Disable_Port
  1237  000912                     l1714:
  1238  000912  0100               	movlb	0	; () banked
  1239  000914  2B6C               	incf	Check_Ignition@c& (0+255),f,b
  1240  000916  D7E1               	goto	l1702
  1241  000918                     __end_of_Check_Ignition:
  1242                           	opt stack 0
  1243                           tblptru	equ	0xFF8
  1244                           tblptrh	equ	0xFF7
  1245                           tblptrl	equ	0xFF6
  1246                           tablat	equ	0xFF5
  1247                           prodh	equ	0xFF4
  1248                           prodl	equ	0xFF3
  1249                           intcon	equ	0xFF2
  1250                           postinc0	equ	0xFEE
  1251                           wreg	equ	0xFE8
  1252                           indf2	equ	0xFDF
  1253                           postinc2	equ	0xFDE
  1254                           fsr2h	equ	0xFDA
  1255                           fsr2l	equ	0xFD9
  1256                           status	equ	0xFD8
  1257                           
  1258 ;; *************** function _On_Timer *****************
  1259 ;; Defined at:
  1260 ;;		line 5 in file "ignition.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;		None               void
  1267 ;; Registers used:
  1268 ;;		wreg, status,2
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1274 ;;      Params:         0       0       0       0
  1275 ;;      Locals:         0       0       0       0
  1276 ;;      Temps:          0       0       0       0
  1277 ;;      Totals:         0       0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    5
  1281 ;; This function calls:
  1282 ;;		Nothing
  1283 ;; This function is called by:
  1284 ;;		_Check_Ignition
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text11
  1289  000AB0                     __ptext11:
  1290                           	opt stack 0
  1291  000AB0                     _On_Timer:
  1292                           	opt stack 24
  1293                           
  1294                           ;ignition.c: 6: TMR1L = 0;
  1295                           
  1296                           ; BSR set to: 0
  1297                           ;incstack = 0
  1298  000AB0  0E00               	movlw	0
  1299  000AB2  6ECE               	movwf	4046,c	;volatile
  1300                           
  1301                           ;ignition.c: 7: TMR1H = 0;
  1302  000AB4  0E00               	movlw	0
  1303  000AB6  6ECF               	movwf	4047,c	;volatile
  1304                           
  1305                           ;ignition.c: 8: T1CONbits.TMR1ON = 1;
  1306  000AB8  80CD               	bsf	4045,0,c	;volatile
  1307  000ABA  0012               	return		;funcret
  1308  000ABC                     __end_of_On_Timer:
  1309                           	opt stack 0
  1310                           tblptru	equ	0xFF8
  1311                           tblptrh	equ	0xFF7
  1312                           tblptrl	equ	0xFF6
  1313                           tablat	equ	0xFF5
  1314                           prodh	equ	0xFF4
  1315                           prodl	equ	0xFF3
  1316                           intcon	equ	0xFF2
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           indf2	equ	0xFDF
  1320                           postinc2	equ	0xFDE
  1321                           fsr2h	equ	0xFDA
  1322                           fsr2l	equ	0xFD9
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function _Ignite_Port *****************
  1326 ;; Defined at:
  1327 ;;		line 86 in file "ignition.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  ignite_numbe    1    wreg     unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  ignite_numbe    1    0[BANK0 ] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;		None               void
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1341 ;;      Params:         0       0       0       0
  1342 ;;      Locals:         0       1       0       0
  1343 ;;      Temps:          0       0       0       0
  1344 ;;      Totals:         0       1       0       0
  1345 ;;Total ram usage:        1 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    5
  1348 ;; This function calls:
  1349 ;;		Nothing
  1350 ;; This function is called by:
  1351 ;;		_Check_Ignition
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text12
  1356  0007AE                     __ptext12:
  1357                           	opt stack 0
  1358  0007AE                     _Ignite_Port:
  1359                           	opt stack 24
  1360                           
  1361                           ;incstack = 0
  1362                           ;Ignite_Port@ignite_number stored from wreg
  1363  0007AE  0100               	movlb	0	; () banked
  1364  0007B0  6F6A               	movwf	Ignite_Port@ignite_number& (0+255),b
  1365                           
  1366                           ;ignition.c: 87: switch(ignite_number) {
  1367  0007B2  D014               	goto	l1664
  1368  0007B4                     l296:
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;ignition.c: 89: PORTCbits.RC5 = 1;
  1372  0007B4  8A82               	bsf	3970,5,c	;volatile
  1373                           
  1374                           ;ignition.c: 90: break;
  1375  0007B6  0012               	return	
  1376  0007B8                     l298:
  1377                           
  1378                           ; BSR set to: 0
  1379                           ;ignition.c: 92: PORTDbits.RD3 = 1;
  1380  0007B8  8683               	bsf	3971,3,c	;volatile
  1381                           
  1382                           ;ignition.c: 93: break;
  1383  0007BA  0012               	return	
  1384  0007BC                     l299:
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;ignition.c: 95: PORTDbits.RD1 = 1;
  1388  0007BC  8283               	bsf	3971,1,c	;volatile
  1389                           
  1390                           ;ignition.c: 96: break;
  1391  0007BE  0012               	return	
  1392  0007C0                     l300:
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;ignition.c: 98: PORTCbits.RC3 = 1;
  1396  0007C0  8682               	bsf	3970,3,c	;volatile
  1397                           
  1398                           ;ignition.c: 99: break;
  1399  0007C2  0012               	return	
  1400  0007C4                     l301:
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;ignition.c: 101: PORTCbits.RC1 = 1;
  1404  0007C4  8282               	bsf	3970,1,c	;volatile
  1405                           
  1406                           ;ignition.c: 102: break;
  1407  0007C6  0012               	return	
  1408  0007C8                     l302:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;ignition.c: 104: PORTEbits.RE1 = 1;
  1412  0007C8  8284               	bsf	3972,1,c	;volatile
  1413                           
  1414                           ;ignition.c: 105: break;
  1415  0007CA  0012               	return	
  1416  0007CC                     l303:
  1417                           
  1418                           ; BSR set to: 0
  1419                           ;ignition.c: 107: PORTAbits.RA5 = 1;
  1420  0007CC  8A80               	bsf	3968,5,c	;volatile
  1421                           
  1422                           ;ignition.c: 108: break;
  1423  0007CE  0012               	return	
  1424  0007D0                     l304:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;ignition.c: 110: PORTBbits.RB5 = 1;
  1428  0007D0  8A81               	bsf	3969,5,c	;volatile
  1429                           
  1430                           ;ignition.c: 111: break;
  1431  0007D2  0012               	return	
  1432  0007D4                     l305:
  1433                           
  1434                           ; BSR set to: 0
  1435                           ;ignition.c: 113: PORTAbits.RA3 = 1;
  1436  0007D4  8680               	bsf	3968,3,c	;volatile
  1437                           
  1438                           ;ignition.c: 114: break;
  1439  0007D6  0012               	return	
  1440  0007D8                     l306:
  1441                           
  1442                           ; BSR set to: 0
  1443                           ;ignition.c: 116: PORTAbits.RA1 = 1;
  1444  0007D8  8280               	bsf	3968,1,c	;volatile
  1445                           
  1446                           ; BSR set to: 0
  1447                           ;ignition.c: 118: }
  1448                           
  1449                           ;ignition.c: 117: break;
  1450  0007DA  0012               	return	
  1451  0007DC                     l1664:
  1452  0007DC  0100               	movlb	0	; () banked
  1453  0007DE  516A               	movf	Ignite_Port@ignite_number& (0+255),w,b
  1454                           
  1455                           ; Switch size 1, requested type "space"
  1456                           ; Number of cases is 10, Range of values is 0 to 9
  1457                           ; switch strategies available:
  1458                           ; Name         Instructions Cycles
  1459                           ; simple_byte           31    16 (average)
  1460                           ;	Chosen strategy is simple_byte
  1461  0007E0  0A00               	xorlw	0	; case 0
  1462  0007E2  B4D8               	btfsc	status,2,c
  1463  0007E4  D7E7               	goto	l296
  1464  0007E6  0A01               	xorlw	1	; case 1
  1465  0007E8  B4D8               	btfsc	status,2,c
  1466  0007EA  D7E6               	goto	l298
  1467  0007EC  0A03               	xorlw	3	; case 2
  1468  0007EE  B4D8               	btfsc	status,2,c
  1469  0007F0  D7E5               	goto	l299
  1470  0007F2  0A01               	xorlw	1	; case 3
  1471  0007F4  B4D8               	btfsc	status,2,c
  1472  0007F6  D7E4               	goto	l300
  1473  0007F8  0A07               	xorlw	7	; case 4
  1474  0007FA  B4D8               	btfsc	status,2,c
  1475  0007FC  D7E3               	goto	l301
  1476  0007FE  0A01               	xorlw	1	; case 5
  1477  000800  B4D8               	btfsc	status,2,c
  1478  000802  D7E2               	goto	l302
  1479  000804  0A03               	xorlw	3	; case 6
  1480  000806  B4D8               	btfsc	status,2,c
  1481  000808  D7E1               	goto	l303
  1482  00080A  0A01               	xorlw	1	; case 7
  1483  00080C  B4D8               	btfsc	status,2,c
  1484  00080E  D7E0               	goto	l304
  1485  000810  0A0F               	xorlw	15	; case 8
  1486  000812  B4D8               	btfsc	status,2,c
  1487  000814  D7DF               	goto	l305
  1488  000816  0A01               	xorlw	1	; case 9
  1489  000818  A4D8               	btfss	status,2,c
  1490  00081A  0012               	return	
  1491  00081C  D7DD               	goto	l306
  1492  00081E                     __end_of_Ignite_Port:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           prodh	equ	0xFF4
  1499                           prodl	equ	0xFF3
  1500                           intcon	equ	0xFF2
  1501                           postinc0	equ	0xFEE
  1502                           wreg	equ	0xFE8
  1503                           indf2	equ	0xFDF
  1504                           postinc2	equ	0xFDE
  1505                           fsr2h	equ	0xFDA
  1506                           fsr2l	equ	0xFD9
  1507                           status	equ	0xFD8
  1508                           
  1509 ;; *************** function _Disable_Port *****************
  1510 ;; Defined at:
  1511 ;;		line 121 in file "ignition.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  disable_numb    1    wreg     unsigned char 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  disable_numb    1    0[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;		None               void
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1525 ;;      Params:         0       0       0       0
  1526 ;;      Locals:         0       1       0       0
  1527 ;;      Temps:          0       0       0       0
  1528 ;;      Totals:         0       1       0       0
  1529 ;;Total ram usage:        1 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    5
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_Check_Ignition
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text13
  1540  00081E                     __ptext13:
  1541                           	opt stack 0
  1542  00081E                     _Disable_Port:
  1543                           	opt stack 24
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;incstack = 0
  1547                           ;Disable_Port@disable_number stored from wreg
  1548  00081E  0100               	movlb	0	; () banked
  1549  000820  6F6A               	movwf	Disable_Port@disable_number& (0+255),b
  1550                           
  1551                           ;ignition.c: 122: switch(disable_number) {
  1552  000822  D014               	goto	l1670
  1553  000824                     l311:
  1554                           
  1555                           ; BSR set to: 0
  1556                           ;ignition.c: 124: PORTCbits.RC5 = 0;
  1557  000824  9A82               	bcf	3970,5,c	;volatile
  1558                           
  1559                           ;ignition.c: 125: break;
  1560  000826  0012               	return	
  1561  000828                     l313:
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;ignition.c: 127: PORTDbits.RD3 = 0;
  1565  000828  9683               	bcf	3971,3,c	;volatile
  1566                           
  1567                           ;ignition.c: 128: break;
  1568  00082A  0012               	return	
  1569  00082C                     l314:
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;ignition.c: 130: PORTDbits.RD1 = 0;
  1573  00082C  9283               	bcf	3971,1,c	;volatile
  1574                           
  1575                           ;ignition.c: 131: break;
  1576  00082E  0012               	return	
  1577  000830                     l315:
  1578                           
  1579                           ; BSR set to: 0
  1580                           ;ignition.c: 133: PORTCbits.RC3 = 0;
  1581  000830  9682               	bcf	3970,3,c	;volatile
  1582                           
  1583                           ;ignition.c: 134: break;
  1584  000832  0012               	return	
  1585  000834                     l316:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;ignition.c: 136: PORTCbits.RC1 = 0;
  1589  000834  9282               	bcf	3970,1,c	;volatile
  1590                           
  1591                           ;ignition.c: 137: break;
  1592  000836  0012               	return	
  1593  000838                     l317:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;ignition.c: 139: PORTEbits.RE1 = 0;
  1597  000838  9284               	bcf	3972,1,c	;volatile
  1598                           
  1599                           ;ignition.c: 140: break;
  1600  00083A  0012               	return	
  1601  00083C                     l318:
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;ignition.c: 142: PORTAbits.RA5 = 0;
  1605  00083C  9A80               	bcf	3968,5,c	;volatile
  1606                           
  1607                           ;ignition.c: 143: break;
  1608  00083E  0012               	return	
  1609  000840                     l319:
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;ignition.c: 145: PORTBbits.RB5 = 0;
  1613  000840  9A81               	bcf	3969,5,c	;volatile
  1614                           
  1615                           ;ignition.c: 146: break;
  1616  000842  0012               	return	
  1617  000844                     l320:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;ignition.c: 148: PORTAbits.RA3 = 0;
  1621  000844  9680               	bcf	3968,3,c	;volatile
  1622                           
  1623                           ;ignition.c: 149: break;
  1624  000846  0012               	return	
  1625  000848                     l321:
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;ignition.c: 151: PORTAbits.RA1 = 0;
  1629  000848  9280               	bcf	3968,1,c	;volatile
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;ignition.c: 153: }
  1633                           
  1634                           ;ignition.c: 152: break;
  1635  00084A  0012               	return	
  1636  00084C                     l1670:
  1637  00084C  0100               	movlb	0	; () banked
  1638  00084E  516A               	movf	Disable_Port@disable_number& (0+255),w,b
  1639                           
  1640                           ; Switch size 1, requested type "space"
  1641                           ; Number of cases is 10, Range of values is 0 to 9
  1642                           ; switch strategies available:
  1643                           ; Name         Instructions Cycles
  1644                           ; simple_byte           31    16 (average)
  1645                           ;	Chosen strategy is simple_byte
  1646  000850  0A00               	xorlw	0	; case 0
  1647  000852  B4D8               	btfsc	status,2,c
  1648  000854  D7E7               	goto	l311
  1649  000856  0A01               	xorlw	1	; case 1
  1650  000858  B4D8               	btfsc	status,2,c
  1651  00085A  D7E6               	goto	l313
  1652  00085C  0A03               	xorlw	3	; case 2
  1653  00085E  B4D8               	btfsc	status,2,c
  1654  000860  D7E5               	goto	l314
  1655  000862  0A01               	xorlw	1	; case 3
  1656  000864  B4D8               	btfsc	status,2,c
  1657  000866  D7E4               	goto	l315
  1658  000868  0A07               	xorlw	7	; case 4
  1659  00086A  B4D8               	btfsc	status,2,c
  1660  00086C  D7E3               	goto	l316
  1661  00086E  0A01               	xorlw	1	; case 5
  1662  000870  B4D8               	btfsc	status,2,c
  1663  000872  D7E2               	goto	l317
  1664  000874  0A03               	xorlw	3	; case 6
  1665  000876  B4D8               	btfsc	status,2,c
  1666  000878  D7E1               	goto	l318
  1667  00087A  0A01               	xorlw	1	; case 7
  1668  00087C  B4D8               	btfsc	status,2,c
  1669  00087E  D7E0               	goto	l319
  1670  000880  0A0F               	xorlw	15	; case 8
  1671  000882  B4D8               	btfsc	status,2,c
  1672  000884  D7DF               	goto	l320
  1673  000886  0A01               	xorlw	1	; case 9
  1674  000888  A4D8               	btfss	status,2,c
  1675  00088A  0012               	return	
  1676  00088C  D7DD               	goto	l321
  1677  00088E                     __end_of_Disable_Port:
  1678                           	opt stack 0
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           prodh	equ	0xFF4
  1684                           prodl	equ	0xFF3
  1685                           intcon	equ	0xFF2
  1686                           postinc0	equ	0xFEE
  1687                           wreg	equ	0xFE8
  1688                           indf2	equ	0xFDF
  1689                           postinc2	equ	0xFDE
  1690                           fsr2h	equ	0xFDA
  1691                           fsr2l	equ	0xFD9
  1692                           status	equ	0xFD8
  1693                           
  1694 ;; *************** function _Isr *****************
  1695 ;; Defined at:
  1696 ;;		line 3 in file "interrupt.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  c               1   68[COMRAM] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;		None               void
  1703 ;; Registers used:
  1704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1710 ;;      Params:         0       0       0       0
  1711 ;;      Locals:         1       0       0       0
  1712 ;;      Temps:         14       0       0       0
  1713 ;;      Totals:        15       0       0       0
  1714 ;;Total ram usage:       15 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    4
  1717 ;; This function calls:
  1718 ;;		_Evaluate_Reception
  1719 ;;		_Receive
  1720 ;;		_Receive_Dump
  1721 ;; This function is called by:
  1722 ;;		Interrupt level 2
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	intcode
  1727  000008                     __pintcode:
  1728                           	opt stack 0
  1729  000008                     _Isr:
  1730                           	opt stack 24
  1731                           
  1732                           ; BSR set to: 0
  1733                           ;incstack = 0
  1734  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1735  00000A  CFFA F037          	movff	pclath,??_Isr
  1736  00000E  CFFB F038          	movff	pclatu,??_Isr+1
  1737  000012  CFE9 F039          	movff	fsr0l,??_Isr+2
  1738  000016  CFEA F03A          	movff	fsr0h,??_Isr+3
  1739  00001A  CFE1 F03B          	movff	fsr1l,??_Isr+4
  1740  00001E  CFE2 F03C          	movff	fsr1h,??_Isr+5
  1741  000022  CFD9 F03D          	movff	fsr2l,??_Isr+6
  1742  000026  CFDA F03E          	movff	fsr2h,??_Isr+7
  1743  00002A  CFF3 F03F          	movff	prodl,??_Isr+8
  1744  00002E  CFF4 F040          	movff	prodh,??_Isr+9
  1745  000032  CFF6 F041          	movff	tblptrl,??_Isr+10
  1746  000036  CFF7 F042          	movff	tblptrh,??_Isr+11
  1747  00003A  CFF8 F043          	movff	tblptru,??_Isr+12
  1748  00003E  CFF5 F044          	movff	tablat,??_Isr+13
  1749                           
  1750                           ;interrupt.c: 4: __nop();
  1751  000042  F000               	nop	
  1752                           
  1753                           ;interrupt.c: 5: if(PIR1bits.RCIF == 1) {
  1754  000044  AA9E               	btfss	3998,5,c	;volatile
  1755  000046  D030               	goto	i2l1770
  1756                           
  1757                           ;interrupt.c: 6: if(RCSTA1bits.RX9D == 1) {
  1758  000048  A0AB               	btfss	4011,0,c	;volatile
  1759  00004A  D015               	goto	i2l384
  1760                           
  1761                           ;interrupt.c: 7: receive_counter = 0;
  1762  00004C  0E00               	movlw	0
  1763  00004E  6E4A               	movwf	_receive_counter,c
  1764                           
  1765                           ;interrupt.c: 9: received[receive_counter] =
  1766                           ;interrupt.c: 10: Receive();
  1767  000050  504A               	movf	_receive_counter,w,c
  1768  000052  0D01               	mullw	1
  1769  000054  0E46               	movlw	low _received
  1770  000056  24F3               	addwf	prodl,w,c
  1771  000058  6ED9               	movwf	fsr2l,c
  1772  00005A  0E00               	movlw	high _received
  1773  00005C  20F4               	addwfc	prodh,w,c
  1774  00005E  6EDA               	movwf	fsr2h,c
  1775  000060  EC4B  F005         	call	_Receive	;wreg free
  1776  000064  6EDF               	movwf	indf2,c
  1777                           
  1778                           ;interrupt.c: 11: receive_counter++;
  1779  000066  2A4A               	incf	_receive_counter,f,c
  1780                           
  1781                           ;interrupt.c: 13: if(received[0] == 0x00) {
  1782  000068  5046               	movf	_received,w,c
  1783  00006A  A4D8               	btfss	status,2,c
  1784  00006C  D002               	goto	i2l385
  1785                           
  1786                           ;interrupt.c: 14: slave_addressed = 1;
  1787  00006E  824B               	bsf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1788                           
  1789                           ;interrupt.c: 15: } else {
  1790  000070  D01B               	goto	i2l1770
  1791  000072                     i2l385:
  1792                           
  1793                           ;interrupt.c: 16: slave_addressed = 0;
  1794  000072  924B               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1795                           
  1796                           ;interrupt.c: 17: }
  1797                           ;interrupt.c: 18: } else if(slave_addressed == 1) {
  1798  000074  D019               	goto	i2l1770
  1799  000076                     i2l384:
  1800  000076  A24B               	btfss	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1801  000078  D015               	goto	i2l1768
  1802                           
  1803                           ;interrupt.c: 19: received[receive_counter] =
  1804                           ;interrupt.c: 20: Receive();
  1805  00007A  504A               	movf	_receive_counter,w,c
  1806  00007C  0D01               	mullw	1
  1807  00007E  0E46               	movlw	low _received
  1808  000080  24F3               	addwf	prodl,w,c
  1809  000082  6ED9               	movwf	fsr2l,c
  1810  000084  0E00               	movlw	high _received
  1811  000086  20F4               	addwfc	prodh,w,c
  1812  000088  6EDA               	movwf	fsr2h,c
  1813  00008A  EC4B  F005         	call	_Receive	;wreg free
  1814  00008E  6EDF               	movwf	indf2,c
  1815                           
  1816                           ;interrupt.c: 21: receive_counter++;
  1817  000090  2A4A               	incf	_receive_counter,f,c
  1818                           
  1819                           ;interrupt.c: 23: if(receive_counter > 3) {
  1820  000092  0E03               	movlw	3
  1821  000094  644A               	cpfsgt	_receive_counter,c
  1822  000096  D008               	goto	i2l1770
  1823                           
  1824                           ;interrupt.c: 24: receive_counter = 0;
  1825  000098  0E00               	movlw	0
  1826  00009A  6E4A               	movwf	_receive_counter,c
  1827                           
  1828                           ;interrupt.c: 25: slave_addressed = 0;
  1829  00009C  924B               	bcf	_slave_addressed/(0+8),_slave_addressed& (0+7),c
  1830                           
  1831                           ;interrupt.c: 27: Evaluate_Reception();
  1832  00009E  EC04  F005         	call	_Evaluate_Reception	;wreg free
  1833                           
  1834                           ;interrupt.c: 28: }
  1835                           ;interrupt.c: 29: } else {
  1836  0000A2  D002               	goto	i2l1770
  1837  0000A4                     i2l1768:
  1838                           
  1839                           ;interrupt.c: 30: Receive_Dump();
  1840  0000A4  EC43  F005         	call	_Receive_Dump	;wreg free
  1841  0000A8                     i2l1770:
  1842                           
  1843                           ;interrupt.c: 31: }
  1844                           ;interrupt.c: 32: }
  1845                           ;interrupt.c: 33: if (PIR1bits.CCP1IF == 1) {
  1846  0000A8  A49E               	btfss	3998,2,c	;volatile
  1847  0000AA  D018               	goto	i2l394
  1848                           
  1849                           ;interrupt.c: 34: PIR1bits.CCP1IF = 0;
  1850  0000AC  949E               	bcf	3998,2,c	;volatile
  1851                           
  1852                           ;interrupt.c: 35: T1CONbits.TMR1ON = 0;
  1853  0000AE  90CD               	bcf	4045,0,c	;volatile
  1854                           
  1855                           ;interrupt.c: 36: TMR1H = 0;
  1856  0000B0  0E00               	movlw	0
  1857  0000B2  6ECF               	movwf	4047,c	;volatile
  1858                           
  1859                           ;interrupt.c: 37: TMR1L = 0;
  1860  0000B4  0E00               	movlw	0
  1861  0000B6  6ECE               	movwf	4046,c	;volatile
  1862                           
  1863                           ;interrupt.c: 38: for (unsigned char c = 0; c < 10; c++) {
  1864  0000B8  0E00               	movlw	0
  1865  0000BA  6E45               	movwf	Isr@c,c
  1866  0000BC                     i2l1776:
  1867  0000BC  0E09               	movlw	9
  1868  0000BE  6445               	cpfsgt	Isr@c,c
  1869  0000C0  D001               	goto	i2l1780
  1870  0000C2  D00C               	goto	i2l394
  1871  0000C4                     i2l1780:
  1872                           
  1873                           ;interrupt.c: 39: Marker[c] = 0;
  1874  0000C4  5045               	movf	Isr@c,w,c
  1875  0000C6  0D01               	mullw	1
  1876  0000C8  0E60               	movlw	low _Marker
  1877  0000CA  24F3               	addwf	prodl,w,c
  1878  0000CC  6ED9               	movwf	fsr2l,c
  1879  0000CE  0E00               	movlw	high _Marker
  1880  0000D0  20F4               	addwfc	prodh,w,c
  1881  0000D2  6EDA               	movwf	fsr2h,c
  1882  0000D4  0E00               	movlw	0
  1883  0000D6  6EDF               	movwf	indf2,c
  1884  0000D8  2A45               	incf	Isr@c,f,c
  1885  0000DA  D7F0               	goto	i2l1776
  1886  0000DC                     i2l394:
  1887  0000DC  C044  FFF5         	movff	??_Isr+13,tablat
  1888  0000E0  C043  FFF8         	movff	??_Isr+12,tblptru
  1889  0000E4  C042  FFF7         	movff	??_Isr+11,tblptrh
  1890  0000E8  C041  FFF6         	movff	??_Isr+10,tblptrl
  1891  0000EC  C040  FFF4         	movff	??_Isr+9,prodh
  1892  0000F0  C03F  FFF3         	movff	??_Isr+8,prodl
  1893  0000F4  C03E  FFDA         	movff	??_Isr+7,fsr2h
  1894  0000F8  C03D  FFD9         	movff	??_Isr+6,fsr2l
  1895  0000FC  C03C  FFE2         	movff	??_Isr+5,fsr1h
  1896  000100  C03B  FFE1         	movff	??_Isr+4,fsr1l
  1897  000104  C03A  FFEA         	movff	??_Isr+3,fsr0h
  1898  000108  C039  FFE9         	movff	??_Isr+2,fsr0l
  1899  00010C  C038  FFFB         	movff	??_Isr+1,pclatu
  1900  000110  C037  FFFA         	movff	??_Isr,pclath
  1901  000114  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1902  000116  0011               	retfie		f
  1903  000118                     __end_of_Isr:
  1904                           	opt stack 0
  1905                           pclatu	equ	0xFFB
  1906                           pclath	equ	0xFFA
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           prodh	equ	0xFF4
  1912                           prodl	equ	0xFF3
  1913                           intcon	equ	0xFF2
  1914                           postinc0	equ	0xFEE
  1915                           fsr0h	equ	0xFEA
  1916                           fsr0l	equ	0xFE9
  1917                           wreg	equ	0xFE8
  1918                           fsr1h	equ	0xFE2
  1919                           fsr1l	equ	0xFE1
  1920                           indf2	equ	0xFDF
  1921                           postinc2	equ	0xFDE
  1922                           fsr2h	equ	0xFDA
  1923                           fsr2l	equ	0xFD9
  1924                           status	equ	0xFD8
  1925                           
  1926 ;; *************** function _Receive_Dump *****************
  1927 ;; Defined at:
  1928 ;;		line 53 in file "communication.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  dump            1    0[COMRAM] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;		None               void
  1935 ;; Registers used:
  1936 ;;		None
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  1942 ;;      Params:         0       0       0       0
  1943 ;;      Locals:         1       0       0       0
  1944 ;;      Temps:          0       0       0       0
  1945 ;;      Totals:         1       0       0       0
  1946 ;;Total ram usage:        1 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_Isr
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           	psect	text15
  1956  000A86                     __ptext15:
  1957                           	opt stack 0
  1958  000A86                     _Receive_Dump:
  1959                           	opt stack 27
  1960                           
  1961                           ;communication.c: 54: unsigned char dump;
  1962                           ;communication.c: 55: if(RCSTA1bits.OERR == 1) {
  1963                           
  1964                           ;incstack = 0
  1965  000A86  A2AB               	btfss	4011,1,c	;volatile
  1966  000A88  D003               	goto	i2l81
  1967                           
  1968                           ;communication.c: 56: RCSTA1bits.CREN = 0;
  1969  000A8A  98AB               	bcf	4011,4,c	;volatile
  1970                           
  1971                           ;communication.c: 57: RCSTA1bits.CREN = 1;
  1972  000A8C  88AB               	bsf	4011,4,c	;volatile
  1973                           
  1974                           ;communication.c: 58: overrun = 1;
  1975  000A8E  804B               	bsf	_overrun/(0+8),_overrun& (0+7),c
  1976  000A90                     i2l81:
  1977                           
  1978                           ;communication.c: 59: }
  1979                           ;communication.c: 60: dump = RCREG1;
  1980  000A90  CFAE F001          	movff	4014,Receive_Dump@dump	;volatile
  1981  000A94  0012               	return		;funcret
  1982  000A96                     __end_of_Receive_Dump:
  1983                           	opt stack 0
  1984                           pclatu	equ	0xFFB
  1985                           pclath	equ	0xFFA
  1986                           tblptru	equ	0xFF8
  1987                           tblptrh	equ	0xFF7
  1988                           tblptrl	equ	0xFF6
  1989                           tablat	equ	0xFF5
  1990                           prodh	equ	0xFF4
  1991                           prodl	equ	0xFF3
  1992                           intcon	equ	0xFF2
  1993                           postinc0	equ	0xFEE
  1994                           fsr0h	equ	0xFEA
  1995                           fsr0l	equ	0xFE9
  1996                           wreg	equ	0xFE8
  1997                           fsr1h	equ	0xFE2
  1998                           fsr1l	equ	0xFE1
  1999                           indf2	equ	0xFDF
  2000                           postinc2	equ	0xFDE
  2001                           fsr2h	equ	0xFDA
  2002                           fsr2l	equ	0xFD9
  2003                           status	equ	0xFD8
  2004                           
  2005 ;; *************** function _Receive *****************
  2006 ;; Defined at:
  2007 ;;		line 44 in file "communication.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;		None
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;		None
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      unsigned char 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2021 ;;      Params:         0       0       0       0
  2022 ;;      Locals:         0       0       0       0
  2023 ;;      Temps:          0       0       0       0
  2024 ;;      Totals:         0       0       0       0
  2025 ;;Total ram usage:        0 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; This function calls:
  2028 ;;		Nothing
  2029 ;; This function is called by:
  2030 ;;		_Isr
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text16
  2035  000A96                     __ptext16:
  2036                           	opt stack 0
  2037  000A96                     _Receive:
  2038                           	opt stack 27
  2039                           
  2040                           ;communication.c: 45: if(RCSTA1bits.OERR == 1) {
  2041                           
  2042                           ;incstack = 0
  2043  000A96  A2AB               	btfss	4011,1,c	;volatile
  2044  000A98  D003               	goto	i2l1722
  2045                           
  2046                           ;communication.c: 46: RCSTA1bits.CREN = 0;
  2047  000A9A  98AB               	bcf	4011,4,c	;volatile
  2048                           
  2049                           ;communication.c: 47: RCSTA1bits.CREN = 1;
  2050  000A9C  88AB               	bsf	4011,4,c	;volatile
  2051                           
  2052                           ;communication.c: 48: overrun = 1;
  2053  000A9E  804B               	bsf	_overrun/(0+8),_overrun& (0+7),c
  2054  000AA0                     i2l1722:
  2055                           
  2056                           ;communication.c: 49: }
  2057                           ;communication.c: 50: return (RCREG1);
  2058  000AA0  50AE               	movf	4014,w,c	;volatile
  2059  000AA2  0012               	return	
  2060  000AA4                     __end_of_Receive:
  2061                           	opt stack 0
  2062                           pclatu	equ	0xFFB
  2063                           pclath	equ	0xFFA
  2064                           tblptru	equ	0xFF8
  2065                           tblptrh	equ	0xFF7
  2066                           tblptrl	equ	0xFF6
  2067                           tablat	equ	0xFF5
  2068                           prodh	equ	0xFF4
  2069                           prodl	equ	0xFF3
  2070                           intcon	equ	0xFF2
  2071                           postinc0	equ	0xFEE
  2072                           fsr0h	equ	0xFEA
  2073                           fsr0l	equ	0xFE9
  2074                           wreg	equ	0xFE8
  2075                           fsr1h	equ	0xFE2
  2076                           fsr1l	equ	0xFE1
  2077                           indf2	equ	0xFDF
  2078                           postinc2	equ	0xFDE
  2079                           fsr2h	equ	0xFDA
  2080                           fsr2l	equ	0xFD9
  2081                           status	equ	0xFD8
  2082                           
  2083 ;; *************** function _Evaluate_Reception *****************
  2084 ;; Defined at:
  2085 ;;		line 200 in file "ignition.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;		None               void
  2092 ;; Registers used:
  2093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2099 ;;      Params:         0       0       0       0
  2100 ;;      Locals:         0       0       0       0
  2101 ;;      Temps:          0       0       0       0
  2102 ;;      Totals:         0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    3
  2106 ;; This function calls:
  2107 ;;		_Check_Power
  2108 ;;		_Mark_Ignite
  2109 ;;		_Test_Port
  2110 ;; This function is called by:
  2111 ;;		_Isr
  2112 ;; This function uses a non-reentrant model
  2113 ;;
  2114                           
  2115                           	psect	text17
  2116  000A08                     __ptext17:
  2117                           	opt stack 0
  2118  000A08                     _Evaluate_Reception:
  2119                           	opt stack 24
  2120                           
  2121                           ;ignition.c: 206: if (received[2] == 'T') {
  2122                           
  2123                           ;incstack = 0
  2124  000A08  0E54               	movlw	84
  2125  000A0A  1848               	xorwf	_received+2,w,c
  2126  000A0C  A4D8               	btfss	status,2,c
  2127  000A0E  D005               	goto	i2l1734
  2128                           
  2129                           ;ignition.c: 207: Check_Power();
  2130  000A10  EC9F  F001         	call	_Check_Power	;wreg free
  2131                           
  2132                           ;ignition.c: 208: Test_Port();
  2133  000A14  EC8E  F000         	call	_Test_Port	;wreg free
  2134                           
  2135                           ;ignition.c: 209: } else if (received[2] == 'I') {
  2136  000A18  0012               	return	
  2137  000A1A                     i2l1734:
  2138  000A1A  0E49               	movlw	73
  2139  000A1C  1848               	xorwf	_received+2,w,c
  2140  000A1E  A4D8               	btfss	status,2,c
  2141  000A20  0012               	return	
  2142                           
  2143                           ;ignition.c: 210: Mark_Ignite();
  2144  000A22  EC38  F005         	call	_Mark_Ignite	;wreg free
  2145  000A26  0012               	return	
  2146  000A28                     __end_of_Evaluate_Reception:
  2147                           	opt stack 0
  2148                           pclatu	equ	0xFFB
  2149                           pclath	equ	0xFFA
  2150                           tblptru	equ	0xFF8
  2151                           tblptrh	equ	0xFF7
  2152                           tblptrl	equ	0xFF6
  2153                           tablat	equ	0xFF5
  2154                           prodh	equ	0xFF4
  2155                           prodl	equ	0xFF3
  2156                           intcon	equ	0xFF2
  2157                           postinc0	equ	0xFEE
  2158                           fsr0h	equ	0xFEA
  2159                           fsr0l	equ	0xFE9
  2160                           wreg	equ	0xFE8
  2161                           fsr1h	equ	0xFE2
  2162                           fsr1l	equ	0xFE1
  2163                           indf2	equ	0xFDF
  2164                           postinc2	equ	0xFDE
  2165                           fsr2h	equ	0xFDA
  2166                           fsr2l	equ	0xFD9
  2167                           status	equ	0xFD8
  2168                           
  2169 ;; *************** function _Test_Port *****************
  2170 ;; Defined at:
  2171 ;;		line 11 in file "ignition.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;		None
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;		None
  2176 ;; Return value:  Size  Location     Type
  2177 ;;		None               void
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2185 ;;      Params:         0       0       0       0
  2186 ;;      Locals:         0       0       0       0
  2187 ;;      Temps:          0       0       0       0
  2188 ;;      Totals:         0       0       0       0
  2189 ;;Total ram usage:        0 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    1
  2192 ;; This function calls:
  2193 ;;		_Transmit
  2194 ;; This function is called by:
  2195 ;;		_Evaluate_Reception
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text18
  2200  00011C                     __ptext18:
  2201                           	opt stack 0
  2202  00011C                     _Test_Port:
  2203                           	opt stack 25
  2204                           
  2205                           ;ignition.c: 12: switch(received[3]) {
  2206                           
  2207                           ;incstack = 0
  2208  00011C  D0F0               	goto	i2l1658
  2209  00011E                     i2l251:
  2210                           
  2211                           ;ignition.c: 14: if(PORTCbits.RC4 == 1) {
  2212  00011E  A882               	btfss	3970,4,c	;volatile
  2213  000120  D00A               	goto	i2l252
  2214                           
  2215                           ;ignition.c: 15: Transmit(0xAA, 'T', 0, '1');
  2216  000122  0E54               	movlw	84
  2217  000124  6E01               	movwf	Transmit@operation,c
  2218  000126  0E00               	movlw	0
  2219  000128  6E02               	movwf	Transmit@port,c
  2220  00012A  0E31               	movlw	49
  2221  00012C  6E03               	movwf	Transmit@con_status,c
  2222  00012E  0EAA               	movlw	170
  2223  000130  EC47  F004         	call	_Transmit
  2224                           
  2225                           ;ignition.c: 16: }else if(PORTCbits.RC4 == 0) {
  2226  000134  0012               	return	
  2227  000136                     i2l252:
  2228  000136  B882               	btfsc	3970,4,c	;volatile
  2229  000138  0012               	return	
  2230                           
  2231                           ;ignition.c: 17: Transmit(0xAA, 'T', 0, '0');
  2232  00013A  0E54               	movlw	84
  2233  00013C  6E01               	movwf	Transmit@operation,c
  2234  00013E  0E00               	movlw	0
  2235  000140  6E02               	movwf	Transmit@port,c
  2236  000142  0E30               	movlw	48
  2237  000144  6E03               	movwf	Transmit@con_status,c
  2238  000146  0EAA               	movlw	170
  2239  000148  EC47  F004         	call	_Transmit
  2240                           
  2241                           ;ignition.c: 18: }
  2242                           ;ignition.c: 19: break;
  2243  00014C  0012               	return	
  2244  00014E                     i2l256:
  2245                           
  2246                           ;ignition.c: 21: if(PORTDbits.RD2 == 1) {
  2247  00014E  A483               	btfss	3971,2,c	;volatile
  2248  000150  D00A               	goto	i2l257
  2249                           
  2250                           ;ignition.c: 22: Transmit(0xAA, 'T', 1, '1');
  2251  000152  0E54               	movlw	84
  2252  000154  6E01               	movwf	Transmit@operation,c
  2253  000156  0E01               	movlw	1
  2254  000158  6E02               	movwf	Transmit@port,c
  2255  00015A  0E31               	movlw	49
  2256  00015C  6E03               	movwf	Transmit@con_status,c
  2257  00015E  0EAA               	movlw	170
  2258  000160  EC47  F004         	call	_Transmit
  2259                           
  2260                           ;ignition.c: 23: }else if(PORTCbits.RC4 == 0) {
  2261  000164  0012               	return	
  2262  000166                     i2l257:
  2263  000166  B882               	btfsc	3970,4,c	;volatile
  2264  000168  0012               	return	
  2265                           
  2266                           ;ignition.c: 24: Transmit(0xAA, 'T', 1, '0');
  2267  00016A  0E54               	movlw	84
  2268  00016C  6E01               	movwf	Transmit@operation,c
  2269  00016E  0E01               	movlw	1
  2270  000170  6E02               	movwf	Transmit@port,c
  2271  000172  0E30               	movlw	48
  2272  000174  6E03               	movwf	Transmit@con_status,c
  2273  000176  0EAA               	movlw	170
  2274  000178  EC47  F004         	call	_Transmit
  2275                           
  2276                           ;ignition.c: 25: }
  2277                           ;ignition.c: 26: break;
  2278  00017C  0012               	return	
  2279  00017E                     i2l260:
  2280                           
  2281                           ;ignition.c: 28: if(PORTDbits.RD0 == 1) {
  2282  00017E  A083               	btfss	3971,0,c	;volatile
  2283  000180  D00A               	goto	i2l261
  2284                           
  2285                           ;ignition.c: 29: Transmit(0xAA, 'T', 2, '1');
  2286  000182  0E54               	movlw	84
  2287  000184  6E01               	movwf	Transmit@operation,c
  2288  000186  0E02               	movlw	2
  2289  000188  6E02               	movwf	Transmit@port,c
  2290  00018A  0E31               	movlw	49
  2291  00018C  6E03               	movwf	Transmit@con_status,c
  2292  00018E  0EAA               	movlw	170
  2293  000190  EC47  F004         	call	_Transmit
  2294                           
  2295                           ;ignition.c: 30: }else if(PORTCbits.RC4 == 0) {
  2296  000194  0012               	return	
  2297  000196                     i2l261:
  2298  000196  B882               	btfsc	3970,4,c	;volatile
  2299  000198  0012               	return	
  2300                           
  2301                           ;ignition.c: 31: Transmit(0xAA, 'T', 2, '0');
  2302  00019A  0E54               	movlw	84
  2303  00019C  6E01               	movwf	Transmit@operation,c
  2304  00019E  0E02               	movlw	2
  2305  0001A0  6E02               	movwf	Transmit@port,c
  2306  0001A2  0E30               	movlw	48
  2307  0001A4  6E03               	movwf	Transmit@con_status,c
  2308  0001A6  0EAA               	movlw	170
  2309  0001A8  EC47  F004         	call	_Transmit
  2310                           
  2311                           ;ignition.c: 32: }
  2312                           ;ignition.c: 33: break;
  2313  0001AC  0012               	return	
  2314  0001AE                     i2l264:
  2315                           
  2316                           ;ignition.c: 35: if(PORTCbits.RC2 == 1) {
  2317  0001AE  A482               	btfss	3970,2,c	;volatile
  2318  0001B0  D00A               	goto	i2l265
  2319                           
  2320                           ;ignition.c: 36: Transmit(0xAA, 'T', 3, '1');
  2321  0001B2  0E54               	movlw	84
  2322  0001B4  6E01               	movwf	Transmit@operation,c
  2323  0001B6  0E03               	movlw	3
  2324  0001B8  6E02               	movwf	Transmit@port,c
  2325  0001BA  0E31               	movlw	49
  2326  0001BC  6E03               	movwf	Transmit@con_status,c
  2327  0001BE  0EAA               	movlw	170
  2328  0001C0  EC47  F004         	call	_Transmit
  2329                           
  2330                           ;ignition.c: 37: }else if(PORTCbits.RC4 == 0) {
  2331  0001C4  0012               	return	
  2332  0001C6                     i2l265:
  2333  0001C6  B882               	btfsc	3970,4,c	;volatile
  2334  0001C8  0012               	return	
  2335                           
  2336                           ;ignition.c: 38: Transmit(0xAA, 'T', 3, '0');
  2337  0001CA  0E54               	movlw	84
  2338  0001CC  6E01               	movwf	Transmit@operation,c
  2339  0001CE  0E03               	movlw	3
  2340  0001D0  6E02               	movwf	Transmit@port,c
  2341  0001D2  0E30               	movlw	48
  2342  0001D4  6E03               	movwf	Transmit@con_status,c
  2343  0001D6  0EAA               	movlw	170
  2344  0001D8  EC47  F004         	call	_Transmit
  2345                           
  2346                           ;ignition.c: 39: }
  2347                           ;ignition.c: 40: break;
  2348  0001DC  0012               	return	
  2349  0001DE                     i2l268:
  2350                           
  2351                           ;ignition.c: 42: if(PORTEbits.RE2 == 1) {
  2352  0001DE  A484               	btfss	3972,2,c	;volatile
  2353  0001E0  D00A               	goto	i2l269
  2354                           
  2355                           ;ignition.c: 43: Transmit(0xAA, 'T', 4, '1');
  2356  0001E2  0E54               	movlw	84
  2357  0001E4  6E01               	movwf	Transmit@operation,c
  2358  0001E6  0E04               	movlw	4
  2359  0001E8  6E02               	movwf	Transmit@port,c
  2360  0001EA  0E31               	movlw	49
  2361  0001EC  6E03               	movwf	Transmit@con_status,c
  2362  0001EE  0EAA               	movlw	170
  2363  0001F0  EC47  F004         	call	_Transmit
  2364                           
  2365                           ;ignition.c: 44: }else if(PORTCbits.RC4 == 0) {
  2366  0001F4  0012               	return	
  2367  0001F6                     i2l269:
  2368  0001F6  B882               	btfsc	3970,4,c	;volatile
  2369  0001F8  0012               	return	
  2370                           
  2371                           ;ignition.c: 45: Transmit(0xAA, 'T', 4, '0');
  2372  0001FA  0E54               	movlw	84
  2373  0001FC  6E01               	movwf	Transmit@operation,c
  2374  0001FE  0E04               	movlw	4
  2375  000200  6E02               	movwf	Transmit@port,c
  2376  000202  0E30               	movlw	48
  2377  000204  6E03               	movwf	Transmit@con_status,c
  2378  000206  0EAA               	movlw	170
  2379  000208  EC47  F004         	call	_Transmit
  2380                           
  2381                           ;ignition.c: 46: }
  2382                           ;ignition.c: 47: break;
  2383  00020C  0012               	return	
  2384  00020E                     i2l272:
  2385                           
  2386                           ;ignition.c: 49: if(PORTEbits.RE0 == 1) {
  2387  00020E  A084               	btfss	3972,0,c	;volatile
  2388  000210  D00A               	goto	i2l273
  2389                           
  2390                           ;ignition.c: 50: Transmit(0xAA, 'T', 5, '1');
  2391  000212  0E54               	movlw	84
  2392  000214  6E01               	movwf	Transmit@operation,c
  2393  000216  0E05               	movlw	5
  2394  000218  6E02               	movwf	Transmit@port,c
  2395  00021A  0E31               	movlw	49
  2396  00021C  6E03               	movwf	Transmit@con_status,c
  2397  00021E  0EAA               	movlw	170
  2398  000220  EC47  F004         	call	_Transmit
  2399                           
  2400                           ;ignition.c: 51: }else if(PORTCbits.RC4 == 0) {
  2401  000224  0012               	return	
  2402  000226                     i2l273:
  2403  000226  B882               	btfsc	3970,4,c	;volatile
  2404  000228  0012               	return	
  2405                           
  2406                           ;ignition.c: 52: Transmit(0xAA, 'T', 5, '0');
  2407  00022A  0E54               	movlw	84
  2408  00022C  6E01               	movwf	Transmit@operation,c
  2409  00022E  0E05               	movlw	5
  2410  000230  6E02               	movwf	Transmit@port,c
  2411  000232  0E30               	movlw	48
  2412  000234  6E03               	movwf	Transmit@con_status,c
  2413  000236  0EAA               	movlw	170
  2414  000238  EC47  F004         	call	_Transmit
  2415                           
  2416                           ;ignition.c: 53: }
  2417                           ;ignition.c: 54: break;
  2418  00023C  0012               	return	
  2419  00023E                     i2l276:
  2420                           
  2421                           ;ignition.c: 56: if(PORTAbits.RA4 == 1) {
  2422  00023E  A880               	btfss	3968,4,c	;volatile
  2423  000240  D00A               	goto	i2l277
  2424                           
  2425                           ;ignition.c: 57: Transmit(0xAA, 'T', 6, '1');
  2426  000242  0E54               	movlw	84
  2427  000244  6E01               	movwf	Transmit@operation,c
  2428  000246  0E06               	movlw	6
  2429  000248  6E02               	movwf	Transmit@port,c
  2430  00024A  0E31               	movlw	49
  2431  00024C  6E03               	movwf	Transmit@con_status,c
  2432  00024E  0EAA               	movlw	170
  2433  000250  EC47  F004         	call	_Transmit
  2434                           
  2435                           ;ignition.c: 58: }else if(PORTCbits.RC4 == 0) {
  2436  000254  0012               	return	
  2437  000256                     i2l277:
  2438  000256  B882               	btfsc	3970,4,c	;volatile
  2439  000258  0012               	return	
  2440                           
  2441                           ;ignition.c: 59: Transmit(0xAA, 'T', 6, '0');
  2442  00025A  0E54               	movlw	84
  2443  00025C  6E01               	movwf	Transmit@operation,c
  2444  00025E  0E06               	movlw	6
  2445  000260  6E02               	movwf	Transmit@port,c
  2446  000262  0E30               	movlw	48
  2447  000264  6E03               	movwf	Transmit@con_status,c
  2448  000266  0EAA               	movlw	170
  2449  000268  EC47  F004         	call	_Transmit
  2450                           
  2451                           ;ignition.c: 60: }
  2452                           ;ignition.c: 61: break;
  2453  00026C  0012               	return	
  2454  00026E                     i2l280:
  2455                           
  2456                           ;ignition.c: 63: if(PORTBbits.RB4 == 1) {
  2457  00026E  A881               	btfss	3969,4,c	;volatile
  2458  000270  D00A               	goto	i2l281
  2459                           
  2460                           ;ignition.c: 64: Transmit(0xAA, 'T', 7, '1');
  2461  000272  0E54               	movlw	84
  2462  000274  6E01               	movwf	Transmit@operation,c
  2463  000276  0E07               	movlw	7
  2464  000278  6E02               	movwf	Transmit@port,c
  2465  00027A  0E31               	movlw	49
  2466  00027C  6E03               	movwf	Transmit@con_status,c
  2467  00027E  0EAA               	movlw	170
  2468  000280  EC47  F004         	call	_Transmit
  2469                           
  2470                           ;ignition.c: 65: }else if(PORTCbits.RC4 == 0) {
  2471  000284  0012               	return	
  2472  000286                     i2l281:
  2473  000286  B882               	btfsc	3970,4,c	;volatile
  2474  000288  0012               	return	
  2475                           
  2476                           ;ignition.c: 66: Transmit(0xAA, 'T', 7, '0');
  2477  00028A  0E54               	movlw	84
  2478  00028C  6E01               	movwf	Transmit@operation,c
  2479  00028E  0E07               	movlw	7
  2480  000290  6E02               	movwf	Transmit@port,c
  2481  000292  0E30               	movlw	48
  2482  000294  6E03               	movwf	Transmit@con_status,c
  2483  000296  0EAA               	movlw	170
  2484  000298  EC47  F004         	call	_Transmit
  2485                           
  2486                           ;ignition.c: 67: }
  2487                           ;ignition.c: 68: break;
  2488  00029C  0012               	return	
  2489  00029E                     i2l284:
  2490                           
  2491                           ;ignition.c: 70: if(PORTAbits.RA2 == 1) {
  2492  00029E  A480               	btfss	3968,2,c	;volatile
  2493  0002A0  D00A               	goto	i2l285
  2494                           
  2495                           ;ignition.c: 71: Transmit(0xAA, 'T', 8, '1');
  2496  0002A2  0E54               	movlw	84
  2497  0002A4  6E01               	movwf	Transmit@operation,c
  2498  0002A6  0E08               	movlw	8
  2499  0002A8  6E02               	movwf	Transmit@port,c
  2500  0002AA  0E31               	movlw	49
  2501  0002AC  6E03               	movwf	Transmit@con_status,c
  2502  0002AE  0EAA               	movlw	170
  2503  0002B0  EC47  F004         	call	_Transmit
  2504                           
  2505                           ;ignition.c: 72: }else if(PORTCbits.RC4 == 0) {
  2506  0002B4  0012               	return	
  2507  0002B6                     i2l285:
  2508  0002B6  B882               	btfsc	3970,4,c	;volatile
  2509  0002B8  0012               	return	
  2510                           
  2511                           ;ignition.c: 73: Transmit(0xAA, 'T', 8, '0');
  2512  0002BA  0E54               	movlw	84
  2513  0002BC  6E01               	movwf	Transmit@operation,c
  2514  0002BE  0E08               	movlw	8
  2515  0002C0  6E02               	movwf	Transmit@port,c
  2516  0002C2  0E30               	movlw	48
  2517  0002C4  6E03               	movwf	Transmit@con_status,c
  2518  0002C6  0EAA               	movlw	170
  2519  0002C8  EC47  F004         	call	_Transmit
  2520                           
  2521                           ;ignition.c: 74: }
  2522                           ;ignition.c: 75: break;
  2523  0002CC  0012               	return	
  2524  0002CE                     i2l288:
  2525                           
  2526                           ;ignition.c: 77: if(PORTAbits.RA0 == 1) {
  2527  0002CE  A080               	btfss	3968,0,c	;volatile
  2528  0002D0  D00A               	goto	i2l289
  2529                           
  2530                           ;ignition.c: 78: Transmit(0xAA, 'T', 9, '1');
  2531  0002D2  0E54               	movlw	84
  2532  0002D4  6E01               	movwf	Transmit@operation,c
  2533  0002D6  0E09               	movlw	9
  2534  0002D8  6E02               	movwf	Transmit@port,c
  2535  0002DA  0E31               	movlw	49
  2536  0002DC  6E03               	movwf	Transmit@con_status,c
  2537  0002DE  0EAA               	movlw	170
  2538  0002E0  EC47  F004         	call	_Transmit
  2539                           
  2540                           ;ignition.c: 79: }else if(PORTCbits.RC4 == 0) {
  2541  0002E4  0012               	return	
  2542  0002E6                     i2l289:
  2543  0002E6  B882               	btfsc	3970,4,c	;volatile
  2544  0002E8  0012               	return	
  2545                           
  2546                           ;ignition.c: 80: Transmit(0xAA, 'T', 9, '0');
  2547  0002EA  0E54               	movlw	84
  2548  0002EC  6E01               	movwf	Transmit@operation,c
  2549  0002EE  0E09               	movlw	9
  2550  0002F0  6E02               	movwf	Transmit@port,c
  2551  0002F2  0E30               	movlw	48
  2552  0002F4  6E03               	movwf	Transmit@con_status,c
  2553  0002F6  0EAA               	movlw	170
  2554  0002F8  EC47  F004         	call	_Transmit
  2555                           
  2556                           ;ignition.c: 83: }
  2557                           
  2558                           ;ignition.c: 81: }
  2559                           ;ignition.c: 82: break;
  2560  0002FC  0012               	return	
  2561  0002FE                     i2l1658:
  2562  0002FE  5049               	movf	_received+3,w,c
  2563                           
  2564                           ; Switch size 1, requested type "space"
  2565                           ; Number of cases is 10, Range of values is 0 to 9
  2566                           ; switch strategies available:
  2567                           ; Name         Instructions Cycles
  2568                           ; simple_byte           31    16 (average)
  2569                           ;	Chosen strategy is simple_byte
  2570  000300  0A00               	xorlw	0	; case 0
  2571  000302  B4D8               	btfsc	status,2,c
  2572  000304  D70C               	goto	i2l251
  2573  000306  0A01               	xorlw	1	; case 1
  2574  000308  B4D8               	btfsc	status,2,c
  2575  00030A  D721               	goto	i2l256
  2576  00030C  0A03               	xorlw	3	; case 2
  2577  00030E  B4D8               	btfsc	status,2,c
  2578  000310  D736               	goto	i2l260
  2579  000312  0A01               	xorlw	1	; case 3
  2580  000314  B4D8               	btfsc	status,2,c
  2581  000316  D74B               	goto	i2l264
  2582  000318  0A07               	xorlw	7	; case 4
  2583  00031A  B4D8               	btfsc	status,2,c
  2584  00031C  D760               	goto	i2l268
  2585  00031E  0A01               	xorlw	1	; case 5
  2586  000320  B4D8               	btfsc	status,2,c
  2587  000322  D775               	goto	i2l272
  2588  000324  0A03               	xorlw	3	; case 6
  2589  000326  B4D8               	btfsc	status,2,c
  2590  000328  D78A               	goto	i2l276
  2591  00032A  0A01               	xorlw	1	; case 7
  2592  00032C  B4D8               	btfsc	status,2,c
  2593  00032E  D79F               	goto	i2l280
  2594  000330  0A0F               	xorlw	15	; case 8
  2595  000332  B4D8               	btfsc	status,2,c
  2596  000334  D7B4               	goto	i2l284
  2597  000336  0A01               	xorlw	1	; case 9
  2598  000338  A4D8               	btfss	status,2,c
  2599  00033A  0012               	return	
  2600  00033C  D7C8               	goto	i2l288
  2601  00033E                     __end_of_Test_Port:
  2602                           	opt stack 0
  2603                           pclatu	equ	0xFFB
  2604                           pclath	equ	0xFFA
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           prodh	equ	0xFF4
  2610                           prodl	equ	0xFF3
  2611                           intcon	equ	0xFF2
  2612                           postinc0	equ	0xFEE
  2613                           fsr0h	equ	0xFEA
  2614                           fsr0l	equ	0xFE9
  2615                           wreg	equ	0xFE8
  2616                           fsr1h	equ	0xFE2
  2617                           fsr1l	equ	0xFE1
  2618                           indf2	equ	0xFDF
  2619                           postinc2	equ	0xFDE
  2620                           fsr2h	equ	0xFDA
  2621                           fsr2l	equ	0xFD9
  2622                           status	equ	0xFD8
  2623                           
  2624 ;; *************** function _Transmit *****************
  2625 ;; Defined at:
  2626 ;;		line 18 in file "communication.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  receiver        1    wreg     unsigned char 
  2629 ;;  operation       1    0[COMRAM] unsigned char 
  2630 ;;  port            1    1[COMRAM] unsigned char 
  2631 ;;  con_status      1    2[COMRAM] unsigned char 
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;  receiver        1    3[COMRAM] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;		None               void
  2636 ;; Registers used:
  2637 ;;		wreg, status,2
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2643 ;;      Params:         3       0       0       0
  2644 ;;      Locals:         1       0       0       0
  2645 ;;      Temps:          0       0       0       0
  2646 ;;      Totals:         4       0       0       0
  2647 ;;Total ram usage:        4 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_Test_Port
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text19
  2657  00088E                     __ptext19:
  2658                           	opt stack 0
  2659  00088E                     _Transmit:
  2660                           	opt stack 25
  2661                           
  2662                           ;incstack = 0
  2663                           ;Transmit@receiver stored from wreg
  2664  00088E  6E04               	movwf	Transmit@receiver,c
  2665                           
  2666                           ;communication.c: 20: PORTDbits.RD4 = 1;
  2667  000890  8883               	bsf	3971,4,c	;volatile
  2668                           
  2669                           ;communication.c: 21: RCSTA1bits.CREN = 0;
  2670  000892  98AB               	bcf	4011,4,c	;volatile
  2671                           
  2672                           ;communication.c: 23: __nop();
  2673  000894  F000               	nop	
  2674  000896                     i2l53:
  2675  000896  A89E               	btfss	3998,4,c	;volatile
  2676  000898  D7FE               	goto	i2l53
  2677                           
  2678                           ;communication.c: 25: TXSTA1bits.TX9D = 1;
  2679  00089A  80AC               	bsf	4012,0,c	;volatile
  2680                           
  2681                           ;communication.c: 26: TXREG1 = receiver;
  2682  00089C  C004  FFAD         	movff	Transmit@receiver,4013	;volatile
  2683  0008A0                     i2l56:
  2684  0008A0  A89E               	btfss	3998,4,c	;volatile
  2685  0008A2  D7FE               	goto	i2l56
  2686                           
  2687                           ;communication.c: 28: TXREG1 = 0x01;
  2688  0008A4  0E01               	movlw	1
  2689  0008A6  6EAD               	movwf	4013,c	;volatile
  2690  0008A8                     i2l59:
  2691  0008A8  A89E               	btfss	3998,4,c	;volatile
  2692  0008AA  D7FE               	goto	i2l59
  2693                           
  2694                           ;communication.c: 30: TXREG1 = operation;
  2695  0008AC  C001  FFAD         	movff	Transmit@operation,4013	;volatile
  2696  0008B0                     i2l62:
  2697  0008B0  A89E               	btfss	3998,4,c	;volatile
  2698  0008B2  D7FE               	goto	i2l62
  2699                           
  2700                           ;communication.c: 32: TXREG1 = port;
  2701  0008B4  C002  FFAD         	movff	Transmit@port,4013	;volatile
  2702  0008B8                     i2l65:
  2703  0008B8  A89E               	btfss	3998,4,c	;volatile
  2704  0008BA  D7FE               	goto	i2l65
  2705                           
  2706                           ;communication.c: 34: TXREG1 = con_status;
  2707  0008BC  C003  FFAD         	movff	Transmit@con_status,4013	;volatile
  2708  0008C0                     i2l68:
  2709  0008C0  A89E               	btfss	3998,4,c	;volatile
  2710  0008C2  D7FE               	goto	i2l68
  2711                           
  2712                           ;communication.c: 36: TXREG1 = p_status;
  2713  0008C4  C04C  FFAD         	movff	_p_status,4013	;volatile
  2714  0008C8                     i2l71:
  2715  0008C8  A2AC               	btfss	4012,1,c	;volatile
  2716  0008CA  D7FE               	goto	i2l71
  2717                           
  2718                           ;communication.c: 38: PORTDbits.RD4 = 0;
  2719  0008CC  9883               	bcf	3971,4,c	;volatile
  2720                           
  2721                           ;communication.c: 39: RCSTA1bits.CREN = 1;
  2722  0008CE  88AB               	bsf	4011,4,c	;volatile
  2723                           
  2724                           ;communication.c: 40: __nop();
  2725  0008D0  F000               	nop	
  2726  0008D2  0012               	return		;funcret
  2727  0008D4                     __end_of_Transmit:
  2728                           	opt stack 0
  2729                           pclatu	equ	0xFFB
  2730                           pclath	equ	0xFFA
  2731                           tblptru	equ	0xFF8
  2732                           tblptrh	equ	0xFF7
  2733                           tblptrl	equ	0xFF6
  2734                           tablat	equ	0xFF5
  2735                           prodh	equ	0xFF4
  2736                           prodl	equ	0xFF3
  2737                           intcon	equ	0xFF2
  2738                           postinc0	equ	0xFEE
  2739                           fsr0h	equ	0xFEA
  2740                           fsr0l	equ	0xFE9
  2741                           wreg	equ	0xFE8
  2742                           fsr1h	equ	0xFE2
  2743                           fsr1l	equ	0xFE1
  2744                           indf2	equ	0xFDF
  2745                           postinc2	equ	0xFDE
  2746                           fsr2h	equ	0xFDA
  2747                           fsr2l	equ	0xFD9
  2748                           status	equ	0xFD8
  2749                           
  2750 ;; *************** function _Mark_Ignite *****************
  2751 ;; Defined at:
  2752 ;;		line 167 in file "ignition.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;		None               void
  2759 ;; Registers used:
  2760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2766 ;;      Params:         0       0       0       0
  2767 ;;      Locals:         0       0       0       0
  2768 ;;      Temps:          0       0       0       0
  2769 ;;      Totals:         0       0       0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; This function calls:
  2773 ;;		Nothing
  2774 ;; This function is called by:
  2775 ;;		_Evaluate_Reception
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text20
  2780  000A70                     __ptext20:
  2781                           	opt stack 0
  2782  000A70                     _Mark_Ignite:
  2783                           	opt stack 26
  2784                           
  2785                           ;ignition.c: 168: Marker[received[3]] = 1;
  2786                           
  2787                           ;incstack = 0
  2788  000A70  5049               	movf	_received+3,w,c
  2789  000A72  0D01               	mullw	1
  2790  000A74  0E60               	movlw	low _Marker
  2791  000A76  24F3               	addwf	prodl,w,c
  2792  000A78  6ED9               	movwf	fsr2l,c
  2793  000A7A  0E00               	movlw	high _Marker
  2794  000A7C  20F4               	addwfc	prodh,w,c
  2795  000A7E  6EDA               	movwf	fsr2h,c
  2796  000A80  0E01               	movlw	1
  2797  000A82  6EDF               	movwf	indf2,c
  2798  000A84  0012               	return		;funcret
  2799  000A86                     __end_of_Mark_Ignite:
  2800                           	opt stack 0
  2801                           pclatu	equ	0xFFB
  2802                           pclath	equ	0xFFA
  2803                           tblptru	equ	0xFF8
  2804                           tblptrh	equ	0xFF7
  2805                           tblptrl	equ	0xFF6
  2806                           tablat	equ	0xFF5
  2807                           prodh	equ	0xFF4
  2808                           prodl	equ	0xFF3
  2809                           intcon	equ	0xFF2
  2810                           postinc0	equ	0xFEE
  2811                           fsr0h	equ	0xFEA
  2812                           fsr0l	equ	0xFE9
  2813                           wreg	equ	0xFE8
  2814                           fsr1h	equ	0xFE2
  2815                           fsr1l	equ	0xFE1
  2816                           indf2	equ	0xFDF
  2817                           postinc2	equ	0xFDE
  2818                           fsr2h	equ	0xFDA
  2819                           fsr2l	equ	0xFD9
  2820                           status	equ	0xFD8
  2821                           
  2822 ;; *************** function _Check_Power *****************
  2823 ;; Defined at:
  2824 ;;		line 171 in file "ignition.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;		None
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  source_power    3   51[COMRAM] float 
  2829 ;;  supply          3   48[COMRAM] float 
  2830 ;;  voltage         3   45[COMRAM] float 
  2831 ;;  DAC_out         3   42[COMRAM] float 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;		None               void
  2834 ;; Registers used:
  2835 ;;		wreg, status,2, status,0, cstack
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  2841 ;;      Params:         0       0       0       0
  2842 ;;      Locals:        12       0       0       0
  2843 ;;      Temps:          0       0       0       0
  2844 ;;      Totals:        12       0       0       0
  2845 ;;Total ram usage:       12 bytes
  2846 ;; Hardware stack levels used:    1
  2847 ;; Hardware stack levels required when called:    2
  2848 ;; This function calls:
  2849 ;;		___ftdiv
  2850 ;;		___ftge
  2851 ;;		___ftmul
  2852 ;;		___lbtoft
  2853 ;; This function is called by:
  2854 ;;		_Evaluate_Reception
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text21
  2859  00033E                     __ptext21:
  2860                           	opt stack 0
  2861  00033E                     _Check_Power:
  2862                           	opt stack 24
  2863                           
  2864                           ;ignition.c: 175: float source_power = 0;
  2865                           
  2866                           ;incstack = 0
  2867  00033E  0E00               	movlw	0
  2868  000340  6E34               	movwf	Check_Power@source_power,c
  2869  000342  0E00               	movlw	0
  2870  000344  6E35               	movwf	Check_Power@source_power+1,c
  2871  000346  0E00               	movlw	0
  2872  000348  6E36               	movwf	Check_Power@source_power+2,c
  2873                           
  2874                           ;ignition.c: 176: float voltage = 0;
  2875  00034A  0E00               	movlw	0
  2876  00034C  6E2E               	movwf	Check_Power@voltage,c
  2877  00034E  0E00               	movlw	0
  2878  000350  6E2F               	movwf	Check_Power@voltage+1,c
  2879  000352  0E00               	movlw	0
  2880  000354  6E30               	movwf	Check_Power@voltage+2,c
  2881                           
  2882                           ;ignition.c: 177: float DAC_out = 1.024;
  2883  000356  0E12               	movlw	18
  2884  000358  6E2B               	movwf	Check_Power@DAC_out,c
  2885  00035A  0E83               	movlw	131
  2886  00035C  6E2C               	movwf	Check_Power@DAC_out+1,c
  2887  00035E  0E3F               	movlw	63
  2888  000360  6E2D               	movwf	Check_Power@DAC_out+2,c
  2889                           
  2890                           ;ignition.c: 178: float supply = 0;
  2891  000362  0E00               	movlw	0
  2892  000364  6E31               	movwf	Check_Power@supply,c
  2893  000366  0E00               	movlw	0
  2894  000368  6E32               	movwf	Check_Power@supply+1,c
  2895  00036A  0E00               	movlw	0
  2896  00036C  6E33               	movwf	Check_Power@supply+2,c
  2897                           
  2898                           ;ignition.c: 181: ADCON0bits.CHS = 0b11110;
  2899  00036E  94C2               	bcf	4034,2,c	;volatile
  2900  000370  86C2               	bsf	4034,3,c	;volatile
  2901  000372  88C2               	bsf	4034,4,c	;volatile
  2902  000374  8AC2               	bsf	4034,5,c	;volatile
  2903  000376  8CC2               	bsf	4034,6,c	;volatile
  2904                           
  2905                           ;ignition.c: 182: ADCON0bits.GO_nDONE = 1;
  2906  000378  82C2               	bsf	4034,1,c	;volatile
  2907  00037A                     i2l335:
  2908  00037A  B2C2               	btfsc	4034,1,c	;volatile
  2909  00037C  D7FE               	goto	i2l335
  2910                           
  2911                           ;ignition.c: 184: supply = ((DAC_out * 255) / ADRESH);
  2912  00037E  0E00               	movlw	0
  2913  000380  6E10               	movwf	___ftmul@f2,c
  2914  000382  0E7F               	movlw	127
  2915  000384  6E11               	movwf	___ftmul@f2+1,c
  2916  000386  0E43               	movlw	67
  2917  000388  6E12               	movwf	___ftmul@f2+2,c
  2918  00038A  C02B  F00D         	movff	Check_Power@DAC_out,___ftmul@f1
  2919  00038E  C02C  F00E         	movff	Check_Power@DAC_out+1,___ftmul@f1+1
  2920  000392  C02D  F00F         	movff	Check_Power@DAC_out+2,___ftmul@f1+2
  2921  000396  EC4B  F002         	call	___ftmul	;wreg free
  2922  00039A  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2923  00039E  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2924  0003A2  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2925  0003A6  50C4               	movf	4036,w,c	;volatile
  2926  0003A8  ECD1  F004         	call	___lbtoft
  2927  0003AC  C009  F01F         	movff	?___lbtoft,___ftdiv@f2
  2928  0003B0  C00A  F020         	movff	?___lbtoft+1,___ftdiv@f2+1
  2929  0003B4  C00B  F021         	movff	?___lbtoft+2,___ftdiv@f2+2
  2930  0003B8  ECC5  F002         	call	___ftdiv	;wreg free
  2931  0003BC  C01C  F031         	movff	?___ftdiv,Check_Power@supply
  2932  0003C0  C01D  F032         	movff	?___ftdiv+1,Check_Power@supply+1
  2933  0003C4  C01E  F033         	movff	?___ftdiv+2,Check_Power@supply+2
  2934                           
  2935                           ;ignition.c: 187: ADCON0bits.CHS = 0b01100;
  2936  0003C8  94C2               	bcf	4034,2,c	;volatile
  2937  0003CA  96C2               	bcf	4034,3,c	;volatile
  2938  0003CC  88C2               	bsf	4034,4,c	;volatile
  2939  0003CE  8AC2               	bsf	4034,5,c	;volatile
  2940  0003D0  9CC2               	bcf	4034,6,c	;volatile
  2941                           
  2942                           ;ignition.c: 188: ADCON0bits.GO_nDONE = 1;
  2943  0003D2  82C2               	bsf	4034,1,c	;volatile
  2944  0003D4                     i2l338:
  2945  0003D4  B2C2               	btfsc	4034,1,c	;volatile
  2946  0003D6  D7FE               	goto	i2l338
  2947                           
  2948                           ;ignition.c: 190: voltage = ((ADRESH * supply) / 255);
  2949  0003D8  C031  F010         	movff	Check_Power@supply,___ftmul@f2
  2950  0003DC  C032  F011         	movff	Check_Power@supply+1,___ftmul@f2+1
  2951  0003E0  C033  F012         	movff	Check_Power@supply+2,___ftmul@f2+2
  2952  0003E4  50C4               	movf	4036,w,c	;volatile
  2953  0003E6  ECD1  F004         	call	___lbtoft
  2954  0003EA  C009  F00D         	movff	?___lbtoft,___ftmul@f1
  2955  0003EE  C00A  F00E         	movff	?___lbtoft+1,___ftmul@f1+1
  2956  0003F2  C00B  F00F         	movff	?___lbtoft+2,___ftmul@f1+2
  2957  0003F6  EC4B  F002         	call	___ftmul	;wreg free
  2958  0003FA  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
  2959  0003FE  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
  2960  000402  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
  2961  000406  0E00               	movlw	0
  2962  000408  6E1F               	movwf	___ftdiv@f2,c
  2963  00040A  0E7F               	movlw	127
  2964  00040C  6E20               	movwf	___ftdiv@f2+1,c
  2965  00040E  0E43               	movlw	67
  2966  000410  6E21               	movwf	___ftdiv@f2+2,c
  2967  000412  ECC5  F002         	call	___ftdiv	;wreg free
  2968  000416  C01C  F02E         	movff	?___ftdiv,Check_Power@voltage
  2969  00041A  C01D  F02F         	movff	?___ftdiv+1,Check_Power@voltage+1
  2970  00041E  C01E  F030         	movff	?___ftdiv+2,Check_Power@voltage+2
  2971                           
  2972                           ;ignition.c: 191: source_power = (4.2353 * voltage);
  2973  000422  C02E  F00D         	movff	Check_Power@voltage,___ftmul@f1
  2974  000426  C02F  F00E         	movff	Check_Power@voltage+1,___ftmul@f1+1
  2975  00042A  C030  F00F         	movff	Check_Power@voltage+2,___ftmul@f1+2
  2976  00042E  0E88               	movlw	136
  2977  000430  6E10               	movwf	___ftmul@f2,c
  2978  000432  0E87               	movlw	135
  2979  000434  6E11               	movwf	___ftmul@f2+1,c
  2980  000436  0E40               	movlw	64
  2981  000438  6E12               	movwf	___ftmul@f2+2,c
  2982  00043A  EC4B  F002         	call	___ftmul	;wreg free
  2983  00043E  C00D  F034         	movff	?___ftmul,Check_Power@source_power
  2984  000442  C00E  F035         	movff	?___ftmul+1,Check_Power@source_power+1
  2985  000446  C00F  F036         	movff	?___ftmul+2,Check_Power@source_power+2
  2986                           
  2987                           ;ignition.c: 193: if (source_power < 16.8) {
  2988  00044A  C034  F001         	movff	Check_Power@source_power,___ftge@ff1
  2989  00044E  C035  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  2990  000452  C036  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  2991  000456  0E66               	movlw	102
  2992  000458  6E04               	movwf	___ftge@ff2,c
  2993  00045A  0E86               	movlw	134
  2994  00045C  6E05               	movwf	___ftge@ff2+1,c
  2995  00045E  0E41               	movlw	65
  2996  000460  6E06               	movwf	___ftge@ff2+2,c
  2997  000462  EC8F  F003         	call	___ftge	;wreg free
  2998  000466  B0D8               	btfsc	status,0,c
  2999  000468  D003               	goto	i2l1690
  3000                           
  3001                           ;ignition.c: 194: p_status = '0';
  3002  00046A  0E30               	movlw	48
  3003  00046C  6E4C               	movwf	_p_status,c
  3004                           
  3005                           ;ignition.c: 195: } else if (source_power >= 16.8) {
  3006  00046E  0012               	return	
  3007  000470                     i2l1690:
  3008  000470  C034  F001         	movff	Check_Power@source_power,___ftge@ff1
  3009  000474  C035  F002         	movff	Check_Power@source_power+1,___ftge@ff1+1
  3010  000478  C036  F003         	movff	Check_Power@source_power+2,___ftge@ff1+2
  3011  00047C  0E66               	movlw	102
  3012  00047E  6E04               	movwf	___ftge@ff2,c
  3013  000480  0E86               	movlw	134
  3014  000482  6E05               	movwf	___ftge@ff2+1,c
  3015  000484  0E41               	movlw	65
  3016  000486  6E06               	movwf	___ftge@ff2+2,c
  3017  000488  EC8F  F003         	call	___ftge	;wreg free
  3018  00048C  A0D8               	btfss	status,0,c
  3019  00048E  0012               	return	
  3020                           
  3021                           ;ignition.c: 196: p_status = '1';
  3022  000490  0E31               	movlw	49
  3023  000492  6E4C               	movwf	_p_status,c
  3024  000494  0012               	return	
  3025  000496                     __end_of_Check_Power:
  3026                           	opt stack 0
  3027                           pclatu	equ	0xFFB
  3028                           pclath	equ	0xFFA
  3029                           tblptru	equ	0xFF8
  3030                           tblptrh	equ	0xFF7
  3031                           tblptrl	equ	0xFF6
  3032                           tablat	equ	0xFF5
  3033                           prodh	equ	0xFF4
  3034                           prodl	equ	0xFF3
  3035                           intcon	equ	0xFF2
  3036                           postinc0	equ	0xFEE
  3037                           fsr0h	equ	0xFEA
  3038                           fsr0l	equ	0xFE9
  3039                           wreg	equ	0xFE8
  3040                           fsr1h	equ	0xFE2
  3041                           fsr1l	equ	0xFE1
  3042                           indf2	equ	0xFDF
  3043                           postinc2	equ	0xFDE
  3044                           fsr2h	equ	0xFDA
  3045                           fsr2l	equ	0xFD9
  3046                           status	equ	0xFD8
  3047                           
  3048 ;; *************** function ___lbtoft *****************
  3049 ;; Defined at:
  3050 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbtoft.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  c               1    wreg     unsigned char 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  c               1   11[COMRAM] unsigned char 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  3    8[COMRAM] float 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3064 ;;      Params:         3       0       0       0
  3065 ;;      Locals:         1       0       0       0
  3066 ;;      Temps:          0       0       0       0
  3067 ;;      Totals:         4       0       0       0
  3068 ;;Total ram usage:        4 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    1
  3071 ;; This function calls:
  3072 ;;		___ftpack
  3073 ;; This function is called by:
  3074 ;;		_Check_Power
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text22
  3079  0009A2                     __ptext22:
  3080                           	opt stack 0
  3081  0009A2                     ___lbtoft:
  3082                           	opt stack 24
  3083                           
  3084                           ;incstack = 0
  3085                           ;___lbtoft@c stored from wreg
  3086  0009A2  6E0C               	movwf	___lbtoft@c,c
  3087  0009A4  500C               	movf	___lbtoft@c,w,c
  3088  0009A6  6E01               	movwf	___ftpack@arg,c
  3089  0009A8  6A02               	clrf	___ftpack@arg+1,c
  3090  0009AA  6A03               	clrf	___ftpack@arg+2,c
  3091  0009AC  0E8E               	movlw	142
  3092  0009AE  6E04               	movwf	___ftpack@exp,c
  3093  0009B0  0E00               	movlw	0
  3094  0009B2  6E05               	movwf	___ftpack@sign,c
  3095  0009B4  EC38  F003         	call	___ftpack	;wreg free
  3096  0009B8  C001  F009         	movff	?___ftpack,?___lbtoft
  3097  0009BC  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  3098  0009C0  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  3099  0009C4  0012               	return	
  3100  0009C6                     __end_of___lbtoft:
  3101                           	opt stack 0
  3102                           pclatu	equ	0xFFB
  3103                           pclath	equ	0xFFA
  3104                           tblptru	equ	0xFF8
  3105                           tblptrh	equ	0xFF7
  3106                           tblptrl	equ	0xFF6
  3107                           tablat	equ	0xFF5
  3108                           prodh	equ	0xFF4
  3109                           prodl	equ	0xFF3
  3110                           intcon	equ	0xFF2
  3111                           postinc0	equ	0xFEE
  3112                           fsr0h	equ	0xFEA
  3113                           fsr0l	equ	0xFE9
  3114                           wreg	equ	0xFE8
  3115                           fsr1h	equ	0xFE2
  3116                           fsr1l	equ	0xFE1
  3117                           indf2	equ	0xFDF
  3118                           postinc2	equ	0xFDE
  3119                           fsr2h	equ	0xFDA
  3120                           fsr2l	equ	0xFD9
  3121                           status	equ	0xFD8
  3122                           
  3123 ;; *************** function ___ftmul *****************
  3124 ;; Defined at:
  3125 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftmul.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  f1              3   12[COMRAM] float 
  3128 ;;  f2              3   15[COMRAM] float 
  3129 ;; Auto vars:     Size  Location     Type
  3130 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  3131 ;;  sign            1   26[COMRAM] unsigned char 
  3132 ;;  cntr            1   25[COMRAM] unsigned char 
  3133 ;;  exp             1   21[COMRAM] unsigned char 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  3   12[COMRAM] float 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3143 ;;      Params:         6       0       0       0
  3144 ;;      Locals:         6       0       0       0
  3145 ;;      Temps:          3       0       0       0
  3146 ;;      Totals:        15       0       0       0
  3147 ;;Total ram usage:       15 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    1
  3150 ;; This function calls:
  3151 ;;		___ftpack
  3152 ;; This function is called by:
  3153 ;;		_Check_Power
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text23
  3158  000496                     __ptext23:
  3159                           	opt stack 0
  3160  000496                     ___ftmul:
  3161                           	opt stack 24
  3162                           
  3163                           ;incstack = 0
  3164  000496  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  3165  00049A  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3166  00049C  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3167  00049E  340E               	rlcf	___ftmul@f1+1,w,c
  3168  0004A0  3613               	rlcf	??___ftmul& (0+255),f,c
  3169  0004A2  E301               	bnc	u91_41
  3170  0004A4  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3171  0004A6                     u91_41:
  3172  0004A6  5013               	movf	??___ftmul,w,c
  3173  0004A8  6E16               	movwf	___ftmul@exp,c
  3174  0004AA  5016               	movf	___ftmul@exp,w,c
  3175  0004AC  A4D8               	btfss	status,2,c
  3176  0004AE  D007               	goto	i2l1500
  3177  0004B0  0E00               	movlw	0
  3178  0004B2  6E0D               	movwf	?___ftmul,c
  3179  0004B4  0E00               	movlw	0
  3180  0004B6  6E0E               	movwf	?___ftmul+1,c
  3181  0004B8  0E00               	movlw	0
  3182  0004BA  6E0F               	movwf	?___ftmul+2,c
  3183  0004BC  0012               	return	
  3184  0004BE                     i2l1500:
  3185  0004BE  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  3186  0004C2  6A14               	clrf	(??___ftmul+1)& (0+255),c
  3187  0004C4  6A15               	clrf	(??___ftmul+2)& (0+255),c
  3188  0004C6  3411               	rlcf	___ftmul@f2+1,w,c
  3189  0004C8  3613               	rlcf	??___ftmul& (0+255),f,c
  3190  0004CA  E301               	bnc	u93_41
  3191  0004CC  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  3192  0004CE                     u93_41:
  3193  0004CE  5013               	movf	??___ftmul,w,c
  3194  0004D0  6E1B               	movwf	___ftmul@sign,c
  3195  0004D2  501B               	movf	___ftmul@sign,w,c
  3196  0004D4  A4D8               	btfss	status,2,c
  3197  0004D6  D007               	goto	i2l1506
  3198  0004D8  0E00               	movlw	0
  3199  0004DA  6E0D               	movwf	?___ftmul,c
  3200  0004DC  0E00               	movlw	0
  3201  0004DE  6E0E               	movwf	?___ftmul+1,c
  3202  0004E0  0E00               	movlw	0
  3203  0004E2  6E0F               	movwf	?___ftmul+2,c
  3204  0004E4  0012               	return	
  3205  0004E6                     i2l1506:
  3206  0004E6  501B               	movf	___ftmul@sign,w,c
  3207  0004E8  0F7B               	addlw	123
  3208  0004EA  2616               	addwf	___ftmul@exp,f,c
  3209  0004EC  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  3210  0004F0  5012               	movf	___ftmul@f2+2,w,c
  3211  0004F2  1A1B               	xorwf	___ftmul@sign,f,c
  3212  0004F4  0E80               	movlw	128
  3213  0004F6  161B               	andwf	___ftmul@sign,f,c
  3214  0004F8  8E0E               	bsf	___ftmul@f1+1,7,c
  3215  0004FA  8E11               	bsf	___ftmul@f2+1,7,c
  3216  0004FC  0EFF               	movlw	255
  3217  0004FE  1610               	andwf	___ftmul@f2,f,c
  3218  000500  0EFF               	movlw	255
  3219  000502  1611               	andwf	___ftmul@f2+1,f,c
  3220  000504  0E00               	movlw	0
  3221  000506  1612               	andwf	___ftmul@f2+2,f,c
  3222  000508  0E00               	movlw	0
  3223  00050A  6E17               	movwf	___ftmul@f3_as_product,c
  3224  00050C  0E00               	movlw	0
  3225  00050E  6E18               	movwf	___ftmul@f3_as_product+1,c
  3226  000510  0E00               	movlw	0
  3227  000512  6E19               	movwf	___ftmul@f3_as_product+2,c
  3228  000514  0E07               	movlw	7
  3229  000516  6E1A               	movwf	___ftmul@cntr,c
  3230  000518                     i2l1520:
  3231  000518  A00D               	btfss	___ftmul@f1,0,c
  3232  00051A  D006               	goto	i2l1524
  3233  00051C  5010               	movf	___ftmul@f2,w,c
  3234  00051E  2617               	addwf	___ftmul@f3_as_product,f,c
  3235  000520  5011               	movf	___ftmul@f2+1,w,c
  3236  000522  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3237  000524  5012               	movf	___ftmul@f2+2,w,c
  3238  000526  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3239  000528                     i2l1524:
  3240  000528  90D8               	bcf	status,0,c
  3241  00052A  320F               	rrcf	___ftmul@f1+2,f,c
  3242  00052C  320E               	rrcf	___ftmul@f1+1,f,c
  3243  00052E  320D               	rrcf	___ftmul@f1,f,c
  3244  000530  90D8               	bcf	status,0,c
  3245  000532  3610               	rlcf	___ftmul@f2,f,c
  3246  000534  3611               	rlcf	___ftmul@f2+1,f,c
  3247  000536  3612               	rlcf	___ftmul@f2+2,f,c
  3248  000538  2E1A               	decfsz	___ftmul@cntr,f,c
  3249  00053A  D7EE               	goto	i2l1520
  3250  00053C  0E09               	movlw	9
  3251  00053E  6E1A               	movwf	___ftmul@cntr,c
  3252  000540                     i2l1530:
  3253  000540  A00D               	btfss	___ftmul@f1,0,c
  3254  000542  D006               	goto	i2l1534
  3255  000544  5010               	movf	___ftmul@f2,w,c
  3256  000546  2617               	addwf	___ftmul@f3_as_product,f,c
  3257  000548  5011               	movf	___ftmul@f2+1,w,c
  3258  00054A  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  3259  00054C  5012               	movf	___ftmul@f2+2,w,c
  3260  00054E  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  3261  000550                     i2l1534:
  3262  000550  90D8               	bcf	status,0,c
  3263  000552  320F               	rrcf	___ftmul@f1+2,f,c
  3264  000554  320E               	rrcf	___ftmul@f1+1,f,c
  3265  000556  320D               	rrcf	___ftmul@f1,f,c
  3266  000558  90D8               	bcf	status,0,c
  3267  00055A  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  3268  00055C  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  3269  00055E  3217               	rrcf	___ftmul@f3_as_product,f,c
  3270  000560  2E1A               	decfsz	___ftmul@cntr,f,c
  3271  000562  D7EE               	goto	i2l1530
  3272  000564  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3273  000568  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3274  00056C  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3275  000570  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  3276  000574  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  3277  000578  EC38  F003         	call	___ftpack	;wreg free
  3278  00057C  C001  F00D         	movff	?___ftpack,?___ftmul
  3279  000580  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  3280  000584  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  3281  000588  0012               	return	
  3282  00058A                     __end_of___ftmul:
  3283                           	opt stack 0
  3284                           pclatu	equ	0xFFB
  3285                           pclath	equ	0xFFA
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           prodh	equ	0xFF4
  3291                           prodl	equ	0xFF3
  3292                           intcon	equ	0xFF2
  3293                           postinc0	equ	0xFEE
  3294                           fsr0h	equ	0xFEA
  3295                           fsr0l	equ	0xFE9
  3296                           wreg	equ	0xFE8
  3297                           fsr1h	equ	0xFE2
  3298                           fsr1l	equ	0xFE1
  3299                           indf2	equ	0xFDF
  3300                           postinc2	equ	0xFDE
  3301                           fsr2h	equ	0xFDA
  3302                           fsr2l	equ	0xFD9
  3303                           status	equ	0xFD8
  3304                           
  3305 ;; *************** function ___ftge *****************
  3306 ;; Defined at:
  3307 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftge.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  ff1             3    0[COMRAM] float 
  3310 ;;  ff2             3    3[COMRAM] float 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;		None               void
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3322 ;;      Params:         6       0       0       0
  3323 ;;      Locals:         0       0       0       0
  3324 ;;      Temps:          3       0       0       0
  3325 ;;      Totals:         9       0       0       0
  3326 ;;Total ram usage:        9 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; This function calls:
  3329 ;;		Nothing
  3330 ;; This function is called by:
  3331 ;;		_Check_Power
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           	psect	text24
  3336  00071E                     __ptext24:
  3337                           	opt stack 0
  3338  00071E                     ___ftge:
  3339                           	opt stack 25
  3340                           
  3341                           ;incstack = 0
  3342  00071E  AE03               	btfss	___ftge@ff1+2,7,c
  3343  000720  D016               	goto	i2l1546
  3344  000722  C001  F007         	movff	___ftge@ff1,??___ftge
  3345  000726  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  3346  00072A  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  3347  00072E  1E07               	comf	??___ftge,f,c
  3348  000730  1E08               	comf	??___ftge+1,f,c
  3349  000732  1E09               	comf	??___ftge+2,f,c
  3350  000734  2A07               	incf	??___ftge,f,c
  3351  000736  0E00               	movlw	0
  3352  000738  2208               	addwfc	??___ftge+1,f,c
  3353  00073A  2209               	addwfc	??___ftge+2,f,c
  3354  00073C  0E00               	movlw	0
  3355  00073E  2407               	addwf	??___ftge,w,c
  3356  000740  6E01               	movwf	___ftge@ff1,c
  3357  000742  0E00               	movlw	0
  3358  000744  2008               	addwfc	??___ftge+1,w,c
  3359  000746  6E02               	movwf	___ftge@ff1+1,c
  3360  000748  0E80               	movlw	128
  3361  00074A  2009               	addwfc	??___ftge+2,w,c
  3362  00074C  6E03               	movwf	___ftge@ff1+2,c
  3363  00074E                     i2l1546:
  3364  00074E  AE06               	btfss	___ftge@ff2+2,7,c
  3365  000750  D016               	goto	i2l1550
  3366  000752  C004  F007         	movff	___ftge@ff2,??___ftge
  3367  000756  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  3368  00075A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  3369  00075E  1E07               	comf	??___ftge,f,c
  3370  000760  1E08               	comf	??___ftge+1,f,c
  3371  000762  1E09               	comf	??___ftge+2,f,c
  3372  000764  2A07               	incf	??___ftge,f,c
  3373  000766  0E00               	movlw	0
  3374  000768  2208               	addwfc	??___ftge+1,f,c
  3375  00076A  2209               	addwfc	??___ftge+2,f,c
  3376  00076C  0E00               	movlw	0
  3377  00076E  2407               	addwf	??___ftge,w,c
  3378  000770  6E04               	movwf	___ftge@ff2,c
  3379  000772  0E00               	movlw	0
  3380  000774  2008               	addwfc	??___ftge+1,w,c
  3381  000776  6E05               	movwf	___ftge@ff2+1,c
  3382  000778  0E80               	movlw	128
  3383  00077A  2009               	addwfc	??___ftge+2,w,c
  3384  00077C  6E06               	movwf	___ftge@ff2+2,c
  3385  00077E                     i2l1550:
  3386  00077E  0E00               	movlw	0
  3387  000780  1A01               	xorwf	___ftge@ff1,f,c
  3388  000782  0E00               	movlw	0
  3389  000784  1A02               	xorwf	___ftge@ff1+1,f,c
  3390  000786  0E80               	movlw	128
  3391  000788  1A03               	xorwf	___ftge@ff1+2,f,c
  3392  00078A  0E00               	movlw	0
  3393  00078C  1A04               	xorwf	___ftge@ff2,f,c
  3394  00078E  0E00               	movlw	0
  3395  000790  1A05               	xorwf	___ftge@ff2+1,f,c
  3396  000792  0E80               	movlw	128
  3397  000794  1A06               	xorwf	___ftge@ff2+2,f,c
  3398  000796  5004               	movf	___ftge@ff2,w,c
  3399  000798  5C01               	subwf	___ftge@ff1,w,c
  3400  00079A  5005               	movf	___ftge@ff2+1,w,c
  3401  00079C  5802               	subwfb	___ftge@ff1+1,w,c
  3402  00079E  5006               	movf	___ftge@ff2+2,w,c
  3403  0007A0  5803               	subwfb	___ftge@ff1+2,w,c
  3404  0007A2  B0D8               	btfsc	status,0,c
  3405  0007A4  D002               	goto	i2l1556
  3406  0007A6  90D8               	bcf	status,0,c
  3407  0007A8  0012               	return	
  3408  0007AA                     i2l1556:
  3409  0007AA  80D8               	bsf	status,0,c
  3410  0007AC  0012               	return	
  3411  0007AE                     __end_of___ftge:
  3412                           	opt stack 0
  3413                           pclatu	equ	0xFFB
  3414                           pclath	equ	0xFFA
  3415                           tblptru	equ	0xFF8
  3416                           tblptrh	equ	0xFF7
  3417                           tblptrl	equ	0xFF6
  3418                           tablat	equ	0xFF5
  3419                           prodh	equ	0xFF4
  3420                           prodl	equ	0xFF3
  3421                           intcon	equ	0xFF2
  3422                           postinc0	equ	0xFEE
  3423                           fsr0h	equ	0xFEA
  3424                           fsr0l	equ	0xFE9
  3425                           wreg	equ	0xFE8
  3426                           fsr1h	equ	0xFE2
  3427                           fsr1l	equ	0xFE1
  3428                           indf2	equ	0xFDF
  3429                           postinc2	equ	0xFDE
  3430                           fsr2h	equ	0xFDA
  3431                           fsr2l	equ	0xFD9
  3432                           status	equ	0xFD8
  3433                           
  3434 ;; *************** function ___ftdiv *****************
  3435 ;; Defined at:
  3436 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ftdiv.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  f1              3   27[COMRAM] float 
  3439 ;;  f2              3   30[COMRAM] float 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  f3              3   37[COMRAM] float 
  3442 ;;  sign            1   41[COMRAM] unsigned char 
  3443 ;;  exp             1   40[COMRAM] unsigned char 
  3444 ;;  cntr            1   36[COMRAM] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  3   27[COMRAM] float 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3454 ;;      Params:         6       0       0       0
  3455 ;;      Locals:         6       0       0       0
  3456 ;;      Temps:          3       0       0       0
  3457 ;;      Totals:        15       0       0       0
  3458 ;;Total ram usage:       15 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    1
  3461 ;; This function calls:
  3462 ;;		___ftpack
  3463 ;; This function is called by:
  3464 ;;		_Check_Power
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text25
  3469  00058A                     __ptext25:
  3470                           	opt stack 0
  3471  00058A                     ___ftdiv:
  3472                           	opt stack 24
  3473                           
  3474                           ;incstack = 0
  3475  00058A  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
  3476  00058E  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3477  000590  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3478  000592  341D               	rlcf	___ftdiv@f1+1,w,c
  3479  000594  3622               	rlcf	??___ftdiv& (0+255),f,c
  3480  000596  E301               	bnc	u86_41
  3481  000598  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3482  00059A                     u86_41:
  3483  00059A  5022               	movf	??___ftdiv,w,c
  3484  00059C  6E29               	movwf	___ftdiv@exp,c
  3485  00059E  5029               	movf	___ftdiv@exp,w,c
  3486  0005A0  A4D8               	btfss	status,2,c
  3487  0005A2  D007               	goto	i2l1454
  3488  0005A4  0E00               	movlw	0
  3489  0005A6  6E1C               	movwf	?___ftdiv,c
  3490  0005A8  0E00               	movlw	0
  3491  0005AA  6E1D               	movwf	?___ftdiv+1,c
  3492  0005AC  0E00               	movlw	0
  3493  0005AE  6E1E               	movwf	?___ftdiv+2,c
  3494  0005B0  0012               	return	
  3495  0005B2                     i2l1454:
  3496  0005B2  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
  3497  0005B6  6A23               	clrf	(??___ftdiv+1)& (0+255),c
  3498  0005B8  6A24               	clrf	(??___ftdiv+2)& (0+255),c
  3499  0005BA  3420               	rlcf	___ftdiv@f2+1,w,c
  3500  0005BC  3622               	rlcf	??___ftdiv& (0+255),f,c
  3501  0005BE  E301               	bnc	u88_41
  3502  0005C0  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
  3503  0005C2                     u88_41:
  3504  0005C2  5022               	movf	??___ftdiv,w,c
  3505  0005C4  6E2A               	movwf	___ftdiv@sign,c
  3506  0005C6  502A               	movf	___ftdiv@sign,w,c
  3507  0005C8  A4D8               	btfss	status,2,c
  3508  0005CA  D007               	goto	i2l1460
  3509  0005CC  0E00               	movlw	0
  3510  0005CE  6E1C               	movwf	?___ftdiv,c
  3511  0005D0  0E00               	movlw	0
  3512  0005D2  6E1D               	movwf	?___ftdiv+1,c
  3513  0005D4  0E00               	movlw	0
  3514  0005D6  6E1E               	movwf	?___ftdiv+2,c
  3515  0005D8  0012               	return	
  3516  0005DA                     i2l1460:
  3517  0005DA  0E00               	movlw	0
  3518  0005DC  6E26               	movwf	___ftdiv@f3,c
  3519  0005DE  0E00               	movlw	0
  3520  0005E0  6E27               	movwf	___ftdiv@f3+1,c
  3521  0005E2  0E00               	movlw	0
  3522  0005E4  6E28               	movwf	___ftdiv@f3+2,c
  3523  0005E6  502A               	movf	___ftdiv@sign,w,c
  3524  0005E8  0F89               	addlw	137
  3525  0005EA  5E29               	subwf	___ftdiv@exp,f,c
  3526  0005EC  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
  3527  0005F0  5021               	movf	___ftdiv@f2+2,w,c
  3528  0005F2  1A2A               	xorwf	___ftdiv@sign,f,c
  3529  0005F4  0E80               	movlw	128
  3530  0005F6  162A               	andwf	___ftdiv@sign,f,c
  3531  0005F8  8E1D               	bsf	___ftdiv@f1+1,7,c
  3532  0005FA  0EFF               	movlw	255
  3533  0005FC  161C               	andwf	___ftdiv@f1,f,c
  3534  0005FE  0EFF               	movlw	255
  3535  000600  161D               	andwf	___ftdiv@f1+1,f,c
  3536  000602  0E00               	movlw	0
  3537  000604  161E               	andwf	___ftdiv@f1+2,f,c
  3538  000606  8E20               	bsf	___ftdiv@f2+1,7,c
  3539  000608  0EFF               	movlw	255
  3540  00060A  161F               	andwf	___ftdiv@f2,f,c
  3541  00060C  0EFF               	movlw	255
  3542  00060E  1620               	andwf	___ftdiv@f2+1,f,c
  3543  000610  0E00               	movlw	0
  3544  000612  1621               	andwf	___ftdiv@f2+2,f,c
  3545  000614  0E18               	movlw	24
  3546  000616  6E25               	movwf	___ftdiv@cntr,c
  3547  000618                     i2l1480:
  3548  000618  90D8               	bcf	status,0,c
  3549  00061A  3626               	rlcf	___ftdiv@f3,f,c
  3550  00061C  3627               	rlcf	___ftdiv@f3+1,f,c
  3551  00061E  3628               	rlcf	___ftdiv@f3+2,f,c
  3552  000620  501F               	movf	___ftdiv@f2,w,c
  3553  000622  5C1C               	subwf	___ftdiv@f1,w,c
  3554  000624  5020               	movf	___ftdiv@f2+1,w,c
  3555  000626  581D               	subwfb	___ftdiv@f1+1,w,c
  3556  000628  5021               	movf	___ftdiv@f2+2,w,c
  3557  00062A  581E               	subwfb	___ftdiv@f1+2,w,c
  3558  00062C  A0D8               	btfss	status,0,c
  3559  00062E  D007               	goto	i2l677
  3560  000630  501F               	movf	___ftdiv@f2,w,c
  3561  000632  5E1C               	subwf	___ftdiv@f1,f,c
  3562  000634  5020               	movf	___ftdiv@f2+1,w,c
  3563  000636  5A1D               	subwfb	___ftdiv@f1+1,f,c
  3564  000638  5021               	movf	___ftdiv@f2+2,w,c
  3565  00063A  5A1E               	subwfb	___ftdiv@f1+2,f,c
  3566  00063C  8026               	bsf	___ftdiv@f3,0,c
  3567  00063E                     i2l677:
  3568  00063E  90D8               	bcf	status,0,c
  3569  000640  361C               	rlcf	___ftdiv@f1,f,c
  3570  000642  361D               	rlcf	___ftdiv@f1+1,f,c
  3571  000644  361E               	rlcf	___ftdiv@f1+2,f,c
  3572  000646  2E25               	decfsz	___ftdiv@cntr,f,c
  3573  000648  D7E7               	goto	i2l1480
  3574  00064A  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
  3575  00064E  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3576  000652  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3577  000656  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
  3578  00065A  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
  3579  00065E  EC38  F003         	call	___ftpack	;wreg free
  3580  000662  C001  F01C         	movff	?___ftpack,?___ftdiv
  3581  000666  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
  3582  00066A  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
  3583  00066E  0012               	return	
  3584  000670                     __end_of___ftdiv:
  3585                           	opt stack 0
  3586                           pclatu	equ	0xFFB
  3587                           pclath	equ	0xFFA
  3588                           tblptru	equ	0xFF8
  3589                           tblptrh	equ	0xFF7
  3590                           tblptrl	equ	0xFF6
  3591                           tablat	equ	0xFF5
  3592                           prodh	equ	0xFF4
  3593                           prodl	equ	0xFF3
  3594                           intcon	equ	0xFF2
  3595                           postinc0	equ	0xFEE
  3596                           fsr0h	equ	0xFEA
  3597                           fsr0l	equ	0xFE9
  3598                           wreg	equ	0xFE8
  3599                           fsr1h	equ	0xFE2
  3600                           fsr1l	equ	0xFE1
  3601                           indf2	equ	0xFDF
  3602                           postinc2	equ	0xFDE
  3603                           fsr2h	equ	0xFDA
  3604                           fsr2l	equ	0xFD9
  3605                           status	equ	0xFD8
  3606                           
  3607 ;; *************** function ___ftpack *****************
  3608 ;; Defined at:
  3609 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\float.c"
  3610 ;; Parameters:    Size  Location     Type
  3611 ;;  arg             3    0[COMRAM] unsigned um
  3612 ;;  exp             1    3[COMRAM] unsigned char 
  3613 ;;  sign            1    4[COMRAM] unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  3    0[COMRAM] float 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2
  3625 ;;      Params:         5       0       0       0
  3626 ;;      Locals:         0       0       0       0
  3627 ;;      Temps:          3       0       0       0
  3628 ;;      Totals:         8       0       0       0
  3629 ;;Total ram usage:        8 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		___ftdiv
  3635 ;;		___ftmul
  3636 ;;		___lbtoft
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text26
  3641  000670                     __ptext26:
  3642                           	opt stack 0
  3643  000670                     ___ftpack:
  3644                           	opt stack 24
  3645                           
  3646                           ;incstack = 0
  3647  000670  5004               	movf	___ftpack@exp,w,c
  3648  000672  B4D8               	btfsc	status,2,c
  3649  000674  D005               	goto	i2l1410
  3650  000676  5001               	movf	___ftpack@arg,w,c
  3651  000678  1002               	iorwf	___ftpack@arg+1,w,c
  3652  00067A  1003               	iorwf	___ftpack@arg+2,w,c
  3653  00067C  A4D8               	btfss	status,2,c
  3654  00067E  D00C               	goto	i2l1416
  3655  000680                     i2l1410:
  3656  000680  0E00               	movlw	0
  3657  000682  6E01               	movwf	?___ftpack,c
  3658  000684  0E00               	movlw	0
  3659  000686  6E02               	movwf	?___ftpack+1,c
  3660  000688  0E00               	movlw	0
  3661  00068A  6E03               	movwf	?___ftpack+2,c
  3662  00068C  0012               	return	
  3663  00068E                     i2l1414:
  3664  00068E  2A04               	incf	___ftpack@exp,f,c
  3665  000690  90D8               	bcf	status,0,c
  3666  000692  3203               	rrcf	___ftpack@arg+2,f,c
  3667  000694  3202               	rrcf	___ftpack@arg+1,f,c
  3668  000696  3201               	rrcf	___ftpack@arg,f,c
  3669  000698                     i2l1416:
  3670  000698  0E00               	movlw	0
  3671  00069A  1401               	andwf	___ftpack@arg,w,c
  3672  00069C  6E06               	movwf	??___ftpack& (0+255),c
  3673  00069E  0E00               	movlw	0
  3674  0006A0  1402               	andwf	___ftpack@arg+1,w,c
  3675  0006A2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3676  0006A4  0EFE               	movlw	254
  3677  0006A6  1403               	andwf	___ftpack@arg+2,w,c
  3678  0006A8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3679  0006AA  5006               	movf	??___ftpack,w,c
  3680  0006AC  1007               	iorwf	??___ftpack+1,w,c
  3681  0006AE  1008               	iorwf	??___ftpack+2,w,c
  3682  0006B0  B4D8               	btfsc	status,2,c
  3683  0006B2  D00C               	goto	i2l1422
  3684  0006B4  D7EC               	goto	i2l1414
  3685  0006B6                     i2l1418:
  3686  0006B6  2A04               	incf	___ftpack@exp,f,c
  3687  0006B8  0E01               	movlw	1
  3688  0006BA  2601               	addwf	___ftpack@arg,f,c
  3689  0006BC  0E00               	movlw	0
  3690  0006BE  2202               	addwfc	___ftpack@arg+1,f,c
  3691  0006C0  0E00               	movlw	0
  3692  0006C2  2203               	addwfc	___ftpack@arg+2,f,c
  3693  0006C4  90D8               	bcf	status,0,c
  3694  0006C6  3203               	rrcf	___ftpack@arg+2,f,c
  3695  0006C8  3202               	rrcf	___ftpack@arg+1,f,c
  3696  0006CA  3201               	rrcf	___ftpack@arg,f,c
  3697  0006CC                     i2l1422:
  3698  0006CC  0E00               	movlw	0
  3699  0006CE  1401               	andwf	___ftpack@arg,w,c
  3700  0006D0  6E06               	movwf	??___ftpack& (0+255),c
  3701  0006D2  0E00               	movlw	0
  3702  0006D4  1402               	andwf	___ftpack@arg+1,w,c
  3703  0006D6  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3704  0006D8  0EFF               	movlw	255
  3705  0006DA  1403               	andwf	___ftpack@arg+2,w,c
  3706  0006DC  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3707  0006DE  5006               	movf	??___ftpack,w,c
  3708  0006E0  1007               	iorwf	??___ftpack+1,w,c
  3709  0006E2  1008               	iorwf	??___ftpack+2,w,c
  3710  0006E4  B4D8               	btfsc	status,2,c
  3711  0006E6  D006               	goto	i2l1426
  3712  0006E8  D7E6               	goto	i2l1418
  3713  0006EA                     i2l1424:
  3714  0006EA  0604               	decf	___ftpack@exp,f,c
  3715  0006EC  90D8               	bcf	status,0,c
  3716  0006EE  3601               	rlcf	___ftpack@arg,f,c
  3717  0006F0  3602               	rlcf	___ftpack@arg+1,f,c
  3718  0006F2  3603               	rlcf	___ftpack@arg+2,f,c
  3719  0006F4                     i2l1426:
  3720  0006F4  BE02               	btfsc	___ftpack@arg+1,7,c
  3721  0006F6  D003               	goto	i2l619
  3722  0006F8  0E02               	movlw	2
  3723  0006FA  6004               	cpfslt	___ftpack@exp,c
  3724  0006FC  D7F6               	goto	i2l1424
  3725  0006FE                     i2l619:
  3726  0006FE  A004               	btfss	___ftpack@exp,0,c
  3727  000700  9E02               	bcf	___ftpack@arg+1,7,c
  3728  000702  90D8               	bcf	status,0,c
  3729  000704  3204               	rrcf	___ftpack@exp,f,c
  3730  000706  5004               	movf	___ftpack@exp,w,c
  3731  000708  1203               	iorwf	___ftpack@arg+2,f,c
  3732  00070A  5005               	movf	___ftpack@sign,w,c
  3733  00070C  A4D8               	btfss	status,2,c
  3734  00070E  8E03               	bsf	___ftpack@arg+2,7,c
  3735  000710  C001  F001         	movff	___ftpack@arg,?___ftpack
  3736  000714  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3737  000718  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3738  00071C  0012               	return	
  3739  00071E                     __end_of___ftpack:
  3740                           	opt stack 0
  3741  0000                     pclatu	equ	0xFFB
  3742                           pclath	equ	0xFFA
  3743                           tblptru	equ	0xFF8
  3744                           tblptrh	equ	0xFF7
  3745                           tblptrl	equ	0xFF6
  3746                           tablat	equ	0xFF5
  3747                           prodh	equ	0xFF4
  3748                           prodl	equ	0xFF3
  3749                           intcon	equ	0xFF2
  3750                           postinc0	equ	0xFEE
  3751                           fsr0h	equ	0xFEA
  3752                           fsr0l	equ	0xFE9
  3753                           wreg	equ	0xFE8
  3754                           fsr1h	equ	0xFE2
  3755                           fsr1l	equ	0xFE1
  3756                           indf2	equ	0xFDF
  3757                           postinc2	equ	0xFDE
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           pclatu	equ	0xFFB
  3762                           pclath	equ	0xFFA
  3763                           tblptru	equ	0xFF8
  3764                           tblptrh	equ	0xFF7
  3765                           tblptrl	equ	0xFF6
  3766                           tablat	equ	0xFF5
  3767                           prodh	equ	0xFF4
  3768                           prodl	equ	0xFF3
  3769                           intcon	equ	0xFF2
  3770                           postinc0	equ	0xFEE
  3771                           fsr0h	equ	0xFEA
  3772                           fsr0l	equ	0xFE9
  3773                           wreg	equ	0xFE8
  3774                           fsr1h	equ	0xFE2
  3775                           fsr1l	equ	0xFE1
  3776                           indf2	equ	0xFDF
  3777                           postinc2	equ	0xFDE
  3778                           fsr2h	equ	0xFDA
  3779                           fsr2l	equ	0xFD9
  3780                           status	equ	0xFD8
  3781                           
  3782                           	psect	rparam
  3783  0000                     pclatu	equ	0xFFB
  3784                           pclath	equ	0xFFA
  3785                           tblptru	equ	0xFF8
  3786                           tblptrh	equ	0xFF7
  3787                           tblptrl	equ	0xFF6
  3788                           tablat	equ	0xFF5
  3789                           prodh	equ	0xFF4
  3790                           prodl	equ	0xFF3
  3791                           intcon	equ	0xFF2
  3792                           postinc0	equ	0xFEE
  3793                           fsr0h	equ	0xFEA
  3794                           fsr0l	equ	0xFE9
  3795                           wreg	equ	0xFE8
  3796                           fsr1h	equ	0xFE2
  3797                           fsr1l	equ	0xFE1
  3798                           indf2	equ	0xFDF
  3799                           postinc2	equ	0xFDE
  3800                           fsr2h	equ	0xFDA
  3801                           fsr2l	equ	0xFD9
  3802                           status	equ	0xFD8
  3803                           
  3804                           	psect	temp
  3805  00004D                     btemp:
  3806                           	opt stack 0
  3807  00004D                     	ds	1
  3808  0000                     int$flags	set	btemp
  3809                           pclatu	equ	0xFFB
  3810                           pclath	equ	0xFFA
  3811                           tblptru	equ	0xFF8
  3812                           tblptrh	equ	0xFF7
  3813                           tblptrl	equ	0xFF6
  3814                           tablat	equ	0xFF5
  3815                           prodh	equ	0xFF4
  3816                           prodl	equ	0xFF3
  3817                           intcon	equ	0xFF2
  3818                           postinc0	equ	0xFEE
  3819                           fsr0h	equ	0xFEA
  3820                           fsr0l	equ	0xFE9
  3821                           wreg	equ	0xFE8
  3822                           fsr1h	equ	0xFE2
  3823                           fsr1l	equ	0xFE1
  3824                           indf2	equ	0xFDF
  3825                           postinc2	equ	0xFDE
  3826                           fsr2h	equ	0xFDA
  3827                           fsr2l	equ	0xFD9
  3828                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      76
    BANK0           160      3      13
    BANK1           256      0       0
    BANK2           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Isr in COMRAM

    _Evaluate_Reception->_Check_Power
    _Test_Port->_Transmit
    _Check_Power->___ftdiv
    ___lbtoft->___ftpack
    ___ftmul->___lbtoft
    ___ftdiv->___ftmul

Critical Paths under _main in BANK0

    _main->_Check_Ignition
    _Init->_InitVar
    _Check_Ignition->_Disable_Port
    _Check_Ignition->_Ignite_Port

Critical Paths under _Isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     224
                     _Check_Ignition
                               _Init
 ---------------------------------------------------------------------------------
 (1) _Init                                                 0     0      0      68
                            _InitADC
                          _InitAnsel
                      _InitInterrupt
                  _InitMiscellaneous
                           _InitPort
                   _InitTransmission
                           _InitTris
                            _InitVar
 ---------------------------------------------------------------------------------
 (2) _InitVar                                              1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _InitTris                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitTransmission                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitMiscellaneous                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitAnsel                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InitADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Check_Ignition                                       2     2      0     156
                                              1 BANK0      2     2      0
                       _Disable_Port
                        _Ignite_Port
                           _On_Timer
 ---------------------------------------------------------------------------------
 (2) _On_Timer                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ignite_Port                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Disable_Port                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Isr                                                 15    15      0   12071
                                             54 COMRAM    15    15      0
                 _Evaluate_Reception
                            _Receive
                       _Receive_Dump
 ---------------------------------------------------------------------------------
 (4) _Receive_Dump                                         1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Receive                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Evaluate_Reception                                   0     0      0   12002
                        _Check_Power
                        _Mark_Ignite
                          _Test_Port
 ---------------------------------------------------------------------------------
 (5) _Test_Port                                            0     0      0    3928
                           _Transmit
 ---------------------------------------------------------------------------------
 (6) _Transmit                                             4     1      3    3928
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _Mark_Ignite                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Check_Power                                         12    12      0    8074
                                             42 COMRAM    12    12      0
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (6) ___lbtoft                                             4     1      3    2053
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             15     9      6    2843
                                             12 COMRAM    15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftge                                               9     3      6     392
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) ___ftdiv                                             15     9      6    2669
                                             27 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Check_Ignition
     _Disable_Port
     _Ignite_Port
     _On_Timer
   _Init
     _InitADC
     _InitAnsel
     _InitInterrupt
     _InitMiscellaneous
     _InitPort
     _InitTransmission
     _InitTris
     _InitVar

 _Isr (ROOT)
   _Evaluate_Reception
     _Check_Power
       ___ftdiv
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftge
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _Mark_Ignite
     _Test_Port
       _Transmit
   _Receive
   _Receive_Dump

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             2FF      0       0      10        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK2           100      0       0       6        0.0%
BANK2              100      0       0       7        0.0%
BITBANK1           100      0       0       9        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      3       D       4        8.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     45      4C       1       80.9%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      59       8        0.0%
DATA                 0      0      59      11        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Feb 09 21:20:23 2017

           ??_Check_Ignition 006B                           l21 0AA8                 __CFG_CP0$OFF 000000  
               __CFG_CP1$OFF 000000                          l300 07C0                          l301 07C4  
                        l302 07C8                          l311 0824                          l303 07CC  
                        l320 0844                          l304 07D0                          l321 0848  
                        l313 0828                          l305 07D4                          l314 082C  
                        l306 07D8                          l315 0830                          l316 0834  
                        l317 0838                          l318 083C                          l319 0840  
                        l296 07B4                          l298 07B8                          l299 07BC  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000                          _Isr 0008  
                        prod 000FF3                          wreg 000FE8                   _TXSTA1bits 000FAC  
              ??_Ignite_Port 006A                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 0025  
                       ?_Isr 0001                ??_Mark_Ignite 0001                 ___ftdiv@sign 002A  
                       l1602 0960                         l1702 08DA                         l1712 090A  
                       l1714 0912                         l1706 08E4                         l1670 084C  
                       l1664 07DC                         l1598 0956                         i2l53 0896  
                       i2l62 08B0                         i2l71 08C8                         i2l56 08A0  
                       i2l65 08B8                         i2l81 0A90                         i2l59 08A8  
                       i2l68 08C0                         Isr@c 0045                         _Init 09C6  
                       _main 0AA4                 ___ftpack@arg 0001                 ___ftpack@exp 0004  
                       fsr0h 000FEA                         fsr1h 000FE2                         fsr0l 000FE9  
                       fsr2h 000FDA                         fsr1l 000FE1                         indf2 000FDF  
                       fsr2l 000FD9                         btemp 004D                __CFG_BORV$190 000000  
               Transmit@port 0002                         pclat 000FFA                         prodh 000FF4  
                       prodl 000FF3                         start 0118                __CFG_IESO$OFF 000000  
               ___ftmul@cntr 001A                 ___param_bank 000010                 ___ftmul@sign 001B  
            __end_of_InitADC 09A2                _InitInterrupt 0ABC              __end_of_InitVar 097C  
                      ??_Isr 0037              __end_of_Receive 0AA4                 _BAUDCON1bits 000FB8  
                _Check_Power 033E                        ?_Init 0001         __end_of_Disable_Port 088E  
                      ?_main 0001              __end_of___ftdiv 0670              __end_of___ftmul 058A  
                      _T1CON 000FCD            _InitMiscellaneous 0AC6                        i2l251 011E  
                      i2l260 017E                        i2l252 0136                        i2l261 0196  
                      i2l335 037A                        i2l280 026E                        i2l272 020E  
                      i2l264 01AE                        i2l256 014E                        i2l281 0286  
                      i2l273 0226                        i2l265 01C6                        i2l257 0166  
                      i2l338 03D4                        i2l284 029E                        i2l276 023E  
                      i2l268 01DE                        i2l285 02B6                        i2l277 0256  
                      i2l269 01F6                        i2l288 02CE                        i2l384 0076  
                      i2l289 02E6                        i2l385 0072                        i2l394 00DC  
                      i2l619 06FE                        i2l677 063E                        _TMR1H 000FCF  
                      _TMR1L 000FCE                        _PORTA 000F80                        _PORTB 000F81  
                      _PORTC 000F82                        _PORTD 000F83                        _PORTE 000F84  
                      _TRISA 000F92                        _TRISB 000F93                        _TRISC 000F94  
                      _TRISD 000F95                        _TRISE 000F96                        u91_41 04A6  
                      u93_41 04CE                        u86_41 059A                        u88_41 05C2  
              __CFG_WRT0$OFF 000000     __end_of_InitTransmission 0A44                __CFG_WRT1$OFF 000000  
         ?_InitMiscellaneous 0001               __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000  
             __CFG_EBTR1$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000           __CFG_MCLRE$EXTMCLR 000000  
              ___ftpack@sign 0005               __pbitbssCOMRAM 0258               __CFG_BOREN$OFF 000000  
        ??_InitMiscellaneous 006A                        tablat 000FF5                        status 000FD8  
        __end_of_Ignite_Port 081E          __end_of_Mark_Ignite 0A86               ?_InitInterrupt 0001  
            __initialization 0918                 __end_of_Init 09E8                 __end_of_main 0AB0  
           __end_of_InitPort 0A70             __end_of_InitTris 0A5A             __end_of_On_Timer 0ABC  
  __end_of_InitMiscellaneous 0ACC                       ??_Init 006B   __end_of_Evaluate_Reception 0A28  
                     ??_main 006D              _slave_addressed 0259                __activetblptr 000002  
              ?_Receive_Dump 0001             __end_of_Transmit 08D4                       _ADCON0 000FC2  
                     _ADCON1 000FC1                       _ADCON2 000FC0                       _ADRESH 000FC4  
                     _CCPR1H 000FBF                       _CCPR1L 000FBE                       _ANSELA 000F38  
                     _ANSELB 000F39                       _ANSELC 000F3A                       _ANSELD 000F3B  
                     _ANSELE 000F3C             __end_of___ftpack 071E             __end_of___lbtoft 09C6  
                     i2l1410 0680                       i2l1500 04BE                       i2l1422 06CC  
                     i2l1414 068E                       i2l1424 06EA                       i2l1416 0698  
                     i2l1520 0518                       i2l1426 06F4                       i2l1418 06B6  
                     i2l1530 0540                       i2l1506 04E6                       i2l1460 05DA  
                     i2l1524 0528                       i2l1454 05B2                       i2l1550 077E  
                     i2l1534 0550                       i2l1480 0618                       i2l1546 074E  
                     i2l1722 0AA0                       i2l1556 07AA                       i2l1734 0A1A  
             __CFG_WDTEN$OFF 000000                       i2l1690 0470                       i2l1658 02FE  
                     i2l1770 00A8                       i2l1780 00C4                       i2l1776 00BC  
                     i2l1768 00A4                       _RCREG1 000FAE                       _OSCCON 000FD3  
         __size_of_InitAnsel 0020                       _SPBRG1 000FAF                       _TXREG1 000FAD  
                  ??_InitADC 006A      Check_Power@source_power 0034                    ??_InitVar 006A  
                  ??_Receive 0001                       _Marker 0060               __CFG_XINST$OFF 000000  
               _CCPTMRS0bits 000F49                       ___ftge 071E                    ??___ftdiv 0022  
                  ??___ftmul 0013                       clear_0 091E        ___ftmul@f3_as_product 0017  
         __size_of_Test_Port 0222                 __pdataCOMRAM 004C               ??_Receive_Dump 0001  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
                _Ignite_Port 07AE              __CFG_HFOFST$OFF 000000                  _Mark_Ignite 0A70  
                 __accesstop 0060      __end_of__initialization 0942              __CFG_PBADEN$OFF 000000  
                 ___ftge@ff1 0001                   ___ftge@ff2 0004              ??_InitInterrupt 006A  
              ___rparam_used 000001                   ___ftdiv@f1 001C                   ___ftdiv@f2 001F  
                 ___ftdiv@f3 0026                   ___lbtoft@c 000C                   ___ftmul@f1 000D  
                 ___ftmul@f2 0010               __pcstackCOMRAM 0001        __size_of_Disable_Port 0070  
 __size_of_InitMiscellaneous 0006            __end_of_InitAnsel 0A08                   __pbssBANK0 0060  
            __CFG_PLLCFG$OFF 000000                    ?_InitPort 0001                    ?_InitTris 0001  
                  ?_On_Timer 0001                 _Disable_Port 081E            __end_of_Test_Port 033E  
         __CFG_CCP2MX$PORTC1 000000                      ?___ftge 0001           __CFG_CCP3MX$PORTB5 000000  
                  ?_Transmit 0001                      _CCP1CON 000FBD                 ?_Check_Power 0001  
                  ?___ftpack 0001                    ?___lbtoft 0009            ?_InitTransmission 0001  
          __CFG_PRICLKEN$OFF 000000           ??_InitTransmission 006A                   ??_InitPort 006A  
                 ??_InitTris 006A                   ??_On_Timer 006A           Check_Power@DAC_out 002B  
                    _InitADC 097C                      _InitVar 0950              __CFG_PWRTEN$OFF 000000  
                    _Receive 0A96                      __Hparam 0000         __end_of_Receive_Dump 0A96  
                    __Lparam 0000              __size_of___ftge 0090                      ___ftdiv 058A  
                    ___ftmul 0496             Receive_Dump@dump 0001                   ??_Transmit 0004  
            __CFG_STVREN$OFF 000000                      __pcinit 0918                   ??___ftpack 0006  
                 ??___lbtoft 000C                      __ramtop 0300                      __ptext0 0AA4  
                    __ptext1 09C6                      __ptext2 0950                      __ptext3 0A44  
                    __ptext4 0A28                      __ptext5 0A5A                      __ptext6 0AC6  
                    __ptext7 0ABC                      __ptext8 09E8                      __ptext9 097C  
                  _T1CONbits 000FCD                 __size_of_Isr 0110      __size_of_Check_Ignition 0044  
                    _overrun 0258         end_of_initialization 0942           _Evaluate_Reception 0A08  
              __Lmediumconst 0000          ?_Evaluate_Reception 0001     Ignite_Port@ignite_number 006A  
                    postinc0 000FEE                      postinc2 000FDE           Check_Power@voltage 002E  
         Transmit@con_status 0003                    _PORTAbits 000F80                    _PORTBbits 000F81  
                  _PORTCbits 000F82                    _PORTDbits 000F83                    _PORTEbits 000F84  
       ??_Evaluate_Reception 0037                    _TRISCbits 000F94                 ?_Ignite_Port 0001  
               ?_Mark_Ignite 0001                  ___ftdiv@exp 0029                  ___ftmul@exp 0016  
             __end_of___ftge 07AE                __pidataCOMRAM 0ACC         __size_of_Check_Power 0158  
        start_initialization 0918                    _InitAnsel 09E8                  __end_of_Isr 0118  
      __size_of_Receive_Dump 0010              Check_Ignition@c 006C            __size_of_InitPort 0016  
          __size_of_InitTris 0016            __size_of_On_Timer 000C        __end_of_InitInterrupt 0AC6  
                   ??___ftge 0007                    _Test_Port 011C            __size_of_Transmit 0046  
          __size_of___ftpack 00AE            __size_of___lbtoft 0024               _Check_Ignition 08D4  
                __pbssCOMRAM 0046                   ?_InitAnsel 0001                __pcstackBANK0 006A  
               _Receive_Dump 0A86                     ?_InitADC 0001                     ?_InitVar 0001  
                   ?_Receive 0001    __size_of_InitTransmission 001C                    __pintcode 0008  
                 ?_Test_Port 0001                     ?___ftdiv 001C                     ?___ftmul 000D  
     __end_of_Check_Ignition 0918         __size_of_Ignite_Port 0070         __size_of_Mark_Ignite 0016  
                   _PIE1bits 000F9D                     _PIR1bits 000F9E             __CFG_WDTPS$32768 000000  
          Check_Power@supply 0031                     _VREFCON0 000F42                     _VREFCON1 000F41  
                 _ADCON0bits 000FC2              ?_Check_Ignition 0001                     InitVar@c 006A  
                ??_InitAnsel 006A              _receive_counter 004A                     _InitPort 0A5A  
                   _InitTris 0A44                     _On_Timer 0AB0            Transmit@operation 0001  
           __size_of_InitADC 0026                     __Hrparam 0000             __size_of_InitVar 002C  
           __size_of_Receive 000E                     __Lrparam 0000            __CFG_P2BMX$PORTD2 000000  
                ??_Test_Port 0005                     _Transmit 088E             __size_of___ftdiv 00E6  
           __size_of___ftmul 00F4                     ___ftpack 0670                     ___lbtoft 09A2  
__size_of_Evaluate_Reception 0020                     __ptext10 08D4                     __ptext11 0AB0  
                   __ptext20 0A70                     __ptext12 07AE                     __ptext21 033E  
                   __ptext13 081E                     __ptext22 09A2                     __ptext23 0496  
                   __ptext15 0A86                     __ptext24 071E                     __ptext16 0A96  
                   __ptext25 058A                     __ptext17 0A08                     __ptext26 0670  
                   __ptext18 011C                     __ptext19 088E                __size_of_Init 0022  
              ?_Disable_Port 0001                __size_of_main 000C                     _received 0046  
                   _p_status 004C             _InitTransmission 0A28                     int$flags 004D  
              ??_Check_Power 002B             Transmit@receiver 0004   Disable_Port@disable_number 006A  
                 _INTCONbits 000FF2                     intlevel2 0000               ??_Disable_Port 006A  
               _VREFCON2bits 000F40                   _RCSTA1bits 000FAB          __end_of_Check_Power 0496  
          __CFG_T3CMX$PORTC0 000000       __size_of_InitInterrupt 000A            __CFG_FOSC$INTIO67 000000  
