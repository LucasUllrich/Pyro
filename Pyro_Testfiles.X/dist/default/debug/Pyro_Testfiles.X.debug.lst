

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Nov 27 11:55:01 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F23K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    11  0000                     
    12                           ; #config settings
    13                           
    14                           	psect	cinit
    15  001F96                     __pcinit:
    16                           	opt stack 0
    17  001F96                     start_initialization:
    18                           	opt stack 0
    19  001F96                     __initialization:
    20                           	opt stack 0
    21  001F96                     end_of_initialization:
    22                           	opt stack 0
    23  001F96                     __end_of__initialization:
    24                           	opt stack 0
    25  001F96  0E00               	movlw	low (__Lmediumconst shr (0+16))
    26  001F98  6EF8               	movwf	tblptru,c
    27  001F9A  0100               	movlb	0
    28  001F9C  EFD0  F00F         	goto	_main	;jump to C main() function
    29                           tblptru	equ	0xFF8
    30                           
    31                           	psect	cstackCOMRAM
    32  000001                     __pcstackCOMRAM:
    33                           	opt stack 0
    34  000001                     function@pointer:
    35                           	opt stack 0
    36                           
    37                           ; 2 bytes @ 0x0
    38  000001                     	ds	2
    39  000003                     function@var:
    40                           	opt stack 0
    41                           
    42                           ; 1 bytes @ 0x2
    43  000003                     	ds	1
    44  000004                     function@counter:
    45                           	opt stack 0
    46                           
    47                           ; 1 bytes @ 0x3
    48  000004                     	ds	1
    49  000005                     main@test:
    50                           	opt stack 0
    51                           
    52                           ; 3 bytes @ 0x4
    53  000005                     	ds	3
    54                           tblptru	equ	0xFF8
    55                           
    56 ;;
    57 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    58 ;;
    59 ;; *************** function _main *****************
    60 ;; Defined at:
    61 ;;		line 30 in file "main_test1.c"
    62 ;; Parameters:    Size  Location     Type
    63 ;;		None
    64 ;; Auto vars:     Size  Location     Type
    65 ;;  test            3    4[COMRAM] unsigned char [3]
    66 ;; Return value:  Size  Location     Type
    67 ;;		None               void
    68 ;; Registers used:
    69 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    70 ;; Tracked objects:
    71 ;;		On entry : 0/0
    72 ;;		On exit  : 0/0
    73 ;;		Unchanged: 0/0
    74 ;; Data sizes:     COMRAM   BANK0   BANK1
    75 ;;      Params:         0       0       0
    76 ;;      Locals:         3       0       0
    77 ;;      Temps:          0       0       0
    78 ;;      Totals:         3       0       0
    79 ;;Total ram usage:        3 bytes
    80 ;; Hardware stack levels required when called:    1
    81 ;; This function calls:
    82 ;;		_function
    83 ;; This function is called by:
    84 ;;		Startup code after reset
    85 ;; This function uses a non-reentrant model
    86 ;;
    87                           
    88                           	psect	text0
    89  001FA0                     __ptext0:
    90                           	opt stack 0
    91  001FA0                     _main:
    92                           	opt stack 30
    93                           
    94                           ;main_test1.c: 31: unsigned char test[3];
    95                           ;main_test1.c: 32: test[0] = '1';
    96                           
    97                           ;incstack = 0
    98  001FA0  0E31               	movlw	49
    99  001FA2  6E05               	movwf	main@test,c
   100                           
   101                           ;main_test1.c: 33: test[1] = '2';
   102  001FA4  0E32               	movlw	50
   103  001FA6  6E06               	movwf	main@test+1,c
   104                           
   105                           ;main_test1.c: 34: test[2] = '3';
   106  001FA8  0E33               	movlw	51
   107  001FAA  6E07               	movwf	main@test+2,c
   108                           
   109                           ;main_test1.c: 35: function(test);
   110  001FAC  0E05               	movlw	low main@test
   111  001FAE  6E01               	movwf	function@pointer,c
   112  001FB0  0E00               	movlw	high main@test
   113  001FB2  6E02               	movwf	function@pointer+1,c
   114  001FB4  ECDE  F00F         	call	_function	;wreg free
   115                           
   116                           ;main_test1.c: 36: return;
   117  001FB8  EF00  F000         	goto	start
   118  001FBC                     __end_of_main:
   119                           	opt stack 0
   120                           tblptru	equ	0xFF8
   121                           
   122 ;; *************** function _function *****************
   123 ;; Defined at:
   124 ;;		line 11 in file "main_test1.c"
   125 ;; Parameters:    Size  Location     Type
   126 ;;  pointer         2    0[COMRAM] PTR const unsigned char 
   127 ;;		 -> main@test(3), 
   128 ;; Auto vars:     Size  Location     Type
   129 ;;  counter         1    3[COMRAM] unsigned char 
   130 ;;  var             1    2[COMRAM] unsigned char 
   131 ;; Return value:  Size  Location     Type
   132 ;;		None               void
   133 ;; Registers used:
   134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   135 ;; Tracked objects:
   136 ;;		On entry : 0/0
   137 ;;		On exit  : 0/0
   138 ;;		Unchanged: 0/0
   139 ;; Data sizes:     COMRAM   BANK0   BANK1
   140 ;;      Params:         2       0       0
   141 ;;      Locals:         2       0       0
   142 ;;      Temps:          0       0       0
   143 ;;      Totals:         4       0       0
   144 ;;Total ram usage:        4 bytes
   145 ;; Hardware stack levels used:    1
   146 ;; This function calls:
   147 ;;		Nothing
   148 ;; This function is called by:
   149 ;;		_main
   150 ;; This function uses a non-reentrant model
   151 ;;
   152                           
   153                           	psect	text1
   154  001FBC                     __ptext1:
   155                           	opt stack 0
   156  001FBC                     _function:
   157                           	opt stack 30
   158                           
   159                           ;main_test1.c: 12: unsigned char var;
   160                           ;main_test1.c: 13: for(unsigned char counter = 0; counter < 5; counter++) {
   161                           
   162                           ;incstack = 0
   163  001FBC  0E00               	movlw	0
   164  001FBE  6E04               	movwf	function@counter,c
   165  001FC0                     l660:
   166  001FC0  0E04               	movlw	4
   167  001FC2  6404               	cpfsgt	function@counter,c
   168  001FC4  D006               	goto	l670
   169  001FC6  D015               	goto	l676
   170  001FC8                     l664:
   171                           
   172                           ;main_test1.c: 16: var = 'A';
   173  001FC8  0E41               	movlw	65
   174  001FCA  D001               	goto	L1
   175  001FCC                     l666:
   176                           
   177                           ;main_test1.c: 19: var = 'X';
   178  001FCC  0E58               	movlw	88
   179  001FCE                     L1:
   180  001FCE  6E03               	movwf	function@var,c
   181                           
   182                           ;main_test1.c: 21: }
   183                           
   184                           ;main_test1.c: 20: break;
   185  001FD0  D00D               	goto	l9
   186  001FD2                     l670:
   187  001FD2  5004               	movf	function@counter,w,c
   188  001FD4  0D01               	mullw	1
   189  001FD6  50F3               	movf	prodl,w,c
   190  001FD8  2401               	addwf	function@pointer,w,c
   191  001FDA  6ED9               	movwf	fsr2l,c
   192  001FDC  50F4               	movf	prodh,w,c
   193  001FDE  2002               	addwfc	function@pointer+1,w,c
   194  001FE0  6EDA               	movwf	fsr2h,c
   195  001FE2  50DF               	movf	indf2,w,c
   196                           
   197                           ; Switch size 1, requested type "space"
   198                           ; Number of cases is 1, Range of values is 49 to 49
   199                           ; switch strategies available:
   200                           ; Name         Instructions Cycles
   201                           ; simple_byte            4     3 (average)
   202                           ;	Chosen strategy is simple_byte
   203  001FE4  0A31               	xorlw	49	; case 49
   204  001FE6  B4D8               	btfsc	status,2,c
   205  001FE8  D7EF               	goto	l664
   206  001FEA  D7F0               	goto	l666
   207  001FEC                     l9:
   208                           
   209                           ;main_test1.c: 22: __nop();
   210  001FEC  F000               	nop	
   211  001FEE  2A04               	incf	function@counter,f,c
   212  001FF0  D7E7               	goto	l660
   213  001FF2                     l676:
   214                           
   215                           ;main_test1.c: 23: }
   216                           ;main_test1.c: 24: var = 1;
   217  001FF2  0E01               	movlw	1
   218  001FF4  6E03               	movwf	function@var,c
   219                           
   220                           ;main_test1.c: 25: __nop();
   221  001FF6  F000               	nop	
   222                           
   223                           ;main_test1.c: 26: var = '\0';
   224  001FF8  0E00               	movlw	0
   225  001FFA  6E03               	movwf	function@var,c
   226                           
   227                           ;main_test1.c: 27: __nop();
   228  001FFC  F000               	nop	
   229  001FFE  0012               	return		;funcret
   230  002000                     __end_of_function:
   231                           	opt stack 0
   232  0000                     tblptru	equ	0xFF8
   233                           prodh	equ	0xFF4
   234                           prodl	equ	0xFF3
   235                           indf2	equ	0xFDF
   236                           fsr2h	equ	0xFDA
   237                           fsr2l	equ	0xFD9
   238                           status	equ	0xFD8
   239                           tblptru	equ	0xFF8
   240                           prodh	equ	0xFF4
   241                           prodl	equ	0xFF3
   242                           indf2	equ	0xFDF
   243                           fsr2h	equ	0xFDA
   244                           fsr2l	equ	0xFD9
   245                           status	equ	0xFD8
   246                           
   247                           	psect	rparam
   248  0000                     tblptru	equ	0xFF8
   249                           prodh	equ	0xFF4
   250                           prodl	equ	0xFF3
   251                           indf2	equ	0xFDF
   252                           fsr2h	equ	0xFDA
   253                           fsr2l	equ	0xFD9
   254                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    function@pointer	PTR const unsigned char  size(2) Largest target is 3
		 -> main@test(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _main->_function

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     231
                                              4 COMRAM     3     3      0
                           _function
 ---------------------------------------------------------------------------------
 (1) _function                                             4     2      2     158
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _function

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BANK1              100      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BIGRAM             1FF      0       0       8        0.0%
DATA                 0      0       0       9        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Nov 27 11:55:01 2016

                      l9 1FEC          function@counter 0004          function@pointer 0001  
                    l660 1FC0                      l670 1FD2                      l664 1FC8  
                    l666 1FCC                      l676 1FF2                     _main 1FA0  
                   indf2 000FDF                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000010  
                  ?_main 0001                    status 000FD8          __initialization 1F96  
           __end_of_main 1FBC                   ??_main 0005            __activetblptr 000002  
       __end_of_function 2000                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 1F96              function@var 0003            ___rparam_used 000001  
         __pcstackCOMRAM 0001                ?_function 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 1F96                  __ramtop 0200  
                __ptext0 1FA0                  __ptext1 1FBC     end_of_initialization 1F96  
          __Lmediumconst 0000               ??_function 0003      start_initialization 1F96  
      __size_of_function 0044                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 001C                 _function 1FBC                 main@test 0005  
